(function () {
  const e = document.createElement("link").relList;
  if (e && e.supports && e.supports("modulepreload")) return;
  for (const a of document.querySelectorAll('link[rel="modulepreload"]')) r(a);
  new MutationObserver((a) => {
    for (const s of a)
      if (s.type === "childList")
        for (const i of s.addedNodes)
          i.tagName === "LINK" && i.rel === "modulepreload" && r(i);
  }).observe(document, { childList: !0, subtree: !0 });
  function n(a) {
    const s = {};
    return (
      a.integrity && (s.integrity = a.integrity),
      a.referrerPolicy && (s.referrerPolicy = a.referrerPolicy),
      a.crossOrigin === "use-credentials"
        ? (s.credentials = "include")
        : a.crossOrigin === "anonymous"
        ? (s.credentials = "omit")
        : (s.credentials = "same-origin"),
      s
    );
  }
  function r(a) {
    if (a.ep) return;
    a.ep = !0;
    const s = n(a);
    fetch(a.href, s);
  }
})();
var PSe = "Invariant failed";
function rn(t, e) {
  if (!t) throw new Error(PSe);
}
const ISe = Symbol.for("preloadedModulesKey");
function vi(t) {
  rn(!t.startsWith(".")), rn(typeof window < "u");
  const e = window[ISe].get(t);
  return rn(e), e;
}
const Ql = vi("fs/promises"),
  {
    access: u_t,
    unlink: l_t,
    readdir: c_t,
    writeFile: d_t,
    readFile: p_t,
    mkdir: CSe,
  } = Ql,
  rR = vi("os"),
  { arch: ASe, homedir: h_t, release: f_t, platform: m_t, constants: S_t } = rR,
  OSe = vi("@electron/remote"),
  {
    app: rT,
    require: x1,
    inAppPurchase: HSe,
    getCurrentWindow: NSe,
    BrowserWindow: FV,
  } = OSe;
function ii(t) {
  for (
    var e = arguments.length, n = Array(e > 1 ? e - 1 : 0), r = 1;
    r < e;
    r++
  )
    n[r - 1] = arguments[r];
  throw Error(
    "[Immer] minified error nr: " +
      t +
      (n.length
        ? " " +
          n
            .map(function (a) {
              return "'" + a + "'";
            })
            .join(",")
        : "") +
      ". Find the full error at: https://bit.ly/3cXEKWf"
  );
}
function mu(t) {
  return !!t && !!t[hn];
}
function Ki(t) {
  var e;
  return (
    !!t &&
    ((function (n) {
      if (!n || typeof n != "object") return !1;
      var r = Object.getPrototypeOf(n);
      if (r === null) return !0;
      var a = Object.hasOwnProperty.call(r, "constructor") && r.constructor;
      return (
        a === Object ||
        (typeof a == "function" && Function.toString.call(a) === USe)
      );
    })(t) ||
      Array.isArray(t) ||
      !!t[M1] ||
      !!(!((e = t.constructor) === null || e === void 0) && e[M1]) ||
      aR(t) ||
      iR(t))
  );
}
function RSe(t) {
  return mu(t) || ii(23, t), t[hn].t;
}
function Gc(t, e, n) {
  n === void 0 && (n = !1),
    cm(t) === 0
      ? (n ? Object.keys : Qh)(t).forEach(function (r) {
          (n && typeof r == "symbol") || e(r, t[r], t);
        })
      : t.forEach(function (r, a) {
          return e(a, r, t);
        });
}
function cm(t) {
  var e = t[hn];
  return e
    ? e.i > 3
      ? e.i - 4
      : e.i
    : Array.isArray(t)
    ? 1
    : aR(t)
    ? 2
    : iR(t)
    ? 3
    : 0;
}
function Xh(t, e) {
  return cm(t) === 2 ? t.has(e) : Object.prototype.hasOwnProperty.call(t, e);
}
function kSe(t, e) {
  return cm(t) === 2 ? t.get(e) : t[e];
}
function UV(t, e, n) {
  var r = cm(t);
  r === 2 ? t.set(e, n) : r === 3 ? t.add(n) : (t[e] = n);
}
function KV(t, e) {
  return t === e ? t !== 0 || 1 / t == 1 / e : t != t && e != e;
}
function aR(t) {
  return GSe && t instanceof Map;
}
function iR(t) {
  return FSe && t instanceof Set;
}
function Tr(t) {
  return t.o || t.t;
}
function oR(t) {
  if (Array.isArray(t)) return Array.prototype.slice.call(t);
  var e = jV(t);
  delete e[hn];
  for (var n = Qh(e), r = 0; r < n.length; r++) {
    var a = n[r],
      s = e[a];
    s.writable === !1 && ((s.writable = !0), (s.configurable = !0)),
      (s.get || s.set) &&
        (e[a] = {
          configurable: !0,
          writable: !0,
          enumerable: s.enumerable,
          value: t[a],
        });
  }
  return Object.create(Object.getPrototypeOf(t), e);
}
function uR(t, e) {
  return (
    e === void 0 && (e = !1),
    lR(t) ||
      mu(t) ||
      !Ki(t) ||
      (cm(t) > 1 && (t.set = t.add = t.clear = t.delete = xSe),
      Object.freeze(t),
      e &&
        Gc(
          t,
          function (n, r) {
            return uR(r, !0);
          },
          !0
        )),
    t
  );
}
function xSe() {
  ii(2);
}
function lR(t) {
  return t == null || typeof t != "object" || Object.isFrozen(t);
}
function au(t) {
  var e = D1[t];
  return e || ii(18, t), e;
}
function BV(t, e) {
  D1[t] || (D1[t] = e);
}
function tg() {
  return sg;
}
function AC(t, e) {
  e && (au("Patches"), (t.u = []), (t.s = []), (t.v = e));
}
function aT(t) {
  L1(t), t.p.forEach(LSe), (t.p = null);
}
function L1(t) {
  t === sg && (sg = t.l);
}
function KF(t) {
  return (sg = { p: [], l: sg, h: t, m: !0, _: 0 });
}
function LSe(t) {
  var e = t[hn];
  e.i === 0 || e.i === 1 ? e.j() : (e.g = !0);
}
function OC(t, e) {
  e._ = e.p.length;
  var n = e.p[0],
    r = t !== void 0 && t !== n;
  return (
    e.h.O || au("ES5").S(e, t, r),
    r
      ? (n[hn].P && (aT(e), ii(4)),
        Ki(t) && ((t = iT(e, t)), e.l || oT(e, t)),
        e.u && au("Patches").M(n[hn].t, t, e.u, e.s))
      : (t = iT(e, n, [])),
    aT(e),
    e.u && e.v(e.u, e.s),
    t !== VV ? t : void 0
  );
}
function iT(t, e, n) {
  if (lR(e)) return e;
  var r = e[hn];
  if (!r)
    return (
      Gc(
        e,
        function (o, u) {
          return BF(t, r, e, o, u, n);
        },
        !0
      ),
      e
    );
  if (r.A !== t) return e;
  if (!r.P) return oT(t, r.t, !0), r.t;
  if (!r.I) {
    (r.I = !0), r.A._--;
    var a = r.i === 4 || r.i === 5 ? (r.o = oR(r.k)) : r.o,
      s = a,
      i = !1;
    r.i === 3 && ((s = new Set(a)), a.clear(), (i = !0)),
      Gc(s, function (o, u) {
        return BF(t, r, a, o, u, n, i);
      }),
      oT(t, a, !1),
      n && t.u && au("Patches").N(r, n, t.u, t.s);
  }
  return r.o;
}
function BF(t, e, n, r, a, s, i) {
  if (mu(a)) {
    var o = iT(t, a, s && e && e.i !== 3 && !Xh(e.R, r) ? s.concat(r) : void 0);
    if ((UV(n, r, o), !mu(o))) return;
    t.m = !1;
  } else i && n.add(a);
  if (Ki(a) && !lR(a)) {
    if (!t.h.D && t._ < 1) return;
    iT(t, a), (e && e.A.l) || oT(t, a);
  }
}
function oT(t, e, n) {
  n === void 0 && (n = !1), !t.l && t.h.D && t.m && uR(e, n);
}
function HC(t, e) {
  var n = t[hn];
  return (n ? Tr(n) : t)[e];
}
function VF(t, e) {
  if (e in t)
    for (var n = Object.getPrototypeOf(t); n; ) {
      var r = Object.getOwnPropertyDescriptor(n, e);
      if (r) return r;
      n = Object.getPrototypeOf(n);
    }
}
function La(t) {
  t.P || ((t.P = !0), t.l && La(t.l));
}
function NC(t) {
  t.o || (t.o = oR(t.t));
}
function ng(t, e, n) {
  var r = aR(e)
    ? au("MapSet").F(e, n)
    : iR(e)
    ? au("MapSet").T(e, n)
    : t.O
    ? (function (a, s) {
        var i = Array.isArray(a),
          o = {
            i: i ? 1 : 0,
            A: s ? s.A : tg(),
            P: !1,
            I: !1,
            R: {},
            l: s,
            t: a,
            k: null,
            o: null,
            j: null,
            C: !1,
          },
          u = o,
          l = rg;
        i && ((u = [o]), (l = qS));
        var c = Proxy.revocable(u, l),
          d = c.revoke,
          p = c.proxy;
        return (o.k = p), (o.j = d), p;
      })(e, n)
    : au("ES5").J(e, n);
  return (n ? n.A : tg()).p.push(r), r;
}
function Xl(t) {
  return (
    mu(t) || ii(22, t),
    (function e(n) {
      if (!Ki(n)) return n;
      var r,
        a = n[hn],
        s = cm(n);
      if (a) {
        if (!a.P && (a.i < 4 || !au("ES5").K(a))) return a.t;
        (a.I = !0), (r = jF(n, s)), (a.I = !1);
      } else r = jF(n, s);
      return (
        Gc(r, function (i, o) {
          (a && kSe(a.t, i) === o) || UV(r, i, e(o));
        }),
        s === 3 ? new Set(r) : r
      );
    })(t)
  );
}
function jF(t, e) {
  switch (e) {
    case 2:
      return new Map(t);
    case 3:
      return Array.from(t);
  }
  return oR(t);
}
function MSe() {
  function t(s, i) {
    var o = a[s];
    return (
      o
        ? (o.enumerable = i)
        : (a[s] = o =
            {
              configurable: !0,
              enumerable: i,
              get: function () {
                var u = this[hn];
                return rg.get(u, s);
              },
              set: function (u) {
                var l = this[hn];
                rg.set(l, s, u);
              },
            }),
      o
    );
  }
  function e(s) {
    for (var i = s.length - 1; i >= 0; i--) {
      var o = s[i][hn];
      if (!o.P)
        switch (o.i) {
          case 5:
            r(o) && La(o);
            break;
          case 4:
            n(o) && La(o);
        }
    }
  }
  function n(s) {
    for (var i = s.t, o = s.k, u = Qh(o), l = u.length - 1; l >= 0; l--) {
      var c = u[l];
      if (c !== hn) {
        var d = i[c];
        if (d === void 0 && !Xh(i, c)) return !0;
        var p = o[c],
          m = p && p[hn];
        if (m ? m.t !== d : !KV(p, d)) return !0;
      }
    }
    var y = !!i[hn];
    return u.length !== Qh(i).length + (y ? 0 : 1);
  }
  function r(s) {
    var i = s.k;
    if (i.length !== s.t.length) return !0;
    var o = Object.getOwnPropertyDescriptor(i, i.length - 1);
    if (o && !o.get) return !0;
    for (var u = 0; u < i.length; u++) if (!i.hasOwnProperty(u)) return !0;
    return !1;
  }
  var a = {};
  BV("ES5", {
    J: function (s, i) {
      var o = Array.isArray(s),
        u = (function (c, d) {
          if (c) {
            for (var p = Array(d.length), m = 0; m < d.length; m++)
              Object.defineProperty(p, "" + m, t(m, !0));
            return p;
          }
          var y = jV(d);
          delete y[hn];
          for (var I = Qh(y), O = 0; O < I.length; O++) {
            var g = I[O];
            y[g] = t(g, c || !!y[g].enumerable);
          }
          return Object.create(Object.getPrototypeOf(d), y);
        })(o, s),
        l = {
          i: o ? 5 : 4,
          A: i ? i.A : tg(),
          P: !1,
          I: !1,
          R: {},
          l: i,
          t: s,
          k: u,
          o: null,
          g: !1,
          C: !1,
        };
      return Object.defineProperty(u, hn, { value: l, writable: !0 }), u;
    },
    S: function (s, i, o) {
      o
        ? mu(i) && i[hn].A === s && e(s.p)
        : (s.u &&
            (function u(l) {
              if (l && typeof l == "object") {
                var c = l[hn];
                if (c) {
                  var d = c.t,
                    p = c.k,
                    m = c.R,
                    y = c.i;
                  if (y === 4)
                    Gc(p, function (H) {
                      H !== hn &&
                        (d[H] !== void 0 || Xh(d, H)
                          ? m[H] || u(p[H])
                          : ((m[H] = !0), La(c)));
                    }),
                      Gc(d, function (H) {
                        p[H] !== void 0 || Xh(p, H) || ((m[H] = !1), La(c));
                      });
                  else if (y === 5) {
                    if ((r(c) && (La(c), (m.length = !0)), p.length < d.length))
                      for (var I = p.length; I < d.length; I++) m[I] = !1;
                    else for (var O = d.length; O < p.length; O++) m[O] = !0;
                    for (
                      var g = Math.min(p.length, d.length), C = 0;
                      C < g;
                      C++
                    )
                      p.hasOwnProperty(C) || (m[C] = !0),
                        m[C] === void 0 && u(p[C]);
                  }
                }
              }
            })(s.p[0]),
          e(s.p));
    },
    K: function (s) {
      return s.i === 4 ? n(s) : r(s);
    },
  });
}
function DSe() {
  function t(o, u) {
    function l() {
      this.constructor = o;
    }
    a(o, u), (o.prototype = ((l.prototype = u.prototype), new l()));
  }
  function e(o) {
    o.o || ((o.R = new Map()), (o.o = new Map(o.t)));
  }
  function n(o) {
    o.o ||
      ((o.o = new Set()),
      o.t.forEach(function (u) {
        if (Ki(u)) {
          var l = ng(o.A.h, u, o);
          o.p.set(u, l), o.o.add(l);
        } else o.o.add(u);
      }));
  }
  function r(o) {
    o.g && ii(3, JSON.stringify(Tr(o)));
  }
  var a = function (o, u) {
      return (a =
        Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array &&
          function (l, c) {
            l.__proto__ = c;
          }) ||
        function (l, c) {
          for (var d in c) c.hasOwnProperty(d) && (l[d] = c[d]);
        })(o, u);
    },
    s = (function () {
      function o(l, c) {
        return (
          (this[hn] = {
            i: 2,
            l: c,
            A: c ? c.A : tg(),
            P: !1,
            I: !1,
            o: void 0,
            R: void 0,
            t: l,
            k: this,
            C: !1,
            g: !1,
          }),
          this
        );
      }
      t(o, Map);
      var u = o.prototype;
      return (
        Object.defineProperty(u, "size", {
          get: function () {
            return Tr(this[hn]).size;
          },
        }),
        (u.has = function (l) {
          return Tr(this[hn]).has(l);
        }),
        (u.set = function (l, c) {
          var d = this[hn];
          return (
            r(d),
            (Tr(d).has(l) && Tr(d).get(l) === c) ||
              (e(d), La(d), d.R.set(l, !0), d.o.set(l, c), d.R.set(l, !0)),
            this
          );
        }),
        (u.delete = function (l) {
          if (!this.has(l)) return !1;
          var c = this[hn];
          return (
            r(c),
            e(c),
            La(c),
            c.t.has(l) ? c.R.set(l, !1) : c.R.delete(l),
            c.o.delete(l),
            !0
          );
        }),
        (u.clear = function () {
          var l = this[hn];
          r(l),
            Tr(l).size &&
              (e(l),
              La(l),
              (l.R = new Map()),
              Gc(l.t, function (c) {
                l.R.set(c, !1);
              }),
              l.o.clear());
        }),
        (u.forEach = function (l, c) {
          var d = this;
          Tr(this[hn]).forEach(function (p, m) {
            l.call(c, d.get(m), m, d);
          });
        }),
        (u.get = function (l) {
          var c = this[hn];
          r(c);
          var d = Tr(c).get(l);
          if (c.I || !Ki(d) || d !== c.t.get(l)) return d;
          var p = ng(c.A.h, d, c);
          return e(c), c.o.set(l, p), p;
        }),
        (u.keys = function () {
          return Tr(this[hn]).keys();
        }),
        (u.values = function () {
          var l,
            c = this,
            d = this.keys();
          return (
            ((l = {})[D_] = function () {
              return c.values();
            }),
            (l.next = function () {
              var p = d.next();
              return p.done ? p : { done: !1, value: c.get(p.value) };
            }),
            l
          );
        }),
        (u.entries = function () {
          var l,
            c = this,
            d = this.keys();
          return (
            ((l = {})[D_] = function () {
              return c.entries();
            }),
            (l.next = function () {
              var p = d.next();
              if (p.done) return p;
              var m = c.get(p.value);
              return { done: !1, value: [p.value, m] };
            }),
            l
          );
        }),
        (u[D_] = function () {
          return this.entries();
        }),
        o
      );
    })(),
    i = (function () {
      function o(l, c) {
        return (
          (this[hn] = {
            i: 3,
            l: c,
            A: c ? c.A : tg(),
            P: !1,
            I: !1,
            o: void 0,
            t: l,
            k: this,
            p: new Map(),
            g: !1,
            C: !1,
          }),
          this
        );
      }
      t(o, Set);
      var u = o.prototype;
      return (
        Object.defineProperty(u, "size", {
          get: function () {
            return Tr(this[hn]).size;
          },
        }),
        (u.has = function (l) {
          var c = this[hn];
          return (
            r(c),
            c.o
              ? !!c.o.has(l) || !(!c.p.has(l) || !c.o.has(c.p.get(l)))
              : c.t.has(l)
          );
        }),
        (u.add = function (l) {
          var c = this[hn];
          return r(c), this.has(l) || (n(c), La(c), c.o.add(l)), this;
        }),
        (u.delete = function (l) {
          if (!this.has(l)) return !1;
          var c = this[hn];
          return (
            r(c),
            n(c),
            La(c),
            c.o.delete(l) || (!!c.p.has(l) && c.o.delete(c.p.get(l)))
          );
        }),
        (u.clear = function () {
          var l = this[hn];
          r(l), Tr(l).size && (n(l), La(l), l.o.clear());
        }),
        (u.values = function () {
          var l = this[hn];
          return r(l), n(l), l.o.values();
        }),
        (u.entries = function () {
          var l = this[hn];
          return r(l), n(l), l.o.entries();
        }),
        (u.keys = function () {
          return this.values();
        }),
        (u[D_] = function () {
          return this.values();
        }),
        (u.forEach = function (l, c) {
          for (var d = this.values(), p = d.next(); !p.done; )
            l.call(c, p.value, p.value, this), (p = d.next());
        }),
        o
      );
    })();
  BV("MapSet", {
    F: function (o, u) {
      return new s(o, u);
    },
    T: function (o, u) {
      return new i(o, u);
    },
  });
}
var zF,
  sg,
  cR = typeof Symbol < "u" && typeof Symbol("x") == "symbol",
  GSe = typeof Map < "u",
  FSe = typeof Set < "u",
  $F = typeof Proxy < "u" && Proxy.revocable !== void 0 && typeof Reflect < "u",
  VV = cR
    ? Symbol.for("immer-nothing")
    : (((zF = {})["immer-nothing"] = !0), zF),
  M1 = cR ? Symbol.for("immer-draftable") : "__$immer_draftable",
  hn = cR ? Symbol.for("immer-state") : "__$immer_state",
  D_ = (typeof Symbol < "u" && Symbol.iterator) || "@@iterator",
  USe = "" + Object.prototype.constructor,
  Qh =
    typeof Reflect < "u" && Reflect.ownKeys
      ? Reflect.ownKeys
      : Object.getOwnPropertySymbols !== void 0
      ? function (t) {
          return Object.getOwnPropertyNames(t).concat(
            Object.getOwnPropertySymbols(t)
          );
        }
      : Object.getOwnPropertyNames,
  jV =
    Object.getOwnPropertyDescriptors ||
    function (t) {
      var e = {};
      return (
        Qh(t).forEach(function (n) {
          e[n] = Object.getOwnPropertyDescriptor(t, n);
        }),
        e
      );
    },
  D1 = {},
  rg = {
    get: function (t, e) {
      if (e === hn) return t;
      var n = Tr(t);
      if (!Xh(n, e))
        return (function (a, s, i) {
          var o,
            u = VF(s, i);
          return u
            ? "value" in u
              ? u.value
              : (o = u.get) === null || o === void 0
              ? void 0
              : o.call(a.k)
            : void 0;
        })(t, n, e);
      var r = n[e];
      return t.I || !Ki(r)
        ? r
        : r === HC(t.t, e)
        ? (NC(t), (t.o[e] = ng(t.A.h, r, t)))
        : r;
    },
    has: function (t, e) {
      return e in Tr(t);
    },
    ownKeys: function (t) {
      return Reflect.ownKeys(Tr(t));
    },
    set: function (t, e, n) {
      var r = VF(Tr(t), e);
      if (r != null && r.set) return r.set.call(t.k, n), !0;
      if (!t.P) {
        var a = HC(Tr(t), e),
          s = a == null ? void 0 : a[hn];
        if (s && s.t === n) return (t.o[e] = n), (t.R[e] = !1), !0;
        if (KV(n, a) && (n !== void 0 || Xh(t.t, e))) return !0;
        NC(t), La(t);
      }
      return (
        (t.o[e] === n && (n !== void 0 || e in t.o)) ||
          (Number.isNaN(n) && Number.isNaN(t.o[e])) ||
          ((t.o[e] = n), (t.R[e] = !0)),
        !0
      );
    },
    deleteProperty: function (t, e) {
      return (
        HC(t.t, e) !== void 0 || e in t.t
          ? ((t.R[e] = !1), NC(t), La(t))
          : delete t.R[e],
        t.o && delete t.o[e],
        !0
      );
    },
    getOwnPropertyDescriptor: function (t, e) {
      var n = Tr(t),
        r = Reflect.getOwnPropertyDescriptor(n, e);
      return (
        r && {
          writable: !0,
          configurable: t.i !== 1 || e !== "length",
          enumerable: r.enumerable,
          value: n[e],
        }
      );
    },
    defineProperty: function () {
      ii(11);
    },
    getPrototypeOf: function (t) {
      return Object.getPrototypeOf(t.t);
    },
    setPrototypeOf: function () {
      ii(12);
    },
  },
  qS = {};
Gc(rg, function (t, e) {
  qS[t] = function () {
    return (arguments[0] = arguments[0][0]), e.apply(this, arguments);
  };
}),
  (qS.deleteProperty = function (t, e) {
    return qS.set.call(this, t, e, void 0);
  }),
  (qS.set = function (t, e, n) {
    return rg.set.call(this, t[0], e, n, t[0]);
  });
var KSe = (function () {
    function t(n) {
      var r = this;
      (this.O = $F),
        (this.D = !0),
        (this.produce = function (a, s, i) {
          if (typeof a == "function" && typeof s != "function") {
            var o = s;
            s = a;
            var u = r;
            return function (I) {
              var O = this;
              I === void 0 && (I = o);
              for (
                var g = arguments.length, C = Array(g > 1 ? g - 1 : 0), H = 1;
                H < g;
                H++
              )
                C[H - 1] = arguments[H];
              return u.produce(I, function (B) {
                var he;
                return (he = s).call.apply(he, [O, B].concat(C));
              });
            };
          }
          var l;
          if (
            (typeof s != "function" && ii(6),
            i !== void 0 && typeof i != "function" && ii(7),
            Ki(a))
          ) {
            var c = KF(r),
              d = ng(r, a, void 0),
              p = !0;
            try {
              (l = s(d)), (p = !1);
            } finally {
              p ? aT(c) : L1(c);
            }
            return typeof Promise < "u" && l instanceof Promise
              ? l.then(
                  function (I) {
                    return AC(c, i), OC(I, c);
                  },
                  function (I) {
                    throw (aT(c), I);
                  }
                )
              : (AC(c, i), OC(l, c));
          }
          if (!a || typeof a != "object") {
            if (
              ((l = s(a)) === void 0 && (l = a),
              l === VV && (l = void 0),
              r.D && uR(l, !0),
              i)
            ) {
              var m = [],
                y = [];
              au("Patches").M(a, l, m, y), i(m, y);
            }
            return l;
          }
          ii(21, a);
        }),
        (this.produceWithPatches = function (a, s) {
          if (typeof a == "function")
            return function (l) {
              for (
                var c = arguments.length, d = Array(c > 1 ? c - 1 : 0), p = 1;
                p < c;
                p++
              )
                d[p - 1] = arguments[p];
              return r.produceWithPatches(l, function (m) {
                return a.apply(void 0, [m].concat(d));
              });
            };
          var i,
            o,
            u = r.produce(a, s, function (l, c) {
              (i = l), (o = c);
            });
          return typeof Promise < "u" && u instanceof Promise
            ? u.then(function (l) {
                return [l, i, o];
              })
            : [u, i, o];
        }),
        typeof (n == null ? void 0 : n.useProxies) == "boolean" &&
          this.setUseProxies(n.useProxies),
        typeof (n == null ? void 0 : n.autoFreeze) == "boolean" &&
          this.setAutoFreeze(n.autoFreeze);
    }
    var e = t.prototype;
    return (
      (e.createDraft = function (n) {
        Ki(n) || ii(8), mu(n) && (n = Xl(n));
        var r = KF(this),
          a = ng(this, n, void 0);
        return (a[hn].C = !0), L1(r), a;
      }),
      (e.finishDraft = function (n, r) {
        var a = n && n[hn],
          s = a.A;
        return AC(s, r), OC(void 0, s);
      }),
      (e.setAutoFreeze = function (n) {
        this.D = n;
      }),
      (e.setUseProxies = function (n) {
        n && !$F && ii(20), (this.O = n);
      }),
      (e.applyPatches = function (n, r) {
        var a;
        for (a = r.length - 1; a >= 0; a--) {
          var s = r[a];
          if (s.path.length === 0 && s.op === "replace") {
            n = s.value;
            break;
          }
        }
        a > -1 && (r = r.slice(a + 1));
        var i = au("Patches").$;
        return mu(n)
          ? i(n, r)
          : this.produce(n, function (o) {
              return i(o, r);
            });
      }),
      t
    );
  })(),
  fi = new KSe(),
  Wn = fi.produce;
fi.produceWithPatches.bind(fi);
fi.setAutoFreeze.bind(fi);
fi.setUseProxies.bind(fi);
fi.applyPatches.bind(fi);
fi.createDraft.bind(fi);
fi.finishDraft.bind(fi);
const sr = Wn;
function ag(t) {
  "@babel/helpers - typeof";
  return (
    (ag =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    ag(t)
  );
}
function BSe(t, e) {
  if (ag(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(t, e || "default");
    if (ag(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
function VSe(t) {
  var e = BSe(t, "string");
  return ag(e) == "symbol" ? e : e + "";
}
function jSe(t, e, n) {
  return (
    (e = VSe(e)),
    e in t
      ? Object.defineProperty(t, e, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (t[e] = n),
    t
  );
}
function WF(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(t);
    e &&
      (r = r.filter(function (a) {
        return Object.getOwnPropertyDescriptor(t, a).enumerable;
      })),
      n.push.apply(n, r);
  }
  return n;
}
function qF(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2
      ? WF(Object(n), !0).forEach(function (r) {
          jSe(t, r, n[r]);
        })
      : Object.getOwnPropertyDescriptors
      ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n))
      : WF(Object(n)).forEach(function (r) {
          Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
        });
  }
  return t;
}
function zr(t) {
  return (
    "Minified Redux error #" +
    t +
    "; visit https://redux.js.org/Errors?code=" +
    t +
    " for the full message or use the non-minified dev environment for full errors. "
  );
}
var YF = (function () {
    return (typeof Symbol == "function" && Symbol.observable) || "@@observable";
  })(),
  RC = function () {
    return Math.random().toString(36).substring(7).split("").join(".");
  },
  uT = {
    INIT: "@@redux/INIT" + RC(),
    REPLACE: "@@redux/REPLACE" + RC(),
    PROBE_UNKNOWN_ACTION: function () {
      return "@@redux/PROBE_UNKNOWN_ACTION" + RC();
    },
  };
function zSe(t) {
  if (typeof t != "object" || t === null) return !1;
  for (var e = t; Object.getPrototypeOf(e) !== null; )
    e = Object.getPrototypeOf(e);
  return Object.getPrototypeOf(t) === e;
}
function zV(t, e, n) {
  var r;
  if (
    (typeof e == "function" && typeof n == "function") ||
    (typeof n == "function" && typeof arguments[3] == "function")
  )
    throw new Error(zr(0));
  if (
    (typeof e == "function" && typeof n > "u" && ((n = e), (e = void 0)),
    typeof n < "u")
  ) {
    if (typeof n != "function") throw new Error(zr(1));
    return n(zV)(t, e);
  }
  if (typeof t != "function") throw new Error(zr(2));
  var a = t,
    s = e,
    i = [],
    o = i,
    u = !1;
  function l() {
    o === i && (o = i.slice());
  }
  function c() {
    if (u) throw new Error(zr(3));
    return s;
  }
  function d(I) {
    if (typeof I != "function") throw new Error(zr(4));
    if (u) throw new Error(zr(5));
    var O = !0;
    return (
      l(),
      o.push(I),
      function () {
        if (O) {
          if (u) throw new Error(zr(6));
          (O = !1), l();
          var C = o.indexOf(I);
          o.splice(C, 1), (i = null);
        }
      }
    );
  }
  function p(I) {
    if (!zSe(I)) throw new Error(zr(7));
    if (typeof I.type > "u") throw new Error(zr(8));
    if (u) throw new Error(zr(9));
    try {
      (u = !0), (s = a(s, I));
    } finally {
      u = !1;
    }
    for (var O = (i = o), g = 0; g < O.length; g++) {
      var C = O[g];
      C();
    }
    return I;
  }
  function m(I) {
    if (typeof I != "function") throw new Error(zr(10));
    (a = I), p({ type: uT.REPLACE });
  }
  function y() {
    var I,
      O = d;
    return (
      (I = {
        subscribe: function (C) {
          if (typeof C != "object" || C === null) throw new Error(zr(11));
          function H() {
            C.next && C.next(c());
          }
          H();
          var B = O(H);
          return { unsubscribe: B };
        },
      }),
      (I[YF] = function () {
        return this;
      }),
      I
    );
  }
  return (
    p({ type: uT.INIT }),
    (r = { dispatch: p, subscribe: d, getState: c, replaceReducer: m }),
    (r[YF] = y),
    r
  );
}
function $Se(t) {
  Object.keys(t).forEach(function (e) {
    var n = t[e],
      r = n(void 0, { type: uT.INIT });
    if (typeof r > "u") throw new Error(zr(12));
    if (typeof n(void 0, { type: uT.PROBE_UNKNOWN_ACTION() }) > "u")
      throw new Error(zr(13));
  });
}
function bp(t) {
  for (var e = Object.keys(t), n = {}, r = 0; r < e.length; r++) {
    var a = e[r];
    typeof t[a] == "function" && (n[a] = t[a]);
  }
  var s = Object.keys(n),
    i;
  try {
    $Se(n);
  } catch (o) {
    i = o;
  }
  return function (u, l) {
    if ((u === void 0 && (u = {}), i)) throw i;
    for (var c = !1, d = {}, p = 0; p < s.length; p++) {
      var m = s[p],
        y = n[m],
        I = u[m],
        O = y(I, l);
      if (typeof O > "u") throw (l && l.type, new Error(zr(14)));
      (d[m] = O), (c = c || O !== I);
    }
    return (c = c || s.length !== Object.keys(u).length), c ? d : u;
  };
}
function lT() {
  for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)
    e[n] = arguments[n];
  return e.length === 0
    ? function (r) {
        return r;
      }
    : e.length === 1
    ? e[0]
    : e.reduce(function (r, a) {
        return function () {
          return r(a.apply(void 0, arguments));
        };
      });
}
function WSe() {
  for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)
    e[n] = arguments[n];
  return function (r) {
    return function () {
      var a = r.apply(void 0, arguments),
        s = function () {
          throw new Error(zr(15));
        },
        i = {
          getState: a.getState,
          dispatch: function () {
            return s.apply(void 0, arguments);
          },
        },
        o = e.map(function (u) {
          return u(i);
        });
      return (
        (s = lT.apply(void 0, o)(a.dispatch)),
        qF(qF({}, a), {}, { dispatch: s })
      );
    };
  };
}
var cT = "NOT_FOUND";
function qSe(t) {
  var e;
  return {
    get: function (r) {
      return e && t(e.key, r) ? e.value : cT;
    },
    put: function (r, a) {
      e = { key: r, value: a };
    },
    getEntries: function () {
      return e ? [e] : [];
    },
    clear: function () {
      e = void 0;
    },
  };
}
function YSe(t, e) {
  var n = [];
  function r(o) {
    var u = n.findIndex(function (c) {
      return e(o, c.key);
    });
    if (u > -1) {
      var l = n[u];
      return u > 0 && (n.splice(u, 1), n.unshift(l)), l.value;
    }
    return cT;
  }
  function a(o, u) {
    r(o) === cT && (n.unshift({ key: o, value: u }), n.length > t && n.pop());
  }
  function s() {
    return n;
  }
  function i() {
    n = [];
  }
  return { get: r, put: a, getEntries: s, clear: i };
}
var XSe = function (e, n) {
  return e === n;
};
function QSe(t) {
  return function (n, r) {
    if (n === null || r === null || n.length !== r.length) return !1;
    for (var a = n.length, s = 0; s < a; s++) if (!t(n[s], r[s])) return !1;
    return !0;
  };
}
function JSe(t, e) {
  var n = typeof e == "object" ? e : { equalityCheck: e },
    r = n.equalityCheck,
    a = r === void 0 ? XSe : r,
    s = n.maxSize,
    i = s === void 0 ? 1 : s,
    o = n.resultEqualityCheck,
    u = QSe(a),
    l = i === 1 ? qSe(u) : YSe(i, u);
  function c() {
    var d = l.get(arguments);
    if (d === cT) {
      if (((d = t.apply(null, arguments)), o)) {
        var p = l.getEntries(),
          m = p.find(function (y) {
            return o(y.value, d);
          });
        m && (d = m.value);
      }
      l.put(arguments, d);
    }
    return d;
  }
  return (
    (c.clearCache = function () {
      return l.clear();
    }),
    c
  );
}
function ZSe(t) {
  var e = Array.isArray(t[0]) ? t[0] : t;
  if (
    !e.every(function (r) {
      return typeof r == "function";
    })
  ) {
    var n = e
      .map(function (r) {
        return typeof r == "function"
          ? "function " + (r.name || "unnamed") + "()"
          : typeof r;
      })
      .join(", ");
    throw new Error(
      "createSelector expects all input-selectors to be functions, but received the following types: [" +
        n +
        "]"
    );
  }
  return e;
}
function eye(t) {
  for (
    var e = arguments.length, n = new Array(e > 1 ? e - 1 : 0), r = 1;
    r < e;
    r++
  )
    n[r - 1] = arguments[r];
  var a = function () {
    for (var i = arguments.length, o = new Array(i), u = 0; u < i; u++)
      o[u] = arguments[u];
    var l = 0,
      c,
      d = { memoizeOptions: void 0 },
      p = o.pop();
    if (
      (typeof p == "object" && ((d = p), (p = o.pop())), typeof p != "function")
    )
      throw new Error(
        "createSelector expects an output function after the inputs, but received: [" +
          typeof p +
          "]"
      );
    var m = d,
      y = m.memoizeOptions,
      I = y === void 0 ? n : y,
      O = Array.isArray(I) ? I : [I],
      g = ZSe(o),
      C = t.apply(
        void 0,
        [
          function () {
            return l++, p.apply(null, arguments);
          },
        ].concat(O)
      ),
      H = t(function () {
        for (var he = [], de = g.length, U = 0; U < de; U++)
          he.push(g[U].apply(null, arguments));
        return (c = C.apply(null, he)), c;
      });
    return (
      Object.assign(H, {
        resultFunc: p,
        memoizedResultFunc: C,
        dependencies: g,
        lastResult: function () {
          return c;
        },
        recomputations: function () {
          return l;
        },
        resetRecomputations: function () {
          return (l = 0);
        },
      }),
      H
    );
  };
  return a;
}
var Nt = eye(JSe);
function $V(t) {
  var e = function (r) {
    var a = r.dispatch,
      s = r.getState;
    return function (i) {
      return function (o) {
        return typeof o == "function" ? o(a, s, t) : i(o);
      };
    };
  };
  return e;
}
var WV = $V();
WV.withExtraArgument = $V;
const XF = WV;
var qV =
    (globalThis && globalThis.__extends) ||
    (function () {
      var t = function (e, n) {
        return (
          (t =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (r, a) {
                r.__proto__ = a;
              }) ||
            function (r, a) {
              for (var s in a)
                Object.prototype.hasOwnProperty.call(a, s) && (r[s] = a[s]);
            }),
          t(e, n)
        );
      };
      return function (e, n) {
        if (typeof n != "function" && n !== null)
          throw new TypeError(
            "Class extends value " + String(n) + " is not a constructor or null"
          );
        t(e, n);
        function r() {
          this.constructor = e;
        }
        e.prototype =
          n === null
            ? Object.create(n)
            : ((r.prototype = n.prototype), new r());
      };
    })(),
  tye =
    (globalThis && globalThis.__generator) ||
    function (t, e) {
      var n = {
          label: 0,
          sent: function () {
            if (s[0] & 1) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        },
        r,
        a,
        s,
        i;
      return (
        (i = { next: o(0), throw: o(1), return: o(2) }),
        typeof Symbol == "function" &&
          (i[Symbol.iterator] = function () {
            return this;
          }),
        i
      );
      function o(l) {
        return function (c) {
          return u([l, c]);
        };
      }
      function u(l) {
        if (r) throw new TypeError("Generator is already executing.");
        for (; n; )
          try {
            if (
              ((r = 1),
              a &&
                (s =
                  l[0] & 2
                    ? a.return
                    : l[0]
                    ? a.throw || ((s = a.return) && s.call(a), 0)
                    : a.next) &&
                !(s = s.call(a, l[1])).done)
            )
              return s;
            switch (((a = 0), s && (l = [l[0] & 2, s.value]), l[0])) {
              case 0:
              case 1:
                s = l;
                break;
              case 4:
                return n.label++, { value: l[1], done: !1 };
              case 5:
                n.label++, (a = l[1]), (l = [0]);
                continue;
              case 7:
                (l = n.ops.pop()), n.trys.pop();
                continue;
              default:
                if (
                  ((s = n.trys),
                  !(s = s.length > 0 && s[s.length - 1]) &&
                    (l[0] === 6 || l[0] === 2))
                ) {
                  n = 0;
                  continue;
                }
                if (l[0] === 3 && (!s || (l[1] > s[0] && l[1] < s[3]))) {
                  n.label = l[1];
                  break;
                }
                if (l[0] === 6 && n.label < s[1]) {
                  (n.label = s[1]), (s = l);
                  break;
                }
                if (s && n.label < s[2]) {
                  (n.label = s[2]), n.ops.push(l);
                  break;
                }
                s[2] && n.ops.pop(), n.trys.pop();
                continue;
            }
            l = e.call(t, n);
          } catch (c) {
            (l = [6, c]), (a = 0);
          } finally {
            r = s = 0;
          }
        if (l[0] & 5) throw l[1];
        return { value: l[0] ? l[1] : void 0, done: !0 };
      }
    },
  If =
    (globalThis && globalThis.__spreadArray) ||
    function (t, e) {
      for (var n = 0, r = e.length, a = t.length; n < r; n++, a++) t[a] = e[n];
      return t;
    },
  nye = Object.defineProperty,
  sye = Object.defineProperties,
  rye = Object.getOwnPropertyDescriptors,
  QF = Object.getOwnPropertySymbols,
  aye = Object.prototype.hasOwnProperty,
  iye = Object.prototype.propertyIsEnumerable,
  JF = function (t, e, n) {
    return e in t
      ? nye(t, e, { enumerable: !0, configurable: !0, writable: !0, value: n })
      : (t[e] = n);
  },
  Tc = function (t, e) {
    for (var n in e || (e = {})) aye.call(e, n) && JF(t, n, e[n]);
    if (QF)
      for (var r = 0, a = QF(e); r < a.length; r++) {
        var n = a[r];
        iye.call(e, n) && JF(t, n, e[n]);
      }
    return t;
  },
  kC = function (t, e) {
    return sye(t, rye(e));
  },
  oye = function (t, e, n) {
    return new Promise(function (r, a) {
      var s = function (u) {
          try {
            o(n.next(u));
          } catch (l) {
            a(l);
          }
        },
        i = function (u) {
          try {
            o(n.throw(u));
          } catch (l) {
            a(l);
          }
        },
        o = function (u) {
          return u.done ? r(u.value) : Promise.resolve(u.value).then(s, i);
        };
      o((n = n.apply(t, e)).next());
    });
  },
  uye =
    typeof window < "u" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__
      ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__
      : function () {
          if (arguments.length !== 0)
            return typeof arguments[0] == "object"
              ? lT
              : lT.apply(null, arguments);
        };
function lye(t) {
  if (typeof t != "object" || t === null) return !1;
  var e = Object.getPrototypeOf(t);
  if (e === null) return !0;
  for (var n = e; Object.getPrototypeOf(n) !== null; )
    n = Object.getPrototypeOf(n);
  return e === n;
}
var cye = (function (t) {
    qV(e, t);
    function e() {
      for (var n = [], r = 0; r < arguments.length; r++) n[r] = arguments[r];
      var a = t.apply(this, n) || this;
      return Object.setPrototypeOf(a, e.prototype), a;
    }
    return (
      Object.defineProperty(e, Symbol.species, {
        get: function () {
          return e;
        },
        enumerable: !1,
        configurable: !0,
      }),
      (e.prototype.concat = function () {
        for (var n = [], r = 0; r < arguments.length; r++) n[r] = arguments[r];
        return t.prototype.concat.apply(this, n);
      }),
      (e.prototype.prepend = function () {
        for (var n = [], r = 0; r < arguments.length; r++) n[r] = arguments[r];
        return n.length === 1 && Array.isArray(n[0])
          ? new (e.bind.apply(e, If([void 0], n[0].concat(this))))()
          : new (e.bind.apply(e, If([void 0], n.concat(this))))();
      }),
      e
    );
  })(Array),
  dye = (function (t) {
    qV(e, t);
    function e() {
      for (var n = [], r = 0; r < arguments.length; r++) n[r] = arguments[r];
      var a = t.apply(this, n) || this;
      return Object.setPrototypeOf(a, e.prototype), a;
    }
    return (
      Object.defineProperty(e, Symbol.species, {
        get: function () {
          return e;
        },
        enumerable: !1,
        configurable: !0,
      }),
      (e.prototype.concat = function () {
        for (var n = [], r = 0; r < arguments.length; r++) n[r] = arguments[r];
        return t.prototype.concat.apply(this, n);
      }),
      (e.prototype.prepend = function () {
        for (var n = [], r = 0; r < arguments.length; r++) n[r] = arguments[r];
        return n.length === 1 && Array.isArray(n[0])
          ? new (e.bind.apply(e, If([void 0], n[0].concat(this))))()
          : new (e.bind.apply(e, If([void 0], n.concat(this))))();
      }),
      e
    );
  })(Array);
function G1(t) {
  return Ki(t) ? sr(t, function () {}) : t;
}
function pye(t) {
  return typeof t == "boolean";
}
function hye() {
  return function (e) {
    return fye(e);
  };
}
function fye(t) {
  t === void 0 && (t = {});
  var e = t.thunk,
    n = e === void 0 ? !0 : e;
  t.immutableCheck, t.serializableCheck;
  var r = new cye();
  return (
    n && (pye(n) ? r.push(XF) : r.push(XF.withExtraArgument(n.extraArgument))),
    r
  );
}
var mye = !0;
function Sye(t) {
  var e = hye(),
    n = t || {},
    r = n.reducer,
    a = r === void 0 ? void 0 : r,
    s = n.middleware,
    i = s === void 0 ? e() : s,
    o = n.devTools,
    u = o === void 0 ? !0 : o,
    l = n.preloadedState,
    c = l === void 0 ? void 0 : l,
    d = n.enhancers,
    p = d === void 0 ? void 0 : d,
    m;
  if (typeof a == "function") m = a;
  else if (lye(a)) m = bp(a);
  else
    throw new Error(
      '"reducer" is a required argument, and must be a function or an object of functions that can be passed to combineReducers'
    );
  var y = i;
  typeof y == "function" && (y = y(e));
  var I = WSe.apply(void 0, y),
    O = lT;
  u && (O = uye(Tc({ trace: !mye }, typeof u == "object" && u)));
  var g = new dye(I),
    C = g;
  Array.isArray(p) ? (C = If([I], p)) : typeof p == "function" && (C = p(g));
  var H = O.apply(void 0, C);
  return zV(m, c, H);
}
function k(t, e) {
  function n() {
    for (var r = [], a = 0; a < arguments.length; a++) r[a] = arguments[a];
    if (e) {
      var s = e.apply(void 0, r);
      if (!s) throw new Error("prepareAction did not return an object");
      return Tc(
        Tc({ type: t, payload: s.payload }, "meta" in s && { meta: s.meta }),
        "error" in s && { error: s.error }
      );
    }
    return { type: t, payload: r[0] };
  }
  return (
    (n.toString = function () {
      return "" + t;
    }),
    (n.type = t),
    (n.match = function (r) {
      return r.type === t;
    }),
    n
  );
}
function YV(t) {
  var e = {},
    n = [],
    r,
    a = {
      addCase: function (s, i) {
        var o = typeof s == "string" ? s : s.type;
        if (o in e)
          throw new Error(
            "addCase cannot be called with two reducers for the same action type"
          );
        return (e[o] = i), a;
      },
      addMatcher: function (s, i) {
        return n.push({ matcher: s, reducer: i }), a;
      },
      addDefaultCase: function (s) {
        return (r = s), a;
      },
    };
  return t(a), [e, n, r];
}
function yye(t) {
  return typeof t == "function";
}
function ta(t, e, n, r) {
  n === void 0 && (n = []);
  var a = typeof e == "function" ? YV(e) : [e, n, r],
    s = a[0],
    i = a[1],
    o = a[2],
    u;
  if (yye(t))
    u = function () {
      return G1(t());
    };
  else {
    var l = G1(t);
    u = function () {
      return l;
    };
  }
  function c(d, p) {
    d === void 0 && (d = u());
    var m = If(
      [s[p.type]],
      i
        .filter(function (y) {
          var I = y.matcher;
          return I(p);
        })
        .map(function (y) {
          var I = y.reducer;
          return I;
        })
    );
    return (
      m.filter(function (y) {
        return !!y;
      }).length === 0 && (m = [o]),
      m.reduce(function (y, I) {
        if (I)
          if (mu(y)) {
            var O = y,
              g = I(O, p);
            return g === void 0 ? y : g;
          } else {
            if (Ki(y))
              return sr(y, function (C) {
                return I(C, p);
              });
            var g = I(y, p);
            if (g === void 0) {
              if (y === null) return y;
              throw Error(
                "A case reducer on a non-draftable value must not return undefined"
              );
            }
            return g;
          }
        return y;
      }, d)
    );
  }
  return (c.getInitialState = u), c;
}
function gye(t, e) {
  return t + "/" + e;
}
function ua(t) {
  var e = t.name;
  if (!e) throw new Error("`name` is a required option for createSlice");
  typeof process < "u";
  var n =
      typeof t.initialState == "function" ? t.initialState : G1(t.initialState),
    r = t.reducers || {},
    a = Object.keys(r),
    s = {},
    i = {},
    o = {};
  a.forEach(function (c) {
    var d = r[c],
      p = gye(e, c),
      m,
      y;
    "reducer" in d ? ((m = d.reducer), (y = d.prepare)) : (m = d),
      (s[c] = m),
      (i[p] = m),
      (o[c] = y ? k(p, y) : k(p));
  });
  function u() {
    var c =
        typeof t.extraReducers == "function"
          ? YV(t.extraReducers)
          : [t.extraReducers],
      d = c[0],
      p = d === void 0 ? {} : d,
      m = c[1],
      y = m === void 0 ? [] : m,
      I = c[2],
      O = I === void 0 ? void 0 : I,
      g = Tc(Tc({}, p), i);
    return ta(n, function (C) {
      for (var H in g) C.addCase(H, g[H]);
      for (var B = 0, he = y; B < he.length; B++) {
        var de = he[B];
        C.addMatcher(de.matcher, de.reducer);
      }
      O && C.addDefaultCase(O);
    });
  }
  var l;
  return {
    name: e,
    reducer: function (c, d) {
      return l || (l = u()), l(c, d);
    },
    actions: o,
    caseReducers: s,
    getInitialState: function () {
      return l || (l = u()), l.getInitialState();
    },
  };
}
var vye = "ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW",
  _ye = function (t) {
    t === void 0 && (t = 21);
    for (var e = "", n = t; n--; ) e += vye[(Math.random() * 64) | 0];
    return e;
  },
  bye = ["name", "message", "stack", "code"],
  xC = (function () {
    function t(e, n) {
      (this.payload = e), (this.meta = n);
    }
    return t;
  })(),
  ZF = (function () {
    function t(e, n) {
      (this.payload = e), (this.meta = n);
    }
    return t;
  })(),
  Eye = function (t) {
    if (typeof t == "object" && t !== null) {
      for (var e = {}, n = 0, r = bye; n < r.length; n++) {
        var a = r[n];
        typeof t[a] == "string" && (e[a] = t[a]);
      }
      return e;
    }
    return { message: String(t) };
  };
(function () {
  function t(e, n, r) {
    var a = k(e + "/fulfilled", function (l, c, d, p) {
        return {
          payload: l,
          meta: kC(Tc({}, p || {}), {
            arg: d,
            requestId: c,
            requestStatus: "fulfilled",
          }),
        };
      }),
      s = k(e + "/pending", function (l, c, d) {
        return {
          payload: void 0,
          meta: kC(Tc({}, d || {}), {
            arg: c,
            requestId: l,
            requestStatus: "pending",
          }),
        };
      }),
      i = k(e + "/rejected", function (l, c, d, p, m) {
        return {
          payload: p,
          error: ((r && r.serializeError) || Eye)(l || "Rejected"),
          meta: kC(Tc({}, m || {}), {
            arg: d,
            requestId: c,
            rejectedWithValue: !!p,
            requestStatus: "rejected",
            aborted: (l == null ? void 0 : l.name) === "AbortError",
            condition: (l == null ? void 0 : l.name) === "ConditionError",
          }),
        };
      }),
      o =
        typeof AbortController < "u"
          ? AbortController
          : (function () {
              function l() {
                this.signal = {
                  aborted: !1,
                  addEventListener: function () {},
                  dispatchEvent: function () {
                    return !1;
                  },
                  onabort: function () {},
                  removeEventListener: function () {},
                  reason: void 0,
                  throwIfAborted: function () {},
                };
              }
              return (l.prototype.abort = function () {}), l;
            })();
    function u(l) {
      return function (c, d, p) {
        var m = r != null && r.idGenerator ? r.idGenerator(l) : _ye(),
          y = new o(),
          I;
        function O(C) {
          (I = C), y.abort();
        }
        var g = (function () {
          return oye(this, null, function () {
            var C, H, B, he, de, U, R;
            return tye(this, function (ge) {
              switch (ge.label) {
                case 0:
                  return (
                    ge.trys.push([0, 4, , 5]),
                    (he =
                      (C = r == null ? void 0 : r.condition) == null
                        ? void 0
                        : C.call(r, l, { getState: d, extra: p })),
                    wye(he) ? [4, he] : [3, 2]
                  );
                case 1:
                  (he = ge.sent()), (ge.label = 2);
                case 2:
                  if (he === !1 || y.signal.aborted)
                    throw {
                      name: "ConditionError",
                      message:
                        "Aborted due to condition callback returning false.",
                    };
                  return (
                    (de = new Promise(function (ve, we) {
                      return y.signal.addEventListener("abort", function () {
                        return we({
                          name: "AbortError",
                          message: I || "Aborted",
                        });
                      });
                    })),
                    c(
                      s(
                        m,
                        l,
                        (H = r == null ? void 0 : r.getPendingMeta) == null
                          ? void 0
                          : H.call(
                              r,
                              { requestId: m, arg: l },
                              { getState: d, extra: p }
                            )
                      )
                    ),
                    [
                      4,
                      Promise.race([
                        de,
                        Promise.resolve(
                          n(l, {
                            dispatch: c,
                            getState: d,
                            extra: p,
                            requestId: m,
                            signal: y.signal,
                            abort: O,
                            rejectWithValue: function (ve, we) {
                              return new xC(ve, we);
                            },
                            fulfillWithValue: function (ve, we) {
                              return new ZF(ve, we);
                            },
                          })
                        ).then(function (ve) {
                          if (ve instanceof xC) throw ve;
                          return ve instanceof ZF
                            ? a(ve.payload, m, l, ve.meta)
                            : a(ve, m, l);
                        }),
                      ]),
                    ]
                  );
                case 3:
                  return (B = ge.sent()), [3, 5];
                case 4:
                  return (
                    (U = ge.sent()),
                    (B =
                      U instanceof xC
                        ? i(null, m, l, U.payload, U.meta)
                        : i(U, m, l)),
                    [3, 5]
                  );
                case 5:
                  return (
                    (R =
                      r &&
                      !r.dispatchConditionRejection &&
                      i.match(B) &&
                      B.meta.condition),
                    R || c(B),
                    [2, B]
                  );
              }
            });
          });
        })();
        return Object.assign(g, {
          abort: O,
          requestId: m,
          arg: l,
          unwrap: function () {
            return g.then(Tye);
          },
        });
      };
    }
    return Object.assign(u, {
      pending: s,
      rejected: i,
      fulfilled: a,
      typePrefix: e,
    });
  }
  return (
    (t.withTypes = function () {
      return t;
    }),
    t
  );
})();
function Tye(t) {
  if (t.meta && t.meta.rejectedWithValue) throw t.payload;
  if (t.error) throw t.error;
  return t.payload;
}
function wye(t) {
  return t !== null && typeof t == "object" && typeof t.then == "function";
}
var dR = "listenerMiddleware";
k(dR + "/add");
k(dR + "/removeAll");
k(dR + "/remove");
var e9;
typeof queueMicrotask == "function" &&
  queueMicrotask.bind(
    typeof window < "u" ? window : typeof global < "u" ? global : globalThis
  );
MSe();
const Pye = vi("electron"),
  { app: Iye, ipcRenderer: pv, ipcMain: Cye, clipboard: y_t, shell: g_t } = Pye,
  Aye = vi("electron-redux"),
  { forwardToMain: Oye, replayActionRenderer: Hye } = Aye;
function Cf() {}
var pR = "persist:",
  XV = "persist/FLUSH",
  ig = "persist/REHYDRATE",
  QV = "persist/PAUSE",
  JV = "persist/PERSIST",
  ZV = "persist/PURGE",
  ej = "persist/REGISTER",
  tj = -1,
  Nye =
    typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
      ? function (t) {
          return typeof t;
        }
      : function (t) {
          return t &&
            typeof Symbol == "function" &&
            t.constructor === Symbol &&
            t !== Symbol.prototype
            ? "symbol"
            : typeof t;
        },
  Rye =
    Object.assign ||
    function (t) {
      for (var e = 1; e < arguments.length; e++) {
        var n = arguments[e];
        for (var r in n)
          Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
      }
      return t;
    };
function kye(t, e, n, r) {
  r.debug;
  var a = Rye({}, n);
  return (
    t &&
      (typeof t > "u" ? "undefined" : Nye(t)) === "object" &&
      Object.keys(t).forEach(function (s) {
        s !== "_persist" && e[s] === n[s] && (a[s] = t[s]);
      }),
    a
  );
}
function xye(t) {
  var e = t.blacklist || null,
    n = t.whitelist || null,
    r = t.transforms || [],
    a = t.throttle || 0,
    s = "" + (t.keyPrefix !== void 0 ? t.keyPrefix : pR) + t.key,
    i = t.storage,
    o =
      t.serialize === !1
        ? function (H) {
            return H;
          }
        : Lye,
    u = {},
    l = {},
    c = [],
    d = null,
    p = null,
    m = function (B) {
      Object.keys(B).forEach(function (he) {
        O(he) && u[he] !== B[he] && c.indexOf(he) === -1 && c.push(he);
      }),
        Object.keys(u).forEach(function (he) {
          B[he] === void 0 && c.push(he);
        }),
        d === null && (d = setInterval(y, a)),
        (u = B);
    };
  function y() {
    if (c.length === 0) {
      d && clearInterval(d), (d = null);
      return;
    }
    var H = c.shift(),
      B = r.reduce(function (he, de) {
        return de.in(he, H, u);
      }, u[H]);
    if (B !== void 0)
      try {
        l[H] = o(B);
      } catch (he) {
        console.error(
          "redux-persist/createPersistoid: error serializing state",
          he
        );
      }
    else delete l[H];
    c.length === 0 && I();
  }
  function I() {
    Object.keys(l).forEach(function (H) {
      u[H] === void 0 && delete l[H];
    }),
      (p = i.setItem(s, o(l)).catch(g));
  }
  function O(H) {
    return !(
      (n && n.indexOf(H) === -1 && H !== "_persist") ||
      (e && e.indexOf(H) !== -1)
    );
  }
  function g(H) {}
  var C = function () {
    for (; c.length !== 0; ) y();
    return p || Promise.resolve();
  };
  return { update: m, flush: C };
}
function Lye(t) {
  return JSON.stringify(t);
}
function Mye(t) {
  var e = t.transforms || [],
    n = "" + (t.keyPrefix !== void 0 ? t.keyPrefix : pR) + t.key,
    r = t.storage;
  t.debug;
  var a =
    t.serialize === !1
      ? function (s) {
          return s;
        }
      : Dye;
  return r.getItem(n).then(function (s) {
    if (s)
      try {
        var i = {},
          o = a(s);
        return (
          Object.keys(o).forEach(function (u) {
            i[u] = e.reduceRight(function (l, c) {
              return c.out(l, u, o);
            }, a(o[u]));
          }),
          i
        );
      } catch (u) {
        throw u;
      }
    else return;
  });
}
function Dye(t) {
  return JSON.parse(t);
}
function Gye(t) {
  var e = t.storage,
    n = "" + (t.keyPrefix !== void 0 ? t.keyPrefix : pR) + t.key;
  return e.removeItem(n, Fye);
}
function Fye(t) {}
var wd =
  Object.assign ||
  function (t) {
    for (var e = 1; e < arguments.length; e++) {
      var n = arguments[e];
      for (var r in n)
        Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
    }
    return t;
  };
function Uye(t, e) {
  var n = {};
  for (var r in t)
    e.indexOf(r) >= 0 ||
      (Object.prototype.hasOwnProperty.call(t, r) && (n[r] = t[r]));
  return n;
}
var Kye = 5e3;
function Bye(t, e) {
  var n = t.version !== void 0 ? t.version : tj;
  t.debug;
  var r = t.stateReconciler === void 0 ? kye : t.stateReconciler,
    a = t.getStoredState || Mye,
    s = t.timeout !== void 0 ? t.timeout : Kye,
    i = null,
    o = !1,
    u = !0,
    l = function (d) {
      return d._persist.rehydrated && i && !u && i.update(d), d;
    };
  return function (c, d) {
    var p = c || {},
      m = p._persist,
      y = Uye(p, ["_persist"]),
      I = y;
    if (d.type === JV) {
      var O = !1,
        g = function (R, ge) {
          O || (d.rehydrate(t.key, R, ge), (O = !0));
        };
      if (
        (s &&
          setTimeout(function () {
            !O &&
              g(
                void 0,
                new Error(
                  'redux-persist: persist timed out for persist key "' +
                    t.key +
                    '"'
                )
              );
          }, s),
        (u = !1),
        i || (i = xye(t)),
        m)
      )
        return c;
      if (typeof d.rehydrate != "function" || typeof d.register != "function")
        throw new Error(
          "redux-persist: either rehydrate or register is not a function on the PERSIST action. This can happen if the action is being replayed. This is an unexplored use case, please open an issue and we will figure out a resolution."
        );
      return (
        d.register(t.key),
        a(t).then(
          function (U) {
            var R =
              t.migrate ||
              function (ge, ve) {
                return Promise.resolve(ge);
              };
            R(U, n).then(
              function (ge) {
                g(ge);
              },
              function (ge) {
                g(void 0, ge);
              }
            );
          },
          function (U) {
            g(void 0, U);
          }
        ),
        wd({}, e(I, d), { _persist: { version: n, rehydrated: !1 } })
      );
    } else {
      if (d.type === ZV)
        return (o = !0), d.result(Gye(t)), wd({}, e(I, d), { _persist: m });
      if (d.type === XV)
        return d.result(i && i.flush()), wd({}, e(I, d), { _persist: m });
      if (d.type === QV) u = !0;
      else if (d.type === ig) {
        if (o) return wd({}, I, { _persist: wd({}, m, { rehydrated: !0 }) });
        if (d.key === t.key) {
          var C = e(I, d),
            H = d.payload,
            B = r !== !1 && H !== void 0 ? r(H, c, C, t) : C,
            he = wd({}, B, { _persist: wd({}, m, { rehydrated: !0 }) });
          return l(he);
        }
      }
    }
    if (!m) return e(c, d);
    var de = e(I, d);
    return de === I ? c : ((de._persist = m), l(de));
  };
}
var Vye =
  typeof global == "object" && global && global.Object === Object && global;
const nj = Vye;
var jye = typeof self == "object" && self && self.Object === Object && self,
  zye = nj || jye || Function("return this")();
const Or = zye;
var $ye = Or.Symbol;
const sa = $ye;
var sj = Object.prototype,
  Wye = sj.hasOwnProperty,
  qye = sj.toString,
  SS = sa ? sa.toStringTag : void 0;
function Yye(t) {
  var e = Wye.call(t, SS),
    n = t[SS];
  try {
    t[SS] = void 0;
    var r = !0;
  } catch {}
  var a = qye.call(t);
  return r && (e ? (t[SS] = n) : delete t[SS]), a;
}
var Xye = Object.prototype,
  Qye = Xye.toString;
function Jye(t) {
  return Qye.call(t);
}
var Zye = "[object Null]",
  ege = "[object Undefined]",
  t9 = sa ? sa.toStringTag : void 0;
function wa(t) {
  return t == null
    ? t === void 0
      ? ege
      : Zye
    : t9 && t9 in Object(t)
    ? Yye(t)
    : Jye(t);
}
function rj(t, e) {
  return function (n) {
    return t(e(n));
  };
}
var tge = rj(Object.getPrototypeOf, Object);
const g0 = tge;
function Bs(t) {
  return t != null && typeof t == "object";
}
var nge = "[object Object]",
  sge = Function.prototype,
  rge = Object.prototype,
  aj = sge.toString,
  age = rge.hasOwnProperty,
  ige = aj.call(Object);
function ad(t) {
  if (!Bs(t) || wa(t) != nge) return !1;
  var e = g0(t);
  if (e === null) return !0;
  var n = age.call(e, "constructor") && e.constructor;
  return typeof n == "function" && n instanceof n && aj.call(n) == ige;
}
function oge(t) {
  var e,
    n = t.Symbol;
  return (
    typeof n == "function"
      ? n.observable
        ? (e = n.observable)
        : ((e = n("observable")), (n.observable = e))
      : (e = "@@observable"),
    e
  );
}
var ph;
typeof self < "u"
  ? (ph = self)
  : typeof window < "u"
  ? (ph = window)
  : typeof global < "u"
  ? (ph = global)
  : typeof module < "u"
  ? (ph = module)
  : (ph = Function("return this")());
var n9 = oge(ph),
  s9 = { INIT: "@@redux/INIT" };
function ij(t, e, n) {
  var r;
  if (
    (typeof e == "function" && typeof n > "u" && ((n = e), (e = void 0)),
    typeof n < "u")
  ) {
    if (typeof n != "function")
      throw new Error("Expected the enhancer to be a function.");
    return n(ij)(t, e);
  }
  if (typeof t != "function")
    throw new Error("Expected the reducer to be a function.");
  var a = t,
    s = e,
    i = [],
    o = i,
    u = !1;
  function l() {
    o === i && (o = i.slice());
  }
  function c() {
    return s;
  }
  function d(I) {
    if (typeof I != "function")
      throw new Error("Expected listener to be a function.");
    var O = !0;
    return (
      l(),
      o.push(I),
      function () {
        if (O) {
          (O = !1), l();
          var C = o.indexOf(I);
          o.splice(C, 1);
        }
      }
    );
  }
  function p(I) {
    if (!ad(I))
      throw new Error(
        "Actions must be plain objects. Use custom middleware for async actions."
      );
    if (typeof I.type > "u")
      throw new Error(
        'Actions may not have an undefined "type" property. Have you misspelled a constant?'
      );
    if (u) throw new Error("Reducers may not dispatch actions.");
    try {
      (u = !0), (s = a(s, I));
    } finally {
      u = !1;
    }
    for (var O = (i = o), g = 0; g < O.length; g++) {
      var C = O[g];
      C();
    }
    return I;
  }
  function m(I) {
    if (typeof I != "function")
      throw new Error("Expected the nextReducer to be a function.");
    (a = I), p({ type: s9.INIT });
  }
  function y() {
    var I,
      O = d;
    return (
      (I = {
        subscribe: function (C) {
          if (typeof C != "object")
            throw new TypeError("Expected the observer to be an object.");
          function H() {
            C.next && C.next(c());
          }
          H();
          var B = O(H);
          return { unsubscribe: B };
        },
      }),
      (I[n9] = function () {
        return this;
      }),
      I
    );
  }
  return (
    p({ type: s9.INIT }),
    (r = { dispatch: p, subscribe: d, getState: c, replaceReducer: m }),
    (r[n9] = y),
    r
  );
}
var F1 =
  Object.assign ||
  function (t) {
    for (var e = 1; e < arguments.length; e++) {
      var n = arguments[e];
      for (var r in n)
        Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
    }
    return t;
  };
function r9(t) {
  if (Array.isArray(t)) {
    for (var e = 0, n = Array(t.length); e < t.length; e++) n[e] = t[e];
    return n;
  } else return Array.from(t);
}
var oj = { registry: [], bootstrapped: !1 },
  uge = function () {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : oj,
      n = arguments[1];
    switch (n.type) {
      case ej:
        return F1({}, e, { registry: [].concat(r9(e.registry), [n.key]) });
      case ig:
        var r = e.registry.indexOf(n.key),
          a = [].concat(r9(e.registry));
        return (
          a.splice(r, 1),
          F1({}, e, { registry: a, bootstrapped: a.length === 0 })
        );
      default:
        return e;
    }
  };
function lge(t, e, n) {
  var r = n || !1,
    a = ij(uge, oj, e ? e.enhancer : void 0),
    s = function (l) {
      a.dispatch({ type: ej, key: l });
    },
    i = function (l, c, d) {
      var p = { type: ig, payload: c, err: d, key: l };
      t.dispatch(p),
        a.dispatch(p),
        r && o.getState().bootstrapped && (r(), (r = !1));
    },
    o = F1({}, a, {
      purge: function () {
        var l = [];
        return (
          t.dispatch({
            type: ZV,
            result: function (d) {
              l.push(d);
            },
          }),
          Promise.all(l)
        );
      },
      flush: function () {
        var l = [];
        return (
          t.dispatch({
            type: XV,
            result: function (d) {
              l.push(d);
            },
          }),
          Promise.all(l)
        );
      },
      pause: function () {
        t.dispatch({ type: QV });
      },
      persist: function () {
        t.dispatch({ type: JV, register: s, rehydrate: i });
      },
    });
  return o.persist(), o;
}
function cge(t, e) {
  var n = e || {},
    r = n.debug;
  return function (a, s) {
    if (!a) return Promise.resolve(void 0);
    var i =
      a._persist && a._persist.version !== void 0 ? a._persist.version : tj;
    if (i === s || i > s) return Promise.resolve(a);
    var o = Object.keys(t)
      .map(function (l) {
        return parseInt(l);
      })
      .filter(function (l) {
        return s >= l && l > i;
      })
      .sort(function (l, c) {
        return l - c;
      });
    try {
      var u = o.reduce(function (l, c) {
        return t[c](l);
      }, a);
      return Promise.resolve(u);
    } catch (l) {
      return Promise.reject(l);
    }
  };
}
function Ep(t, e) {
  var n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {},
    r = n.whitelist || null,
    a = n.blacklist || null;
  function s(i) {
    return !!((r && r.indexOf(i) === -1) || (a && a.indexOf(i) !== -1));
  }
  return {
    in: function (o, u, l) {
      return !s(u) && t ? t(o, u, l) : o;
    },
    out: function (o, u, l) {
      return !s(u) && e ? e(o, u, l) : o;
    },
  };
}
var ko = function (e) {
    return "@@redux-saga/" + e;
  },
  dge = ko("CANCEL_PROMISE"),
  uj = ko("CHANNEL_END"),
  pge = ko("IO"),
  a9 = ko("MATCH"),
  hge = ko("MULTICAST"),
  lj = ko("SAGA_ACTION"),
  fge = ko("SELF_CANCELLATION"),
  mge = ko("TASK"),
  Jh = ko("TASK_CANCEL"),
  cj = ko("TERMINATE"),
  Sge = ko("LOCATION");
function dT() {
  return (
    (dT = Object.assign
      ? Object.assign.bind()
      : function (t) {
          for (var e = 1; e < arguments.length; e++) {
            var n = arguments[e];
            for (var r in n)
              Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
          }
          return t;
        }),
    dT.apply(this, arguments)
  );
}
function yge(t, e) {
  if (t == null) return {};
  var n = {};
  for (var r in t)
    if (Object.prototype.hasOwnProperty.call(t, r)) {
      if (e.indexOf(r) >= 0) continue;
      n[r] = t[r];
    }
  return n;
}
var gge = function (e) {
    return e == null;
  },
  vge = function (e) {
    return e != null;
  },
  cl = function (e) {
    return typeof e == "function";
  },
  _ge = function (e) {
    return typeof e == "string";
  },
  dm = Array.isArray,
  v0 = function (e) {
    return e && cl(e.then);
  },
  hR = function (e) {
    return e && cl(e.next) && cl(e.throw);
  },
  bge = function (e) {
    return cl(e) && e.hasOwnProperty("toString");
  },
  Ege = function (e) {
    return (
      !!e &&
      typeof Symbol == "function" &&
      e.constructor === Symbol &&
      e !== Symbol.prototype
    );
  },
  Tge = function (e) {
    return function () {
      return e;
    };
  },
  dj = Tge(!0),
  Rr = function () {},
  wge = function (e) {
    return e;
  },
  fR = function (e, n) {
    dT(e, n),
      Object.getOwnPropertySymbols &&
        Object.getOwnPropertySymbols(n).forEach(function (r) {
          e[r] = n[r];
        });
  },
  Pge = function (e, n) {
    var r;
    return (r = []).concat.apply(r, n.map(e));
  };
function _0(t, e) {
  var n = t.indexOf(e);
  n >= 0 && t.splice(n, 1);
}
function pj(t) {
  var e = !1;
  return function () {
    e || ((e = !0), t());
  };
}
var Ige = function (e) {
    throw e;
  },
  Cge = function (e) {
    return { value: e, done: !0 };
  };
function i9(t, e, n) {
  e === void 0 && (e = Ige), n === void 0 && (n = "iterator");
  var r = {
    meta: { name: n },
    next: t,
    throw: e,
    return: Cge,
    isSagaIterator: !0,
  };
  return (
    typeof Symbol < "u" &&
      (r[Symbol.iterator] = function () {
        return r;
      }),
    r
  );
}
function Age(t, e) {
  var n = e.sagaStack;
  console.error(t), console.error(n);
}
var hj = function (e) {
    return Array.apply(null, new Array(e));
  },
  Oge = function (e) {
    return function (n) {
      return e(Object.defineProperty(n, lj, { value: !0 }));
    };
  },
  fj = function (e) {
    return e === cj;
  },
  mj = function (e) {
    return e === Jh;
  },
  Sj = function (e) {
    return fj(e) || mj(e);
  };
function yj(t, e) {
  var n = Object.keys(t),
    r = n.length,
    a = 0,
    s,
    i = dm(t) ? hj(r) : {},
    o = {};
  function u() {
    a === r && ((s = !0), e(i));
  }
  return (
    n.forEach(function (l) {
      var c = function (p, m) {
        s || (m || Sj(p) ? (e.cancel(), e(p, m)) : ((i[l] = p), a++, u()));
      };
      (c.cancel = Rr), (o[l] = c);
    }),
    (e.cancel = function () {
      s ||
        ((s = !0),
        n.forEach(function (l) {
          return o[l].cancel();
        }));
    }),
    o
  );
}
function mR(t) {
  return { name: t.name || "anonymous", location: gj(t) };
}
function gj(t) {
  return t[Sge];
}
var Hge = "Channel's Buffer overflow!",
  Nge = 1,
  Rge = 3,
  vj = 4,
  kge = { isEmpty: dj, put: Rr, take: Rr };
function xge(t, e) {
  t === void 0 && (t = 10);
  var n = new Array(t),
    r = 0,
    a = 0,
    s = 0,
    i = function (c) {
      (n[a] = c), (a = (a + 1) % t), r++;
    },
    o = function () {
      if (r != 0) {
        var c = n[s];
        return (n[s] = null), r--, (s = (s + 1) % t), c;
      }
    },
    u = function () {
      for (var c = []; r; ) c.push(o());
      return c;
    };
  return {
    isEmpty: function () {
      return r == 0;
    },
    put: function (c) {
      if (r < t) i(c);
      else {
        var d;
        switch (e) {
          case Nge:
            throw new Error(Hge);
          case Rge:
            (n[a] = c), (a = (a + 1) % t), (s = a);
            break;
          case vj:
            (d = 2 * t),
              (n = u()),
              (r = n.length),
              (a = n.length),
              (s = 0),
              (n.length = d),
              (t = d),
              i(c);
            break;
        }
      }
    },
    take: o,
    flush: u,
  };
}
var Lge = function () {
    return kge;
  },
  Mge = function (e) {
    return xge(e, vj);
  },
  Dge = "TAKE",
  Gge = "PUT",
  Fge = "ALL",
  Uge = "RACE",
  Kge = "CALL",
  Bge = "CPS",
  Vge = "FORK",
  jge = "JOIN",
  zge = "CANCEL",
  $ge = "SELECT",
  Wge = "ACTION_CHANNEL",
  qge = "CANCELLED",
  Yge = "FLUSH",
  Xge = "GET_CONTEXT",
  Qge = "SET_CONTEXT",
  LC = function () {
    return Math.random().toString(36).substring(7).split("").join(".");
  };
"" + LC(), "" + LC();
function Jge() {
  for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)
    e[n] = arguments[n];
  return e.length === 0
    ? function (r) {
        return r;
      }
    : e.length === 1
    ? e[0]
    : e.reduce(function (r, a) {
        return function () {
          return r(a.apply(void 0, arguments));
        };
      });
}
function Zge() {
  var t = {};
  return (
    (t.promise = new Promise(function (e, n) {
      (t.resolve = e), (t.reject = n);
    })),
    t
  );
}
var _j = [],
  b0 = 0;
function eve(t) {
  try {
    SR(), t();
  } finally {
    Tj();
  }
}
function bj(t) {
  _j.push(t), b0 || (SR(), wj());
}
function Ej(t) {
  try {
    return SR(), t();
  } finally {
    wj();
  }
}
function SR() {
  b0++;
}
function Tj() {
  b0--;
}
function wj() {
  Tj();
  for (var t; !b0 && (t = _j.shift()) !== void 0; ) eve(t);
}
var tve = function (e) {
    return function (n) {
      return e.some(function (r) {
        return yR(r)(n);
      });
    };
  },
  nve = function (e) {
    return function (n) {
      return e(n);
    };
  },
  o9 = function (e) {
    return function (n) {
      return n.type === String(e);
    };
  },
  sve = function (e) {
    return function (n) {
      return n.type === e;
    };
  },
  Pj = function () {
    return dj;
  };
function yR(t) {
  var e =
    t === "*"
      ? Pj
      : _ge(t)
      ? o9
      : dm(t)
      ? tve
      : bge(t)
      ? o9
      : cl(t)
      ? nve
      : Ege(t)
      ? sve
      : null;
  if (e === null) throw new Error("invalid pattern: " + t);
  return e(t);
}
var oy = { type: uj },
  E0 = function (e) {
    return e && e.type === uj;
  };
function gR(t) {
  t === void 0 && (t = Mge());
  var e = !1,
    n = [];
  function r(o) {
    if (!e) {
      if (n.length === 0) return t.put(o);
      var u = n.shift();
      u(o);
    }
  }
  function a(o) {
    e && t.isEmpty()
      ? o(oy)
      : t.isEmpty()
      ? (n.push(o),
        (o.cancel = function () {
          _0(n, o);
        }))
      : o(t.take());
  }
  function s(o) {
    if (e && t.isEmpty()) {
      o(oy);
      return;
    }
    o(t.flush());
  }
  function i() {
    if (!e) {
      e = !0;
      var o = n;
      n = [];
      for (var u = 0, l = o.length; u < l; u++) {
        var c = o[u];
        c(oy);
      }
    }
  }
  return { take: a, put: r, flush: s, close: i };
}
function vR(t, e) {
  e === void 0 && (e = Lge());
  var n = !1,
    r,
    a = gR(e),
    s = function () {
      n || ((n = !0), cl(r) && r(), a.close());
    };
  return (
    (r = t(function (i) {
      if (E0(i)) {
        s();
        return;
      }
      a.put(i);
    })),
    (r = pj(r)),
    n && r(),
    { take: a.take, flush: a.flush, close: s }
  );
}
function rve() {
  var t,
    e = !1,
    n = [],
    r = n,
    a = function () {
      r === n && (r = n.slice());
    },
    s = function () {
      e = !0;
      var o = (n = r);
      (r = []),
        o.forEach(function (u) {
          u(oy);
        });
    };
  return (
    (t = {}),
    (t[hge] = !0),
    (t.put = function (o) {
      if (!e) {
        if (E0(o)) {
          s();
          return;
        }
        for (var u = (n = r), l = 0, c = u.length; l < c; l++) {
          var d = u[l];
          d[a9](o) && (d.cancel(), d(o));
        }
      }
    }),
    (t.take = function (o, u) {
      if ((u === void 0 && (u = Pj), e)) {
        o(oy);
        return;
      }
      (o[a9] = u),
        a(),
        r.push(o),
        (o.cancel = pj(function () {
          a(), _0(r, o);
        }));
    }),
    (t.close = s),
    t
  );
}
function Ij() {
  var t = rve(),
    e = t.put;
  return (
    (t.put = function (n) {
      if (n[lj]) {
        e(n);
        return;
      }
      bj(function () {
        e(n);
      });
    }),
    t
  );
}
var Rd = 0,
  Wu = 1,
  Vb = 2,
  Cj = 3;
function _R(t, e) {
  var n = t[dge];
  cl(n) && (e.cancel = n),
    t.then(e, function (r) {
      e(r, !0);
    });
}
var hv = 0,
  Aj = function () {
    return ++hv;
  },
  Hr;
function ave(t, e) {
  return t.isSagaIterator ? { name: t.meta.name } : mR(e);
}
function ive(t) {
  var e = t.context,
    n = t.fn,
    r = t.args;
  try {
    var a = n.apply(e, r);
    if (hR(a)) return a;
    var s = !1,
      i = function (u) {
        return s
          ? { value: u, done: !0 }
          : ((s = !0), { value: a, done: !v0(a) });
      };
    return i9(i);
  } catch (o) {
    return i9(function () {
      throw o;
    });
  }
}
function ove(t, e, n) {
  var r = e.channel,
    a = e.action,
    s = e.resolve;
  bj(function () {
    var i;
    try {
      i = (r ? r.put : t.dispatch)(a);
    } catch (o) {
      n(o, !0);
      return;
    }
    s && v0(i) ? _R(i, n) : n(i);
  });
}
function uve(t, e, n) {
  var r = e.channel,
    a = r === void 0 ? t.channel : r,
    s = e.pattern,
    i = e.maybe,
    o = function (l) {
      if (l instanceof Error) {
        n(l, !0);
        return;
      }
      if (E0(l) && !i) {
        n(cj);
        return;
      }
      n(l);
    };
  try {
    a.take(o, vge(s) ? yR(s) : null);
  } catch (u) {
    n(u, !0);
    return;
  }
  n.cancel = o.cancel;
}
function lve(t, e, n, r) {
  var a = e.context,
    s = e.fn,
    i = e.args,
    o = r.task;
  try {
    var u = s.apply(a, i);
    if (v0(u)) {
      _R(u, n);
      return;
    }
    if (hR(u)) {
      T0(t, u, o.context, hv, mR(s), !1, n);
      return;
    }
    n(u);
  } catch (l) {
    n(l, !0);
  }
}
function cve(t, e, n) {
  var r = e.context,
    a = e.fn,
    s = e.args;
  try {
    var i = function (u, l) {
      gge(u) ? n(l) : n(u, !0);
    };
    a.apply(r, s.concat(i)), i.cancel && (n.cancel = i.cancel);
  } catch (o) {
    n(o, !0);
  }
}
function dve(t, e, n, r) {
  var a = e.context,
    s = e.fn,
    i = e.args,
    o = e.detached,
    u = r.task,
    l = ive({ context: a, fn: s, args: i }),
    c = ave(l, s);
  Ej(function () {
    var d = T0(t, l, u.context, hv, c, o, void 0);
    o
      ? n(d)
      : d.isRunning()
      ? (u.queue.addTask(d), n(d))
      : d.isAborted()
      ? u.queue.abort(d.error())
      : n(d);
  });
}
function pve(t, e, n, r) {
  var a = r.task,
    s = function (u, l) {
      if (u.isRunning()) {
        var c = { task: a, cb: l };
        (l.cancel = function () {
          u.isRunning() && _0(u.joiners, c);
        }),
          u.joiners.push(c);
      } else u.isAborted() ? l(u.error(), !0) : l(u.result());
    };
  if (dm(e)) {
    if (e.length === 0) {
      n([]);
      return;
    }
    var i = yj(e, n);
    e.forEach(function (o, u) {
      s(o, i[u]);
    });
  } else s(e, n);
}
function MC(t) {
  t.isRunning() && t.cancel();
}
function hve(t, e, n, r) {
  var a = r.task;
  e === fge ? MC(a) : dm(e) ? e.forEach(MC) : MC(e), n();
}
function fve(t, e, n, r) {
  var a = r.digestEffect,
    s = hv,
    i = Object.keys(e);
  if (i.length === 0) {
    n(dm(e) ? [] : {});
    return;
  }
  var o = yj(e, n);
  i.forEach(function (u) {
    a(e[u], s, o[u], u);
  });
}
function mve(t, e, n, r) {
  var a = r.digestEffect,
    s = hv,
    i = Object.keys(e),
    o = dm(e) ? hj(i.length) : {},
    u = {},
    l = !1;
  i.forEach(function (c) {
    var d = function (m, y) {
      l ||
        (y || Sj(m)
          ? (n.cancel(), n(m, y))
          : (n.cancel(), (l = !0), (o[c] = m), n(o)));
    };
    (d.cancel = Rr), (u[c] = d);
  }),
    (n.cancel = function () {
      l ||
        ((l = !0),
        i.forEach(function (c) {
          return u[c].cancel();
        }));
    }),
    i.forEach(function (c) {
      l || a(e[c], s, u[c], c);
    });
}
function Sve(t, e, n) {
  var r = e.selector,
    a = e.args;
  try {
    var s = r.apply(void 0, [t.getState()].concat(a));
    n(s);
  } catch (i) {
    n(i, !0);
  }
}
function yve(t, e, n) {
  var r = e.pattern,
    a = e.buffer,
    s = gR(a),
    i = yR(r),
    o = function l(c) {
      E0(c) || t.channel.take(l, i), s.put(c);
    },
    u = s.close;
  (s.close = function () {
    o.cancel(), u();
  }),
    t.channel.take(o, i),
    n(s);
}
function gve(t, e, n, r) {
  var a = r.task;
  n(a.isCancelled());
}
function vve(t, e, n) {
  e.flush(n);
}
function _ve(t, e, n, r) {
  var a = r.task;
  n(a.context[e]);
}
function bve(t, e, n, r) {
  var a = r.task;
  fR(a.context, e), n();
}
var Eve =
  ((Hr = {}),
  (Hr[Dge] = uve),
  (Hr[Gge] = ove),
  (Hr[Fge] = fve),
  (Hr[Uge] = mve),
  (Hr[Kge] = lve),
  (Hr[Bge] = cve),
  (Hr[Vge] = dve),
  (Hr[jge] = pve),
  (Hr[zge] = hve),
  (Hr[$ge] = Sve),
  (Hr[Wge] = yve),
  (Hr[qge] = gve),
  (Hr[Yge] = vve),
  (Hr[Xge] = _ve),
  (Hr[Qge] = bve),
  Hr);
function Tve(t, e, n) {
  var r = [],
    a,
    s = !1;
  u(t);
  var i = function () {
    return r;
  };
  function o(c) {
    e(), l(), n(c, !0);
  }
  function u(c) {
    r.push(c),
      (c.cont = function (d, p) {
        s ||
          (_0(r, c),
          (c.cont = Rr),
          p ? o(d) : (c === t && (a = d), r.length || ((s = !0), n(a))));
      });
  }
  function l() {
    s ||
      ((s = !0),
      r.forEach(function (c) {
        (c.cont = Rr), c.cancel();
      }),
      (r = []));
  }
  return { addTask: u, cancelAll: l, abort: o, getTasks: i };
}
function Oj(t, e) {
  return t + "?" + e;
}
function wve(t) {
  var e = gj(t);
  if (e) {
    var n = e.code,
      r = e.fileName,
      a = e.lineNumber,
      s = n + "  " + Oj(r, a);
    return s;
  }
  return "";
}
function u9(t) {
  var e = t.name,
    n = t.location;
  return n ? e + "  " + Oj(n.fileName, n.lineNumber) : e;
}
function Pve(t) {
  var e = Pge(function (n) {
    return n.cancelledTasks;
  }, t);
  return e.length
    ? ["Tasks cancelled due to error:"].concat(e).join(`
`)
    : "";
}
var bR = null,
  uy = [],
  Ive = function (e) {
    (e.crashedEffect = bR), uy.push(e);
  },
  Hj = function () {
    (bR = null), (uy.length = 0);
  },
  Cve = function (e) {
    bR = e;
  },
  Ave = function () {
    var e = uy[0],
      n = uy.slice(1),
      r = e.crashedEffect ? wve(e.crashedEffect) : null,
      a =
        "The above error occurred in task " +
        u9(e.meta) +
        (r
          ? ` 
 when executing effect ` + r
          : "");
    return [a].concat(
      n.map(function (s) {
        return "    created by " + u9(s.meta);
      }),
      [Pve(uy)]
    ).join(`
`);
  };
function Ove(t, e, n, r, a, s, i) {
  var o;
  i === void 0 && (i = Rr);
  var u = Rd,
    l,
    c,
    d = null,
    p = [],
    m = Object.create(n),
    y = Tve(
      e,
      function () {
        p.push.apply(
          p,
          y.getTasks().map(function (he) {
            return he.meta.name;
          })
        );
      },
      O
    );
  function I() {
    u === Rd && ((u = Wu), y.cancelAll(), O(Jh, !1));
  }
  function O(B, he) {
    if (!he)
      B === Jh ? (u = Wu) : u !== Wu && (u = Cj), (l = B), d && d.resolve(B);
    else {
      if (((u = Vb), Ive({ meta: a, cancelledTasks: p }), H.isRoot)) {
        var de = Ave();
        Hj(), t.onError(B, { sagaStack: de });
      }
      (c = B), d && d.reject(B);
    }
    H.cont(B, he),
      H.joiners.forEach(function (U) {
        U.cb(B, he);
      }),
      (H.joiners = null);
  }
  function g(B) {
    fR(m, B);
  }
  function C() {
    return (
      d || ((d = Zge()), u === Vb ? d.reject(c) : u !== Rd && d.resolve(l)),
      d.promise
    );
  }
  var H =
    ((o = {}),
    (o[mge] = !0),
    (o.id = r),
    (o.meta = a),
    (o.isRoot = s),
    (o.context = m),
    (o.joiners = []),
    (o.queue = y),
    (o.cancel = I),
    (o.cont = i),
    (o.end = O),
    (o.setContext = g),
    (o.toPromise = C),
    (o.isRunning = function () {
      return u === Rd;
    }),
    (o.isCancelled = function () {
      return u === Wu || (u === Rd && e.status === Wu);
    }),
    (o.isAborted = function () {
      return u === Vb;
    }),
    (o.result = function () {
      return l;
    }),
    (o.error = function () {
      return c;
    }),
    o);
  return H;
}
function T0(t, e, n, r, a, s, i) {
  var o = t.finalizeRunEffect(m);
  p.cancel = Rr;
  var u = { meta: a, cancel: d, status: Rd },
    l = Ove(t, u, n, r, a, s, i),
    c = { task: l, digestEffect: y };
  function d() {
    u.status === Rd && ((u.status = Wu), p(Jh));
  }
  return i && (i.cancel = l.cancel), p(), l;
  function p(I, O) {
    try {
      var g;
      O
        ? ((g = e.throw(I)), Hj())
        : mj(I)
        ? ((u.status = Wu),
          p.cancel(),
          (g = cl(e.return) ? e.return(Jh) : { done: !0, value: Jh }))
        : fj(I)
        ? (g = cl(e.return) ? e.return() : { done: !0 })
        : (g = e.next(I)),
        g.done
          ? (u.status !== Wu && (u.status = Cj), u.cont(g.value))
          : y(g.value, r, p);
    } catch (C) {
      if (u.status === Wu) throw C;
      (u.status = Vb), u.cont(C, !0);
    }
  }
  function m(I, O, g) {
    if (v0(I)) _R(I, g);
    else if (hR(I)) T0(t, I, l.context, O, a, !1, g);
    else if (I && I[pge]) {
      var C = Eve[I.type];
      C(t, I.payload, g, c);
    } else g(I);
  }
  function y(I, O, g, C) {
    C === void 0 && (C = "");
    var H = Aj();
    t.sagaMonitor &&
      t.sagaMonitor.effectTriggered({
        effectId: H,
        parentEffectId: O,
        label: C,
        effect: I,
      });
    var B;
    function he(de, U) {
      B ||
        ((B = !0),
        (g.cancel = Rr),
        t.sagaMonitor &&
          (U
            ? t.sagaMonitor.effectRejected(H, de)
            : t.sagaMonitor.effectResolved(H, de)),
        U && Cve(I),
        g(de, U));
    }
    (he.cancel = Rr),
      (g.cancel = function () {
        B ||
          ((B = !0),
          he.cancel(),
          (he.cancel = Rr),
          t.sagaMonitor && t.sagaMonitor.effectCancelled(H));
      }),
      o(I, H, he);
  }
}
function Hve(t, e) {
  for (
    var n = t.channel,
      r = n === void 0 ? Ij() : n,
      a = t.dispatch,
      s = t.getState,
      i = t.context,
      o = i === void 0 ? {} : i,
      u = t.sagaMonitor,
      l = t.effectMiddlewares,
      c = t.onError,
      d = c === void 0 ? Age : c,
      p = arguments.length,
      m = new Array(p > 2 ? p - 2 : 0),
      y = 2;
    y < p;
    y++
  )
    m[y - 2] = arguments[y];
  var I = e.apply(void 0, m),
    O = Aj();
  u &&
    ((u.rootSagaStarted = u.rootSagaStarted || Rr),
    (u.effectTriggered = u.effectTriggered || Rr),
    (u.effectResolved = u.effectResolved || Rr),
    (u.effectRejected = u.effectRejected || Rr),
    (u.effectCancelled = u.effectCancelled || Rr),
    (u.actionDispatched = u.actionDispatched || Rr),
    u.rootSagaStarted({ effectId: O, saga: e, args: m }));
  var g;
  if (l) {
    var C = Jge.apply(void 0, l);
    g = function (he) {
      return function (de, U, R) {
        var ge = function (we) {
          return he(we, U, R);
        };
        return C(ge)(de);
      };
    };
  } else g = wge;
  var H = {
    channel: r,
    dispatch: Oge(a),
    getState: s,
    sagaMonitor: u,
    onError: d,
    finalizeRunEffect: g,
  };
  return Ej(function () {
    var B = T0(H, I, o, O, mR(e), !0, void 0);
    return u && u.effectResolved(O, B), B;
  });
}
function Nve(t) {
  var e = t === void 0 ? {} : t,
    n = e.context,
    r = n === void 0 ? {} : n,
    a = e.channel,
    s = a === void 0 ? Ij() : a,
    i = e.sagaMonitor,
    o = yge(e, ["context", "channel", "sagaMonitor"]),
    u;
  function l(c) {
    var d = c.getState,
      p = c.dispatch;
    return (
      (u = Hve.bind(
        null,
        dT({}, o, {
          context: r,
          channel: s,
          dispatch: p,
          getState: d,
          sagaMonitor: i,
        })
      )),
      function (m) {
        return function (y) {
          i && i.actionDispatched && i.actionDispatched(y);
          var I = m(y);
          return s.put(y), I;
        };
      }
    );
  }
  return (
    (l.run = function () {
      return u.apply(void 0, arguments);
    }),
    (l.setContext = function (c) {
      fR(r, c);
    }),
    l
  );
}
var w0 = function (e) {
    return "@@redux-saga/" + e;
  },
  Rve = w0("CANCEL_PROMISE"),
  kve = w0("IO"),
  xve = w0("MULTICAST"),
  Lve = w0("SELF_CANCELLATION");
function U1() {
  return (
    (U1 = Object.assign
      ? Object.assign.bind()
      : function (t) {
          for (var e = 1; e < arguments.length; e++) {
            var n = arguments[e];
            for (var r in n)
              Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
          }
          return t;
        }),
    U1.apply(this, arguments)
  );
}
var Mve = function (e) {
    return e == null;
  },
  DC = function (e) {
    return e != null;
  },
  Zd = function (e) {
    return typeof e == "function";
  },
  Nj = function (e) {
    return typeof e == "string";
  },
  Rj = Array.isArray,
  l9 = function t(e) {
    return e && (Nj(e) || Gve(e) || Zd(e) || (Rj(e) && e.every(t)));
  },
  P0 = function (e) {
    return e && Zd(e.take) && Zd(e.close);
  },
  Dve = function (e) {
    return Zd(e) && e.hasOwnProperty("toString");
  },
  Gve = function (e) {
    return (
      !!e &&
      typeof Symbol == "function" &&
      e.constructor === Symbol &&
      e !== Symbol.prototype
    );
  },
  Fve = function (e) {
    return P0(e) && e[xve];
  },
  Uve = 2147483647;
function Kve(t, e) {
  e === void 0 && (e = !0);
  var n,
    r = new Promise(function (a) {
      n = setTimeout(a, Math.min(Uve, t), e);
    });
  return (
    (r[Rve] = function () {
      clearTimeout(n);
    }),
    r
  );
}
var Bve = function (e) {
    return e;
  },
  Vve = function (e) {
    throw e;
  },
  jve = function (e) {
    return { value: e, done: !0 };
  };
function zve(t, e, n) {
  e === void 0 && (e = Vve), n === void 0 && (n = "iterator");
  var r = {
    meta: { name: n },
    next: t,
    throw: e,
    return: jve,
    isSagaIterator: !0,
  };
  return (
    typeof Symbol < "u" &&
      (r[Symbol.iterator] = function () {
        return r;
      }),
    r
  );
}
var $ve = "Channel's Buffer overflow!",
  Wve = 1,
  kj = 3,
  qve = 4;
function Yve(t, e) {
  t === void 0 && (t = 10);
  var n = new Array(t),
    r = 0,
    a = 0,
    s = 0,
    i = function (c) {
      (n[a] = c), (a = (a + 1) % t), r++;
    },
    o = function () {
      if (r != 0) {
        var c = n[s];
        return (n[s] = null), r--, (s = (s + 1) % t), c;
      }
    },
    u = function () {
      for (var c = []; r; ) c.push(o());
      return c;
    };
  return {
    isEmpty: function () {
      return r == 0;
    },
    put: function (c) {
      if (r < t) i(c);
      else {
        var d;
        switch (e) {
          case Wve:
            throw new Error($ve);
          case kj:
            (n[a] = c), (a = (a + 1) % t), (s = a);
            break;
          case qve:
            (d = 2 * t),
              (n = u()),
              (r = n.length),
              (a = n.length),
              (s = 0),
              (n.length = d),
              (t = d),
              i(c);
            break;
        }
      }
    },
    take: o,
    flush: u,
  };
}
var Xve = function (e) {
    return Yve(e, kj);
  },
  GC = "TAKE",
  Qve = "PUT",
  Jve = "ALL",
  Zve = "RACE",
  e_e = "CALL",
  xj = "FORK",
  t_e = "CANCEL",
  n_e = "SELECT",
  s_e = "ACTION_CHANNEL",
  Mi = function (e, n) {
    var r;
    return (
      (r = {}),
      (r[kve] = !0),
      (r.combinator = !1),
      (r.type = e),
      (r.payload = n),
      r
    );
  },
  r_e = function (e) {
    return Mi(xj, U1({}, e.payload, { detached: !0 }));
  };
function ep(t, e) {
  if ((t === void 0 && (t = "*"), l9(t)))
    return (
      DC(e) &&
        console.warn(
          "take(pattern) takes one argument but two were provided. Consider passing an array for listening to several action types"
        ),
      Mi(GC, { pattern: t })
    );
  if (Fve(t) && DC(e) && l9(e)) return Mi(GC, { channel: t, pattern: e });
  if (P0(t))
    return (
      DC(e) &&
        console.warn(
          "take(channel) takes one argument but two were provided. Second argument is ignored."
        ),
      Mi(GC, { channel: t })
    );
}
function a_e(t, e) {
  return Mve(e) && ((e = t), (t = void 0)), Mi(Qve, { channel: t, action: e });
}
function i_e(t) {
  var e = Mi(Jve, t);
  return (e.combinator = !0), e;
}
function Lj(t) {
  var e = Mi(Zve, t);
  return (e.combinator = !0), e;
}
function Mj(t, e) {
  var n = null,
    r;
  return (
    Zd(t)
      ? (r = t)
      : (Rj(t) ? ((n = t[0]), (r = t[1])) : ((n = t.context), (r = t.fn)),
        n && Nj(r) && Zd(n[r]) && (r = n[r])),
    { context: n, fn: r, args: e }
  );
}
function ER(t) {
  for (
    var e = arguments.length, n = new Array(e > 1 ? e - 1 : 0), r = 1;
    r < e;
    r++
  )
    n[r - 1] = arguments[r];
  return Mi(e_e, Mj(t, n));
}
function xo(t) {
  for (
    var e = arguments.length, n = new Array(e > 1 ? e - 1 : 0), r = 1;
    r < e;
    r++
  )
    n[r - 1] = arguments[r];
  return Mi(xj, Mj(t, n));
}
function o_e(t) {
  for (
    var e = arguments.length, n = new Array(e > 1 ? e - 1 : 0), r = 1;
    r < e;
    r++
  )
    n[r - 1] = arguments[r];
  return r_e(xo.apply(void 0, [t].concat(n)));
}
function Dj(t) {
  return t === void 0 && (t = Lve), Mi(t_e, t);
}
function u_e(t) {
  t === void 0 && (t = Bve);
  for (
    var e = arguments.length, n = new Array(e > 1 ? e - 1 : 0), r = 1;
    r < e;
    r++
  )
    n[r - 1] = arguments[r];
  return Mi(n_e, { selector: t, args: n });
}
function l_e(t, e) {
  return Mi(s_e, { pattern: t, buffer: e });
}
var TR = ER.bind(null, Kve),
  c9 = function (e) {
    return { done: !0, value: e };
  },
  FC = {};
function fv(t) {
  return P0(t) ? "channel" : Dve(t) ? String(t) : Zd(t) ? t.name : String(t);
}
function mv(t, e, n) {
  var r,
    a,
    s,
    i = e;
  function o(u, l) {
    if (i === FC) return c9(u);
    if (l && !a) throw ((i = FC), l);
    r && r(u);
    var c = l ? t[a](l) : t[i]();
    return (
      (i = c.nextState),
      (s = c.effect),
      (r = c.stateUpdater),
      (a = c.errorState),
      i === FC ? c9(u) : s
    );
  }
  return zve(
    o,
    function (u) {
      return o(null, u);
    },
    n
  );
}
function c_e(t, e) {
  for (
    var n = arguments.length, r = new Array(n > 2 ? n - 2 : 0), a = 2;
    a < n;
    a++
  )
    r[a - 2] = arguments[a];
  var s = { done: !1, value: ep(t) },
    i = function (c) {
      return { done: !1, value: xo.apply(void 0, [e].concat(r, [c])) };
    },
    o,
    u = function (c) {
      return (o = c);
    };
  return mv(
    {
      q1: function () {
        return { nextState: "q2", effect: s, stateUpdater: u };
      },
      q2: function () {
        return { nextState: "q1", effect: i(o) };
      },
    },
    "q1",
    "takeEvery(" + fv(t) + ", " + e.name + ")"
  );
}
function d_e(t, e) {
  for (
    var n = arguments.length, r = new Array(n > 2 ? n - 2 : 0), a = 2;
    a < n;
    a++
  )
    r[a - 2] = arguments[a];
  var s = { done: !1, value: ep(t) },
    i = function (m) {
      return { done: !1, value: xo.apply(void 0, [e].concat(r, [m])) };
    },
    o = function (m) {
      return { done: !1, value: Dj(m) };
    },
    u,
    l,
    c = function (m) {
      return (u = m);
    },
    d = function (m) {
      return (l = m);
    };
  return mv(
    {
      q1: function () {
        return { nextState: "q2", effect: s, stateUpdater: d };
      },
      q2: function () {
        return u
          ? { nextState: "q3", effect: o(u) }
          : { nextState: "q1", effect: i(l), stateUpdater: c };
      },
      q3: function () {
        return { nextState: "q1", effect: i(l), stateUpdater: c };
      },
    },
    "q1",
    "takeLatest(" + fv(t) + ", " + e.name + ")"
  );
}
function p_e(t, e) {
  for (
    var n = arguments.length, r = new Array(n > 2 ? n - 2 : 0), a = 2;
    a < n;
    a++
  )
    r[a - 2] = arguments[a];
  var s = { done: !1, value: ep(t) },
    i = function (c) {
      return { done: !1, value: ER.apply(void 0, [e].concat(r, [c])) };
    },
    o,
    u = function (c) {
      return (o = c);
    };
  return mv(
    {
      q1: function () {
        return { nextState: "q2", effect: s, stateUpdater: u };
      },
      q2: function () {
        return { nextState: "q1", effect: i(o) };
      },
    },
    "q1",
    "takeLeading(" + fv(t) + ", " + e.name + ")"
  );
}
function h_e(t, e, n) {
  for (
    var r = arguments.length, a = new Array(r > 3 ? r - 3 : 0), s = 3;
    s < r;
    s++
  )
    a[s - 3] = arguments[s];
  var i,
    o,
    u = function () {
      return { done: !1, value: ep(o) };
    },
    l = function (I) {
      return { done: !1, value: xo.apply(void 0, [n].concat(a, [I])) };
    },
    c = { done: !1, value: TR(t) },
    d = function (I) {
      return (i = I);
    },
    p = function (I) {
      return (o = I);
    },
    m = !P0(e);
  return (
    m || p(e),
    mv(
      {
        q1: function () {
          var I = { done: !1, value: l_e(e, Xve(1)) };
          return { nextState: "q2", effect: I, stateUpdater: p };
        },
        q2: function () {
          return { nextState: "q3", effect: u(), stateUpdater: d };
        },
        q3: function () {
          return { nextState: "q4", effect: l(i) };
        },
        q4: function () {
          return { nextState: "q2", effect: c };
        },
      },
      m ? "q1" : "q2",
      "throttle(" + fv(e) + ", " + n.name + ")"
    )
  );
}
function f_e(t, e, n) {
  for (
    var r = arguments.length, a = new Array(r > 3 ? r - 3 : 0), s = 3;
    s < r;
    s++
  )
    a[s - 3] = arguments[s];
  var i,
    o,
    u = { done: !1, value: ep(e) },
    l = { done: !1, value: Lj({ action: ep(e), debounce: TR(t) }) },
    c = function (I) {
      return { done: !1, value: xo.apply(void 0, [n].concat(a, [I])) };
    },
    d = function (I) {
      return { done: !1, value: I };
    },
    p = function (I) {
      return (i = I);
    },
    m = function (I) {
      return (o = I);
    };
  return mv(
    {
      q1: function () {
        return { nextState: "q2", effect: u, stateUpdater: p };
      },
      q2: function () {
        return { nextState: "q3", effect: l, stateUpdater: m };
      },
      q3: function () {
        return o.debounce
          ? { nextState: "q1", effect: c(i) }
          : { nextState: "q2", effect: d(o.action), stateUpdater: p };
      },
    },
    "q1",
    "debounce(" + fv(e) + ", " + n.name + ")"
  );
}
function m_e(t, e) {
  for (
    var n = arguments.length, r = new Array(n > 2 ? n - 2 : 0), a = 2;
    a < n;
    a++
  )
    r[a - 2] = arguments[a];
  return xo.apply(void 0, [c_e, t, e].concat(r));
}
function S_e(t, e) {
  for (
    var n = arguments.length, r = new Array(n > 2 ? n - 2 : 0), a = 2;
    a < n;
    a++
  )
    r[a - 2] = arguments[a];
  return xo.apply(void 0, [d_e, t, e].concat(r));
}
function y_e(t, e) {
  for (
    var n = arguments.length, r = new Array(n > 2 ? n - 2 : 0), a = 2;
    a < n;
    a++
  )
    r[a - 2] = arguments[a];
  return xo.apply(void 0, [p_e, t, e].concat(r));
}
function g_e(t, e, n) {
  for (
    var r = arguments.length, a = new Array(r > 3 ? r - 3 : 0), s = 3;
    s < r;
    s++
  )
    a[s - 3] = arguments[s];
  return xo.apply(void 0, [h_e, t, e, n].concat(a));
}
function v_e(t, e, n) {
  for (
    var r = arguments.length, a = new Array(r > 3 ? r - 3 : 0), s = 3;
    s < r;
    s++
  )
    a[s - 3] = arguments[s];
  return xo.apply(void 0, [f_e, t, e, n].concat(a));
}
function* Zs(...t) {
  return yield ep(...t);
}
function* $e(...t) {
  return yield m_e(...t);
}
function* Pr(...t) {
  return yield S_e(...t);
}
function* Af(...t) {
  return yield y_e(...t);
}
function* D(...t) {
  return yield a_e(...t);
}
function* Me(...t) {
  return yield ER(...t);
}
function* Jr(...t) {
  return yield xo(...t);
}
function* K1(...t) {
  return yield o_e(...t);
}
function* I0(...t) {
  return yield Dj(...t);
}
function* Pe(...t) {
  return yield u_e(...t);
}
function* Bi(...t) {
  return yield TR(...t);
}
function* Gj(...t) {
  return yield g_e(...t);
}
function* __e(...t) {
  return yield v_e(...t);
}
function* Gn(...t) {
  return yield i_e(...t);
}
function* Of(...t) {
  return yield Lj(...t);
}
var sl =
  typeof globalThis < "u"
    ? globalThis
    : typeof window < "u"
    ? window
    : typeof global < "u"
    ? global
    : typeof self < "u"
    ? self
    : {};
function Lo(t) {
  return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default")
    ? t.default
    : t;
}
function Fj(t) {
  if (t.__esModule) return t;
  var e = t.default;
  if (typeof e == "function") {
    var n = function r() {
      return this instanceof r
        ? Reflect.construct(e, arguments, this.constructor)
        : e.apply(this, arguments);
    };
    n.prototype = e.prototype;
  } else n = {};
  return (
    Object.defineProperty(n, "__esModule", { value: !0 }),
    Object.keys(t).forEach(function (r) {
      var a = Object.getOwnPropertyDescriptor(t, r);
      Object.defineProperty(
        n,
        r,
        a.get
          ? a
          : {
              enumerable: !0,
              get: function () {
                return t[r];
              },
            }
      );
    }),
    n
  );
}
var Uj = { exports: {} };
(function (t) {
  var e = Object.prototype.hasOwnProperty,
    n = "~";
  function r() {}
  Object.create &&
    ((r.prototype = Object.create(null)), new r().__proto__ || (n = !1));
  function a(u, l, c) {
    (this.fn = u), (this.context = l), (this.once = c || !1);
  }
  function s(u, l, c, d, p) {
    if (typeof c != "function")
      throw new TypeError("The listener must be a function");
    var m = new a(c, d || u, p),
      y = n ? n + l : l;
    return (
      u._events[y]
        ? u._events[y].fn
          ? (u._events[y] = [u._events[y], m])
          : u._events[y].push(m)
        : ((u._events[y] = m), u._eventsCount++),
      u
    );
  }
  function i(u, l) {
    --u._eventsCount === 0 ? (u._events = new r()) : delete u._events[l];
  }
  function o() {
    (this._events = new r()), (this._eventsCount = 0);
  }
  (o.prototype.eventNames = function () {
    var l = [],
      c,
      d;
    if (this._eventsCount === 0) return l;
    for (d in (c = this._events)) e.call(c, d) && l.push(n ? d.slice(1) : d);
    return Object.getOwnPropertySymbols
      ? l.concat(Object.getOwnPropertySymbols(c))
      : l;
  }),
    (o.prototype.listeners = function (l) {
      var c = n ? n + l : l,
        d = this._events[c];
      if (!d) return [];
      if (d.fn) return [d.fn];
      for (var p = 0, m = d.length, y = new Array(m); p < m; p++)
        y[p] = d[p].fn;
      return y;
    }),
    (o.prototype.listenerCount = function (l) {
      var c = n ? n + l : l,
        d = this._events[c];
      return d ? (d.fn ? 1 : d.length) : 0;
    }),
    (o.prototype.emit = function (l, c, d, p, m, y) {
      var I = n ? n + l : l;
      if (!this._events[I]) return !1;
      var O = this._events[I],
        g = arguments.length,
        C,
        H;
      if (O.fn) {
        switch ((O.once && this.removeListener(l, O.fn, void 0, !0), g)) {
          case 1:
            return O.fn.call(O.context), !0;
          case 2:
            return O.fn.call(O.context, c), !0;
          case 3:
            return O.fn.call(O.context, c, d), !0;
          case 4:
            return O.fn.call(O.context, c, d, p), !0;
          case 5:
            return O.fn.call(O.context, c, d, p, m), !0;
          case 6:
            return O.fn.call(O.context, c, d, p, m, y), !0;
        }
        for (H = 1, C = new Array(g - 1); H < g; H++) C[H - 1] = arguments[H];
        O.fn.apply(O.context, C);
      } else {
        var B = O.length,
          he;
        for (H = 0; H < B; H++)
          switch (
            (O[H].once && this.removeListener(l, O[H].fn, void 0, !0), g)
          ) {
            case 1:
              O[H].fn.call(O[H].context);
              break;
            case 2:
              O[H].fn.call(O[H].context, c);
              break;
            case 3:
              O[H].fn.call(O[H].context, c, d);
              break;
            case 4:
              O[H].fn.call(O[H].context, c, d, p);
              break;
            default:
              if (!C)
                for (he = 1, C = new Array(g - 1); he < g; he++)
                  C[he - 1] = arguments[he];
              O[H].fn.apply(O[H].context, C);
          }
      }
      return !0;
    }),
    (o.prototype.on = function (l, c, d) {
      return s(this, l, c, d, !1);
    }),
    (o.prototype.once = function (l, c, d) {
      return s(this, l, c, d, !0);
    }),
    (o.prototype.removeListener = function (l, c, d, p) {
      var m = n ? n + l : l;
      if (!this._events[m]) return this;
      if (!c) return i(this, m), this;
      var y = this._events[m];
      if (y.fn)
        y.fn === c && (!p || y.once) && (!d || y.context === d) && i(this, m);
      else {
        for (var I = 0, O = [], g = y.length; I < g; I++)
          (y[I].fn !== c || (p && !y[I].once) || (d && y[I].context !== d)) &&
            O.push(y[I]);
        O.length ? (this._events[m] = O.length === 1 ? O[0] : O) : i(this, m);
      }
      return this;
    }),
    (o.prototype.removeAllListeners = function (l) {
      var c;
      return (
        l
          ? ((c = n ? n + l : l), this._events[c] && i(this, c))
          : ((this._events = new r()), (this._eventsCount = 0)),
        this
      );
    }),
    (o.prototype.off = o.prototype.removeListener),
    (o.prototype.addListener = o.prototype.on),
    (o.prefixed = n),
    (o.EventEmitter = o),
    (t.exports = o);
})(Uj);
var b_e = Uj.exports,
  E_e = "Invariant failed";
function T_e(t, e) {
  if (!t) throw new Error(E_e);
}
class _r extends Error {
  constructor({ statusText: e, status: n, responseJSON: r, ignorable: a }) {
    super(e),
      (this.status = 0),
      (this.statusText = ""),
      (this.name = "HttpError"),
      (this.ignorable = !1),
      (this.status = n),
      (this.statusText = e),
      (this.responseJSON = r),
      (this.ignorable = a ?? this.ignorable);
  }
  static connectionAborted() {
    return new _r({ status: 0, statusText: "error", ignorable: !0 });
  }
  static ignorableAPIError(e) {
    return e instanceof _r && (e.status > 400 || e.ignorable);
  }
  static networkError(e) {
    return e instanceof _r && (e.status < 100 || e.status >= 600);
  }
}
class Md extends Error {
  constructor(e, n, r = 500, a) {
    super(e),
      (this.requestId = n),
      (this.status = r),
      (this.payload = a),
      (this.safeToLog = !0);
  }
  static fromEvent(e, n, r) {
    return new Md("Sync transport error", n, e, r);
  }
}
const Zh = {
    UNAUTHORIZED: "UNAUTHORIZED",
    FORBIDDEN: "FORBIDDEN",
    BLOCK_ACCESS: "BLOCK_ACCESS",
  },
  d9 = -104;
class Sv extends Error {
  constructor() {
    super("We could not verify the SSL certificate."),
      (this.name = "SSLVerificationError"),
      (this.status = d9);
  }
  static isInstanceOf(e) {
    return e === d9;
  }
}
const p9 = { token: "Token", temp: "TempToken", device: "DeviceToken" };
class w_e extends b_e.EventEmitter {
  constructor({
    base_url: e,
    client_version: n,
    platform: r,
    api_token: a = "",
    isSSLVerificationFailedCallback: s = async () => !1,
  }) {
    super(),
      (this.base_url = e),
      (this.client_version = n),
      (this.platform = r),
      (this.api_token = a),
      (this.isSSLVerificationFailedCallback = s);
  }
  get baseWSUrl() {
    const e = this.base_url !== "" ? this.base_url : window.origin;
    return T_e(e.startsWith("http")), e.replace(/^http/, "ws");
  }
  getTokenType(e) {
    return p9[e] || p9.token;
  }
  makeAuthorizationHeader(e = this.api_token, n = "device") {
    return `${this.getTokenType(n)} ${e}`;
  }
  getDefaultRequestOptions() {
    return {
      token: this.api_token,
      tokenType: "device",
      options: { method: "GET" },
      shouldEmitErrorEvents: !0,
    };
  }
  getModifiedRequestOptions(e) {
    return { ...this.getDefaultRequestOptions(), ...e };
  }
  getDefaultHeaders(e) {
    return new Headers({
      ...this.generateAuthHeaders(e),
      "X-DEVICE-APP-VERSION": this.client_version,
      "X-DEVICE-PLATFORM": this.platform,
    });
  }
  makeRequest(e, n) {
    const r = this.getDefaultHeaders(n),
      a = this.generateUrl(e);
    return new Request(a, { headers: r, ...(n.options || {}) });
  }
  handleFailedRequest(e) {
    switch (e.status) {
      case 401:
        this.emit(Zh.UNAUTHORIZED);
        break;
      case 403:
        this.emit(Zh.FORBIDDEN);
        break;
      case 490:
        this.emit(Zh.BLOCK_ACCESS);
        break;
    }
  }
  async downloadAsBlob(e, n) {
    return this.http(e, n, I_e);
  }
  async http(e, n, r = P_e) {
    const a = new _r({ status: -1, statusText: "" }),
      s = _r.connectionAborted(),
      i = new Sv();
    try {
      const o = await fetch(e),
        u = await r(o);
      if (
        (!o.ok && n.shouldEmitErrorEvents && this.handleFailedRequest(o), !o.ok)
      )
        throw (
          ((a.message = o.statusText),
          (a.status = o.status),
          (a.statusText = o.statusText),
          (a.responseJSON = u),
          a)
        );
      return u;
    } catch (o) {
      throw (await this.isSSLVerificationFailedCallback())
        ? i
        : o instanceof _r
        ? o
        : s;
    }
  }
  generateAuthHeaders(e) {
    return {
      "content-type": "application/json; charset=utf-8",
      authorization: this.makeAuthorizationHeader(
        e == null ? void 0 : e.token,
        e == null ? void 0 : e.tokenType
      ),
    };
  }
  generateUrl(e) {
    return `${this.base_url}${e}`;
  }
  async get(e, n = this.getDefaultRequestOptions()) {
    const r = this.getModifiedRequestOptions(n),
      a = this.makeRequest(e, r);
    return this.http(a, r);
  }
  async post(e, n = {}, r = {}) {
    const a = this.getModifiedRequestOptions({
        ...r,
        options: { method: "POST", body: JSON.stringify(n) },
      }),
      s = this.makeRequest(e, a);
    return this.http(s, a);
  }
  async put(e, n, r = {}) {
    const a = this.getModifiedRequestOptions({
        ...r,
        options: { method: "PUT", body: JSON.stringify(n) },
      }),
      s = this.makeRequest(e, a);
    return this.http(s, a);
  }
  async patch(e, n, r = {}) {
    const a = this.getModifiedRequestOptions({
        ...r,
        options: { method: "PATCH", body: JSON.stringify(n) },
      }),
      s = this.makeRequest(e, a);
    return this.http(s, a);
  }
  async delete(e, n = void 0, r = {}) {
    const a = this.getModifiedRequestOptions({
        ...r,
        options: { method: "DELETE", body: JSON.stringify(n) },
      }),
      s = this.makeRequest(e, a);
    return this.http(s, a);
  }
  async download(e, n = this.getDefaultRequestOptions()) {
    const r = this.getModifiedRequestOptions(n),
      a = this.makeRequest(e, r);
    return this.downloadAsBlob(a, r);
  }
  updateApiToken(e) {
    this.api_token = e;
  }
  withPagination(e, n) {
    return this.withQueryString(e, n);
  }
  withQueryString(e, n) {
    const r = new URLSearchParams();
    for (const [a, s] of Object.entries(n)) r.append(a, s.toString());
    return `${e}?${r.toString()}`;
  }
}
async function P_e(t) {
  try {
    return await t.json();
  } catch {
    return null;
  }
}
async function I_e(t) {
  try {
    return await t.blob();
  } catch {
    return null;
  }
}
var B1 = { exports: {} },
  h9 =
    (typeof crypto < "u" &&
      crypto.getRandomValues &&
      crypto.getRandomValues.bind(crypto)) ||
    (typeof msCrypto < "u" &&
      typeof window.msCrypto.getRandomValues == "function" &&
      msCrypto.getRandomValues.bind(msCrypto));
if (h9) {
  var f9 = new Uint8Array(16);
  B1.exports = function () {
    return h9(f9), f9;
  };
} else {
  var m9 = new Array(16);
  B1.exports = function () {
    for (var e = 0, n; e < 16; e++)
      e & 3 || (n = Math.random() * 4294967296),
        (m9[e] = (n >>> ((e & 3) << 3)) & 255);
    return m9;
  };
}
var C_e = B1.exports,
  Kj = [];
for (var G_ = 0; G_ < 256; ++G_) Kj[G_] = (G_ + 256).toString(16).substr(1);
function A_e(t, e) {
  var n = e || 0,
    r = Kj;
  return [
    r[t[n++]],
    r[t[n++]],
    r[t[n++]],
    r[t[n++]],
    "-",
    r[t[n++]],
    r[t[n++]],
    "-",
    r[t[n++]],
    r[t[n++]],
    "-",
    r[t[n++]],
    r[t[n++]],
    "-",
    r[t[n++]],
    r[t[n++]],
    r[t[n++]],
    r[t[n++]],
    r[t[n++]],
    r[t[n++]],
  ].join("");
}
var O_e = A_e,
  H_e = C_e,
  N_e = O_e;
function R_e(t, e, n) {
  var r = (e && n) || 0;
  typeof t == "string" &&
    ((e = t === "binary" ? new Array(16) : null), (t = null)),
    (t = t || {});
  var a = t.random || (t.rng || H_e)();
  if (((a[6] = (a[6] & 15) | 64), (a[8] = (a[8] & 63) | 128), e))
    for (var s = 0; s < 16; ++s) e[r + s] = a[s];
  return e || N_e(a);
}
var k_e = R_e;
const x_e = Lo(k_e),
  L_e = "/ws/v5/terminal/sync/";
class M_e {
  constructor(e, n, r) {
    (this.loginPayload = n),
      (this.abortSignal = r),
      (this.endpoint = `${e}${L_e}`);
  }
  async run(e) {
    const n = x_e(),
      r = JSON.stringify({
        action: "login",
        request_id: n,
        payload: this.loginPayload,
      }),
      a = JSON.stringify({ action: "sync_diff", request_id: n, payload: e });
    return new Promise((s, i) => {
      const o = new WebSocket(this.endpoint);
      this.abortSignal.addEventListener("abort", u),
        (o.onerror = () => {
          this.abortSignal.removeEventListener("abort", u),
            i(new Md("WebSocket error", n));
        }),
        (o.onclose = () => {
          this.abortSignal.removeEventListener("abort", u),
            i(new Md("WebSocket connection closed", n));
        }),
        (o.onopen = () => {
          o.send(r);
        }),
        (o.onmessage = (l) => {
          const c = JSON.parse(l.data);
          c.action === "login" && o.send(a),
            c.action === "sync_diff" && (s(c.payload), o.close());
          const { status: d } = c;
          d >= 400 && (i(Md.fromEvent(d, n, c)), o.close());
        });
      function u() {
        i(new Md("Request aborted", n)), o.close();
      }
    });
  }
}
const _t = {
  bulkAccount: "/api/v4/bulk/account/",
  userProfile: "/api/v3/account/profile/",
  subscription: "/api/v3/subscription/",
  settings: "/api/v3/setting/mobile/",
  securityToken: "/api/v4/auth/security/token/",
  billingInfo: "/api/v3/account/billing_info/",
  changeEmail: "/api/v4/user/email/",
  confirmEmail: "/api/v2/account/email/confirm/",
  changePassword: "/api/v4/auth/device/password/",
  changePasswordWithSecurityToken: "/api/v4.1/auth/device/password/",
  resetPassword: "/api/v3/password/reset/",
  accountRecovery: "/api/v4/auth/device/password/recovery/",
  verificationCode: "/api/v3/user/password/recovery/verification-code/",
  deleteAccount: "/api/v4/account/delete/",
  registerUserAuthy: "/api/v4.1/auth/otp/authy/register/",
  registerUserTotp: "/api/v4.1/auth/otp/totp/register/",
  enableTwoFactorAuth: "/api/v4/auth/otp/enable/",
  disableTwoFactorAuth: "/api/v4/auth/otp/disable/",
  regenerateSpecs: "/api/v3/crypto/regenerate/",
  encryptionKey: "/api/v4/keyserver/key/encryption/",
  keyPair: "/api/v3/keyserver/key/my/",
  teamPublicKeys: "/api/v3/keyserver/key/team/",
  migrateToSRP: "/api/v3/user/srp/",
  srpSalt: "/api/v3/user/srp/initial-data/",
  staleEncryptionDevicesList: "/api/v3/auth/device/stale-encryption/",
  sync: "/api/v4/terminal/sync/",
  syncWithoutSharedTeamData: "/api/v3/terminal/bulk/",
  history: "/api/v3/terminal/history/",
  historyBulk: "/api/v4/terminal/history/bulk/",
  historyBulkClear: "/api/v3/terminal/history/bulk/clear/",
  inAppMessages: "/api/v3/in-app-messages/",
  getUserAvatar: (t) => `/api/v4/account/${t}/avatar/`,
  updateDevice: "/api/v3/user/device/current/",
  deviceLogin: "/api/v3.3/auth/device/login/",
  deviceLogout: "/api/v3/auth/device/logout/current/",
  teamTrial: "/api/v4/team/trial/",
  deactivateTeamTrial: "/api/v4.1/team/trial/deactivate/",
  extendTeamTrial: "/api/v4/team/trial/extend/",
  teamInvite: "/api/v3/team/invite/",
  teamSeats: "/api/v3/team/seats/occupied/",
  teamMembersStaleEncryption: "/api/v3/team/member/stale-encryption/",
  teamMembers: "/api/v3/team/member/",
  authorizedKeys: "/api/v4/terminal/authorized-keys/",
  modifyTeam: "/api/v3/team/modify/",
  generateInvitationLink: "/api/v4/team/invite/url/",
  vaults: "/api/v4.1/team/vault/",
  vault: (t) => `/api/v4.1/team/vault/${encodeURIComponent(t)}/`,
  vaultEncryptionKey: "/api/v4/team/vault/keys/",
  membersVaults: "/api/v4/team/vault/members/",
  centrifugoToken: "/api/v3/auth/device/centrifugo/token/",
  centrifugoPrivateSubscriptionToken:
    "/api/v3/auth/device/centrifugo/subscribe/token/",
  centrifugoWebsocket: "/centrifugo/connection/websocket",
  windowsServiceTicket: "/api/v3/subscription/microsoft/service_ticket/",
  productboardJwt: "/api/v4/user/productboard/jwt/",
  sendFeedback: "/api/v4.1/nps/survey/",
  detectSsoAction: "/api/v4.1/auth/sso/firebase/detect_action/",
  checkEmail: "/api/v4.1/auth/sso/domain/check_email/",
  signalingToken: "/api/v4/auth/device/signaling/",
  signalingConfiguration: "/signaling/configuration/",
  generateStripeCheckoutUrl: "/api/v4.1/team/trial/checkout-page/",
  shellAssist: "/api/v4/terminal/shell-assist/",
  markAsExecuted: "/api/v4/terminal/shell-assist/mark_as_executed",
};
class D_e extends w_e {
  bulkAccount() {
    return this.get(_t.bulkAccount);
  }
  getUserProfile() {
    return this.get(_t.userProfile);
  }
  login(e) {
    return this.post(_t.deviceLogin, e, { shouldEmitErrorEvents: !1 });
  }
  updateDevice(e) {
    return this.put(_t.updateDevice, e);
  }
  logout() {
    return this.delete(_t.deviceLogout, null, { shouldEmitErrorEvents: !1 });
  }
  getProductBoardToken() {
    return this.get(_t.productboardJwt);
  }
  getDataSync(e, n) {
    return e
      ? this.get(
          this.withQueryString(_t.sync, { last_synced__gte: e.lastSynced }),
          { signal: n }
        )
      : this.get(_t.sync);
  }
  getOnlyPersonalDataSync(e, n) {
    return e != null
      ? this.get(
          this.withQueryString(_t.syncWithoutSharedTeamData, {
            last_synced__gte: e.lastSynced,
          }),
          { signal: n }
        )
      : this.get(_t.syncWithoutSharedTeamData);
  }
  sync(e, n) {
    return this.post(_t.sync, e, { signal: n });
  }
  async wsSync(e, n) {
    const r = {
      device_token: this.api_token,
      device_version: this.client_version,
    };
    return new M_e(this.baseWSUrl, r, n).run(e);
  }
  syncOnlyPersonalData(e) {
    return this.post(_t.syncWithoutSharedTeamData, e);
  }
  regenerateSpecs() {
    return this.get(_t.regenerateSpecs);
  }
  changePassword(e) {
    return this.post(_t.changePassword, e);
  }
  changePasswordWithSecurityToken(e) {
    return this.post(_t.changePasswordWithSecurityToken, e);
  }
  accountRecovery(e) {
    return this.post(_t.accountRecovery, e);
  }
  changeEmail(e) {
    return this.post(_t.changeEmail, e);
  }
  deleteAccount(e) {
    return this.post(_t.deleteAccount, e);
  }
  resetPassword(e) {
    return this.post(_t.resetPassword, e);
  }
  sendVerificationCode() {
    return this.post(_t.verificationCode);
  }
  confirmEmail() {
    return this.get(_t.confirmEmail);
  }
  getSettings() {
    return this.get(_t.settings);
  }
  updateSettings(e) {
    return this.put(_t.settings, e);
  }
  updateBillingInformation(e) {
    return this.put(_t.billingInfo, e);
  }
  registerUserAuthy(e) {
    return this.post(_t.registerUserAuthy, e);
  }
  otpRegisterProviderTotp() {
    return this.post(_t.registerUserTotp);
  }
  enableTwoFactorAuth(e) {
    return this.post(_t.enableTwoFactorAuth, e);
  }
  disableTwoFactorAuth(e) {
    return this.post(_t.disableTwoFactorAuth, e);
  }
  modifyTeam(e) {
    return this.patch(_t.modifyTeam, e);
  }
  getWindowsServiceTicket() {
    return this.get(_t.windowsServiceTicket);
  }
  validateReceipt(e) {
    return this.post(_t.subscription, e);
  }
  getEncryptionKey() {
    return this.get(_t.encryptionKey);
  }
  uploadTeamEncryptionKey(e) {
    return this.post(_t.encryptionKey, e);
  }
  getKeyPair() {
    return this.get(_t.keyPair);
  }
  setKeyPair(e) {
    return this.post(_t.keyPair, e);
  }
  getVaultKeys(e) {
    return e != null && e.background
      ? this.get(this.withQueryString(_t.vaultEncryptionKey, { ...e }))
      : this.get(_t.vaultEncryptionKey);
  }
  addMemberToVault(e) {
    return this.post(_t.vaultEncryptionKey, e);
  }
  getVaults(e) {
    return e != null && e.background
      ? this.get(this.withQueryString(_t.vaults, { ...e }))
      : this.get(_t.vaults);
  }
  createVault(e) {
    return this.post(_t.vaults, e);
  }
  updateVault(e, n) {
    return this.patch(_t.vault(e), n);
  }
  deleteVault(e) {
    return this.delete(_t.vault(e));
  }
  getMembersVaults() {
    return this.get(_t.membersVaults);
  }
  getPublicTeamKeys() {
    return this.get(_t.teamPublicKeys);
  }
  getMemberPublicKey(e) {
    return this.get(this.withQueryString(_t.teamPublicKeys, { user_id: e }));
  }
  getCentrifugoToken() {
    return this.get(_t.centrifugoToken);
  }
  createTeamTrial(e) {
    return this.post(_t.teamTrial, e, { shouldEmitErrorEvents: !1 });
  }
  inviteTeamMember(e) {
    return this.post(_t.teamInvite, e);
  }
  getTeamInvitesList(e) {
    return this.get(this.withPagination(_t.teamInvite, e));
  }
  getTeamSeatsList(e) {
    return this.get(this.withPagination(_t.teamSeats, e));
  }
  getTeamMembersList(e) {
    return this.get(this.withPagination(_t.teamMembers, e));
  }
  getTeamMembersStaleEncryptionList(e) {
    return this.get(this.withPagination(_t.teamMembersStaleEncryption, e));
  }
  getDataForTeamTrialDeactivation() {
    return this.get(_t.deactivateTeamTrial);
  }
  deactivateTeamTrial(e) {
    return this.post(_t.deactivateTeamTrial, e);
  }
  getSecurityToken(e) {
    return this.post(_t.securityToken, e);
  }
  getInAppMessages(e) {
    return this.get(this.withPagination(_t.inAppMessages, e));
  }
  getStaleEncryptionDevicesList(e) {
    return this.get(this.withPagination(_t.staleEncryptionDevicesList, e));
  }
  migrateToSRP(e) {
    return this.post(_t.migrateToSRP, e);
  }
  generateSRPSalt() {
    return this.post(_t.srpSalt);
  }
  sendAppFeedback(e) {
    return this.post(_t.sendFeedback, e);
  }
  getHistory(e) {
    return e.limit === 0
      ? this.get(_t.history)
      : this.get(this.withPagination(_t.history, e));
  }
  syncHistory(e) {
    return this.post(_t.historyBulk, e);
  }
  clearHistory() {
    return this.delete(_t.historyBulkClear);
  }
  sendPersonalPublicKeyForTeamMultiKey(e) {
    return this.post(_t.authorizedKeys, e);
  }
  getAuthorizedKeys() {
    return this.get(_t.authorizedKeys);
  }
  getUserAvatar(e) {
    return this.download(_t.getUserAvatar(e));
  }
  detectSsoAction(e) {
    return this.post(_t.detectSsoAction, e, { shouldEmitErrorEvents: !1 });
  }
  extendTeamTrial() {
    return this.patch(_t.extendTeamTrial, {});
  }
  getSignalingToken() {
    return this.get(_t.signalingToken);
  }
  getSignalingConfiguration() {
    return this.get(_t.signalingConfiguration);
  }
  generateInvitationLink() {
    return this.post(_t.generateInvitationLink);
  }
  generateStripeCheckoutUrl() {
    return this.post(_t.generateStripeCheckoutUrl);
  }
  queryWhetherUserESSO(e) {
    return this.post(_t.checkEmail, e, { shouldEmitErrorEvents: !1 });
  }
  initCustomerExperience() {
    return this.post("/api/v4.2/survey/ces/dialog-interaction/init/");
  }
  sendCustomerExperience(e) {
    return this.post("/api/v4.2/survey/ces/dialog-interaction/", e);
  }
  getShellAssistAnswer(e) {
    return this.post(_t.shellAssist, e);
  }
  postShellAssistAnswer(e) {
    return this.post(`${_t.markAsExecuted}/`, { id: e.id });
  }
  retrieveOnboardingAttributes() {
    return this.get("/api/v4/marketing/onboarding/");
  }
  skipTrialOnboardingInviteStep(e) {
    const { data: n, id: r } = e;
    return this.put(`/api/v4/marketing/onboarding/${r}/`, n);
  }
  queryWhetherEmailIsAvailable(e) {
    return this.post("/api/v4.1/auth/email/availability/", e, {
      shouldEmitErrorEvents: !1,
    });
  }
  sendEmailVerificationCode(e) {
    return this.post("/api/v4/account/email/code/send/", e, {
      shouldEmitErrorEvents: !1,
    });
  }
  queryWhetherEmailVerificationCodeIsValid(e) {
    return this.post("/api/v4/account/email/code/validate/", e, {
      shouldEmitErrorEvents: !1,
    });
  }
  getPlansPrices() {
    return this.get("/api/v4/subscription/pricing/");
  }
  requestUpgradeToMultipleVaults() {
    return this.post("/api/v4/team/vault/request-to-upgrade-plan/");
  }
  grantAccessToVaults(e) {
    return this.post("/api/v4.1/team/vault/grant-access/", e);
  }
}
function id(t, e) {
  for (var n = -1, r = t == null ? 0 : t.length, a = 0, s = []; ++n < r; ) {
    var i = t[n];
    e(i, n, t) && (s[a++] = i);
  }
  return s;
}
function Bj(t) {
  return function (e, n, r) {
    for (var a = -1, s = Object(e), i = r(e), o = i.length; o--; ) {
      var u = i[t ? o : ++a];
      if (n(s[u], u, s) === !1) break;
    }
    return e;
  };
}
var G_e = Bj();
const wR = G_e;
function PR(t, e) {
  for (var n = -1, r = Array(t); ++n < t; ) r[n] = e(n);
  return r;
}
var F_e = "[object Arguments]";
function S9(t) {
  return Bs(t) && wa(t) == F_e;
}
var Vj = Object.prototype,
  U_e = Vj.hasOwnProperty,
  K_e = Vj.propertyIsEnumerable,
  B_e = S9(
    (function () {
      return arguments;
    })()
  )
    ? S9
    : function (t) {
        return Bs(t) && U_e.call(t, "callee") && !K_e.call(t, "callee");
      };
const Fc = B_e;
var V_e = Array.isArray;
const an = V_e;
function pm() {
  return !1;
}
var jj = typeof exports == "object" && exports && !exports.nodeType && exports,
  y9 = jj && typeof module == "object" && module && !module.nodeType && module,
  j_e = y9 && y9.exports === jj,
  g9 = j_e ? Or.Buffer : void 0,
  z_e = g9 ? g9.isBuffer : void 0,
  $_e = z_e || pm;
const dl = $_e;
var W_e = 9007199254740991,
  q_e = /^(?:0|[1-9]\d*)$/;
function Pl(t, e) {
  var n = typeof t;
  return (
    (e = e ?? W_e),
    !!e &&
      (n == "number" || (n != "symbol" && q_e.test(t))) &&
      t > -1 &&
      t % 1 == 0 &&
      t < e
  );
}
var Y_e = 9007199254740991;
function yv(t) {
  return typeof t == "number" && t > -1 && t % 1 == 0 && t <= Y_e;
}
var X_e = "[object Arguments]",
  Q_e = "[object Array]",
  J_e = "[object Boolean]",
  Z_e = "[object Date]",
  ebe = "[object Error]",
  tbe = "[object Function]",
  nbe = "[object Map]",
  sbe = "[object Number]",
  rbe = "[object Object]",
  abe = "[object RegExp]",
  ibe = "[object Set]",
  obe = "[object String]",
  ube = "[object WeakMap]",
  lbe = "[object ArrayBuffer]",
  cbe = "[object DataView]",
  dbe = "[object Float32Array]",
  pbe = "[object Float64Array]",
  hbe = "[object Int8Array]",
  fbe = "[object Int16Array]",
  mbe = "[object Int32Array]",
  Sbe = "[object Uint8Array]",
  ybe = "[object Uint8ClampedArray]",
  gbe = "[object Uint16Array]",
  vbe = "[object Uint32Array]",
  bs = {};
bs[dbe] =
  bs[pbe] =
  bs[hbe] =
  bs[fbe] =
  bs[mbe] =
  bs[Sbe] =
  bs[ybe] =
  bs[gbe] =
  bs[vbe] =
    !0;
bs[X_e] =
  bs[Q_e] =
  bs[lbe] =
  bs[J_e] =
  bs[cbe] =
  bs[Z_e] =
  bs[ebe] =
  bs[tbe] =
  bs[nbe] =
  bs[sbe] =
  bs[rbe] =
  bs[abe] =
  bs[ibe] =
  bs[obe] =
  bs[ube] =
    !1;
function _be(t) {
  return Bs(t) && yv(t.length) && !!bs[wa(t)];
}
function mi(t) {
  return function (e) {
    return t(e);
  };
}
var zj = typeof exports == "object" && exports && !exports.nodeType && exports,
  ly = zj && typeof module == "object" && module && !module.nodeType && module,
  bbe = ly && ly.exports === zj,
  UC = bbe && nj.process,
  Ebe = (function () {
    try {
      var t = ly && ly.require && ly.require("util").types;
      return t || (UC && UC.binding && UC.binding("util"));
    } catch {}
  })();
const Vi = Ebe;
var v9 = Vi && Vi.isTypedArray,
  Tbe = v9 ? mi(v9) : _be;
const Tp = Tbe;
var wbe = Object.prototype,
  Pbe = wbe.hasOwnProperty;
function $j(t, e) {
  var n = an(t),
    r = !n && Fc(t),
    a = !n && !r && dl(t),
    s = !n && !r && !a && Tp(t),
    i = n || r || a || s,
    o = i ? PR(t.length, String) : [],
    u = o.length;
  for (var l in t)
    (e || Pbe.call(t, l)) &&
      !(
        i &&
        (l == "length" ||
          (a && (l == "offset" || l == "parent")) ||
          (s && (l == "buffer" || l == "byteLength" || l == "byteOffset")) ||
          Pl(l, u))
      ) &&
      o.push(l);
  return o;
}
var Ibe = Object.prototype;
function gv(t) {
  var e = t && t.constructor,
    n = (typeof e == "function" && e.prototype) || Ibe;
  return t === n;
}
var Cbe = rj(Object.keys, Object);
const Abe = Cbe;
var Obe = Object.prototype,
  Hbe = Obe.hasOwnProperty;
function IR(t) {
  if (!gv(t)) return Abe(t);
  var e = [];
  for (var n in Object(t)) Hbe.call(t, n) && n != "constructor" && e.push(n);
  return e;
}
function ws(t) {
  var e = typeof t;
  return t != null && (e == "object" || e == "function");
}
var Nbe = "[object AsyncFunction]",
  Rbe = "[object Function]",
  kbe = "[object GeneratorFunction]",
  xbe = "[object Proxy]";
function Tu(t) {
  if (!ws(t)) return !1;
  var e = wa(t);
  return e == Rbe || e == kbe || e == Nbe || e == xbe;
}
function Pa(t) {
  return t != null && yv(t.length) && !Tu(t);
}
function dr(t) {
  return Pa(t) ? $j(t) : IR(t);
}
function wu(t, e) {
  return t && wR(t, e, dr);
}
function Wj(t, e) {
  return function (n, r) {
    if (n == null) return n;
    if (!Pa(n)) return t(n, r);
    for (
      var a = n.length, s = e ? a : -1, i = Object(n);
      (e ? s-- : ++s < a) && r(i[s], s, i) !== !1;

    );
    return n;
  };
}
var Lbe = Wj(wu);
const od = Lbe;
function qj(t, e) {
  var n = [];
  return (
    od(t, function (r, a, s) {
      e(r, a, s) && n.push(r);
    }),
    n
  );
}
function Mbe() {
  (this.__data__ = []), (this.size = 0);
}
function qi(t, e) {
  return t === e || (t !== t && e !== e);
}
function C0(t, e) {
  for (var n = t.length; n--; ) if (qi(t[n][0], e)) return n;
  return -1;
}
var Dbe = Array.prototype,
  Gbe = Dbe.splice;
function Fbe(t) {
  var e = this.__data__,
    n = C0(e, t);
  if (n < 0) return !1;
  var r = e.length - 1;
  return n == r ? e.pop() : Gbe.call(e, n, 1), --this.size, !0;
}
function Ube(t) {
  var e = this.__data__,
    n = C0(e, t);
  return n < 0 ? void 0 : e[n][1];
}
function Kbe(t) {
  return C0(this.__data__, t) > -1;
}
function Bbe(t, e) {
  var n = this.__data__,
    r = C0(n, t);
  return r < 0 ? (++this.size, n.push([t, e])) : (n[r][1] = e), this;
}
function Il(t) {
  var e = -1,
    n = t == null ? 0 : t.length;
  for (this.clear(); ++e < n; ) {
    var r = t[e];
    this.set(r[0], r[1]);
  }
}
Il.prototype.clear = Mbe;
Il.prototype.delete = Fbe;
Il.prototype.get = Ube;
Il.prototype.has = Kbe;
Il.prototype.set = Bbe;
function Vbe() {
  (this.__data__ = new Il()), (this.size = 0);
}
function jbe(t) {
  var e = this.__data__,
    n = e.delete(t);
  return (this.size = e.size), n;
}
function zbe(t) {
  return this.__data__.get(t);
}
function $be(t) {
  return this.__data__.has(t);
}
var Wbe = Or["__core-js_shared__"];
const jb = Wbe;
var _9 = (function () {
  var t = /[^.]+$/.exec((jb && jb.keys && jb.keys.IE_PROTO) || "");
  return t ? "Symbol(src)_1." + t : "";
})();
function qbe(t) {
  return !!_9 && _9 in t;
}
var Ybe = Function.prototype,
  Xbe = Ybe.toString;
function wp(t) {
  if (t != null) {
    try {
      return Xbe.call(t);
    } catch {}
    try {
      return t + "";
    } catch {}
  }
  return "";
}
var Qbe = /[\\^$.*+?()[\]{}|]/g,
  Jbe = /^\[object .+?Constructor\]$/,
  Zbe = Function.prototype,
  eEe = Object.prototype,
  tEe = Zbe.toString,
  nEe = eEe.hasOwnProperty,
  sEe = RegExp(
    "^" +
      tEe
        .call(nEe)
        .replace(Qbe, "\\$&")
        .replace(
          /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
          "$1.*?"
        ) +
      "$"
  );
function Yj(t) {
  if (!ws(t) || qbe(t)) return !1;
  var e = Tu(t) ? sEe : Jbe;
  return e.test(wp(t));
}
function rEe(t, e) {
  return t == null ? void 0 : t[e];
}
function Pp(t, e) {
  var n = rEe(t, e);
  return Yj(n) ? n : void 0;
}
var aEe = Pp(Or, "Map");
const og = aEe;
var iEe = Pp(Object, "create");
const ug = iEe;
function oEe() {
  (this.__data__ = ug ? ug(null) : {}), (this.size = 0);
}
function uEe(t) {
  var e = this.has(t) && delete this.__data__[t];
  return (this.size -= e ? 1 : 0), e;
}
var lEe = "__lodash_hash_undefined__",
  cEe = Object.prototype,
  dEe = cEe.hasOwnProperty;
function pEe(t) {
  var e = this.__data__;
  if (ug) {
    var n = e[t];
    return n === lEe ? void 0 : n;
  }
  return dEe.call(e, t) ? e[t] : void 0;
}
var hEe = Object.prototype,
  fEe = hEe.hasOwnProperty;
function mEe(t) {
  var e = this.__data__;
  return ug ? e[t] !== void 0 : fEe.call(e, t);
}
var SEe = "__lodash_hash_undefined__";
function yEe(t, e) {
  var n = this.__data__;
  return (
    (this.size += this.has(t) ? 0 : 1),
    (n[t] = ug && e === void 0 ? SEe : e),
    this
  );
}
function tp(t) {
  var e = -1,
    n = t == null ? 0 : t.length;
  for (this.clear(); ++e < n; ) {
    var r = t[e];
    this.set(r[0], r[1]);
  }
}
tp.prototype.clear = oEe;
tp.prototype.delete = uEe;
tp.prototype.get = pEe;
tp.prototype.has = mEe;
tp.prototype.set = yEe;
function gEe() {
  (this.size = 0),
    (this.__data__ = {
      hash: new tp(),
      map: new (og || Il)(),
      string: new tp(),
    });
}
function vEe(t) {
  var e = typeof t;
  return e == "string" || e == "number" || e == "symbol" || e == "boolean"
    ? t !== "__proto__"
    : t === null;
}
function A0(t, e) {
  var n = t.__data__;
  return vEe(e) ? n[typeof e == "string" ? "string" : "hash"] : n.map;
}
function _Ee(t) {
  var e = A0(this, t).delete(t);
  return (this.size -= e ? 1 : 0), e;
}
function bEe(t) {
  return A0(this, t).get(t);
}
function EEe(t) {
  return A0(this, t).has(t);
}
function TEe(t, e) {
  var n = A0(this, t),
    r = n.size;
  return n.set(t, e), (this.size += n.size == r ? 0 : 1), this;
}
function Cl(t) {
  var e = -1,
    n = t == null ? 0 : t.length;
  for (this.clear(); ++e < n; ) {
    var r = t[e];
    this.set(r[0], r[1]);
  }
}
Cl.prototype.clear = gEe;
Cl.prototype.delete = _Ee;
Cl.prototype.get = bEe;
Cl.prototype.has = EEe;
Cl.prototype.set = TEe;
var wEe = 200;
function PEe(t, e) {
  var n = this.__data__;
  if (n instanceof Il) {
    var r = n.__data__;
    if (!og || r.length < wEe - 1)
      return r.push([t, e]), (this.size = ++n.size), this;
    n = this.__data__ = new Cl(r);
  }
  return n.set(t, e), (this.size = n.size), this;
}
function To(t) {
  var e = (this.__data__ = new Il(t));
  this.size = e.size;
}
To.prototype.clear = Vbe;
To.prototype.delete = jbe;
To.prototype.get = zbe;
To.prototype.has = $be;
To.prototype.set = PEe;
var IEe = "__lodash_hash_undefined__";
function CEe(t) {
  return this.__data__.set(t, IEe), this;
}
function AEe(t) {
  return this.__data__.has(t);
}
function np(t) {
  var e = -1,
    n = t == null ? 0 : t.length;
  for (this.__data__ = new Cl(); ++e < n; ) this.add(t[e]);
}
np.prototype.add = np.prototype.push = CEe;
np.prototype.has = AEe;
function CR(t, e) {
  for (var n = -1, r = t == null ? 0 : t.length; ++n < r; )
    if (e(t[n], n, t)) return !0;
  return !1;
}
function lg(t, e) {
  return t.has(e);
}
var OEe = 1,
  HEe = 2;
function Xj(t, e, n, r, a, s) {
  var i = n & OEe,
    o = t.length,
    u = e.length;
  if (o != u && !(i && u > o)) return !1;
  var l = s.get(t),
    c = s.get(e);
  if (l && c) return l == e && c == t;
  var d = -1,
    p = !0,
    m = n & HEe ? new np() : void 0;
  for (s.set(t, e), s.set(e, t); ++d < o; ) {
    var y = t[d],
      I = e[d];
    if (r) var O = i ? r(I, y, d, e, t, s) : r(y, I, d, t, e, s);
    if (O !== void 0) {
      if (O) continue;
      p = !1;
      break;
    }
    if (m) {
      if (
        !CR(e, function (g, C) {
          if (!lg(m, C) && (y === g || a(y, g, n, r, s))) return m.push(C);
        })
      ) {
        p = !1;
        break;
      }
    } else if (!(y === I || a(y, I, n, r, s))) {
      p = !1;
      break;
    }
  }
  return s.delete(t), s.delete(e), p;
}
var NEe = Or.Uint8Array;
const pT = NEe;
function AR(t) {
  var e = -1,
    n = Array(t.size);
  return (
    t.forEach(function (r, a) {
      n[++e] = [a, r];
    }),
    n
  );
}
function O0(t) {
  var e = -1,
    n = Array(t.size);
  return (
    t.forEach(function (r) {
      n[++e] = r;
    }),
    n
  );
}
var REe = 1,
  kEe = 2,
  xEe = "[object Boolean]",
  LEe = "[object Date]",
  MEe = "[object Error]",
  DEe = "[object Map]",
  GEe = "[object Number]",
  FEe = "[object RegExp]",
  UEe = "[object Set]",
  KEe = "[object String]",
  BEe = "[object Symbol]",
  VEe = "[object ArrayBuffer]",
  jEe = "[object DataView]",
  b9 = sa ? sa.prototype : void 0,
  KC = b9 ? b9.valueOf : void 0;
function zEe(t, e, n, r, a, s, i) {
  switch (n) {
    case jEe:
      if (t.byteLength != e.byteLength || t.byteOffset != e.byteOffset)
        return !1;
      (t = t.buffer), (e = e.buffer);
    case VEe:
      return !(t.byteLength != e.byteLength || !s(new pT(t), new pT(e)));
    case xEe:
    case LEe:
    case GEe:
      return qi(+t, +e);
    case MEe:
      return t.name == e.name && t.message == e.message;
    case FEe:
    case KEe:
      return t == e + "";
    case DEe:
      var o = AR;
    case UEe:
      var u = r & REe;
      if ((o || (o = O0), t.size != e.size && !u)) return !1;
      var l = i.get(t);
      if (l) return l == e;
      (r |= kEe), i.set(t, e);
      var c = Xj(o(t), o(e), r, a, s, i);
      return i.delete(t), c;
    case BEe:
      if (KC) return KC.call(t) == KC.call(e);
  }
  return !1;
}
function ud(t, e) {
  for (var n = -1, r = e.length, a = t.length; ++n < r; ) t[a + n] = e[n];
  return t;
}
function Qj(t, e, n) {
  var r = e(t);
  return an(t) ? r : ud(r, n(t));
}
function H0() {
  return [];
}
var $Ee = Object.prototype,
  WEe = $Ee.propertyIsEnumerable,
  E9 = Object.getOwnPropertySymbols,
  qEe = E9
    ? function (t) {
        return t == null
          ? []
          : ((t = Object(t)),
            id(E9(t), function (e) {
              return WEe.call(t, e);
            }));
      }
    : H0;
const OR = qEe;
function V1(t) {
  return Qj(t, dr, OR);
}
var YEe = 1,
  XEe = Object.prototype,
  QEe = XEe.hasOwnProperty;
function JEe(t, e, n, r, a, s) {
  var i = n & YEe,
    o = V1(t),
    u = o.length,
    l = V1(e),
    c = l.length;
  if (u != c && !i) return !1;
  for (var d = u; d--; ) {
    var p = o[d];
    if (!(i ? p in e : QEe.call(e, p))) return !1;
  }
  var m = s.get(t),
    y = s.get(e);
  if (m && y) return m == e && y == t;
  var I = !0;
  s.set(t, e), s.set(e, t);
  for (var O = i; ++d < u; ) {
    p = o[d];
    var g = t[p],
      C = e[p];
    if (r) var H = i ? r(C, g, p, e, t, s) : r(g, C, p, t, e, s);
    if (!(H === void 0 ? g === C || a(g, C, n, r, s) : H)) {
      I = !1;
      break;
    }
    O || (O = p == "constructor");
  }
  if (I && !O) {
    var B = t.constructor,
      he = e.constructor;
    B != he &&
      "constructor" in t &&
      "constructor" in e &&
      !(
        typeof B == "function" &&
        B instanceof B &&
        typeof he == "function" &&
        he instanceof he
      ) &&
      (I = !1);
  }
  return s.delete(t), s.delete(e), I;
}
var ZEe = Pp(Or, "DataView");
const j1 = ZEe;
var eTe = Pp(Or, "Promise");
const z1 = eTe;
var tTe = Pp(Or, "Set");
const ef = tTe;
var nTe = Pp(Or, "WeakMap");
const cg = nTe;
var T9 = "[object Map]",
  sTe = "[object Object]",
  w9 = "[object Promise]",
  P9 = "[object Set]",
  I9 = "[object WeakMap]",
  C9 = "[object DataView]",
  rTe = wp(j1),
  aTe = wp(og),
  iTe = wp(z1),
  oTe = wp(ef),
  uTe = wp(cg),
  Ad = wa;
((j1 && Ad(new j1(new ArrayBuffer(1))) != C9) ||
  (og && Ad(new og()) != T9) ||
  (z1 && Ad(z1.resolve()) != w9) ||
  (ef && Ad(new ef()) != P9) ||
  (cg && Ad(new cg()) != I9)) &&
  (Ad = function (t) {
    var e = wa(t),
      n = e == sTe ? t.constructor : void 0,
      r = n ? wp(n) : "";
    if (r)
      switch (r) {
        case rTe:
          return C9;
        case aTe:
          return T9;
        case iTe:
          return w9;
        case oTe:
          return P9;
        case uTe:
          return I9;
      }
    return e;
  });
const Su = Ad;
var lTe = 1,
  A9 = "[object Arguments]",
  O9 = "[object Array]",
  F_ = "[object Object]",
  cTe = Object.prototype,
  H9 = cTe.hasOwnProperty;
function dTe(t, e, n, r, a, s) {
  var i = an(t),
    o = an(e),
    u = i ? O9 : Su(t),
    l = o ? O9 : Su(e);
  (u = u == A9 ? F_ : u), (l = l == A9 ? F_ : l);
  var c = u == F_,
    d = l == F_,
    p = u == l;
  if (p && dl(t)) {
    if (!dl(e)) return !1;
    (i = !0), (c = !1);
  }
  if (p && !c)
    return (
      s || (s = new To()),
      i || Tp(t) ? Xj(t, e, n, r, a, s) : zEe(t, e, u, n, r, a, s)
    );
  if (!(n & lTe)) {
    var m = c && H9.call(t, "__wrapped__"),
      y = d && H9.call(e, "__wrapped__");
    if (m || y) {
      var I = m ? t.value() : t,
        O = y ? e.value() : e;
      return s || (s = new To()), a(I, O, n, r, s);
    }
  }
  return p ? (s || (s = new To()), JEe(t, e, n, r, a, s)) : !1;
}
function vv(t, e, n, r, a) {
  return t === e
    ? !0
    : t == null || e == null || (!Bs(t) && !Bs(e))
    ? t !== t && e !== e
    : dTe(t, e, n, r, vv, a);
}
var pTe = 1,
  hTe = 2;
function HR(t, e, n, r) {
  var a = n.length,
    s = a,
    i = !r;
  if (t == null) return !s;
  for (t = Object(t); a--; ) {
    var o = n[a];
    if (i && o[2] ? o[1] !== t[o[0]] : !(o[0] in t)) return !1;
  }
  for (; ++a < s; ) {
    o = n[a];
    var u = o[0],
      l = t[u],
      c = o[1];
    if (i && o[2]) {
      if (l === void 0 && !(u in t)) return !1;
    } else {
      var d = new To();
      if (r) var p = r(l, c, u, t, e, d);
      if (!(p === void 0 ? vv(c, l, pTe | hTe, r, d) : p)) return !1;
    }
  }
  return !0;
}
function Jj(t) {
  return t === t && !ws(t);
}
function NR(t) {
  for (var e = dr(t), n = e.length; n--; ) {
    var r = e[n],
      a = t[r];
    e[n] = [r, a, Jj(a)];
  }
  return e;
}
function Zj(t, e) {
  return function (n) {
    return n == null ? !1 : n[t] === e && (e !== void 0 || t in Object(n));
  };
}
function ez(t) {
  var e = NR(t);
  return e.length == 1 && e[0][2]
    ? Zj(e[0][0], e[0][1])
    : function (n) {
        return n === t || HR(n, t, e);
      };
}
var fTe = "[object Symbol]";
function za(t) {
  return typeof t == "symbol" || (Bs(t) && wa(t) == fTe);
}
var mTe = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
  STe = /^\w*$/;
function RR(t, e) {
  if (an(t)) return !1;
  var n = typeof t;
  return n == "number" || n == "symbol" || n == "boolean" || t == null || za(t)
    ? !0
    : STe.test(t) || !mTe.test(t) || (e != null && t in Object(e));
}
var yTe = "Expected a function";
function _v(t, e) {
  if (typeof t != "function" || (e != null && typeof e != "function"))
    throw new TypeError(yTe);
  var n = function () {
    var r = arguments,
      a = e ? e.apply(this, r) : r[0],
      s = n.cache;
    if (s.has(a)) return s.get(a);
    var i = t.apply(this, r);
    return (n.cache = s.set(a, i) || s), i;
  };
  return (n.cache = new (_v.Cache || Cl)()), n;
}
_v.Cache = Cl;
var gTe = 500;
function vTe(t) {
  var e = _v(t, function (r) {
      return n.size === gTe && n.clear(), r;
    }),
    n = e.cache;
  return e;
}
var _Te =
    /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
  bTe = /\\(\\)?/g,
  ETe = vTe(function (t) {
    var e = [];
    return (
      t.charCodeAt(0) === 46 && e.push(""),
      t.replace(_Te, function (n, r, a, s) {
        e.push(a ? s.replace(bTe, "$1") : r || n);
      }),
      e
    );
  });
const tz = ETe;
function ks(t, e) {
  for (var n = -1, r = t == null ? 0 : t.length, a = Array(r); ++n < r; )
    a[n] = e(t[n], n, t);
  return a;
}
var TTe = 1 / 0,
  N9 = sa ? sa.prototype : void 0,
  R9 = N9 ? N9.toString : void 0;
function Si(t) {
  if (typeof t == "string") return t;
  if (an(t)) return ks(t, Si) + "";
  if (za(t)) return R9 ? R9.call(t) : "";
  var e = t + "";
  return e == "0" && 1 / t == -TTe ? "-0" : e;
}
function zn(t) {
  return t == null ? "" : Si(t);
}
function ld(t, e) {
  return an(t) ? t : RR(t, e) ? [t] : tz(zn(t));
}
var wTe = 1 / 0;
function Pu(t) {
  if (typeof t == "string" || za(t)) return t;
  var e = t + "";
  return e == "0" && 1 / t == -wTe ? "-0" : e;
}
function Ip(t, e) {
  e = ld(e, t);
  for (var n = 0, r = e.length; t != null && n < r; ) t = t[Pu(e[n++])];
  return n && n == r ? t : void 0;
}
function bv(t, e, n) {
  var r = t == null ? void 0 : Ip(t, e);
  return r === void 0 ? n : r;
}
function PTe(t, e) {
  return t != null && e in Object(t);
}
function nz(t, e, n) {
  e = ld(e, t);
  for (var r = -1, a = e.length, s = !1; ++r < a; ) {
    var i = Pu(e[r]);
    if (!(s = t != null && n(t, i))) break;
    t = t[i];
  }
  return s || ++r != a
    ? s
    : ((a = t == null ? 0 : t.length),
      !!a && yv(a) && Pl(i, a) && (an(t) || Fc(t)));
}
function N0(t, e) {
  return t != null && nz(t, e, PTe);
}
var ITe = 1,
  CTe = 2;
function sz(t, e) {
  return RR(t) && Jj(e)
    ? Zj(Pu(t), e)
    : function (n) {
        var r = bv(n, t);
        return r === void 0 && r === e ? N0(n, t) : vv(e, r, ITe | CTe);
      };
}
function Ys(t) {
  return t;
}
function kR(t) {
  return function (e) {
    return e == null ? void 0 : e[t];
  };
}
function ATe(t) {
  return function (e) {
    return Ip(e, t);
  };
}
function xR(t) {
  return RR(t) ? kR(Pu(t)) : ATe(t);
}
function on(t) {
  return typeof t == "function"
    ? t
    : t == null
    ? Ys
    : typeof t == "object"
    ? an(t)
      ? sz(t[0], t[1])
      : ez(t)
    : xR(t);
}
function Th(t, e) {
  var n = an(t) ? id : qj;
  return n(t, on(e));
}
function ji(t, e, n) {
  var r = -1,
    a = t.length;
  e < 0 && (e = -e > a ? 0 : a + e),
    (n = n > a ? a : n),
    n < 0 && (n += a),
    (a = e > n ? 0 : (n - e) >>> 0),
    (e >>>= 0);
  for (var s = Array(a); ++r < a; ) s[r] = t[r + e];
  return s;
}
function cd(t, e, n) {
  var r = t.length;
  return (n = n === void 0 ? r : n), !e && n >= r ? t : ji(t, e, n);
}
var OTe = "\\ud800-\\udfff",
  HTe = "\\u0300-\\u036f",
  NTe = "\\ufe20-\\ufe2f",
  RTe = "\\u20d0-\\u20ff",
  kTe = HTe + NTe + RTe,
  xTe = "\\ufe0e\\ufe0f",
  LTe = "\\u200d",
  MTe = RegExp("[" + LTe + OTe + kTe + xTe + "]");
function hm(t) {
  return MTe.test(t);
}
function DTe(t) {
  return t.split("");
}
var rz = "\\ud800-\\udfff",
  GTe = "\\u0300-\\u036f",
  FTe = "\\ufe20-\\ufe2f",
  UTe = "\\u20d0-\\u20ff",
  KTe = GTe + FTe + UTe,
  BTe = "\\ufe0e\\ufe0f",
  VTe = "[" + rz + "]",
  $1 = "[" + KTe + "]",
  W1 = "\\ud83c[\\udffb-\\udfff]",
  jTe = "(?:" + $1 + "|" + W1 + ")",
  az = "[^" + rz + "]",
  iz = "(?:\\ud83c[\\udde6-\\uddff]){2}",
  oz = "[\\ud800-\\udbff][\\udc00-\\udfff]",
  zTe = "\\u200d",
  uz = jTe + "?",
  lz = "[" + BTe + "]?",
  $Te = "(?:" + zTe + "(?:" + [az, iz, oz].join("|") + ")" + lz + uz + ")*",
  WTe = lz + uz + $Te,
  qTe = "(?:" + [az + $1 + "?", $1, iz, oz, VTe].join("|") + ")",
  YTe = RegExp(W1 + "(?=" + W1 + ")|" + qTe + WTe, "g");
function XTe(t) {
  return t.match(YTe) || [];
}
function Ho(t) {
  return hm(t) ? XTe(t) : DTe(t);
}
function cz(t) {
  return function (e) {
    e = zn(e);
    var n = hm(e) ? Ho(e) : void 0,
      r = n ? n[0] : e.charAt(0),
      a = n ? cd(n, 1).join("") : e.slice(1);
    return r[t]() + a;
  };
}
var QTe = cz("toUpperCase");
const Ev = QTe;
var wc = { DEBUG: !1, LIB_VERSION: "2.45.0" },
  na;
if (typeof window > "u") {
  var k9 = { hostname: "" };
  na = {
    navigator: { userAgent: "" },
    document: { location: k9, referrer: "" },
    screen: { width: 0, height: 0 },
    location: k9,
  };
} else na = window;
var R0 = Array.prototype,
  JTe = Function.prototype,
  dz = Object.prototype,
  mc = R0.slice,
  Tv = dz.toString,
  k0 = dz.hasOwnProperty,
  or = na.console,
  qu = na.navigator,
  is = na.document,
  yS = na.opera,
  hT = na.screen,
  po = qu.userAgent,
  BC = JTe.bind,
  x9 = R0.forEach,
  L9 = R0.indexOf,
  M9 = R0.map,
  ZTe = Array.isArray,
  q1 = {},
  pe = {
    trim: function (t) {
      return t.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
    },
  },
  ts = {
    log: function () {
      if (wc.DEBUG && !pe.isUndefined(or) && or)
        try {
          or.log.apply(or, arguments);
        } catch {
          pe.each(arguments, function (e) {
            or.log(e);
          });
        }
    },
    warn: function () {
      if (wc.DEBUG && !pe.isUndefined(or) && or) {
        var t = ["Mixpanel warning:"].concat(pe.toArray(arguments));
        try {
          or.warn.apply(or, t);
        } catch {
          pe.each(t, function (n) {
            or.warn(n);
          });
        }
      }
    },
    error: function () {
      if (wc.DEBUG && !pe.isUndefined(or) && or) {
        var t = ["Mixpanel error:"].concat(pe.toArray(arguments));
        try {
          or.error.apply(or, t);
        } catch {
          pe.each(t, function (n) {
            or.error(n);
          });
        }
      }
    },
    critical: function () {
      if (!pe.isUndefined(or) && or) {
        var t = ["Mixpanel error:"].concat(pe.toArray(arguments));
        try {
          or.error.apply(or, t);
        } catch {
          pe.each(t, function (n) {
            or.error(n);
          });
        }
      }
    },
  },
  VC = function (t, e) {
    return function () {
      return (
        (arguments[0] = "[" + e + "] " + arguments[0]), t.apply(ts, arguments)
      );
    };
  },
  LR = function (t) {
    return {
      log: VC(ts.log, t),
      error: VC(ts.error, t),
      critical: VC(ts.critical, t),
    };
  };
pe.bind = function (t, e) {
  var n, r;
  if (BC && t.bind === BC) return BC.apply(t, mc.call(arguments, 1));
  if (!pe.isFunction(t)) throw new TypeError();
  return (
    (n = mc.call(arguments, 2)),
    (r = function () {
      if (!(this instanceof r)) return t.apply(e, n.concat(mc.call(arguments)));
      var a = {};
      a.prototype = t.prototype;
      var s = new a();
      a.prototype = null;
      var i = t.apply(s, n.concat(mc.call(arguments)));
      return Object(i) === i ? i : s;
    }),
    r
  );
};
pe.each = function (t, e, n) {
  if (t != null) {
    if (x9 && t.forEach === x9) t.forEach(e, n);
    else if (t.length === +t.length) {
      for (var r = 0, a = t.length; r < a; r++)
        if (r in t && e.call(n, t[r], r, t) === q1) return;
    } else
      for (var s in t)
        if (k0.call(t, s) && e.call(n, t[s], s, t) === q1) return;
  }
};
pe.extend = function (t) {
  return (
    pe.each(mc.call(arguments, 1), function (e) {
      for (var n in e) e[n] !== void 0 && (t[n] = e[n]);
    }),
    t
  );
};
pe.isArray =
  ZTe ||
  function (t) {
    return Tv.call(t) === "[object Array]";
  };
pe.isFunction = function (t) {
  try {
    return /^\s*\bfunction\b/.test(t);
  } catch {
    return !1;
  }
};
pe.isArguments = function (t) {
  return !!(t && k0.call(t, "callee"));
};
pe.toArray = function (t) {
  return t
    ? t.toArray
      ? t.toArray()
      : pe.isArray(t) || pe.isArguments(t)
      ? mc.call(t)
      : pe.values(t)
    : [];
};
pe.map = function (t, e, n) {
  if (M9 && t.map === M9) return t.map(e, n);
  var r = [];
  return (
    pe.each(t, function (a) {
      r.push(e.call(n, a));
    }),
    r
  );
};
pe.keys = function (t) {
  var e = [];
  return (
    t === null ||
      pe.each(t, function (n, r) {
        e[e.length] = r;
      }),
    e
  );
};
pe.values = function (t) {
  var e = [];
  return (
    t === null ||
      pe.each(t, function (n) {
        e[e.length] = n;
      }),
    e
  );
};
pe.include = function (t, e) {
  var n = !1;
  return t === null
    ? n
    : L9 && t.indexOf === L9
    ? t.indexOf(e) != -1
    : (pe.each(t, function (r) {
        if (n || (n = r === e)) return q1;
      }),
      n);
};
pe.includes = function (t, e) {
  return t.indexOf(e) !== -1;
};
pe.inherit = function (t, e) {
  return (
    (t.prototype = new e()),
    (t.prototype.constructor = t),
    (t.superclass = e.prototype),
    t
  );
};
pe.isObject = function (t) {
  return t === Object(t) && !pe.isArray(t);
};
pe.isEmptyObject = function (t) {
  if (pe.isObject(t)) {
    for (var e in t) if (k0.call(t, e)) return !1;
    return !0;
  }
  return !1;
};
pe.isUndefined = function (t) {
  return t === void 0;
};
pe.isString = function (t) {
  return Tv.call(t) == "[object String]";
};
pe.isDate = function (t) {
  return Tv.call(t) == "[object Date]";
};
pe.isNumber = function (t) {
  return Tv.call(t) == "[object Number]";
};
pe.isElement = function (t) {
  return !!(t && t.nodeType === 1);
};
pe.encodeDates = function (t) {
  return (
    pe.each(t, function (e, n) {
      pe.isDate(e)
        ? (t[n] = pe.formatDate(e))
        : pe.isObject(e) && (t[n] = pe.encodeDates(e));
    }),
    t
  );
};
pe.timestamp = function () {
  return (
    (Date.now =
      Date.now ||
      function () {
        return +new Date();
      }),
    Date.now()
  );
};
pe.formatDate = function (t) {
  function e(n) {
    return n < 10 ? "0" + n : n;
  }
  return (
    t.getUTCFullYear() +
    "-" +
    e(t.getUTCMonth() + 1) +
    "-" +
    e(t.getUTCDate()) +
    "T" +
    e(t.getUTCHours()) +
    ":" +
    e(t.getUTCMinutes()) +
    ":" +
    e(t.getUTCSeconds())
  );
};
pe.strip_empty_properties = function (t) {
  var e = {};
  return (
    pe.each(t, function (n, r) {
      pe.isString(n) && n.length > 0 && (e[r] = n);
    }),
    e
  );
};
pe.truncate = function (t, e) {
  var n;
  return (
    typeof t == "string"
      ? (n = t.slice(0, e))
      : pe.isArray(t)
      ? ((n = []),
        pe.each(t, function (r) {
          n.push(pe.truncate(r, e));
        }))
      : pe.isObject(t)
      ? ((n = {}),
        pe.each(t, function (r, a) {
          n[a] = pe.truncate(r, e);
        }))
      : (n = t),
    n
  );
};
pe.JSONEncode = (function () {
  return function (t) {
    var e = t,
      n = function (a) {
        var s =
            /[\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
          i = {
            "\b": "\\b",
            "	": "\\t",
            "\n": "\\n",
            "\f": "\\f",
            "\r": "\\r",
            '"': '\\"',
            "\\": "\\\\",
          };
        return (
          (s.lastIndex = 0),
          s.test(a)
            ? '"' +
              a.replace(s, function (o) {
                var u = i[o];
                return typeof u == "string"
                  ? u
                  : "\\u" + ("0000" + o.charCodeAt(0).toString(16)).slice(-4);
              }) +
              '"'
            : '"' + a + '"'
        );
      },
      r = function (a, s) {
        var i = "",
          o = "    ",
          u = 0,
          l = "",
          c = "",
          d = 0,
          p = i,
          m = [],
          y = s[a];
        switch (
          (y &&
            typeof y == "object" &&
            typeof y.toJSON == "function" &&
            (y = y.toJSON(a)),
          typeof y)
        ) {
          case "string":
            return n(y);
          case "number":
            return isFinite(y) ? String(y) : "null";
          case "boolean":
          case "null":
            return String(y);
          case "object":
            if (!y) return "null";
            if (((i += o), (m = []), Tv.apply(y) === "[object Array]")) {
              for (d = y.length, u = 0; u < d; u += 1) m[u] = r(u, y) || "null";
              return (
                (c =
                  m.length === 0
                    ? "[]"
                    : i
                    ? `[
` +
                      i +
                      m.join(
                        `,
` + i
                      ) +
                      `
` +
                      p +
                      "]"
                    : "[" + m.join(",") + "]"),
                (i = p),
                c
              );
            }
            for (l in y)
              k0.call(y, l) &&
                ((c = r(l, y)), c && m.push(n(l) + (i ? ": " : ":") + c));
            return (
              (c =
                m.length === 0
                  ? "{}"
                  : i
                  ? "{" + m.join(",") + p + "}"
                  : "{" + m.join(",") + "}"),
              (i = p),
              c
            );
        }
      };
    return r("", { "": e });
  };
})();
pe.JSONDecode = (function () {
  var t,
    e,
    n = {
      '"': '"',
      "\\": "\\",
      "/": "/",
      b: "\b",
      f: "\f",
      n: `
`,
      r: "\r",
      t: "	",
    },
    r,
    a = function (m) {
      var y = new SyntaxError(m);
      throw ((y.at = t), (y.text = r), y);
    },
    s = function (m) {
      return (
        m && m !== e && a("Expected '" + m + "' instead of '" + e + "'"),
        (e = r.charAt(t)),
        (t += 1),
        e
      );
    },
    i = function () {
      var m,
        y = "";
      for (e === "-" && ((y = "-"), s("-")); e >= "0" && e <= "9"; )
        (y += e), s();
      if (e === ".") for (y += "."; s() && e >= "0" && e <= "9"; ) y += e;
      if (e === "e" || e === "E")
        for (
          y += e, s(), (e === "-" || e === "+") && ((y += e), s());
          e >= "0" && e <= "9";

        )
          (y += e), s();
      if (((m = +y), !isFinite(m))) a("Bad number");
      else return m;
    },
    o = function () {
      var m,
        y,
        I = "",
        O;
      if (e === '"')
        for (; s(); ) {
          if (e === '"') return s(), I;
          if (e === "\\")
            if ((s(), e === "u")) {
              for (
                O = 0, y = 0;
                y < 4 && ((m = parseInt(s(), 16)), !!isFinite(m));
                y += 1
              )
                O = O * 16 + m;
              I += String.fromCharCode(O);
            } else if (typeof n[e] == "string") I += n[e];
            else break;
          else I += e;
        }
      a("Bad string");
    },
    u = function () {
      for (; e && e <= " "; ) s();
    },
    l = function () {
      switch (e) {
        case "t":
          return s("t"), s("r"), s("u"), s("e"), !0;
        case "f":
          return s("f"), s("a"), s("l"), s("s"), s("e"), !1;
        case "n":
          return s("n"), s("u"), s("l"), s("l"), null;
      }
      a('Unexpected "' + e + '"');
    },
    c,
    d = function () {
      var m = [];
      if (e === "[") {
        if ((s("["), u(), e === "]")) return s("]"), m;
        for (; e; ) {
          if ((m.push(c()), u(), e === "]")) return s("]"), m;
          s(","), u();
        }
      }
      a("Bad array");
    },
    p = function () {
      var m,
        y = {};
      if (e === "{") {
        if ((s("{"), u(), e === "}")) return s("}"), y;
        for (; e; ) {
          if (
            ((m = o()),
            u(),
            s(":"),
            Object.hasOwnProperty.call(y, m) && a('Duplicate key "' + m + '"'),
            (y[m] = c()),
            u(),
            e === "}")
          )
            return s("}"), y;
          s(","), u();
        }
      }
      a("Bad object");
    };
  return (
    (c = function () {
      switch ((u(), e)) {
        case "{":
          return p();
        case "[":
          return d();
        case '"':
          return o();
        case "-":
          return i();
        default:
          return e >= "0" && e <= "9" ? i() : l();
      }
    }),
    function (m) {
      var y;
      return (
        (r = m), (t = 0), (e = " "), (y = c()), u(), e && a("Syntax error"), y
      );
    }
  );
})();
pe.base64Encode = function (t) {
  var e = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
    n,
    r,
    a,
    s,
    i,
    o,
    u,
    l,
    c = 0,
    d = 0,
    p = "",
    m = [];
  if (!t) return t;
  t = pe.utf8Encode(t);
  do
    (n = t.charCodeAt(c++)),
      (r = t.charCodeAt(c++)),
      (a = t.charCodeAt(c++)),
      (l = (n << 16) | (r << 8) | a),
      (s = (l >> 18) & 63),
      (i = (l >> 12) & 63),
      (o = (l >> 6) & 63),
      (u = l & 63),
      (m[d++] = e.charAt(s) + e.charAt(i) + e.charAt(o) + e.charAt(u));
  while (c < t.length);
  switch (((p = m.join("")), t.length % 3)) {
    case 1:
      p = p.slice(0, -2) + "==";
      break;
    case 2:
      p = p.slice(0, -1) + "=";
      break;
  }
  return p;
};
pe.utf8Encode = function (t) {
  t = (t + "")
    .replace(
      /\r\n/g,
      `
`
    )
    .replace(
      /\r/g,
      `
`
    );
  var e = "",
    n,
    r,
    a = 0,
    s;
  for (n = r = 0, a = t.length, s = 0; s < a; s++) {
    var i = t.charCodeAt(s),
      o = null;
    i < 128
      ? r++
      : i > 127 && i < 2048
      ? (o = String.fromCharCode((i >> 6) | 192, (i & 63) | 128))
      : (o = String.fromCharCode(
          (i >> 12) | 224,
          ((i >> 6) & 63) | 128,
          (i & 63) | 128
        )),
      o !== null &&
        (r > n && (e += t.substring(n, r)), (e += o), (n = r = s + 1));
  }
  return r > n && (e += t.substring(n, t.length)), e;
};
pe.UUID = (function () {
  var t = function () {
      for (var r = 1 * new Date(), a = 0; r == 1 * new Date(); ) a++;
      return r.toString(16) + a.toString(16);
    },
    e = function () {
      return Math.random().toString(16).replace(".", "");
    },
    n = function () {
      var r = po,
        a,
        s,
        i = [],
        o = 0;
      function u(l, c) {
        var d,
          p = 0;
        for (d = 0; d < c.length; d++) p |= i[d] << (d * 8);
        return l ^ p;
      }
      for (a = 0; a < r.length; a++)
        (s = r.charCodeAt(a)),
          i.unshift(s & 255),
          i.length >= 4 && ((o = u(o, i)), (i = []));
      return i.length > 0 && (o = u(o, i)), o.toString(16);
    };
  return function () {
    var r = (hT.height * hT.width).toString(16);
    return t() + "-" + e() + "-" + n() + "-" + r + "-" + t();
  };
})();
var D9 = [
  "ahrefsbot",
  "baiduspider",
  "bingbot",
  "bingpreview",
  "facebookexternal",
  "petalbot",
  "pinterest",
  "screaming frog",
  "yahoo! slurp",
  "yandexbot",
  "adsbot-google",
  "apis-google",
  "duplexweb-google",
  "feedfetcher-google",
  "google favicon",
  "google web preview",
  "google-read-aloud",
  "googlebot",
  "googleweblight",
  "mediapartners-google",
  "storebot-google",
];
pe.isBlockedUA = function (t) {
  var e;
  for (t = t.toLowerCase(), e = 0; e < D9.length; e++)
    if (t.indexOf(D9[e]) !== -1) return !0;
  return !1;
};
pe.HTTPBuildQuery = function (t, e) {
  var n,
    r,
    a = [];
  return (
    pe.isUndefined(e) && (e = "&"),
    pe.each(t, function (s, i) {
      (n = encodeURIComponent(s.toString())),
        (r = encodeURIComponent(i)),
        (a[a.length] = r + "=" + n);
    }),
    a.join(e)
  );
};
pe.getQueryParam = function (t, e) {
  e = e.replace(/[[]/, "\\[").replace(/[\]]/, "\\]");
  var n = "[\\?&]" + e + "=([^&#]*)",
    r = new RegExp(n),
    a = r.exec(t);
  if (a === null || (a && typeof a[1] != "string" && a[1].length)) return "";
  var s = a[1];
  try {
    s = decodeURIComponent(s);
  } catch {
    ts.error("Skipping decoding for malformed query param: " + s);
  }
  return s.replace(/\+/g, " ");
};
pe.cookie = {
  get: function (t) {
    for (var e = t + "=", n = is.cookie.split(";"), r = 0; r < n.length; r++) {
      for (var a = n[r]; a.charAt(0) == " "; ) a = a.substring(1, a.length);
      if (a.indexOf(e) === 0)
        return decodeURIComponent(a.substring(e.length, a.length));
    }
    return null;
  },
  parse: function (t) {
    var e;
    try {
      e = pe.JSONDecode(pe.cookie.get(t)) || {};
    } catch {}
    return e;
  },
  set_seconds: function (t, e, n, r, a, s, i) {
    var o = "",
      u = "",
      l = "";
    if (i) o = "; domain=" + i;
    else if (r) {
      var c = G9(is.location.hostname);
      o = c ? "; domain=." + c : "";
    }
    if (n) {
      var d = new Date();
      d.setTime(d.getTime() + n * 1e3), (u = "; expires=" + d.toGMTString());
    }
    s && ((a = !0), (l = "; SameSite=None")),
      a && (l += "; secure"),
      (is.cookie = t + "=" + encodeURIComponent(e) + u + "; path=/" + o + l);
  },
  set: function (t, e, n, r, a, s, i) {
    var o = "",
      u = "",
      l = "";
    if (i) o = "; domain=" + i;
    else if (r) {
      var c = G9(is.location.hostname);
      o = c ? "; domain=." + c : "";
    }
    if (n) {
      var d = new Date();
      d.setTime(d.getTime() + n * 24 * 60 * 60 * 1e3),
        (u = "; expires=" + d.toGMTString());
    }
    s && ((a = !0), (l = "; SameSite=None")), a && (l += "; secure");
    var p = t + "=" + encodeURIComponent(e) + u + "; path=/" + o + l;
    return (is.cookie = p), p;
  },
  remove: function (t, e, n) {
    pe.cookie.set(t, "", -1, e, !1, !1, n);
  },
};
var jC = null,
  fT = function (t, e) {
    if (jC !== null && !e) return jC;
    var n = !0;
    try {
      t = t || window.localStorage;
      var r = "__mplss_" + MR(8),
        a = "xyz";
      t.setItem(r, a), t.getItem(r) !== a && (n = !1), t.removeItem(r);
    } catch {
      n = !1;
    }
    return (jC = n), n;
  };
pe.localStorage = {
  is_supported: function (t) {
    var e = fT(null, t);
    return (
      e || ts.error("localStorage unsupported; falling back to cookie store"), e
    );
  },
  error: function (t) {
    ts.error("localStorage error: " + t);
  },
  get: function (t) {
    try {
      return window.localStorage.getItem(t);
    } catch (e) {
      pe.localStorage.error(e);
    }
    return null;
  },
  parse: function (t) {
    try {
      return pe.JSONDecode(pe.localStorage.get(t)) || {};
    } catch {}
    return null;
  },
  set: function (t, e) {
    try {
      window.localStorage.setItem(t, e);
    } catch (n) {
      pe.localStorage.error(n);
    }
  },
  remove: function (t) {
    try {
      window.localStorage.removeItem(t);
    } catch (e) {
      pe.localStorage.error(e);
    }
  },
};
pe.register_event = (function () {
  var t = function (r, a, s, i, o) {
    if (!r) {
      ts.error("No valid element provided to register_event");
      return;
    }
    if (r.addEventListener && !i) r.addEventListener(a, s, !!o);
    else {
      var u = "on" + a,
        l = r[u];
      r[u] = e(r, s, l);
    }
  };
  function e(r, a, s) {
    var i = function (o) {
      if (((o = o || n(window.event)), !!o)) {
        var u = !0,
          l,
          c;
        return (
          pe.isFunction(s) && (l = s(o)),
          (c = a.call(r, o)),
          (l === !1 || c === !1) && (u = !1),
          u
        );
      }
    };
    return i;
  }
  function n(r) {
    return (
      r &&
        ((r.preventDefault = n.preventDefault),
        (r.stopPropagation = n.stopPropagation)),
      r
    );
  }
  return (
    (n.preventDefault = function () {
      this.returnValue = !1;
    }),
    (n.stopPropagation = function () {
      this.cancelBubble = !0;
    }),
    t
  );
})();
var ewe = new RegExp('^(\\w*)\\[(\\w+)([=~\\|\\^\\$\\*]?)=?"?([^\\]"]*)"?\\]$');
pe.dom_query = (function () {
  function t(a) {
    return a.all ? a.all : a.getElementsByTagName("*");
  }
  var e = /[\t\r\n]/g;
  function n(a, s) {
    var i = " " + s + " ";
    return (" " + a.className + " ").replace(e, " ").indexOf(i) >= 0;
  }
  function r(a) {
    if (!is.getElementsByTagName) return [];
    var s = a.split(" "),
      i,
      o,
      u,
      l,
      c,
      d,
      p,
      m,
      y,
      I,
      O = [is];
    for (d = 0; d < s.length; d++) {
      if (
        ((i = s[d].replace(/^\s+/, "").replace(/\s+$/, "")),
        i.indexOf("#") > -1)
      ) {
        (o = i.split("#")), (u = o[0]);
        var g = o[1],
          C = is.getElementById(g);
        if (!C || (u && C.nodeName.toLowerCase() != u)) return [];
        O = [C];
        continue;
      }
      if (i.indexOf(".") > -1) {
        (o = i.split(".")), (u = o[0]);
        var H = o[1];
        for (u || (u = "*"), l = [], c = 0, p = 0; p < O.length; p++)
          for (
            u == "*" ? (y = t(O[p])) : (y = O[p].getElementsByTagName(u)),
              m = 0;
            m < y.length;
            m++
          )
            l[c++] = y[m];
        for (O = [], I = 0, p = 0; p < l.length; p++)
          l[p].className &&
            pe.isString(l[p].className) &&
            n(l[p], H) &&
            (O[I++] = l[p]);
        continue;
      }
      var B = i.match(ewe);
      if (B) {
        u = B[1];
        var he = B[2],
          de = B[3],
          U = B[4];
        for (u || (u = "*"), l = [], c = 0, p = 0; p < O.length; p++)
          for (
            u == "*" ? (y = t(O[p])) : (y = O[p].getElementsByTagName(u)),
              m = 0;
            m < y.length;
            m++
          )
            l[c++] = y[m];
        (O = []), (I = 0);
        var R;
        switch (de) {
          case "=":
            R = function (ge) {
              return ge.getAttribute(he) == U;
            };
            break;
          case "~":
            R = function (ge) {
              return ge.getAttribute(he).match(new RegExp("\\b" + U + "\\b"));
            };
            break;
          case "|":
            R = function (ge) {
              return ge.getAttribute(he).match(new RegExp("^" + U + "-?"));
            };
            break;
          case "^":
            R = function (ge) {
              return ge.getAttribute(he).indexOf(U) === 0;
            };
            break;
          case "$":
            R = function (ge) {
              return (
                ge.getAttribute(he).lastIndexOf(U) ==
                ge.getAttribute(he).length - U.length
              );
            };
            break;
          case "*":
            R = function (ge) {
              return ge.getAttribute(he).indexOf(U) > -1;
            };
            break;
          default:
            R = function (ge) {
              return ge.getAttribute(he);
            };
        }
        for (O = [], I = 0, p = 0; p < l.length; p++)
          R(l[p]) && (O[I++] = l[p]);
        continue;
      }
      for (u = i, l = [], c = 0, p = 0; p < O.length; p++)
        for (y = O[p].getElementsByTagName(u), m = 0; m < y.length; m++)
          l[c++] = y[m];
      O = l;
    }
    return O;
  }
  return function (a) {
    return pe.isElement(a)
      ? [a]
      : pe.isObject(a) && !pe.isUndefined(a.length)
      ? a
      : r.call(this, a);
  };
})();
pe.info = {
  campaignParams: function () {
    var t = "utm_source utm_medium utm_campaign utm_content utm_term".split(
        " "
      ),
      e = "",
      n = {};
    return (
      pe.each(t, function (r) {
        (e = pe.getQueryParam(is.URL, r)), e.length && (n[r] = e);
      }),
      n
    );
  },
  searchEngine: function (t) {
    return t.search("https?://(.*)google.([^/?]*)") === 0
      ? "google"
      : t.search("https?://(.*)bing.com") === 0
      ? "bing"
      : t.search("https?://(.*)yahoo.com") === 0
      ? "yahoo"
      : t.search("https?://(.*)duckduckgo.com") === 0
      ? "duckduckgo"
      : null;
  },
  searchInfo: function (t) {
    var e = pe.info.searchEngine(t),
      n = e != "yahoo" ? "q" : "p",
      r = {};
    if (e !== null) {
      r.$search_engine = e;
      var a = pe.getQueryParam(t, n);
      a.length && (r.mp_keyword = a);
    }
    return r;
  },
  browser: function (t, e, n) {
    return (
      (e = e || ""),
      n || pe.includes(t, " OPR/")
        ? pe.includes(t, "Mini")
          ? "Opera Mini"
          : "Opera"
        : /(BlackBerry|PlayBook|BB10)/i.test(t)
        ? "BlackBerry"
        : pe.includes(t, "IEMobile") || pe.includes(t, "WPDesktop")
        ? "Internet Explorer Mobile"
        : pe.includes(t, "SamsungBrowser/")
        ? "Samsung Internet"
        : pe.includes(t, "Edge") || pe.includes(t, "Edg/")
        ? "Microsoft Edge"
        : pe.includes(t, "FBIOS")
        ? "Facebook Mobile"
        : pe.includes(t, "Chrome")
        ? "Chrome"
        : pe.includes(t, "CriOS")
        ? "Chrome iOS"
        : pe.includes(t, "UCWEB") || pe.includes(t, "UCBrowser")
        ? "UC Browser"
        : pe.includes(t, "FxiOS")
        ? "Firefox iOS"
        : pe.includes(e, "Apple")
        ? pe.includes(t, "Mobile")
          ? "Mobile Safari"
          : "Safari"
        : pe.includes(t, "Android")
        ? "Android Mobile"
        : pe.includes(t, "Konqueror")
        ? "Konqueror"
        : pe.includes(t, "Firefox")
        ? "Firefox"
        : pe.includes(t, "MSIE") || pe.includes(t, "Trident/")
        ? "Internet Explorer"
        : pe.includes(t, "Gecko")
        ? "Mozilla"
        : ""
    );
  },
  browserVersion: function (t, e, n) {
    var r = pe.info.browser(t, e, n),
      a = {
        "Internet Explorer Mobile": /rv:(\d+(\.\d+)?)/,
        "Microsoft Edge": /Edge?\/(\d+(\.\d+)?)/,
        Chrome: /Chrome\/(\d+(\.\d+)?)/,
        "Chrome iOS": /CriOS\/(\d+(\.\d+)?)/,
        "UC Browser": /(UCBrowser|UCWEB)\/(\d+(\.\d+)?)/,
        Safari: /Version\/(\d+(\.\d+)?)/,
        "Mobile Safari": /Version\/(\d+(\.\d+)?)/,
        Opera: /(Opera|OPR)\/(\d+(\.\d+)?)/,
        Firefox: /Firefox\/(\d+(\.\d+)?)/,
        "Firefox iOS": /FxiOS\/(\d+(\.\d+)?)/,
        Konqueror: /Konqueror:(\d+(\.\d+)?)/,
        BlackBerry: /BlackBerry (\d+(\.\d+)?)/,
        "Android Mobile": /android\s(\d+(\.\d+)?)/,
        "Samsung Internet": /SamsungBrowser\/(\d+(\.\d+)?)/,
        "Internet Explorer": /(rv:|MSIE )(\d+(\.\d+)?)/,
        Mozilla: /rv:(\d+(\.\d+)?)/,
      },
      s = a[r];
    if (s === void 0) return null;
    var i = t.match(s);
    return i ? parseFloat(i[i.length - 2]) : null;
  },
  os: function () {
    var t = po;
    return /Windows/i.test(t)
      ? /Phone/.test(t) || /WPDesktop/.test(t)
        ? "Windows Phone"
        : "Windows"
      : /(iPhone|iPad|iPod)/.test(t)
      ? "iOS"
      : /Android/.test(t)
      ? "Android"
      : /(BlackBerry|PlayBook|BB10)/i.test(t)
      ? "BlackBerry"
      : /Mac/i.test(t)
      ? "Mac OS X"
      : /Linux/.test(t)
      ? "Linux"
      : /CrOS/.test(t)
      ? "Chrome OS"
      : "";
  },
  device: function (t) {
    return /Windows Phone/i.test(t) || /WPDesktop/.test(t)
      ? "Windows Phone"
      : /iPad/.test(t)
      ? "iPad"
      : /iPod/.test(t)
      ? "iPod Touch"
      : /iPhone/.test(t)
      ? "iPhone"
      : /(BlackBerry|PlayBook|BB10)/i.test(t)
      ? "BlackBerry"
      : /Android/.test(t)
      ? "Android"
      : "";
  },
  referringDomain: function (t) {
    var e = t.split("/");
    return e.length >= 3 ? e[2] : "";
  },
  properties: function () {
    return pe.extend(
      pe.strip_empty_properties({
        $os: pe.info.os(),
        $browser: pe.info.browser(po, qu.vendor, yS),
        $referrer: is.referrer,
        $referring_domain: pe.info.referringDomain(is.referrer),
        $device: pe.info.device(po),
      }),
      {
        $current_url: na.location.href,
        $browser_version: pe.info.browserVersion(po, qu.vendor, yS),
        $screen_height: hT.height,
        $screen_width: hT.width,
        mp_lib: "web",
        $lib_version: wc.LIB_VERSION,
        $insert_id: MR(),
        time: pe.timestamp() / 1e3,
      }
    );
  },
  people_properties: function () {
    return pe.extend(
      pe.strip_empty_properties({
        $os: pe.info.os(),
        $browser: pe.info.browser(po, qu.vendor, yS),
      }),
      { $browser_version: pe.info.browserVersion(po, qu.vendor, yS) }
    );
  },
  pageviewInfo: function (t) {
    return pe.strip_empty_properties({
      mp_page: t,
      mp_referrer: is.referrer,
      mp_browser: pe.info.browser(po, qu.vendor, yS),
      mp_platform: pe.info.os(),
    });
  },
};
var MR = function (t) {
    var e =
      Math.random().toString(36).substring(2, 10) +
      Math.random().toString(36).substring(2, 10);
    return t ? e.substring(0, t) : e;
  },
  twe = /[a-z0-9][a-z0-9-]*\.[a-z]+$/i,
  nwe = /[a-z0-9][a-z0-9-]+\.[a-z.]{2,6}$/i,
  G9 = function (t) {
    var e = nwe,
      n = t.split("."),
      r = n[n.length - 1];
    (r.length > 4 || r === "com" || r === "org") && (e = twe);
    var a = t.match(e);
    return a ? a[0] : "";
  },
  mT = null,
  ST = null;
typeof JSON < "u" && ((mT = JSON.stringify), (ST = JSON.parse));
mT = mT || pe.JSONEncode;
ST = ST || pe.JSONDecode;
pe.toArray = pe.toArray;
pe.isObject = pe.isObject;
pe.JSONEncode = pe.JSONEncode;
pe.JSONDecode = pe.JSONDecode;
pe.isBlockedUA = pe.isBlockedUA;
pe.isEmptyObject = pe.isEmptyObject;
pe.info = pe.info;
pe.info.device = pe.info.device;
pe.info.browser = pe.info.browser;
pe.info.browserVersion = pe.info.browserVersion;
pe.info.properties = pe.info.properties;
var Al = function () {};
Al.prototype.create_properties = function () {};
Al.prototype.event_handler = function () {};
Al.prototype.after_track_handler = function () {};
Al.prototype.init = function (t) {
  return (this.mp = t), this;
};
Al.prototype.track = function (t, e, n, r) {
  var a = this,
    s = pe.dom_query(t);
  if (s.length === 0) {
    ts.error("The DOM query (" + t + ") returned 0 elements");
    return;
  }
  return (
    pe.each(
      s,
      function (i) {
        pe.register_event(i, this.override_event, function (o) {
          var u = {},
            l = a.create_properties(n, this),
            c = a.mp.get_config("track_links_timeout");
          a.event_handler(o, this, u),
            window.setTimeout(a.track_callback(r, l, u, !0), c),
            a.mp.track(e, l, a.track_callback(r, l, u));
        });
      },
      this
    ),
    !0
  );
};
Al.prototype.track_callback = function (t, e, n, r) {
  r = r || !1;
  var a = this;
  return function () {
    n.callback_fired ||
      ((n.callback_fired = !0),
      !(t && t(r, e) === !1) && a.after_track_handler(e, n, r));
  };
};
Al.prototype.create_properties = function (t, e) {
  var n;
  return typeof t == "function" ? (n = t(e)) : (n = pe.extend({}, t)), n;
};
var Hf = function () {
  this.override_event = "click";
};
pe.inherit(Hf, Al);
Hf.prototype.create_properties = function (t, e) {
  var n = Hf.superclass.create_properties.apply(this, arguments);
  return e.href && (n.url = e.href), n;
};
Hf.prototype.event_handler = function (t, e, n) {
  (n.new_tab =
    t.which === 2 || t.metaKey || t.ctrlKey || e.target === "_blank"),
    (n.href = e.href),
    n.new_tab || t.preventDefault();
};
Hf.prototype.after_track_handler = function (t, e) {
  e.new_tab ||
    setTimeout(function () {
      window.location = e.href;
    }, 0);
};
var x0 = function () {
  this.override_event = "submit";
};
pe.inherit(x0, Al);
x0.prototype.event_handler = function (t, e, n) {
  (n.element = e), t.preventDefault();
};
x0.prototype.after_track_handler = function (t, e) {
  setTimeout(function () {
    e.element.submit();
  }, 0);
};
var swe = LR("lock"),
  pz = function (t, e) {
    (e = e || {}),
      (this.storageKey = t),
      (this.storage = e.storage || window.localStorage),
      (this.pollIntervalMS = e.pollIntervalMS || 100),
      (this.timeoutMS = e.timeoutMS || 2e3);
  };
pz.prototype.withLock = function (t, e, n) {
  !n && typeof e != "function" && ((n = e), (e = null));
  var r = n || new Date().getTime() + "|" + Math.random(),
    a = new Date().getTime(),
    s = this.storageKey,
    i = this.pollIntervalMS,
    o = this.timeoutMS,
    u = this.storage,
    l = s + ":X",
    c = s + ":Y",
    d = s + ":Z",
    p = function (C) {
      e && e(C);
    },
    m = function (C) {
      if (new Date().getTime() - a > o) {
        swe.error(
          "Timeout waiting for mutex on " + s + "; clearing lock. [" + r + "]"
        ),
          u.removeItem(d),
          u.removeItem(c),
          O();
        return;
      }
      setTimeout(function () {
        try {
          C();
        } catch (H) {
          p(H);
        }
      }, i * (Math.random() + 0.1));
    },
    y = function (C, H) {
      C()
        ? H()
        : m(function () {
            y(C, H);
          });
    },
    I = function () {
      var C = u.getItem(c);
      if (C && C !== r) return !1;
      if ((u.setItem(c, r), u.getItem(c) === r)) return !0;
      if (!fT(u, !0))
        throw new Error("localStorage support dropped while acquiring lock");
      return !1;
    },
    O = function () {
      u.setItem(l, r),
        y(I, function () {
          if (u.getItem(l) === r) {
            g();
            return;
          }
          m(function () {
            if (u.getItem(c) !== r) {
              O();
              return;
            }
            y(function () {
              return !u.getItem(d);
            }, g);
          });
        });
    },
    g = function () {
      u.setItem(d, "1");
      try {
        t();
      } finally {
        u.removeItem(d),
          u.getItem(c) === r && u.removeItem(c),
          u.getItem(l) === r && u.removeItem(l);
      }
    };
  try {
    if (fT(u, !0)) O();
    else throw new Error("localStorage support check failed");
  } catch (C) {
    p(C);
  }
};
var F9 = LR("batch"),
  dd = function (t, e) {
    (e = e || {}),
      (this.storageKey = t),
      (this.storage = e.storage || window.localStorage),
      (this.reportError = e.errorReporter || pe.bind(F9.error, F9)),
      (this.lock = new pz(t, { storage: this.storage })),
      (this.pid = e.pid || null),
      (this.memQueue = []);
  };
dd.prototype.enqueue = function (t, e, n) {
  var r = { id: MR(), flushAfter: new Date().getTime() + e * 2, payload: t };
  this.lock.withLock(
    pe.bind(function () {
      var s;
      try {
        var i = this.readFromStorage();
        i.push(r), (s = this.saveToStorage(i)), s && this.memQueue.push(r);
      } catch {
        this.reportError("Error enqueueing item", t), (s = !1);
      }
      n && n(s);
    }, this),
    pe.bind(function (s) {
      this.reportError("Error acquiring storage lock", s), n && n(!1);
    }, this),
    this.pid
  );
};
dd.prototype.fillBatch = function (t) {
  var e = this.memQueue.slice(0, t);
  if (e.length < t) {
    var n = this.readFromStorage();
    if (n.length) {
      var r = {};
      pe.each(e, function (i) {
        r[i.id] = !0;
      });
      for (var a = 0; a < n.length; a++) {
        var s = n[a];
        if (
          new Date().getTime() > s.flushAfter &&
          !r[s.id] &&
          ((s.orphaned = !0), e.push(s), e.length >= t)
        )
          break;
      }
    }
  }
  return e;
};
var U9 = function (t, e) {
  var n = [];
  return (
    pe.each(t, function (r) {
      r.id && !e[r.id] && n.push(r);
    }),
    n
  );
};
dd.prototype.removeItemsByID = function (t, e) {
  var n = {};
  pe.each(t, function (a) {
    n[a] = !0;
  }),
    (this.memQueue = U9(this.memQueue, n));
  var r = pe.bind(function () {
    var a;
    try {
      var s = this.readFromStorage();
      if (((s = U9(s, n)), (a = this.saveToStorage(s)), a)) {
        s = this.readFromStorage();
        for (var i = 0; i < s.length; i++) {
          var o = s[i];
          if (o.id && n[o.id])
            return this.reportError("Item not removed from storage"), !1;
        }
      }
    } catch {
      this.reportError("Error removing items", t), (a = !1);
    }
    return a;
  }, this);
  this.lock.withLock(
    function () {
      var s = r();
      e && e(s);
    },
    pe.bind(function (s) {
      var i = !1;
      if (
        (this.reportError("Error acquiring storage lock", s),
        !fT(this.storage, !0) && ((i = r()), !i))
      )
        try {
          this.storage.removeItem(this.storageKey);
        } catch (o) {
          this.reportError("Error clearing queue", o);
        }
      e && e(i);
    }, this),
    this.pid
  );
};
var K9 = function (t, e) {
  var n = [];
  return (
    pe.each(t, function (r) {
      var a = r.id;
      if (a in e) {
        var s = e[a];
        s !== null && ((r.payload = s), n.push(r));
      } else n.push(r);
    }),
    n
  );
};
dd.prototype.updatePayloads = function (t, e) {
  (this.memQueue = K9(this.memQueue, t)),
    this.lock.withLock(
      pe.bind(function () {
        var r;
        try {
          var a = this.readFromStorage();
          (a = K9(a, t)), (r = this.saveToStorage(a));
        } catch {
          this.reportError("Error updating items", t), (r = !1);
        }
        e && e(r);
      }, this),
      pe.bind(function (r) {
        this.reportError("Error acquiring storage lock", r), e && e(!1);
      }, this),
      this.pid
    );
};
dd.prototype.readFromStorage = function () {
  var t;
  try {
    (t = this.storage.getItem(this.storageKey)),
      t &&
        ((t = ST(t)),
        pe.isArray(t) ||
          (this.reportError("Invalid storage entry:", t), (t = null)));
  } catch (e) {
    this.reportError("Error retrieving queue", e), (t = null);
  }
  return t || [];
};
dd.prototype.saveToStorage = function (t) {
  try {
    return this.storage.setItem(this.storageKey, mT(t)), !0;
  } catch (e) {
    return this.reportError("Error saving queue", e), !1;
  }
};
dd.prototype.clear = function () {
  (this.memQueue = []), this.storage.removeItem(this.storageKey);
};
var rwe = 10 * 60 * 1e3,
  cy = LR("batch"),
  Iu = function (t, e) {
    (this.errorReporter = e.errorReporter),
      (this.queue = new dd(t, {
        errorReporter: pe.bind(this.reportError, this),
        storage: e.storage,
      })),
      (this.libConfig = e.libConfig),
      (this.sendRequest = e.sendRequestFunc),
      (this.beforeSendHook = e.beforeSendHook),
      (this.stopAllBatching = e.stopAllBatchingFunc),
      (this.batchSize = this.libConfig.batch_size),
      (this.flushInterval = this.libConfig.batch_flush_interval_ms),
      (this.stopped = !this.libConfig.batch_autostart),
      (this.consecutiveRemovalFailures = 0);
  };
Iu.prototype.enqueue = function (t, e) {
  this.queue.enqueue(t, this.flushInterval, e);
};
Iu.prototype.start = function () {
  (this.stopped = !1), (this.consecutiveRemovalFailures = 0), this.flush();
};
Iu.prototype.stop = function () {
  (this.stopped = !0),
    this.timeoutID && (clearTimeout(this.timeoutID), (this.timeoutID = null));
};
Iu.prototype.clear = function () {
  this.queue.clear();
};
Iu.prototype.resetBatchSize = function () {
  this.batchSize = this.libConfig.batch_size;
};
Iu.prototype.resetFlush = function () {
  this.scheduleFlush(this.libConfig.batch_flush_interval_ms);
};
Iu.prototype.scheduleFlush = function (t) {
  (this.flushInterval = t),
    this.stopped ||
      (this.timeoutID = setTimeout(
        pe.bind(this.flush, this),
        this.flushInterval
      ));
};
Iu.prototype.flush = function (t) {
  try {
    if (this.requestInProgress) {
      cy.log("Flush: Request already in progress");
      return;
    }
    t = t || {};
    var e = this.libConfig.batch_request_timeout_ms,
      n = new Date().getTime(),
      r = this.batchSize,
      a = this.queue.fillBatch(r),
      s = [],
      i = {};
    if (
      (pe.each(
        a,
        function (l) {
          var c = l.payload;
          this.beforeSendHook && !l.orphaned && (c = this.beforeSendHook(c)),
            c && s.push(c),
            (i[l.id] = c);
        },
        this
      ),
      s.length < 1)
    ) {
      this.resetFlush();
      return;
    }
    this.requestInProgress = !0;
    var o = pe.bind(function (l) {
        this.requestInProgress = !1;
        try {
          var c = !1;
          if (t.unloading) this.queue.updatePayloads(i);
          else if (
            pe.isObject(l) &&
            l.error === "timeout" &&
            new Date().getTime() - n >= e
          )
            this.reportError("Network timeout; retrying"), this.flush();
          else if (
            pe.isObject(l) &&
            l.xhr_req &&
            (l.xhr_req.status >= 500 ||
              l.xhr_req.status === 429 ||
              l.error === "timeout")
          ) {
            var d = this.flushInterval * 2,
              p = l.xhr_req.responseHeaders;
            if (p) {
              var m = p["Retry-After"];
              m && (d = parseInt(m, 10) * 1e3 || d);
            }
            (d = Math.min(rwe, d)),
              this.reportError("Error; retry in " + d + " ms"),
              this.scheduleFlush(d);
          } else if (pe.isObject(l) && l.xhr_req && l.xhr_req.status === 413)
            if (a.length > 1) {
              var y = Math.max(1, Math.floor(r / 2));
              (this.batchSize = Math.min(this.batchSize, y, a.length - 1)),
                this.reportError(
                  "413 response; reducing batch size to " + this.batchSize
                ),
                this.resetFlush();
            } else
              this.reportError("Single-event request too large; dropping", a),
                this.resetBatchSize(),
                (c = !0);
          else c = !0;
          c &&
            this.queue.removeItemsByID(
              pe.map(a, function (I) {
                return I.id;
              }),
              pe.bind(function (I) {
                I
                  ? ((this.consecutiveRemovalFailures = 0), this.flush())
                  : (this.reportError("Failed to remove items from queue"),
                    ++this.consecutiveRemovalFailures > 5
                      ? (this.reportError(
                          "Too many queue failures; disabling batching system."
                        ),
                        this.stopAllBatching())
                      : this.resetFlush());
              }, this)
            );
        } catch (I) {
          this.reportError("Error handling API response", I), this.resetFlush();
        }
      }, this),
      u = {
        method: "POST",
        verbose: !0,
        ignore_json_errors: !0,
        timeout_ms: e,
      };
    t.unloading && (u.transport = "sendBeacon"),
      cy.log("MIXPANEL REQUEST:", s),
      this.sendRequest(s, u, o);
  } catch (l) {
    this.reportError("Error flushing request queue", l), this.resetFlush();
  }
};
Iu.prototype.reportError = function (t, e) {
  if ((cy.error.apply(cy.error, arguments), this.errorReporter))
    try {
      e instanceof Error || (e = new Error(t)), this.errorReporter(t, e);
    } catch (n) {
      cy.error(n);
    }
};
var awe = "__mp_opt_in_out_";
function iwe(t, e) {
  mz(!0, t, e);
}
function owe(t, e) {
  mz(!1, t, e);
}
function uwe(t, e) {
  return fz(t, e) === "1";
}
function hz(t, e) {
  if (cwe(e))
    return (
      ts.warn(
        'This browser has "Do Not Track" enabled. This will prevent the Mixpanel SDK from sending any data. To ignore the "Do Not Track" browser setting, initialize the Mixpanel instance with the config "ignore_dnt: true"'
      ),
      !0
    );
  var n = fz(t, e) === "0";
  return (
    n &&
      ts.warn(
        "You are opted out of Mixpanel tracking. This will prevent the Mixpanel SDK from sending any data."
      ),
    n
  );
}
function wv(t) {
  return FR(t, function (e) {
    return this.get_config(e);
  });
}
function pd(t) {
  return FR(t, function (e) {
    return this._get_config(e);
  });
}
function fm(t) {
  return FR(t, function (e) {
    return this._get_config(e);
  });
}
function lwe(t, e) {
  (e = e || {}),
    DR(e).remove(GR(t, e), !!e.crossSubdomainCookie, e.cookieDomain);
}
function DR(t) {
  return (
    (t = t || {}),
    t.persistenceType === "localStorage" ? pe.localStorage : pe.cookie
  );
}
function GR(t, e) {
  return (e = e || {}), (e.persistencePrefix || awe) + t;
}
function fz(t, e) {
  return DR(e).get(GR(t, e));
}
function cwe(t) {
  if (t && t.ignoreDnt) return !1;
  var e = (t && t.window) || na,
    n = e.navigator || {},
    r = !1;
  return (
    pe.each([n.doNotTrack, n.msDoNotTrack, e.doNotTrack], function (a) {
      pe.includes([!0, 1, "1", "yes"], a) && (r = !0);
    }),
    r
  );
}
function mz(t, e, n) {
  if (!pe.isString(e) || !e.length) {
    ts.error(
      "gdpr." + (t ? "optIn" : "optOut") + " called with an invalid token"
    );
    return;
  }
  (n = n || {}),
    DR(n).set(
      GR(e, n),
      t ? 1 : 0,
      pe.isNumber(n.cookieExpiration) ? n.cookieExpiration : null,
      !!n.crossSubdomainCookie,
      !!n.secureCookie,
      !!n.crossSiteCookie,
      n.cookieDomain
    ),
    n.track &&
      t &&
      n.track(n.trackEventName || "$opt_in", n.trackProperties, {
        send_immediately: !0,
      });
}
function FR(t, e) {
  return function () {
    var n = !1;
    try {
      var r = e.call(this, "token"),
        a = e.call(this, "ignore_dnt"),
        s = e.call(this, "opt_out_tracking_persistence_type"),
        i = e.call(this, "opt_out_tracking_cookie_prefix"),
        o = e.call(this, "window");
      r &&
        (n = hz(r, {
          ignoreDnt: a,
          persistenceType: s,
          persistencePrefix: i,
          window: o,
        }));
    } catch (l) {
      ts.error("Unexpected error when checking tracking opt-out status: " + l);
    }
    if (!n) return t.apply(this, arguments);
    var u = arguments[arguments.length - 1];
    typeof u == "function" && u(0);
  };
}
var Uc = "$set",
  Nf = "$set_once",
  mo = "$unset",
  sp = "$add",
  pl = "$append",
  rp = "$union",
  Kc = "$remove",
  dwe = "$delete",
  Sz = {
    set_action: function (t, e) {
      var n = {},
        r = {};
      return (
        pe.isObject(t)
          ? pe.each(
              t,
              function (a, s) {
                this._is_reserved_property(s) || (r[s] = a);
              },
              this
            )
          : (r[t] = e),
        (n[Uc] = r),
        n
      );
    },
    unset_action: function (t) {
      var e = {},
        n = [];
      return (
        pe.isArray(t) || (t = [t]),
        pe.each(
          t,
          function (r) {
            this._is_reserved_property(r) || n.push(r);
          },
          this
        ),
        (e[mo] = n),
        e
      );
    },
    set_once_action: function (t, e) {
      var n = {},
        r = {};
      return (
        pe.isObject(t)
          ? pe.each(
              t,
              function (a, s) {
                this._is_reserved_property(s) || (r[s] = a);
              },
              this
            )
          : (r[t] = e),
        (n[Nf] = r),
        n
      );
    },
    union_action: function (t, e) {
      var n = {},
        r = {};
      return (
        pe.isObject(t)
          ? pe.each(
              t,
              function (a, s) {
                this._is_reserved_property(s) ||
                  (r[s] = pe.isArray(a) ? a : [a]);
              },
              this
            )
          : (r[t] = pe.isArray(e) ? e : [e]),
        (n[rp] = r),
        n
      );
    },
    append_action: function (t, e) {
      var n = {},
        r = {};
      return (
        pe.isObject(t)
          ? pe.each(
              t,
              function (a, s) {
                this._is_reserved_property(s) || (r[s] = a);
              },
              this
            )
          : (r[t] = e),
        (n[pl] = r),
        n
      );
    },
    remove_action: function (t, e) {
      var n = {},
        r = {};
      return (
        pe.isObject(t)
          ? pe.each(
              t,
              function (a, s) {
                this._is_reserved_property(s) || (r[s] = a);
              },
              this
            )
          : (r[t] = e),
        (n[Kc] = r),
        n
      );
    },
    delete_action: function () {
      var t = {};
      return (t[dwe] = ""), t;
    },
  },
  Ps = function () {};
pe.extend(Ps.prototype, Sz);
Ps.prototype._init = function (t, e, n) {
  (this._mixpanel = t), (this._group_key = e), (this._group_id = n);
};
Ps.prototype.set = fm(function (t, e, n) {
  var r = this.set_action(t, e);
  return pe.isObject(t) && (n = e), this._send_request(r, n);
});
Ps.prototype.set_once = fm(function (t, e, n) {
  var r = this.set_once_action(t, e);
  return pe.isObject(t) && (n = e), this._send_request(r, n);
});
Ps.prototype.unset = fm(function (t, e) {
  var n = this.unset_action(t);
  return this._send_request(n, e);
});
Ps.prototype.union = fm(function (t, e, n) {
  pe.isObject(t) && (n = e);
  var r = this.union_action(t, e);
  return this._send_request(r, n);
});
Ps.prototype.delete = fm(function (t) {
  var e = this.delete_action();
  return this._send_request(e, t);
});
Ps.prototype.remove = fm(function (t, e, n) {
  var r = this.remove_action(t, e);
  return this._send_request(r, n);
});
Ps.prototype._send_request = function (t, e) {
  (t.$group_key = this._group_key),
    (t.$group_id = this._group_id),
    (t.$token = this._get_config("token"));
  var n = pe.encodeDates(t);
  return this._mixpanel._track_or_batch(
    {
      type: "groups",
      data: n,
      endpoint: this._get_config("api_host") + "/groups/",
      batcher: this._mixpanel.request_batchers.groups,
    },
    e
  );
};
Ps.prototype._is_reserved_property = function (t) {
  return t === "$group_key" || t === "$group_id";
};
Ps.prototype._get_config = function (t) {
  return this._mixpanel.get_config(t);
};
Ps.prototype.toString = function () {
  return (
    this._mixpanel.toString() +
    ".group." +
    this._group_key +
    "." +
    this._group_id
  );
};
Ps.prototype.remove = Ps.prototype.remove;
Ps.prototype.set = Ps.prototype.set;
Ps.prototype.set_once = Ps.prototype.set_once;
Ps.prototype.union = Ps.prototype.union;
Ps.prototype.unset = Ps.prototype.unset;
Ps.prototype.toString = Ps.prototype.toString;
var dn = function () {};
pe.extend(dn.prototype, Sz);
dn.prototype._init = function (t) {
  this._mixpanel = t;
};
dn.prototype.set = pd(function (t, e, n) {
  var r = this.set_action(t, e);
  return (
    pe.isObject(t) && (n = e),
    this._get_config("save_referrer") &&
      this._mixpanel.persistence.update_referrer_info(document.referrer),
    (r[Uc] = pe.extend(
      {},
      pe.info.people_properties(),
      this._mixpanel.persistence.get_referrer_info(),
      r[Uc]
    )),
    this._send_request(r, n)
  );
});
dn.prototype.set_once = pd(function (t, e, n) {
  var r = this.set_once_action(t, e);
  return pe.isObject(t) && (n = e), this._send_request(r, n);
});
dn.prototype.unset = pd(function (t, e) {
  var n = this.unset_action(t);
  return this._send_request(n, e);
});
dn.prototype.increment = pd(function (t, e, n) {
  var r = {},
    a = {};
  return (
    pe.isObject(t)
      ? (pe.each(
          t,
          function (s, i) {
            if (!this._is_reserved_property(i))
              if (isNaN(parseFloat(s))) {
                ts.error(
                  "Invalid increment value passed to mixpanel.people.increment - must be a number"
                );
                return;
              } else a[i] = s;
          },
          this
        ),
        (n = e))
      : (pe.isUndefined(e) && (e = 1), (a[t] = e)),
    (r[sp] = a),
    this._send_request(r, n)
  );
});
dn.prototype.append = pd(function (t, e, n) {
  pe.isObject(t) && (n = e);
  var r = this.append_action(t, e);
  return this._send_request(r, n);
});
dn.prototype.remove = pd(function (t, e, n) {
  pe.isObject(t) && (n = e);
  var r = this.remove_action(t, e);
  return this._send_request(r, n);
});
dn.prototype.union = pd(function (t, e, n) {
  pe.isObject(t) && (n = e);
  var r = this.union_action(t, e);
  return this._send_request(r, n);
});
dn.prototype.track_charge = pd(function (t, e, n) {
  if (!pe.isNumber(t) && ((t = parseFloat(t)), isNaN(t))) {
    ts.error(
      "Invalid value passed to mixpanel.people.track_charge - must be a number"
    );
    return;
  }
  return this.append("$transactions", pe.extend({ $amount: t }, e), n);
});
dn.prototype.clear_charges = function (t) {
  return this.set("$transactions", [], t);
};
dn.prototype.delete_user = function () {
  if (!this._identify_called()) {
    ts.error(
      "mixpanel.people.delete_user() requires you to call identify() first"
    );
    return;
  }
  var t = { $delete: this._mixpanel.get_distinct_id() };
  return this._send_request(t);
};
dn.prototype.toString = function () {
  return this._mixpanel.toString() + ".people";
};
dn.prototype._send_request = function (t, e) {
  (t.$token = this._get_config("token")),
    (t.$distinct_id = this._mixpanel.get_distinct_id());
  var n = this._mixpanel.get_property("$device_id"),
    r = this._mixpanel.get_property("$user_id"),
    a = this._mixpanel.get_property("$had_persisted_distinct_id");
  n && (t.$device_id = n),
    r && (t.$user_id = r),
    a && (t.$had_persisted_distinct_id = a);
  var s = pe.encodeDates(t);
  return this._identify_called()
    ? this._mixpanel._track_or_batch(
        {
          type: "people",
          data: s,
          endpoint: this._get_config("api_host") + "/engage/",
          batcher: this._mixpanel.request_batchers.people,
        },
        e
      )
    : (this._enqueue(t),
      pe.isUndefined(e) ||
        (this._get_config("verbose") ? e({ status: -1, error: null }) : e(-1)),
      pe.truncate(s, 255));
};
dn.prototype._get_config = function (t) {
  return this._mixpanel.get_config(t);
};
dn.prototype._identify_called = function () {
  return this._mixpanel._flags.identify_called === !0;
};
dn.prototype._enqueue = function (t) {
  Uc in t
    ? this._mixpanel.persistence._add_to_people_queue(Uc, t)
    : Nf in t
    ? this._mixpanel.persistence._add_to_people_queue(Nf, t)
    : mo in t
    ? this._mixpanel.persistence._add_to_people_queue(mo, t)
    : sp in t
    ? this._mixpanel.persistence._add_to_people_queue(sp, t)
    : pl in t
    ? this._mixpanel.persistence._add_to_people_queue(pl, t)
    : Kc in t
    ? this._mixpanel.persistence._add_to_people_queue(Kc, t)
    : rp in t
    ? this._mixpanel.persistence._add_to_people_queue(rp, t)
    : ts.error("Invalid call to _enqueue():", t);
};
dn.prototype._flush_one_queue = function (t, e, n, r) {
  var a = this,
    s = pe.extend({}, this._mixpanel.persistence._get_queue(t)),
    i = s;
  !pe.isUndefined(s) &&
    pe.isObject(s) &&
    !pe.isEmptyObject(s) &&
    (a._mixpanel.persistence._pop_from_people_queue(t, s),
    r && (i = r(s)),
    e.call(a, i, function (o, u) {
      o === 0 && a._mixpanel.persistence._add_to_people_queue(t, s),
        pe.isUndefined(n) || n(o, u);
    }));
};
dn.prototype._flush = function (t, e, n, r, a, s, i) {
  var o = this,
    u = this._mixpanel.persistence._get_queue(pl),
    l = this._mixpanel.persistence._get_queue(Kc);
  if (
    (this._flush_one_queue(Uc, this.set, t),
    this._flush_one_queue(Nf, this.set_once, r),
    this._flush_one_queue(mo, this.unset, s, function (O) {
      return pe.keys(O);
    }),
    this._flush_one_queue(sp, this.increment, e),
    this._flush_one_queue(rp, this.union, a),
    !pe.isUndefined(u) && pe.isArray(u) && u.length)
  ) {
    for (
      var c,
        d = function (O, g) {
          O === 0 && o._mixpanel.persistence._add_to_people_queue(pl, c),
            pe.isUndefined(n) || n(O, g);
        },
        p = u.length - 1;
      p >= 0;
      p--
    )
      (c = u.pop()), pe.isEmptyObject(c) || o.append(c, d);
    o._mixpanel.persistence.save();
  }
  if (!pe.isUndefined(l) && pe.isArray(l) && l.length) {
    for (
      var m,
        y = function (O, g) {
          O === 0 && o._mixpanel.persistence._add_to_people_queue(Kc, m),
            pe.isUndefined(i) || i(O, g);
        },
        I = l.length - 1;
      I >= 0;
      I--
    )
      (m = l.pop()), pe.isEmptyObject(m) || o.remove(m, y);
    o._mixpanel.persistence.save();
  }
};
dn.prototype._is_reserved_property = function (t) {
  return (
    t === "$distinct_id" ||
    t === "$token" ||
    t === "$device_id" ||
    t === "$user_id" ||
    t === "$had_persisted_distinct_id"
  );
};
dn.prototype.set = dn.prototype.set;
dn.prototype.set_once = dn.prototype.set_once;
dn.prototype.unset = dn.prototype.unset;
dn.prototype.increment = dn.prototype.increment;
dn.prototype.append = dn.prototype.append;
dn.prototype.remove = dn.prototype.remove;
dn.prototype.union = dn.prototype.union;
dn.prototype.track_charge = dn.prototype.track_charge;
dn.prototype.clear_charges = dn.prototype.clear_charges;
dn.prototype.delete_user = dn.prototype.delete_user;
dn.prototype.toString = dn.prototype.toString;
var UR = "__mps",
  KR = "__mpso",
  BR = "__mpus",
  VR = "__mpa",
  jR = "__mpap",
  zR = "__mpr",
  $R = "__mpu",
  yz = "$people_distinct_id",
  yT = "__alias",
  dg = "__timers",
  pwe = [UR, KR, BR, VR, jR, zR, $R, yz, yT, dg],
  Pn = function (t) {
    (this.props = {}),
      (this.campaign_params_saved = !1),
      t.persistence_name
        ? (this.name = "mp_" + t.persistence_name)
        : (this.name = "mp_" + t.token + "_mixpanel");
    var e = t.persistence;
    e !== "cookie" &&
      e !== "localStorage" &&
      (ts.critical(
        "Unknown persistence type " + e + "; falling back to cookie"
      ),
      (e = t.persistence = "cookie")),
      e === "localStorage" && pe.localStorage.is_supported()
        ? (this.storage = pe.localStorage)
        : (this.storage = pe.cookie),
      this.load(),
      this.update_config(t),
      this.upgrade(t),
      this.save();
  };
Pn.prototype.properties = function () {
  var t = {};
  return (
    pe.each(this.props, function (e, n) {
      pe.include(pwe, n) || (t[n] = e);
    }),
    t
  );
};
Pn.prototype.load = function () {
  if (!this.disabled) {
    var t = this.storage.parse(this.name);
    t && (this.props = pe.extend({}, t));
  }
};
Pn.prototype.upgrade = function (t) {
  var e = t.upgrade,
    n,
    r;
  e &&
    ((n = "mp_super_properties"),
    typeof e == "string" && (n = e),
    (r = this.storage.parse(n)),
    this.storage.remove(n),
    this.storage.remove(n, !0),
    r && (this.props = pe.extend(this.props, r.all, r.events))),
    !t.cookie_name &&
      t.name !== "mixpanel" &&
      ((n = "mp_" + t.token + "_" + t.name),
      (r = this.storage.parse(n)),
      r &&
        (this.storage.remove(n),
        this.storage.remove(n, !0),
        this.register_once(r))),
    this.storage === pe.localStorage &&
      ((r = pe.cookie.parse(this.name)),
      pe.cookie.remove(this.name),
      pe.cookie.remove(this.name, !0),
      r && this.register_once(r));
};
Pn.prototype.save = function () {
  this.disabled ||
    this.storage.set(
      this.name,
      pe.JSONEncode(this.props),
      this.expire_days,
      this.cross_subdomain,
      this.secure,
      this.cross_site,
      this.cookie_domain
    );
};
Pn.prototype.remove = function () {
  this.storage.remove(this.name, !1, this.cookie_domain),
    this.storage.remove(this.name, !0, this.cookie_domain);
};
Pn.prototype.clear = function () {
  this.remove(), (this.props = {});
};
Pn.prototype.register_once = function (t, e, n) {
  return pe.isObject(t)
    ? (typeof e > "u" && (e = "None"),
      (this.expire_days = typeof n > "u" ? this.default_expiry : n),
      pe.each(
        t,
        function (r, a) {
          (!this.props.hasOwnProperty(a) || this.props[a] === e) &&
            (this.props[a] = r);
        },
        this
      ),
      this.save(),
      !0)
    : !1;
};
Pn.prototype.register = function (t, e) {
  return pe.isObject(t)
    ? ((this.expire_days = typeof e > "u" ? this.default_expiry : e),
      pe.extend(this.props, t),
      this.save(),
      !0)
    : !1;
};
Pn.prototype.unregister = function (t) {
  t in this.props && (delete this.props[t], this.save());
};
Pn.prototype.update_campaign_params = function () {
  this.campaign_params_saved ||
    (this.register_once(pe.info.campaignParams()),
    (this.campaign_params_saved = !0));
};
Pn.prototype.update_search_keyword = function (t) {
  this.register(pe.info.searchInfo(t));
};
Pn.prototype.update_referrer_info = function (t) {
  this.register_once(
    {
      $initial_referrer: t || "$direct",
      $initial_referring_domain: pe.info.referringDomain(t) || "$direct",
    },
    ""
  );
};
Pn.prototype.get_referrer_info = function () {
  return pe.strip_empty_properties({
    $initial_referrer: this.props.$initial_referrer,
    $initial_referring_domain: this.props.$initial_referring_domain,
  });
};
Pn.prototype.safe_merge = function (t) {
  return (
    pe.each(this.props, function (e, n) {
      n in t || (t[n] = e);
    }),
    t
  );
};
Pn.prototype.update_config = function (t) {
  (this.default_expiry = this.expire_days = t.cookie_expiration),
    this.set_disabled(t.disable_persistence),
    this.set_cookie_domain(t.cookie_domain),
    this.set_cross_site(t.cross_site_cookie),
    this.set_cross_subdomain(t.cross_subdomain_cookie),
    this.set_secure(t.secure_cookie);
};
Pn.prototype.set_disabled = function (t) {
  (this.disabled = t), this.disabled ? this.remove() : this.save();
};
Pn.prototype.set_cookie_domain = function (t) {
  t !== this.cookie_domain &&
    (this.remove(), (this.cookie_domain = t), this.save());
};
Pn.prototype.set_cross_site = function (t) {
  t !== this.cross_site && ((this.cross_site = t), this.remove(), this.save());
};
Pn.prototype.set_cross_subdomain = function (t) {
  t !== this.cross_subdomain &&
    ((this.cross_subdomain = t), this.remove(), this.save());
};
Pn.prototype.get_cross_subdomain = function () {
  return this.cross_subdomain;
};
Pn.prototype.set_secure = function (t) {
  t !== this.secure && ((this.secure = !!t), this.remove(), this.save());
};
Pn.prototype._add_to_people_queue = function (t, e) {
  var n = this._get_queue_key(t),
    r = e[t],
    a = this._get_or_create_queue(Uc),
    s = this._get_or_create_queue(Nf),
    i = this._get_or_create_queue(mo),
    o = this._get_or_create_queue(sp),
    u = this._get_or_create_queue(rp),
    l = this._get_or_create_queue(Kc, []),
    c = this._get_or_create_queue(pl, []);
  n === UR
    ? (pe.extend(a, r),
      this._pop_from_people_queue(sp, r),
      this._pop_from_people_queue(rp, r),
      this._pop_from_people_queue(mo, r))
    : n === KR
    ? (pe.each(r, function (d, p) {
        p in s || (s[p] = d);
      }),
      this._pop_from_people_queue(mo, r))
    : n === BR
    ? pe.each(r, function (d) {
        pe.each([a, s, o, u], function (p) {
          d in p && delete p[d];
        }),
          pe.each(c, function (p) {
            d in p && delete p[d];
          }),
          (i[d] = !0);
      })
    : n === VR
    ? (pe.each(
        r,
        function (d, p) {
          p in a ? (a[p] += d) : (p in o || (o[p] = 0), (o[p] += d));
        },
        this
      ),
      this._pop_from_people_queue(mo, r))
    : n === $R
    ? (pe.each(r, function (d, p) {
        pe.isArray(d) && (p in u || (u[p] = []), (u[p] = u[p].concat(d)));
      }),
      this._pop_from_people_queue(mo, r))
    : n === zR
    ? (l.push(r), this._pop_from_people_queue(pl, r))
    : n === jR && (c.push(r), this._pop_from_people_queue(mo, r)),
    ts.log("MIXPANEL PEOPLE REQUEST (QUEUED, PENDING IDENTIFY):"),
    ts.log(e),
    this.save();
};
Pn.prototype._pop_from_people_queue = function (t, e) {
  var n = this._get_queue(t);
  pe.isUndefined(n) ||
    (pe.each(
      e,
      function (r, a) {
        t === pl || t === Kc
          ? pe.each(n, function (s) {
              s[a] === r && delete s[a];
            })
          : delete n[a];
      },
      this
    ),
    this.save());
};
Pn.prototype._get_queue_key = function (t) {
  if (t === Uc) return UR;
  if (t === Nf) return KR;
  if (t === mo) return BR;
  if (t === sp) return VR;
  if (t === pl) return jR;
  if (t === Kc) return zR;
  if (t === rp) return $R;
  ts.error("Invalid queue:", t);
};
Pn.prototype._get_queue = function (t) {
  return this.props[this._get_queue_key(t)];
};
Pn.prototype._get_or_create_queue = function (t, e) {
  var n = this._get_queue_key(t);
  return (e = pe.isUndefined(e) ? {} : e), this.props[n] || (this.props[n] = e);
};
Pn.prototype.set_event_timer = function (t, e) {
  var n = this.props[dg] || {};
  (n[t] = e), (this.props[dg] = n), this.save();
};
Pn.prototype.remove_event_timer = function (t) {
  var e = this.props[dg] || {},
    n = e[t];
  return pe.isUndefined(n) || (delete this.props[dg][t], this.save()), n;
};
var WR,
  qr,
  gz = 0,
  hwe = 1,
  fwe = function (t) {
    return t;
  },
  pg = function () {},
  Ni = "mixpanel",
  vz = "base64",
  mwe = "json",
  tf = na.XMLHttpRequest && "withCredentials" in new XMLHttpRequest(),
  _z = !tf && po.indexOf("MSIE") === -1 && po.indexOf("Mozilla") === -1,
  gT = null;
qu.sendBeacon &&
  (gT = function () {
    return qu.sendBeacon.apply(qu, arguments);
  });
var B9 = {
    api_host: "https://api-js.mixpanel.com",
    api_method: "POST",
    api_transport: "XHR",
    api_payload_format: vz,
    app_host: "https://mixpanel.com",
    cdn: "https://cdn.mxpnl.com",
    cross_site_cookie: !1,
    cross_subdomain_cookie: !0,
    error_reporter: pg,
    persistence: "cookie",
    persistence_name: "",
    cookie_domain: "",
    cookie_name: "",
    loaded: pg,
    store_google: !0,
    save_referrer: !0,
    test: !1,
    verbose: !1,
    img: !1,
    debug: !1,
    track_links_timeout: 300,
    cookie_expiration: 365,
    upgrade: !1,
    disable_persistence: !1,
    disable_cookie: !1,
    secure_cookie: !1,
    ip: !0,
    opt_out_tracking_by_default: !1,
    opt_out_persistence_by_default: !1,
    opt_out_tracking_persistence_type: "localStorage",
    opt_out_tracking_cookie_prefix: null,
    property_blacklist: [],
    xhr_headers: {},
    ignore_dnt: !1,
    batch_requests: !0,
    batch_size: 50,
    batch_flush_interval_ms: 5e3,
    batch_request_timeout_ms: 9e4,
    batch_autostart: !0,
    hooks: {},
  },
  bz = !1,
  st = function () {},
  Y1 = function (t, e, n) {
    var r,
      a = n === Ni ? qr : qr[n];
    if (a && WR === gz) r = a;
    else {
      if (a && !pe.isArray(a)) {
        ts.error("You have already initialized " + n);
        return;
      }
      r = new st();
    }
    return (
      (r._cached_groups = {}),
      r._init(t, e, n),
      (r.people = new dn()),
      r.people._init(r),
      (wc.DEBUG = wc.DEBUG || r.get_config("debug")),
      !pe.isUndefined(a) &&
        pe.isArray(a) &&
        (r._execute_array.call(r.people, a.people), r._execute_array(a)),
      r
    );
  };
st.prototype.init = function (t, e, n) {
  if (pe.isUndefined(n)) {
    this.report_error(
      "You must name your new library: init(token, config, name)"
    );
    return;
  }
  if (n === Ni) {
    this.report_error(
      "You must initialize the main mixpanel object right after you include the Mixpanel js snippet"
    );
    return;
  }
  var r = Y1(t, e, n);
  return (qr[n] = r), r._loaded(), r;
};
st.prototype._init = function (t, e, n) {
  (e = e || {}), (this.__loaded = !0), (this.config = {});
  var r = {};
  if (!("api_payload_format" in e)) {
    var a = e.api_host || B9.api_host;
    a.match(/\.mixpanel\.com$/) && (r.api_payload_format = mwe);
  }
  if (
    (this.set_config(
      pe.extend({}, B9, r, e, {
        name: n,
        token: t,
        callback_fn: (n === Ni ? n : Ni + "." + n) + "._jsc",
      })
    ),
    (this._jsc = pg),
    (this.__dom_loaded_queue = []),
    (this.__request_queue = []),
    (this.__disabled_events = []),
    (this._flags = { disable_all_events: !1, identify_called: !1 }),
    (this.request_batchers = {}),
    (this._batch_requests = this.get_config("batch_requests")),
    this._batch_requests)
  ) {
    if (!pe.localStorage.is_supported(!0) || !tf)
      (this._batch_requests = !1),
        ts.log(
          "Turning off Mixpanel request-queueing; needs XHR and localStorage support"
        );
    else if ((this.init_batchers(), gT && na.addEventListener)) {
      var s = pe.bind(function () {
        this.request_batchers.events.stopped ||
          this.request_batchers.events.flush({ unloading: !0 });
      }, this);
      na.addEventListener("pagehide", function (o) {
        o.persisted && s();
      }),
        na.addEventListener("visibilitychange", function () {
          is.visibilityState === "hidden" && s();
        });
    }
  }
  (this.persistence = this.cookie = new Pn(this.config)),
    (this.unpersisted_superprops = {}),
    this._gdpr_init();
  var i = pe.UUID();
  this.get_distinct_id() ||
    this.register_once({ distinct_id: i, $device_id: i }, "");
};
st.prototype._loaded = function () {
  this.get_config("loaded")(this), this._set_default_superprops();
};
st.prototype._set_default_superprops = function () {
  this.persistence.update_search_keyword(is.referrer),
    this.get_config("store_google") &&
      this.persistence.update_campaign_params(),
    this.get_config("save_referrer") &&
      this.persistence.update_referrer_info(is.referrer);
};
st.prototype._dom_loaded = function () {
  pe.each(
    this.__dom_loaded_queue,
    function (t) {
      this._track_dom.apply(this, t);
    },
    this
  ),
    this.has_opted_out_tracking() ||
      pe.each(
        this.__request_queue,
        function (t) {
          this._send_request.apply(this, t);
        },
        this
      ),
    delete this.__dom_loaded_queue,
    delete this.__request_queue;
};
st.prototype._track_dom = function (t, e) {
  if (this.get_config("img"))
    return (
      this.report_error(
        "You can't use DOM tracking functions with img = true."
      ),
      !1
    );
  if (!bz) return this.__dom_loaded_queue.push([t, e]), !1;
  var n = new t().init(this);
  return n.track.apply(n, e);
};
st.prototype._prepare_callback = function (t, e) {
  if (pe.isUndefined(t)) return null;
  if (tf) {
    var n = function (i) {
      t(i, e);
    };
    return n;
  } else {
    var r = this._jsc,
      a = "" + Math.floor(Math.random() * 1e8),
      s = this.get_config("callback_fn") + "[" + a + "]";
    return (
      (r[a] = function (i) {
        delete r[a], t(i, e);
      }),
      s
    );
  }
};
st.prototype._send_request = function (t, e, n, r) {
  var a = !0;
  if (_z) return this.__request_queue.push(arguments), a;
  var s = {
      method: this.get_config("api_method"),
      transport: this.get_config("api_transport"),
      verbose: this.get_config("verbose"),
    },
    i = null;
  !r && (pe.isFunction(n) || typeof n == "string") && ((r = n), (n = null)),
    (n = pe.extend(s, n || {})),
    tf || (n.method = "GET");
  var o = n.method === "POST",
    u = gT && o && n.transport.toLowerCase() === "sendbeacon",
    l = n.verbose;
  e.verbose && (l = !0),
    this.get_config("test") && (e.test = 1),
    l && (e.verbose = 1),
    this.get_config("img") && (e.img = 1),
    tf ||
      (r
        ? (e.callback = r)
        : (l || this.get_config("test")) && (e.callback = "(function(){})")),
    (e.ip = this.get_config("ip") ? 1 : 0),
    (e._ = new Date().getTime().toString()),
    o && ((i = "data=" + encodeURIComponent(e.data)), delete e.data),
    (t += "?" + pe.HTTPBuildQuery(e));
  var c = this;
  if ("img" in e) {
    var d = is.createElement("img");
    (d.src = t), is.body.appendChild(d);
  } else if (u) {
    try {
      a = gT(t, i);
    } catch (g) {
      c.report_error(g), (a = !1);
    }
    try {
      r && r(a ? 1 : 0);
    } catch (g) {
      c.report_error(g);
    }
  } else if (tf)
    try {
      var p = new XMLHttpRequest();
      p.open(n.method, t, !0);
      var m = this.get_config("xhr_headers");
      if (
        (o && (m["Content-Type"] = "application/x-www-form-urlencoded"),
        pe.each(m, function (g, C) {
          p.setRequestHeader(C, g);
        }),
        n.timeout_ms && typeof p.timeout < "u")
      ) {
        p.timeout = n.timeout_ms;
        var y = new Date().getTime();
      }
      (p.withCredentials = !0),
        (p.onreadystatechange = function () {
          if (p.readyState === 4)
            if (p.status === 200) {
              if (r)
                if (l) {
                  var g;
                  try {
                    g = pe.JSONDecode(p.responseText);
                  } catch (H) {
                    if ((c.report_error(H), n.ignore_json_errors))
                      g = p.responseText;
                    else return;
                  }
                  r(g);
                } else r(Number(p.responseText));
            } else {
              var C;
              p.timeout && !p.status && new Date().getTime() - y >= p.timeout
                ? (C = "timeout")
                : (C = "Bad HTTP status: " + p.status + " " + p.statusText),
                c.report_error(C),
                r && r(l ? { status: 0, error: C, xhr_req: p } : 0);
            }
        }),
        p.send(i);
    } catch (g) {
      c.report_error(g), (a = !1);
    }
  else {
    var I = is.createElement("script");
    (I.type = "text/javascript"), (I.async = !0), (I.defer = !0), (I.src = t);
    var O = is.getElementsByTagName("script")[0];
    O.parentNode.insertBefore(I, O);
  }
  return a;
};
st.prototype._execute_array = function (t) {
  var e,
    n = [],
    r = [],
    a = [];
  pe.each(
    t,
    function (i) {
      i &&
        ((e = i[0]),
        pe.isArray(e)
          ? a.push(i)
          : typeof i == "function"
          ? i.call(this)
          : pe.isArray(i) && e === "alias"
          ? n.push(i)
          : pe.isArray(i) &&
            e.indexOf("track") !== -1 &&
            typeof this[e] == "function"
          ? a.push(i)
          : r.push(i));
    },
    this
  );
  var s = function (i, o) {
    pe.each(
      i,
      function (u) {
        if (pe.isArray(u[0])) {
          var l = o;
          pe.each(u, function (c) {
            l = l[c[0]].apply(l, c.slice(1));
          });
        } else this[u[0]].apply(this, u.slice(1));
      },
      o
    );
  };
  s(n, this), s(r, this), s(a, this);
};
st.prototype.are_batchers_initialized = function () {
  return !!this.request_batchers.events;
};
st.prototype.init_batchers = function () {
  var t = this.get_config("token");
  if (!this.are_batchers_initialized()) {
    var e = pe.bind(function (n) {
      return new Iu("__mpq_" + t + n.queue_suffix, {
        libConfig: this.config,
        sendRequestFunc: pe.bind(function (r, a, s) {
          this._send_request(
            this.get_config("api_host") + n.endpoint,
            this._encode_data_for_request(r),
            a,
            this._prepare_callback(s, r)
          );
        }, this),
        beforeSendHook: pe.bind(function (r) {
          return this._run_hook("before_send_" + n.type, r);
        }, this),
        errorReporter: this.get_config("error_reporter"),
        stopAllBatchingFunc: pe.bind(this.stop_batch_senders, this),
      });
    }, this);
    this.request_batchers = {
      events: e({ type: "events", endpoint: "/track/", queue_suffix: "_ev" }),
      people: e({ type: "people", endpoint: "/engage/", queue_suffix: "_pp" }),
      groups: e({ type: "groups", endpoint: "/groups/", queue_suffix: "_gr" }),
    };
  }
  this.get_config("batch_autostart") && this.start_batch_senders();
};
st.prototype.start_batch_senders = function () {
  this.are_batchers_initialized() &&
    ((this._batch_requests = !0),
    pe.each(this.request_batchers, function (t) {
      t.start();
    }));
};
st.prototype.stop_batch_senders = function () {
  (this._batch_requests = !1),
    pe.each(this.request_batchers, function (t) {
      t.stop(), t.clear();
    });
};
st.prototype.push = function (t) {
  this._execute_array([t]);
};
st.prototype.disable = function (t) {
  typeof t > "u"
    ? (this._flags.disable_all_events = !0)
    : (this.__disabled_events = this.__disabled_events.concat(t));
};
st.prototype._encode_data_for_request = function (t) {
  var e = pe.JSONEncode(t);
  return (
    this.get_config("api_payload_format") === vz && (e = pe.base64Encode(e)),
    { data: e }
  );
};
st.prototype._track_or_batch = function (t, e) {
  var n = pe.truncate(t.data, 255),
    r = t.endpoint,
    a = t.batcher,
    s = t.should_send_immediately,
    i = t.send_request_options || {};
  e = e || pg;
  var o = !0,
    u = pe.bind(function () {
      return (
        i.skip_hooks || (n = this._run_hook("before_send_" + t.type, n)),
        n
          ? (ts.log("MIXPANEL REQUEST:"),
            ts.log(n),
            this._send_request(
              r,
              this._encode_data_for_request(n),
              i,
              this._prepare_callback(e, n)
            ))
          : null
      );
    }, this);
  return (
    this._batch_requests && !s
      ? a.enqueue(n, function (l) {
          l ? e(1, n) : u();
        })
      : (o = u()),
    o && n
  );
};
st.prototype.track = wv(function (t, e, n, r) {
  !r && typeof n == "function" && ((r = n), (n = null)), (n = n || {});
  var a = n.transport;
  a && (n.transport = a);
  var s = n.send_immediately;
  if ((typeof r != "function" && (r = pg), pe.isUndefined(t))) {
    this.report_error("No event name provided to mixpanel.track");
    return;
  }
  if (this._event_is_disabled(t)) {
    r(0);
    return;
  }
  (e = e || {}), (e.token = this.get_config("token"));
  var i = this.persistence.remove_event_timer(t);
  if (!pe.isUndefined(i)) {
    var o = new Date().getTime() - i;
    e.$duration = parseFloat((o / 1e3).toFixed(3));
  }
  this._set_default_superprops(),
    (e = pe.extend(
      {},
      pe.info.properties(),
      this.persistence.properties(),
      this.unpersisted_superprops,
      e
    ));
  var u = this.get_config("property_blacklist");
  pe.isArray(u)
    ? pe.each(u, function (d) {
        delete e[d];
      })
    : this.report_error("Invalid value for property_blacklist config: " + u);
  var l = { event: t, properties: e },
    c = this._track_or_batch(
      {
        type: "events",
        data: l,
        endpoint: this.get_config("api_host") + "/track/",
        batcher: this.request_batchers.events,
        should_send_immediately: s,
        send_request_options: n,
      },
      r
    );
  return c;
});
st.prototype.set_group = wv(function (t, e, n) {
  pe.isArray(e) || (e = [e]);
  var r = {};
  return (r[t] = e), this.register(r), this.people.set(t, e, n);
});
st.prototype.add_group = wv(function (t, e, n) {
  var r = this.get_property(t);
  if (r === void 0) {
    var a = {};
    (a[t] = [e]), this.register(a);
  } else r.indexOf(e) === -1 && (r.push(e), this.register(a));
  return this.people.union(t, e, n);
});
st.prototype.remove_group = wv(function (t, e, n) {
  var r = this.get_property(t);
  if (r !== void 0) {
    var a = r.indexOf(e);
    a > -1 && (r.splice(a, 1), this.register({ group_key: r })),
      r.length === 0 && this.unregister(t);
  }
  return this.people.remove(t, e, n);
});
st.prototype.track_with_groups = wv(function (t, e, n, r) {
  var a = pe.extend({}, e || {});
  return (
    pe.each(n, function (s, i) {
      s != null && (a[i] = s);
    }),
    this.track(t, a, r)
  );
});
st.prototype._create_map_key = function (t, e) {
  return t + "_" + JSON.stringify(e);
};
st.prototype._remove_group_from_cache = function (t, e) {
  delete this._cached_groups[this._create_map_key(t, e)];
};
st.prototype.get_group = function (t, e) {
  var n = this._create_map_key(t, e),
    r = this._cached_groups[n];
  return (
    (r === void 0 || r._group_key !== t || r._group_id !== e) &&
      ((r = new Ps()), r._init(this, t, e), (this._cached_groups[n] = r)),
    r
  );
};
st.prototype.track_pageview = function (t) {
  pe.isUndefined(t) && (t = is.location.href),
    this.track("mp_page_view", pe.info.pageviewInfo(t));
};
st.prototype.track_links = function () {
  return this._track_dom.call(this, Hf, arguments);
};
st.prototype.track_forms = function () {
  return this._track_dom.call(this, x0, arguments);
};
st.prototype.time_event = function (t) {
  if (pe.isUndefined(t)) {
    this.report_error("No event name provided to mixpanel.time_event");
    return;
  }
  this._event_is_disabled(t) ||
    this.persistence.set_event_timer(t, new Date().getTime());
};
var Swe = { persistent: !0 },
  qR = function (t) {
    var e;
    return (
      pe.isObject(t)
        ? (e = t)
        : pe.isUndefined(t)
        ? (e = {})
        : (e = { days: t }),
      pe.extend({}, Swe, e)
    );
  };
st.prototype.register = function (t, e) {
  var n = qR(e);
  n.persistent
    ? this.persistence.register(t, n.days)
    : pe.extend(this.unpersisted_superprops, t);
};
st.prototype.register_once = function (t, e, n) {
  var r = qR(n);
  r.persistent
    ? this.persistence.register_once(t, e, r.days)
    : (typeof e > "u" && (e = "None"),
      pe.each(
        t,
        function (a, s) {
          (!this.unpersisted_superprops.hasOwnProperty(s) ||
            this.unpersisted_superprops[s] === e) &&
            (this.unpersisted_superprops[s] = a);
        },
        this
      ));
};
st.prototype.unregister = function (t, e) {
  (e = qR(e)),
    e.persistent
      ? this.persistence.unregister(t)
      : delete this.unpersisted_superprops[t];
};
st.prototype._register_single = function (t, e) {
  var n = {};
  (n[t] = e), this.register(n);
};
st.prototype.identify = function (t, e, n, r, a, s, i, o) {
  var u = this.get_distinct_id();
  if ((this.register({ $user_id: t }), !this.get_property("$device_id"))) {
    var l = u;
    this.register_once({ $had_persisted_distinct_id: !0, $device_id: l }, "");
  }
  t !== u &&
    t !== this.get_property(yT) &&
    (this.unregister(yT), this.register({ distinct_id: t })),
    (this._flags.identify_called = !0),
    this.people._flush(e, n, r, a, s, i, o),
    t !== u &&
      this.track(
        "$identify",
        { distinct_id: t, $anon_distinct_id: u },
        { skip_hooks: !0 }
      );
};
st.prototype.reset = function () {
  this.persistence.clear(), (this._flags.identify_called = !1);
  var t = pe.UUID();
  this.register_once({ distinct_id: t, $device_id: t }, "");
};
st.prototype.get_distinct_id = function () {
  return this.get_property("distinct_id");
};
st.prototype.alias = function (t, e) {
  if (t === this.get_property(yz))
    return (
      this.report_error(
        "Attempting to create alias for existing People user - aborting."
      ),
      -2
    );
  var n = this;
  return (
    pe.isUndefined(e) && (e = this.get_distinct_id()),
    t !== e
      ? (this._register_single(yT, t),
        this.track(
          "$create_alias",
          { alias: t, distinct_id: e },
          { skip_hooks: !0 },
          function () {
            n.identify(t);
          }
        ))
      : (this.report_error(
          "alias matches current distinct_id - skipping api call."
        ),
        this.identify(t),
        -1)
  );
};
st.prototype.name_tag = function (t) {
  this._register_single("mp_name_tag", t);
};
st.prototype.set_config = function (t) {
  if (pe.isObject(t)) {
    pe.extend(this.config, t);
    var e = t.batch_size;
    e &&
      pe.each(this.request_batchers, function (n) {
        n.resetBatchSize();
      }),
      this.get_config("persistence_name") ||
        (this.config.persistence_name = this.config.cookie_name),
      this.get_config("disable_persistence") ||
        (this.config.disable_persistence = this.config.disable_cookie),
      this.persistence && this.persistence.update_config(this.config),
      (wc.DEBUG = wc.DEBUG || this.get_config("debug"));
  }
};
st.prototype.get_config = function (t) {
  return this.config[t];
};
st.prototype._run_hook = function (t) {
  var e = (this.config.hooks[t] || fwe).apply(this, mc.call(arguments, 1));
  return (
    typeof e > "u" &&
      (this.report_error(t + " hook did not return a value"), (e = null)),
    e
  );
};
st.prototype.get_property = function (t) {
  return this.persistence.props[t];
};
st.prototype.toString = function () {
  var t = this.get_config("name");
  return t !== Ni && (t = Ni + "." + t), t;
};
st.prototype._event_is_disabled = function (t) {
  return (
    pe.isBlockedUA(po) ||
    this._flags.disable_all_events ||
    pe.include(this.__disabled_events, t)
  );
};
st.prototype._gdpr_init = function () {
  var t =
    this.get_config("opt_out_tracking_persistence_type") === "localStorage";
  t &&
    pe.localStorage.is_supported() &&
    (!this.has_opted_in_tracking() &&
      this.has_opted_in_tracking({ persistence_type: "cookie" }) &&
      this.opt_in_tracking({ enable_persistence: !1 }),
    !this.has_opted_out_tracking() &&
      this.has_opted_out_tracking({ persistence_type: "cookie" }) &&
      this.opt_out_tracking({ clear_persistence: !1 }),
    this.clear_opt_in_out_tracking({
      persistence_type: "cookie",
      enable_persistence: !1,
    })),
    this.has_opted_out_tracking()
      ? this._gdpr_update_persistence({ clear_persistence: !0 })
      : !this.has_opted_in_tracking() &&
        (this.get_config("opt_out_tracking_by_default") ||
          pe.cookie.get("mp_optout")) &&
        (pe.cookie.remove("mp_optout"),
        this.opt_out_tracking({
          clear_persistence: this.get_config("opt_out_persistence_by_default"),
        }));
};
st.prototype._gdpr_update_persistence = function (t) {
  var e;
  if (t && t.clear_persistence) e = !0;
  else if (t && t.enable_persistence) e = !1;
  else return;
  !this.get_config("disable_persistence") &&
    this.persistence.disabled !== e &&
    this.persistence.set_disabled(e),
    e &&
      pe.each(this.request_batchers, function (n) {
        n.clear();
      });
};
st.prototype._gdpr_call_func = function (t, e) {
  return (
    (e = pe.extend(
      {
        track: pe.bind(this.track, this),
        persistence_type: this.get_config("opt_out_tracking_persistence_type"),
        cookie_prefix: this.get_config("opt_out_tracking_cookie_prefix"),
        cookie_expiration: this.get_config("cookie_expiration"),
        cross_site_cookie: this.get_config("cross_site_cookie"),
        cross_subdomain_cookie: this.get_config("cross_subdomain_cookie"),
        cookie_domain: this.get_config("cookie_domain"),
        secure_cookie: this.get_config("secure_cookie"),
        ignore_dnt: this.get_config("ignore_dnt"),
      },
      e
    )),
    pe.localStorage.is_supported() || (e.persistence_type = "cookie"),
    t(this.get_config("token"), {
      track: e.track,
      trackEventName: e.track_event_name,
      trackProperties: e.track_properties,
      persistenceType: e.persistence_type,
      persistencePrefix: e.cookie_prefix,
      cookieDomain: e.cookie_domain,
      cookieExpiration: e.cookie_expiration,
      crossSiteCookie: e.cross_site_cookie,
      crossSubdomainCookie: e.cross_subdomain_cookie,
      secureCookie: e.secure_cookie,
      ignoreDnt: e.ignore_dnt,
    })
  );
};
st.prototype.opt_in_tracking = function (t) {
  (t = pe.extend({ enable_persistence: !0 }, t)),
    this._gdpr_call_func(iwe, t),
    this._gdpr_update_persistence(t);
};
st.prototype.opt_out_tracking = function (t) {
  (t = pe.extend({ clear_persistence: !0, delete_user: !0 }, t)),
    t.delete_user &&
      this.people &&
      this.people._identify_called() &&
      (this.people.delete_user(), this.people.clear_charges()),
    this._gdpr_call_func(owe, t),
    this._gdpr_update_persistence(t);
};
st.prototype.has_opted_in_tracking = function (t) {
  return this._gdpr_call_func(uwe, t);
};
st.prototype.has_opted_out_tracking = function (t) {
  return this._gdpr_call_func(hz, t);
};
st.prototype.clear_opt_in_out_tracking = function (t) {
  (t = pe.extend({ enable_persistence: !0 }, t)),
    this._gdpr_call_func(lwe, t),
    this._gdpr_update_persistence(t);
};
st.prototype.report_error = function (t, e) {
  ts.error.apply(ts.error, arguments);
  try {
    !e && !(t instanceof Error) && (t = new Error(t)),
      this.get_config("error_reporter")(t, e);
  } catch (n) {
    ts.error(n);
  }
};
st.prototype.init = st.prototype.init;
st.prototype.reset = st.prototype.reset;
st.prototype.disable = st.prototype.disable;
st.prototype.time_event = st.prototype.time_event;
st.prototype.track = st.prototype.track;
st.prototype.track_links = st.prototype.track_links;
st.prototype.track_forms = st.prototype.track_forms;
st.prototype.track_pageview = st.prototype.track_pageview;
st.prototype.register = st.prototype.register;
st.prototype.register_once = st.prototype.register_once;
st.prototype.unregister = st.prototype.unregister;
st.prototype.identify = st.prototype.identify;
st.prototype.alias = st.prototype.alias;
st.prototype.name_tag = st.prototype.name_tag;
st.prototype.set_config = st.prototype.set_config;
st.prototype.get_config = st.prototype.get_config;
st.prototype.get_property = st.prototype.get_property;
st.prototype.get_distinct_id = st.prototype.get_distinct_id;
st.prototype.toString = st.prototype.toString;
st.prototype.opt_out_tracking = st.prototype.opt_out_tracking;
st.prototype.opt_in_tracking = st.prototype.opt_in_tracking;
st.prototype.has_opted_out_tracking = st.prototype.has_opted_out_tracking;
st.prototype.has_opted_in_tracking = st.prototype.has_opted_in_tracking;
st.prototype.clear_opt_in_out_tracking = st.prototype.clear_opt_in_out_tracking;
st.prototype.get_group = st.prototype.get_group;
st.prototype.set_group = st.prototype.set_group;
st.prototype.add_group = st.prototype.add_group;
st.prototype.remove_group = st.prototype.remove_group;
st.prototype.track_with_groups = st.prototype.track_with_groups;
st.prototype.start_batch_senders = st.prototype.start_batch_senders;
st.prototype.stop_batch_senders = st.prototype.stop_batch_senders;
Pn.prototype.properties = Pn.prototype.properties;
Pn.prototype.update_search_keyword = Pn.prototype.update_search_keyword;
Pn.prototype.update_referrer_info = Pn.prototype.update_referrer_info;
Pn.prototype.get_cross_subdomain = Pn.prototype.get_cross_subdomain;
Pn.prototype.clear = Pn.prototype.clear;
var wh = {},
  ywe = function () {
    pe.each(wh, function (t, e) {
      e !== Ni && (qr[e] = t);
    }),
      (qr._ = pe);
  },
  gwe = function () {
    qr.init = function (t, e, n) {
      if (n)
        return qr[n] || ((qr[n] = wh[n] = Y1(t, e, n)), qr[n]._loaded()), qr[n];
      var r = qr;
      wh[Ni]
        ? (r = wh[Ni])
        : t && ((r = Y1(t, e, Ni)), r._loaded(), (wh[Ni] = r)),
        (qr = r),
        WR === hwe && (na[Ni] = qr),
        ywe();
    };
  },
  vwe = function () {
    function t() {
      t.done ||
        ((t.done = !0),
        (bz = !0),
        (_z = !1),
        pe.each(wh, function (r) {
          r._dom_loaded();
        }));
    }
    function e() {
      try {
        is.documentElement.doScroll("left");
      } catch {
        setTimeout(e, 1);
        return;
      }
      t();
    }
    if (is.addEventListener)
      is.readyState === "complete"
        ? t()
        : is.addEventListener("DOMContentLoaded", t, !1);
    else if (is.attachEvent) {
      is.attachEvent("onreadystatechange", t);
      var n = !1;
      try {
        n = na.frameElement === null;
      } catch {}
      is.documentElement.doScroll && n && e();
    }
    pe.register_event(na, "load", t, !0);
  };
function _we() {
  return (WR = gz), (qr = new st()), gwe(), qr.init(), vwe(), qr;
}
var bwe = _we(),
  Ewe = bwe;
const Twe = Lo(Ewe);
var Bn;
(function (t) {
  t.assertEqual = (a) => a;
  function e(a) {}
  t.assertIs = e;
  function n(a) {
    throw new Error();
  }
  (t.assertNever = n),
    (t.arrayToEnum = (a) => {
      const s = {};
      for (const i of a) s[i] = i;
      return s;
    }),
    (t.getValidEnumValues = (a) => {
      const s = t.objectKeys(a).filter((o) => typeof a[a[o]] != "number"),
        i = {};
      for (const o of s) i[o] = a[o];
      return t.objectValues(i);
    }),
    (t.objectValues = (a) =>
      t.objectKeys(a).map(function (s) {
        return a[s];
      })),
    (t.objectKeys =
      typeof Object.keys == "function"
        ? (a) => Object.keys(a)
        : (a) => {
            const s = [];
            for (const i in a)
              Object.prototype.hasOwnProperty.call(a, i) && s.push(i);
            return s;
          }),
    (t.find = (a, s) => {
      for (const i of a) if (s(i)) return i;
    }),
    (t.isInteger =
      typeof Number.isInteger == "function"
        ? (a) => Number.isInteger(a)
        : (a) => typeof a == "number" && isFinite(a) && Math.floor(a) === a);
  function r(a, s = " | ") {
    return a.map((i) => (typeof i == "string" ? `'${i}'` : i)).join(s);
  }
  (t.joinValues = r),
    (t.jsonStringifyReplacer = (a, s) =>
      typeof s == "bigint" ? s.toString() : s);
})(Bn || (Bn = {}));
var X1;
(function (t) {
  t.mergeShapes = (e, n) => ({ ...e, ...n });
})(X1 || (X1 = {}));
const At = Bn.arrayToEnum([
    "string",
    "nan",
    "number",
    "integer",
    "float",
    "boolean",
    "date",
    "bigint",
    "symbol",
    "function",
    "undefined",
    "null",
    "array",
    "object",
    "unknown",
    "promise",
    "void",
    "never",
    "map",
    "set",
  ]),
  uc = (t) => {
    switch (typeof t) {
      case "undefined":
        return At.undefined;
      case "string":
        return At.string;
      case "number":
        return isNaN(t) ? At.nan : At.number;
      case "boolean":
        return At.boolean;
      case "function":
        return At.function;
      case "bigint":
        return At.bigint;
      case "symbol":
        return At.symbol;
      case "object":
        return Array.isArray(t)
          ? At.array
          : t === null
          ? At.null
          : t.then &&
            typeof t.then == "function" &&
            t.catch &&
            typeof t.catch == "function"
          ? At.promise
          : typeof Map < "u" && t instanceof Map
          ? At.map
          : typeof Set < "u" && t instanceof Set
          ? At.set
          : typeof Date < "u" && t instanceof Date
          ? At.date
          : At.object;
      default:
        return At.unknown;
    }
  },
  St = Bn.arrayToEnum([
    "invalid_type",
    "invalid_literal",
    "custom",
    "invalid_union",
    "invalid_union_discriminator",
    "invalid_enum_value",
    "unrecognized_keys",
    "invalid_arguments",
    "invalid_return_type",
    "invalid_date",
    "invalid_string",
    "too_small",
    "too_big",
    "invalid_intersection_types",
    "not_multiple_of",
    "not_finite",
  ]),
  wwe = (t) => JSON.stringify(t, null, 2).replace(/"([^"]+)":/g, "$1:");
class wo extends Error {
  constructor(e) {
    super(),
      (this.issues = []),
      (this.addIssue = (r) => {
        this.issues = [...this.issues, r];
      }),
      (this.addIssues = (r = []) => {
        this.issues = [...this.issues, ...r];
      });
    const n = new.target.prototype;
    Object.setPrototypeOf
      ? Object.setPrototypeOf(this, n)
      : (this.__proto__ = n),
      (this.name = "ZodError"),
      (this.issues = e);
  }
  get errors() {
    return this.issues;
  }
  format(e) {
    const n =
        e ||
        function (s) {
          return s.message;
        },
      r = { _errors: [] },
      a = (s) => {
        for (const i of s.issues)
          if (i.code === "invalid_union") i.unionErrors.map(a);
          else if (i.code === "invalid_return_type") a(i.returnTypeError);
          else if (i.code === "invalid_arguments") a(i.argumentsError);
          else if (i.path.length === 0) r._errors.push(n(i));
          else {
            let o = r,
              u = 0;
            for (; u < i.path.length; ) {
              const l = i.path[u];
              u === i.path.length - 1
                ? ((o[l] = o[l] || { _errors: [] }), o[l]._errors.push(n(i)))
                : (o[l] = o[l] || { _errors: [] }),
                (o = o[l]),
                u++;
            }
          }
      };
    return a(this), r;
  }
  toString() {
    return this.message;
  }
  get message() {
    return JSON.stringify(this.issues, Bn.jsonStringifyReplacer, 2);
  }
  get isEmpty() {
    return this.issues.length === 0;
  }
  flatten(e = (n) => n.message) {
    const n = {},
      r = [];
    for (const a of this.issues)
      a.path.length > 0
        ? ((n[a.path[0]] = n[a.path[0]] || []), n[a.path[0]].push(e(a)))
        : r.push(e(a));
    return { formErrors: r, fieldErrors: n };
  }
  get formErrors() {
    return this.flatten();
  }
}
wo.create = (t) => new wo(t);
const hg = (t, e) => {
  let n;
  switch (t.code) {
    case St.invalid_type:
      t.received === At.undefined
        ? (n = "Required")
        : (n = `Expected ${t.expected}, received ${t.received}`);
      break;
    case St.invalid_literal:
      n = `Invalid literal value, expected ${JSON.stringify(
        t.expected,
        Bn.jsonStringifyReplacer
      )}`;
      break;
    case St.unrecognized_keys:
      n = `Unrecognized key(s) in object: ${Bn.joinValues(t.keys, ", ")}`;
      break;
    case St.invalid_union:
      n = "Invalid input";
      break;
    case St.invalid_union_discriminator:
      n = `Invalid discriminator value. Expected ${Bn.joinValues(t.options)}`;
      break;
    case St.invalid_enum_value:
      n = `Invalid enum value. Expected ${Bn.joinValues(
        t.options
      )}, received '${t.received}'`;
      break;
    case St.invalid_arguments:
      n = "Invalid function arguments";
      break;
    case St.invalid_return_type:
      n = "Invalid function return type";
      break;
    case St.invalid_date:
      n = "Invalid date";
      break;
    case St.invalid_string:
      typeof t.validation == "object"
        ? "includes" in t.validation
          ? ((n = `Invalid input: must include "${t.validation.includes}"`),
            typeof t.validation.position == "number" &&
              (n = `${n} at one or more positions greater than or equal to ${t.validation.position}`))
          : "startsWith" in t.validation
          ? (n = `Invalid input: must start with "${t.validation.startsWith}"`)
          : "endsWith" in t.validation
          ? (n = `Invalid input: must end with "${t.validation.endsWith}"`)
          : Bn.assertNever(t.validation)
        : t.validation !== "regex"
        ? (n = `Invalid ${t.validation}`)
        : (n = "Invalid");
      break;
    case St.too_small:
      t.type === "array"
        ? (n = `Array must contain ${
            t.exact ? "exactly" : t.inclusive ? "at least" : "more than"
          } ${t.minimum} element(s)`)
        : t.type === "string"
        ? (n = `String must contain ${
            t.exact ? "exactly" : t.inclusive ? "at least" : "over"
          } ${t.minimum} character(s)`)
        : t.type === "number"
        ? (n = `Number must be ${
            t.exact
              ? "exactly equal to "
              : t.inclusive
              ? "greater than or equal to "
              : "greater than "
          }${t.minimum}`)
        : t.type === "date"
        ? (n = `Date must be ${
            t.exact
              ? "exactly equal to "
              : t.inclusive
              ? "greater than or equal to "
              : "greater than "
          }${new Date(Number(t.minimum))}`)
        : (n = "Invalid input");
      break;
    case St.too_big:
      t.type === "array"
        ? (n = `Array must contain ${
            t.exact ? "exactly" : t.inclusive ? "at most" : "less than"
          } ${t.maximum} element(s)`)
        : t.type === "string"
        ? (n = `String must contain ${
            t.exact ? "exactly" : t.inclusive ? "at most" : "under"
          } ${t.maximum} character(s)`)
        : t.type === "number"
        ? (n = `Number must be ${
            t.exact
              ? "exactly"
              : t.inclusive
              ? "less than or equal to"
              : "less than"
          } ${t.maximum}`)
        : t.type === "bigint"
        ? (n = `BigInt must be ${
            t.exact
              ? "exactly"
              : t.inclusive
              ? "less than or equal to"
              : "less than"
          } ${t.maximum}`)
        : t.type === "date"
        ? (n = `Date must be ${
            t.exact
              ? "exactly"
              : t.inclusive
              ? "smaller than or equal to"
              : "smaller than"
          } ${new Date(Number(t.maximum))}`)
        : (n = "Invalid input");
      break;
    case St.custom:
      n = "Invalid input";
      break;
    case St.invalid_intersection_types:
      n = "Intersection results could not be merged";
      break;
    case St.not_multiple_of:
      n = `Number must be a multiple of ${t.multipleOf}`;
      break;
    case St.not_finite:
      n = "Number must be finite";
      break;
    default:
      (n = e.defaultError), Bn.assertNever(t);
  }
  return { message: n };
};
let Ez = hg;
function Pwe(t) {
  Ez = t;
}
function vT() {
  return Ez;
}
const _T = (t) => {
    const { data: e, path: n, errorMaps: r, issueData: a } = t,
      s = [...n, ...(a.path || [])],
      i = { ...a, path: s };
    let o = "";
    const u = r
      .filter((l) => !!l)
      .slice()
      .reverse();
    for (const l of u) o = l(i, { data: e, defaultError: o }).message;
    return { ...a, path: s, message: a.message || o };
  },
  Iwe = [];
function Ht(t, e) {
  const n = _T({
    issueData: e,
    data: t.data,
    path: t.path,
    errorMaps: [t.common.contextualErrorMap, t.schemaErrorMap, vT(), hg].filter(
      (r) => !!r
    ),
  });
  t.common.issues.push(n);
}
class ra {
  constructor() {
    this.value = "valid";
  }
  dirty() {
    this.value === "valid" && (this.value = "dirty");
  }
  abort() {
    this.value !== "aborted" && (this.value = "aborted");
  }
  static mergeArray(e, n) {
    const r = [];
    for (const a of n) {
      if (a.status === "aborted") return cn;
      a.status === "dirty" && e.dirty(), r.push(a.value);
    }
    return { status: e.value, value: r };
  }
  static async mergeObjectAsync(e, n) {
    const r = [];
    for (const a of n) r.push({ key: await a.key, value: await a.value });
    return ra.mergeObjectSync(e, r);
  }
  static mergeObjectSync(e, n) {
    const r = {};
    for (const a of n) {
      const { key: s, value: i } = a;
      if (s.status === "aborted" || i.status === "aborted") return cn;
      s.status === "dirty" && e.dirty(),
        i.status === "dirty" && e.dirty(),
        s.value !== "__proto__" &&
          (typeof i.value < "u" || a.alwaysSet) &&
          (r[s.value] = i.value);
    }
    return { status: e.value, value: r };
  }
}
const cn = Object.freeze({ status: "aborted" }),
  Tz = (t) => ({ status: "dirty", value: t }),
  ba = (t) => ({ status: "valid", value: t }),
  Q1 = (t) => t.status === "aborted",
  J1 = (t) => t.status === "dirty",
  fg = (t) => t.status === "valid",
  bT = (t) => typeof Promise < "u" && t instanceof Promise;
var Vt;
(function (t) {
  (t.errToObj = (e) => (typeof e == "string" ? { message: e } : e || {})),
    (t.toString = (e) =>
      typeof e == "string" ? e : e == null ? void 0 : e.message);
})(Vt || (Vt = {}));
class yu {
  constructor(e, n, r, a) {
    (this._cachedPath = []),
      (this.parent = e),
      (this.data = n),
      (this._path = r),
      (this._key = a);
  }
  get path() {
    return (
      this._cachedPath.length ||
        (this._key instanceof Array
          ? this._cachedPath.push(...this._path, ...this._key)
          : this._cachedPath.push(...this._path, this._key)),
      this._cachedPath
    );
  }
}
const V9 = (t, e) => {
  if (fg(e)) return { success: !0, data: e.value };
  if (!t.common.issues.length)
    throw new Error("Validation failed but no issues detected.");
  return {
    success: !1,
    get error() {
      if (this._error) return this._error;
      const n = new wo(t.common.issues);
      return (this._error = n), this._error;
    },
  };
};
function fn(t) {
  if (!t) return {};
  const {
    errorMap: e,
    invalid_type_error: n,
    required_error: r,
    description: a,
  } = t;
  if (e && (n || r))
    throw new Error(
      `Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`
    );
  return e
    ? { errorMap: e, description: a }
    : {
        errorMap: (i, o) =>
          i.code !== "invalid_type"
            ? { message: o.defaultError }
            : typeof o.data > "u"
            ? { message: r ?? o.defaultError }
            : { message: n ?? o.defaultError },
        description: a,
      };
}
class yn {
  constructor(e) {
    (this.spa = this.safeParseAsync),
      (this._def = e),
      (this.parse = this.parse.bind(this)),
      (this.safeParse = this.safeParse.bind(this)),
      (this.parseAsync = this.parseAsync.bind(this)),
      (this.safeParseAsync = this.safeParseAsync.bind(this)),
      (this.spa = this.spa.bind(this)),
      (this.refine = this.refine.bind(this)),
      (this.refinement = this.refinement.bind(this)),
      (this.superRefine = this.superRefine.bind(this)),
      (this.optional = this.optional.bind(this)),
      (this.nullable = this.nullable.bind(this)),
      (this.nullish = this.nullish.bind(this)),
      (this.array = this.array.bind(this)),
      (this.promise = this.promise.bind(this)),
      (this.or = this.or.bind(this)),
      (this.and = this.and.bind(this)),
      (this.transform = this.transform.bind(this)),
      (this.brand = this.brand.bind(this)),
      (this.default = this.default.bind(this)),
      (this.catch = this.catch.bind(this)),
      (this.describe = this.describe.bind(this)),
      (this.pipe = this.pipe.bind(this)),
      (this.readonly = this.readonly.bind(this)),
      (this.isNullable = this.isNullable.bind(this)),
      (this.isOptional = this.isOptional.bind(this));
  }
  get description() {
    return this._def.description;
  }
  _getType(e) {
    return uc(e.data);
  }
  _getOrReturnCtx(e, n) {
    return (
      n || {
        common: e.parent.common,
        data: e.data,
        parsedType: uc(e.data),
        schemaErrorMap: this._def.errorMap,
        path: e.path,
        parent: e.parent,
      }
    );
  }
  _processInputParams(e) {
    return {
      status: new ra(),
      ctx: {
        common: e.parent.common,
        data: e.data,
        parsedType: uc(e.data),
        schemaErrorMap: this._def.errorMap,
        path: e.path,
        parent: e.parent,
      },
    };
  }
  _parseSync(e) {
    const n = this._parse(e);
    if (bT(n)) throw new Error("Synchronous parse encountered promise.");
    return n;
  }
  _parseAsync(e) {
    const n = this._parse(e);
    return Promise.resolve(n);
  }
  parse(e, n) {
    const r = this.safeParse(e, n);
    if (r.success) return r.data;
    throw r.error;
  }
  safeParse(e, n) {
    var r;
    const a = {
        common: {
          issues: [],
          async:
            (r = n == null ? void 0 : n.async) !== null && r !== void 0
              ? r
              : !1,
          contextualErrorMap: n == null ? void 0 : n.errorMap,
        },
        path: (n == null ? void 0 : n.path) || [],
        schemaErrorMap: this._def.errorMap,
        parent: null,
        data: e,
        parsedType: uc(e),
      },
      s = this._parseSync({ data: e, path: a.path, parent: a });
    return V9(a, s);
  }
  async parseAsync(e, n) {
    const r = await this.safeParseAsync(e, n);
    if (r.success) return r.data;
    throw r.error;
  }
  async safeParseAsync(e, n) {
    const r = {
        common: {
          issues: [],
          contextualErrorMap: n == null ? void 0 : n.errorMap,
          async: !0,
        },
        path: (n == null ? void 0 : n.path) || [],
        schemaErrorMap: this._def.errorMap,
        parent: null,
        data: e,
        parsedType: uc(e),
      },
      a = this._parse({ data: e, path: r.path, parent: r }),
      s = await (bT(a) ? a : Promise.resolve(a));
    return V9(r, s);
  }
  refine(e, n) {
    const r = (a) =>
      typeof n == "string" || typeof n > "u"
        ? { message: n }
        : typeof n == "function"
        ? n(a)
        : n;
    return this._refinement((a, s) => {
      const i = e(a),
        o = () => s.addIssue({ code: St.custom, ...r(a) });
      return typeof Promise < "u" && i instanceof Promise
        ? i.then((u) => (u ? !0 : (o(), !1)))
        : i
        ? !0
        : (o(), !1);
    });
  }
  refinement(e, n) {
    return this._refinement((r, a) =>
      e(r) ? !0 : (a.addIssue(typeof n == "function" ? n(r, a) : n), !1)
    );
  }
  _refinement(e) {
    return new No({
      schema: this,
      typeName: Yt.ZodEffects,
      effect: { type: "refinement", refinement: e },
    });
  }
  superRefine(e) {
    return this._refinement(e);
  }
  optional() {
    return rl.create(this, this._def);
  }
  nullable() {
    return op.create(this, this._def);
  }
  nullish() {
    return this.nullable().optional();
  }
  array() {
    return Po.create(this, this._def);
  }
  promise() {
    return kf.create(this, this._def);
  }
  or(e) {
    return gg.create([this, e], this._def);
  }
  and(e) {
    return vg.create(this, e, this._def);
  }
  transform(e) {
    return new No({
      ...fn(this._def),
      schema: this,
      typeName: Yt.ZodEffects,
      effect: { type: "transform", transform: e },
    });
  }
  default(e) {
    const n = typeof e == "function" ? e : () => e;
    return new wg({
      ...fn(this._def),
      innerType: this,
      defaultValue: n,
      typeName: Yt.ZodDefault,
    });
  }
  brand() {
    return new Pz({ typeName: Yt.ZodBranded, type: this, ...fn(this._def) });
  }
  catch(e) {
    const n = typeof e == "function" ? e : () => e;
    return new PT({
      ...fn(this._def),
      innerType: this,
      catchValue: n,
      typeName: Yt.ZodCatch,
    });
  }
  describe(e) {
    const n = this.constructor;
    return new n({ ...this._def, description: e });
  }
  pipe(e) {
    return Pv.create(this, e);
  }
  readonly() {
    return CT.create(this);
  }
  isOptional() {
    return this.safeParse(void 0).success;
  }
  isNullable() {
    return this.safeParse(null).success;
  }
}
const Cwe = /^c[^\s-]{8,}$/i,
  Awe = /^[a-z][a-z0-9]*$/,
  Owe = /[0-9A-HJKMNP-TV-Z]{26}/,
  Hwe =
    /^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i,
  Nwe =
    /^(?!\.)(?!.*\.\.)([A-Z0-9_+-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i,
  Rwe = /^(\p{Extended_Pictographic}|\p{Emoji_Component})+$/u,
  kwe =
    /^(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))$/,
  xwe =
    /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,
  Lwe = (t) =>
    t.precision
      ? t.offset
        ? new RegExp(
            `^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{${t.precision}}(([+-]\\d{2}(:?\\d{2})?)|Z)$`
          )
        : new RegExp(
            `^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{${t.precision}}Z$`
          )
      : t.precision === 0
      ? t.offset
        ? new RegExp(
            "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(([+-]\\d{2}(:?\\d{2})?)|Z)$"
          )
        : new RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$")
      : t.offset
      ? new RegExp(
          "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(([+-]\\d{2}(:?\\d{2})?)|Z)$"
        )
      : new RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z$");
function Mwe(t, e) {
  return !!(
    ((e === "v4" || !e) && kwe.test(t)) ||
    ((e === "v6" || !e) && xwe.test(t))
  );
}
class bo extends yn {
  constructor() {
    super(...arguments),
      (this._regex = (e, n, r) =>
        this.refinement((a) => e.test(a), {
          validation: n,
          code: St.invalid_string,
          ...Vt.errToObj(r),
        })),
      (this.nonempty = (e) => this.min(1, Vt.errToObj(e))),
      (this.trim = () =>
        new bo({
          ...this._def,
          checks: [...this._def.checks, { kind: "trim" }],
        })),
      (this.toLowerCase = () =>
        new bo({
          ...this._def,
          checks: [...this._def.checks, { kind: "toLowerCase" }],
        })),
      (this.toUpperCase = () =>
        new bo({
          ...this._def,
          checks: [...this._def.checks, { kind: "toUpperCase" }],
        }));
  }
  _parse(e) {
    if (
      (this._def.coerce && (e.data = String(e.data)),
      this._getType(e) !== At.string)
    ) {
      const s = this._getOrReturnCtx(e);
      return (
        Ht(s, {
          code: St.invalid_type,
          expected: At.string,
          received: s.parsedType,
        }),
        cn
      );
    }
    const r = new ra();
    let a;
    for (const s of this._def.checks)
      if (s.kind === "min")
        e.data.length < s.value &&
          ((a = this._getOrReturnCtx(e, a)),
          Ht(a, {
            code: St.too_small,
            minimum: s.value,
            type: "string",
            inclusive: !0,
            exact: !1,
            message: s.message,
          }),
          r.dirty());
      else if (s.kind === "max")
        e.data.length > s.value &&
          ((a = this._getOrReturnCtx(e, a)),
          Ht(a, {
            code: St.too_big,
            maximum: s.value,
            type: "string",
            inclusive: !0,
            exact: !1,
            message: s.message,
          }),
          r.dirty());
      else if (s.kind === "length") {
        const i = e.data.length > s.value,
          o = e.data.length < s.value;
        (i || o) &&
          ((a = this._getOrReturnCtx(e, a)),
          i
            ? Ht(a, {
                code: St.too_big,
                maximum: s.value,
                type: "string",
                inclusive: !0,
                exact: !0,
                message: s.message,
              })
            : o &&
              Ht(a, {
                code: St.too_small,
                minimum: s.value,
                type: "string",
                inclusive: !0,
                exact: !0,
                message: s.message,
              }),
          r.dirty());
      } else if (s.kind === "email")
        Nwe.test(e.data) ||
          ((a = this._getOrReturnCtx(e, a)),
          Ht(a, {
            validation: "email",
            code: St.invalid_string,
            message: s.message,
          }),
          r.dirty());
      else if (s.kind === "emoji")
        Rwe.test(e.data) ||
          ((a = this._getOrReturnCtx(e, a)),
          Ht(a, {
            validation: "emoji",
            code: St.invalid_string,
            message: s.message,
          }),
          r.dirty());
      else if (s.kind === "uuid")
        Hwe.test(e.data) ||
          ((a = this._getOrReturnCtx(e, a)),
          Ht(a, {
            validation: "uuid",
            code: St.invalid_string,
            message: s.message,
          }),
          r.dirty());
      else if (s.kind === "cuid")
        Cwe.test(e.data) ||
          ((a = this._getOrReturnCtx(e, a)),
          Ht(a, {
            validation: "cuid",
            code: St.invalid_string,
            message: s.message,
          }),
          r.dirty());
      else if (s.kind === "cuid2")
        Awe.test(e.data) ||
          ((a = this._getOrReturnCtx(e, a)),
          Ht(a, {
            validation: "cuid2",
            code: St.invalid_string,
            message: s.message,
          }),
          r.dirty());
      else if (s.kind === "ulid")
        Owe.test(e.data) ||
          ((a = this._getOrReturnCtx(e, a)),
          Ht(a, {
            validation: "ulid",
            code: St.invalid_string,
            message: s.message,
          }),
          r.dirty());
      else if (s.kind === "url")
        try {
          new URL(e.data);
        } catch {
          (a = this._getOrReturnCtx(e, a)),
            Ht(a, {
              validation: "url",
              code: St.invalid_string,
              message: s.message,
            }),
            r.dirty();
        }
      else
        s.kind === "regex"
          ? ((s.regex.lastIndex = 0),
            s.regex.test(e.data) ||
              ((a = this._getOrReturnCtx(e, a)),
              Ht(a, {
                validation: "regex",
                code: St.invalid_string,
                message: s.message,
              }),
              r.dirty()))
          : s.kind === "trim"
          ? (e.data = e.data.trim())
          : s.kind === "includes"
          ? e.data.includes(s.value, s.position) ||
            ((a = this._getOrReturnCtx(e, a)),
            Ht(a, {
              code: St.invalid_string,
              validation: { includes: s.value, position: s.position },
              message: s.message,
            }),
            r.dirty())
          : s.kind === "toLowerCase"
          ? (e.data = e.data.toLowerCase())
          : s.kind === "toUpperCase"
          ? (e.data = e.data.toUpperCase())
          : s.kind === "startsWith"
          ? e.data.startsWith(s.value) ||
            ((a = this._getOrReturnCtx(e, a)),
            Ht(a, {
              code: St.invalid_string,
              validation: { startsWith: s.value },
              message: s.message,
            }),
            r.dirty())
          : s.kind === "endsWith"
          ? e.data.endsWith(s.value) ||
            ((a = this._getOrReturnCtx(e, a)),
            Ht(a, {
              code: St.invalid_string,
              validation: { endsWith: s.value },
              message: s.message,
            }),
            r.dirty())
          : s.kind === "datetime"
          ? Lwe(s).test(e.data) ||
            ((a = this._getOrReturnCtx(e, a)),
            Ht(a, {
              code: St.invalid_string,
              validation: "datetime",
              message: s.message,
            }),
            r.dirty())
          : s.kind === "ip"
          ? Mwe(e.data, s.version) ||
            ((a = this._getOrReturnCtx(e, a)),
            Ht(a, {
              validation: "ip",
              code: St.invalid_string,
              message: s.message,
            }),
            r.dirty())
          : Bn.assertNever(s);
    return { status: r.value, value: e.data };
  }
  _addCheck(e) {
    return new bo({ ...this._def, checks: [...this._def.checks, e] });
  }
  email(e) {
    return this._addCheck({ kind: "email", ...Vt.errToObj(e) });
  }
  url(e) {
    return this._addCheck({ kind: "url", ...Vt.errToObj(e) });
  }
  emoji(e) {
    return this._addCheck({ kind: "emoji", ...Vt.errToObj(e) });
  }
  uuid(e) {
    return this._addCheck({ kind: "uuid", ...Vt.errToObj(e) });
  }
  cuid(e) {
    return this._addCheck({ kind: "cuid", ...Vt.errToObj(e) });
  }
  cuid2(e) {
    return this._addCheck({ kind: "cuid2", ...Vt.errToObj(e) });
  }
  ulid(e) {
    return this._addCheck({ kind: "ulid", ...Vt.errToObj(e) });
  }
  ip(e) {
    return this._addCheck({ kind: "ip", ...Vt.errToObj(e) });
  }
  datetime(e) {
    var n;
    return typeof e == "string"
      ? this._addCheck({
          kind: "datetime",
          precision: null,
          offset: !1,
          message: e,
        })
      : this._addCheck({
          kind: "datetime",
          precision:
            typeof (e == null ? void 0 : e.precision) > "u"
              ? null
              : e == null
              ? void 0
              : e.precision,
          offset:
            (n = e == null ? void 0 : e.offset) !== null && n !== void 0
              ? n
              : !1,
          ...Vt.errToObj(e == null ? void 0 : e.message),
        });
  }
  regex(e, n) {
    return this._addCheck({ kind: "regex", regex: e, ...Vt.errToObj(n) });
  }
  includes(e, n) {
    return this._addCheck({
      kind: "includes",
      value: e,
      position: n == null ? void 0 : n.position,
      ...Vt.errToObj(n == null ? void 0 : n.message),
    });
  }
  startsWith(e, n) {
    return this._addCheck({ kind: "startsWith", value: e, ...Vt.errToObj(n) });
  }
  endsWith(e, n) {
    return this._addCheck({ kind: "endsWith", value: e, ...Vt.errToObj(n) });
  }
  min(e, n) {
    return this._addCheck({ kind: "min", value: e, ...Vt.errToObj(n) });
  }
  max(e, n) {
    return this._addCheck({ kind: "max", value: e, ...Vt.errToObj(n) });
  }
  length(e, n) {
    return this._addCheck({ kind: "length", value: e, ...Vt.errToObj(n) });
  }
  get isDatetime() {
    return !!this._def.checks.find((e) => e.kind === "datetime");
  }
  get isEmail() {
    return !!this._def.checks.find((e) => e.kind === "email");
  }
  get isURL() {
    return !!this._def.checks.find((e) => e.kind === "url");
  }
  get isEmoji() {
    return !!this._def.checks.find((e) => e.kind === "emoji");
  }
  get isUUID() {
    return !!this._def.checks.find((e) => e.kind === "uuid");
  }
  get isCUID() {
    return !!this._def.checks.find((e) => e.kind === "cuid");
  }
  get isCUID2() {
    return !!this._def.checks.find((e) => e.kind === "cuid2");
  }
  get isULID() {
    return !!this._def.checks.find((e) => e.kind === "ulid");
  }
  get isIP() {
    return !!this._def.checks.find((e) => e.kind === "ip");
  }
  get minLength() {
    let e = null;
    for (const n of this._def.checks)
      n.kind === "min" && (e === null || n.value > e) && (e = n.value);
    return e;
  }
  get maxLength() {
    let e = null;
    for (const n of this._def.checks)
      n.kind === "max" && (e === null || n.value < e) && (e = n.value);
    return e;
  }
}
bo.create = (t) => {
  var e;
  return new bo({
    checks: [],
    typeName: Yt.ZodString,
    coerce:
      (e = t == null ? void 0 : t.coerce) !== null && e !== void 0 ? e : !1,
    ...fn(t),
  });
};
function Dwe(t, e) {
  const n = (t.toString().split(".")[1] || "").length,
    r = (e.toString().split(".")[1] || "").length,
    a = n > r ? n : r,
    s = parseInt(t.toFixed(a).replace(".", "")),
    i = parseInt(e.toFixed(a).replace(".", ""));
  return (s % i) / Math.pow(10, a);
}
class Bc extends yn {
  constructor() {
    super(...arguments),
      (this.min = this.gte),
      (this.max = this.lte),
      (this.step = this.multipleOf);
  }
  _parse(e) {
    if (
      (this._def.coerce && (e.data = Number(e.data)),
      this._getType(e) !== At.number)
    ) {
      const s = this._getOrReturnCtx(e);
      return (
        Ht(s, {
          code: St.invalid_type,
          expected: At.number,
          received: s.parsedType,
        }),
        cn
      );
    }
    let r;
    const a = new ra();
    for (const s of this._def.checks)
      s.kind === "int"
        ? Bn.isInteger(e.data) ||
          ((r = this._getOrReturnCtx(e, r)),
          Ht(r, {
            code: St.invalid_type,
            expected: "integer",
            received: "float",
            message: s.message,
          }),
          a.dirty())
        : s.kind === "min"
        ? (s.inclusive ? e.data < s.value : e.data <= s.value) &&
          ((r = this._getOrReturnCtx(e, r)),
          Ht(r, {
            code: St.too_small,
            minimum: s.value,
            type: "number",
            inclusive: s.inclusive,
            exact: !1,
            message: s.message,
          }),
          a.dirty())
        : s.kind === "max"
        ? (s.inclusive ? e.data > s.value : e.data >= s.value) &&
          ((r = this._getOrReturnCtx(e, r)),
          Ht(r, {
            code: St.too_big,
            maximum: s.value,
            type: "number",
            inclusive: s.inclusive,
            exact: !1,
            message: s.message,
          }),
          a.dirty())
        : s.kind === "multipleOf"
        ? Dwe(e.data, s.value) !== 0 &&
          ((r = this._getOrReturnCtx(e, r)),
          Ht(r, {
            code: St.not_multiple_of,
            multipleOf: s.value,
            message: s.message,
          }),
          a.dirty())
        : s.kind === "finite"
        ? Number.isFinite(e.data) ||
          ((r = this._getOrReturnCtx(e, r)),
          Ht(r, { code: St.not_finite, message: s.message }),
          a.dirty())
        : Bn.assertNever(s);
    return { status: a.value, value: e.data };
  }
  gte(e, n) {
    return this.setLimit("min", e, !0, Vt.toString(n));
  }
  gt(e, n) {
    return this.setLimit("min", e, !1, Vt.toString(n));
  }
  lte(e, n) {
    return this.setLimit("max", e, !0, Vt.toString(n));
  }
  lt(e, n) {
    return this.setLimit("max", e, !1, Vt.toString(n));
  }
  setLimit(e, n, r, a) {
    return new Bc({
      ...this._def,
      checks: [
        ...this._def.checks,
        { kind: e, value: n, inclusive: r, message: Vt.toString(a) },
      ],
    });
  }
  _addCheck(e) {
    return new Bc({ ...this._def, checks: [...this._def.checks, e] });
  }
  int(e) {
    return this._addCheck({ kind: "int", message: Vt.toString(e) });
  }
  positive(e) {
    return this._addCheck({
      kind: "min",
      value: 0,
      inclusive: !1,
      message: Vt.toString(e),
    });
  }
  negative(e) {
    return this._addCheck({
      kind: "max",
      value: 0,
      inclusive: !1,
      message: Vt.toString(e),
    });
  }
  nonpositive(e) {
    return this._addCheck({
      kind: "max",
      value: 0,
      inclusive: !0,
      message: Vt.toString(e),
    });
  }
  nonnegative(e) {
    return this._addCheck({
      kind: "min",
      value: 0,
      inclusive: !0,
      message: Vt.toString(e),
    });
  }
  multipleOf(e, n) {
    return this._addCheck({
      kind: "multipleOf",
      value: e,
      message: Vt.toString(n),
    });
  }
  finite(e) {
    return this._addCheck({ kind: "finite", message: Vt.toString(e) });
  }
  safe(e) {
    return this._addCheck({
      kind: "min",
      inclusive: !0,
      value: Number.MIN_SAFE_INTEGER,
      message: Vt.toString(e),
    })._addCheck({
      kind: "max",
      inclusive: !0,
      value: Number.MAX_SAFE_INTEGER,
      message: Vt.toString(e),
    });
  }
  get minValue() {
    let e = null;
    for (const n of this._def.checks)
      n.kind === "min" && (e === null || n.value > e) && (e = n.value);
    return e;
  }
  get maxValue() {
    let e = null;
    for (const n of this._def.checks)
      n.kind === "max" && (e === null || n.value < e) && (e = n.value);
    return e;
  }
  get isInt() {
    return !!this._def.checks.find(
      (e) =>
        e.kind === "int" || (e.kind === "multipleOf" && Bn.isInteger(e.value))
    );
  }
  get isFinite() {
    let e = null,
      n = null;
    for (const r of this._def.checks) {
      if (r.kind === "finite" || r.kind === "int" || r.kind === "multipleOf")
        return !0;
      r.kind === "min"
        ? (n === null || r.value > n) && (n = r.value)
        : r.kind === "max" && (e === null || r.value < e) && (e = r.value);
    }
    return Number.isFinite(n) && Number.isFinite(e);
  }
}
Bc.create = (t) =>
  new Bc({
    checks: [],
    typeName: Yt.ZodNumber,
    coerce: (t == null ? void 0 : t.coerce) || !1,
    ...fn(t),
  });
class Vc extends yn {
  constructor() {
    super(...arguments), (this.min = this.gte), (this.max = this.lte);
  }
  _parse(e) {
    if (
      (this._def.coerce && (e.data = BigInt(e.data)),
      this._getType(e) !== At.bigint)
    ) {
      const s = this._getOrReturnCtx(e);
      return (
        Ht(s, {
          code: St.invalid_type,
          expected: At.bigint,
          received: s.parsedType,
        }),
        cn
      );
    }
    let r;
    const a = new ra();
    for (const s of this._def.checks)
      s.kind === "min"
        ? (s.inclusive ? e.data < s.value : e.data <= s.value) &&
          ((r = this._getOrReturnCtx(e, r)),
          Ht(r, {
            code: St.too_small,
            type: "bigint",
            minimum: s.value,
            inclusive: s.inclusive,
            message: s.message,
          }),
          a.dirty())
        : s.kind === "max"
        ? (s.inclusive ? e.data > s.value : e.data >= s.value) &&
          ((r = this._getOrReturnCtx(e, r)),
          Ht(r, {
            code: St.too_big,
            type: "bigint",
            maximum: s.value,
            inclusive: s.inclusive,
            message: s.message,
          }),
          a.dirty())
        : s.kind === "multipleOf"
        ? e.data % s.value !== BigInt(0) &&
          ((r = this._getOrReturnCtx(e, r)),
          Ht(r, {
            code: St.not_multiple_of,
            multipleOf: s.value,
            message: s.message,
          }),
          a.dirty())
        : Bn.assertNever(s);
    return { status: a.value, value: e.data };
  }
  gte(e, n) {
    return this.setLimit("min", e, !0, Vt.toString(n));
  }
  gt(e, n) {
    return this.setLimit("min", e, !1, Vt.toString(n));
  }
  lte(e, n) {
    return this.setLimit("max", e, !0, Vt.toString(n));
  }
  lt(e, n) {
    return this.setLimit("max", e, !1, Vt.toString(n));
  }
  setLimit(e, n, r, a) {
    return new Vc({
      ...this._def,
      checks: [
        ...this._def.checks,
        { kind: e, value: n, inclusive: r, message: Vt.toString(a) },
      ],
    });
  }
  _addCheck(e) {
    return new Vc({ ...this._def, checks: [...this._def.checks, e] });
  }
  positive(e) {
    return this._addCheck({
      kind: "min",
      value: BigInt(0),
      inclusive: !1,
      message: Vt.toString(e),
    });
  }
  negative(e) {
    return this._addCheck({
      kind: "max",
      value: BigInt(0),
      inclusive: !1,
      message: Vt.toString(e),
    });
  }
  nonpositive(e) {
    return this._addCheck({
      kind: "max",
      value: BigInt(0),
      inclusive: !0,
      message: Vt.toString(e),
    });
  }
  nonnegative(e) {
    return this._addCheck({
      kind: "min",
      value: BigInt(0),
      inclusive: !0,
      message: Vt.toString(e),
    });
  }
  multipleOf(e, n) {
    return this._addCheck({
      kind: "multipleOf",
      value: e,
      message: Vt.toString(n),
    });
  }
  get minValue() {
    let e = null;
    for (const n of this._def.checks)
      n.kind === "min" && (e === null || n.value > e) && (e = n.value);
    return e;
  }
  get maxValue() {
    let e = null;
    for (const n of this._def.checks)
      n.kind === "max" && (e === null || n.value < e) && (e = n.value);
    return e;
  }
}
Vc.create = (t) => {
  var e;
  return new Vc({
    checks: [],
    typeName: Yt.ZodBigInt,
    coerce:
      (e = t == null ? void 0 : t.coerce) !== null && e !== void 0 ? e : !1,
    ...fn(t),
  });
};
class mg extends yn {
  _parse(e) {
    if (
      (this._def.coerce && (e.data = !!e.data), this._getType(e) !== At.boolean)
    ) {
      const r = this._getOrReturnCtx(e);
      return (
        Ht(r, {
          code: St.invalid_type,
          expected: At.boolean,
          received: r.parsedType,
        }),
        cn
      );
    }
    return ba(e.data);
  }
}
mg.create = (t) =>
  new mg({
    typeName: Yt.ZodBoolean,
    coerce: (t == null ? void 0 : t.coerce) || !1,
    ...fn(t),
  });
class ap extends yn {
  _parse(e) {
    if (
      (this._def.coerce && (e.data = new Date(e.data)),
      this._getType(e) !== At.date)
    ) {
      const s = this._getOrReturnCtx(e);
      return (
        Ht(s, {
          code: St.invalid_type,
          expected: At.date,
          received: s.parsedType,
        }),
        cn
      );
    }
    if (isNaN(e.data.getTime())) {
      const s = this._getOrReturnCtx(e);
      return Ht(s, { code: St.invalid_date }), cn;
    }
    const r = new ra();
    let a;
    for (const s of this._def.checks)
      s.kind === "min"
        ? e.data.getTime() < s.value &&
          ((a = this._getOrReturnCtx(e, a)),
          Ht(a, {
            code: St.too_small,
            message: s.message,
            inclusive: !0,
            exact: !1,
            minimum: s.value,
            type: "date",
          }),
          r.dirty())
        : s.kind === "max"
        ? e.data.getTime() > s.value &&
          ((a = this._getOrReturnCtx(e, a)),
          Ht(a, {
            code: St.too_big,
            message: s.message,
            inclusive: !0,
            exact: !1,
            maximum: s.value,
            type: "date",
          }),
          r.dirty())
        : Bn.assertNever(s);
    return { status: r.value, value: new Date(e.data.getTime()) };
  }
  _addCheck(e) {
    return new ap({ ...this._def, checks: [...this._def.checks, e] });
  }
  min(e, n) {
    return this._addCheck({
      kind: "min",
      value: e.getTime(),
      message: Vt.toString(n),
    });
  }
  max(e, n) {
    return this._addCheck({
      kind: "max",
      value: e.getTime(),
      message: Vt.toString(n),
    });
  }
  get minDate() {
    let e = null;
    for (const n of this._def.checks)
      n.kind === "min" && (e === null || n.value > e) && (e = n.value);
    return e != null ? new Date(e) : null;
  }
  get maxDate() {
    let e = null;
    for (const n of this._def.checks)
      n.kind === "max" && (e === null || n.value < e) && (e = n.value);
    return e != null ? new Date(e) : null;
  }
}
ap.create = (t) =>
  new ap({
    checks: [],
    coerce: (t == null ? void 0 : t.coerce) || !1,
    typeName: Yt.ZodDate,
    ...fn(t),
  });
class ET extends yn {
  _parse(e) {
    if (this._getType(e) !== At.symbol) {
      const r = this._getOrReturnCtx(e);
      return (
        Ht(r, {
          code: St.invalid_type,
          expected: At.symbol,
          received: r.parsedType,
        }),
        cn
      );
    }
    return ba(e.data);
  }
}
ET.create = (t) => new ET({ typeName: Yt.ZodSymbol, ...fn(t) });
class Sg extends yn {
  _parse(e) {
    if (this._getType(e) !== At.undefined) {
      const r = this._getOrReturnCtx(e);
      return (
        Ht(r, {
          code: St.invalid_type,
          expected: At.undefined,
          received: r.parsedType,
        }),
        cn
      );
    }
    return ba(e.data);
  }
}
Sg.create = (t) => new Sg({ typeName: Yt.ZodUndefined, ...fn(t) });
class yg extends yn {
  _parse(e) {
    if (this._getType(e) !== At.null) {
      const r = this._getOrReturnCtx(e);
      return (
        Ht(r, {
          code: St.invalid_type,
          expected: At.null,
          received: r.parsedType,
        }),
        cn
      );
    }
    return ba(e.data);
  }
}
yg.create = (t) => new yg({ typeName: Yt.ZodNull, ...fn(t) });
class Rf extends yn {
  constructor() {
    super(...arguments), (this._any = !0);
  }
  _parse(e) {
    return ba(e.data);
  }
}
Rf.create = (t) => new Rf({ typeName: Yt.ZodAny, ...fn(t) });
class zd extends yn {
  constructor() {
    super(...arguments), (this._unknown = !0);
  }
  _parse(e) {
    return ba(e.data);
  }
}
zd.create = (t) => new zd({ typeName: Yt.ZodUnknown, ...fn(t) });
class hl extends yn {
  _parse(e) {
    const n = this._getOrReturnCtx(e);
    return (
      Ht(n, {
        code: St.invalid_type,
        expected: At.never,
        received: n.parsedType,
      }),
      cn
    );
  }
}
hl.create = (t) => new hl({ typeName: Yt.ZodNever, ...fn(t) });
class TT extends yn {
  _parse(e) {
    if (this._getType(e) !== At.undefined) {
      const r = this._getOrReturnCtx(e);
      return (
        Ht(r, {
          code: St.invalid_type,
          expected: At.void,
          received: r.parsedType,
        }),
        cn
      );
    }
    return ba(e.data);
  }
}
TT.create = (t) => new TT({ typeName: Yt.ZodVoid, ...fn(t) });
class Po extends yn {
  _parse(e) {
    const { ctx: n, status: r } = this._processInputParams(e),
      a = this._def;
    if (n.parsedType !== At.array)
      return (
        Ht(n, {
          code: St.invalid_type,
          expected: At.array,
          received: n.parsedType,
        }),
        cn
      );
    if (a.exactLength !== null) {
      const i = n.data.length > a.exactLength.value,
        o = n.data.length < a.exactLength.value;
      (i || o) &&
        (Ht(n, {
          code: i ? St.too_big : St.too_small,
          minimum: o ? a.exactLength.value : void 0,
          maximum: i ? a.exactLength.value : void 0,
          type: "array",
          inclusive: !0,
          exact: !0,
          message: a.exactLength.message,
        }),
        r.dirty());
    }
    if (
      (a.minLength !== null &&
        n.data.length < a.minLength.value &&
        (Ht(n, {
          code: St.too_small,
          minimum: a.minLength.value,
          type: "array",
          inclusive: !0,
          exact: !1,
          message: a.minLength.message,
        }),
        r.dirty()),
      a.maxLength !== null &&
        n.data.length > a.maxLength.value &&
        (Ht(n, {
          code: St.too_big,
          maximum: a.maxLength.value,
          type: "array",
          inclusive: !0,
          exact: !1,
          message: a.maxLength.message,
        }),
        r.dirty()),
      n.common.async)
    )
      return Promise.all(
        [...n.data].map((i, o) => a.type._parseAsync(new yu(n, i, n.path, o)))
      ).then((i) => ra.mergeArray(r, i));
    const s = [...n.data].map((i, o) =>
      a.type._parseSync(new yu(n, i, n.path, o))
    );
    return ra.mergeArray(r, s);
  }
  get element() {
    return this._def.type;
  }
  min(e, n) {
    return new Po({
      ...this._def,
      minLength: { value: e, message: Vt.toString(n) },
    });
  }
  max(e, n) {
    return new Po({
      ...this._def,
      maxLength: { value: e, message: Vt.toString(n) },
    });
  }
  length(e, n) {
    return new Po({
      ...this._def,
      exactLength: { value: e, message: Vt.toString(n) },
    });
  }
  nonempty(e) {
    return this.min(1, e);
  }
}
Po.create = (t, e) =>
  new Po({
    type: t,
    minLength: null,
    maxLength: null,
    exactLength: null,
    typeName: Yt.ZodArray,
    ...fn(e),
  });
function hh(t) {
  if (t instanceof Ds) {
    const e = {};
    for (const n in t.shape) {
      const r = t.shape[n];
      e[n] = rl.create(hh(r));
    }
    return new Ds({ ...t._def, shape: () => e });
  } else
    return t instanceof Po
      ? new Po({ ...t._def, type: hh(t.element) })
      : t instanceof rl
      ? rl.create(hh(t.unwrap()))
      : t instanceof op
      ? op.create(hh(t.unwrap()))
      : t instanceof gu
      ? gu.create(t.items.map((e) => hh(e)))
      : t;
}
class Ds extends yn {
  constructor() {
    super(...arguments),
      (this._cached = null),
      (this.nonstrict = this.passthrough),
      (this.augment = this.extend);
  }
  _getCached() {
    if (this._cached !== null) return this._cached;
    const e = this._def.shape(),
      n = Bn.objectKeys(e);
    return (this._cached = { shape: e, keys: n });
  }
  _parse(e) {
    if (this._getType(e) !== At.object) {
      const l = this._getOrReturnCtx(e);
      return (
        Ht(l, {
          code: St.invalid_type,
          expected: At.object,
          received: l.parsedType,
        }),
        cn
      );
    }
    const { status: r, ctx: a } = this._processInputParams(e),
      { shape: s, keys: i } = this._getCached(),
      o = [];
    if (
      !(this._def.catchall instanceof hl && this._def.unknownKeys === "strip")
    )
      for (const l in a.data) i.includes(l) || o.push(l);
    const u = [];
    for (const l of i) {
      const c = s[l],
        d = a.data[l];
      u.push({
        key: { status: "valid", value: l },
        value: c._parse(new yu(a, d, a.path, l)),
        alwaysSet: l in a.data,
      });
    }
    if (this._def.catchall instanceof hl) {
      const l = this._def.unknownKeys;
      if (l === "passthrough")
        for (const c of o)
          u.push({
            key: { status: "valid", value: c },
            value: { status: "valid", value: a.data[c] },
          });
      else if (l === "strict")
        o.length > 0 &&
          (Ht(a, { code: St.unrecognized_keys, keys: o }), r.dirty());
      else if (l !== "strip")
        throw new Error("Internal ZodObject error: invalid unknownKeys value.");
    } else {
      const l = this._def.catchall;
      for (const c of o) {
        const d = a.data[c];
        u.push({
          key: { status: "valid", value: c },
          value: l._parse(new yu(a, d, a.path, c)),
          alwaysSet: c in a.data,
        });
      }
    }
    return a.common.async
      ? Promise.resolve()
          .then(async () => {
            const l = [];
            for (const c of u) {
              const d = await c.key;
              l.push({ key: d, value: await c.value, alwaysSet: c.alwaysSet });
            }
            return l;
          })
          .then((l) => ra.mergeObjectSync(r, l))
      : ra.mergeObjectSync(r, u);
  }
  get shape() {
    return this._def.shape();
  }
  strict(e) {
    return (
      Vt.errToObj,
      new Ds({
        ...this._def,
        unknownKeys: "strict",
        ...(e !== void 0
          ? {
              errorMap: (n, r) => {
                var a, s, i, o;
                const u =
                  (i =
                    (s = (a = this._def).errorMap) === null || s === void 0
                      ? void 0
                      : s.call(a, n, r).message) !== null && i !== void 0
                    ? i
                    : r.defaultError;
                return n.code === "unrecognized_keys"
                  ? {
                      message:
                        (o = Vt.errToObj(e).message) !== null && o !== void 0
                          ? o
                          : u,
                    }
                  : { message: u };
              },
            }
          : {}),
      })
    );
  }
  strip() {
    return new Ds({ ...this._def, unknownKeys: "strip" });
  }
  passthrough() {
    return new Ds({ ...this._def, unknownKeys: "passthrough" });
  }
  extend(e) {
    return new Ds({
      ...this._def,
      shape: () => ({ ...this._def.shape(), ...e }),
    });
  }
  merge(e) {
    return new Ds({
      unknownKeys: e._def.unknownKeys,
      catchall: e._def.catchall,
      shape: () => ({ ...this._def.shape(), ...e._def.shape() }),
      typeName: Yt.ZodObject,
    });
  }
  setKey(e, n) {
    return this.augment({ [e]: n });
  }
  catchall(e) {
    return new Ds({ ...this._def, catchall: e });
  }
  pick(e) {
    const n = {};
    return (
      Bn.objectKeys(e).forEach((r) => {
        e[r] && this.shape[r] && (n[r] = this.shape[r]);
      }),
      new Ds({ ...this._def, shape: () => n })
    );
  }
  omit(e) {
    const n = {};
    return (
      Bn.objectKeys(this.shape).forEach((r) => {
        e[r] || (n[r] = this.shape[r]);
      }),
      new Ds({ ...this._def, shape: () => n })
    );
  }
  deepPartial() {
    return hh(this);
  }
  partial(e) {
    const n = {};
    return (
      Bn.objectKeys(this.shape).forEach((r) => {
        const a = this.shape[r];
        e && !e[r] ? (n[r] = a) : (n[r] = a.optional());
      }),
      new Ds({ ...this._def, shape: () => n })
    );
  }
  required(e) {
    const n = {};
    return (
      Bn.objectKeys(this.shape).forEach((r) => {
        if (e && !e[r]) n[r] = this.shape[r];
        else {
          let s = this.shape[r];
          for (; s instanceof rl; ) s = s._def.innerType;
          n[r] = s;
        }
      }),
      new Ds({ ...this._def, shape: () => n })
    );
  }
  keyof() {
    return wz(Bn.objectKeys(this.shape));
  }
}
Ds.create = (t, e) =>
  new Ds({
    shape: () => t,
    unknownKeys: "strip",
    catchall: hl.create(),
    typeName: Yt.ZodObject,
    ...fn(e),
  });
Ds.strictCreate = (t, e) =>
  new Ds({
    shape: () => t,
    unknownKeys: "strict",
    catchall: hl.create(),
    typeName: Yt.ZodObject,
    ...fn(e),
  });
Ds.lazycreate = (t, e) =>
  new Ds({
    shape: t,
    unknownKeys: "strip",
    catchall: hl.create(),
    typeName: Yt.ZodObject,
    ...fn(e),
  });
class gg extends yn {
  _parse(e) {
    const { ctx: n } = this._processInputParams(e),
      r = this._def.options;
    function a(s) {
      for (const o of s) if (o.result.status === "valid") return o.result;
      for (const o of s)
        if (o.result.status === "dirty")
          return n.common.issues.push(...o.ctx.common.issues), o.result;
      const i = s.map((o) => new wo(o.ctx.common.issues));
      return Ht(n, { code: St.invalid_union, unionErrors: i }), cn;
    }
    if (n.common.async)
      return Promise.all(
        r.map(async (s) => {
          const i = { ...n, common: { ...n.common, issues: [] }, parent: null };
          return {
            result: await s._parseAsync({
              data: n.data,
              path: n.path,
              parent: i,
            }),
            ctx: i,
          };
        })
      ).then(a);
    {
      let s;
      const i = [];
      for (const u of r) {
        const l = { ...n, common: { ...n.common, issues: [] }, parent: null },
          c = u._parseSync({ data: n.data, path: n.path, parent: l });
        if (c.status === "valid") return c;
        c.status === "dirty" && !s && (s = { result: c, ctx: l }),
          l.common.issues.length && i.push(l.common.issues);
      }
      if (s) return n.common.issues.push(...s.ctx.common.issues), s.result;
      const o = i.map((u) => new wo(u));
      return Ht(n, { code: St.invalid_union, unionErrors: o }), cn;
    }
  }
  get options() {
    return this._def.options;
  }
}
gg.create = (t, e) => new gg({ options: t, typeName: Yt.ZodUnion, ...fn(e) });
const zb = (t) =>
  t instanceof bg
    ? zb(t.schema)
    : t instanceof No
    ? zb(t.innerType())
    : t instanceof Eg
    ? [t.value]
    : t instanceof jc
    ? t.options
    : t instanceof Tg
    ? Object.keys(t.enum)
    : t instanceof wg
    ? zb(t._def.innerType)
    : t instanceof Sg
    ? [void 0]
    : t instanceof yg
    ? [null]
    : null;
class L0 extends yn {
  _parse(e) {
    const { ctx: n } = this._processInputParams(e);
    if (n.parsedType !== At.object)
      return (
        Ht(n, {
          code: St.invalid_type,
          expected: At.object,
          received: n.parsedType,
        }),
        cn
      );
    const r = this.discriminator,
      a = n.data[r],
      s = this.optionsMap.get(a);
    return s
      ? n.common.async
        ? s._parseAsync({ data: n.data, path: n.path, parent: n })
        : s._parseSync({ data: n.data, path: n.path, parent: n })
      : (Ht(n, {
          code: St.invalid_union_discriminator,
          options: Array.from(this.optionsMap.keys()),
          path: [r],
        }),
        cn);
  }
  get discriminator() {
    return this._def.discriminator;
  }
  get options() {
    return this._def.options;
  }
  get optionsMap() {
    return this._def.optionsMap;
  }
  static create(e, n, r) {
    const a = new Map();
    for (const s of n) {
      const i = zb(s.shape[e]);
      if (!i)
        throw new Error(
          `A discriminator value for key \`${e}\` could not be extracted from all schema options`
        );
      for (const o of i) {
        if (a.has(o))
          throw new Error(
            `Discriminator property ${String(e)} has duplicate value ${String(
              o
            )}`
          );
        a.set(o, s);
      }
    }
    return new L0({
      typeName: Yt.ZodDiscriminatedUnion,
      discriminator: e,
      options: n,
      optionsMap: a,
      ...fn(r),
    });
  }
}
function Z1(t, e) {
  const n = uc(t),
    r = uc(e);
  if (t === e) return { valid: !0, data: t };
  if (n === At.object && r === At.object) {
    const a = Bn.objectKeys(e),
      s = Bn.objectKeys(t).filter((o) => a.indexOf(o) !== -1),
      i = { ...t, ...e };
    for (const o of s) {
      const u = Z1(t[o], e[o]);
      if (!u.valid) return { valid: !1 };
      i[o] = u.data;
    }
    return { valid: !0, data: i };
  } else if (n === At.array && r === At.array) {
    if (t.length !== e.length) return { valid: !1 };
    const a = [];
    for (let s = 0; s < t.length; s++) {
      const i = t[s],
        o = e[s],
        u = Z1(i, o);
      if (!u.valid) return { valid: !1 };
      a.push(u.data);
    }
    return { valid: !0, data: a };
  } else
    return n === At.date && r === At.date && +t == +e
      ? { valid: !0, data: t }
      : { valid: !1 };
}
class vg extends yn {
  _parse(e) {
    const { status: n, ctx: r } = this._processInputParams(e),
      a = (s, i) => {
        if (Q1(s) || Q1(i)) return cn;
        const o = Z1(s.value, i.value);
        return o.valid
          ? ((J1(s) || J1(i)) && n.dirty(), { status: n.value, value: o.data })
          : (Ht(r, { code: St.invalid_intersection_types }), cn);
      };
    return r.common.async
      ? Promise.all([
          this._def.left._parseAsync({ data: r.data, path: r.path, parent: r }),
          this._def.right._parseAsync({
            data: r.data,
            path: r.path,
            parent: r,
          }),
        ]).then(([s, i]) => a(s, i))
      : a(
          this._def.left._parseSync({ data: r.data, path: r.path, parent: r }),
          this._def.right._parseSync({ data: r.data, path: r.path, parent: r })
        );
  }
}
vg.create = (t, e, n) =>
  new vg({ left: t, right: e, typeName: Yt.ZodIntersection, ...fn(n) });
class gu extends yn {
  _parse(e) {
    const { status: n, ctx: r } = this._processInputParams(e);
    if (r.parsedType !== At.array)
      return (
        Ht(r, {
          code: St.invalid_type,
          expected: At.array,
          received: r.parsedType,
        }),
        cn
      );
    if (r.data.length < this._def.items.length)
      return (
        Ht(r, {
          code: St.too_small,
          minimum: this._def.items.length,
          inclusive: !0,
          exact: !1,
          type: "array",
        }),
        cn
      );
    !this._def.rest &&
      r.data.length > this._def.items.length &&
      (Ht(r, {
        code: St.too_big,
        maximum: this._def.items.length,
        inclusive: !0,
        exact: !1,
        type: "array",
      }),
      n.dirty());
    const s = [...r.data]
      .map((i, o) => {
        const u = this._def.items[o] || this._def.rest;
        return u ? u._parse(new yu(r, i, r.path, o)) : null;
      })
      .filter((i) => !!i);
    return r.common.async
      ? Promise.all(s).then((i) => ra.mergeArray(n, i))
      : ra.mergeArray(n, s);
  }
  get items() {
    return this._def.items;
  }
  rest(e) {
    return new gu({ ...this._def, rest: e });
  }
}
gu.create = (t, e) => {
  if (!Array.isArray(t))
    throw new Error("You must pass an array of schemas to z.tuple([ ... ])");
  return new gu({ items: t, typeName: Yt.ZodTuple, rest: null, ...fn(e) });
};
class _g extends yn {
  get keySchema() {
    return this._def.keyType;
  }
  get valueSchema() {
    return this._def.valueType;
  }
  _parse(e) {
    const { status: n, ctx: r } = this._processInputParams(e);
    if (r.parsedType !== At.object)
      return (
        Ht(r, {
          code: St.invalid_type,
          expected: At.object,
          received: r.parsedType,
        }),
        cn
      );
    const a = [],
      s = this._def.keyType,
      i = this._def.valueType;
    for (const o in r.data)
      a.push({
        key: s._parse(new yu(r, o, r.path, o)),
        value: i._parse(new yu(r, r.data[o], r.path, o)),
      });
    return r.common.async
      ? ra.mergeObjectAsync(n, a)
      : ra.mergeObjectSync(n, a);
  }
  get element() {
    return this._def.valueType;
  }
  static create(e, n, r) {
    return n instanceof yn
      ? new _g({ keyType: e, valueType: n, typeName: Yt.ZodRecord, ...fn(r) })
      : new _g({
          keyType: bo.create(),
          valueType: e,
          typeName: Yt.ZodRecord,
          ...fn(n),
        });
  }
}
class wT extends yn {
  get keySchema() {
    return this._def.keyType;
  }
  get valueSchema() {
    return this._def.valueType;
  }
  _parse(e) {
    const { status: n, ctx: r } = this._processInputParams(e);
    if (r.parsedType !== At.map)
      return (
        Ht(r, {
          code: St.invalid_type,
          expected: At.map,
          received: r.parsedType,
        }),
        cn
      );
    const a = this._def.keyType,
      s = this._def.valueType,
      i = [...r.data.entries()].map(([o, u], l) => ({
        key: a._parse(new yu(r, o, r.path, [l, "key"])),
        value: s._parse(new yu(r, u, r.path, [l, "value"])),
      }));
    if (r.common.async) {
      const o = new Map();
      return Promise.resolve().then(async () => {
        for (const u of i) {
          const l = await u.key,
            c = await u.value;
          if (l.status === "aborted" || c.status === "aborted") return cn;
          (l.status === "dirty" || c.status === "dirty") && n.dirty(),
            o.set(l.value, c.value);
        }
        return { status: n.value, value: o };
      });
    } else {
      const o = new Map();
      for (const u of i) {
        const l = u.key,
          c = u.value;
        if (l.status === "aborted" || c.status === "aborted") return cn;
        (l.status === "dirty" || c.status === "dirty") && n.dirty(),
          o.set(l.value, c.value);
      }
      return { status: n.value, value: o };
    }
  }
}
wT.create = (t, e, n) =>
  new wT({ valueType: e, keyType: t, typeName: Yt.ZodMap, ...fn(n) });
class ip extends yn {
  _parse(e) {
    const { status: n, ctx: r } = this._processInputParams(e);
    if (r.parsedType !== At.set)
      return (
        Ht(r, {
          code: St.invalid_type,
          expected: At.set,
          received: r.parsedType,
        }),
        cn
      );
    const a = this._def;
    a.minSize !== null &&
      r.data.size < a.minSize.value &&
      (Ht(r, {
        code: St.too_small,
        minimum: a.minSize.value,
        type: "set",
        inclusive: !0,
        exact: !1,
        message: a.minSize.message,
      }),
      n.dirty()),
      a.maxSize !== null &&
        r.data.size > a.maxSize.value &&
        (Ht(r, {
          code: St.too_big,
          maximum: a.maxSize.value,
          type: "set",
          inclusive: !0,
          exact: !1,
          message: a.maxSize.message,
        }),
        n.dirty());
    const s = this._def.valueType;
    function i(u) {
      const l = new Set();
      for (const c of u) {
        if (c.status === "aborted") return cn;
        c.status === "dirty" && n.dirty(), l.add(c.value);
      }
      return { status: n.value, value: l };
    }
    const o = [...r.data.values()].map((u, l) =>
      s._parse(new yu(r, u, r.path, l))
    );
    return r.common.async ? Promise.all(o).then((u) => i(u)) : i(o);
  }
  min(e, n) {
    return new ip({
      ...this._def,
      minSize: { value: e, message: Vt.toString(n) },
    });
  }
  max(e, n) {
    return new ip({
      ...this._def,
      maxSize: { value: e, message: Vt.toString(n) },
    });
  }
  size(e, n) {
    return this.min(e, n).max(e, n);
  }
  nonempty(e) {
    return this.min(1, e);
  }
}
ip.create = (t, e) =>
  new ip({
    valueType: t,
    minSize: null,
    maxSize: null,
    typeName: Yt.ZodSet,
    ...fn(e),
  });
class nf extends yn {
  constructor() {
    super(...arguments), (this.validate = this.implement);
  }
  _parse(e) {
    const { ctx: n } = this._processInputParams(e);
    if (n.parsedType !== At.function)
      return (
        Ht(n, {
          code: St.invalid_type,
          expected: At.function,
          received: n.parsedType,
        }),
        cn
      );
    function r(o, u) {
      return _T({
        data: o,
        path: n.path,
        errorMaps: [
          n.common.contextualErrorMap,
          n.schemaErrorMap,
          vT(),
          hg,
        ].filter((l) => !!l),
        issueData: { code: St.invalid_arguments, argumentsError: u },
      });
    }
    function a(o, u) {
      return _T({
        data: o,
        path: n.path,
        errorMaps: [
          n.common.contextualErrorMap,
          n.schemaErrorMap,
          vT(),
          hg,
        ].filter((l) => !!l),
        issueData: { code: St.invalid_return_type, returnTypeError: u },
      });
    }
    const s = { errorMap: n.common.contextualErrorMap },
      i = n.data;
    if (this._def.returns instanceof kf) {
      const o = this;
      return ba(async function (...u) {
        const l = new wo([]),
          c = await o._def.args.parseAsync(u, s).catch((m) => {
            throw (l.addIssue(r(u, m)), l);
          }),
          d = await Reflect.apply(i, this, c);
        return await o._def.returns._def.type.parseAsync(d, s).catch((m) => {
          throw (l.addIssue(a(d, m)), l);
        });
      });
    } else {
      const o = this;
      return ba(function (...u) {
        const l = o._def.args.safeParse(u, s);
        if (!l.success) throw new wo([r(u, l.error)]);
        const c = Reflect.apply(i, this, l.data),
          d = o._def.returns.safeParse(c, s);
        if (!d.success) throw new wo([a(c, d.error)]);
        return d.data;
      });
    }
  }
  parameters() {
    return this._def.args;
  }
  returnType() {
    return this._def.returns;
  }
  args(...e) {
    return new nf({ ...this._def, args: gu.create(e).rest(zd.create()) });
  }
  returns(e) {
    return new nf({ ...this._def, returns: e });
  }
  implement(e) {
    return this.parse(e);
  }
  strictImplement(e) {
    return this.parse(e);
  }
  static create(e, n, r) {
    return new nf({
      args: e || gu.create([]).rest(zd.create()),
      returns: n || zd.create(),
      typeName: Yt.ZodFunction,
      ...fn(r),
    });
  }
}
class bg extends yn {
  get schema() {
    return this._def.getter();
  }
  _parse(e) {
    const { ctx: n } = this._processInputParams(e);
    return this._def.getter()._parse({ data: n.data, path: n.path, parent: n });
  }
}
bg.create = (t, e) => new bg({ getter: t, typeName: Yt.ZodLazy, ...fn(e) });
class Eg extends yn {
  _parse(e) {
    if (e.data !== this._def.value) {
      const n = this._getOrReturnCtx(e);
      return (
        Ht(n, {
          received: n.data,
          code: St.invalid_literal,
          expected: this._def.value,
        }),
        cn
      );
    }
    return { status: "valid", value: e.data };
  }
  get value() {
    return this._def.value;
  }
}
Eg.create = (t, e) => new Eg({ value: t, typeName: Yt.ZodLiteral, ...fn(e) });
function wz(t, e) {
  return new jc({ values: t, typeName: Yt.ZodEnum, ...fn(e) });
}
class jc extends yn {
  _parse(e) {
    if (typeof e.data != "string") {
      const n = this._getOrReturnCtx(e),
        r = this._def.values;
      return (
        Ht(n, {
          expected: Bn.joinValues(r),
          received: n.parsedType,
          code: St.invalid_type,
        }),
        cn
      );
    }
    if (this._def.values.indexOf(e.data) === -1) {
      const n = this._getOrReturnCtx(e),
        r = this._def.values;
      return (
        Ht(n, { received: n.data, code: St.invalid_enum_value, options: r }), cn
      );
    }
    return ba(e.data);
  }
  get options() {
    return this._def.values;
  }
  get enum() {
    const e = {};
    for (const n of this._def.values) e[n] = n;
    return e;
  }
  get Values() {
    const e = {};
    for (const n of this._def.values) e[n] = n;
    return e;
  }
  get Enum() {
    const e = {};
    for (const n of this._def.values) e[n] = n;
    return e;
  }
  extract(e) {
    return jc.create(e);
  }
  exclude(e) {
    return jc.create(this.options.filter((n) => !e.includes(n)));
  }
}
jc.create = wz;
class Tg extends yn {
  _parse(e) {
    const n = Bn.getValidEnumValues(this._def.values),
      r = this._getOrReturnCtx(e);
    if (r.parsedType !== At.string && r.parsedType !== At.number) {
      const a = Bn.objectValues(n);
      return (
        Ht(r, {
          expected: Bn.joinValues(a),
          received: r.parsedType,
          code: St.invalid_type,
        }),
        cn
      );
    }
    if (n.indexOf(e.data) === -1) {
      const a = Bn.objectValues(n);
      return (
        Ht(r, { received: r.data, code: St.invalid_enum_value, options: a }), cn
      );
    }
    return ba(e.data);
  }
  get enum() {
    return this._def.values;
  }
}
Tg.create = (t, e) =>
  new Tg({ values: t, typeName: Yt.ZodNativeEnum, ...fn(e) });
class kf extends yn {
  unwrap() {
    return this._def.type;
  }
  _parse(e) {
    const { ctx: n } = this._processInputParams(e);
    if (n.parsedType !== At.promise && n.common.async === !1)
      return (
        Ht(n, {
          code: St.invalid_type,
          expected: At.promise,
          received: n.parsedType,
        }),
        cn
      );
    const r = n.parsedType === At.promise ? n.data : Promise.resolve(n.data);
    return ba(
      r.then((a) =>
        this._def.type.parseAsync(a, {
          path: n.path,
          errorMap: n.common.contextualErrorMap,
        })
      )
    );
  }
}
kf.create = (t, e) => new kf({ type: t, typeName: Yt.ZodPromise, ...fn(e) });
class No extends yn {
  innerType() {
    return this._def.schema;
  }
  sourceType() {
    return this._def.schema._def.typeName === Yt.ZodEffects
      ? this._def.schema.sourceType()
      : this._def.schema;
  }
  _parse(e) {
    const { status: n, ctx: r } = this._processInputParams(e),
      a = this._def.effect || null,
      s = {
        addIssue: (i) => {
          Ht(r, i), i.fatal ? n.abort() : n.dirty();
        },
        get path() {
          return r.path;
        },
      };
    if (((s.addIssue = s.addIssue.bind(s)), a.type === "preprocess")) {
      const i = a.transform(r.data, s);
      return r.common.issues.length
        ? { status: "dirty", value: r.data }
        : r.common.async
        ? Promise.resolve(i).then((o) =>
            this._def.schema._parseAsync({ data: o, path: r.path, parent: r })
          )
        : this._def.schema._parseSync({ data: i, path: r.path, parent: r });
    }
    if (a.type === "refinement") {
      const i = (o) => {
        const u = a.refinement(o, s);
        if (r.common.async) return Promise.resolve(u);
        if (u instanceof Promise)
          throw new Error(
            "Async refinement encountered during synchronous parse operation. Use .parseAsync instead."
          );
        return o;
      };
      if (r.common.async === !1) {
        const o = this._def.schema._parseSync({
          data: r.data,
          path: r.path,
          parent: r,
        });
        return o.status === "aborted"
          ? cn
          : (o.status === "dirty" && n.dirty(),
            i(o.value),
            { status: n.value, value: o.value });
      } else
        return this._def.schema
          ._parseAsync({ data: r.data, path: r.path, parent: r })
          .then((o) =>
            o.status === "aborted"
              ? cn
              : (o.status === "dirty" && n.dirty(),
                i(o.value).then(() => ({ status: n.value, value: o.value })))
          );
    }
    if (a.type === "transform")
      if (r.common.async === !1) {
        const i = this._def.schema._parseSync({
          data: r.data,
          path: r.path,
          parent: r,
        });
        if (!fg(i)) return i;
        const o = a.transform(i.value, s);
        if (o instanceof Promise)
          throw new Error(
            "Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead."
          );
        return { status: n.value, value: o };
      } else
        return this._def.schema
          ._parseAsync({ data: r.data, path: r.path, parent: r })
          .then((i) =>
            fg(i)
              ? Promise.resolve(a.transform(i.value, s)).then((o) => ({
                  status: n.value,
                  value: o,
                }))
              : i
          );
    Bn.assertNever(a);
  }
}
No.create = (t, e, n) =>
  new No({ schema: t, typeName: Yt.ZodEffects, effect: e, ...fn(n) });
No.createWithPreprocess = (t, e, n) =>
  new No({
    schema: e,
    effect: { type: "preprocess", transform: t },
    typeName: Yt.ZodEffects,
    ...fn(n),
  });
class rl extends yn {
  _parse(e) {
    return this._getType(e) === At.undefined
      ? ba(void 0)
      : this._def.innerType._parse(e);
  }
  unwrap() {
    return this._def.innerType;
  }
}
rl.create = (t, e) =>
  new rl({ innerType: t, typeName: Yt.ZodOptional, ...fn(e) });
class op extends yn {
  _parse(e) {
    return this._getType(e) === At.null
      ? ba(null)
      : this._def.innerType._parse(e);
  }
  unwrap() {
    return this._def.innerType;
  }
}
op.create = (t, e) =>
  new op({ innerType: t, typeName: Yt.ZodNullable, ...fn(e) });
class wg extends yn {
  _parse(e) {
    const { ctx: n } = this._processInputParams(e);
    let r = n.data;
    return (
      n.parsedType === At.undefined && (r = this._def.defaultValue()),
      this._def.innerType._parse({ data: r, path: n.path, parent: n })
    );
  }
  removeDefault() {
    return this._def.innerType;
  }
}
wg.create = (t, e) =>
  new wg({
    innerType: t,
    typeName: Yt.ZodDefault,
    defaultValue: typeof e.default == "function" ? e.default : () => e.default,
    ...fn(e),
  });
class PT extends yn {
  _parse(e) {
    const { ctx: n } = this._processInputParams(e),
      r = { ...n, common: { ...n.common, issues: [] } },
      a = this._def.innerType._parse({
        data: r.data,
        path: r.path,
        parent: { ...r },
      });
    return bT(a)
      ? a.then((s) => ({
          status: "valid",
          value:
            s.status === "valid"
              ? s.value
              : this._def.catchValue({
                  get error() {
                    return new wo(r.common.issues);
                  },
                  input: r.data,
                }),
        }))
      : {
          status: "valid",
          value:
            a.status === "valid"
              ? a.value
              : this._def.catchValue({
                  get error() {
                    return new wo(r.common.issues);
                  },
                  input: r.data,
                }),
        };
  }
  removeCatch() {
    return this._def.innerType;
  }
}
PT.create = (t, e) =>
  new PT({
    innerType: t,
    typeName: Yt.ZodCatch,
    catchValue: typeof e.catch == "function" ? e.catch : () => e.catch,
    ...fn(e),
  });
class IT extends yn {
  _parse(e) {
    if (this._getType(e) !== At.nan) {
      const r = this._getOrReturnCtx(e);
      return (
        Ht(r, {
          code: St.invalid_type,
          expected: At.nan,
          received: r.parsedType,
        }),
        cn
      );
    }
    return { status: "valid", value: e.data };
  }
}
IT.create = (t) => new IT({ typeName: Yt.ZodNaN, ...fn(t) });
const Gwe = Symbol("zod_brand");
class Pz extends yn {
  _parse(e) {
    const { ctx: n } = this._processInputParams(e),
      r = n.data;
    return this._def.type._parse({ data: r, path: n.path, parent: n });
  }
  unwrap() {
    return this._def.type;
  }
}
class Pv extends yn {
  _parse(e) {
    const { status: n, ctx: r } = this._processInputParams(e);
    if (r.common.async)
      return (async () => {
        const s = await this._def.in._parseAsync({
          data: r.data,
          path: r.path,
          parent: r,
        });
        return s.status === "aborted"
          ? cn
          : s.status === "dirty"
          ? (n.dirty(), Tz(s.value))
          : this._def.out._parseAsync({
              data: s.value,
              path: r.path,
              parent: r,
            });
      })();
    {
      const a = this._def.in._parseSync({
        data: r.data,
        path: r.path,
        parent: r,
      });
      return a.status === "aborted"
        ? cn
        : a.status === "dirty"
        ? (n.dirty(), { status: "dirty", value: a.value })
        : this._def.out._parseSync({ data: a.value, path: r.path, parent: r });
    }
  }
  static create(e, n) {
    return new Pv({ in: e, out: n, typeName: Yt.ZodPipeline });
  }
}
class CT extends yn {
  _parse(e) {
    const n = this._def.innerType._parse(e);
    return fg(n) && (n.value = Object.freeze(n.value)), n;
  }
}
CT.create = (t, e) =>
  new CT({ innerType: t, typeName: Yt.ZodReadonly, ...fn(e) });
const Iz = (t, e = {}, n) =>
    t
      ? Rf.create().superRefine((r, a) => {
          var s, i;
          if (!t(r)) {
            const o =
                typeof e == "function"
                  ? e(r)
                  : typeof e == "string"
                  ? { message: e }
                  : e,
              u =
                (i = (s = o.fatal) !== null && s !== void 0 ? s : n) !== null &&
                i !== void 0
                  ? i
                  : !0,
              l = typeof o == "string" ? { message: o } : o;
            a.addIssue({ code: "custom", ...l, fatal: u });
          }
        })
      : Rf.create(),
  Fwe = { object: Ds.lazycreate };
var Yt;
(function (t) {
  (t.ZodString = "ZodString"),
    (t.ZodNumber = "ZodNumber"),
    (t.ZodNaN = "ZodNaN"),
    (t.ZodBigInt = "ZodBigInt"),
    (t.ZodBoolean = "ZodBoolean"),
    (t.ZodDate = "ZodDate"),
    (t.ZodSymbol = "ZodSymbol"),
    (t.ZodUndefined = "ZodUndefined"),
    (t.ZodNull = "ZodNull"),
    (t.ZodAny = "ZodAny"),
    (t.ZodUnknown = "ZodUnknown"),
    (t.ZodNever = "ZodNever"),
    (t.ZodVoid = "ZodVoid"),
    (t.ZodArray = "ZodArray"),
    (t.ZodObject = "ZodObject"),
    (t.ZodUnion = "ZodUnion"),
    (t.ZodDiscriminatedUnion = "ZodDiscriminatedUnion"),
    (t.ZodIntersection = "ZodIntersection"),
    (t.ZodTuple = "ZodTuple"),
    (t.ZodRecord = "ZodRecord"),
    (t.ZodMap = "ZodMap"),
    (t.ZodSet = "ZodSet"),
    (t.ZodFunction = "ZodFunction"),
    (t.ZodLazy = "ZodLazy"),
    (t.ZodLiteral = "ZodLiteral"),
    (t.ZodEnum = "ZodEnum"),
    (t.ZodEffects = "ZodEffects"),
    (t.ZodNativeEnum = "ZodNativeEnum"),
    (t.ZodOptional = "ZodOptional"),
    (t.ZodNullable = "ZodNullable"),
    (t.ZodDefault = "ZodDefault"),
    (t.ZodCatch = "ZodCatch"),
    (t.ZodPromise = "ZodPromise"),
    (t.ZodBranded = "ZodBranded"),
    (t.ZodPipeline = "ZodPipeline"),
    (t.ZodReadonly = "ZodReadonly");
})(Yt || (Yt = {}));
const Uwe = (t, e = { message: `Input not instance of ${t.name}` }) =>
    Iz((n) => n instanceof t, e),
  Cz = bo.create,
  Az = Bc.create,
  Kwe = IT.create,
  Bwe = Vc.create,
  Oz = mg.create,
  Vwe = ap.create,
  jwe = ET.create,
  zwe = Sg.create,
  $we = yg.create,
  Wwe = Rf.create,
  qwe = zd.create,
  Ywe = hl.create,
  Xwe = TT.create,
  Qwe = Po.create,
  Jwe = Ds.create,
  Zwe = Ds.strictCreate,
  e0e = gg.create,
  t0e = L0.create,
  n0e = vg.create,
  s0e = gu.create,
  r0e = _g.create,
  a0e = wT.create,
  i0e = ip.create,
  o0e = nf.create,
  u0e = bg.create,
  l0e = Eg.create,
  c0e = jc.create,
  d0e = Tg.create,
  p0e = kf.create,
  j9 = No.create,
  h0e = rl.create,
  f0e = op.create,
  m0e = No.createWithPreprocess,
  S0e = Pv.create,
  y0e = () => Cz().optional(),
  g0e = () => Az().optional(),
  v0e = () => Oz().optional(),
  _0e = {
    string: (t) => bo.create({ ...t, coerce: !0 }),
    number: (t) => Bc.create({ ...t, coerce: !0 }),
    boolean: (t) => mg.create({ ...t, coerce: !0 }),
    bigint: (t) => Vc.create({ ...t, coerce: !0 }),
    date: (t) => ap.create({ ...t, coerce: !0 }),
  },
  b0e = cn;
var Xe = Object.freeze({
  __proto__: null,
  defaultErrorMap: hg,
  setErrorMap: Pwe,
  getErrorMap: vT,
  makeIssue: _T,
  EMPTY_PATH: Iwe,
  addIssueToContext: Ht,
  ParseStatus: ra,
  INVALID: cn,
  DIRTY: Tz,
  OK: ba,
  isAborted: Q1,
  isDirty: J1,
  isValid: fg,
  isAsync: bT,
  get util() {
    return Bn;
  },
  get objectUtil() {
    return X1;
  },
  ZodParsedType: At,
  getParsedType: uc,
  ZodType: yn,
  ZodString: bo,
  ZodNumber: Bc,
  ZodBigInt: Vc,
  ZodBoolean: mg,
  ZodDate: ap,
  ZodSymbol: ET,
  ZodUndefined: Sg,
  ZodNull: yg,
  ZodAny: Rf,
  ZodUnknown: zd,
  ZodNever: hl,
  ZodVoid: TT,
  ZodArray: Po,
  ZodObject: Ds,
  ZodUnion: gg,
  ZodDiscriminatedUnion: L0,
  ZodIntersection: vg,
  ZodTuple: gu,
  ZodRecord: _g,
  ZodMap: wT,
  ZodSet: ip,
  ZodFunction: nf,
  ZodLazy: bg,
  ZodLiteral: Eg,
  ZodEnum: jc,
  ZodNativeEnum: Tg,
  ZodPromise: kf,
  ZodEffects: No,
  ZodTransformer: No,
  ZodOptional: rl,
  ZodNullable: op,
  ZodDefault: wg,
  ZodCatch: PT,
  ZodNaN: IT,
  BRAND: Gwe,
  ZodBranded: Pz,
  ZodPipeline: Pv,
  ZodReadonly: CT,
  custom: Iz,
  Schema: yn,
  ZodSchema: yn,
  late: Fwe,
  get ZodFirstPartyTypeKind() {
    return Yt;
  },
  coerce: _0e,
  any: Wwe,
  array: Qwe,
  bigint: Bwe,
  boolean: Oz,
  date: Vwe,
  discriminatedUnion: t0e,
  effect: j9,
  enum: c0e,
  function: o0e,
  instanceof: Uwe,
  intersection: n0e,
  lazy: u0e,
  literal: l0e,
  map: a0e,
  nan: Kwe,
  nativeEnum: d0e,
  never: Ywe,
  null: $we,
  nullable: f0e,
  number: Az,
  object: Jwe,
  oboolean: v0e,
  onumber: g0e,
  optional: h0e,
  ostring: y0e,
  pipeline: S0e,
  preprocess: m0e,
  promise: p0e,
  record: r0e,
  set: i0e,
  strictObject: Zwe,
  string: Cz,
  symbol: jwe,
  transformer: j9,
  tuple: s0e,
  undefined: zwe,
  union: e0e,
  unknown: qwe,
  void: Xwe,
  NEVER: b0e,
  ZodIssueCode: St,
  quotelessJson: wwe,
  ZodError: wo,
});
const E0e = k("ENABLE_BELL_SOUND"),
  T0e = k("DISABLE_BELL_SOUND"),
  w0e = k("ENABLE_BRIGHTEN_BOLD_TEXT"),
  P0e = k("DISABLE_BRIGHTEN_BOLD_TEXT"),
  eO = k("CHANGE_COLOR_SCHEME"),
  tO = k("CHANGE_COLOR_SCHEME_FROM_SYNC"),
  I0e = k("ENABLE_DETECT_OS"),
  C0e = k("DISABLE_DETECT_OS"),
  A0e = k("CHANGE_FONT_FAMILY"),
  O0e = k("CHANGE_FONT_SIZE"),
  H0e = k("HIDE_TERMINAL_SHARING_LABEL"),
  Hz = k("ENABLE_OPTION_IS_META"),
  Nz = k("DISABLE_OPTION_IS_META"),
  N0e = k("ENABLE_RIGHT_CLICK_TO_PASTE"),
  R0e = k("DISABLE_RIGHT_CLICK_TO_PASTE"),
  k0e = k("SET_SCROLLBACK_SIZE"),
  x0e = k("CHANGE_TERMINAL_EMULATION_TYPE"),
  L0e = k("HIDE_UNAVAILABLE_PRO_FEATURES_STEPS"),
  M0e = k("CHANGE_KEYWORDS_HIGHLIGHTING"),
  D0e = k("SET_SHELL_HISTORY_IMPORT_ENABLED"),
  G0e = k("SET_AUTOCOMPLETE_DISABLED_UNTIL_TIMESTAMP"),
  Rz = k("ENABLE_AUTORECONNECT"),
  kz = k("DISABLE_AUTORECONNECT"),
  xz = k("SET_LAYOUT"),
  Lz = k("SET_LOCAL_TERMINAL_PATH"),
  F0e = k("ADD_CUSTOM_LOCAL_TERMINAL_PATH"),
  U0e = k("REMOVE_CUSTOM_LOCAL_TERMINAL_PATH"),
  K0e = k("CHANGE_THEME"),
  Mz = k("TOGGLE_TERMINAL_SHARING"),
  Dz = k("SET_SETTINGS_OPEN_STATE");
k("OPEN_CREATE_NEW_GROUP_FORM");
const B0e = k("SET_PORT_FORWARDING_WIZARD_ENABLED"),
  V0e = k("DISABLE_COPY_LINK_INFO"),
  j0e = k("SET_QUICK_CONNECT_HIGHLIGHTED"),
  z0e = k("SHOW_APP_INTERFACE"),
  Gz = k("SET_GRACE_PERIOD_UNTIL_DATE"),
  $0e = k("TRANSFORM_IDENTITY_BANNER_TO_ICON"),
  W0e = k("CLOSE_SHOW_LINKED_IDENTITIES_BANNER"),
  q0e = k("TRANSFORM_GROUP_BANNER_TO_ICON"),
  Y0e = k("CLOSE_BANNER_ABOUT_GROUP"),
  X0e = vi("net"),
  Q0e = {
    no_credentials_sharing: "No credentials",
    credentials_sharing: "Credentials",
    multikey: "MultiKey",
  };
function Fz(t) {
  return t === "termius-message://ces-survey";
}
function Uz({ action: t }) {
  return Fz(t);
}
const YR = "termius-message://migrate-to-new-crypto",
  AT = "termius-message://kex",
  XR = "LOCAL_MESSAGE_ACTION_CLEANUP_SEP_KEYS",
  J0e = -3,
  Kz = -4;
class QR {
  constructor(e) {
    (this.local_id = e.local_id),
      (this.id = e.id),
      (this.updated_at = e.updated_at);
  }
}
let sf = class extends QR {
    constructor(e) {
      super(e),
        (this.cloudType = "aws"),
        (this.accessKeyId = e.accessKeyId || ""),
        (this.secretAccessKey = e.secretAccessKey || ""),
        (this.region = e.region || ""),
        (this.ipAddressType = e.ipAddressType || "public"),
        (this.serviceType = e.serviceType || "ec2");
    }
    isEmpty() {
      return [this.accessKeyId, this.secretAccessKey, this.region].every(
        (e) => e == null
      );
    }
    isFulfilled() {
      return [this.accessKeyId, this.secretAccessKey, this.region].every(
        (e) => !!e
      );
    }
  },
  dy = class extends QR {
    constructor(e) {
      super(e),
        (this.cloudType = "azure"),
        (this.tenant_id = e.tenant_id || ""),
        (this.client_id = e.client_id || ""),
        (this.client_secret = e.client_secret || "");
    }
    isEmpty() {
      return [this.tenant_id, this.client_id, this.client_secret].every(
        (e) => e == null
      );
    }
    isFulfilled() {
      return [this.tenant_id, this.client_id, this.client_secret].every(
        (e) => !!e
      );
    }
  },
  py = class extends QR {
    constructor(e) {
      super(e), (this.cloudType = "DigitalOcean"), (this.token = e.token || "");
    }
    isEmpty() {
      return !this.token;
    }
    isFulfilled() {
      return !!this.token;
    }
  };
function M0(t, e, n, r) {
  for (var a = t.length, s = n + (r ? 1 : -1); r ? s-- : ++s < a; )
    if (e(t[s], s, t)) return s;
  return -1;
}
function Bz(t) {
  return t !== t;
}
function Z0e(t, e, n) {
  for (var r = n - 1, a = t.length; ++r < a; ) if (t[r] === e) return r;
  return -1;
}
function mm(t, e, n) {
  return e === e ? Z0e(t, e, n) : M0(t, Bz, n);
}
function D0(t, e) {
  var n = t == null ? 0 : t.length;
  return !!n && mm(t, e, 0) > -1;
}
function JR(t, e, n) {
  for (var r = -1, a = t == null ? 0 : t.length; ++r < a; )
    if (n(e, t[r])) return !0;
  return !1;
}
var ePe = 1 / 0,
  tPe =
    ef && 1 / O0(new ef([, -0]))[1] == ePe
      ? function (t) {
          return new ef(t);
        }
      : Cf;
const nPe = tPe;
var sPe = 200;
function zc(t, e, n) {
  var r = -1,
    a = D0,
    s = t.length,
    i = !0,
    o = [],
    u = o;
  if (n) (i = !1), (a = JR);
  else if (s >= sPe) {
    var l = e ? null : nPe(t);
    if (l) return O0(l);
    (i = !1), (a = lg), (u = new np());
  } else u = e ? [] : o;
  e: for (; ++r < s; ) {
    var c = t[r],
      d = e ? e(c) : c;
    if (((c = n || c !== 0 ? c : 0), i && d === d)) {
      for (var p = u.length; p--; ) if (u[p] === d) continue e;
      e && u.push(d), o.push(c);
    } else a(u, d, n) || (u !== o && u.push(d), o.push(c));
  }
  return o;
}
function xf(t) {
  return t && t.length ? zc(t) : [];
}
const rPe = "AUTO";
var aPe = 36e5;
function nO(t) {
  "@babel/helpers - typeof";
  return (
    (nO =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    nO(t)
  );
}
function Ol(t, e) {
  if (e.length < t)
    throw new TypeError(
      t +
        " argument" +
        (t > 1 ? "s" : "") +
        " required, but only " +
        e.length +
        " present"
    );
}
function Eo(t) {
  Ol(1, arguments);
  var e = Object.prototype.toString.call(t);
  return t instanceof Date || (nO(t) === "object" && e === "[object Date]")
    ? new Date(t.getTime())
    : typeof t == "number" || e === "[object Number]"
    ? new Date(t)
    : ((typeof t == "string" || e === "[object String]") &&
        typeof console < "u" &&
        (console.warn(
          "Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"
        ),
        console.warn(new Error().stack)),
      new Date(NaN));
}
function Vz(t, e) {
  return Ol(2, arguments), Eo(t).getTime() - Eo(e).getTime();
}
var z9 = {
    ceil: Math.ceil,
    round: Math.round,
    floor: Math.floor,
    trunc: function (e) {
      return e < 0 ? Math.ceil(e) : Math.floor(e);
    },
  },
  iPe = "trunc";
function jz(t) {
  return t ? z9[t] : z9[iPe];
}
function oPe(t, e, n) {
  Ol(2, arguments);
  var r = Vz(t, e) / aPe;
  return jz(n == null ? void 0 : n.roundingMethod)(r);
}
var uPe = {};
function lPe() {
  return uPe;
}
function OT(t) {
  var e = new Date(
    Date.UTC(
      t.getFullYear(),
      t.getMonth(),
      t.getDate(),
      t.getHours(),
      t.getMinutes(),
      t.getSeconds(),
      t.getMilliseconds()
    )
  );
  return e.setUTCFullYear(t.getFullYear()), t.getTime() - e.getTime();
}
var cPe = {
    lessThanXSeconds: {
      one: "less than a second",
      other: "less than {{count}} seconds",
    },
    xSeconds: { one: "1 second", other: "{{count}} seconds" },
    halfAMinute: "half a minute",
    lessThanXMinutes: {
      one: "less than a minute",
      other: "less than {{count}} minutes",
    },
    xMinutes: { one: "1 minute", other: "{{count}} minutes" },
    aboutXHours: { one: "about 1 hour", other: "about {{count}} hours" },
    xHours: { one: "1 hour", other: "{{count}} hours" },
    xDays: { one: "1 day", other: "{{count}} days" },
    aboutXWeeks: { one: "about 1 week", other: "about {{count}} weeks" },
    xWeeks: { one: "1 week", other: "{{count}} weeks" },
    aboutXMonths: { one: "about 1 month", other: "about {{count}} months" },
    xMonths: { one: "1 month", other: "{{count}} months" },
    aboutXYears: { one: "about 1 year", other: "about {{count}} years" },
    xYears: { one: "1 year", other: "{{count}} years" },
    overXYears: { one: "over 1 year", other: "over {{count}} years" },
    almostXYears: { one: "almost 1 year", other: "almost {{count}} years" },
  },
  dPe = function (e, n, r) {
    var a,
      s = cPe[e];
    return (
      typeof s == "string"
        ? (a = s)
        : n === 1
        ? (a = s.one)
        : (a = s.other.replace("{{count}}", n.toString())),
      r != null && r.addSuffix
        ? r.comparison && r.comparison > 0
          ? "in " + a
          : a + " ago"
        : a
    );
  };
const pPe = dPe;
function zC(t) {
  return function () {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
      n = e.width ? String(e.width) : t.defaultWidth,
      r = t.formats[n] || t.formats[t.defaultWidth];
    return r;
  };
}
var hPe = {
    full: "EEEE, MMMM do, y",
    long: "MMMM do, y",
    medium: "MMM d, y",
    short: "MM/dd/yyyy",
  },
  fPe = {
    full: "h:mm:ss a zzzz",
    long: "h:mm:ss a z",
    medium: "h:mm:ss a",
    short: "h:mm a",
  },
  mPe = {
    full: "{{date}} 'at' {{time}}",
    long: "{{date}} 'at' {{time}}",
    medium: "{{date}}, {{time}}",
    short: "{{date}}, {{time}}",
  },
  SPe = {
    date: zC({ formats: hPe, defaultWidth: "full" }),
    time: zC({ formats: fPe, defaultWidth: "full" }),
    dateTime: zC({ formats: mPe, defaultWidth: "full" }),
  };
const yPe = SPe;
var gPe = {
    lastWeek: "'last' eeee 'at' p",
    yesterday: "'yesterday at' p",
    today: "'today at' p",
    tomorrow: "'tomorrow at' p",
    nextWeek: "eeee 'at' p",
    other: "P",
  },
  vPe = function (e, n, r, a) {
    return gPe[e];
  };
const _Pe = vPe;
function gS(t) {
  return function (e, n) {
    var r = n != null && n.context ? String(n.context) : "standalone",
      a;
    if (r === "formatting" && t.formattingValues) {
      var s = t.defaultFormattingWidth || t.defaultWidth,
        i = n != null && n.width ? String(n.width) : s;
      a = t.formattingValues[i] || t.formattingValues[s];
    } else {
      var o = t.defaultWidth,
        u = n != null && n.width ? String(n.width) : t.defaultWidth;
      a = t.values[u] || t.values[o];
    }
    var l = t.argumentCallback ? t.argumentCallback(e) : e;
    return a[l];
  };
}
var bPe = {
    narrow: ["B", "A"],
    abbreviated: ["BC", "AD"],
    wide: ["Before Christ", "Anno Domini"],
  },
  EPe = {
    narrow: ["1", "2", "3", "4"],
    abbreviated: ["Q1", "Q2", "Q3", "Q4"],
    wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"],
  },
  TPe = {
    narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
    abbreviated: [
      "Jan",
      "Feb",
      "Mar",
      "Apr",
      "May",
      "Jun",
      "Jul",
      "Aug",
      "Sep",
      "Oct",
      "Nov",
      "Dec",
    ],
    wide: [
      "January",
      "February",
      "March",
      "April",
      "May",
      "June",
      "July",
      "August",
      "September",
      "October",
      "November",
      "December",
    ],
  },
  wPe = {
    narrow: ["S", "M", "T", "W", "T", "F", "S"],
    short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
    abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
    wide: [
      "Sunday",
      "Monday",
      "Tuesday",
      "Wednesday",
      "Thursday",
      "Friday",
      "Saturday",
    ],
  },
  PPe = {
    narrow: {
      am: "a",
      pm: "p",
      midnight: "mi",
      noon: "n",
      morning: "morning",
      afternoon: "afternoon",
      evening: "evening",
      night: "night",
    },
    abbreviated: {
      am: "AM",
      pm: "PM",
      midnight: "midnight",
      noon: "noon",
      morning: "morning",
      afternoon: "afternoon",
      evening: "evening",
      night: "night",
    },
    wide: {
      am: "a.m.",
      pm: "p.m.",
      midnight: "midnight",
      noon: "noon",
      morning: "morning",
      afternoon: "afternoon",
      evening: "evening",
      night: "night",
    },
  },
  IPe = {
    narrow: {
      am: "a",
      pm: "p",
      midnight: "mi",
      noon: "n",
      morning: "in the morning",
      afternoon: "in the afternoon",
      evening: "in the evening",
      night: "at night",
    },
    abbreviated: {
      am: "AM",
      pm: "PM",
      midnight: "midnight",
      noon: "noon",
      morning: "in the morning",
      afternoon: "in the afternoon",
      evening: "in the evening",
      night: "at night",
    },
    wide: {
      am: "a.m.",
      pm: "p.m.",
      midnight: "midnight",
      noon: "noon",
      morning: "in the morning",
      afternoon: "in the afternoon",
      evening: "in the evening",
      night: "at night",
    },
  },
  CPe = function (e, n) {
    var r = Number(e),
      a = r % 100;
    if (a > 20 || a < 10)
      switch (a % 10) {
        case 1:
          return r + "st";
        case 2:
          return r + "nd";
        case 3:
          return r + "rd";
      }
    return r + "th";
  },
  APe = {
    ordinalNumber: CPe,
    era: gS({ values: bPe, defaultWidth: "wide" }),
    quarter: gS({
      values: EPe,
      defaultWidth: "wide",
      argumentCallback: function (e) {
        return e - 1;
      },
    }),
    month: gS({ values: TPe, defaultWidth: "wide" }),
    day: gS({ values: wPe, defaultWidth: "wide" }),
    dayPeriod: gS({
      values: PPe,
      defaultWidth: "wide",
      formattingValues: IPe,
      defaultFormattingWidth: "wide",
    }),
  };
const OPe = APe;
function vS(t) {
  return function (e) {
    var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
      r = n.width,
      a = (r && t.matchPatterns[r]) || t.matchPatterns[t.defaultMatchWidth],
      s = e.match(a);
    if (!s) return null;
    var i = s[0],
      o = (r && t.parsePatterns[r]) || t.parsePatterns[t.defaultParseWidth],
      u = Array.isArray(o)
        ? NPe(o, function (d) {
            return d.test(i);
          })
        : HPe(o, function (d) {
            return d.test(i);
          }),
      l;
    (l = t.valueCallback ? t.valueCallback(u) : u),
      (l = n.valueCallback ? n.valueCallback(l) : l);
    var c = e.slice(i.length);
    return { value: l, rest: c };
  };
}
function HPe(t, e) {
  for (var n in t) if (t.hasOwnProperty(n) && e(t[n])) return n;
}
function NPe(t, e) {
  for (var n = 0; n < t.length; n++) if (e(t[n])) return n;
}
function RPe(t) {
  return function (e) {
    var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
      r = e.match(t.matchPattern);
    if (!r) return null;
    var a = r[0],
      s = e.match(t.parsePattern);
    if (!s) return null;
    var i = t.valueCallback ? t.valueCallback(s[0]) : s[0];
    i = n.valueCallback ? n.valueCallback(i) : i;
    var o = e.slice(a.length);
    return { value: i, rest: o };
  };
}
var kPe = /^(\d+)(th|st|nd|rd)?/i,
  xPe = /\d+/i,
  LPe = {
    narrow: /^(b|a)/i,
    abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
    wide: /^(before christ|before common era|anno domini|common era)/i,
  },
  MPe = { any: [/^b/i, /^(a|c)/i] },
  DPe = {
    narrow: /^[1234]/i,
    abbreviated: /^q[1234]/i,
    wide: /^[1234](th|st|nd|rd)? quarter/i,
  },
  GPe = { any: [/1/i, /2/i, /3/i, /4/i] },
  FPe = {
    narrow: /^[jfmasond]/i,
    abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
    wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,
  },
  UPe = {
    narrow: [
      /^j/i,
      /^f/i,
      /^m/i,
      /^a/i,
      /^m/i,
      /^j/i,
      /^j/i,
      /^a/i,
      /^s/i,
      /^o/i,
      /^n/i,
      /^d/i,
    ],
    any: [
      /^ja/i,
      /^f/i,
      /^mar/i,
      /^ap/i,
      /^may/i,
      /^jun/i,
      /^jul/i,
      /^au/i,
      /^s/i,
      /^o/i,
      /^n/i,
      /^d/i,
    ],
  },
  KPe = {
    narrow: /^[smtwf]/i,
    short: /^(su|mo|tu|we|th|fr|sa)/i,
    abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
    wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,
  },
  BPe = {
    narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
    any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],
  },
  VPe = {
    narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
    any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,
  },
  jPe = {
    any: {
      am: /^a/i,
      pm: /^p/i,
      midnight: /^mi/i,
      noon: /^no/i,
      morning: /morning/i,
      afternoon: /afternoon/i,
      evening: /evening/i,
      night: /night/i,
    },
  },
  zPe = {
    ordinalNumber: RPe({
      matchPattern: kPe,
      parsePattern: xPe,
      valueCallback: function (e) {
        return parseInt(e, 10);
      },
    }),
    era: vS({
      matchPatterns: LPe,
      defaultMatchWidth: "wide",
      parsePatterns: MPe,
      defaultParseWidth: "any",
    }),
    quarter: vS({
      matchPatterns: DPe,
      defaultMatchWidth: "wide",
      parsePatterns: GPe,
      defaultParseWidth: "any",
      valueCallback: function (e) {
        return e + 1;
      },
    }),
    month: vS({
      matchPatterns: FPe,
      defaultMatchWidth: "wide",
      parsePatterns: UPe,
      defaultParseWidth: "any",
    }),
    day: vS({
      matchPatterns: KPe,
      defaultMatchWidth: "wide",
      parsePatterns: BPe,
      defaultParseWidth: "any",
    }),
    dayPeriod: vS({
      matchPatterns: VPe,
      defaultMatchWidth: "any",
      parsePatterns: jPe,
      defaultParseWidth: "any",
    }),
  };
const $Pe = zPe;
var WPe = {
  code: "en-US",
  formatDistance: pPe,
  formatLong: yPe,
  formatRelative: _Pe,
  localize: OPe,
  match: $Pe,
  options: { weekStartsOn: 0, firstWeekContainsDate: 1 },
};
const qPe = WPe;
function YPe(t, e) {
  Ol(2, arguments);
  var n = Eo(t),
    r = Eo(e),
    a = n.getTime() - r.getTime();
  return a < 0 ? -1 : a > 0 ? 1 : a;
}
function zz(t, e) {
  if (t == null)
    throw new TypeError(
      "assign requires that input parameter not be null or undefined"
    );
  for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
  return t;
}
function XPe(t) {
  return zz({}, t);
}
var $9 = 1e3 * 60,
  HT = 60 * 24,
  W9 = HT * 30,
  q9 = HT * 365;
function Y9(t, e, n) {
  var r, a, s;
  Ol(2, arguments);
  var i = lPe(),
    o =
      (r =
        (a = n == null ? void 0 : n.locale) !== null && a !== void 0
          ? a
          : i.locale) !== null && r !== void 0
        ? r
        : qPe;
  if (!o.formatDistance)
    throw new RangeError(
      "locale must contain localize.formatDistance property"
    );
  var u = YPe(t, e);
  if (isNaN(u)) throw new RangeError("Invalid time value");
  var l = zz(XPe(n), {
      addSuffix: !!(n != null && n.addSuffix),
      comparison: u,
    }),
    c,
    d;
  u > 0 ? ((c = Eo(e)), (d = Eo(t))) : ((c = Eo(t)), (d = Eo(e)));
  var p = String(
      (s = n == null ? void 0 : n.roundingMethod) !== null && s !== void 0
        ? s
        : "round"
    ),
    m;
  if (p === "floor") m = Math.floor;
  else if (p === "ceil") m = Math.ceil;
  else if (p === "round") m = Math.round;
  else
    throw new RangeError("roundingMethod must be 'floor', 'ceil' or 'round'");
  var y = d.getTime() - c.getTime(),
    I = y / $9,
    O = OT(d) - OT(c),
    g = (y - O) / $9,
    C = n == null ? void 0 : n.unit,
    H;
  if (
    (C
      ? (H = String(C))
      : I < 1
      ? (H = "second")
      : I < 60
      ? (H = "minute")
      : I < HT
      ? (H = "hour")
      : g < W9
      ? (H = "day")
      : g < q9
      ? (H = "month")
      : (H = "year"),
    H === "second")
  ) {
    var B = m(y / 1e3);
    return o.formatDistance("xSeconds", B, l);
  } else if (H === "minute") {
    var he = m(I);
    return o.formatDistance("xMinutes", he, l);
  } else if (H === "hour") {
    var de = m(I / 60);
    return o.formatDistance("xHours", de, l);
  } else if (H === "day") {
    var U = m(g / HT);
    return o.formatDistance("xDays", U, l);
  } else if (H === "month") {
    var R = m(g / W9);
    return R === 12 && C !== "month"
      ? o.formatDistance("xYears", 1, l)
      : o.formatDistance("xMonths", R, l);
  } else if (H === "year") {
    var ge = m(g / q9);
    return o.formatDistance("xYears", ge, l);
  }
  throw new RangeError(
    "unit must be 'second', 'minute', 'hour', 'day', 'month' or 'year'"
  );
}
const $z = 19;
function Pc(t) {
  return t.length === $z ? new Date(`${t}Z`) : new Date(t);
}
function lc(t) {
  return t.toISOString().substr(0, $z);
}
function QPe(t, e) {
  let n = 0,
    r = "",
    a = "";
  if (t) {
    const s = Pc(t.until),
      i = Pc(e);
    (n = Math.round(oPe(s, i) / 24)),
      (r = Y9(s, i, { addSuffix: !0, roundingMethod: "floor" })),
      (a = Y9(s, i, { addSuffix: !1, roundingMethod: "floor" }));
  }
  return [n, r, a];
}
const Wz = [
  "local_id",
  "id",
  "updated_at",
  "is_shared",
  "encrypted_with",
  "local_updated_at",
];
class Wa {
  constructor(e = {}) {
    (this.local_id = e.local_id),
      (this.id = e.id),
      (this.updated_at = e.updated_at),
      (this.is_shared = e.is_shared ?? !1),
      (this.encrypted_with = e.encrypted_with ?? null),
      (this.local_updated_at = e.local_updated_at ?? null),
      (this.changedFields = e.changedFields ?? []);
  }
  get entityLocalPath() {
    return `${this.entityName}/${this.local_id}`;
  }
  get hasVaultChanges() {
    return (
      !this.changedFields.includes("local_id") &&
      (this.changedFields.includes("is_shared") ||
        this.changedFields.includes("encrypted_with"))
    );
  }
  static is(e) {
    return (
      e != null && typeof e == "object" && Wz.every((n) => e.hasOwnProperty(n))
    );
  }
  changed(e) {
    if (e == null) return this.changedFields;
    const n = Object.keys(e).filter(JPe);
    return xf([...n, ...this.changedFields]);
  }
}
function JPe(t) {
  return Wz.includes(t);
}
function Pg(t, e) {
  return t != null ? e != null && t.isPotentialDuplicate(e) : e == null;
}
function Ar(t) {
  var e = t == null ? 0 : t.length;
  return e ? t[e - 1] : void 0;
}
function xn(t) {
  return t != null;
}
function qz(t, e) {
  return t != null ? e(t) : void 0;
}
const G0 = "Secure Enclave",
  Yz = "Windows Hello";
let Cp = class Xz {
  constructor(e = {}) {
    (this.entityName = "hardwareKey"),
      (this.local_id = e.local_id),
      (this.id = e.id),
      (this.updated_at = e.updated_at),
      (this.label = e.label || ""),
      (this.public_key = e.public_key || ""),
      (this.storage = e.storage || ""),
      (this.credentialId = e.credentialId),
      (this.is_shared = !1),
      (this.local_updated_at = e.local_updated_at || null);
  }
  get type() {
    return "Type ECDSA";
  }
  isSep() {
    return this.storage === G0;
  }
  isWindowsHello() {
    return this.storage === Yz;
  }
  clone(e = {}) {
    return new Xz({ ...this, ...e });
  }
  get entityLocalPath() {
    return `${this.entityName}/${this.local_id}`;
  }
};
const ZPe = vi("@termius/libtermius"),
  {
    checkPublicKeyIsCertificate: E_t,
    validatePrivateKeyFormat: T_t,
    validatePublicKeyFormat: w_t,
    getKeyTypeFromPrivateKey: Qz,
    sep: $b,
    terminalOutput: P_t,
    SshAgentStorage: I_t,
    SshClient: C_t,
    TelnetClient: A_t,
    checkPrivateKeyEncrypted: O_t,
    crypto: Ms,
    generateSshKey: Jz,
    generateSshKeyFromSKKeyInfo: H_t,
    logging: N_t,
    srp: eIe,
    checkPrivateKeyEncryptedWithPassword: R_t,
    checkPrivateKeyIsPuttyKey: k_t,
    generateSshKeyFromPuttyKey: x_t,
    getSKKeyInfoFromOpenSSHPrivateKey: L_t,
    generateSshKeyFromPublicKey: M_t,
    generatePublicKeyFromPrivateKey: D_t,
    winhello: Zz,
  } = ZPe;
function sO(t) {
  if (!t) return !1;
  const e = Qz(t);
  return e === "sk-ec" || e === "sk-ed";
}
function X9(t) {
  if (!t) return "Type unknown";
  const e = Qz(t);
  return e !== "unknown" ? `Type ${nIe(e)}` : "Type unknown";
}
const tIe = /sk-(e[cd])/;
function nIe(t) {
  return t
    .replace(tIe, "$1-sk")
    .replace("ec", "ECDSA")
    .replace("ed", "ED25519")
    .toUpperCase();
}
let NT = class e$ extends Wa {
  constructor(e = {}) {
    super(e),
      (this.entityName = "sshCertificate"),
      (this.nameInAnalytic = "Certificate"),
      (this.ssh_key_id = e.ssh_key_id),
      (this.updated_at = e.updated_at),
      (this.label = e.label),
      (this.certificate = e.certificate || "");
  }
  prepareForDuplicate() {
    (this.local_id = void 0), (this.id = void 0), (this.ssh_key_id = void 0);
  }
  clone(e) {
    return new e$({ ...this, ...e, changedFields: this.changed(e) });
  }
};
class Ia extends Wa {
  constructor(e = {}) {
    super(e),
      (this.entityName = "sshKey"),
      (this.nameInAnalytic = "PrivateKey"),
      (this.label = e.label || ""),
      (this.passphrase = e.passphrase || ""),
      (this.private_key = e.private_key || ""),
      (this.public_key = e.public_key || ""),
      (this.certificates = (e.certificates ?? []).map((n) => new NT(n)));
  }
  get displayLabel() {
    return this.label;
  }
  get type() {
    return this.certificates.length > 0
      ? `${X9(this.certificates[0].certificate)} SSH Certificate`
      : X9(this.private_key);
  }
  clone(e) {
    return new Ia({ ...this, ...e, changedFields: this.changed(e) });
  }
  prepareForDuplicate() {
    (this.local_id = void 0),
      (this.id = void 0),
      this.certificates.forEach((e) => e.prepareForDuplicate());
  }
  trimPrivateAndPublic() {
    (this.private_key = this.private_key.trim()),
      (this.public_key = this.public_key.trim());
  }
  static is(e) {
    return e.entityName === "sshKey";
  }
}
let xr = class t$ extends Wa {
  constructor(e) {
    super(e),
      (this.entityName = "identity"),
      (this.nameInAnalytic = "Identity"),
      (this.is_visible = e.is_visible),
      (this.label = e.label || ""),
      (this.password = e.password || null),
      (this.ssh_key = e.ssh_key ? new Ia(e.ssh_key) : null),
      (this.hardware_key = e.hardware_key ? new Cp(e.hardware_key) : null),
      (this.username = e.username || null);
  }
  isPotentialDuplicate(e) {
    return this.username === e.username;
  }
  prepareForDuplicate() {
    return (this.local_id = void 0), (this.id = void 0), this;
  }
  replaceKey(e) {
    var n;
    return ((n = this.ssh_key) == null ? void 0 : n.local_id) ===
      e.original.local_id
      ? ((this.ssh_key = e.copy), !0)
      : !1;
  }
  isEmpty() {
    return (
      this.is_visible === !1 &&
      this.password == null &&
      this.ssh_key == null &&
      this.hardware_key == null &&
      this.username == null
    );
  }
  get authMethod() {
    const e = this.ssh_key || this.hardware_key;
    return this.password && e
      ? "Auth password and key"
      : this.password
      ? "Auth password"
      : e
      ? "Auth key"
      : "No auth method";
  }
  get displayLabel() {
    return this.label || this.username || "";
  }
  get lastModifiedAt() {
    if (this.local_updated_at) return this.local_updated_at;
    if (this.updated_at) return Pc(this.updated_at);
  }
  clone(e = {}) {
    return new t$({ ...this, ...e, changedFields: this.changed(e) });
  }
  static is(e) {
    return e.entityName === "identity";
  }
};
class ZR {
  _value(e, n) {
    const { value: r } = this._query(e);
    return r ?? n;
  }
  _source(e) {
    return this._query(e).source;
  }
  _merged(e) {
    return this._source(e) !== "me";
  }
}
function RT(t) {
  return t != null;
}
function n$(t, e, n) {
  if (t) {
    const r = n(t);
    if (RT(r)) return { value: r, source: "me" };
  }
  for (const r of e) {
    const a = n(r);
    if (RT(a)) return { value: a, source: "parent" };
  }
  return { value: null, source: "global" };
}
function sIe(t, e, n) {
  if (t) {
    const { is_visible: r } = t,
      a = n(t);
    if (RT(a)) return { value: a, source: "me" };
    if (r) return { value: null, source: "me" };
  }
  for (const r of e) {
    const { is_visible: a } = r,
      s = n(r);
    if (RT(s)) return { value: s, source: "parent" };
    if (a) return { value: null, source: "parent" };
  }
  return { value: null, source: "global" };
}
function s$(t) {
  if (t.hasMergedSshConfig && t.hasMergedTelnetConfig) return;
  if (t.hasMergedSshConfig)
    return t.getMergedSshConfig().use_mosh ? "mosh" : "ssh";
  if (t.hasMergedTelnetConfig) return "telnet";
  const { parentGroups: e } = t;
  if (e.length) return s$(e[0]);
}
class r$ extends ZR {
  constructor(e, n = []) {
    super(), (this.current = e), (this.parents = n);
  }
  _query(e) {
    return sIe(this.current, this.parents, e);
  }
  get id() {
    return this._value((e) => (e.is_visible ? e.id : null), null);
  }
  get local_id() {
    return this._value((e) => (e.is_visible ? e.local_id : null), null);
  }
  get updated_at() {
    return this._value((e) => (e.is_visible ? e.updated_at : null), null);
  }
  get is_visible() {
    return this._value((e) => e.is_visible, !1);
  }
  get label() {
    if (this.current && this.current.is_visible) return this.current.label;
    for (const e of this.parents) if (e.is_visible) return e.label;
    return "";
  }
  get password() {
    return this._value((e) => e.password, "");
  }
  get merged_password() {
    return this._merged((e) => e.password);
  }
  get ssh_key() {
    return this._value((e) => e.ssh_key, null);
  }
  get merged_ssh_key() {
    return this._merged((e) => e.ssh_key);
  }
  get hardware_key() {
    return this._value((e) => e.hardware_key, null);
  }
  get merged_hardware_key() {
    return this._merged((e) => e.hardware_key);
  }
  get username() {
    return this._value((e) => e.username, "");
  }
  get usernameSource() {
    return this._source((e) => e.username);
  }
  get merged_username() {
    return this._merged((e) => e.username);
  }
  get is_shared() {
    return this._value((e) => e.is_shared, !1);
  }
  get local_updated_at() {
    return this._value((e) => e.local_updated_at, null);
  }
  isEmpty() {
    return !this.username && !this.password && !this.ssh_key;
  }
  asIdentity() {
    return new xr({
      local_id: this.local_id,
      id: this.id,
      label: this.label,
      username: this.username,
      password: this.password,
      is_visible: this.is_visible,
      hardware_key: this.hardware_key,
      is_shared: this.is_shared,
      updated_at: this.updated_at,
      ssh_key: this.ssh_key,
      local_updated_at: this.local_updated_at,
    });
  }
}
class a$ extends ZR {
  constructor(e, n = []) {
    var r;
    super(),
      (this.current = e),
      (this.parents = n),
      (this.identity = new r$(
        (r = this.current) == null ? void 0 : r.identity,
        this.parents.map(({ identity: a }) => a).filter(xn)
      ));
  }
  _query(e) {
    return n$(this.current, this.parents, e);
  }
  get agent_forwarding() {
    return this._value((e) => e.agent_forwarding, !1);
  }
  get agentForwardingSource() {
    return this._source((e) => e.agent_forwarding);
  }
  get charset() {
    return this._value((e) => e.charset, "UTF-8");
  }
  get charsetSource() {
    return this._source((e) => e.charset);
  }
  get mergedCharset() {
    return this._merged((e) => e.charset);
  }
  get color_scheme() {
    return this._value((e) => e.color_scheme, null);
  }
  get colorSchemeSource() {
    return this._source((e) => e.color_scheme);
  }
  get cursor_blink() {
    return this._value((e) => e.cursor_blink, null);
  }
  get env_variables() {
    return this._value((e) => e.env_variables, []);
  }
  get envVariablesSource() {
    return this._source((e) => e.env_variables);
  }
  get font_size() {
    return this._value((e) => e.font_size, null);
  }
  get is_forward_ports() {
    return this._value((e) => e.is_forward_ports, null);
  }
  get keep_alive_packages() {
    return this._value((e) => e.keep_alive_packages, null);
  }
  get mosh_server_command() {
    return this._value((e) => e.mosh_server_command || null, "");
  }
  get port() {
    return this._value((e) => e.port, 22);
  }
  get portSource() {
    return this._source((e) => e.port);
  }
  get proxy() {
    return this._value((e) => e.proxy, null);
  }
  get proxy_source() {
    return this._source((e) => e.proxy);
  }
  get merged_proxy() {
    return this._merged((e) => e.proxy);
  }
  get startup_snippet() {
    return this._value((e) => e.startup_snippet, null);
  }
  get startupSnippetSource() {
    return this._source((e) => e.startup_snippet);
  }
  get mergedStartupSnippet() {
    return this._merged((e) => e.startup_snippet);
  }
  get strict_host_key_check() {
    return this._value((e) => e.strict_host_key_check, null);
  }
  get timeout() {
    return this._value((e) => e.timeout, null);
  }
  get use_mosh() {
    return this._value((e) => e.use_mosh, !1);
  }
  get useMoshSource() {
    return this._source((e) => e.use_mosh);
  }
  get use_ssh_key() {
    return this._value((e) => e.use_ssh_key, null);
  }
  get host_chain() {
    return this._value((e) => e.host_chain, null);
  }
  get host_chain_source() {
    return this._source((e) => e.host_chain);
  }
  get mergedHostChain() {
    return this._merged((e) => e.host_chain);
  }
  get is_shared() {
    return this._value((e) => e.is_shared, !1);
  }
}
class i$ extends ZR {
  constructor(e, n = []) {
    var r;
    super(),
      (this.current = e),
      (this.parents = n),
      (this.identity = new r$(
        (r = this.current) == null ? void 0 : r.identity,
        this.parents.map(({ identity: a }) => a).filter(xn)
      ));
  }
  _query(e) {
    return n$(this.current, this.parents, e);
  }
  get charset() {
    return this._value((e) => e.charset, "UTF-8");
  }
  get charsetSource() {
    return this._source((e) => e.charset);
  }
  get mergedCharset() {
    return this._merged((e) => e.charset);
  }
  get color_scheme() {
    return this._value((e) => e.color_scheme, null);
  }
  get colorSchemeSource() {
    return this._source((e) => e.color_scheme);
  }
  get cursor_blink() {
    return this._value((e) => e.cursor_blink, null);
  }
  get font_size() {
    return this._value((e) => e.font_size, null);
  }
  get keep_alive_packages() {
    return this._value((e) => e.keep_alive_packages, null);
  }
  get port() {
    return this._value((e) => e.port, 23);
  }
  get portSource() {
    return this._source((e) => e.port);
  }
  get startup_snippet() {
    return this._value((e) => e.startup_snippet, null);
  }
  get mergedStartupSnippet() {
    return this._merged((e) => e.startup_snippet);
  }
  get timeout() {
    return this._value((e) => e.timeout, 1500);
  }
  get is_shared() {
    return this._value((e) => e.is_shared, !1);
  }
}
function si(t, e) {
  return vv(t, e);
}
function Iv(t) {
  return (e) => t.safeParse(e).success;
}
class Cv {
  constructor(e) {
    (this.local_id = e.local_id),
      (this.id = e.id),
      (this.address = e.address || ""),
      (this.label = e.label || ""),
      (this.os_name = e.os_name || ""),
      (this.is_shared = !!e.is_shared),
      (this.encrypted_with = e.encrypted_with ?? null);
  }
  get displayLabel() {
    return this.label || this.address;
  }
}
class Ap extends Wa {
  constructor(e) {
    super(e),
      (this.entityName = "hostChain"),
      (this.nameInAnalytic = "HostChain"),
      (this.hosts_chain = e.hosts_chain
        ? e.hosts_chain.map((n) => new Cv(n))
        : []);
  }
  prepareForDuplicate() {
    (this.local_id = void 0), (this.id = void 0);
  }
  get displayLabel() {
    return this.hosts_chain.map((e) => e.displayLabel).join(" -> ");
  }
  clone(e = {}) {
    return new Ap({ ...this, ...e, changedFields: this.changed(e) });
  }
}
let hy = class o$ extends Ap {
  constructor(e) {
    super(e), (this.isModified = !1), (this.sshConfig = e.sshConfig);
  }
  clone(e = {}) {
    return new o$({ ...this, ...e, changedFields: this.changed(e) });
  }
  replaceHostInChain(e) {
    this.hosts_chain = sr(this.hosts_chain, (n) => {
      const r = n.findIndex((a) => a.local_id === e.original.local_id);
      r < 0 ||
        (e.original.local_id !== e.copy.local_id && (this.isModified = !0),
        (n[r] = new Cv(e.copy)));
    });
  }
};
const rIe = "http",
  aIe = "socks";
function u$(t) {
  switch (t) {
    case rIe:
      return 3128;
    case aIe:
      return 1080;
    default:
      return 0;
  }
}
let ek = class l$ extends Wa {
  constructor(e = {}) {
    super(e),
      (this.entityName = "proxy"),
      (this.nameInAnalytic = "Proxy"),
      (this.hostname = e.hostname || ""),
      (this.identity = e.identity ? new xr(e.identity) : null),
      (this.type = e.type || "http"),
      (this.port = e.port != null ? e.port : u$(this.type));
  }
  prepareForDuplicate() {
    (this.local_id = void 0),
      (this.id = void 0),
      this.identity &&
        !this.identity.is_visible &&
        this.identity.prepareForDuplicate();
  }
  replaceIdentity(e) {
    var n;
    return ((n = this.identity) == null ? void 0 : n.local_id) ===
      e.original.local_id
      ? ((this.identity = e.copy), !0)
      : !1;
  }
  get displayLabel() {
    return `${this.hostname}:${this.port}`;
  }
  clone(e = {}) {
    return new l$({ ...this, ...e, changedFields: this.changed(e) });
  }
  static areSame(e, n) {
    var r, a, s, i, o, u, l, c;
    return (
      si(e == null ? void 0 : e.hostname, n == null ? void 0 : n.hostname) &&
      si(
        (r = e == null ? void 0 : e.identity) == null ? void 0 : r.username,
        (a = n == null ? void 0 : n.identity) == null ? void 0 : a.username
      ) &&
      (si(
        (s = e == null ? void 0 : e.identity) == null ? void 0 : s.password,
        (i = n == null ? void 0 : n.identity) == null ? void 0 : i.password
      ) ||
        si(
          (o = e == null ? void 0 : e.identity) == null
            ? void 0
            : o.hardware_key,
          (u = n == null ? void 0 : n.identity) == null
            ? void 0
            : u.hardware_key
        ) ||
        si(
          (l = e == null ? void 0 : e.identity) == null ? void 0 : l.ssh_key,
          (c = n == null ? void 0 : n.identity) == null ? void 0 : c.ssh_key
        )) &&
      si(e == null ? void 0 : e.port, n == null ? void 0 : n.port) &&
      si(e == null ? void 0 : e.type, n == null ? void 0 : n.type)
    );
  }
};
function iIe(
  t,
  e = `
`
) {
  return t.split(e).find((n) => n.trim().length > 0);
}
let Mo = class c$ extends Wa {
    constructor(e) {
      super(e),
        (this.entityName = "snippetsPackage"),
        (this.nameInAnalytic = "SnippetPackage"),
        (this.label = e.label),
        (this.snippets_count = e.snippets_count),
        (this.analytics_id = e.analytics_id);
    }
    get displayLabel() {
      return this.label;
    }
    clone(e = {}) {
      return new c$({ ...this, ...e, changedFields: this.changed(e) });
    }
    static is(e) {
      return e.entityName === "snippetsPackage";
    }
  },
  qa = class d$ extends Wa {
    constructor(e = {}) {
      super(e),
        (this.entityName = "snippet"),
        (this.nameInAnalytic = "Snippet"),
        (this.isTargetHostModified = !1),
        (this.auto_close = e.auto_close != null ? e.auto_close : !0),
        (this.label = e.label || ""),
        (this.script = e.script || ""),
        (this.package = e.package ? new Mo(e.package) : null),
        (this.aianalyticsID = e.aianalyticsID),
        (this.targetHosts = e.targetHosts || null);
    }
    get displayLabel() {
      return this.label ? this.label : iIe(this.script) ?? "";
    }
    clone(e = {}) {
      return new d$({ ...this, ...e, changedFields: this.changed(e) });
    }
    prepareForDuplicate() {
      (this.local_id = void 0), (this.id = void 0);
    }
    resetPackage() {
      this.package = null;
    }
    replacePackage(e) {
      var n;
      return ((n = this.package) == null ? void 0 : n.local_id) ===
        e.original.local_id
        ? ((this.package = e.copy), !0)
        : !1;
    }
    replaceHostInTargets(e) {
      this.targetHosts = sr(this.targetHosts ?? [], (n) => {
        const r = n.findIndex((a) => a.local_id === e.original.local_id);
        r < 0 ||
          (e.original.local_id !== e.copy.local_id &&
            (this.isTargetHostModified = !0),
          (n[r] = new Cv(e.copy)));
      });
    }
    resetTargetHostModified() {
      this.isTargetHostModified = !1;
    }
    static is(e) {
      return e.entityName === "snippet";
    }
  };
class Xs extends Wa {
  constructor(e = {}) {
    super(e),
      (this.entityName = "sshConfig"),
      (this.nameInAnalytic = "SSHConfig"),
      (this.agent_forwarding = e.agent_forwarding),
      (this.charset = e.charset),
      (this.color_scheme = e.color_scheme),
      (this.cursor_blink = e.cursor_blink),
      (this.env_variables = e.env_variables ? e.env_variables.slice() : null),
      (this.font_size = e.font_size),
      (this.identity = e.identity ? new xr(e.identity) : null),
      (this.is_forward_ports = e.is_forward_ports),
      (this.keep_alive_packages = e.keep_alive_packages),
      (this.mosh_server_command = e.mosh_server_command),
      (this.port = e.port),
      (this.proxy = e.proxy ? new ek(e.proxy) : null),
      (this.startup_snippet = e.startup_snippet
        ? new qa(e.startup_snippet)
        : null),
      (this.strict_host_key_check = e.strict_host_key_check),
      (this.timeout = e.timeout),
      (this.use_mosh = e.use_mosh),
      (this.use_ssh_key = e.use_ssh_key),
      (this.host_chain = e.host_chain != null ? new Ap(e.host_chain) : null);
  }
  static parseEnvVariables(e) {
    if (!e) return null;
    try {
      const n = JSON.parse(e);
      return Object.entries(n).map(([r, a]) => ({
        name: r,
        value: typeof a == "string" ? a : "",
      }));
    } catch {
      return null;
    }
  }
  static stringifyEnvVariables(e) {
    const n = {};
    return (
      e &&
        e.forEach((r) => {
          n[r.name] = r.value;
        }),
      JSON.stringify(n)
    );
  }
  isPotentialDuplicate(e) {
    return this.port === e.port && Pg(this.identity, e.identity);
  }
  prepareForDuplicate() {
    (this.local_id = void 0),
      (this.id = void 0),
      this.identity &&
        !this.identity.is_visible &&
        this.identity.prepareForDuplicate(),
      this.proxy && this.proxy.prepareForDuplicate(),
      this.host_chain && this.host_chain.prepareForDuplicate();
  }
  replaceIdentity(e) {
    var n;
    return ((n = this.identity) == null ? void 0 : n.local_id) ===
      e.original.local_id
      ? ((this.identity = e.copy), !0)
      : !1;
  }
  replaceStartupSnippet(e) {
    var n;
    return ((n = this.startup_snippet) == null ? void 0 : n.local_id) ===
      e.original.local_id
      ? ((this.startup_snippet = e.copy), !0)
      : !1;
  }
  isEmpty() {
    return [
      this.agent_forwarding,
      this.charset,
      this.color_scheme,
      this.cursor_blink,
      this.env_variables,
      this.font_size,
      this.identity,
      this.is_forward_ports,
      this.keep_alive_packages,
      this.mosh_server_command,
      this.port,
      this.proxy,
      this.startup_snippet,
      this.strict_host_key_check,
      this.timeout,
      this.use_mosh,
      this.use_ssh_key,
      this.host_chain,
    ].every((e) => e == null);
  }
  stripEmptyIdentity() {
    this.identity && this.identity.isEmpty() && (this.identity = null);
  }
  stripForNonProUsers() {
    var e, n;
    (this.agent_forwarding = null),
      (this.env_variables = null),
      (this.startup_snippet = null),
      (this.proxy = null),
      (this.host_chain = null),
      (n = (e = this.identity) == null ? void 0 : e.ssh_key) != null &&
        n.certificates &&
        (this.identity.ssh_key.certificates = []);
  }
  clone(e = {}) {
    return new Xs({ ...this, ...e, changedFields: this.changed(e) });
  }
  static areSame(e, n) {
    return e == null && n == null
      ? !0
      : e == null || n == null
      ? !1
      : si(new Xs({ ...e, identity: null }), new Xs({ ...n, identity: null }));
  }
  resetField(e) {
    uIe(e) && (this[e] = null);
  }
}
const oIe = Xe.union([
    Xe.literal("port"),
    Xe.literal("identity"),
    Xe.literal("startup_snippet"),
    Xe.literal("proxy"),
    Xe.literal("host_chain"),
  ]),
  uIe = Iv(oIe);
let up = class Wb extends Wa {
  constructor(e = {}) {
    super(e),
      (this.entityName = "telnetConfig"),
      (this.nameInAnalytic = "TelnetConfig"),
      (this.charset = e.charset),
      (this.color_scheme = e.color_scheme),
      (this.cursor_blink = e.cursor_blink),
      (this.font_size = e.font_size),
      (this.identity = e.identity ? new xr(e.identity) : null),
      (this.keep_alive_packages = e.keep_alive_packages),
      (this.port = e.port),
      (this.startup_snippet = e.startup_snippet
        ? new qa(e.startup_snippet)
        : null),
      (this.timeout = e.timeout);
  }
  isPotentialDuplicate(e) {
    return this.port === e.port && Pg(this.identity, e.identity);
  }
  prepareForDuplicate() {
    (this.local_id = void 0),
      (this.id = void 0),
      this.identity &&
        !this.identity.is_visible &&
        this.identity.prepareForDuplicate();
  }
  replaceIdentity(e) {
    var n;
    return ((n = this.identity) == null ? void 0 : n.local_id) ===
      e.original.local_id
      ? ((this.identity = e.copy), !0)
      : !1;
  }
  replaceStartupSnippet(e) {
    var n;
    return ((n = this.startup_snippet) == null ? void 0 : n.local_id) ===
      e.original.local_id
      ? ((this.startup_snippet = e.copy), !0)
      : !1;
  }
  isEmpty() {
    return (
      this.charset == null &&
      this.color_scheme == null &&
      this.cursor_blink == null &&
      this.font_size == null &&
      this.identity == null &&
      this.keep_alive_packages == null &&
      this.port == null &&
      this.startup_snippet == null &&
      this.timeout == null
    );
  }
  stripEmptyIdentity() {
    this.identity && this.identity.isEmpty() && (this.identity = null);
  }
  stripForNonProUsers() {
    var e, n;
    (this.startup_snippet = null),
      (n = (e = this.identity) == null ? void 0 : e.ssh_key) != null &&
        n.certificates &&
        (this.identity.ssh_key.certificates = []);
  }
  clone(e = {}) {
    return new Wb({ ...this, ...e, changedFields: this.changed(e) });
  }
  static areSame(e, n) {
    return e == null && n == null
      ? !0
      : e == null || n == null
      ? !1
      : si(new Wb({ ...e, identity: null }), new Wb({ ...n, identity: null }));
  }
  resetField(e) {
    cIe(e) && (this[e] = null);
  }
};
const lIe = Xe.union([Xe.literal("port"), Xe.literal("identity")]),
  cIe = Iv(lIe);
let Fs = class qb extends Wa {
  constructor(e = {}) {
    super(e),
      (this.entityName = "group"),
      (this.nameInAnalytic = "Group"),
      (this.label = e.label || ""),
      (this.parent_group = e.parent_group ? new qb(e.parent_group) : null),
      (this.ssh_config = e.ssh_config ? new Xs(e.ssh_config) : null),
      (this.cloud_config = e.cloud_config ? tk(e.cloud_config) : null),
      (this.telnet_config = e.telnet_config ? new up(e.telnet_config) : null),
      (this.sharing_mode = e.sharing_mode ?? null),
      (this.credentials_mode = e.credentials_mode ?? null);
  }
  get displayLabel() {
    return this.label;
  }
  get parentGroups() {
    const { parent_group: e } = this;
    return e ? [e, ...e.parentGroups] : [];
  }
  get rootGroup() {
    return Ar(this.parentGroups) ?? this;
  }
  get hasMergedSshConfig() {
    return this.ssh_config
      ? !0
      : this.parent_group
      ? this.parent_group.hasMergedSshConfig
      : !1;
  }
  get hasMergedTelnetConfig() {
    return this.telnet_config
      ? !0
      : this.parent_group
      ? this.parent_group.hasMergedTelnetConfig
      : !1;
  }
  getMergedSshConfig() {
    var e;
    return new a$(
      this.ssh_config,
      (e = this.parent_group) == null ? void 0 : e.getSshConfigsRecursively()
    );
  }
  getMergedTelnetConfig() {
    var e;
    return new i$(
      this.telnet_config,
      (e = this.parent_group) == null ? void 0 : e.getTelnetConfigsRecursively()
    );
  }
  getSshConfigsRecursively() {
    return [
      this.ssh_config,
      ...this.parentGroups.map(({ ssh_config: e }) => e),
    ].filter(xn);
  }
  getTelnetConfigsRecursively() {
    return [
      this.telnet_config,
      ...this.parentGroups.map(({ telnet_config: e }) => e),
    ].filter(xn);
  }
  stripEmptyIdentities() {
    this.ssh_config && this.ssh_config.stripEmptyIdentity(),
      this.telnet_config && this.telnet_config.stripEmptyIdentity();
  }
  stripConfigsForNonProUsers() {
    this.parent_group && this.parent_group.stripConfigsForNonProUsers(),
      this.ssh_config && this.ssh_config.stripForNonProUsers(),
      this.telnet_config && this.telnet_config.stripForNonProUsers(),
      this.cloud_config && (this.cloud_config = null);
  }
  clone(e = {}) {
    return new qb({ ...this, ...e, changedFields: this.changed(e) });
  }
  unlinkParentGroup() {
    this.parent_group = null;
  }
  replaceParentGroup(e) {
    var n;
    return ((n = this.parent_group) == null ? void 0 : n.local_id) ===
      e.original.local_id
      ? ((this.parent_group = e.copy), !0)
      : !1;
  }
  static clone(e, n = {}) {
    return new qb({ ...e }).clone(n);
  }
  static is(e) {
    return e.entityName === "group";
  }
};
function tk(t) {
  if (t.cloudType === "aws") return new sf(t);
  if (t.cloudType === "DigitalOcean") return new py(t);
  if (t.cloudType === "azure") return new dy(t);
  throw new Error("Incorrect cloud config");
}
let Tn = class YS extends Wa {
  constructor(e = {}) {
    super(e),
      (this.entityName = "host"),
      (this.nameInAnalytic = "Host"),
      (this.cloud_instance_id = e.cloud_instance_id),
      (this.cloud_instance_type = e.cloud_instance_type),
      (this.address = e.address || ""),
      (this.backspace = e.backspace || "default"),
      (this.group = e.group ? new Fs(e.group) : null),
      (this.icon = e.icon || ""),
      (this.interaction_date = e.interaction_date),
      (this.label = e.label || ""),
      (this.os_name = e.os_name || ""),
      (this.ssh_config = e.ssh_config ? new Xs(e.ssh_config) : null),
      (this.telnet_config = e.telnet_config ? new up(e.telnet_config) : null),
      (this.tags = Array.isArray(e.tags) ? [...e.tags] : []),
      (this.ip_version = e.ip_version || rPe),
      (this.connectionPath = Array.isArray(e.connectionPath)
        ? e.connectionPath.map((n) => new YS(n))
        : []),
      (this.credentials_mode = e.credentials_mode ?? null);
  }
  static fromLocalhost(e) {
    return new YS({
      address: e.address,
      ssh_config: {
        port: e.port,
        identity: {
          is_visible: !1,
          username: e.username,
          password: e.password,
        },
      },
    });
  }
  isPotentialDuplicate(e) {
    return (
      this.address === e.address &&
      this.label === e.label &&
      Pg(this.ssh_config, e.ssh_config) &&
      Pg(this.telnet_config, e.telnet_config)
    );
  }
  touch() {
    this.interaction_date = lc(new Date());
  }
  prepareForDuplicate() {
    (this.local_id = void 0),
      (this.id = void 0),
      (this.cloud_instance_id = void 0),
      (this.cloud_instance_type = void 0),
      (this.os_name = ""),
      this.ssh_config && this.ssh_config.prepareForDuplicate(),
      this.telnet_config && this.telnet_config.prepareForDuplicate();
  }
  get displayLabel() {
    return this.label || this.address;
  }
  get actions() {
    const e = [];
    return (
      this.ssh_config &&
        (this.getMergedSshConfig().use_mosh && e.push("mosh"), e.push("ssh")),
      this.telnet_config && e.push("telnet"),
      e
    );
  }
  get firstChain() {
    return this.connectionPath.length > 1 ? this.connectionPath[0] : null;
  }
  get description() {
    const { ssh_config: e, telnet_config: n } = this,
      r = [...this.actions];
    e && e.identity && e.identity.username && r.push(e.identity.username),
      n && n.identity && n.identity.username && r.push(n.identity.username);
    const a = xf(this.tags);
    return r.concat(a).join(", ");
  }
  get parentGroups() {
    const { group: e } = this;
    return e ? [e, ...e.parentGroups] : [];
  }
  getMergedSshConfig() {
    var e;
    return new a$(
      this.ssh_config,
      (e = this.group) == null ? void 0 : e.getSshConfigsRecursively()
    );
  }
  get hasMergedSshConfig() {
    return this.ssh_config
      ? !0
      : this.group
      ? this.group.hasMergedSshConfig
      : !1;
  }
  get hasMergedTelnetConfig() {
    return this.telnet_config
      ? !0
      : this.group
      ? this.group.hasMergedTelnetConfig
      : !1;
  }
  getHostChainCount() {
    return this.connectionPath.length > 1 ? this.connectionPath.length - 1 : 0;
  }
  getMergedTelnetConfig() {
    var e;
    return new i$(
      this.telnet_config,
      (e = this.group) == null ? void 0 : e.getTelnetConfigsRecursively()
    );
  }
  getMergedConfigFor(e) {
    if (e === "ssh" || e === "mosh") return this.getMergedSshConfig();
    if (e === "telnet") return this.getMergedTelnetConfig();
  }
  stripEmptyIdentities() {
    this.ssh_config && this.ssh_config.stripEmptyIdentity(),
      this.telnet_config && this.telnet_config.stripEmptyIdentity();
  }
  stripConfigsForNonProUsers() {
    this.group && this.group.stripConfigsForNonProUsers(),
      this.ssh_config && this.ssh_config.stripForNonProUsers(),
      this.telnet_config && this.telnet_config.stripForNonProUsers();
  }
  replaceGroup(e) {
    var n;
    return ((n = this.group) == null ? void 0 : n.local_id) ===
      e.original.local_id
      ? ((this.group = e.copy), !0)
      : !1;
  }
  unlinkParentGroup() {
    this.group = null;
  }
  clone(e = {}) {
    return new YS({ ...this, ...e, changedFields: this.changed(e) });
  }
  get rootGroup() {
    var e;
    return (e = this.group) == null ? void 0 : e.rootGroup;
  }
  static clone(e, n = {}) {
    return new YS({ ...e }).clone(n);
  }
  static is(e) {
    return e.entityName === "host";
  }
};
function U_(t, e) {
  return t ? e : [];
}
function Sa(t, e) {
  return t ? e : {};
}
const K_ = {
  HOST: "Host",
  GROUP: "Group",
  SNIPPET: "Snippet",
  PACKAGE: "Package",
};
function ma(t, e = !1) {
  return t ?? e ? "yes" : "no";
}
function Jo(t, e) {
  switch (e) {
    case "me":
      return t ? "yes" : "no";
    case "parent":
      return "inherited";
    default:
      return "no";
  }
}
function dIe(t, e) {
  const n = Jo(t, e);
  return n === "yes" ? "enabled" : n === "no" ? "disabled" : "inherited";
}
function Q9(t) {
  return t ? "yes" : "no";
}
function pIe(t) {
  var e;
  return Jo(
    !!((e = t.host_chain) != null && e.hosts_chain.length),
    t.host_chain_source
  );
}
function hIe(t) {
  return t.connectionPath.length > 1 ? t.connectionPath.length - 1 : 0;
}
function fIe(t) {
  switch (X0e.isIP(t)) {
    case 4:
      return "IPv4";
    case 6:
      return "IPv6";
    default:
      return "hostname";
  }
}
function mIe(t) {
  const { identity: e } = t;
  return e.is_visible ? "no" : Jo(!!e.username, e.usernameSource);
}
function SIe(t) {
  const { identity: e } = t;
  if (e.is_visible)
    return [e.merged_username ? "Inherited Identity" : "Identity"];
  const n = [];
  return (
    e.password && n.push(e.merged_password ? "Inherited Password" : "Password"),
    e.ssh_key &&
      (e.ssh_key.certificates[0]
        ? n.push(
            e.merged_ssh_key ? "Inherited SSH Certificate" : "SSH Certificate"
          )
        : n.push(e.merged_ssh_key ? "Inherited SSH Key" : "SSH Key")),
    n
  );
}
function yIe(t) {
  return t.group ? (t.group.parent_group ? "Nested" : "Root") : "None";
}
function gIe(t) {
  const { env_variables: e } = t;
  return e.length;
}
function nk({
  type: t,
  host: e,
  teamStatus: n,
  sshServer: r,
  sshServerComment: a,
  failureReason: s,
  errorCode: i,
  connectionOrigin: o,
  history: u,
  connectionID: l,
  acquisitionChannel: c,
  cloudIntegration: d,
  fido2BasedKey: p = !1,
  sepkey: m = !1,
  windowsHelloKey: y = !1,
  wizardID: I,
  theme: O,
  terminalTheme: g,
}) {
  const C = {
    hostsInChain: 0,
    isSharedEntity: "no",
    snippet: "no",
    proxy: "no",
    mosh: "no",
    environmentVariables: "no",
    port: "no",
    charset: "no",
    username: "no",
    agentForwarding: "disabled",
    credentials: [],
    parentGroup: "None",
    hostChain: "no",
    connectionID: l,
    cloudIntegration: d,
    wizardID: I,
    label: "no",
    backspace: "default",
    numberOfTags: 0,
    numberOfEnvironmentVariables: 0,
    theme: O,
    terminalTheme: g,
  };
  if (
    (t && (C.type = t),
    (C.sshServer = r),
    (C.sshServerComment = a),
    s && (C.failureReason = s),
    i && (C.connectionErrorCode = i),
    o && (C.connectionOrigin = o),
    u != null && (C.history = u),
    c && (C.acquisitionChannel = c),
    (C.fido2BasedKey = ma(p)),
    (C.sepkey = ma(m)),
    (C.windowsHelloKey = ma(y)),
    C.type === "Local" || !e)
  )
    return (C.isSharedEntityOwner = "no"), (C.isSharedEntity = "no"), C;
  const { isOwner: H, isTeam: B } = n;
  if (
    ((C.isSharedEntityOwner = Q9((B && H) || !B)),
    (C.isSharedEntity = Q9(e.is_shared)),
    (C.addressType = fIe(e.address)),
    C.type === "Telnet")
  )
    return C;
  const he = new Tn(e);
  C.hostsInChain = hIe(he);
  const de = he.getMergedSshConfig();
  return (
    (C.hostChain = pIe(de)),
    (C.snippet = Jo(!!de.startup_snippet, de.startupSnippetSource)),
    (C.proxy = Jo(!!de.proxy, de.proxy_source)),
    (C.mosh = Jo(!!de.use_mosh, de.useMoshSource)),
    (C.environmentVariables = Jo(
      !!de.env_variables.length,
      de.envVariablesSource
    )),
    (C.port = Jo(!!de.port, de.portSource)),
    (C.charset = Jo(!!de.charset, de.charsetSource)),
    (C.theme = Jo(!!de.color_scheme, de.colorSchemeSource)),
    (C.agentForwarding = dIe(!!de.agent_forwarding, de.agentForwardingSource)),
    (C.username = mIe(de)),
    (C.credentials = SIe(de)),
    (C.parentGroup = yIe(he)),
    he != null &&
      he.credentials_mode &&
      (C.credentialsSharingMode = Q0e[he.credentials_mode]),
    (C.label = e.label ? "yes" : "no"),
    (C.backspace = e.backspace === "default" ? "default" : "ctrl+h"),
    (C.numberOfTags = e.tags.length),
    (C.numberOfEnvironmentVariables = gIe(de)),
    C
  );
}
const sk = {
    type: void 0,
    hostChain: void 0,
    agentForwarding: void 0,
    addressType: void 0,
    isSharedEntityOwner: void 0,
    isLocationTrackingEnabled: void 0,
    sepkey: void 0,
    connectionOrigin: void 0,
    connectionID: void 0,
    credentialsSharingMode: void 0,
  },
  vIe = ({
    failureReason: t,
    history: e,
    acquisitionChannel: n,
    fido2BasedKey: r,
    sepkey: a,
    windowsHelloKey: s,
    cloudIntegration: i,
    wizardID: o,
    terminalTheme: u,
    ...l
  }) => ({
    ...sk,
    history: e ?? 0,
    acquisitionChannel: n,
    fido2BasedKey: r,
    sepkey: a,
    windowsHelloKey: s,
    cloudIntegration: i,
    wizardID: o,
    terminalTheme: u,
    ...l,
  }),
  _Ie = ({
    failureReason: t,
    history: e,
    fido2BasedKey: n,
    sepkey: r,
    windowsHelloKey: a,
    cloudIntegration: s,
    wizardID: i,
    terminalTheme: o,
    ...u
  }) => ({
    ...sk,
    fido2BasedKey: n,
    sepkey: r,
    windowsHelloKey: a,
    cloudIntegration: s,
    wizardID: i,
    terminalTheme: o,
    ...u,
  }),
  bIe = ({
    history: t,
    failureReason: e,
    connectionID: n,
    fido2BasedKey: r,
    sepkey: a,
    windowsHelloKey: s,
    cloudIntegration: i,
    sshServer: o,
    sshServerComment: u,
    wizardID: l,
    terminalTheme: c,
    ...d
  }) => ({
    ...sk,
    connectionErrorCode: void 0,
    failureReason: e ?? "Unknown Error",
    connectionID: n,
    fido2BasedKey: r,
    sepkey: a,
    windowsHelloKey: s,
    cloudIntegration: i,
    sshserver: o,
    sshserverComment: u,
    wizardID: l,
    terminalTheme: c,
    ...d,
  }),
  EIe = (t) => vIe(nk(t)),
  TIe = (t) => _Ie(nk(t)),
  wIe = (t) => bIe(nk(t));
function PIe(t) {
  switch (t) {
    case "App Store":
      return "MacAppStore";
    case "Windows Store":
      return "MicrosoftAppStore";
    case "Snapcraft":
      return "Snapcraft";
    case "Debian Package":
      return "DebianPackage";
    case "Website":
    default:
      return "TermiusWebsite";
  }
}
function IIe(t) {
  switch (t) {
    case "App Store":
      return "Mac App Store";
    case "Windows Store":
      return "Microsoft Store";
    case "Snapcraft":
      return "Snapcraft";
    case "Debian Package":
      return "Debian Package";
    default:
      return "Website";
  }
}
function CIe(t) {
  switch (t) {
    case "portForwarding":
      return "Port Forwarding";
    case "keychain":
      return "Keychain";
    case "snippets":
      return "Snippets";
    case "knownHosts":
      return "Known Hosts";
    default:
      return "Hosts";
  }
}
function AIe(t) {
  return { mac: "MacOS", win: "Windows", linux: "Linux" }[t];
}
function J9(t) {
  return t === YR
    ? "NewEncryption"
    : Fz(t)
    ? "Customer Experience Survey"
    : t === AT
    ? "Confirm Access"
    : null;
}
function Z9(t) {
  return t === "Unauthorized" ? "Free" : t;
}
const e7 = ({
    hasSharedData: t,
    hasInvitedMembers: e,
    hasJoinedMembers: n,
    hasGrantedAccess: r,
  }) => ({
    hasSharedData: ma(t),
    hasInvitedMembers: ma(e),
    hasJoinedMembers: ma(n),
    hasGrantedAccess: ma(r),
  }),
  $C = (t) => {
    let e = 0;
    for (const [n, r] of Object.entries(t)) e += r;
    return {
      selectedItems: [
        ...U_(!!t.groups, [K_.GROUP]),
        ...U_(!!t.hosts, [K_.HOST]),
        ...U_(!!t.snippets, [K_.SNIPPET]),
        ...U_(!!t.snippetsPackages, [K_.PACKAGE]),
      ],
      numberOfSelectedItems: e,
    };
  },
  Ig = (t) => {
    const e = t.toLowerCase();
    return e.includes("aws")
      ? "AWS"
      : e.includes("azure")
      ? "Azure"
      : "Digital Ocean";
  },
  B_ = (t) => {
    const { cloud_instance_type: e } = t ?? {};
    return e == null ? null : Ig(e);
  },
  t7 = (t) => {
    if (t instanceof sf)
      return t.serviceType === "lightsail" ? "Amazon Lightsail" : "Amazon EC2";
    if (t instanceof dy) return "Azure VMs";
    if (t instanceof py) return "DigitalOcean Droplets";
    throw new Error(
      `An unknown cloud config: ${t == null ? void 0 : t.cloudType}`
    );
  },
  n7 = (t) => (t instanceof sf ? t.ipAddressType : "public"),
  OIe = (t) =>
    t === "Source Code Pro"
      ? "Source Code Pro Regular"
      : t === "Fira Mono"
      ? "Fira Mono Medium"
      : t === "Dejavu Sans Mono"
      ? "DejaVu Sans Mono"
      : t;
function HIe(t) {
  const e = [];
  return (
    t.ssh_key && e.push("SSH key"),
    t.hardware_key && e.push("Hardware key"),
    t.password && e.push("Password"),
    e.length === 0 && t.username && e.push("Username-only"),
    t.is_visible && e.push("Identity"),
    e
  );
}
function F0(t) {
  throw new Error("Switch is not exhaustive");
}
function NIe(t, e = !1) {
  switch (t.action) {
    case "dismissed":
      return;
    case "rated":
      return {
        csat: t.score,
        cesurveyResult: "Dismissed",
        cesurveyEmail: void 0,
        cesurveyFeedback: void 0,
      };
    case "reviewed":
      return {
        csat: t.score,
        cesurveyResult: "Review",
        cesurveyEmail: void 0,
        cesurveyFeedback: void 0,
      };
    case "left-feedback":
      return {
        csat: t.score,
        cesurveyResult: "Feedback",
        cesurveyEmail: e ? t.email : void 0,
        cesurveyFeedback: e ? t.comment : void 0,
      };
    case "rated-in-legacy-app-version":
      return;
    default:
      return F0();
  }
}
var rO = { exports: {} },
  s7 =
    (typeof crypto < "u" &&
      crypto.getRandomValues &&
      crypto.getRandomValues.bind(crypto)) ||
    (typeof msCrypto < "u" &&
      typeof window.msCrypto.getRandomValues == "function" &&
      msCrypto.getRandomValues.bind(msCrypto));
if (s7) {
  var r7 = new Uint8Array(16);
  rO.exports = function () {
    return s7(r7), r7;
  };
} else {
  var a7 = new Array(16);
  rO.exports = function () {
    for (var e = 0, n; e < 16; e++)
      e & 3 || (n = Math.random() * 4294967296),
        (a7[e] = (n >>> ((e & 3) << 3)) & 255);
    return a7;
  };
}
var p$ = rO.exports,
  h$ = [];
for (var V_ = 0; V_ < 256; ++V_) h$[V_] = (V_ + 256).toString(16).substr(1);
function RIe(t, e) {
  var n = e || 0,
    r = h$;
  return [
    r[t[n++]],
    r[t[n++]],
    r[t[n++]],
    r[t[n++]],
    "-",
    r[t[n++]],
    r[t[n++]],
    "-",
    r[t[n++]],
    r[t[n++]],
    "-",
    r[t[n++]],
    r[t[n++]],
    "-",
    r[t[n++]],
    r[t[n++]],
    r[t[n++]],
    r[t[n++]],
    r[t[n++]],
    r[t[n++]],
  ].join("");
}
var f$ = RIe,
  kIe = p$,
  xIe = f$;
function LIe(t, e, n) {
  var r = (e && n) || 0;
  typeof t == "string" &&
    ((e = t === "binary" ? new Array(16) : null), (t = null)),
    (t = t || {});
  var a = t.random || (t.rng || kIe)();
  if (((a[6] = (a[6] & 15) | 64), (a[8] = (a[8] & 63) | 128), e))
    for (var s = 0; s < 16; ++s) e[r + s] = a[s];
  return e || xIe(a);
}
var m$ = LIe;
const Sm = Lo(m$);
function MIe(t) {
  return k(t, (e) => ({ payload: e, meta: { requestId: Sm() } }));
}
function i7(t) {
  return k(t, (e, n) => ({ payload: e, meta: { requestId: n } }));
}
function Ze(t) {
  return {
    request: MIe(`${t}_REQUEST`),
    success: i7(`${t}_SUCCESS`),
    failure: i7(`${t}_FAILURE`),
    toString() {
      return this.request.toString();
    },
  };
}
function DIe(t, e) {
  return Zs(
    ({ type: n, meta: r }) =>
      (r == null ? void 0 : r.requestId) === e &&
      (n === t.success.toString() || n === t.failure.toString())
  );
}
function* ln(t, e) {
  const n = GIe(t, e);
  yield* D(n);
  const r = yield* DIe(t, n.meta.requestId);
  if (t.success.match(r)) return r.payload;
  throw r.payload;
}
function S$(t, e, n) {
  return new Promise((r, a) => {
    t.run(function* () {
      try {
        r(yield* ln(e, n));
      } catch (i) {
        a(i);
      }
    });
  });
}
function GIe(t, e) {
  return t.request(e);
}
function y$(t, e, n) {
  if (e instanceof _r) {
    const r = {
      status: e.status,
      responseJSON: e.responseJSON,
      code: t.failure.toString(),
    };
    return t.failure(r, n.requestId);
  }
  return t.failure(e, n.requestId);
}
function* FIe(t, e, { payload: n, meta: r }) {
  try {
    const a = yield* Me(e, n);
    yield* D(t.success(a, r.requestId));
  } catch (a) {
    yield* D(y$(t, a, r));
  }
}
function zt(t, e) {
  return $e(t.request, FIe, t, e);
}
const us = Ze("UPDATE_USER"),
  fl = k("SET_USER"),
  UIe = Ze("SECURITY_TOKEN"),
  aO = Ze("ENABLE_2FA"),
  iO = Ze("DISABLE_2FA"),
  U0 = Ze("MODIFY_TEAM"),
  KIe = Ze("OTP_REGISTER_PROVIDER_AUTHY"),
  BIe = Ze("OTP_REGISTER_PROVIDER_TOTP"),
  lp = Ze("CREATE_TEAM_TRIAL"),
  VIe = Ze("UPDATE_BILLING_INFORMATION"),
  rk = Ze("INVITE_TEAM_MEMBER"),
  g$ = Ze("SIGN_UP_FREE"),
  v$ = Ze("SIGNUP_TRIAL"),
  Zr = Ze("LOGIN"),
  _$ = k("LOGGED_IN"),
  Op = k("SIGNED_IN"),
  qn = Ze("LOGOUT"),
  b$ = Ze("CHANGE_USERNAME"),
  E$ = Ze("DELETE_ACCOUNT"),
  rf = Ze("CHANGE_PASSWORD"),
  T$ = Ze("RECOVER_ACCOUNT"),
  jIe = Ze("RESET_PASSWORD"),
  zIe = Ze("SEND_VERIFICATION_CODE"),
  w$ = Ze("CONFIRM_EMAIL"),
  $Ie = Ze("CLEAN_DATABASE"),
  WIe = Ze("REMOVE_LOCAL_DATA"),
  qIe = Ze("GET_TEAM_SEATS_LIST"),
  Cg = Ze("GET_TEAM_MEMBERS_LIST"),
  Ag = Ze("GET_TEAM_INVITES_LIST"),
  ak = k("TEAM_UPDATED"),
  YIe = Ze("GET_TEAM_MEMBER_STALE_ENCRYPTION_LIST"),
  XIe = Ze("GET_STALE_ENCRYPTION_DEVICES_LIST"),
  Yb = Ze("GET_ONLY_SHARED_ENTITIES"),
  Ju = Ze("DEACTIVATE_TEAM_TRIAL"),
  cc = Ze("MIGRATE_TO_NEW_CRYPTO_SYSTEM"),
  Xb = Ze("RESET_PASSWORD_AND_MIGRATE_TO_NEW_CRYPTO_SYSTEM"),
  P$ = Ze("REQUEST_UNSYNCED_PERSONAL_DATA"),
  QIe = Ze("DETECT_SSO_ACTION"),
  I$ = Ze("SSO_SIGNUP_TRIAL"),
  JIe = Ze("GENERATE_INVITATION_LINK"),
  ZIe = Ze("SIGN_UP_IN_TEAM_TRIAL_ONBOARDING"),
  C$ = Ze("CREATE_TEAM_IN_TEAM_TRIAL_ONBOARDING"),
  eCe = Ze("QUERY_WHETHER_USER_ENTERPRISE_SSO"),
  A$ = Ze("CREATE_TEAM_IN_CHOOSE_PLAN_DIALOG"),
  tCe = Ze("QUERY_WHETHER_EMAIL_IS_AVAILABLE"),
  nCe = Ze("SEND_EMAIL_VERIFICATION_CODE"),
  sCe = Ze("QUERY_WHETHER_EMAIL_VERIFICATION_CODE_IS_VALID"),
  rCe = k("CLOSE_CREATE_IDENTITY_DIALOG"),
  o7 = Ze("GRANT_ACCESS_TO_VAULTS"),
  {
    reducer: aCe,
    actions: iCe,
    getInitialState: O$,
  } = ua({
    name: "customerExperience",
    reducers: {
      setCESVisibility(t, { payload: e }) {
        t.isCESVisible = e;
      },
      userInteractedWithSurvey(t, { payload: e }) {
        (t.interactionData = e),
          e.action === "dismissed" && (t.dismissCount += 1);
      },
      removeInteractionData(t) {
        t.interactionData = null;
      },
      initWasPerformed(t) {
        t.initWasPerformed = !0;
      },
      keyEventHasHappened(t) {
        t.keyEventHasHappened = !0;
      },
    },
    extraReducers: (t) => {
      t.addCase(qn.success, (e) => {
        (e.isCESVisible = !1),
          (e.interactionData = null),
          (e.initWasPerformed = !1),
          (e.keyEventHasHappened = !1);
      });
    },
    initialState: {
      isCESVisible: !1,
      interactionData: null,
      initWasPerformed: !1,
      keyEventHasHappened: !1,
      dismissCount: 0,
    },
  }),
  {
    setCESVisibility: ik,
    userInteractedWithSurvey: H$,
    removeInteractionData: N$,
    initWasPerformed: oCe,
    keyEventHasHappened: uCe,
  } = iCe,
  K0 = k("HANDLE_SHOW_DIALOG"),
  ym = Ze("SHOW_DIALOG"),
  lCe = k("UPDATE_DIALOG_PROPS"),
  cCe = k("DIALOG_OPENED"),
  R$ = k("CLOSE_DIALOG"),
  Hp = k("DESTROY_DIALOG");
class k$ extends Error {
  constructor() {
    super(...arguments), (this.name = "FailedToFetchUser");
  }
}
class x$ extends Error {
  constructor() {
    super(...arguments), (this.name = "UserIsNotProError");
  }
}
const B0 = k("SET_TREATMENTS"),
  L$ = k("UPDATE_ANALYTICS_TOKEN"),
  dCe = k("START_TEAM_TRIAL_DESCRIPTION_EXPERIMENT"),
  pCe = k("START_SIGN_UP_EMAIL_VERIFICATION_EXPERIMENT"),
  hCe = "60k3s1qooefmvgtgqj7jdi7geqkdfctvm1e0",
  fCe = "control",
  Vu = "disabled",
  V0 = "sign_up_email_verification",
  ok = "new_connection_flow_desktop",
  j0 = "desktop_new_layout_team_trial_description_screen",
  z0 = "team_setup_desktop",
  $0 = "host_sharing_new_flow",
  gm = "mixpanel_token",
  mCe = [V0, ok, z0, $0, gm, j0],
  SCe = {
    [V0]: "SignUpEmailVerification",
    [ok]: "NewConnectionFlow",
    [z0]: "NewTeamSetup",
    [$0]: "HostSharingNewFlow",
    [gm]: "MixpanelToken",
    [j0]: "DesktopNewLayoutTeamTrialDescriptionScreen",
  },
  yCe = {
    [V0]: {
      baseline: "Baseline",
      email_verification: "EmailVerification",
      control_segment: "Сontrol",
      [Vu]: "Disabled",
    },
    [ok]: {
      baseline: "Exp_2_Baseline",
      ncf: "Exp_2_NewConnectionFlow",
      [Vu]: "Exp_2_Disabled",
    },
    [z0]: {
      baseline: "baseline",
      teamOnboarding: "teamOnboarding",
      [Vu]: "Disabled",
    },
    [$0]: { baseline: "Baseline", enabled: "Enabled", [Vu]: "Disabled" },
    [gm]: { baseline: "Baseline", enabled: "Enabled", [Vu]: "Disabled" },
    [j0]: { new_layout: "new_layout", baseline: "Baseline", [Vu]: "Disabled" },
  },
  M$ = Object.prototype.toString;
function D$(t) {
  switch (M$.call(t)) {
    case "[object Error]":
    case "[object Exception]":
    case "[object DOMException]":
      return !0;
    default:
      return ml(t, Error);
  }
}
function vm(t, e) {
  return M$.call(t) === `[object ${e}]`;
}
function uk(t) {
  return vm(t, "ErrorEvent");
}
function u7(t) {
  return vm(t, "DOMError");
}
function gCe(t) {
  return vm(t, "DOMException");
}
function iu(t) {
  return vm(t, "String");
}
function lk(t) {
  return (
    typeof t == "object" &&
    t !== null &&
    "__sentry_template_string__" in t &&
    "__sentry_template_values__" in t
  );
}
function ck(t) {
  return (
    t === null || lk(t) || (typeof t != "object" && typeof t != "function")
  );
}
function Lf(t) {
  return vm(t, "Object");
}
function W0(t) {
  return typeof Event < "u" && ml(t, Event);
}
function vCe(t) {
  return typeof Element < "u" && ml(t, Element);
}
function _Ce(t) {
  return vm(t, "RegExp");
}
function _m(t) {
  return !!(t && t.then && typeof t.then == "function");
}
function bCe(t) {
  return (
    Lf(t) &&
    "nativeEvent" in t &&
    "preventDefault" in t &&
    "stopPropagation" in t
  );
}
function G$(t) {
  return typeof t == "number" && t !== t;
}
function ml(t, e) {
  try {
    return t instanceof e;
  } catch {
    return !1;
  }
}
function F$(t) {
  return !!(typeof t == "object" && t !== null && (t.__isVue || t._isVue));
}
function af(t, e = 0) {
  return typeof t != "string" || e === 0 || t.length <= e
    ? t
    : `${t.slice(0, e)}...`;
}
function l7(t, e) {
  if (!Array.isArray(t)) return "";
  const n = [];
  for (let r = 0; r < t.length; r++) {
    const a = t[r];
    try {
      F$(a) ? n.push("[VueViewModel]") : n.push(String(a));
    } catch {
      n.push("[value cannot be serialized]");
    }
  }
  return n.join(e);
}
function ECe(t, e, n = !1) {
  return iu(t)
    ? _Ce(e)
      ? e.test(t)
      : iu(e)
      ? n
        ? t === e
        : t.includes(e)
      : !1
    : !1;
}
function bm(t, e = [], n = !1) {
  return e.some((r) => ECe(t, r, n));
}
function U$(t, e, n = 250, r, a, s, i) {
  if (
    !s.exception ||
    !s.exception.values ||
    !i ||
    !ml(i.originalException, Error)
  )
    return;
  const o =
    s.exception.values.length > 0
      ? s.exception.values[s.exception.values.length - 1]
      : void 0;
  o &&
    (s.exception.values = TCe(
      oO(t, e, a, i.originalException, r, s.exception.values, o, 0),
      n
    ));
}
function oO(t, e, n, r, a, s, i, o) {
  if (s.length >= n + 1) return s;
  let u = [...s];
  if (ml(r[a], Error)) {
    c7(i, o);
    const l = t(e, r[a]),
      c = u.length;
    d7(l, a, c, o), (u = oO(t, e, n, r[a], a, [l, ...u], l, c));
  }
  return (
    Array.isArray(r.errors) &&
      r.errors.forEach((l, c) => {
        if (ml(l, Error)) {
          c7(i, o);
          const d = t(e, l),
            p = u.length;
          d7(d, `errors[${c}]`, p, o), (u = oO(t, e, n, l, a, [d, ...u], d, p));
        }
      }),
    u
  );
}
function c7(t, e) {
  (t.mechanism = t.mechanism || { type: "generic", handled: !0 }),
    (t.mechanism = {
      ...t.mechanism,
      ...(t.type === "AggregateError" && { is_exception_group: !0 }),
      exception_id: e,
    });
}
function d7(t, e, n, r) {
  (t.mechanism = t.mechanism || { type: "generic", handled: !0 }),
    (t.mechanism = {
      ...t.mechanism,
      type: "chained",
      source: e,
      exception_id: n,
      parent_id: r,
    });
}
function TCe(t, e) {
  return t.map((n) => (n.value && (n.value = af(n.value, e)), n));
}
function j_(t) {
  return t && t.Math == Math ? t : void 0;
}
const wn =
  (typeof globalThis == "object" && j_(globalThis)) ||
  (typeof window == "object" && j_(window)) ||
  (typeof self == "object" && j_(self)) ||
  (typeof global == "object" && j_(global)) ||
  (function () {
    return this;
  })() ||
  {};
function dk() {
  return wn;
}
function K$(t, e, n) {
  const r = n || wn,
    a = (r.__SENTRY__ = r.__SENTRY__ || {});
  return a[t] || (a[t] = e());
}
const of = dk(),
  wCe = 80;
function $c(t, e = {}) {
  if (!t) return "<unknown>";
  try {
    let n = t;
    const r = 5,
      a = [];
    let s = 0,
      i = 0;
    const o = " > ",
      u = o.length;
    let l;
    const c = Array.isArray(e) ? e : e.keyAttrs,
      d = (!Array.isArray(e) && e.maxStringLength) || wCe;
    for (
      ;
      n &&
      s++ < r &&
      ((l = PCe(n, c)),
      !(l === "html" || (s > 1 && i + a.length * u + l.length >= d)));

    )
      a.push(l), (i += l.length), (n = n.parentNode);
    return a.reverse().join(o);
  } catch {
    return "<unknown>";
  }
}
function PCe(t, e) {
  const n = t,
    r = [];
  let a, s, i, o, u;
  if (!n || !n.tagName) return "";
  if (
    of.HTMLElement &&
    n instanceof HTMLElement &&
    n.dataset &&
    n.dataset.sentryComponent
  )
    return n.dataset.sentryComponent;
  r.push(n.tagName.toLowerCase());
  const l =
    e && e.length
      ? e.filter((d) => n.getAttribute(d)).map((d) => [d, n.getAttribute(d)])
      : null;
  if (l && l.length)
    l.forEach((d) => {
      r.push(`[${d[0]}="${d[1]}"]`);
    });
  else if ((n.id && r.push(`#${n.id}`), (a = n.className), a && iu(a)))
    for (s = a.split(/\s+/), u = 0; u < s.length; u++) r.push(`.${s[u]}`);
  const c = ["aria-label", "type", "name", "title", "alt"];
  for (u = 0; u < c.length; u++)
    (i = c[u]), (o = n.getAttribute(i)), o && r.push(`[${i}="${o}"]`);
  return r.join("");
}
function B$() {
  try {
    return of.document.location.href;
  } catch {
    return "";
  }
}
function V$(t) {
  return of.document && of.document.querySelector
    ? of.document.querySelector(t)
    : null;
}
function j$(t) {
  if (!of.HTMLElement) return null;
  let e = t;
  const n = 5;
  for (let r = 0; r < n; r++) {
    if (!e) return null;
    if (e instanceof HTMLElement && e.dataset.sentryComponent)
      return e.dataset.sentryComponent;
    e = e.parentNode;
  }
  return null;
}
const Em = typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__,
  ICe = "Sentry Logger ",
  uO = ["debug", "info", "warn", "error", "log", "assert", "trace"],
  kT = {};
function cp(t) {
  if (!("console" in wn)) return t();
  const e = wn.console,
    n = {},
    r = Object.keys(kT);
  r.forEach((a) => {
    const s = kT[a];
    (n[a] = e[a]), (e[a] = s);
  });
  try {
    return t();
  } finally {
    r.forEach((a) => {
      e[a] = n[a];
    });
  }
}
function CCe() {
  let t = !1;
  const e = {
    enable: () => {
      t = !0;
    },
    disable: () => {
      t = !1;
    },
    isEnabled: () => t,
  };
  return (
    Em
      ? uO.forEach((n) => {
          e[n] = (...r) => {
            t &&
              cp(() => {
                wn.console[n](`${ICe}[${n}]:`, ...r);
              });
          };
        })
      : uO.forEach((n) => {
          e[n] = () => {};
        }),
    e
  );
}
const Be = CCe(),
  ACe = /^(?:(\w+):)\/\/(?:(\w+)(?::(\w+)?)?@)([\w.-]+)(?::(\d+))?\/(.+)/;
function OCe(t) {
  return t === "http" || t === "https";
}
function Np(t, e = !1) {
  const {
    host: n,
    path: r,
    pass: a,
    port: s,
    projectId: i,
    protocol: o,
    publicKey: u,
  } = t;
  return `${o}://${u}${e && a ? `:${a}` : ""}@${n}${s ? `:${s}` : ""}/${
    r && `${r}/`
  }${i}`;
}
function HCe(t) {
  const e = ACe.exec(t);
  if (!e) {
    cp(() => {
      console.error(`Invalid Sentry Dsn: ${t}`);
    });
    return;
  }
  const [n, r, a = "", s, i = "", o] = e.slice(1);
  let u = "",
    l = o;
  const c = l.split("/");
  if ((c.length > 1 && ((u = c.slice(0, -1).join("/")), (l = c.pop())), l)) {
    const d = l.match(/^\d+/);
    d && (l = d[0]);
  }
  return z$({
    host: s,
    pass: a,
    path: u,
    projectId: l,
    port: i,
    protocol: n,
    publicKey: r,
  });
}
function z$(t) {
  return {
    protocol: t.protocol,
    publicKey: t.publicKey || "",
    pass: t.pass || "",
    host: t.host,
    port: t.port || "",
    path: t.path || "",
    projectId: t.projectId,
  };
}
function NCe(t) {
  if (!Em) return !0;
  const { port: e, projectId: n, protocol: r } = t;
  return ["protocol", "publicKey", "host", "projectId"].find((i) =>
    t[i] ? !1 : (Be.error(`Invalid Sentry Dsn: ${i} missing`), !0)
  )
    ? !1
    : n.match(/^\d+$/)
    ? OCe(r)
      ? e && isNaN(parseInt(e, 10))
        ? (Be.error(`Invalid Sentry Dsn: Invalid port ${e}`), !1)
        : !0
      : (Be.error(`Invalid Sentry Dsn: Invalid protocol ${r}`), !1)
    : (Be.error(`Invalid Sentry Dsn: Invalid projectId ${n}`), !1);
}
function $$(t) {
  const e = typeof t == "string" ? HCe(t) : z$(t);
  if (!(!e || !NCe(e))) return e;
}
class nu extends Error {
  constructor(e, n = "warn") {
    super(e),
      (this.message = e),
      (this.name = new.target.prototype.constructor.name),
      Object.setPrototypeOf(this, new.target.prototype),
      (this.logLevel = n);
  }
}
function Ir(t, e, n) {
  if (!(e in t)) return;
  const r = t[e],
    a = n(r);
  typeof a == "function" && W$(a, r), (t[e] = a);
}
function dp(t, e, n) {
  try {
    Object.defineProperty(t, e, { value: n, writable: !0, configurable: !0 });
  } catch {
    Em && Be.log(`Failed to add non-enumerable property "${e}" to object`, t);
  }
}
function W$(t, e) {
  try {
    const n = e.prototype || {};
    (t.prototype = e.prototype = n), dp(t, "__sentry_original__", e);
  } catch {}
}
function pk(t) {
  return t.__sentry_original__;
}
function RCe(t) {
  return Object.keys(t)
    .map((e) => `${encodeURIComponent(e)}=${encodeURIComponent(t[e])}`)
    .join("&");
}
function q$(t) {
  if (D$(t))
    return { message: t.message, name: t.name, stack: t.stack, ...h7(t) };
  if (W0(t)) {
    const e = {
      type: t.type,
      target: p7(t.target),
      currentTarget: p7(t.currentTarget),
      ...h7(t),
    };
    return (
      typeof CustomEvent < "u" && ml(t, CustomEvent) && (e.detail = t.detail), e
    );
  } else return t;
}
function p7(t) {
  try {
    return vCe(t) ? $c(t) : Object.prototype.toString.call(t);
  } catch {
    return "<unknown>";
  }
}
function h7(t) {
  if (typeof t == "object" && t !== null) {
    const e = {};
    for (const n in t)
      Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
    return e;
  } else return {};
}
function kCe(t, e = 40) {
  const n = Object.keys(q$(t));
  if ((n.sort(), !n.length)) return "[object has no keys]";
  if (n[0].length >= e) return af(n[0], e);
  for (let r = n.length; r > 0; r--) {
    const a = n.slice(0, r).join(", ");
    if (!(a.length > e)) return r === n.length ? a : af(a, e);
  }
  return "";
}
function gr(t) {
  return lO(t, new Map());
}
function lO(t, e) {
  if (xCe(t)) {
    const n = e.get(t);
    if (n !== void 0) return n;
    const r = {};
    e.set(t, r);
    for (const a of Object.keys(t)) typeof t[a] < "u" && (r[a] = lO(t[a], e));
    return r;
  }
  if (Array.isArray(t)) {
    const n = e.get(t);
    if (n !== void 0) return n;
    const r = [];
    return (
      e.set(t, r),
      t.forEach((a) => {
        r.push(lO(a, e));
      }),
      r
    );
  }
  return t;
}
function xCe(t) {
  if (!Lf(t)) return !1;
  try {
    const e = Object.getPrototypeOf(t).constructor.name;
    return !e || e === "Object";
  } catch {
    return !0;
  }
}
function LCe(t, e = !1) {
  return (
    !(
      e ||
      (t &&
        !t.startsWith("/") &&
        !t.match(/^[A-Z]:/) &&
        !t.startsWith(".") &&
        !t.match(/^[a-zA-Z]([a-zA-Z0-9.\-+])*:\/\//))
    ) &&
    t !== void 0 &&
    !t.includes("node_modules/")
  );
}
function MCe(t) {
  const e = /^\s*[-]{4,}$/,
    n = /at (?:async )?(?:(.+?)\s+\()?(?:(.+):(\d+):(\d+)?|([^)]+))\)?/;
  return (r) => {
    const a = r.match(n);
    if (a) {
      let s, i, o, u, l;
      if (a[1]) {
        o = a[1];
        let p = o.lastIndexOf(".");
        if ((o[p - 1] === "." && p--, p > 0)) {
          (s = o.slice(0, p)), (i = o.slice(p + 1));
          const m = s.indexOf(".Module");
          m > 0 && ((o = o.slice(m + 1)), (s = s.slice(0, m)));
        }
        u = void 0;
      }
      i && ((u = s), (l = i)),
        i === "<anonymous>" && ((l = void 0), (o = void 0)),
        o === void 0 && ((l = l || "<anonymous>"), (o = u ? `${u}.${l}` : l));
      let c = a[2] && a[2].startsWith("file://") ? a[2].slice(7) : a[2];
      const d = a[5] === "native";
      return (
        c && c.match(/\/[A-Z]:/) && (c = c.slice(1)),
        !c && a[5] && !d && (c = a[5]),
        {
          filename: c,
          module: t ? t(c) : void 0,
          function: o,
          lineno: parseInt(a[3], 10) || void 0,
          colno: parseInt(a[4], 10) || void 0,
          in_app: LCe(c, d),
        }
      );
    }
    if (r.match(e)) return { filename: r };
  };
}
const Y$ = 50,
  f7 = /\(error: (.*)\)/,
  m7 = /captureMessage|captureException/;
function X$(...t) {
  const e = t.sort((n, r) => n[0] - r[0]).map((n) => n[1]);
  return (n, r = 0) => {
    const a = [],
      s = n.split(`
`);
    for (let i = r; i < s.length; i++) {
      const o = s[i];
      if (o.length > 1024) continue;
      const u = f7.test(o) ? o.replace(f7, "$1") : o;
      if (!u.match(/\S*Error: /)) {
        for (const l of e) {
          const c = l(u);
          if (c) {
            a.push(c);
            break;
          }
        }
        if (a.length >= Y$) break;
      }
    }
    return Q$(a);
  };
}
function DCe(t) {
  return Array.isArray(t) ? X$(...t) : t;
}
function Q$(t) {
  if (!t.length) return [];
  const e = Array.from(t);
  return (
    /sentryWrapped/.test(e[e.length - 1].function || "") && e.pop(),
    e.reverse(),
    m7.test(e[e.length - 1].function || "") &&
      (e.pop(), m7.test(e[e.length - 1].function || "") && e.pop()),
    e.slice(0, Y$).map((n) => ({
      ...n,
      filename: n.filename || e[e.length - 1].filename,
      function: n.function || "?",
    }))
  );
}
const WC = "<anonymous>";
function Sl(t) {
  try {
    return !t || typeof t != "function" ? WC : t.name || WC;
  } catch {
    return WC;
  }
}
function GCe(t) {
  return [90, MCe(t)];
}
const Qb = {},
  S7 = {};
function Rp(t, e) {
  (Qb[t] = Qb[t] || []), Qb[t].push(e);
}
function kp(t, e) {
  S7[t] || (e(), (S7[t] = !0));
}
function Io(t, e) {
  const n = t && Qb[t];
  if (n)
    for (const r of n)
      try {
        r(e);
      } catch (a) {
        Em &&
          Be.error(
            `Error while triggering instrumentation handler.
Type: ${t}
Name: ${Sl(r)}
Error:`,
            a
          );
      }
}
function FCe(t) {
  const e = "console";
  Rp(e, t), kp(e, UCe);
}
function UCe() {
  "console" in wn &&
    uO.forEach(function (t) {
      t in wn.console &&
        Ir(wn.console, t, function (e) {
          return (
            (kT[t] = e),
            function (...n) {
              Io("console", { args: n, level: t });
              const a = kT[t];
              a && a.apply(wn.console, n);
            }
          );
        });
    });
}
function jn() {
  const t = wn,
    e = t.crypto || t.msCrypto;
  let n = () => Math.random() * 16;
  try {
    if (e && e.randomUUID) return e.randomUUID().replace(/-/g, "");
    e &&
      e.getRandomValues &&
      (n = () => {
        const r = new Uint8Array(1);
        return e.getRandomValues(r), r[0];
      });
  } catch {}
  return ([1e7] + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, (r) =>
    (r ^ ((n() & 15) >> (r / 4))).toString(16)
  );
}
function J$(t) {
  return t.exception && t.exception.values ? t.exception.values[0] : void 0;
}
function dc(t) {
  const { message: e, event_id: n } = t;
  if (e) return e;
  const r = J$(t);
  return r
    ? r.type && r.value
      ? `${r.type}: ${r.value}`
      : r.type || r.value || n || "<unknown>"
    : n || "<unknown>";
}
function cO(t, e, n) {
  const r = (t.exception = t.exception || {}),
    a = (r.values = r.values || []),
    s = (a[0] = a[0] || {});
  s.value || (s.value = e || ""), s.type || (s.type = n || "Error");
}
function Og(t, e) {
  const n = J$(t);
  if (!n) return;
  const r = { type: "generic", handled: !0 },
    a = n.mechanism;
  if (((n.mechanism = { ...r, ...a, ...e }), e && "data" in e)) {
    const s = { ...(a && a.data), ...e.data };
    n.mechanism.data = s;
  }
}
function y7(t) {
  if (t && t.__sentry_captured__) return !0;
  try {
    dp(t, "__sentry_captured__", !0);
  } catch {}
  return !1;
}
function Z$(t) {
  return Array.isArray(t) ? t : [t];
}
const fh = wn,
  KCe = 1e3;
let g7, dO, pO;
function eW(t) {
  const e = "dom";
  Rp(e, t), kp(e, BCe);
}
function BCe() {
  if (!fh.document) return;
  const t = Io.bind(null, "dom"),
    e = v7(t, !0);
  fh.document.addEventListener("click", e, !1),
    fh.document.addEventListener("keypress", e, !1),
    ["EventTarget", "Node"].forEach((n) => {
      const r = fh[n] && fh[n].prototype;
      !r ||
        !r.hasOwnProperty ||
        !r.hasOwnProperty("addEventListener") ||
        (Ir(r, "addEventListener", function (a) {
          return function (s, i, o) {
            if (s === "click" || s == "keypress")
              try {
                const u = this,
                  l = (u.__sentry_instrumentation_handlers__ =
                    u.__sentry_instrumentation_handlers__ || {}),
                  c = (l[s] = l[s] || { refCount: 0 });
                if (!c.handler) {
                  const d = v7(t);
                  (c.handler = d), a.call(this, s, d, o);
                }
                c.refCount++;
              } catch {}
            return a.call(this, s, i, o);
          };
        }),
        Ir(r, "removeEventListener", function (a) {
          return function (s, i, o) {
            if (s === "click" || s == "keypress")
              try {
                const u = this,
                  l = u.__sentry_instrumentation_handlers__ || {},
                  c = l[s];
                c &&
                  (c.refCount--,
                  c.refCount <= 0 &&
                    (a.call(this, s, c.handler, o),
                    (c.handler = void 0),
                    delete l[s]),
                  Object.keys(l).length === 0 &&
                    delete u.__sentry_instrumentation_handlers__);
              } catch {}
            return a.call(this, s, i, o);
          };
        }));
    });
}
function VCe(t) {
  if (t.type !== dO) return !1;
  try {
    if (!t.target || t.target._sentryId !== pO) return !1;
  } catch {}
  return !0;
}
function jCe(t, e) {
  return t !== "keypress"
    ? !1
    : !e || !e.tagName
    ? !0
    : !(
        e.tagName === "INPUT" ||
        e.tagName === "TEXTAREA" ||
        e.isContentEditable
      );
}
function v7(t, e = !1) {
  return (n) => {
    if (!n || n._sentryCaptured) return;
    const r = zCe(n);
    if (jCe(n.type, r)) return;
    dp(n, "_sentryCaptured", !0), r && !r._sentryId && dp(r, "_sentryId", jn());
    const a = n.type === "keypress" ? "input" : n.type;
    VCe(n) ||
      (t({ event: n, name: a, global: e }),
      (dO = n.type),
      (pO = r ? r._sentryId : void 0)),
      clearTimeout(g7),
      (g7 = fh.setTimeout(() => {
        (pO = void 0), (dO = void 0);
      }, KCe));
  };
}
function zCe(t) {
  try {
    return t.target;
  } catch {
    return null;
  }
}
const hO = dk();
function tW() {
  if (!("fetch" in hO)) return !1;
  try {
    return (
      new Headers(), new Request("http://www.example.com"), new Response(), !0
    );
  } catch {
    return !1;
  }
}
function fO(t) {
  return (
    t && /^function fetch\(\)\s+\{\s+\[native code\]\s+\}$/.test(t.toString())
  );
}
function $Ce() {
  if (typeof EdgeRuntime == "string") return !0;
  if (!tW()) return !1;
  if (fO(hO.fetch)) return !0;
  let t = !1;
  const e = hO.document;
  if (e && typeof e.createElement == "function")
    try {
      const n = e.createElement("iframe");
      (n.hidden = !0),
        e.head.appendChild(n),
        n.contentWindow &&
          n.contentWindow.fetch &&
          (t = fO(n.contentWindow.fetch)),
        e.head.removeChild(n);
    } catch (n) {
      Em &&
        Be.warn(
          "Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ",
          n
        );
    }
  return t;
}
function hk(t) {
  const e = "fetch";
  Rp(e, t), kp(e, WCe);
}
function WCe() {
  $Ce() &&
    Ir(wn, "fetch", function (t) {
      return function (...e) {
        const { method: n, url: r } = qCe(e),
          a = {
            args: e,
            fetchData: { method: n, url: r },
            startTimestamp: Date.now(),
          };
        return (
          Io("fetch", { ...a }),
          t.apply(wn, e).then(
            (s) => {
              const i = { ...a, endTimestamp: Date.now(), response: s };
              return Io("fetch", i), s;
            },
            (s) => {
              const i = { ...a, endTimestamp: Date.now(), error: s };
              throw (Io("fetch", i), s);
            }
          )
        );
      };
    });
}
function mO(t, e) {
  return !!t && typeof t == "object" && !!t[e];
}
function _7(t) {
  return typeof t == "string"
    ? t
    : t
    ? mO(t, "url")
      ? t.url
      : t.toString
      ? t.toString()
      : ""
    : "";
}
function qCe(t) {
  if (t.length === 0) return { method: "GET", url: "" };
  if (t.length === 2) {
    const [n, r] = t;
    return {
      url: _7(n),
      method: mO(r, "method") ? String(r.method).toUpperCase() : "GET",
    };
  }
  const e = t[0];
  return {
    url: _7(e),
    method: mO(e, "method") ? String(e.method).toUpperCase() : "GET",
  };
}
let z_ = null;
function nW(t) {
  const e = "error";
  Rp(e, t), kp(e, YCe);
}
function YCe() {
  (z_ = wn.onerror),
    (wn.onerror = function (t, e, n, r, a) {
      return (
        Io("error", { column: r, error: a, line: n, msg: t, url: e }),
        z_ && !z_.__SENTRY_LOADER__ ? z_.apply(this, arguments) : !1
      );
    }),
    (wn.onerror.__SENTRY_INSTRUMENTED__ = !0);
}
let $_ = null;
function sW(t) {
  const e = "unhandledrejection";
  Rp(e, t), kp(e, XCe);
}
function XCe() {
  ($_ = wn.onunhandledrejection),
    (wn.onunhandledrejection = function (t) {
      return (
        Io("unhandledrejection", t),
        $_ && !$_.__SENTRY_LOADER__ ? $_.apply(this, arguments) : !0
      );
    }),
    (wn.onunhandledrejection.__SENTRY_INSTRUMENTED__ = !0);
}
const W_ = dk();
function QCe() {
  const t = W_.chrome,
    e = t && t.app && t.app.runtime,
    n = "history" in W_ && !!W_.history.pushState && !!W_.history.replaceState;
  return !e && n;
}
const _S = wn;
let q_;
function Av(t) {
  const e = "history";
  Rp(e, t), kp(e, JCe);
}
function JCe() {
  if (!QCe()) return;
  const t = _S.onpopstate;
  _S.onpopstate = function (...n) {
    const r = _S.location.href,
      a = q_;
    if (((q_ = r), Io("history", { from: a, to: r }), t))
      try {
        return t.apply(this, n);
      } catch {}
  };
  function e(n) {
    return function (...r) {
      const a = r.length > 2 ? r[2] : void 0;
      if (a) {
        const s = q_,
          i = String(a);
        (q_ = i), Io("history", { from: s, to: i });
      }
      return n.apply(this, r);
    };
  }
  Ir(_S.history, "pushState", e), Ir(_S.history, "replaceState", e);
}
const ZCe = wn,
  Sc = "__sentry_xhr_v3__";
function fk(t) {
  const e = "xhr";
  Rp(e, t), kp(e, eAe);
}
function eAe() {
  if (!ZCe.XMLHttpRequest) return;
  const t = XMLHttpRequest.prototype;
  Ir(t, "open", function (e) {
    return function (...n) {
      const r = Date.now(),
        a = iu(n[0]) ? n[0].toUpperCase() : void 0,
        s = tAe(n[1]);
      if (!a || !s) return e.apply(this, n);
      (this[Sc] = { method: a, url: s, request_headers: {} }),
        a === "POST" &&
          s.match(/sentry_key/) &&
          (this.__sentry_own_request__ = !0);
      const i = () => {
        const o = this[Sc];
        if (o && this.readyState === 4) {
          try {
            o.status_code = this.status;
          } catch {}
          const u = {
            args: [a, s],
            endTimestamp: Date.now(),
            startTimestamp: r,
            xhr: this,
          };
          Io("xhr", u);
        }
      };
      return (
        "onreadystatechange" in this &&
        typeof this.onreadystatechange == "function"
          ? Ir(this, "onreadystatechange", function (o) {
              return function (...u) {
                return i(), o.apply(this, u);
              };
            })
          : this.addEventListener("readystatechange", i),
        Ir(this, "setRequestHeader", function (o) {
          return function (...u) {
            const [l, c] = u,
              d = this[Sc];
            return (
              d && iu(l) && iu(c) && (d.request_headers[l.toLowerCase()] = c),
              o.apply(this, u)
            );
          };
        }),
        e.apply(this, n)
      );
    };
  }),
    Ir(t, "send", function (e) {
      return function (...n) {
        const r = this[Sc];
        if (!r) return e.apply(this, n);
        n[0] !== void 0 && (r.body = n[0]);
        const a = {
          args: [r.method, r.url],
          startTimestamp: Date.now(),
          xhr: this,
        };
        return Io("xhr", a), e.apply(this, n);
      };
    });
}
function tAe(t) {
  if (iu(t)) return t;
  try {
    return t.toString();
  } catch {}
}
function nAe() {
  return typeof __SENTRY_BROWSER_BUNDLE__ < "u" && !!__SENTRY_BROWSER_BUNDLE__;
}
function sAe() {
  return "npm";
}
function rAe() {
  return (
    !nAe() &&
    Object.prototype.toString.call(typeof process < "u" ? process : 0) ===
      "[object process]"
  );
}
function SO() {
  return typeof window < "u" && (!rAe() || aAe());
}
function aAe() {
  return wn.process !== void 0 && wn.process.type === "renderer";
}
function iAe() {
  const t = typeof WeakSet == "function",
    e = t ? new WeakSet() : [];
  function n(a) {
    if (t) return e.has(a) ? !0 : (e.add(a), !1);
    for (let s = 0; s < e.length; s++) if (e[s] === a) return !0;
    return e.push(a), !1;
  }
  function r(a) {
    if (t) e.delete(a);
    else
      for (let s = 0; s < e.length; s++)
        if (e[s] === a) {
          e.splice(s, 1);
          break;
        }
  }
  return [n, r];
}
function Ii(t, e = 100, n = 1 / 0) {
  try {
    return yO("", t, e, n);
  } catch (r) {
    return { ERROR: `**non-serializable** (${r})` };
  }
}
function rW(t, e = 3, n = 100 * 1024) {
  const r = Ii(t, e);
  return cAe(r) > n ? rW(t, e - 1, n) : r;
}
function yO(t, e, n = 1 / 0, r = 1 / 0, a = iAe()) {
  const [s, i] = a;
  if (
    e == null ||
    (["number", "boolean", "string"].includes(typeof e) && !G$(e))
  )
    return e;
  const o = oAe(t, e);
  if (!o.startsWith("[object ")) return o;
  if (e.__sentry_skip_normalization__) return e;
  const u =
    typeof e.__sentry_override_normalization_depth__ == "number"
      ? e.__sentry_override_normalization_depth__
      : n;
  if (u === 0) return o.replace("object ", "");
  if (s(e)) return "[Circular ~]";
  const l = e;
  if (l && typeof l.toJSON == "function")
    try {
      const m = l.toJSON();
      return yO("", m, u - 1, r, a);
    } catch {}
  const c = Array.isArray(e) ? [] : {};
  let d = 0;
  const p = q$(e);
  for (const m in p) {
    if (!Object.prototype.hasOwnProperty.call(p, m)) continue;
    if (d >= r) {
      c[m] = "[MaxProperties ~]";
      break;
    }
    const y = p[m];
    (c[m] = yO(m, y, u - 1, r, a)), d++;
  }
  return i(e), c;
}
function oAe(t, e) {
  try {
    if (t === "domain" && e && typeof e == "object" && e._events)
      return "[Domain]";
    if (t === "domainEmitter") return "[DomainEmitter]";
    if (typeof global < "u" && e === global) return "[Global]";
    if (typeof window < "u" && e === window) return "[Window]";
    if (typeof document < "u" && e === document) return "[Document]";
    if (F$(e)) return "[VueViewModel]";
    if (bCe(e)) return "[SyntheticEvent]";
    if (typeof e == "number" && e !== e) return "[NaN]";
    if (typeof e == "function") return `[Function: ${Sl(e)}]`;
    if (typeof e == "symbol") return `[${String(e)}]`;
    if (typeof e == "bigint") return `[BigInt: ${String(e)}]`;
    const n = uAe(e);
    return /^HTML(\w*)Element$/.test(n)
      ? `[HTMLElement: ${n}]`
      : `[object ${n}]`;
  } catch (n) {
    return `**non-serializable** (${n})`;
  }
}
function uAe(t) {
  const e = Object.getPrototypeOf(t);
  return e ? e.constructor.name : "null prototype";
}
function lAe(t) {
  return ~-encodeURI(t).split(/%..|./).length;
}
function cAe(t) {
  return lAe(JSON.stringify(t));
}
const dAe =
  /^(\S+:\\|\/?)([\s\S]*?)((?:\.{1,2}|[^/\\]+?|)(\.[^./\\]*|))(?:[/\\]*)$/;
function pAe(t) {
  const e = t.length > 1024 ? `<truncated>${t.slice(-1024)}` : t,
    n = dAe.exec(e);
  return n ? n.slice(1) : [];
}
function hAe(t, e) {
  let n = pAe(t)[2];
  return (
    e && n.slice(e.length * -1) === e && (n = n.slice(0, n.length - e.length)),
    n
  );
}
var Ku;
(function (t) {
  t[(t.PENDING = 0)] = "PENDING";
  const n = 1;
  t[(t.RESOLVED = n)] = "RESOLVED";
  const r = 2;
  t[(t.REJECTED = r)] = "REJECTED";
})(Ku || (Ku = {}));
function Mf(t) {
  return new ri((e) => {
    e(t);
  });
}
function mk(t) {
  return new ri((e, n) => {
    n(t);
  });
}
class ri {
  constructor(e) {
    ri.prototype.__init.call(this),
      ri.prototype.__init2.call(this),
      ri.prototype.__init3.call(this),
      ri.prototype.__init4.call(this),
      (this._state = Ku.PENDING),
      (this._handlers = []);
    try {
      e(this._resolve, this._reject);
    } catch (n) {
      this._reject(n);
    }
  }
  then(e, n) {
    return new ri((r, a) => {
      this._handlers.push([
        !1,
        (s) => {
          if (!e) r(s);
          else
            try {
              r(e(s));
            } catch (i) {
              a(i);
            }
        },
        (s) => {
          if (!n) a(s);
          else
            try {
              r(n(s));
            } catch (i) {
              a(i);
            }
        },
      ]),
        this._executeHandlers();
    });
  }
  catch(e) {
    return this.then((n) => n, e);
  }
  finally(e) {
    return new ri((n, r) => {
      let a, s;
      return this.then(
        (i) => {
          (s = !1), (a = i), e && e();
        },
        (i) => {
          (s = !0), (a = i), e && e();
        }
      ).then(() => {
        if (s) {
          r(a);
          return;
        }
        n(a);
      });
    });
  }
  __init() {
    this._resolve = (e) => {
      this._setResult(Ku.RESOLVED, e);
    };
  }
  __init2() {
    this._reject = (e) => {
      this._setResult(Ku.REJECTED, e);
    };
  }
  __init3() {
    this._setResult = (e, n) => {
      if (this._state === Ku.PENDING) {
        if (_m(n)) {
          n.then(this._resolve, this._reject);
          return;
        }
        (this._state = e), (this._value = n), this._executeHandlers();
      }
    };
  }
  __init4() {
    this._executeHandlers = () => {
      if (this._state === Ku.PENDING) return;
      const e = this._handlers.slice();
      (this._handlers = []),
        e.forEach((n) => {
          n[0] ||
            (this._state === Ku.RESOLVED && n[1](this._value),
            this._state === Ku.REJECTED && n[2](this._value),
            (n[0] = !0));
        });
    };
  }
}
function fAe(t) {
  const e = [];
  function n() {
    return t === void 0 || e.length < t;
  }
  function r(i) {
    return e.splice(e.indexOf(i), 1)[0];
  }
  function a(i) {
    if (!n())
      return mk(new nu("Not adding Promise because buffer limit was reached."));
    const o = i();
    return (
      e.indexOf(o) === -1 && e.push(o),
      o.then(() => r(o)).then(null, () => r(o).then(null, () => {})),
      o
    );
  }
  function s(i) {
    return new ri((o, u) => {
      let l = e.length;
      if (!l) return o(!0);
      const c = setTimeout(() => {
        i && i > 0 && o(!1);
      }, i);
      e.forEach((d) => {
        Mf(d).then(() => {
          --l || (clearTimeout(c), o(!0));
        }, u);
      });
    });
  }
  return { $: e, add: a, drain: s };
}
function Jb(t) {
  if (!t) return {};
  const e = t.match(
    /^(([^:/?#]+):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$/
  );
  if (!e) return {};
  const n = e[6] || "",
    r = e[8] || "";
  return {
    host: e[4],
    path: e[5],
    protocol: e[2],
    search: n,
    hash: r,
    relative: e[5] + n + r,
  };
}
const mAe = ["fatal", "error", "warning", "log", "info", "debug"];
function SAe(t) {
  return t === "warn" ? "warning" : mAe.includes(t) ? t : "log";
}
const aW = 1e3;
function Ov() {
  return Date.now() / aW;
}
function yAe() {
  const { performance: t } = wn;
  if (!t || !t.now) return Ov;
  const e = Date.now() - t.now(),
    n = t.timeOrigin == null ? e : t.timeOrigin;
  return () => (n + t.now()) / aW;
}
const yl = yAe(),
  Lr = (() => {
    const { performance: t } = wn;
    if (!t || !t.now) return;
    const e = 3600 * 1e3,
      n = t.now(),
      r = Date.now(),
      a = t.timeOrigin ? Math.abs(t.timeOrigin + n - r) : e,
      s = a < e,
      i = t.timing && t.timing.navigationStart,
      u = typeof i == "number" ? Math.abs(i + n - r) : e,
      l = u < e;
    return s || l ? (a <= u ? t.timeOrigin : i) : r;
  })(),
  gO = "baggage",
  iW = "sentry-",
  gAe = /^sentry-/,
  vAe = 8192;
function oW(t) {
  if (!iu(t) && !Array.isArray(t)) return;
  let e = {};
  if (Array.isArray(t))
    e = t.reduce((r, a) => {
      const s = b7(a);
      for (const i of Object.keys(s)) r[i] = s[i];
      return r;
    }, {});
  else {
    if (!t) return;
    e = b7(t);
  }
  const n = Object.entries(e).reduce((r, [a, s]) => {
    if (a.match(gAe)) {
      const i = a.slice(iW.length);
      r[i] = s;
    }
    return r;
  }, {});
  if (Object.keys(n).length > 0) return n;
}
function uW(t) {
  if (!t) return;
  const e = Object.entries(t).reduce(
    (n, [r, a]) => (a && (n[`${iW}${r}`] = a), n),
    {}
  );
  return _Ae(e);
}
function b7(t) {
  return t
    .split(",")
    .map((e) => e.split("=").map((n) => decodeURIComponent(n.trim())))
    .reduce((e, [n, r]) => ((e[n] = r), e), {});
}
function _Ae(t) {
  if (Object.keys(t).length !== 0)
    return Object.entries(t).reduce((e, [n, r], a) => {
      const s = `${encodeURIComponent(n)}=${encodeURIComponent(r)}`,
        i = a === 0 ? s : `${e},${s}`;
      return i.length > vAe
        ? (Em &&
            Be.warn(
              `Not adding key: ${n} with val: ${r} to baggage header due to exceeding baggage size limits.`
            ),
          e)
        : i;
    }, "");
}
const bAe = new RegExp(
  "^[ \\t]*([0-9a-f]{32})?-?([0-9a-f]{16})?-?([01])?[ \\t]*$"
);
function Sk(t) {
  if (!t) return;
  const e = t.match(bAe);
  if (!e) return;
  let n;
  return (
    e[3] === "1" ? (n = !0) : e[3] === "0" && (n = !1),
    { traceId: e[1], parentSampled: n, parentSpanId: e[2] }
  );
}
function EAe(t, e) {
  const n = Sk(t),
    r = oW(e),
    { traceId: a, parentSpanId: s, parentSampled: i } = n || {};
  return n
    ? {
        traceparentData: n,
        dynamicSamplingContext: r || {},
        propagationContext: {
          traceId: a || jn(),
          parentSpanId: s || jn().substring(16),
          spanId: jn().substring(16),
          sampled: i,
          dsc: r || {},
        },
      }
    : {
        traceparentData: n,
        dynamicSamplingContext: void 0,
        propagationContext: { traceId: a || jn(), spanId: jn().substring(16) },
      };
}
function lW(t, e) {
  const n = Sk(t),
    r = oW(e),
    { traceId: a, parentSpanId: s, parentSampled: i } = n || {};
  return n
    ? {
        traceId: a || jn(),
        parentSpanId: s || jn().substring(16),
        spanId: jn().substring(16),
        sampled: i,
        dsc: r || {},
      }
    : { traceId: a || jn(), spanId: jn().substring(16) };
}
function yk(t = jn(), e = jn().substring(16), n) {
  let r = "";
  return n !== void 0 && (r = n ? "-1" : "-0"), `${t}-${e}${r}`;
}
function hd(t, e = []) {
  return [t, e];
}
function TAe(t, e) {
  const [n, r] = t;
  return [n, [...r, e]];
}
function xT(t, e) {
  const n = t[1];
  for (const r of n) {
    const a = r[0].type;
    if (e(r, a)) return !0;
  }
  return !1;
}
function vO(t, e) {
  return (e || new TextEncoder()).encode(t);
}
function wAe(t, e) {
  const [n, r] = t;
  let a = JSON.stringify(n);
  function s(i) {
    typeof a == "string"
      ? (a = typeof i == "string" ? a + i : [vO(a, e), i])
      : a.push(typeof i == "string" ? vO(i, e) : i);
  }
  for (const i of r) {
    const [o, u] = i;
    if (
      (s(`
${JSON.stringify(o)}
`),
      typeof u == "string" || u instanceof Uint8Array)
    )
      s(u);
    else {
      let l;
      try {
        l = JSON.stringify(u);
      } catch {
        l = JSON.stringify(Ii(u));
      }
      s(l);
    }
  }
  return typeof a == "string" ? a : PAe(a);
}
function PAe(t) {
  const e = t.reduce((a, s) => a + s.length, 0),
    n = new Uint8Array(e);
  let r = 0;
  for (const a of t) n.set(a, r), (r += a.length);
  return n;
}
function IAe(t, e) {
  const n = typeof t.data == "string" ? vO(t.data, e) : t.data;
  return [
    gr({
      type: "attachment",
      length: n.length,
      filename: t.filename,
      content_type: t.contentType,
      attachment_type: t.attachmentType,
    }),
    n,
  ];
}
const CAe = {
  session: "session",
  sessions: "session",
  attachment: "attachment",
  transaction: "transaction",
  event: "error",
  client_report: "internal",
  user_report: "default",
  profile: "profile",
  replay_event: "replay",
  replay_recording: "replay",
  check_in: "monitor",
  feedback: "feedback",
  span: "span",
  statsd: "metric_bucket",
};
function E7(t) {
  return CAe[t];
}
function gk(t) {
  if (!t || !t.sdk) return;
  const { name: e, version: n } = t.sdk;
  return { name: e, version: n };
}
function cW(t, e, n, r) {
  const a =
    t.sdkProcessingMetadata && t.sdkProcessingMetadata.dynamicSamplingContext;
  return {
    event_id: t.event_id,
    sent_at: new Date().toISOString(),
    ...(e && { sdk: e }),
    ...(!!n && r && { dsn: Np(r) }),
    ...(a && { trace: gr({ ...a }) }),
  };
}
function AAe(t, e, n) {
  const r = [
    { type: "client_report" },
    { timestamp: n || Ov(), discarded_events: t },
  ];
  return hd(e ? { dsn: e } : {}, [r]);
}
const OAe = 60 * 1e3;
function HAe(t, e = Date.now()) {
  const n = parseInt(`${t}`, 10);
  if (!isNaN(n)) return n * 1e3;
  const r = Date.parse(`${t}`);
  return isNaN(r) ? OAe : r - e;
}
function NAe(t, e) {
  return t[e] || t.all || 0;
}
function dW(t, e, n = Date.now()) {
  return NAe(t, e) > n;
}
function pW(t, { statusCode: e, headers: n }, r = Date.now()) {
  const a = { ...t },
    s = n && n["x-sentry-rate-limits"],
    i = n && n["retry-after"];
  if (s)
    for (const o of s.trim().split(",")) {
      const [u, l, , , c] = o.split(":", 5),
        d = parseInt(u, 10),
        p = (isNaN(d) ? 60 : d) * 1e3;
      if (!l) a.all = r + p;
      else
        for (const m of l.split(";"))
          m === "metric_bucket"
            ? (!c || c.split(";").includes("custom")) && (a[m] = r + p)
            : (a[m] = r + p);
    }
  else i ? (a.all = r + HAe(i, r)) : e === 429 && (a.all = r + 60 * 1e3);
  return a;
}
function RAe(t, e) {
  return t(e.stack || "", 1);
}
function kAe(t, e) {
  const n = { type: e.name || e.constructor.name, value: e.message },
    r = RAe(t, e);
  return r.length && (n.stacktrace = { frames: r }), n;
}
function xAe(t, e) {
  return t ?? e();
}
function Zb(t) {
  let e,
    n = t[0],
    r = 1;
  for (; r < t.length; ) {
    const a = t[r],
      s = t[r + 1];
    if (
      ((r += 2), (a === "optionalAccess" || a === "optionalCall") && n == null)
    )
      return;
    a === "access" || a === "optionalAccess"
      ? ((e = n), (n = s(n)))
      : (a === "call" || a === "optionalCall") &&
        ((n = s((...i) => n.call(e, ...i))), (e = void 0));
  }
  return n;
}
const Gt = typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__,
  Hv = "production";
function vk() {
  return K$("globalEventProcessors", () => []);
}
function hW(t) {
  vk().push(t);
}
function LT(t, e, n, r = 0) {
  return new ri((a, s) => {
    const i = t[r];
    if (e === null || typeof i != "function") a(e);
    else {
      const o = i({ ...e }, n);
      Gt &&
        i.id &&
        o === null &&
        Be.log(`Event processor "${i.id}" dropped event`),
        _m(o)
          ? o.then((u) => LT(t, u, n, r + 1).then(a)).then(null, s)
          : LT(t, o, n, r + 1)
              .then(a)
              .then(null, s);
    }
  });
}
function fW(t) {
  const e = yl(),
    n = {
      sid: jn(),
      init: !0,
      timestamp: e,
      started: e,
      duration: 0,
      status: "ok",
      errors: 0,
      ignoreDuration: !1,
      toJSON: () => LAe(n),
    };
  return t && pp(n, t), n;
}
function pp(t, e = {}) {
  if (
    (e.user &&
      (!t.ipAddress && e.user.ip_address && (t.ipAddress = e.user.ip_address),
      !t.did &&
        !e.did &&
        (t.did = e.user.id || e.user.email || e.user.username)),
    (t.timestamp = e.timestamp || yl()),
    e.abnormal_mechanism && (t.abnormal_mechanism = e.abnormal_mechanism),
    e.ignoreDuration && (t.ignoreDuration = e.ignoreDuration),
    e.sid && (t.sid = e.sid.length === 32 ? e.sid : jn()),
    e.init !== void 0 && (t.init = e.init),
    !t.did && e.did && (t.did = `${e.did}`),
    typeof e.started == "number" && (t.started = e.started),
    t.ignoreDuration)
  )
    t.duration = void 0;
  else if (typeof e.duration == "number") t.duration = e.duration;
  else {
    const n = t.timestamp - t.started;
    t.duration = n >= 0 ? n : 0;
  }
  e.release && (t.release = e.release),
    e.environment && (t.environment = e.environment),
    !t.ipAddress && e.ipAddress && (t.ipAddress = e.ipAddress),
    !t.userAgent && e.userAgent && (t.userAgent = e.userAgent),
    typeof e.errors == "number" && (t.errors = e.errors),
    e.status && (t.status = e.status);
}
function mW(t, e) {
  let n = {};
  e ? (n = { status: e }) : t.status === "ok" && (n = { status: "exited" }),
    pp(t, n);
}
function LAe(t) {
  return gr({
    sid: `${t.sid}`,
    init: t.init,
    started: new Date(t.started * 1e3).toISOString(),
    timestamp: new Date(t.timestamp * 1e3).toISOString(),
    status: t.status,
    errors: t.errors,
    did:
      typeof t.did == "number" || typeof t.did == "string"
        ? `${t.did}`
        : void 0,
    duration: t.duration,
    abnormal_mechanism: t.abnormal_mechanism,
    attrs: {
      release: t.release,
      environment: t.environment,
      ip_address: t.ipAddress,
      user_agent: t.userAgent,
    },
  });
}
const MAe = 0,
  SW = 1;
function _k(t) {
  const { spanId: e, traceId: n } = t.spanContext(),
    {
      data: r,
      op: a,
      parent_span_id: s,
      status: i,
      tags: o,
      origin: u,
    } = es(t);
  return gr({
    data: r,
    op: a,
    parent_span_id: s,
    span_id: e,
    status: i,
    tags: o,
    trace_id: n,
    origin: u,
  });
}
function q0(t) {
  const { traceId: e, spanId: n } = t.spanContext(),
    r = bk(t);
  return yk(e, n, r);
}
function Y0(t) {
  return typeof t == "number"
    ? T7(t)
    : Array.isArray(t)
    ? t[0] + t[1] / 1e9
    : t instanceof Date
    ? T7(t.getTime())
    : yl();
}
function T7(t) {
  return t > 9999999999 ? t / 1e3 : t;
}
function es(t) {
  return DAe(t)
    ? t.getSpanJSON()
    : typeof t.toJSON == "function"
    ? t.toJSON()
    : {};
}
function DAe(t) {
  return typeof t.getSpanJSON == "function";
}
function bk(t) {
  const { traceFlags: e } = t.spanContext();
  return !!(e & SW);
}
function Ek(t, e, n, r, a, s) {
  const { normalizeDepth: i = 3, normalizeMaxBreadth: o = 1e3 } = t,
    u = {
      ...e,
      event_id: e.event_id || n.event_id || jn(),
      timestamp: e.timestamp || Ov(),
    },
    l = n.integrations || t.integrations.map((O) => O.name);
  GAe(u, t), KAe(u, l), e.type === void 0 && FAe(u, t.stackParser);
  const c = VAe(r, n.captureContext);
  n.mechanism && Og(u, n.mechanism);
  const d = a && a.getEventProcessors ? a.getEventProcessors() : [],
    p = EW().getScopeData();
  if (s) {
    const O = s.getScopeData();
    C7(p, O);
  }
  if (c) {
    const O = c.getScopeData();
    C7(p, O);
  }
  const m = [...(n.attachments || []), ...p.attachments];
  m.length && (n.attachments = m), bW(u, p);
  const y = [...d, ...vk(), ...p.eventProcessors];
  return LT(y, u, n).then(
    (O) => (O && UAe(O), typeof i == "number" && i > 0 ? BAe(O, i, o) : O)
  );
}
function GAe(t, e) {
  const { environment: n, release: r, dist: a, maxValueLength: s = 250 } = e;
  "environment" in t || (t.environment = "environment" in e ? n : Hv),
    t.release === void 0 && r !== void 0 && (t.release = r),
    t.dist === void 0 && a !== void 0 && (t.dist = a),
    t.message && (t.message = af(t.message, s));
  const i = t.exception && t.exception.values && t.exception.values[0];
  i && i.value && (i.value = af(i.value, s));
  const o = t.request;
  o && o.url && (o.url = af(o.url, s));
}
const w7 = new WeakMap();
function FAe(t, e) {
  const n = wn._sentryDebugIds;
  if (!n) return;
  let r;
  const a = w7.get(e);
  a ? (r = a) : ((r = new Map()), w7.set(e, r));
  const s = Object.keys(n).reduce((i, o) => {
    let u;
    const l = r.get(o);
    l ? (u = l) : ((u = e(o)), r.set(o, u));
    for (let c = u.length - 1; c >= 0; c--) {
      const d = u[c];
      if (d.filename) {
        i[d.filename] = n[o];
        break;
      }
    }
    return i;
  }, {});
  try {
    t.exception.values.forEach((i) => {
      i.stacktrace.frames.forEach((o) => {
        o.filename && (o.debug_id = s[o.filename]);
      });
    });
  } catch {}
}
function UAe(t) {
  const e = {};
  try {
    t.exception.values.forEach((r) => {
      r.stacktrace.frames.forEach((a) => {
        a.debug_id &&
          (a.abs_path
            ? (e[a.abs_path] = a.debug_id)
            : a.filename && (e[a.filename] = a.debug_id),
          delete a.debug_id);
      });
    });
  } catch {}
  if (Object.keys(e).length === 0) return;
  (t.debug_meta = t.debug_meta || {}),
    (t.debug_meta.images = t.debug_meta.images || []);
  const n = t.debug_meta.images;
  Object.keys(e).forEach((r) => {
    n.push({ type: "sourcemap", code_file: r, debug_id: e[r] });
  });
}
function KAe(t, e) {
  e.length > 0 &&
    ((t.sdk = t.sdk || {}),
    (t.sdk.integrations = [...(t.sdk.integrations || []), ...e]));
}
function BAe(t, e, n) {
  if (!t) return null;
  const r = {
    ...t,
    ...(t.breadcrumbs && {
      breadcrumbs: t.breadcrumbs.map((a) => ({
        ...a,
        ...(a.data && { data: Ii(a.data, e, n) }),
      })),
    }),
    ...(t.user && { user: Ii(t.user, e, n) }),
    ...(t.contexts && { contexts: Ii(t.contexts, e, n) }),
    ...(t.extra && { extra: Ii(t.extra, e, n) }),
  };
  return (
    t.contexts &&
      t.contexts.trace &&
      r.contexts &&
      ((r.contexts.trace = t.contexts.trace),
      t.contexts.trace.data &&
        (r.contexts.trace.data = Ii(t.contexts.trace.data, e, n))),
    t.spans &&
      (r.spans = t.spans.map((a) => {
        const s = es(a).data;
        return s && (a.data = Ii(s, e, n)), a;
      })),
    r
  );
}
function VAe(t, e) {
  if (!e) return t;
  const n = t ? t.clone() : new ou();
  return n.update(e), n;
}
function jAe(t) {
  if (t)
    return zAe(t) ? { captureContext: t } : WAe(t) ? { captureContext: t } : t;
}
function zAe(t) {
  return t instanceof ou || typeof t == "function";
}
const $Ae = [
  "user",
  "level",
  "extra",
  "contexts",
  "tags",
  "fingerprint",
  "requestSession",
  "propagationContext",
];
function WAe(t) {
  return Object.keys(t).some((e) => $Ae.includes(e));
}
function X0(t, e) {
  return Zn().captureException(t, jAe(e));
}
function qAe(t, e) {
  const n = typeof e == "string" ? e : void 0,
    r = typeof e != "string" ? { captureContext: e } : void 0;
  return Zn().captureMessage(t, n, r);
}
function Tk(t, e) {
  return Zn().captureEvent(t, e);
}
function yW(t) {
  Zn().configureScope(t);
}
function vu(t, e) {
  Zn().addBreadcrumb(t, e);
}
function gW(t, e) {
  Zn().setContext(t, e);
}
function YAe(t) {
  Zn().setExtras(t);
}
function XAe(t, e) {
  Zn().setExtra(t, e);
}
function QAe(t) {
  Zn().setTags(t);
}
function JAe(t, e) {
  Zn().setTag(t, e);
}
function ZAe(t) {
  Zn().setUser(t);
}
function Tm(...t) {
  const e = Zn();
  if (t.length === 2) {
    const [n, r] = t;
    return n
      ? e.withScope(() => ((e.getStackTop().scope = n), r(n)))
      : e.withScope(r);
  }
  return e.withScope(t[0]);
}
function e1e(t, e) {
  return Zn().startTransaction({ ...t }, e);
}
function _O(t, e) {
  const n = er(),
    r = An();
  if (!r) Gt && Be.warn("Cannot capture check-in. No client defined.");
  else if (!r.captureCheckIn)
    Gt &&
      Be.warn(
        "Cannot capture check-in. Client does not support sending check-ins."
      );
  else return r.captureCheckIn(t, e, n);
  return jn();
}
function t1e(t, e, n) {
  const r = _O({ monitorSlug: t, status: "in_progress" }, n),
    a = yl();
  function s(o) {
    _O({ monitorSlug: t, status: o, checkInId: r, duration: yl() - a });
  }
  let i;
  try {
    i = e();
  } catch (o) {
    throw (s("error"), o);
  }
  return (
    _m(i)
      ? Promise.resolve(i).then(
          () => {
            s("ok");
          },
          () => {
            s("error");
          }
        )
      : s("ok"),
    i
  );
}
function n1e() {
  return Zn().lastEventId();
}
function An() {
  return Zn().getClient();
}
function er() {
  return Zn().getScope();
}
function P7(t) {
  const e = An(),
    n = Cu(),
    r = er(),
    { release: a, environment: s = Hv } = (e && e.getOptions()) || {},
    { userAgent: i } = wn.navigator || {},
    o = fW({
      release: a,
      environment: s,
      user: r.getUser() || n.getUser(),
      ...(i && { userAgent: i }),
      ...t,
    }),
    u = n.getSession();
  return (
    u && u.status === "ok" && pp(u, { status: "exited" }),
    vW(),
    n.setSession(o),
    r.setSession(o),
    o
  );
}
function vW() {
  const t = Cu(),
    e = er(),
    n = e.getSession() || t.getSession();
  n && mW(n), _W(), t.setSession(), e.setSession();
}
function _W() {
  const t = Cu(),
    e = er(),
    n = An(),
    r = e.getSession() || t.getSession();
  r && n && n.captureSession && n.captureSession(r);
}
function I7(t = !1) {
  if (t) {
    vW();
    return;
  }
  _W();
}
function MT(t) {
  return t.transaction;
}
function Q0(t, e, n) {
  const r = e.getOptions(),
    { publicKey: a } = e.getDsn() || {},
    { segment: s } = (n && n.getUser()) || {},
    i = gr({
      environment: r.environment || Hv,
      release: r.release,
      user_segment: s,
      public_key: a,
      trace_id: t,
    });
  return e.emit && e.emit("createDsc", i), i;
}
function Df(t) {
  const e = An();
  if (!e) return {};
  const n = Q0(es(t).trace_id || "", e, er()),
    r = MT(t);
  if (!r) return n;
  const a = r && r._frozenDynamicSamplingContext;
  if (a) return a;
  const { sampleRate: s, source: i } = r.metadata;
  s != null && (n.sample_rate = `${s}`);
  const o = es(r);
  return (
    i && i !== "url" && (n.transaction = o.description),
    (n.sampled = String(bk(r))),
    e.emit && e.emit("createDsc", n),
    n
  );
}
function bW(t, e) {
  const {
    fingerprint: n,
    span: r,
    breadcrumbs: a,
    sdkProcessingMetadata: s,
  } = e;
  s1e(t, e), r && i1e(t, r), o1e(t, n), r1e(t, a), a1e(t, s);
}
function C7(t, e) {
  const {
    extra: n,
    tags: r,
    user: a,
    contexts: s,
    level: i,
    sdkProcessingMetadata: o,
    breadcrumbs: u,
    fingerprint: l,
    eventProcessors: c,
    attachments: d,
    propagationContext: p,
    transactionName: m,
    span: y,
  } = e;
  bS(t, "extra", n),
    bS(t, "tags", r),
    bS(t, "user", a),
    bS(t, "contexts", s),
    bS(t, "sdkProcessingMetadata", o),
    i && (t.level = i),
    m && (t.transactionName = m),
    y && (t.span = y),
    u.length && (t.breadcrumbs = [...t.breadcrumbs, ...u]),
    l.length && (t.fingerprint = [...t.fingerprint, ...l]),
    c.length && (t.eventProcessors = [...t.eventProcessors, ...c]),
    d.length && (t.attachments = [...t.attachments, ...d]),
    (t.propagationContext = { ...t.propagationContext, ...p });
}
function bS(t, e, n) {
  if (n && Object.keys(n).length) {
    t[e] = { ...t[e] };
    for (const r in n)
      Object.prototype.hasOwnProperty.call(n, r) && (t[e][r] = n[r]);
  }
}
function s1e(t, e) {
  const {
      extra: n,
      tags: r,
      user: a,
      contexts: s,
      level: i,
      transactionName: o,
    } = e,
    u = gr(n);
  u && Object.keys(u).length && (t.extra = { ...u, ...t.extra });
  const l = gr(r);
  l && Object.keys(l).length && (t.tags = { ...l, ...t.tags });
  const c = gr(a);
  c && Object.keys(c).length && (t.user = { ...c, ...t.user });
  const d = gr(s);
  d && Object.keys(d).length && (t.contexts = { ...d, ...t.contexts }),
    i && (t.level = i),
    o && (t.transaction = o);
}
function r1e(t, e) {
  const n = [...(t.breadcrumbs || []), ...e];
  t.breadcrumbs = n.length ? n : void 0;
}
function a1e(t, e) {
  t.sdkProcessingMetadata = { ...t.sdkProcessingMetadata, ...e };
}
function i1e(t, e) {
  t.contexts = { trace: _k(e), ...t.contexts };
  const n = MT(e);
  if (n) {
    t.sdkProcessingMetadata = {
      dynamicSamplingContext: Df(e),
      ...t.sdkProcessingMetadata,
    };
    const r = es(n).description;
    r && (t.tags = { transaction: r, ...t.tags });
  }
}
function o1e(t, e) {
  (t.fingerprint = t.fingerprint ? Z$(t.fingerprint) : []),
    e && (t.fingerprint = t.fingerprint.concat(e)),
    t.fingerprint && !t.fingerprint.length && delete t.fingerprint;
}
const u1e = 100;
let qC;
class ou {
  constructor() {
    (this._notifyingListeners = !1),
      (this._scopeListeners = []),
      (this._eventProcessors = []),
      (this._breadcrumbs = []),
      (this._attachments = []),
      (this._user = {}),
      (this._tags = {}),
      (this._extra = {}),
      (this._contexts = {}),
      (this._sdkProcessingMetadata = {}),
      (this._propagationContext = A7());
  }
  static clone(e) {
    return e ? e.clone() : new ou();
  }
  clone() {
    const e = new ou();
    return (
      (e._breadcrumbs = [...this._breadcrumbs]),
      (e._tags = { ...this._tags }),
      (e._extra = { ...this._extra }),
      (e._contexts = { ...this._contexts }),
      (e._user = this._user),
      (e._level = this._level),
      (e._span = this._span),
      (e._session = this._session),
      (e._transactionName = this._transactionName),
      (e._fingerprint = this._fingerprint),
      (e._eventProcessors = [...this._eventProcessors]),
      (e._requestSession = this._requestSession),
      (e._attachments = [...this._attachments]),
      (e._sdkProcessingMetadata = { ...this._sdkProcessingMetadata }),
      (e._propagationContext = { ...this._propagationContext }),
      (e._client = this._client),
      e
    );
  }
  setClient(e) {
    this._client = e;
  }
  getClient() {
    return this._client;
  }
  addScopeListener(e) {
    this._scopeListeners.push(e);
  }
  addEventProcessor(e) {
    return this._eventProcessors.push(e), this;
  }
  setUser(e) {
    return (
      (this._user = e || {
        email: void 0,
        id: void 0,
        ip_address: void 0,
        segment: void 0,
        username: void 0,
      }),
      this._session && pp(this._session, { user: e }),
      this._notifyScopeListeners(),
      this
    );
  }
  getUser() {
    return this._user;
  }
  getRequestSession() {
    return this._requestSession;
  }
  setRequestSession(e) {
    return (this._requestSession = e), this;
  }
  setTags(e) {
    return (
      (this._tags = { ...this._tags, ...e }), this._notifyScopeListeners(), this
    );
  }
  setTag(e, n) {
    return (
      (this._tags = { ...this._tags, [e]: n }),
      this._notifyScopeListeners(),
      this
    );
  }
  setExtras(e) {
    return (
      (this._extra = { ...this._extra, ...e }),
      this._notifyScopeListeners(),
      this
    );
  }
  setExtra(e, n) {
    return (
      (this._extra = { ...this._extra, [e]: n }),
      this._notifyScopeListeners(),
      this
    );
  }
  setFingerprint(e) {
    return (this._fingerprint = e), this._notifyScopeListeners(), this;
  }
  setLevel(e) {
    return (this._level = e), this._notifyScopeListeners(), this;
  }
  setTransactionName(e) {
    return (this._transactionName = e), this._notifyScopeListeners(), this;
  }
  setContext(e, n) {
    return (
      n === null ? delete this._contexts[e] : (this._contexts[e] = n),
      this._notifyScopeListeners(),
      this
    );
  }
  setSpan(e) {
    return (this._span = e), this._notifyScopeListeners(), this;
  }
  getSpan() {
    return this._span;
  }
  getTransaction() {
    const e = this._span;
    return e && e.transaction;
  }
  setSession(e) {
    return (
      e ? (this._session = e) : delete this._session,
      this._notifyScopeListeners(),
      this
    );
  }
  getSession() {
    return this._session;
  }
  update(e) {
    if (!e) return this;
    const n = typeof e == "function" ? e(this) : e;
    if (n instanceof ou) {
      const r = n.getScopeData();
      (this._tags = { ...this._tags, ...r.tags }),
        (this._extra = { ...this._extra, ...r.extra }),
        (this._contexts = { ...this._contexts, ...r.contexts }),
        r.user && Object.keys(r.user).length && (this._user = r.user),
        r.level && (this._level = r.level),
        r.fingerprint.length && (this._fingerprint = r.fingerprint),
        n.getRequestSession() && (this._requestSession = n.getRequestSession()),
        r.propagationContext &&
          (this._propagationContext = r.propagationContext);
    } else if (Lf(n)) {
      const r = e;
      (this._tags = { ...this._tags, ...r.tags }),
        (this._extra = { ...this._extra, ...r.extra }),
        (this._contexts = { ...this._contexts, ...r.contexts }),
        r.user && (this._user = r.user),
        r.level && (this._level = r.level),
        r.fingerprint && (this._fingerprint = r.fingerprint),
        r.requestSession && (this._requestSession = r.requestSession),
        r.propagationContext &&
          (this._propagationContext = r.propagationContext);
    }
    return this;
  }
  clear() {
    return (
      (this._breadcrumbs = []),
      (this._tags = {}),
      (this._extra = {}),
      (this._user = {}),
      (this._contexts = {}),
      (this._level = void 0),
      (this._transactionName = void 0),
      (this._fingerprint = void 0),
      (this._requestSession = void 0),
      (this._span = void 0),
      (this._session = void 0),
      this._notifyScopeListeners(),
      (this._attachments = []),
      (this._propagationContext = A7()),
      this
    );
  }
  addBreadcrumb(e, n) {
    const r = typeof n == "number" ? n : u1e;
    if (r <= 0) return this;
    const a = { timestamp: Ov(), ...e },
      s = this._breadcrumbs;
    return (
      s.push(a),
      (this._breadcrumbs = s.length > r ? s.slice(-r) : s),
      this._notifyScopeListeners(),
      this
    );
  }
  getLastBreadcrumb() {
    return this._breadcrumbs[this._breadcrumbs.length - 1];
  }
  clearBreadcrumbs() {
    return (this._breadcrumbs = []), this._notifyScopeListeners(), this;
  }
  addAttachment(e) {
    return this._attachments.push(e), this;
  }
  getAttachments() {
    return this.getScopeData().attachments;
  }
  clearAttachments() {
    return (this._attachments = []), this;
  }
  getScopeData() {
    const {
      _breadcrumbs: e,
      _attachments: n,
      _contexts: r,
      _tags: a,
      _extra: s,
      _user: i,
      _level: o,
      _fingerprint: u,
      _eventProcessors: l,
      _propagationContext: c,
      _sdkProcessingMetadata: d,
      _transactionName: p,
      _span: m,
    } = this;
    return {
      breadcrumbs: e,
      attachments: n,
      contexts: r,
      tags: a,
      extra: s,
      user: i,
      level: o,
      fingerprint: u || [],
      eventProcessors: l,
      propagationContext: c,
      sdkProcessingMetadata: d,
      transactionName: p,
      span: m,
    };
  }
  applyToEvent(e, n = {}, r = []) {
    bW(e, this.getScopeData());
    const a = [...r, ...vk(), ...this._eventProcessors];
    return LT(a, e, n);
  }
  setSDKProcessingMetadata(e) {
    return (
      (this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...e }),
      this
    );
  }
  setPropagationContext(e) {
    return (this._propagationContext = e), this;
  }
  getPropagationContext() {
    return this._propagationContext;
  }
  captureException(e, n) {
    const r = n && n.event_id ? n.event_id : jn();
    if (!this._client)
      return (
        Be.warn("No client configured on scope - will not capture exception!"),
        r
      );
    const a = new Error("Sentry syntheticException");
    return (
      this._client.captureException(
        e,
        { originalException: e, syntheticException: a, ...n, event_id: r },
        this
      ),
      r
    );
  }
  captureMessage(e, n, r) {
    const a = r && r.event_id ? r.event_id : jn();
    if (!this._client)
      return (
        Be.warn("No client configured on scope - will not capture message!"), a
      );
    const s = new Error(e);
    return (
      this._client.captureMessage(
        e,
        n,
        { originalException: e, syntheticException: s, ...r, event_id: a },
        this
      ),
      a
    );
  }
  captureEvent(e, n) {
    const r = n && n.event_id ? n.event_id : jn();
    return this._client
      ? (this._client.captureEvent(e, { ...n, event_id: r }, this), r)
      : (Be.warn("No client configured on scope - will not capture event!"), r);
  }
  _notifyScopeListeners() {
    this._notifyingListeners ||
      ((this._notifyingListeners = !0),
      this._scopeListeners.forEach((e) => {
        e(this);
      }),
      (this._notifyingListeners = !1));
  }
}
function EW() {
  return qC || (qC = new ou()), qC;
}
function A7() {
  return { traceId: jn(), spanId: jn().substring(16) };
}
const bO = "7.110.0",
  TW = parseFloat(bO),
  l1e = 100;
class wk {
  constructor(e, n, r, a = TW) {
    this._version = a;
    let s;
    n ? (s = n) : ((s = new ou()), s.setClient(e));
    let i;
    r ? (i = r) : ((i = new ou()), i.setClient(e)),
      (this._stack = [{ scope: s }]),
      e && this.bindClient(e),
      (this._isolationScope = i);
  }
  isOlderThan(e) {
    return this._version < e;
  }
  bindClient(e) {
    const n = this.getStackTop();
    (n.client = e),
      n.scope.setClient(e),
      e && e.setupIntegrations && e.setupIntegrations();
  }
  pushScope() {
    const e = this.getScope().clone();
    return this.getStack().push({ client: this.getClient(), scope: e }), e;
  }
  popScope() {
    return this.getStack().length <= 1 ? !1 : !!this.getStack().pop();
  }
  withScope(e) {
    const n = this.pushScope();
    let r;
    try {
      r = e(n);
    } catch (a) {
      throw (this.popScope(), a);
    }
    return _m(r)
      ? r.then(
          (a) => (this.popScope(), a),
          (a) => {
            throw (this.popScope(), a);
          }
        )
      : (this.popScope(), r);
  }
  getClient() {
    return this.getStackTop().client;
  }
  getScope() {
    return this.getStackTop().scope;
  }
  getIsolationScope() {
    return this._isolationScope;
  }
  getStack() {
    return this._stack;
  }
  getStackTop() {
    return this._stack[this._stack.length - 1];
  }
  captureException(e, n) {
    const r = (this._lastEventId = n && n.event_id ? n.event_id : jn()),
      a = new Error("Sentry syntheticException");
    return (
      this.getScope().captureException(e, {
        originalException: e,
        syntheticException: a,
        ...n,
        event_id: r,
      }),
      r
    );
  }
  captureMessage(e, n, r) {
    const a = (this._lastEventId = r && r.event_id ? r.event_id : jn()),
      s = new Error(e);
    return (
      this.getScope().captureMessage(e, n, {
        originalException: e,
        syntheticException: s,
        ...r,
        event_id: a,
      }),
      a
    );
  }
  captureEvent(e, n) {
    const r = n && n.event_id ? n.event_id : jn();
    return (
      e.type || (this._lastEventId = r),
      this.getScope().captureEvent(e, { ...n, event_id: r }),
      r
    );
  }
  lastEventId() {
    return this._lastEventId;
  }
  addBreadcrumb(e, n) {
    const { scope: r, client: a } = this.getStackTop();
    if (!a) return;
    const { beforeBreadcrumb: s = null, maxBreadcrumbs: i = l1e } =
      (a.getOptions && a.getOptions()) || {};
    if (i <= 0) return;
    const u = { timestamp: Ov(), ...e },
      l = s ? cp(() => s(u, n)) : u;
    l !== null &&
      (a.emit && a.emit("beforeAddBreadcrumb", l, n), r.addBreadcrumb(l, i));
  }
  setUser(e) {
    this.getScope().setUser(e), this.getIsolationScope().setUser(e);
  }
  setTags(e) {
    this.getScope().setTags(e), this.getIsolationScope().setTags(e);
  }
  setExtras(e) {
    this.getScope().setExtras(e), this.getIsolationScope().setExtras(e);
  }
  setTag(e, n) {
    this.getScope().setTag(e, n), this.getIsolationScope().setTag(e, n);
  }
  setExtra(e, n) {
    this.getScope().setExtra(e, n), this.getIsolationScope().setExtra(e, n);
  }
  setContext(e, n) {
    this.getScope().setContext(e, n), this.getIsolationScope().setContext(e, n);
  }
  configureScope(e) {
    const { scope: n, client: r } = this.getStackTop();
    r && e(n);
  }
  run(e) {
    const n = EO(this);
    try {
      e(this);
    } finally {
      EO(n);
    }
  }
  getIntegration(e) {
    const n = this.getClient();
    if (!n) return null;
    try {
      return n.getIntegration(e);
    } catch {
      return (
        Gt &&
          Be.warn(`Cannot retrieve integration ${e.id} from the current Hub`),
        null
      );
    }
  }
  startTransaction(e, n) {
    const r = this._callExtensionMethod("startTransaction", e, n);
    return (
      Gt &&
        !r &&
        (this.getClient()
          ? Be.warn(`Tracing extension 'startTransaction' has not been added. Call 'addTracingExtensions' before calling 'init':
Sentry.addTracingExtensions();
Sentry.init({...});
`)
          : Be.warn(
              "Tracing extension 'startTransaction' is missing. You should 'init' the SDK before calling 'startTransaction'"
            )),
      r
    );
  }
  traceHeaders() {
    return this._callExtensionMethod("traceHeaders");
  }
  captureSession(e = !1) {
    if (e) return this.endSession();
    this._sendSessionUpdate();
  }
  endSession() {
    const n = this.getStackTop().scope,
      r = n.getSession();
    r && mW(r), this._sendSessionUpdate(), n.setSession();
  }
  startSession(e) {
    const { scope: n, client: r } = this.getStackTop(),
      { release: a, environment: s = Hv } = (r && r.getOptions()) || {},
      { userAgent: i } = wn.navigator || {},
      o = fW({
        release: a,
        environment: s,
        user: n.getUser(),
        ...(i && { userAgent: i }),
        ...e,
      }),
      u = n.getSession && n.getSession();
    return (
      u && u.status === "ok" && pp(u, { status: "exited" }),
      this.endSession(),
      n.setSession(o),
      o
    );
  }
  shouldSendDefaultPii() {
    const e = this.getClient(),
      n = e && e.getOptions();
    return !!(n && n.sendDefaultPii);
  }
  _sendSessionUpdate() {
    const { scope: e, client: n } = this.getStackTop(),
      r = e.getSession();
    r && n && n.captureSession && n.captureSession(r);
  }
  _callExtensionMethod(e, ...n) {
    const a = wm().__SENTRY__;
    if (a && a.extensions && typeof a.extensions[e] == "function")
      return a.extensions[e].apply(this, n);
    Gt && Be.warn(`Extension method ${e} couldn't be found, doing nothing.`);
  }
}
function wm() {
  return (wn.__SENTRY__ = wn.__SENTRY__ || { extensions: {}, hub: void 0 }), wn;
}
function EO(t) {
  const e = wm(),
    n = DT(e);
  return wW(e, t), n;
}
function Zn() {
  const t = wm();
  if (t.__SENTRY__ && t.__SENTRY__.acs) {
    const e = t.__SENTRY__.acs.getCurrentHub();
    if (e) return e;
  }
  return c1e(t);
}
function Cu() {
  return Zn().getIsolationScope();
}
function c1e(t = wm()) {
  return (!d1e(t) || DT(t).isOlderThan(TW)) && wW(t, new wk()), DT(t);
}
function J0(t, e = {}) {
  const n = wm();
  return n.__SENTRY__ && n.__SENTRY__.acs
    ? n.__SENTRY__.acs.runWithAsyncContext(t, e)
    : t();
}
function d1e(t) {
  return !!(t && t.__SENTRY__ && t.__SENTRY__.hub);
}
function DT(t) {
  return K$("hub", () => new wk(), t);
}
function wW(t, e) {
  if (!t) return !1;
  const n = (t.__SENTRY__ = t.__SENTRY__ || {});
  return (n.hub = e), !0;
}
function _u(t) {
  return (t || Zn()).getScope().getTransaction();
}
const p1e = Sk;
let O7 = !1;
function h1e() {
  O7 || ((O7 = !0), nW(TO), sW(TO));
}
function TO() {
  const t = _u();
  if (t) {
    const e = "internal_error";
    Gt && Be.log(`[Tracing] Transaction: ${e} -> Global error occured`),
      t.setStatus(e);
  }
}
TO.tag = "sentry_tracingErrorCallback";
var H7;
(function (t) {
  const e = "ok";
  t.Ok = e;
  const n = "deadline_exceeded";
  t.DeadlineExceeded = n;
  const r = "unauthenticated";
  t.Unauthenticated = r;
  const a = "permission_denied";
  t.PermissionDenied = a;
  const s = "not_found";
  t.NotFound = s;
  const i = "resource_exhausted";
  t.ResourceExhausted = i;
  const o = "invalid_argument";
  t.InvalidArgument = o;
  const u = "unimplemented";
  t.Unimplemented = u;
  const l = "unavailable";
  t.Unavailable = l;
  const c = "internal_error";
  t.InternalError = c;
  const d = "unknown_error";
  t.UnknownError = d;
  const p = "cancelled";
  t.Cancelled = p;
  const m = "already_exists";
  t.AlreadyExists = m;
  const y = "failed_precondition";
  t.FailedPrecondition = y;
  const I = "aborted";
  t.Aborted = I;
  const O = "out_of_range";
  t.OutOfRange = O;
  const g = "data_loss";
  t.DataLoss = g;
})(H7 || (H7 = {}));
function PW(t) {
  if (t < 400 && t >= 100) return "ok";
  if (t >= 400 && t < 500)
    switch (t) {
      case 401:
        return "unauthenticated";
      case 403:
        return "permission_denied";
      case 404:
        return "not_found";
      case 409:
        return "already_exists";
      case 413:
        return "failed_precondition";
      case 429:
        return "resource_exhausted";
      default:
        return "invalid_argument";
    }
  if (t >= 500 && t < 600)
    switch (t) {
      case 501:
        return "unimplemented";
      case 503:
        return "unavailable";
      case 504:
        return "deadline_exceeded";
      default:
        return "internal_error";
    }
  return "unknown_error";
}
const f1e = PW;
function Pk(t, e) {
  t.setTag("http.status_code", String(e)),
    t.setData("http.response.status_code", e);
  const n = PW(e);
  n !== "unknown_error" && t.setStatus(n);
}
function Ik(t, e, n = () => {}) {
  let r;
  try {
    r = t();
  } catch (a) {
    throw (e(a), n(), a);
  }
  return m1e(r, e, n);
}
function m1e(t, e, n) {
  return _m(t)
    ? t.then(
        (r) => (n(), r),
        (r) => {
          throw (e(r), n(), r);
        }
      )
    : (n(), t);
}
function Pm(t) {
  if (typeof __SENTRY_TRACING__ == "boolean" && !__SENTRY_TRACING__) return !1;
  const e = An(),
    n = t || (e && e.getOptions());
  return (
    !!n && (n.enableTracing || "tracesSampleRate" in n || "tracesSampler" in n)
  );
}
function S1e(t, e, n = () => {}, r = () => {}) {
  const a = Zn(),
    s = er(),
    i = s.getSpan(),
    o = eP(t),
    u = Z0(a, {
      parentSpan: i,
      spanContext: o,
      forceTransaction: !1,
      scope: s,
    });
  return (
    s.setSpan(u),
    Ik(
      () => e(u),
      (l) => {
        u && u.setStatus("internal_error"), n(l, u);
      },
      () => {
        u && u.end(), s.setSpan(i), r();
      }
    )
  );
}
function IW(t, e) {
  const n = eP(t);
  return J0(() =>
    Tm(t.scope, (r) => {
      const a = Zn(),
        s = r.getSpan(),
        o =
          t.onlyIfParent && !s
            ? void 0
            : Z0(a, {
                parentSpan: s,
                spanContext: n,
                forceTransaction: t.forceTransaction,
                scope: r,
              });
      return Ik(
        () => e(o),
        () => {
          if (o) {
            const { status: u } = es(o);
            (!u || u === "ok") && o.setStatus("internal_error");
          }
        },
        () => o && o.end()
      );
    })
  );
}
const y1e = IW;
function g1e(t, e) {
  const n = eP(t);
  return J0(() =>
    Tm(t.scope, (r) => {
      const a = Zn(),
        s = r.getSpan(),
        o =
          t.onlyIfParent && !s
            ? void 0
            : Z0(a, {
                parentSpan: s,
                spanContext: n,
                forceTransaction: t.forceTransaction,
                scope: r,
              });
      function u() {
        o && o.end();
      }
      return Ik(
        () => e(o, u),
        () => {
          if (o && o.isRecording()) {
            const { status: l } = es(o);
            (!l || l === "ok") && o.setStatus("internal_error");
          }
        }
      );
    })
  );
}
function Ck(t) {
  if (!Pm()) return;
  const e = eP(t),
    n = Zn(),
    r = t.scope ? t.scope.getSpan() : Nv();
  if (t.onlyIfParent && !r) return;
  const i = (t.scope || er()).clone();
  return Z0(n, {
    parentSpan: r,
    spanContext: e,
    forceTransaction: t.forceTransaction,
    scope: i,
  });
}
function Nv() {
  return er().getSpan();
}
const v1e = ({ sentryTrace: t, baggage: e }, n) => {
  const r = er(),
    {
      traceparentData: a,
      dynamicSamplingContext: s,
      propagationContext: i,
    } = EAe(t, e);
  r.setPropagationContext(i),
    Gt && a && Be.log(`[Tracing] Continuing trace ${a.traceId}.`);
  const o = { ...a, metadata: gr({ dynamicSamplingContext: s }) };
  return n ? J0(() => n(o)) : o;
};
function Z0(
  t,
  { parentSpan: e, spanContext: n, forceTransaction: r, scope: a }
) {
  if (!Pm()) return;
  const s = Cu();
  let i;
  if (e && !r) i = e.startChild(n);
  else if (e) {
    const o = Df(e),
      { traceId: u, spanId: l } = e.spanContext(),
      c = bk(e);
    i = t.startTransaction({
      traceId: u,
      parentSpanId: l,
      parentSampled: c,
      ...n,
      metadata: { dynamicSamplingContext: o, ...n.metadata },
    });
  } else {
    const {
      traceId: o,
      dsc: u,
      parentSpanId: l,
      sampled: c,
    } = { ...s.getPropagationContext(), ...a.getPropagationContext() };
    i = t.startTransaction({
      traceId: o,
      parentSpanId: l,
      parentSampled: c,
      ...n,
      metadata: { dynamicSamplingContext: u, ...n.metadata },
    });
  }
  return a.setSpan(i), _1e(i, a, s), i;
}
function eP(t) {
  if (t.startTime) {
    const e = { ...t };
    return (e.startTimestamp = Y0(t.startTime)), delete e.startTime, e;
  }
  return t;
}
const CW = "_sentryScope",
  AW = "_sentryIsolationScope";
function _1e(t, e, n) {
  t && (dp(t, AW, n), dp(t, CW, e));
}
function b1e(t) {
  return { scope: t[CW], isolationScope: t[AW] };
}
let fy;
function OW(t) {
  return fy ? fy.get(t) : void 0;
}
function HW(t) {
  const e = OW(t);
  if (!e) return;
  const n = {};
  for (const [, [r, a]] of e) n[r] || (n[r] = []), n[r].push(gr(a));
  return n;
}
function E1e(t, e, n, r, a, s) {
  const i = Nv();
  if (i) {
    const o = OW(i) || new Map(),
      u = `${t}:${e}@${r}`,
      l = o.get(s);
    if (l) {
      const [, c] = l;
      o.set(s, [
        u,
        {
          min: Math.min(c.min, n),
          max: Math.max(c.max, n),
          count: (c.count += 1),
          sum: (c.sum += n),
          tags: c.tags,
        },
      ]);
    } else o.set(s, [u, { min: n, max: n, count: 1, sum: n, tags: a }]);
    fy || (fy = new WeakMap()), fy.set(i, o);
  }
}
const Di = "sentry.source",
  Ph = "sentry.sample_rate",
  Y_ = "sentry.op",
  Ih = "sentry.origin",
  T1e = "profile_id";
class NW {
  constructor(e = 1e3) {
    (this._maxlen = e), (this.spans = []);
  }
  add(e) {
    this.spans.length > this._maxlen
      ? (e.spanRecorder = void 0)
      : this.spans.push(e);
  }
}
class tP {
  constructor(e = {}) {
    (this._traceId = e.traceId || jn()),
      (this._spanId = e.spanId || jn().substring(16)),
      (this._startTime = e.startTimestamp || yl()),
      (this.tags = e.tags ? { ...e.tags } : {}),
      (this.data = e.data ? { ...e.data } : {}),
      (this.instrumenter = e.instrumenter || "sentry"),
      (this._attributes = {}),
      this.setAttributes({
        [Ih]: e.origin || "manual",
        [Y_]: e.op,
        ...e.attributes,
      }),
      (this._name = e.name || e.description),
      e.parentSpanId && (this._parentSpanId = e.parentSpanId),
      "sampled" in e && (this._sampled = e.sampled),
      e.status && (this._status = e.status),
      e.endTimestamp && (this._endTime = e.endTimestamp),
      e.exclusiveTime !== void 0 && (this._exclusiveTime = e.exclusiveTime),
      (this._measurements = e.measurements ? { ...e.measurements } : {});
  }
  get name() {
    return this._name || "";
  }
  set name(e) {
    this.updateName(e);
  }
  get description() {
    return this._name;
  }
  set description(e) {
    this._name = e;
  }
  get traceId() {
    return this._traceId;
  }
  set traceId(e) {
    this._traceId = e;
  }
  get spanId() {
    return this._spanId;
  }
  set spanId(e) {
    this._spanId = e;
  }
  set parentSpanId(e) {
    this._parentSpanId = e;
  }
  get parentSpanId() {
    return this._parentSpanId;
  }
  get sampled() {
    return this._sampled;
  }
  set sampled(e) {
    this._sampled = e;
  }
  get attributes() {
    return this._attributes;
  }
  set attributes(e) {
    this._attributes = e;
  }
  get startTimestamp() {
    return this._startTime;
  }
  set startTimestamp(e) {
    this._startTime = e;
  }
  get endTimestamp() {
    return this._endTime;
  }
  set endTimestamp(e) {
    this._endTime = e;
  }
  get status() {
    return this._status;
  }
  set status(e) {
    this._status = e;
  }
  get op() {
    return this._attributes[Y_];
  }
  set op(e) {
    this.setAttribute(Y_, e);
  }
  get origin() {
    return this._attributes[Ih];
  }
  set origin(e) {
    this.setAttribute(Ih, e);
  }
  spanContext() {
    const { _spanId: e, _traceId: n, _sampled: r } = this;
    return { spanId: e, traceId: n, traceFlags: r ? SW : MAe };
  }
  startChild(e) {
    const n = new tP({
      ...e,
      parentSpanId: this._spanId,
      sampled: this._sampled,
      traceId: this._traceId,
    });
    (n.spanRecorder = this.spanRecorder),
      n.spanRecorder && n.spanRecorder.add(n);
    const r = MT(this);
    if (((n.transaction = r), Gt && r)) {
      const a = (e && e.op) || "< unknown op >",
        s = es(n).description || "< unknown name >",
        i = r.spanContext().spanId,
        o = `[Tracing] Starting '${a}' span on transaction '${s}' (${i}).`;
      Be.log(o), (this._logMessage = o);
    }
    return n;
  }
  setTag(e, n) {
    return (this.tags = { ...this.tags, [e]: n }), this;
  }
  setData(e, n) {
    return (this.data = { ...this.data, [e]: n }), this;
  }
  setAttribute(e, n) {
    n === void 0 ? delete this._attributes[e] : (this._attributes[e] = n);
  }
  setAttributes(e) {
    Object.keys(e).forEach((n) => this.setAttribute(n, e[n]));
  }
  setStatus(e) {
    return (this._status = e), this;
  }
  setHttpStatus(e) {
    return Pk(this, e), this;
  }
  setName(e) {
    this.updateName(e);
  }
  updateName(e) {
    return (this._name = e), this;
  }
  isSuccess() {
    return this._status === "ok";
  }
  finish(e) {
    return this.end(e);
  }
  end(e) {
    if (this._endTime) return;
    const n = MT(this);
    if (Gt && n && n.spanContext().spanId !== this._spanId) {
      const r = this._logMessage;
      r && Be.log(r.replace("Starting", "Finishing"));
    }
    this._endTime = Y0(e);
  }
  toTraceparent() {
    return q0(this);
  }
  toContext() {
    return gr({
      data: this._getData(),
      description: this._name,
      endTimestamp: this._endTime,
      op: this.op,
      parentSpanId: this._parentSpanId,
      sampled: this._sampled,
      spanId: this._spanId,
      startTimestamp: this._startTime,
      status: this._status,
      tags: this.tags,
      traceId: this._traceId,
    });
  }
  updateWithContext(e) {
    return (
      (this.data = e.data || {}),
      (this._name = e.name || e.description),
      (this._endTime = e.endTimestamp),
      (this.op = e.op),
      (this._parentSpanId = e.parentSpanId),
      (this._sampled = e.sampled),
      (this._spanId = e.spanId || this._spanId),
      (this._startTime = e.startTimestamp || this._startTime),
      (this._status = e.status),
      (this.tags = e.tags || {}),
      (this._traceId = e.traceId || this._traceId),
      this
    );
  }
  getTraceContext() {
    return _k(this);
  }
  getSpanJSON() {
    return gr({
      data: this._getData(),
      description: this._name,
      op: this._attributes[Y_],
      parent_span_id: this._parentSpanId,
      span_id: this._spanId,
      start_timestamp: this._startTime,
      status: this._status,
      tags: Object.keys(this.tags).length > 0 ? this.tags : void 0,
      timestamp: this._endTime,
      trace_id: this._traceId,
      origin: this._attributes[Ih],
      _metrics_summary: HW(this),
      profile_id: this._attributes[T1e],
      exclusive_time: this._exclusiveTime,
      measurements:
        Object.keys(this._measurements).length > 0
          ? this._measurements
          : void 0,
    });
  }
  isRecording() {
    return !this._endTime && !!this._sampled;
  }
  toJSON() {
    return this.getSpanJSON();
  }
  _getData() {
    const { data: e, _attributes: n } = this,
      r = Object.keys(e).length > 0,
      a = Object.keys(n).length > 0;
    if (!(!r && !a)) return r && a ? { ...e, ...n } : r ? e : n;
  }
}
class RW extends tP {
  constructor(e, n) {
    super(e),
      (this._contexts = {}),
      (this._hub = n || Zn()),
      (this._name = e.name || ""),
      (this._metadata = { ...e.metadata }),
      (this._trimEnd = e.trimEnd),
      (this.transaction = this);
    const r = this._metadata.dynamicSamplingContext;
    r && (this._frozenDynamicSamplingContext = { ...r });
  }
  get name() {
    return this._name;
  }
  set name(e) {
    this.setName(e);
  }
  get metadata() {
    return {
      source: "custom",
      spanMetadata: {},
      ...this._metadata,
      ...(this._attributes[Di] && { source: this._attributes[Di] }),
      ...(this._attributes[Ph] && { sampleRate: this._attributes[Ph] }),
    };
  }
  set metadata(e) {
    this._metadata = e;
  }
  setName(e, n = "custom") {
    (this._name = e), this.setAttribute(Di, n);
  }
  updateName(e) {
    return (this._name = e), this;
  }
  initSpanRecorder(e = 1e3) {
    this.spanRecorder || (this.spanRecorder = new NW(e)),
      this.spanRecorder.add(this);
  }
  setContext(e, n) {
    n === null ? delete this._contexts[e] : (this._contexts[e] = n);
  }
  setMeasurement(e, n, r = "") {
    this._measurements[e] = { value: n, unit: r };
  }
  setMetadata(e) {
    this._metadata = { ...this._metadata, ...e };
  }
  end(e) {
    const n = Y0(e),
      r = this._finishTransaction(n);
    if (r) return this._hub.captureEvent(r);
  }
  toContext() {
    const e = super.toContext();
    return gr({ ...e, name: this._name, trimEnd: this._trimEnd });
  }
  updateWithContext(e) {
    return (
      super.updateWithContext(e),
      (this._name = e.name || ""),
      (this._trimEnd = e.trimEnd),
      this
    );
  }
  getDynamicSamplingContext() {
    return Df(this);
  }
  setHub(e) {
    this._hub = e;
  }
  getProfileId() {
    if (this._contexts !== void 0 && this._contexts.profile !== void 0)
      return this._contexts.profile.profile_id;
  }
  _finishTransaction(e) {
    if (this._endTime !== void 0) return;
    this._name ||
      (Gt &&
        Be.warn(
          "Transaction has no name, falling back to `<unlabeled transaction>`."
        ),
      (this._name = "<unlabeled transaction>")),
      super.end(e);
    const n = this._hub.getClient();
    if (
      (n && n.emit && n.emit("finishTransaction", this), this._sampled !== !0)
    ) {
      Gt &&
        Be.log(
          "[Tracing] Discarding transaction because its trace was not chosen to be sampled."
        ),
        n && n.recordDroppedEvent("sample_rate", "transaction");
      return;
    }
    const r = this.spanRecorder
      ? this.spanRecorder.spans.filter((c) => c !== this && es(c).timestamp)
      : [];
    if (this._trimEnd && r.length > 0) {
      const c = r.map((d) => es(d).timestamp).filter(Boolean);
      this._endTime = c.reduce((d, p) => (d > p ? d : p));
    }
    const { scope: a, isolationScope: s } = b1e(this),
      { metadata: i } = this,
      { source: o } = i,
      u = {
        contexts: { ...this._contexts, trace: _k(this) },
        spans: r,
        start_timestamp: this._startTime,
        tags: this.tags,
        timestamp: this._endTime,
        transaction: this._name,
        type: "transaction",
        sdkProcessingMetadata: {
          ...i,
          capturedSpanScope: a,
          capturedSpanIsolationScope: s,
          ...gr({ dynamicSamplingContext: Df(this) }),
        },
        _metrics_summary: HW(this),
        ...(o && { transaction_info: { source: o } }),
      };
    return (
      Object.keys(this._measurements).length > 0 &&
        (Gt &&
          Be.log(
            "[Measurements] Adding measurements to transaction",
            JSON.stringify(this._measurements, void 0, 2)
          ),
        (u.measurements = this._measurements)),
      Gt &&
        Be.log(`[Tracing] Finishing ${this.op} transaction: ${this._name}.`),
      u
    );
  }
}
const my = { idleTimeout: 1e3, finalTimeout: 3e4, heartbeatInterval: 5e3 },
  w1e = "finishReason",
  nh = [
    "heartbeatFailed",
    "idleTimeout",
    "documentHidden",
    "finalTimeout",
    "externalFinish",
    "cancelled",
  ];
class P1e extends NW {
  constructor(e, n, r, a) {
    super(a),
      (this._pushActivity = e),
      (this._popActivity = n),
      (this.transactionSpanId = r);
  }
  add(e) {
    if (e.spanContext().spanId !== this.transactionSpanId) {
      const n = e.end;
      (e.end = (...r) => (
        this._popActivity(e.spanContext().spanId), n.apply(e, r)
      )),
        es(e).timestamp === void 0 &&
          this._pushActivity(e.spanContext().spanId);
    }
    super.add(e);
  }
}
class I1e extends RW {
  constructor(
    e,
    n,
    r = my.idleTimeout,
    a = my.finalTimeout,
    s = my.heartbeatInterval,
    i = !1,
    o = !1
  ) {
    super(e, n),
      (this._idleHub = n),
      (this._idleTimeout = r),
      (this._finalTimeout = a),
      (this._heartbeatInterval = s),
      (this._onScope = i),
      (this.activities = {}),
      (this._heartbeatCounter = 0),
      (this._finished = !1),
      (this._idleTimeoutCanceledPermanently = !1),
      (this._beforeFinishCallbacks = []),
      (this._finishReason = nh[4]),
      (this._autoFinishAllowed = !o),
      i &&
        (Gt &&
          Be.log(
            `Setting idle transaction on scope. Span ID: ${
              this.spanContext().spanId
            }`
          ),
        n.getScope().setSpan(this)),
      o || this._restartIdleTimeout(),
      setTimeout(() => {
        this._finished ||
          (this.setStatus("deadline_exceeded"),
          (this._finishReason = nh[3]),
          this.end());
      }, this._finalTimeout);
  }
  end(e) {
    const n = Y0(e);
    if (
      ((this._finished = !0),
      (this.activities = {}),
      this.op === "ui.action.click" &&
        this.setAttribute(w1e, this._finishReason),
      this.spanRecorder)
    ) {
      Gt &&
        Be.log(
          "[Tracing] finishing IdleTransaction",
          new Date(n * 1e3).toISOString(),
          this.op
        );
      for (const r of this._beforeFinishCallbacks) r(this, n);
      (this.spanRecorder.spans = this.spanRecorder.spans.filter((r) => {
        if (r.spanContext().spanId === this.spanContext().spanId) return !0;
        es(r).timestamp ||
          (r.setStatus("cancelled"),
          r.end(n),
          Gt &&
            Be.log(
              "[Tracing] cancelling span since transaction ended early",
              JSON.stringify(r, void 0, 2)
            ));
        const { start_timestamp: a, timestamp: s } = es(r),
          i = a && a < n,
          o = (this._finalTimeout + this._idleTimeout) / 1e3,
          u = s && a && s - a < o;
        if (Gt) {
          const l = JSON.stringify(r, void 0, 2);
          i
            ? u ||
              Be.log(
                "[Tracing] discarding Span since it finished after Transaction final timeout",
                l
              )
            : Be.log(
                "[Tracing] discarding Span since it happened after Transaction was finished",
                l
              );
        }
        return i && u;
      })),
        Gt && Be.log("[Tracing] flushing IdleTransaction");
    } else Gt && Be.log("[Tracing] No active IdleTransaction");
    if (this._onScope) {
      const r = this._idleHub.getScope();
      r.getTransaction() === this && r.setSpan(void 0);
    }
    return super.end(e);
  }
  registerBeforeFinishCallback(e) {
    this._beforeFinishCallbacks.push(e);
  }
  initSpanRecorder(e) {
    if (!this.spanRecorder) {
      const n = (a) => {
          this._finished || this._pushActivity(a);
        },
        r = (a) => {
          this._finished || this._popActivity(a);
        };
      (this.spanRecorder = new P1e(n, r, this.spanContext().spanId, e)),
        Gt && Be.log("Starting heartbeat"),
        this._pingHeartbeat();
    }
    this.spanRecorder.add(this);
  }
  cancelIdleTimeout(
    e,
    { restartOnChildSpanChange: n } = { restartOnChildSpanChange: !0 }
  ) {
    (this._idleTimeoutCanceledPermanently = n === !1),
      this._idleTimeoutID &&
        (clearTimeout(this._idleTimeoutID),
        (this._idleTimeoutID = void 0),
        Object.keys(this.activities).length === 0 &&
          this._idleTimeoutCanceledPermanently &&
          ((this._finishReason = nh[5]), this.end(e)));
  }
  setFinishReason(e) {
    this._finishReason = e;
  }
  sendAutoFinishSignal() {
    this._autoFinishAllowed ||
      (Gt && Be.log("[Tracing] Received finish signal for idle transaction."),
      this._restartIdleTimeout(),
      (this._autoFinishAllowed = !0));
  }
  _restartIdleTimeout(e) {
    this.cancelIdleTimeout(),
      (this._idleTimeoutID = setTimeout(() => {
        !this._finished &&
          Object.keys(this.activities).length === 0 &&
          ((this._finishReason = nh[1]), this.end(e));
      }, this._idleTimeout));
  }
  _pushActivity(e) {
    this.cancelIdleTimeout(void 0, {
      restartOnChildSpanChange: !this._idleTimeoutCanceledPermanently,
    }),
      Gt && Be.log(`[Tracing] pushActivity: ${e}`),
      (this.activities[e] = !0),
      Gt &&
        Be.log(
          "[Tracing] new activities count",
          Object.keys(this.activities).length
        );
  }
  _popActivity(e) {
    if (
      (this.activities[e] &&
        (Gt && Be.log(`[Tracing] popActivity ${e}`),
        delete this.activities[e],
        Gt &&
          Be.log(
            "[Tracing] new activities count",
            Object.keys(this.activities).length
          )),
      Object.keys(this.activities).length === 0)
    ) {
      const n = yl();
      this._idleTimeoutCanceledPermanently
        ? this._autoFinishAllowed && ((this._finishReason = nh[5]), this.end(n))
        : this._restartIdleTimeout(n + this._idleTimeout / 1e3);
    }
  }
  _beat() {
    if (this._finished) return;
    const e = Object.keys(this.activities).join("");
    e === this._prevHeartbeatString
      ? this._heartbeatCounter++
      : (this._heartbeatCounter = 1),
      (this._prevHeartbeatString = e),
      this._heartbeatCounter >= 3
        ? this._autoFinishAllowed &&
          (Gt &&
            Be.log(
              "[Tracing] Transaction finished because of no change for 3 heart beats"
            ),
          this.setStatus("deadline_exceeded"),
          (this._finishReason = nh[0]),
          this.end())
        : this._pingHeartbeat();
  }
  _pingHeartbeat() {
    Gt &&
      Be.log(`pinging Heartbeat -> current counter: ${this._heartbeatCounter}`),
      setTimeout(() => {
        this._beat();
      }, this._heartbeatInterval);
  }
}
function kW(t, e, n) {
  if (!Pm(e)) return (t.sampled = !1), t;
  if (t.sampled !== void 0) return t.setAttribute(Ph, Number(t.sampled)), t;
  let r;
  return (
    typeof e.tracesSampler == "function"
      ? ((r = e.tracesSampler(n)), t.setAttribute(Ph, Number(r)))
      : n.parentSampled !== void 0
      ? (r = n.parentSampled)
      : typeof e.tracesSampleRate < "u"
      ? ((r = e.tracesSampleRate), t.setAttribute(Ph, Number(r)))
      : ((r = 1), t.setAttribute(Ph, r)),
    xW(r)
      ? r
        ? ((t.sampled = Math.random() < r),
          t.sampled
            ? (Gt &&
                Be.log(
                  `[Tracing] starting ${t.op} transaction - ${
                    es(t).description
                  }`
                ),
              t)
            : (Gt &&
                Be.log(
                  `[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(
                    r
                  )})`
                ),
              t))
        : (Gt &&
            Be.log(
              `[Tracing] Discarding transaction because ${
                typeof e.tracesSampler == "function"
                  ? "tracesSampler returned 0 or false"
                  : "a negative sampling decision was inherited or tracesSampleRate is set to 0"
              }`
            ),
          (t.sampled = !1),
          t)
      : (Gt &&
          Be.warn(
            "[Tracing] Discarding transaction because of invalid sample rate."
          ),
        (t.sampled = !1),
        t)
  );
}
function xW(t) {
  return G$(t) || !(typeof t == "number" || typeof t == "boolean")
    ? (Gt &&
        Be.warn(
          `[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(
            t
          )} of type ${JSON.stringify(typeof t)}.`
        ),
      !1)
    : t < 0 || t > 1
    ? (Gt &&
        Be.warn(
          `[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got ${t}.`
        ),
      !1)
    : !0;
}
function C1e() {
  const e = this.getScope().getSpan();
  return e ? { "sentry-trace": q0(e) } : {};
}
function A1e(t, e) {
  const n = this.getClient(),
    r = (n && n.getOptions()) || {},
    a = r.instrumenter || "sentry",
    s = t.instrumenter || "sentry";
  a !== s &&
    (Gt &&
      Be.error(`A transaction was started with instrumenter=\`${s}\`, but the SDK is configured with the \`${a}\` instrumenter.
The transaction will not be sampled. Please use the ${a} instrumentation to start transactions.`),
    (t.sampled = !1));
  let i = new RW(t, this);
  return (
    (i = kW(i, r, {
      name: t.name,
      parentSampled: t.parentSampled,
      transactionContext: t,
      attributes: { ...t.data, ...t.attributes },
      ...e,
    })),
    i.isRecording() &&
      i.initSpanRecorder(r._experiments && r._experiments.maxSpans),
    n && n.emit && n.emit("startTransaction", i),
    i
  );
}
function GT(t, e, n, r, a, s, i, o = !1) {
  const u = t.getClient(),
    l = (u && u.getOptions()) || {};
  let c = new I1e(e, t, n, r, i, a, o);
  return (
    (c = kW(c, l, {
      name: e.name,
      parentSampled: e.parentSampled,
      transactionContext: e,
      attributes: { ...e.data, ...e.attributes },
      ...s,
    })),
    c.isRecording() &&
      c.initSpanRecorder(l._experiments && l._experiments.maxSpans),
    u && u.emit && u.emit("startTransaction", c),
    c
  );
}
function Ak() {
  const t = wm();
  t.__SENTRY__ &&
    ((t.__SENTRY__.extensions = t.__SENTRY__.extensions || {}),
    t.__SENTRY__.extensions.startTransaction ||
      (t.__SENTRY__.extensions.startTransaction = A1e),
    t.__SENTRY__.extensions.traceHeaders ||
      (t.__SENTRY__.extensions.traceHeaders = C1e),
    h1e());
}
function LW(t, e, n) {
  const r = _u();
  r && r.setMeasurement(t, e, n);
}
function O1e(t, e) {
  return (
    e &&
      ((t.sdk = t.sdk || {}),
      (t.sdk.name = t.sdk.name || e.name),
      (t.sdk.version = t.sdk.version || e.version),
      (t.sdk.integrations = [
        ...(t.sdk.integrations || []),
        ...(e.integrations || []),
      ]),
      (t.sdk.packages = [...(t.sdk.packages || []), ...(e.packages || [])])),
    t
  );
}
function H1e(t, e, n, r) {
  const a = gk(n),
    s = {
      sent_at: new Date().toISOString(),
      ...(a && { sdk: a }),
      ...(!!r && e && { dsn: Np(e) }),
    },
    i =
      "aggregates" in t
        ? [{ type: "sessions" }, t]
        : [{ type: "session" }, t.toJSON()];
  return hd(s, [i]);
}
function MW(t, e, n, r) {
  const a = gk(n),
    s = t.type && t.type !== "replay_event" ? t.type : "event";
  O1e(t, n && n.sdk);
  const i = cW(t, a, r, e);
  return delete t.sdkProcessingMetadata, hd(i, [[{ type: s }, t]]);
}
const N1e = "7";
function DW(t) {
  const e = t.protocol ? `${t.protocol}:` : "",
    n = t.port ? `:${t.port}` : "";
  return `${e}//${t.host}${n}${t.path ? `/${t.path}` : ""}/api/`;
}
function R1e(t) {
  return `${DW(t)}${t.projectId}/envelope/`;
}
function k1e(t, e) {
  return RCe({
    sentry_key: t.publicKey,
    sentry_version: N1e,
    ...(e && { sentry_client: `${e.name}/${e.version}` }),
  });
}
function x1e(t, e = {}) {
  const n = typeof e == "string" ? e : e.tunnel,
    r = typeof e == "string" || !e._metadata ? void 0 : e._metadata.sdk;
  return n || `${R1e(t)}?${k1e(t, r)}`;
}
function L1e(t, e) {
  const n = $$(t);
  if (!n) return "";
  const r = `${DW(n)}embed/error-page/`;
  let a = `dsn=${Np(n)}`;
  for (const s in e)
    if (s !== "dsn" && s !== "onClose")
      if (s === "user") {
        const i = e.user;
        if (!i) continue;
        i.name && (a += `&name=${encodeURIComponent(i.name)}`),
          i.email && (a += `&email=${encodeURIComponent(i.email)}`);
      } else a += `&${encodeURIComponent(s)}=${encodeURIComponent(e[s])}`;
  return `${r}?${a}`;
}
const N7 = [];
function M1e(t) {
  const e = {};
  return (
    t.forEach((n) => {
      const { name: r } = n,
        a = e[r];
      (a && !a.isDefaultInstance && n.isDefaultInstance) || (e[r] = n);
    }),
    Object.keys(e).map((n) => e[n])
  );
}
function D1e(t) {
  const e = t.defaultIntegrations || [],
    n = t.integrations;
  e.forEach((i) => {
    i.isDefaultInstance = !0;
  });
  let r;
  Array.isArray(n)
    ? (r = [...e, ...n])
    : typeof n == "function"
    ? (r = Z$(n(e)))
    : (r = e);
  const a = M1e(r),
    s = U1e(a, (i) => i.name === "Debug");
  if (s !== -1) {
    const [i] = a.splice(s, 1);
    a.push(i);
  }
  return a;
}
function G1e(t, e) {
  const n = {};
  return (
    e.forEach((r) => {
      r && GW(t, r, n);
    }),
    n
  );
}
function R7(t, e) {
  for (const n of e) n && n.afterAllSetup && n.afterAllSetup(t);
}
function GW(t, e, n) {
  if (n[e.name]) {
    Gt &&
      Be.log(`Integration skipped because it was already installed: ${e.name}`);
    return;
  }
  if (
    ((n[e.name] = e),
    N7.indexOf(e.name) === -1 && (e.setupOnce(hW, Zn), N7.push(e.name)),
    e.setup && typeof e.setup == "function" && e.setup(t),
    t.on && typeof e.preprocessEvent == "function")
  ) {
    const r = e.preprocessEvent.bind(e);
    t.on("preprocessEvent", (a, s) => r(a, s, t));
  }
  if (t.addEventProcessor && typeof e.processEvent == "function") {
    const r = e.processEvent.bind(e),
      a = Object.assign((s, i) => r(s, i, t), { id: e.name });
    t.addEventProcessor(a);
  }
  Gt && Be.log(`Integration installed: ${e.name}`);
}
function F1e(t) {
  const e = An();
  if (!e || !e.addIntegration) {
    Gt &&
      Be.warn(
        `Cannot add integration "${t.name}" because no SDK Client is available.`
      );
    return;
  }
  e.addIntegration(t);
}
function U1e(t, e) {
  for (let n = 0; n < t.length; n++) if (e(t[n]) === !0) return n;
  return -1;
}
function Ca(t, e) {
  return Object.assign(
    function (...r) {
      return e(...r);
    },
    { id: t }
  );
}
function K1e(t, e, n, r) {
  const a = Object.entries(gr(r)).sort((s, i) => s[0].localeCompare(i[0]));
  return `${t}${e}${n}${a}`;
}
function B1e(t) {
  let e = 0;
  for (let n = 0; n < t.length; n++) {
    const r = t.charCodeAt(n);
    (e = (e << 5) - e + r), (e &= e);
  }
  return e >>> 0;
}
function V1e(t) {
  let e = "";
  for (const n of t) {
    const r = Object.entries(n.tags),
      a = r.length > 0 ? `|#${r.map(([s, i]) => `${s}:${i}`).join(",")}` : "";
    e += `${n.name}@${n.unit}:${n.metric}|${n.metricType}${a}|T${n.timestamp}
`;
  }
  return e;
}
function j1e(t) {
  return t.replace(/[^\w]+/gi, "_");
}
function z1e(t) {
  return t.replace(/[^\w\-.]+/gi, "_");
}
function $1e(t) {
  return t.replace(/[^\w\-./]+/gi, "");
}
const W1e = [
  [
    `
`,
    "\\n",
  ],
  ["\r", "\\r"],
  ["	", "\\t"],
  ["\\", "\\\\"],
  ["|", "\\u{7c}"],
  [",", "\\u{2c}"],
];
function q1e(t) {
  for (const [e, n] of W1e) if (t === e) return n;
  return t;
}
function Y1e(t) {
  return [...t].reduce((e, n) => e + q1e(n), "");
}
function X1e(t) {
  const e = {};
  for (const n in t)
    if (Object.prototype.hasOwnProperty.call(t, n)) {
      const r = $1e(n);
      e[r] = Y1e(String(t[n]));
    }
  return e;
}
function Q1e(t, e, n, r) {
  const a = { sent_at: new Date().toISOString() };
  n && n.sdk && (a.sdk = { name: n.sdk.name, version: n.sdk.version }),
    r && e && (a.dsn = Np(e));
  const s = J1e(t);
  return hd(a, [s]);
}
function J1e(t) {
  const e = V1e(t);
  return [{ type: "statsd", length: e.length }, e];
}
const k7 = "Not capturing exception because it's already been captured.";
class Z1e {
  constructor(e) {
    if (
      ((this._options = e),
      (this._integrations = {}),
      (this._integrationsInitialized = !1),
      (this._numProcessing = 0),
      (this._outcomes = {}),
      (this._hooks = {}),
      (this._eventProcessors = []),
      e.dsn
        ? (this._dsn = $$(e.dsn))
        : Gt && Be.warn("No DSN provided, client will not send events."),
      this._dsn)
    ) {
      const n = x1e(this._dsn, e);
      this._transport = e.transport({
        recordDroppedEvent: this.recordDroppedEvent.bind(this),
        ...e.transportOptions,
        url: n,
      });
    }
  }
  captureException(e, n, r) {
    if (y7(e)) {
      Gt && Be.log(k7);
      return;
    }
    let a = n && n.event_id;
    return (
      this._process(
        this.eventFromException(e, n)
          .then((s) => this._captureEvent(s, n, r))
          .then((s) => {
            a = s;
          })
      ),
      a
    );
  }
  captureMessage(e, n, r, a) {
    let s = r && r.event_id;
    const i = lk(e) ? e : String(e),
      o = ck(e)
        ? this.eventFromMessage(i, n, r)
        : this.eventFromException(e, r);
    return (
      this._process(
        o
          .then((u) => this._captureEvent(u, r, a))
          .then((u) => {
            s = u;
          })
      ),
      s
    );
  }
  captureEvent(e, n, r) {
    if (n && n.originalException && y7(n.originalException)) {
      Gt && Be.log(k7);
      return;
    }
    let a = n && n.event_id;
    const i = (e.sdkProcessingMetadata || {}).capturedSpanScope;
    return (
      this._process(
        this._captureEvent(e, n, i || r).then((o) => {
          a = o;
        })
      ),
      a
    );
  }
  captureSession(e) {
    typeof e.release != "string"
      ? Gt &&
        Be.warn("Discarded session because of missing or non-string release")
      : (this.sendSession(e), pp(e, { init: !1 }));
  }
  getDsn() {
    return this._dsn;
  }
  getOptions() {
    return this._options;
  }
  getSdkMetadata() {
    return this._options._metadata;
  }
  getTransport() {
    return this._transport;
  }
  flush(e) {
    const n = this._transport;
    return n
      ? (this.metricsAggregator && this.metricsAggregator.flush(),
        this._isClientDoneProcessing(e).then((r) =>
          n.flush(e).then((a) => r && a)
        ))
      : Mf(!0);
  }
  close(e) {
    return this.flush(e).then(
      (n) => (
        (this.getOptions().enabled = !1),
        this.metricsAggregator && this.metricsAggregator.close(),
        n
      )
    );
  }
  getEventProcessors() {
    return this._eventProcessors;
  }
  addEventProcessor(e) {
    this._eventProcessors.push(e);
  }
  setupIntegrations(e) {
    ((e && !this._integrationsInitialized) ||
      (this._isEnabled() && !this._integrationsInitialized)) &&
      this._setupIntegrations();
  }
  init() {
    this._isEnabled() && this._setupIntegrations();
  }
  getIntegrationById(e) {
    return this.getIntegrationByName(e);
  }
  getIntegrationByName(e) {
    return this._integrations[e];
  }
  getIntegration(e) {
    try {
      return this._integrations[e.id] || null;
    } catch {
      return (
        Gt &&
          Be.warn(
            `Cannot retrieve integration ${e.id} from the current Client`
          ),
        null
      );
    }
  }
  addIntegration(e) {
    const n = this._integrations[e.name];
    GW(this, e, this._integrations), n || R7(this, [e]);
  }
  sendEvent(e, n = {}) {
    this.emit("beforeSendEvent", e, n);
    let r = MW(e, this._dsn, this._options._metadata, this._options.tunnel);
    for (const s of n.attachments || [])
      r = TAe(
        r,
        IAe(
          s,
          this._options.transportOptions &&
            this._options.transportOptions.textEncoder
        )
      );
    const a = this._sendEnvelope(r);
    a && a.then((s) => this.emit("afterSendEvent", e, s), null);
  }
  sendSession(e) {
    const n = H1e(e, this._dsn, this._options._metadata, this._options.tunnel);
    this._sendEnvelope(n);
  }
  recordDroppedEvent(e, n, r) {
    if (this._options.sendClientReports) {
      const a = `${e}:${n}`;
      Gt && Be.log(`Adding outcome: "${a}"`),
        (this._outcomes[a] = this._outcomes[a] + 1 || 1);
    }
  }
  captureAggregateMetrics(e) {
    Gt && Be.log(`Flushing aggregated metrics, number of metrics: ${e.length}`);
    const n = Q1e(e, this._dsn, this._options._metadata, this._options.tunnel);
    this._sendEnvelope(n);
  }
  on(e, n) {
    this._hooks[e] || (this._hooks[e] = []), this._hooks[e].push(n);
  }
  emit(e, ...n) {
    this._hooks[e] && this._hooks[e].forEach((r) => r(...n));
  }
  _setupIntegrations() {
    const { integrations: e } = this._options;
    (this._integrations = G1e(this, e)),
      R7(this, e),
      (this._integrationsInitialized = !0);
  }
  _updateSessionFromEvent(e, n) {
    let r = !1,
      a = !1;
    const s = n.exception && n.exception.values;
    if (s) {
      a = !0;
      for (const u of s) {
        const l = u.mechanism;
        if (l && l.handled === !1) {
          r = !0;
          break;
        }
      }
    }
    const i = e.status === "ok";
    ((i && e.errors === 0) || (i && r)) &&
      (pp(e, {
        ...(r && { status: "crashed" }),
        errors: e.errors || Number(a || r),
      }),
      this.captureSession(e));
  }
  _isClientDoneProcessing(e) {
    return new ri((n) => {
      let r = 0;
      const a = 1,
        s = setInterval(() => {
          this._numProcessing == 0
            ? (clearInterval(s), n(!0))
            : ((r += a), e && r >= e && (clearInterval(s), n(!1)));
        }, a);
    });
  }
  _isEnabled() {
    return this.getOptions().enabled !== !1 && this._transport !== void 0;
  }
  _prepareEvent(e, n, r, a = Cu()) {
    const s = this.getOptions(),
      i = Object.keys(this._integrations);
    return (
      !n.integrations && i.length > 0 && (n.integrations = i),
      this.emit("preprocessEvent", e, n),
      Ek(s, e, n, r, this, a).then((o) => {
        if (o === null) return o;
        const u = {
          ...a.getPropagationContext(),
          ...(r ? r.getPropagationContext() : void 0),
        };
        if (!(o.contexts && o.contexts.trace) && u) {
          const { traceId: c, spanId: d, parentSpanId: p, dsc: m } = u;
          o.contexts = {
            trace: { trace_id: c, span_id: d, parent_span_id: p },
            ...o.contexts,
          };
          const y = m || Q0(c, this, r);
          o.sdkProcessingMetadata = {
            dynamicSamplingContext: y,
            ...o.sdkProcessingMetadata,
          };
        }
        return o;
      })
    );
  }
  _captureEvent(e, n = {}, r) {
    return this._processEvent(e, n, r).then(
      (a) => a.event_id,
      (a) => {
        if (Gt) {
          const s = a;
          s.logLevel === "log" ? Be.log(s.message) : Be.warn(s);
        }
      }
    );
  }
  _processEvent(e, n, r) {
    const a = this.getOptions(),
      { sampleRate: s } = a,
      i = UW(e),
      o = FW(e),
      u = e.type || "error",
      l = `before send for type \`${u}\``;
    if (o && typeof s == "number" && Math.random() > s)
      return (
        this.recordDroppedEvent("sample_rate", "error", e),
        mk(
          new nu(
            `Discarding event because it's not included in the random sample (sampling rate = ${s})`,
            "log"
          )
        )
      );
    const c = u === "replay_event" ? "replay" : u,
      p = (e.sdkProcessingMetadata || {}).capturedSpanIsolationScope;
    return this._prepareEvent(e, n, r, p)
      .then((m) => {
        if (m === null)
          throw (
            (this.recordDroppedEvent("event_processor", c, e),
            new nu(
              "An event processor returned `null`, will not send event.",
              "log"
            ))
          );
        if (n.data && n.data.__sentry__ === !0) return m;
        const I = tOe(a, m, n);
        return eOe(I, l);
      })
      .then((m) => {
        if (m === null)
          throw (
            (this.recordDroppedEvent("before_send", c, e),
            new nu(`${l} returned \`null\`, will not send event.`, "log"))
          );
        const y = r && r.getSession();
        !i && y && this._updateSessionFromEvent(y, m);
        const I = m.transaction_info;
        if (i && I && m.transaction !== e.transaction) {
          const O = "custom";
          m.transaction_info = { ...I, source: O };
        }
        return this.sendEvent(m, n), m;
      })
      .then(null, (m) => {
        throw m instanceof nu
          ? m
          : (this.captureException(m, {
              data: { __sentry__: !0 },
              originalException: m,
            }),
            new nu(`Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.
Reason: ${m}`));
      });
  }
  _process(e) {
    this._numProcessing++,
      e.then(
        (n) => (this._numProcessing--, n),
        (n) => (this._numProcessing--, n)
      );
  }
  _sendEnvelope(e) {
    if ((this.emit("beforeEnvelope", e), this._isEnabled() && this._transport))
      return this._transport.send(e).then(null, (n) => {
        Gt && Be.error("Error while sending event:", n);
      });
    Gt && Be.error("Transport disabled");
  }
  _clearOutcomes() {
    const e = this._outcomes;
    return (
      (this._outcomes = {}),
      Object.keys(e).map((n) => {
        const [r, a] = n.split(":");
        return { reason: r, category: a, quantity: e[n] };
      })
    );
  }
}
function eOe(t, e) {
  const n = `${e} must return \`null\` or a valid event.`;
  if (_m(t))
    return t.then(
      (r) => {
        if (!Lf(r) && r !== null) throw new nu(n);
        return r;
      },
      (r) => {
        throw new nu(`${e} rejected with ${r}`);
      }
    );
  if (!Lf(t) && t !== null) throw new nu(n);
  return t;
}
function tOe(t, e, n) {
  const { beforeSend: r, beforeSendTransaction: a } = t;
  return FW(e) && r ? r(e, n) : UW(e) && a ? a(e, n) : e;
}
function FW(t) {
  return t.type === void 0;
}
function UW(t) {
  return t.type === "transaction";
}
function KW(t) {
  const e = An();
  !e || !e.addEventProcessor || e.addEventProcessor(t);
}
const BW = "c",
  VW = "g",
  Ok = "s",
  jW = "d",
  nOe = 5e3;
class sOe {
  constructor(e) {
    this._value = e;
  }
  get weight() {
    return 1;
  }
  add(e) {
    this._value += e;
  }
  toString() {
    return `${this._value}`;
  }
}
class rOe {
  constructor(e) {
    (this._last = e),
      (this._min = e),
      (this._max = e),
      (this._sum = e),
      (this._count = 1);
  }
  get weight() {
    return 5;
  }
  add(e) {
    (this._last = e),
      e < this._min && (this._min = e),
      e > this._max && (this._max = e),
      (this._sum += e),
      this._count++;
  }
  toString() {
    return `${this._last}:${this._min}:${this._max}:${this._sum}:${this._count}`;
  }
}
class aOe {
  constructor(e) {
    this._value = [e];
  }
  get weight() {
    return this._value.length;
  }
  add(e) {
    this._value.push(e);
  }
  toString() {
    return this._value.join(":");
  }
}
class iOe {
  constructor(e) {
    (this.first = e), (this._value = new Set([e]));
  }
  get weight() {
    return this._value.size;
  }
  add(e) {
    this._value.add(e);
  }
  toString() {
    return Array.from(this._value)
      .map((e) => (typeof e == "string" ? B1e(e) : e))
      .join(":");
  }
}
const oOe = { [BW]: sOe, [VW]: rOe, [jW]: aOe, [Ok]: iOe };
function uOe(t, e) {
  e.debug === !0 &&
    (Gt
      ? Be.enable()
      : cp(() => {
          console.warn(
            "[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle."
          );
        })),
    er().update(e.initialScope);
  const r = new t(e);
  lOe(r), cOe(r);
}
function lOe(t) {
  const n = Zn().getStackTop();
  (n.client = t), n.scope.setClient(t);
}
function cOe(t) {
  t.init ? t.init() : t.setupIntegrations && t.setupIntegrations();
}
const dOe = 30;
function nP(t, e, n = fAe(t.bufferSize || dOe)) {
  let r = {};
  const a = (i) => n.drain(i);
  function s(i) {
    const o = [];
    if (
      (xT(i, (d, p) => {
        const m = E7(p);
        if (dW(r, m)) {
          const y = x7(d, p);
          t.recordDroppedEvent("ratelimit_backoff", m, y);
        } else o.push(d);
      }),
      o.length === 0)
    )
      return Mf();
    const u = hd(i[0], o),
      l = (d) => {
        xT(u, (p, m) => {
          const y = x7(p, m);
          t.recordDroppedEvent(d, E7(m), y);
        });
      },
      c = () =>
        e({ body: wAe(u, t.textEncoder) }).then(
          (d) => (
            d.statusCode !== void 0 &&
              (d.statusCode < 200 || d.statusCode >= 300) &&
              Gt &&
              Be.warn(
                `Sentry responded with status code ${d.statusCode} to sent event.`
              ),
            (r = pW(r, d)),
            d
          ),
          (d) => {
            throw (l("network_error"), d);
          }
        );
    return n.add(c).then(
      (d) => d,
      (d) => {
        if (d instanceof nu)
          return (
            Gt && Be.error("Skipped sending event because buffer is full."),
            l("queue_overflow"),
            Mf()
          );
        throw d;
      }
    );
  }
  return (s.__sentry__baseTransport__ = !0), { send: s, flush: a };
}
function x7(t, e) {
  if (!(e !== "event" && e !== "transaction"))
    return Array.isArray(t) ? t[1] : void 0;
}
function pOe(t, e) {
  const n = { sent_at: new Date().toISOString() };
  e && (n.dsn = Np(e));
  const r = t.map(hOe);
  return hd(n, r);
}
function hOe(t) {
  return [{ type: "span" }, t];
}
function fOe(t, e) {
  const n = e && yOe(e) ? e.getClient() : e,
    r = n && n.getDsn(),
    a = n && n.getOptions().tunnel;
  return SOe(t, r) || mOe(t, a);
}
function mOe(t, e) {
  return e ? L7(t) === L7(e) : !1;
}
function SOe(t, e) {
  return e ? t.includes(e.host) : !1;
}
function L7(t) {
  return t[t.length - 1] === "/" ? t.slice(0, -1) : t;
}
function yOe(t) {
  return t.getClient !== void 0;
}
function gOe(t, ...e) {
  const n = new String(String.raw(t, ...e));
  return (
    (n.__sentry_template_string__ = t
      .join("\0")
      .replace(/%/g, "%%")
      .replace(/\0/g, "%s")),
    (n.__sentry_template_values__ = e),
    n
  );
}
function vOe(t, e, n = [e], r = "npm") {
  const a = t._metadata || {};
  a.sdk ||
    (a.sdk = {
      name: `sentry.javascript.${e}`,
      packages: n.map((s) => ({ name: `${r}:@sentry/${s}`, version: bO })),
      version: bO,
    }),
    (t._metadata = a);
}
const zW = new Map(),
  M7 = new Set();
function _Oe(t) {
  if (wn._sentryModuleMetadata)
    for (const e of Object.keys(wn._sentryModuleMetadata)) {
      const n = wn._sentryModuleMetadata[e];
      if (M7.has(e)) continue;
      M7.add(e);
      const r = t(e);
      for (const a of r.reverse())
        if (a.filename) {
          zW.set(a.filename, n);
          break;
        }
    }
}
function bOe(t, e) {
  return _Oe(t), zW.get(e);
}
function EOe(t, e) {
  try {
    e.exception.values.forEach((n) => {
      if (n.stacktrace)
        for (const r of n.stacktrace.frames || []) {
          if (!r.filename) continue;
          const a = bOe(t, r.filename);
          a && (r.module_metadata = a);
        }
    });
  } catch {}
}
function TOe(t) {
  try {
    t.exception.values.forEach((e) => {
      if (e.stacktrace)
        for (const n of e.stacktrace.frames || []) delete n.module_metadata;
    });
  } catch {}
}
const $W = "ModuleMetadata",
  wOe = () => ({
    name: $W,
    setupOnce() {},
    setup(t) {
      typeof t.on == "function" &&
        t.on("beforeEnvelope", (e) => {
          xT(e, (n, r) => {
            if (r === "event") {
              const a = Array.isArray(n) ? n[1] : void 0;
              a && (TOe(a), (n[1] = a));
            }
          });
        });
    },
    processEvent(t, e, n) {
      const r = n.getOptions().stackParser;
      return EOe(r, t), t;
    },
  }),
  WW = wOe,
  POe = Ca($W, WW),
  IOe = [
    /^Script error\.?$/,
    /^Javascript error: Script error\.? on line 0$/,
    /^ResizeObserver loop completed with undelivered notifications.$/,
    /^Cannot redefine property: googletag$/,
  ],
  COe = [
    /^.*\/healthcheck$/,
    /^.*\/healthy$/,
    /^.*\/live$/,
    /^.*\/ready$/,
    /^.*\/heartbeat$/,
    /^.*\/health$/,
    /^.*\/healthz$/,
  ],
  qW = "InboundFilters",
  AOe = (t = {}) => ({
    name: qW,
    setupOnce() {},
    processEvent(e, n, r) {
      const a = r.getOptions(),
        s = HOe(t, a);
      return NOe(e, s) ? null : e;
    },
  }),
  Hk = AOe,
  OOe = Ca(qW, Hk);
function HOe(t = {}, e = {}) {
  return {
    allowUrls: [...(t.allowUrls || []), ...(e.allowUrls || [])],
    denyUrls: [...(t.denyUrls || []), ...(e.denyUrls || [])],
    ignoreErrors: [
      ...(t.ignoreErrors || []),
      ...(e.ignoreErrors || []),
      ...(t.disableErrorDefaults ? [] : IOe),
    ],
    ignoreTransactions: [
      ...(t.ignoreTransactions || []),
      ...(e.ignoreTransactions || []),
      ...(t.disableTransactionDefaults ? [] : COe),
    ],
    ignoreInternal: t.ignoreInternal !== void 0 ? t.ignoreInternal : !0,
  };
}
function NOe(t, e) {
  return e.ignoreInternal && DOe(t)
    ? (Gt &&
        Be.warn(`Event dropped due to being internal Sentry Error.
Event: ${dc(t)}`),
      !0)
    : ROe(t, e.ignoreErrors)
    ? (Gt &&
        Be.warn(`Event dropped due to being matched by \`ignoreErrors\` option.
Event: ${dc(t)}`),
      !0)
    : kOe(t, e.ignoreTransactions)
    ? (Gt &&
        Be.warn(`Event dropped due to being matched by \`ignoreTransactions\` option.
Event: ${dc(t)}`),
      !0)
    : xOe(t, e.denyUrls)
    ? (Gt &&
        Be.warn(`Event dropped due to being matched by \`denyUrls\` option.
Event: ${dc(t)}.
Url: ${FT(t)}`),
      !0)
    : LOe(t, e.allowUrls)
    ? !1
    : (Gt &&
        Be.warn(`Event dropped due to not being matched by \`allowUrls\` option.
Event: ${dc(t)}.
Url: ${FT(t)}`),
      !0);
}
function ROe(t, e) {
  return t.type || !e || !e.length ? !1 : MOe(t).some((n) => bm(n, e));
}
function kOe(t, e) {
  if (t.type !== "transaction" || !e || !e.length) return !1;
  const n = t.transaction;
  return n ? bm(n, e) : !1;
}
function xOe(t, e) {
  if (!e || !e.length) return !1;
  const n = FT(t);
  return n ? bm(n, e) : !1;
}
function LOe(t, e) {
  if (!e || !e.length) return !0;
  const n = FT(t);
  return n ? bm(n, e) : !0;
}
function MOe(t) {
  const e = [];
  t.message && e.push(t.message);
  let n;
  try {
    n = t.exception.values[t.exception.values.length - 1];
  } catch {}
  return (
    n &&
      n.value &&
      (e.push(n.value), n.type && e.push(`${n.type}: ${n.value}`)),
    Gt &&
      e.length === 0 &&
      Be.error(`Could not extract message for event ${dc(t)}`),
    e
  );
}
function DOe(t) {
  try {
    return t.exception.values[0].type === "SentryError";
  } catch {}
  return !1;
}
function GOe(t = []) {
  for (let e = t.length - 1; e >= 0; e--) {
    const n = t[e];
    if (n && n.filename !== "<anonymous>" && n.filename !== "[native code]")
      return n.filename || null;
  }
  return null;
}
function FT(t) {
  try {
    let e;
    try {
      e = t.exception.values[0].stacktrace.frames;
    } catch {}
    return e ? GOe(e) : null;
  } catch {
    return Gt && Be.error(`Cannot extract url for event ${dc(t)}`), null;
  }
}
let D7;
const YW = "FunctionToString",
  G7 = new WeakMap(),
  FOe = () => ({
    name: YW,
    setupOnce() {
      D7 = Function.prototype.toString;
      try {
        Function.prototype.toString = function (...t) {
          const e = pk(this),
            n = G7.has(An()) && e !== void 0 ? e : this;
          return D7.apply(n, t);
        };
      } catch {}
    },
    setup(t) {
      G7.set(t, !0);
    },
  }),
  Nk = FOe,
  UOe = Ca(YW, Nk),
  KOe = "cause",
  BOe = 5,
  XW = "LinkedErrors",
  VOe = (t = {}) => {
    const e = t.limit || BOe,
      n = t.key || KOe;
    return {
      name: XW,
      setupOnce() {},
      preprocessEvent(r, a, s) {
        const i = s.getOptions();
        U$(kAe, i.stackParser, i.maxValueLength, n, e, r, a);
      },
    };
  },
  jOe = VOe,
  zOe = Ca(XW, jOe),
  $Oe = Object.freeze(
    Object.defineProperty(
      {
        __proto__: null,
        FunctionToString: UOe,
        InboundFilters: OOe,
        LinkedErrors: zOe,
      },
      Symbol.toStringTag,
      { value: "Module" }
    )
  );
class WOe {
  constructor(e) {
    (this._client = e),
      (this._buckets = new Map()),
      (this._interval = setInterval(() => this.flush(), nOe));
  }
  add(e, n, r, a = "none", s = {}, i = yl()) {
    const o = Math.floor(i),
      u = z1e(n),
      l = X1e(s),
      c = j1e(a),
      d = K1e(e, u, c, l);
    let p = this._buckets.get(d);
    const m = p && e === Ok ? p.metric.weight : 0;
    p
      ? (p.metric.add(r), p.timestamp < o && (p.timestamp = o))
      : ((p = {
          metric: new oOe[e](r),
          timestamp: o,
          metricType: e,
          name: u,
          unit: c,
          tags: l,
        }),
        this._buckets.set(d, p));
    const y = typeof r == "string" ? p.metric.weight - m : r;
    E1e(e, u, y, c, s, d);
  }
  flush() {
    if (this._buckets.size !== 0) {
      if (this._client.captureAggregateMetrics) {
        const e = Array.from(this._buckets).map(([, n]) => n);
        this._client.captureAggregateMetrics(e);
      }
      this._buckets.clear();
    }
  }
  close() {
    clearInterval(this._interval), this.flush();
  }
}
const QW = "MetricsAggregator",
  qOe = () => ({
    name: QW,
    setupOnce() {},
    setup(t) {
      t.metricsAggregator = new WOe(t);
    },
  }),
  JW = qOe,
  YOe = Ca(QW, JW);
function sP(t, e, n, r = {}) {
  const a = An(),
    s = er();
  if (a) {
    if (!a.metricsAggregator) {
      Gt &&
        Be.warn(
          "No metrics aggregator enabled. Please add the MetricsAggregator integration to use metrics APIs"
        );
      return;
    }
    const { unit: i, tags: o, timestamp: u } = r,
      { release: l, environment: c } = a.getOptions(),
      d = s.getTransaction(),
      p = {};
    l && (p.release = l),
      c && (p.environment = c),
      d && (p.transaction = es(d).description || ""),
      Gt && Be.log(`Adding value of ${n} to ${t} metric ${e}`),
      a.metricsAggregator.add(t, e, n, i, { ...p, ...o }, u);
  }
}
function XOe(t, e = 1, n) {
  sP(BW, t, e, n);
}
function QOe(t, e, n) {
  sP(jW, t, e, n);
}
function JOe(t, e, n) {
  sP(Ok, t, e, n);
}
function ZOe(t, e, n) {
  sP(VW, t, e, n);
}
const eHe = {
    increment: XOe,
    distribution: QOe,
    set: JOe,
    gauge: ZOe,
    MetricsAggregator: YOe,
    metricsAggregatorIntegration: JW,
  },
  tHe = $Oe,
  Mn = typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__,
  Zt = wn;
function ZW() {
  Zt && Zt.document
    ? Zt.document.addEventListener("visibilitychange", () => {
        const t = _u();
        if (Zt.document.hidden && t) {
          const e = "cancelled",
            { op: n, status: r } = es(t);
          Mn &&
            Be.log(
              `[Tracing] Transaction: ${e} -> since tab moved to the background, op: ${n}`
            ),
            r || t.setStatus(e),
            t.setTag("visibilitychange", "document.hidden"),
            t.end();
        }
      })
    : Mn &&
      Be.warn(
        "[Tracing] Could not set up background tab detection due to lack of global document"
      );
}
const Rv = (t, e, n) => {
    let r, a;
    return (s) => {
      e.value >= 0 &&
        (s || n) &&
        ((a = e.value - (r || 0)),
        (a || r === void 0) && ((r = e.value), (e.delta = a), t(e)));
    };
  },
  nHe = () =>
    `v3-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`,
  sHe = () => {
    const t = Zt.performance.timing,
      e = Zt.performance.navigation.type,
      n = {
        entryType: "navigation",
        startTime: 0,
        type: e == 2 ? "back_forward" : e === 1 ? "reload" : "navigate",
      };
    for (const r in t)
      r !== "navigationStart" &&
        r !== "toJSON" &&
        (n[r] = Math.max(t[r] - t.navigationStart, 0));
    return n;
  },
  rP = () =>
    Zt.__WEB_VITALS_POLYFILL__
      ? Zt.performance &&
        ((performance.getEntriesByType &&
          performance.getEntriesByType("navigation")[0]) ||
          sHe())
      : Zt.performance &&
        performance.getEntriesByType &&
        performance.getEntriesByType("navigation")[0],
  Rk = () => {
    const t = rP();
    return (t && t.activationStart) || 0;
  },
  kv = (t, e) => {
    const n = rP();
    let r = "navigate";
    return (
      n &&
        (Zt.document.prerendering || Rk() > 0
          ? (r = "prerender")
          : (r = n.type.replace(/_/g, "-"))),
      {
        name: t,
        value: typeof e > "u" ? -1 : e,
        rating: "good",
        delta: 0,
        entries: [],
        id: nHe(),
        navigationType: r,
      }
    );
  },
  Im = (t, e, n) => {
    try {
      if (PerformanceObserver.supportedEntryTypes.includes(t)) {
        const r = new PerformanceObserver((a) => {
          e(a.getEntries());
        });
        return r.observe(Object.assign({ type: t, buffered: !0 }, n || {})), r;
      }
    } catch {}
  },
  xv = (t, e) => {
    const n = (r) => {
      (r.type === "pagehide" || Zt.document.visibilityState === "hidden") &&
        (t(r),
        e &&
          (removeEventListener("visibilitychange", n, !0),
          removeEventListener("pagehide", n, !0)));
    };
    addEventListener("visibilitychange", n, !0),
      addEventListener("pagehide", n, !0);
  },
  rHe = (t) => {
    const e = kv("CLS", 0);
    let n,
      r = 0,
      a = [];
    const s = (o) => {
        o.forEach((u) => {
          if (!u.hadRecentInput) {
            const l = a[0],
              c = a[a.length - 1];
            r &&
            a.length !== 0 &&
            u.startTime - c.startTime < 1e3 &&
            u.startTime - l.startTime < 5e3
              ? ((r += u.value), a.push(u))
              : ((r = u.value), (a = [u])),
              r > e.value && ((e.value = r), (e.entries = a), n && n());
          }
        });
      },
      i = Im("layout-shift", s);
    if (i) {
      n = Rv(t, e);
      const o = () => {
        s(i.takeRecords()), n(!0);
      };
      return xv(o), o;
    }
  };
let eE = -1;
const aHe = () =>
    Zt.document.visibilityState === "hidden" && !Zt.document.prerendering
      ? 0
      : 1 / 0,
  iHe = () => {
    xv(({ timeStamp: t }) => {
      eE = t;
    }, !0);
  },
  kk = () => (
    eE < 0 && ((eE = aHe()), iHe()),
    {
      get firstHiddenTime() {
        return eE;
      },
    }
  ),
  oHe = (t) => {
    const e = kk(),
      n = kv("FID");
    let r;
    const a = (o) => {
        o.startTime < e.firstHiddenTime &&
          ((n.value = o.processingStart - o.startTime),
          n.entries.push(o),
          r(!0));
      },
      s = (o) => {
        o.forEach(a);
      },
      i = Im("first-input", s);
    (r = Rv(t, n)),
      i &&
        xv(() => {
          s(i.takeRecords()), i.disconnect();
        }, !0);
  };
let eq = 0,
  YC = 1 / 0,
  X_ = 0;
const uHe = (t) => {
  t.forEach((e) => {
    e.interactionId &&
      ((YC = Math.min(YC, e.interactionId)),
      (X_ = Math.max(X_, e.interactionId)),
      (eq = X_ ? (X_ - YC) / 7 + 1 : 0));
  });
};
let wO;
const lHe = () => (wO ? eq : performance.interactionCount || 0),
  cHe = () => {
    "interactionCount" in performance ||
      wO ||
      (wO = Im("event", uHe, {
        type: "event",
        buffered: !0,
        durationThreshold: 0,
      }));
  },
  tq = () => lHe(),
  F7 = 10,
  ju = [],
  XC = {},
  U7 = (t) => {
    const e = ju[ju.length - 1],
      n = XC[t.interactionId];
    if (n || ju.length < F7 || t.duration > e.latency) {
      if (n) n.entries.push(t), (n.latency = Math.max(n.latency, t.duration));
      else {
        const r = { id: t.interactionId, latency: t.duration, entries: [t] };
        (XC[r.id] = r), ju.push(r);
      }
      ju.sort((r, a) => a.latency - r.latency),
        ju.splice(F7).forEach((r) => {
          delete XC[r.id];
        });
    }
  },
  dHe = () => {
    const t = Math.min(ju.length - 1, Math.floor(tq() / 50));
    return ju[t];
  },
  pHe = (t, e) => {
    (e = e || {}), cHe();
    const n = kv("INP");
    let r;
    const a = (i) => {
        i.forEach((u) => {
          u.interactionId && U7(u),
            u.entryType === "first-input" &&
              !ju.some((c) =>
                c.entries.some(
                  (d) =>
                    u.duration === d.duration && u.startTime === d.startTime
                )
              ) &&
              U7(u);
        });
        const o = dHe();
        o &&
          o.latency !== n.value &&
          ((n.value = o.latency), (n.entries = o.entries), r());
      },
      s = Im("event", a, { durationThreshold: e.durationThreshold || 40 });
    (r = Rv(t, n, e.reportAllChanges)),
      s &&
        (s.observe({ type: "first-input", buffered: !0 }),
        xv(() => {
          a(s.takeRecords()),
            n.value < 0 && tq() > 0 && ((n.value = 0), (n.entries = [])),
            r(!0);
        }));
  },
  K7 = {},
  hHe = (t) => {
    const e = kk(),
      n = kv("LCP");
    let r;
    const a = (i) => {
        const o = i[i.length - 1];
        if (o) {
          const u = Math.max(o.startTime - Rk(), 0);
          u < e.firstHiddenTime && ((n.value = u), (n.entries = [o]), r());
        }
      },
      s = Im("largest-contentful-paint", a);
    if (s) {
      r = Rv(t, n);
      const i = () => {
        K7[n.id] ||
          (a(s.takeRecords()), s.disconnect(), (K7[n.id] = !0), r(!0));
      };
      return (
        ["keydown", "click"].forEach((o) => {
          addEventListener(o, i, { once: !0, capture: !0 });
        }),
        xv(i, !0),
        i
      );
    }
  },
  PO = (t) => {
    Zt.document &&
      (Zt.document.prerendering
        ? addEventListener("prerenderingchange", () => PO(t), !0)
        : Zt.document.readyState !== "complete"
        ? addEventListener("load", () => PO(t), !0)
        : setTimeout(t, 0));
  },
  fHe = (t, e) => {
    e = e || {};
    const n = kv("TTFB"),
      r = Rv(t, n, e.reportAllChanges);
    PO(() => {
      const a = rP();
      if (a) {
        if (
          ((n.value = Math.max(a.responseStart - Rk(), 0)),
          n.value < 0 || n.value > performance.now())
        )
          return;
        (n.entries = [a]), r(!0);
      }
    });
  },
  Sy = {},
  UT = {};
let nq, sq, rq, aq, iq;
function mHe(t, e = !1) {
  return Lv("cls", t, vHe, nq, e);
}
function oq(t, e = !1) {
  return Lv("lcp", t, bHe, rq, e);
}
function SHe(t) {
  return Lv("ttfb", t, EHe, aq);
}
function yHe(t) {
  return Lv("fid", t, _He, sq);
}
function gHe(t) {
  return Lv("inp", t, THe, iq);
}
function Wc(t, e) {
  return uq(t, e), UT[t] || (wHe(t), (UT[t] = !0)), lq(t, e);
}
function Cm(t, e) {
  const n = Sy[t];
  if (!(!n || !n.length))
    for (const r of n)
      try {
        r(e);
      } catch (a) {
        Mn &&
          Be.error(
            `Error while triggering instrumentation handler.
Type: ${t}
Name: ${Sl(r)}
Error:`,
            a
          );
      }
}
function vHe() {
  return rHe((t) => {
    Cm("cls", { metric: t }), (nq = t);
  });
}
function _He() {
  return oHe((t) => {
    Cm("fid", { metric: t }), (sq = t);
  });
}
function bHe() {
  return hHe((t) => {
    Cm("lcp", { metric: t }), (rq = t);
  });
}
function EHe() {
  return fHe((t) => {
    Cm("ttfb", { metric: t }), (aq = t);
  });
}
function THe() {
  return pHe((t) => {
    Cm("inp", { metric: t }), (iq = t);
  });
}
function Lv(t, e, n, r, a = !1) {
  uq(t, e);
  let s;
  return (
    UT[t] || ((s = n()), (UT[t] = !0)),
    r && e({ metric: r }),
    lq(t, e, a ? s : void 0)
  );
}
function wHe(t) {
  const e = {};
  t === "event" && (e.durationThreshold = 0),
    Im(
      t,
      (n) => {
        Cm(t, { entries: n });
      },
      e
    );
}
function uq(t, e) {
  (Sy[t] = Sy[t] || []), Sy[t].push(e);
}
function lq(t, e, n) {
  return () => {
    n && n();
    const r = Sy[t];
    if (!r) return;
    const a = r.indexOf(e);
    a !== -1 && r.splice(a, 1);
  };
}
function QC(t) {
  return typeof t == "number" && isFinite(t);
}
function Gf(t, { startTimestamp: e, ...n }) {
  return (
    e && t.startTimestamp > e && (t.startTimestamp = e),
    t.startChild({ startTimestamp: e, ...n })
  );
}
const PHe = 2147483647;
function yr(t) {
  return t / 1e3;
}
function xk() {
  return Zt && Zt.addEventListener && Zt.performance;
}
let B7 = 0,
  Ws = {},
  Yo,
  yy;
function cq() {
  const t = xk();
  if (t && Lr) {
    t.mark && Zt.performance.mark("sentry-tracing-init");
    const e = AHe(),
      n = IHe(),
      r = CHe(),
      a = OHe();
    return () => {
      e(), n(), r(), a();
    };
  }
  return () => {};
}
function dq() {
  Wc("longtask", ({ entries: t }) => {
    for (const e of t) {
      const n = _u();
      if (!n) return;
      const r = yr(Lr + e.startTime),
        a = yr(e.duration);
      n.startChild({
        description: "Main UI thread blocked",
        op: "ui.long-task",
        origin: "auto.ui.browser.metrics",
        startTimestamp: r,
        endTimestamp: r + a,
      });
    }
  });
}
function pq() {
  Wc("event", ({ entries: t }) => {
    for (const e of t) {
      const n = _u();
      if (!n) return;
      if (e.name === "click") {
        const r = yr(Lr + e.startTime),
          a = yr(e.duration),
          s = {
            description: $c(e.target),
            op: `ui.interaction.${e.name}`,
            origin: "auto.ui.browser.metrics",
            startTimestamp: r,
            endTimestamp: r + a,
          },
          i = j$(e.target);
        i && (s.attributes = { "ui.component_name": i }), n.startChild(s);
      }
    }
  });
}
function hq(t, e) {
  if (xk() && Lr) {
    const r = HHe(t, e);
    return () => {
      r();
    };
  }
  return () => {};
}
function IHe() {
  return mHe(({ metric: t }) => {
    const e = t.entries[t.entries.length - 1];
    e &&
      (Mn && Be.log("[Measurements] Adding CLS"),
      (Ws.cls = { value: t.value, unit: "" }),
      (yy = e));
  }, !0);
}
function CHe() {
  return oq(({ metric: t }) => {
    const e = t.entries[t.entries.length - 1];
    e &&
      (Mn && Be.log("[Measurements] Adding LCP"),
      (Ws.lcp = { value: t.value, unit: "millisecond" }),
      (Yo = e));
  }, !0);
}
function AHe() {
  return yHe(({ metric: t }) => {
    const e = t.entries[t.entries.length - 1];
    if (!e) return;
    const n = yr(Lr),
      r = yr(e.startTime);
    Mn && Be.log("[Measurements] Adding FID"),
      (Ws.fid = { value: t.value, unit: "millisecond" }),
      (Ws["mark.fid"] = { value: n + r, unit: "second" });
  });
}
function OHe() {
  return SHe(({ metric: t }) => {
    t.entries[t.entries.length - 1] &&
      (Mn && Be.log("[Measurements] Adding TTFB"),
      (Ws.ttfb = { value: t.value, unit: "millisecond" }));
  });
}
const V7 = {
  click: "click",
  pointerdown: "click",
  pointerup: "click",
  mousedown: "click",
  mouseup: "click",
  touchstart: "click",
  touchend: "click",
  mouseover: "hover",
  mouseout: "hover",
  mouseenter: "hover",
  mouseleave: "hover",
  pointerover: "hover",
  pointerout: "hover",
  pointerenter: "hover",
  pointerleave: "hover",
  dragstart: "drag",
  dragend: "drag",
  drag: "drag",
  dragenter: "drag",
  dragleave: "drag",
  dragover: "drag",
  drop: "drag",
  keydown: "press",
  keyup: "press",
  keypress: "press",
  input: "press",
};
function HHe(t, e) {
  return gHe(({ metric: n }) => {
    if (n.value === void 0) return;
    const r = n.entries.find(
        (H) => H.duration === n.value && V7[H.name] !== void 0
      ),
      a = An();
    if (!r || !a) return;
    const s = V7[r.name],
      i = a.getOptions(),
      o = yr(Lr + r.startTime),
      u = yr(n.value),
      l = r.interactionId !== void 0 ? t[r.interactionId] : void 0;
    if (l === void 0) return;
    const {
        routeName: c,
        parentContext: d,
        activeTransaction: p,
        user: m,
        replayId: y,
      } = l,
      I = m !== void 0 ? m.email || m.id || m.ip_address : void 0,
      O = p !== void 0 ? p.getProfileId() : void 0,
      g = new tP({
        startTimestamp: o,
        endTimestamp: o + u,
        op: `ui.interaction.${s}`,
        name: $c(r.target),
        attributes: {
          release: i.release,
          environment: i.environment,
          transaction: c,
          ...(I !== void 0 && I !== "" ? { user: I } : {}),
          ...(O !== void 0 ? { profile_id: O } : {}),
          ...(y !== void 0 ? { replay_id: y } : {}),
        },
        exclusiveTime: n.value,
        measurements: { inp: { value: n.value, unit: "millisecond" } },
      }),
      C = GHe(d, i, e);
    if (C && Math.random() < C) {
      const H = g ? pOe([g], a.getDsn()) : void 0,
        B = a && a.getTransport();
      B &&
        H &&
        B.send(H).then(null, (he) => {
          Mn && Be.error("Error while sending interaction:", he);
        });
      return;
    }
  });
}
function fq(t) {
  const e = xk();
  if (!e || !Zt.performance.getEntries || !Lr) return;
  Mn && Be.log("[Tracing] Adding & adjusting spans using Performance API");
  const n = yr(Lr),
    r = e.getEntries(),
    { op: a, start_timestamp: s } = es(t);
  if (
    (r.slice(B7).forEach((i) => {
      const o = yr(i.startTime),
        u = yr(i.duration);
      if (!(t.op === "navigation" && s && n + o < s))
        switch (i.entryType) {
          case "navigation": {
            RHe(t, i, n);
            break;
          }
          case "mark":
          case "paint":
          case "measure": {
            NHe(t, i, o, u, n);
            const l = kk(),
              c = i.startTime < l.firstHiddenTime;
            i.name === "first-paint" &&
              c &&
              (Mn && Be.log("[Measurements] Adding FP"),
              (Ws.fp = { value: i.startTime, unit: "millisecond" })),
              i.name === "first-contentful-paint" &&
                c &&
                (Mn && Be.log("[Measurements] Adding FCP"),
                (Ws.fcp = { value: i.startTime, unit: "millisecond" }));
            break;
          }
          case "resource": {
            xHe(t, i, i.name, o, u, n);
            break;
          }
        }
    }),
    (B7 = Math.max(r.length - 1, 0)),
    LHe(t),
    a === "pageload")
  ) {
    DHe(Ws),
      ["fcp", "fp", "lcp"].forEach((o) => {
        if (!Ws[o] || !s || n >= s) return;
        const u = Ws[o].value,
          l = n + yr(u),
          c = Math.abs((l - s) * 1e3),
          d = c - u;
        Mn && Be.log(`[Measurements] Normalized ${o} from ${u} to ${c} (${d})`),
          (Ws[o].value = c);
      });
    const i = Ws["mark.fid"];
    i &&
      Ws.fid &&
      (Gf(t, {
        description: "first input delay",
        endTimestamp: i.value + yr(Ws.fid.value),
        op: "ui.action",
        origin: "auto.ui.browser.metrics",
        startTimestamp: i.value,
      }),
      delete Ws["mark.fid"]),
      "fcp" in Ws || delete Ws.cls,
      Object.keys(Ws).forEach((o) => {
        LW(o, Ws[o].value, Ws[o].unit);
      }),
      MHe(t);
  }
  (Yo = void 0), (yy = void 0), (Ws = {});
}
function NHe(t, e, n, r, a) {
  const s = a + n,
    i = s + r;
  return (
    Gf(t, {
      description: e.name,
      endTimestamp: i,
      op: e.entryType,
      origin: "auto.resource.browser.metrics",
      startTimestamp: s,
    }),
    s
  );
}
function RHe(t, e, n) {
  [
    "unloadEvent",
    "redirect",
    "domContentLoadedEvent",
    "loadEvent",
    "connect",
  ].forEach((r) => {
    Q_(t, e, r, n);
  }),
    Q_(t, e, "secureConnection", n, "TLS/SSL", "connectEnd"),
    Q_(t, e, "fetch", n, "cache", "domainLookupStart"),
    Q_(t, e, "domainLookup", n, "DNS"),
    kHe(t, e, n);
}
function Q_(t, e, n, r, a, s) {
  const i = s ? e[s] : e[`${n}End`],
    o = e[`${n}Start`];
  !o ||
    !i ||
    Gf(t, {
      op: "browser",
      origin: "auto.browser.browser.metrics",
      description: a || n,
      startTimestamp: r + yr(o),
      endTimestamp: r + yr(i),
    });
}
function kHe(t, e, n) {
  e.responseEnd &&
    (Gf(t, {
      op: "browser",
      origin: "auto.browser.browser.metrics",
      description: "request",
      startTimestamp: n + yr(e.requestStart),
      endTimestamp: n + yr(e.responseEnd),
    }),
    Gf(t, {
      op: "browser",
      origin: "auto.browser.browser.metrics",
      description: "response",
      startTimestamp: n + yr(e.responseStart),
      endTimestamp: n + yr(e.responseEnd),
    }));
}
function xHe(t, e, n, r, a, s) {
  if (e.initiatorType === "xmlhttprequest" || e.initiatorType === "fetch")
    return;
  const i = Jb(n),
    o = {};
  JC(o, e, "transferSize", "http.response_transfer_size"),
    JC(o, e, "encodedBodySize", "http.response_content_length"),
    JC(o, e, "decodedBodySize", "http.decoded_response_content_length"),
    "renderBlockingStatus" in e &&
      (o["resource.render_blocking_status"] = e.renderBlockingStatus),
    i.protocol && (o["url.scheme"] = i.protocol.split(":").pop()),
    i.host && (o["server.address"] = i.host),
    (o["url.same_origin"] = n.includes(Zt.location.origin));
  const u = s + r,
    l = u + a;
  Gf(t, {
    description: n.replace(Zt.location.origin, ""),
    endTimestamp: l,
    op: e.initiatorType ? `resource.${e.initiatorType}` : "resource.other",
    origin: "auto.resource.browser.metrics",
    startTimestamp: u,
    data: o,
  });
}
function LHe(t) {
  const e = Zt.navigator;
  if (!e) return;
  const n = e.connection;
  n &&
    (n.effectiveType && t.setTag("effectiveConnectionType", n.effectiveType),
    n.type && t.setTag("connectionType", n.type),
    QC(n.rtt) &&
      (Ws["connection.rtt"] = { value: n.rtt, unit: "millisecond" })),
    QC(e.deviceMemory) && t.setTag("deviceMemory", `${e.deviceMemory} GB`),
    QC(e.hardwareConcurrency) &&
      t.setTag("hardwareConcurrency", String(e.hardwareConcurrency));
}
function MHe(t) {
  Yo &&
    (Mn && Be.log("[Measurements] Adding LCP Data"),
    Yo.element && t.setTag("lcp.element", $c(Yo.element)),
    Yo.id && t.setTag("lcp.id", Yo.id),
    Yo.url && t.setTag("lcp.url", Yo.url.trim().slice(0, 200)),
    t.setTag("lcp.size", Yo.size)),
    yy &&
      yy.sources &&
      (Mn && Be.log("[Measurements] Adding CLS Data"),
      yy.sources.forEach((e, n) =>
        t.setTag(`cls.source.${n + 1}`, $c(e.node))
      ));
}
function JC(t, e, n, r) {
  const a = e[n];
  a != null && a < PHe && (t[r] = a);
}
function DHe(t) {
  const e = rP();
  if (!e) return;
  const { responseStart: n, requestStart: r } = e;
  r <= n &&
    (Mn && Be.log("[Measurements] Adding TTFB Request Time"),
    (t["ttfb.requestTime"] = { value: n - r, unit: "millisecond" }));
}
function GHe(t, e, n) {
  if (!Pm(e)) return !1;
  let r;
  return (
    t !== void 0 && typeof e.tracesSampler == "function"
      ? (r = e.tracesSampler({
          transactionContext: t,
          name: t.name,
          parentSampled: t.parentSampled,
          attributes: { ...t.data, ...t.attributes },
          location: Zt.location,
        }))
      : t !== void 0 && t.sampled !== void 0
      ? (r = t.sampled)
      : typeof e.tracesSampleRate < "u"
      ? (r = e.tracesSampleRate)
      : (r = 1),
    xW(r)
      ? r === !0
        ? n
        : r === !1
        ? 0
        : r * n
      : (Mn &&
          Be.warn(
            "[Tracing] Discarding interaction span because of invalid sample rate."
          ),
        !1)
  );
}
function FHe(t, e, n, r, a = "auto.http.browser") {
  if (!Pm() || !t.fetchData) return;
  const s = e(t.fetchData.url);
  if (t.endTimestamp && s) {
    const d = t.fetchData.__span;
    if (!d) return;
    const p = r[d];
    if (p) {
      if (t.response) {
        Pk(p, t.response.status);
        const m =
          t.response &&
          t.response.headers &&
          t.response.headers.get("content-length");
        if (m) {
          const y = parseInt(m);
          y > 0 && p.setAttribute("http.response_content_length", y);
        }
      } else t.error && p.setStatus("internal_error");
      p.end(), delete r[d];
    }
    return;
  }
  const i = er(),
    o = An(),
    { method: u, url: l } = t.fetchData,
    c = s
      ? Ck({
          name: `${u} ${l}`,
          onlyIfParent: !0,
          attributes: { url: l, type: "fetch", "http.method": u, [Ih]: a },
          op: "http.client",
        })
      : void 0;
  if (
    (c &&
      ((t.fetchData.__span = c.spanContext().spanId),
      (r[c.spanContext().spanId] = c)),
    n(t.fetchData.url) && o)
  ) {
    const d = t.args[0];
    t.args[1] = t.args[1] || {};
    const p = t.args[1];
    p.headers = UHe(d, o, i, p, c);
  }
  return c;
}
function UHe(t, e, n, r, a) {
  const s = a || n.getSpan(),
    i = Cu(),
    {
      traceId: o,
      spanId: u,
      sampled: l,
      dsc: c,
    } = { ...i.getPropagationContext(), ...n.getPropagationContext() },
    d = s ? q0(s) : yk(o, u, l),
    p = uW(c || (s ? Df(s) : Q0(o, e, n))),
    m =
      r.headers ||
      (typeof Request < "u" && ml(t, Request) ? t.headers : void 0);
  if (m)
    if (typeof Headers < "u" && ml(m, Headers)) {
      const y = new Headers(m);
      return y.append("sentry-trace", d), p && y.append(gO, p), y;
    } else if (Array.isArray(m)) {
      const y = [...m, ["sentry-trace", d]];
      return p && y.push([gO, p]), y;
    } else {
      const y = "baggage" in m ? m.baggage : void 0,
        I = [];
      return (
        Array.isArray(y) ? I.push(...y) : y && I.push(y),
        p && I.push(p),
        {
          ...m,
          "sentry-trace": d,
          baggage: I.length > 0 ? I.join(",") : void 0,
        }
      );
    }
  else return { "sentry-trace": d, baggage: p };
}
const IO = ["localhost", /^\/(?!\/)/],
  KT = {
    traceFetch: !0,
    traceXHR: !0,
    enableHTTPTimings: !0,
    tracingOrigins: IO,
    tracePropagationTargets: IO,
  };
function mq(t) {
  const {
      traceFetch: e,
      traceXHR: n,
      tracePropagationTargets: r,
      tracingOrigins: a,
      shouldCreateSpanForRequest: s,
      enableHTTPTimings: i,
    } = { traceFetch: KT.traceFetch, traceXHR: KT.traceXHR, ...t },
    o = typeof s == "function" ? s : (c) => !0,
    u = (c) => jHe(c, r || a),
    l = {};
  e &&
    hk((c) => {
      const d = FHe(c, o, u, l);
      i && d && j7(d);
    }),
    n &&
      fk((c) => {
        const d = zHe(c, o, u, l);
        i && d && j7(d);
      });
}
function KHe(t) {
  return (
    t.entryType === "resource" &&
    "initiatorType" in t &&
    typeof t.nextHopProtocol == "string" &&
    (t.initiatorType === "fetch" || t.initiatorType === "xmlhttprequest")
  );
}
function j7(t) {
  const { url: e } = es(t).data || {};
  if (!e || typeof e != "string") return;
  const n = Wc("resource", ({ entries: r }) => {
    r.forEach((a) => {
      KHe(a) &&
        a.name.endsWith(e) &&
        (VHe(a).forEach((i) => t.setAttribute(...i)), setTimeout(n));
    });
  });
}
function BHe(t) {
  let e = "unknown",
    n = "unknown",
    r = "";
  for (const a of t) {
    if (a === "/") {
      [e, n] = t.split("/");
      break;
    }
    if (!isNaN(Number(a))) {
      (e = r === "h" ? "http" : r), (n = t.split(r)[1]);
      break;
    }
    r += a;
  }
  return r === t && (e = r), { name: e, version: n };
}
function zo(t = 0) {
  return ((Lr || performance.timeOrigin) + t) / 1e3;
}
function VHe(t) {
  const { name: e, version: n } = BHe(t.nextHopProtocol),
    r = [];
  return (
    r.push(["network.protocol.version", n], ["network.protocol.name", e]),
    Lr
      ? [
          ...r,
          ["http.request.redirect_start", zo(t.redirectStart)],
          ["http.request.fetch_start", zo(t.fetchStart)],
          ["http.request.domain_lookup_start", zo(t.domainLookupStart)],
          ["http.request.domain_lookup_end", zo(t.domainLookupEnd)],
          ["http.request.connect_start", zo(t.connectStart)],
          ["http.request.secure_connection_start", zo(t.secureConnectionStart)],
          ["http.request.connection_end", zo(t.connectEnd)],
          ["http.request.request_start", zo(t.requestStart)],
          ["http.request.response_start", zo(t.responseStart)],
          ["http.request.response_end", zo(t.responseEnd)],
        ]
      : r
  );
}
function jHe(t, e) {
  return bm(t, e || IO);
}
function zHe(t, e, n, r) {
  const a = t.xhr,
    s = a && a[Sc];
  if (!Pm() || !a || a.__sentry_own_request__ || !s) return;
  const i = e(s.url);
  if (t.endTimestamp && i) {
    const d = a.__sentry_xhr_span_id__;
    if (!d) return;
    const p = r[d];
    p &&
      s.status_code !== void 0 &&
      (Pk(p, s.status_code), p.end(), delete r[d]);
    return;
  }
  const o = er(),
    u = Cu(),
    l = i
      ? Ck({
          name: `${s.method} ${s.url}`,
          onlyIfParent: !0,
          attributes: {
            type: "xhr",
            "http.method": s.method,
            url: s.url,
            [Ih]: "auto.http.browser",
          },
          op: "http.client",
        })
      : void 0;
  l &&
    ((a.__sentry_xhr_span_id__ = l.spanContext().spanId),
    (r[a.__sentry_xhr_span_id__] = l));
  const c = An();
  if (a.setRequestHeader && n(s.url) && c) {
    const {
        traceId: d,
        spanId: p,
        sampled: m,
        dsc: y,
      } = { ...u.getPropagationContext(), ...o.getPropagationContext() },
      I = l ? q0(l) : yk(d, p, m),
      O = uW(y || (l ? Df(l) : Q0(d, c, o)));
    $He(a, I, O);
  }
  return l;
}
function $He(t, e, n) {
  try {
    t.setRequestHeader("sentry-trace", e), n && t.setRequestHeader(gO, n);
  } catch {}
}
function WHe(t, e = !0, n = !0) {
  if (!Zt || !Zt.location) {
    Mn &&
      Be.warn(
        "Could not initialize routing instrumentation due to invalid location"
      );
    return;
  }
  let r = Zt.location.href,
    a;
  e &&
    (a = t({
      name: Zt.location.pathname,
      startTimestamp: Lr ? Lr / 1e3 : void 0,
      op: "pageload",
      origin: "auto.pageload.browser",
      metadata: { source: "url" },
    })),
    n &&
      Av(({ to: s, from: i }) => {
        if (i === void 0 && r && r.indexOf(s) !== -1) {
          r = void 0;
          return;
        }
        i !== s &&
          ((r = void 0),
          a &&
            (Mn &&
              Be.log(
                `[Tracing] Finishing current transaction with op: ${a.op}`
              ),
            a.end()),
          (a = t({
            name: Zt.location.pathname,
            op: "navigation",
            origin: "auto.navigation.browser",
            metadata: { source: "url" },
          })));
      });
}
const qHe = "BrowserTracing",
  YHe = {
    ...my,
    markBackgroundTransactions: !0,
    routingInstrumentation: WHe,
    startTransactionOnLocationChange: !0,
    startTransactionOnPageLoad: !0,
    enableLongTask: !0,
    enableInp: !1,
    interactionsSampleRate: 1,
    _experiments: {},
    ...KT,
  },
  z7 = 10;
class XHe {
  constructor(e) {
    (this.name = qHe),
      (this._hasSetTracePropagationTargets = !1),
      Ak(),
      Mn &&
        (this._hasSetTracePropagationTargets = !!(
          e &&
          (e.tracePropagationTargets || e.tracingOrigins)
        )),
      (this.options = { ...YHe, ...e }),
      this.options._experiments.enableLongTask !== void 0 &&
        (this.options.enableLongTask =
          this.options._experiments.enableLongTask),
      e &&
        !e.tracePropagationTargets &&
        e.tracingOrigins &&
        (this.options.tracePropagationTargets = e.tracingOrigins),
      (this._collectWebVitals = cq()),
      (this._interactionIdToRouteNameMapping = {}),
      this.options.enableInp &&
        hq(
          this._interactionIdToRouteNameMapping,
          this.options.interactionsSampleRate
        ),
      this.options.enableLongTask && dq(),
      this.options._experiments.enableInteractions && pq(),
      (this._latestRoute = { name: void 0, context: void 0 });
  }
  setupOnce(e, n) {
    this._getCurrentHub = n;
    const a = n().getClient(),
      s = a && a.getOptions(),
      {
        routingInstrumentation: i,
        startTransactionOnLocationChange: o,
        startTransactionOnPageLoad: u,
        markBackgroundTransactions: l,
        traceFetch: c,
        traceXHR: d,
        shouldCreateSpanForRequest: p,
        enableHTTPTimings: m,
        _experiments: y,
      } = this.options,
      I = s && s.tracePropagationTargets,
      O = I || this.options.tracePropagationTargets;
    Mn &&
      this._hasSetTracePropagationTargets &&
      I &&
      Be.warn(
        "[Tracing] The `tracePropagationTargets` option was set in the BrowserTracing integration and top level `Sentry.init`. The top level `Sentry.init` value is being used."
      ),
      i(
        (g) => {
          const C = this._createRouteTransaction(g);
          return (
            this.options._experiments.onStartRouteTransaction &&
              this.options._experiments.onStartRouteTransaction(C, g, n),
            C
          );
        },
        u,
        o
      ),
      l && ZW(),
      y.enableInteractions && this._registerInteractionListener(),
      this.options.enableInp && this._registerInpInteractionListener(),
      mq({
        traceFetch: c,
        traceXHR: d,
        tracePropagationTargets: O,
        shouldCreateSpanForRequest: p,
        enableHTTPTimings: m,
      });
  }
  _createRouteTransaction(e) {
    if (!this._getCurrentHub) {
      Mn &&
        Be.warn(
          `[Tracing] Did not create ${e.op} transaction because _getCurrentHub is invalid.`
        );
      return;
    }
    const n = this._getCurrentHub(),
      {
        beforeNavigate: r,
        idleTimeout: a,
        finalTimeout: s,
        heartbeatInterval: i,
      } = this.options,
      o = e.op === "pageload";
    let u;
    if (o) {
      const m = o ? $7("sentry-trace") : "",
        y = o ? $7("baggage") : void 0,
        { traceId: I, dsc: O, parentSpanId: g, sampled: C } = lW(m, y);
      u = {
        traceId: I,
        parentSpanId: g,
        parentSampled: C,
        ...e,
        metadata: { ...e.metadata, dynamicSamplingContext: O },
        trimEnd: !0,
      };
    } else u = { trimEnd: !0, ...e };
    const l = typeof r == "function" ? r(u) : u,
      c = l === void 0 ? { ...u, sampled: !1 } : l;
    (c.metadata =
      c.name !== u.name ? { ...c.metadata, source: "custom" } : c.metadata),
      (this._latestRoute.name = c.name),
      (this._latestRoute.context = c),
      c.sampled === !1 &&
        Mn &&
        Be.log(
          `[Tracing] Will not send ${c.op} transaction because of beforeNavigate.`
        ),
      Mn && Be.log(`[Tracing] Starting ${c.op} transaction on scope`);
    const { location: d } = Zt,
      p = GT(n, c, a, s, !0, { location: d }, i, o);
    return (
      o &&
        (Zt.document.addEventListener("readystatechange", () => {
          ["interactive", "complete"].includes(Zt.document.readyState) &&
            p.sendAutoFinishSignal();
        }),
        ["interactive", "complete"].includes(Zt.document.readyState) &&
          p.sendAutoFinishSignal()),
      p.registerBeforeFinishCallback((m) => {
        this._collectWebVitals(), fq(m);
      }),
      p
    );
  }
  _registerInteractionListener() {
    let e;
    const n = () => {
      const {
          idleTimeout: r,
          finalTimeout: a,
          heartbeatInterval: s,
        } = this.options,
        i = "ui.action.click",
        o = _u();
      if (o && o.op && ["navigation", "pageload"].includes(o.op)) {
        Mn &&
          Be.warn(
            `[Tracing] Did not create ${i} transaction because a pageload or navigation transaction is in progress.`
          );
        return;
      }
      if (
        (e &&
          (e.setFinishReason("interactionInterrupted"), e.end(), (e = void 0)),
        !this._getCurrentHub)
      ) {
        Mn &&
          Be.warn(
            `[Tracing] Did not create ${i} transaction because _getCurrentHub is invalid.`
          );
        return;
      }
      if (!this._latestRoute.name) {
        Mn &&
          Be.warn(
            `[Tracing] Did not create ${i} transaction because _latestRouteName is missing.`
          );
        return;
      }
      const u = this._getCurrentHub(),
        { location: l } = Zt,
        c = {
          name: this._latestRoute.name,
          op: i,
          trimEnd: !0,
          data: {
            [Di]: this._latestRoute.context
              ? QHe(this._latestRoute.context)
              : "url",
          },
        };
      e = GT(u, c, r, a, !0, { location: l }, s);
    };
    ["click"].forEach((r) => {
      addEventListener(r, n, { once: !1, capture: !0 });
    });
  }
  _registerInpInteractionListener() {
    const e = ({ entries: n }) => {
      const r = An(),
        a =
          r !== void 0 && r.getIntegrationByName !== void 0
            ? r.getIntegrationByName("Replay")
            : void 0,
        s = a !== void 0 ? a.getReplayId() : void 0,
        i = _u(),
        o = er(),
        u = o !== void 0 ? o.getUser() : void 0;
      n.forEach((l) => {
        if (JHe(l)) {
          const c = l.interactionId;
          if (c === void 0) return;
          const d = this._interactionIdToRouteNameMapping[c],
            p = l.duration,
            m = l.startTime,
            y = Object.keys(this._interactionIdToRouteNameMapping),
            I =
              y.length > 0
                ? y.reduce((O, g) =>
                    this._interactionIdToRouteNameMapping[O].duration <
                    this._interactionIdToRouteNameMapping[g].duration
                      ? O
                      : g
                  )
                : void 0;
          if (
            (l.entryType === "first-input" &&
              y
                .map((g) => this._interactionIdToRouteNameMapping[g])
                .some((g) => g.duration === p && g.startTime === m)) ||
            !c
          )
            return;
          if (d) d.duration = Math.max(d.duration, p);
          else if (
            y.length < z7 ||
            I === void 0 ||
            p > this._interactionIdToRouteNameMapping[I].duration
          ) {
            const O = this._latestRoute.name,
              g = this._latestRoute.context;
            O &&
              g &&
              (I &&
                Object.keys(this._interactionIdToRouteNameMapping).length >=
                  z7 &&
                delete this._interactionIdToRouteNameMapping[I],
              (this._interactionIdToRouteNameMapping[c] = {
                routeName: O,
                duration: p,
                parentContext: g,
                user: u,
                activeTransaction: i,
                replayId: s,
                startTime: m,
              }));
          }
        }
      });
    };
    Wc("event", e), Wc("first-input", e);
  }
}
function $7(t) {
  const e = V$(`meta[name=${t}]`);
  return e ? e.getAttribute("content") : void 0;
}
function QHe(t) {
  const e = t.attributes && t.attributes[Di],
    n = t.data && t.data[Di],
    r = t.metadata && t.metadata.source;
  return e || n || r;
}
function JHe(t) {
  return "duration" in t;
}
const ZHe = "BrowserTracing",
  eNe = {
    ...my,
    instrumentNavigation: !0,
    instrumentPageLoad: !0,
    markBackgroundSpan: !0,
    enableLongTask: !0,
    enableInp: !1,
    interactionsSampleRate: 1,
    _experiments: {},
    ...KT,
  },
  tNe = (t = {}) => {
    const e = Mn ? !!(t.tracePropagationTargets || t.tracingOrigins) : !1;
    Ak(),
      !t.tracePropagationTargets &&
        t.tracingOrigins &&
        (t.tracePropagationTargets = t.tracingOrigins);
    const n = { ...eNe, ...t },
      r = cq(),
      a = {};
    n.enableInp && hq(a, n.interactionsSampleRate),
      n.enableLongTask && dq(),
      n._experiments.enableInteractions && pq();
    const s = { name: void 0, context: void 0 };
    function i(o) {
      const u = Zn(),
        {
          beforeStartSpan: l,
          idleTimeout: c,
          finalTimeout: d,
          heartbeatInterval: p,
        } = n,
        m = o.op === "pageload";
      let y;
      if (m) {
        const C = m ? W7("sentry-trace") : "",
          H = m ? W7("baggage") : void 0,
          { traceId: B, dsc: he, parentSpanId: de, sampled: U } = lW(C, H);
        y = {
          traceId: B,
          parentSpanId: de,
          parentSampled: U,
          ...o,
          metadata: { ...o.metadata, dynamicSamplingContext: he },
          trimEnd: !0,
        };
      } else y = { trimEnd: !0, ...o };
      const I = l ? l(y) : y;
      (I.metadata =
        I.name !== y.name ? { ...I.metadata, source: "custom" } : I.metadata),
        (s.name = I.name),
        (s.context = I),
        I.sampled === !1 &&
          Mn &&
          Be.log(
            `[Tracing] Will not send ${I.op} transaction because of beforeNavigate.`
          ),
        Mn && Be.log(`[Tracing] Starting ${I.op} transaction on scope`);
      const { location: O } = Zt,
        g = GT(u, I, c, d, !0, { location: O }, p, m);
      return (
        m &&
          Zt.document &&
          (Zt.document.addEventListener("readystatechange", () => {
            ["interactive", "complete"].includes(Zt.document.readyState) &&
              g.sendAutoFinishSignal();
          }),
          ["interactive", "complete"].includes(Zt.document.readyState) &&
            g.sendAutoFinishSignal()),
        g.registerBeforeFinishCallback((C) => {
          r(), fq(C);
        }),
        g
      );
    }
    return {
      name: ZHe,
      setupOnce: () => {},
      afterAllSetup(o) {
        const u = o.getOptions(),
          {
            markBackgroundSpan: l,
            traceFetch: c,
            traceXHR: d,
            shouldCreateSpanForRequest: p,
            enableHTTPTimings: m,
            _experiments: y,
          } = n,
          I = u && u.tracePropagationTargets,
          O = I || n.tracePropagationTargets;
        Mn &&
          e &&
          I &&
          Be.warn(
            "[Tracing] The `tracePropagationTargets` option was set in the BrowserTracing integration and top level `Sentry.init`. The top level `Sentry.init` value is being used."
          );
        let g,
          C = Zt.location && Zt.location.href;
        if (
          (o.on &&
            (o.on("startNavigationSpan", (H) => {
              g &&
                (Mn &&
                  Be.log(
                    `[Tracing] Finishing current transaction with op: ${
                      es(g).op
                    }`
                  ),
                g.end()),
                (g = i({ op: "navigation", ...H }));
            }),
            o.on("startPageLoadSpan", (H) => {
              g &&
                (Mn &&
                  Be.log(
                    `[Tracing] Finishing current transaction with op: ${
                      es(g).op
                    }`
                  ),
                g.end()),
                (g = i({ op: "pageload", ...H }));
            })),
          n.instrumentPageLoad && o.emit && Zt.location)
        ) {
          const H = {
            name: Zt.location.pathname,
            startTimestamp: Lr ? Lr / 1e3 : void 0,
            origin: "auto.pageload.browser",
            attributes: { [Di]: "url" },
          };
          nNe(o, H);
        }
        n.instrumentNavigation &&
          o.emit &&
          Zt.location &&
          Av(({ to: H, from: B }) => {
            if (B === void 0 && C && C.indexOf(H) !== -1) {
              C = void 0;
              return;
            }
            if (B !== H) {
              C = void 0;
              const he = {
                name: Zt.location.pathname,
                origin: "auto.navigation.browser",
                attributes: { [Di]: "url" },
              };
              sNe(o, he);
            }
          }),
          l && ZW(),
          y.enableInteractions && rNe(n, s),
          n.enableInp && iNe(a, s),
          mq({
            traceFetch: c,
            traceXHR: d,
            tracePropagationTargets: O,
            shouldCreateSpanForRequest: p,
            enableHTTPTimings: m,
          });
      },
      options: n,
    };
  };
function nNe(t, e) {
  if (!t.emit) return;
  t.emit("startPageLoadSpan", e);
  const n = Nv();
  return (n && es(n).op) === "pageload" ? n : void 0;
}
function sNe(t, e) {
  if (!t.emit) return;
  t.emit("startNavigationSpan", e);
  const n = Nv();
  return (n && es(n).op) === "navigation" ? n : void 0;
}
function W7(t) {
  const e = V$(`meta[name=${t}]`);
  return e ? e.getAttribute("content") : void 0;
}
function rNe(t, e) {
  let n;
  const r = () => {
    const { idleTimeout: a, finalTimeout: s, heartbeatInterval: i } = t,
      o = "ui.action.click",
      u = _u();
    if (u && u.op && ["navigation", "pageload"].includes(u.op)) {
      Mn &&
        Be.warn(
          `[Tracing] Did not create ${o} transaction because a pageload or navigation transaction is in progress.`
        );
      return;
    }
    if (
      (n &&
        (n.setFinishReason("interactionInterrupted"), n.end(), (n = void 0)),
      !e.name)
    ) {
      Mn &&
        Be.warn(
          `[Tracing] Did not create ${o} transaction because _latestRouteName is missing.`
        );
      return;
    }
    const { location: l } = Zt,
      c = {
        name: e.name,
        op: o,
        trimEnd: !0,
        data: { [Di]: e.context ? oNe(e.context) : "url" },
      };
    n = GT(Zn(), c, a, s, !0, { location: l }, i);
  };
  ["click"].forEach((a) => {
    addEventListener(a, r, { once: !1, capture: !0 });
  });
}
function aNe(t) {
  return "duration" in t;
}
const q7 = 10;
function iNe(t, e) {
  const n = ({ entries: r }) => {
    const a = An(),
      s =
        a !== void 0 && a.getIntegrationByName !== void 0
          ? a.getIntegrationByName("Replay")
          : void 0,
      i = s !== void 0 ? s.getReplayId() : void 0,
      o = _u(),
      u = er(),
      l = u !== void 0 ? u.getUser() : void 0;
    r.forEach((c) => {
      if (aNe(c)) {
        const d = c.interactionId;
        if (d === void 0) return;
        const p = t[d],
          m = c.duration,
          y = c.startTime,
          I = Object.keys(t),
          O =
            I.length > 0
              ? I.reduce((g, C) => (t[g].duration < t[C].duration ? g : C))
              : void 0;
        if (
          (c.entryType === "first-input" &&
            I.map((C) => t[C]).some(
              (C) => C.duration === m && C.startTime === y
            )) ||
          !d
        )
          return;
        if (p) p.duration = Math.max(p.duration, m);
        else if (I.length < q7 || O === void 0 || m > t[O].duration) {
          const g = e.name,
            C = e.context;
          g &&
            C &&
            (O && Object.keys(t).length >= q7 && delete t[O],
            (t[d] = {
              routeName: g,
              duration: m,
              parentContext: C,
              user: l,
              activeTransaction: o,
              replayId: i,
              startTime: y,
            }));
        }
      }
    });
  };
  Wc("event", n), Wc("first-input", n);
}
function oNe(t) {
  const e = t.attributes && t.attributes[Di],
    n = t.data && t.data[Di],
    r = t.metadata && t.metadata.source;
  return e || n || r;
}
const qt = wn;
let CO = 0;
function Sq() {
  return CO > 0;
}
function uNe() {
  CO++,
    setTimeout(() => {
      CO--;
    });
}
function Ff(t, e = {}, n) {
  if (typeof t != "function") return t;
  try {
    const a = t.__sentry_wrapped__;
    if (a) return a;
    if (pk(t)) return t;
  } catch {
    return t;
  }
  const r = function () {
    const a = Array.prototype.slice.call(arguments);
    try {
      n && typeof n == "function" && n.apply(this, arguments);
      const s = a.map((i) => Ff(i, e));
      return t.apply(this, s);
    } catch (s) {
      throw (
        (uNe(),
        Tm((i) => {
          i.addEventProcessor(
            (o) => (
              e.mechanism && (cO(o, void 0, void 0), Og(o, e.mechanism)),
              (o.extra = { ...o.extra, arguments: a }),
              o
            )
          ),
            X0(s);
        }),
        s)
      );
    }
  };
  try {
    for (const a in t)
      Object.prototype.hasOwnProperty.call(t, a) && (r[a] = t[a]);
  } catch {}
  W$(r, t), dp(t, "__sentry_wrapped__", r);
  try {
    Object.getOwnPropertyDescriptor(r, "name").configurable &&
      Object.defineProperty(r, "name", {
        get() {
          return t.name;
        },
      });
  } catch {}
  return r;
}
const Fn = typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__;
function yq(t, e) {
  const n = Lk(t, e),
    r = { type: e && e.name, value: pNe(e) };
  return (
    n.length && (r.stacktrace = { frames: n }),
    r.type === void 0 &&
      r.value === "" &&
      (r.value = "Unrecoverable error caught"),
    r
  );
}
function lNe(t, e, n, r) {
  const a = An(),
    s = a && a.getOptions().normalizeDepth,
    i = {
      exception: {
        values: [
          {
            type: W0(e)
              ? e.constructor.name
              : r
              ? "UnhandledRejection"
              : "Error",
            value: mNe(e, { isUnhandledRejection: r }),
          },
        ],
      },
      extra: { __serialized__: rW(e, s) },
    };
  if (n) {
    const o = Lk(t, n);
    o.length && (i.exception.values[0].stacktrace = { frames: o });
  }
  return i;
}
function ZC(t, e) {
  return { exception: { values: [yq(t, e)] } };
}
function Lk(t, e) {
  const n = e.stacktrace || e.stack || "",
    r = dNe(e);
  try {
    return t(n, r);
  } catch {}
  return [];
}
const cNe = /Minified React error #\d+;/i;
function dNe(t) {
  if (t) {
    if (typeof t.framesToPop == "number") return t.framesToPop;
    if (cNe.test(t.message)) return 1;
  }
  return 0;
}
function pNe(t) {
  const e = t && t.message;
  return e
    ? e.error && typeof e.error.message == "string"
      ? e.error.message
      : e
    : "No error message";
}
function hNe(t, e, n, r) {
  const a = (n && n.syntheticException) || void 0,
    s = Mk(t, e, a, r);
  return (
    Og(s),
    (s.level = "error"),
    n && n.event_id && (s.event_id = n.event_id),
    Mf(s)
  );
}
function fNe(t, e, n = "info", r, a) {
  const s = (r && r.syntheticException) || void 0,
    i = AO(t, e, s, a);
  return (i.level = n), r && r.event_id && (i.event_id = r.event_id), Mf(i);
}
function Mk(t, e, n, r, a) {
  let s;
  if (uk(e) && e.error) return ZC(t, e.error);
  if (u7(e) || gCe(e)) {
    const i = e;
    if ("stack" in e) s = ZC(t, e);
    else {
      const o = i.name || (u7(i) ? "DOMError" : "DOMException"),
        u = i.message ? `${o}: ${i.message}` : o;
      (s = AO(t, u, n, r)), cO(s, u);
    }
    return (
      "code" in i && (s.tags = { ...s.tags, "DOMException.code": `${i.code}` }),
      s
    );
  }
  return D$(e)
    ? ZC(t, e)
    : Lf(e) || W0(e)
    ? ((s = lNe(t, e, n, a)), Og(s, { synthetic: !0 }), s)
    : ((s = AO(t, e, n, r)),
      cO(s, `${e}`, void 0),
      Og(s, { synthetic: !0 }),
      s);
}
function AO(t, e, n, r) {
  const a = {};
  if (r && n) {
    const s = Lk(t, n);
    s.length &&
      (a.exception = { values: [{ value: e, stacktrace: { frames: s } }] });
  }
  if (lk(e)) {
    const { __sentry_template_string__: s, __sentry_template_values__: i } = e;
    return (a.logentry = { message: s, params: i }), a;
  }
  return (a.message = e), a;
}
function mNe(t, { isUnhandledRejection: e }) {
  const n = kCe(t),
    r = e ? "promise rejection" : "exception";
  return uk(t)
    ? `Event \`ErrorEvent\` captured as ${r} with message \`${t.message}\``
    : W0(t)
    ? `Event \`${SNe(t)}\` (type=${t.type}) captured as ${r}`
    : `Object captured as ${r} with keys: ${n}`;
}
function SNe(t) {
  try {
    const e = Object.getPrototypeOf(t);
    return e ? e.constructor.name : void 0;
  } catch {}
}
function yNe(t, { metadata: e, tunnel: n, dsn: r }) {
  const a = {
      event_id: t.event_id,
      sent_at: new Date().toISOString(),
      ...(e && e.sdk && { sdk: { name: e.sdk.name, version: e.sdk.version } }),
      ...(!!n && !!r && { dsn: Np(r) }),
    },
    s = gNe(t);
  return hd(a, [s]);
}
function gNe(t) {
  return [{ type: "user_report" }, t];
}
class gq extends Z1e {
  constructor(e) {
    const n = qt.SENTRY_SDK_SOURCE || sAe();
    vOe(e, "browser", ["browser"], n),
      super(e),
      e.sendClientReports &&
        qt.document &&
        qt.document.addEventListener("visibilitychange", () => {
          qt.document.visibilityState === "hidden" && this._flushOutcomes();
        });
  }
  eventFromException(e, n) {
    return hNe(this._options.stackParser, e, n, this._options.attachStacktrace);
  }
  eventFromMessage(e, n = "info", r) {
    return fNe(
      this._options.stackParser,
      e,
      n,
      r,
      this._options.attachStacktrace
    );
  }
  captureUserFeedback(e) {
    if (!this._isEnabled()) {
      Fn && Be.warn("SDK not enabled, will not capture user feedback.");
      return;
    }
    const n = yNe(e, {
      metadata: this.getSdkMetadata(),
      dsn: this.getDsn(),
      tunnel: this.getOptions().tunnel,
    });
    this._sendEnvelope(n);
  }
  _prepareEvent(e, n, r) {
    return (
      (e.platform = e.platform || "javascript"), super._prepareEvent(e, n, r)
    );
  }
  _flushOutcomes() {
    const e = this._clearOutcomes();
    if (e.length === 0) {
      Fn && Be.log("No outcomes to send");
      return;
    }
    if (!this._dsn) {
      Fn && Be.log("No dsn provided, will not send outcomes");
      return;
    }
    Fn && Be.log("Sending outcomes:", e);
    const n = AAe(e, this._options.tunnel && Np(this._dsn));
    this._sendEnvelope(n);
  }
}
let XS;
function vNe() {
  if (XS) return XS;
  if (fO(qt.fetch)) return (XS = qt.fetch.bind(qt));
  const t = qt.document;
  let e = qt.fetch;
  if (t && typeof t.createElement == "function")
    try {
      const n = t.createElement("iframe");
      (n.hidden = !0), t.head.appendChild(n);
      const r = n.contentWindow;
      r && r.fetch && (e = r.fetch), t.head.removeChild(n);
    } catch (n) {
      Fn &&
        Be.warn(
          "Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ",
          n
        );
    }
  return (XS = e.bind(qt));
}
function _Ne() {
  XS = void 0;
}
function bNe(t, e = vNe()) {
  let n = 0,
    r = 0;
  function a(s) {
    const i = s.body.length;
    (n += i), r++;
    const o = {
      body: s.body,
      method: "POST",
      referrerPolicy: "origin",
      headers: t.headers,
      keepalive: n <= 6e4 && r < 15,
      ...t.fetchOptions,
    };
    try {
      return e(t.url, o).then(
        (u) => (
          (n -= i),
          r--,
          {
            statusCode: u.status,
            headers: {
              "x-sentry-rate-limits": u.headers.get("X-Sentry-Rate-Limits"),
              "retry-after": u.headers.get("Retry-After"),
            },
          }
        )
      );
    } catch (u) {
      return _Ne(), (n -= i), r--, mk(u);
    }
  }
  return nP(t, a);
}
const ENe = 4;
function TNe(t) {
  function e(n) {
    return new ri((r, a) => {
      const s = new XMLHttpRequest();
      (s.onerror = a),
        (s.onreadystatechange = () => {
          s.readyState === ENe &&
            r({
              statusCode: s.status,
              headers: {
                "x-sentry-rate-limits": s.getResponseHeader(
                  "X-Sentry-Rate-Limits"
                ),
                "retry-after": s.getResponseHeader("Retry-After"),
              },
            });
        }),
        s.open("POST", t.url);
      for (const i in t.headers)
        Object.prototype.hasOwnProperty.call(t.headers, i) &&
          s.setRequestHeader(i, t.headers[i]);
      s.send(n.body);
    });
  }
  return nP(t, e);
}
const aP = "?",
  wNe = 30,
  PNe = 40,
  INe = 50;
function Dk(t, e, n, r) {
  const a = { filename: t, function: e, in_app: !0 };
  return n !== void 0 && (a.lineno = n), r !== void 0 && (a.colno = r), a;
}
const CNe =
    /^\s*at (?:(.+?\)(?: \[.+\])?|.*?) ?\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\/)?.*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i,
  ANe = /\((\S*)(?::(\d+))(?::(\d+))\)/,
  ONe = (t) => {
    const e = CNe.exec(t);
    if (e) {
      if (e[2] && e[2].indexOf("eval") === 0) {
        const s = ANe.exec(e[2]);
        s && ((e[2] = s[1]), (e[3] = s[2]), (e[4] = s[3]));
      }
      const [r, a] = _q(e[1] || aP, e[2]);
      return Dk(a, r, e[3] ? +e[3] : void 0, e[4] ? +e[4] : void 0);
    }
  },
  vq = [wNe, ONe],
  HNe =
    /^\s*(.*?)(?:\((.*?)\))?(?:^|@)?((?:[-a-z]+)?:\/.*?|\[native code\]|[^@]*(?:bundle|\d+\.js)|\/[\w\-. /=]+)(?::(\d+))?(?::(\d+))?\s*$/i,
  NNe = /(\S+) line (\d+)(?: > eval line \d+)* > eval/i,
  RNe = (t) => {
    const e = HNe.exec(t);
    if (e) {
      if (e[3] && e[3].indexOf(" > eval") > -1) {
        const s = NNe.exec(e[3]);
        s &&
          ((e[1] = e[1] || "eval"), (e[3] = s[1]), (e[4] = s[2]), (e[5] = ""));
      }
      let r = e[3],
        a = e[1] || aP;
      return (
        ([a, r] = _q(a, r)),
        Dk(r, a, e[4] ? +e[4] : void 0, e[5] ? +e[5] : void 0)
      );
    }
  },
  kNe = [INe, RNe],
  xNe =
    /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:[-a-z]+):.*?):(\d+)(?::(\d+))?\)?\s*$/i,
  LNe = (t) => {
    const e = xNe.exec(t);
    return e ? Dk(e[2], e[1] || aP, +e[3], e[4] ? +e[4] : void 0) : void 0;
  },
  MNe = [PNe, LNe],
  DNe = [vq, kNe, MNe],
  GNe = X$(...DNe),
  _q = (t, e) => {
    const n = t.indexOf("safari-extension") !== -1,
      r = t.indexOf("safari-web-extension") !== -1;
    return n || r
      ? [
          t.indexOf("@") !== -1 ? t.split("@")[0] : aP,
          n ? `safari-extension:${e}` : `safari-web-extension:${e}`,
        ]
      : [t, e];
  },
  J_ = 1024,
  bq = "Breadcrumbs",
  FNe = (t = {}) => {
    const e = {
      console: !0,
      dom: !0,
      fetch: !0,
      history: !0,
      sentry: !0,
      xhr: !0,
      ...t,
    };
    return {
      name: bq,
      setupOnce() {},
      setup(n) {
        e.console && FCe(VNe(n)),
          e.dom && eW(BNe(n, e.dom)),
          e.xhr && fk(jNe(n)),
          e.fetch && hk(zNe(n)),
          e.history && Av($Ne(n)),
          e.sentry && n.on && n.on("beforeSendEvent", KNe(n));
      },
    };
  },
  Gk = FNe,
  UNe = Ca(bq, Gk);
function KNe(t) {
  return function (n) {
    An() === t &&
      vu(
        {
          category: `sentry.${
            n.type === "transaction" ? "transaction" : "event"
          }`,
          event_id: n.event_id,
          level: n.level,
          message: dc(n),
        },
        { event: n }
      );
  };
}
function BNe(t, e) {
  return function (r) {
    if (An() !== t) return;
    let a,
      s,
      i = typeof e == "object" ? e.serializeAttribute : void 0,
      o =
        typeof e == "object" && typeof e.maxStringLength == "number"
          ? e.maxStringLength
          : void 0;
    o &&
      o > J_ &&
      (Fn &&
        Be.warn(
          `\`dom.maxStringLength\` cannot exceed ${J_}, but a value of ${o} was configured. Sentry will use ${J_} instead.`
        ),
      (o = J_)),
      typeof i == "string" && (i = [i]);
    try {
      const l = r.event,
        c = WNe(l) ? l.target : l;
      (a = $c(c, { keyAttrs: i, maxStringLength: o })), (s = j$(c));
    } catch {
      a = "<unknown>";
    }
    if (a.length === 0) return;
    const u = { category: `ui.${r.name}`, message: a };
    s && (u.data = { "ui.component_name": s }),
      vu(u, { event: r.event, name: r.name, global: r.global });
  };
}
function VNe(t) {
  return function (n) {
    if (An() !== t) return;
    const r = {
      category: "console",
      data: { arguments: n.args, logger: "console" },
      level: SAe(n.level),
      message: l7(n.args, " "),
    };
    if (n.level === "assert")
      if (n.args[0] === !1)
        (r.message = `Assertion failed: ${
          l7(n.args.slice(1), " ") || "console.assert"
        }`),
          (r.data.arguments = n.args.slice(1));
      else return;
    vu(r, { input: n.args, level: n.level });
  };
}
function jNe(t) {
  return function (n) {
    if (An() !== t) return;
    const { startTimestamp: r, endTimestamp: a } = n,
      s = n.xhr[Sc];
    if (!r || !a || !s) return;
    const { method: i, url: o, status_code: u, body: l } = s,
      c = { method: i, url: o, status_code: u },
      d = { xhr: n.xhr, input: l, startTimestamp: r, endTimestamp: a };
    vu({ category: "xhr", data: c, type: "http" }, d);
  };
}
function zNe(t) {
  return function (n) {
    if (An() !== t) return;
    const { startTimestamp: r, endTimestamp: a } = n;
    if (
      a &&
      !(n.fetchData.url.match(/sentry_key/) && n.fetchData.method === "POST")
    )
      if (n.error) {
        const s = n.fetchData,
          i = {
            data: n.error,
            input: n.args,
            startTimestamp: r,
            endTimestamp: a,
          };
        vu({ category: "fetch", data: s, level: "error", type: "http" }, i);
      } else {
        const s = n.response,
          i = { ...n.fetchData, status_code: s && s.status },
          o = {
            input: n.args,
            response: s,
            startTimestamp: r,
            endTimestamp: a,
          };
        vu({ category: "fetch", data: i, type: "http" }, o);
      }
  };
}
function $Ne(t) {
  return function (n) {
    if (An() !== t) return;
    let r = n.from,
      a = n.to;
    const s = Jb(qt.location.href);
    let i = r ? Jb(r) : void 0;
    const o = Jb(a);
    (!i || !i.path) && (i = s),
      s.protocol === o.protocol && s.host === o.host && (a = o.relative),
      s.protocol === i.protocol && s.host === i.host && (r = i.relative),
      vu({ category: "navigation", data: { from: r, to: a } });
  };
}
function WNe(t) {
  return !!t && !!t.target;
}
const Eq = "Dedupe",
  qNe = () => {
    let t;
    return {
      name: Eq,
      setupOnce() {},
      processEvent(e) {
        if (e.type) return e;
        try {
          if (XNe(e, t))
            return (
              Fn &&
                Be.warn(
                  "Event dropped due to being a duplicate of previously captured event."
                ),
              null
            );
        } catch {}
        return (t = e);
      },
    };
  },
  Fk = qNe,
  YNe = Ca(Eq, Fk);
function XNe(t, e) {
  return e ? !!(QNe(t, e) || JNe(t, e)) : !1;
}
function QNe(t, e) {
  const n = t.message,
    r = e.message;
  return !(
    (!n && !r) ||
    (n && !r) ||
    (!n && r) ||
    n !== r ||
    !wq(t, e) ||
    !Tq(t, e)
  );
}
function JNe(t, e) {
  const n = Y7(e),
    r = Y7(t);
  return !(
    !n ||
    !r ||
    n.type !== r.type ||
    n.value !== r.value ||
    !wq(t, e) ||
    !Tq(t, e)
  );
}
function Tq(t, e) {
  let n = X7(t),
    r = X7(e);
  if (!n && !r) return !0;
  if ((n && !r) || (!n && r) || ((n = n), (r = r), r.length !== n.length))
    return !1;
  for (let a = 0; a < r.length; a++) {
    const s = r[a],
      i = n[a];
    if (
      s.filename !== i.filename ||
      s.lineno !== i.lineno ||
      s.colno !== i.colno ||
      s.function !== i.function
    )
      return !1;
  }
  return !0;
}
function wq(t, e) {
  let n = t.fingerprint,
    r = e.fingerprint;
  if (!n && !r) return !0;
  if ((n && !r) || (!n && r)) return !1;
  (n = n), (r = r);
  try {
    return n.join("") === r.join("");
  } catch {
    return !1;
  }
}
function Y7(t) {
  return t.exception && t.exception.values && t.exception.values[0];
}
function X7(t) {
  const e = t.exception;
  if (e)
    try {
      return e.values[0].stacktrace.frames;
    } catch {
      return;
    }
}
const Pq = "GlobalHandlers",
  ZNe = (t = {}) => {
    const e = { onerror: !0, onunhandledrejection: !0, ...t };
    return {
      name: Pq,
      setupOnce() {
        Error.stackTraceLimit = 50;
      },
      setup(n) {
        e.onerror && (tRe(n), Q7("onerror")),
          e.onunhandledrejection && (nRe(n), Q7("onunhandledrejection"));
      },
    };
  },
  Uk = ZNe,
  eRe = Ca(Pq, Uk);
function tRe(t) {
  nW((e) => {
    const { stackParser: n, attachStacktrace: r } = Cq();
    if (An() !== t || Sq()) return;
    const { msg: a, url: s, line: i, column: o, error: u } = e,
      l =
        u === void 0 && iu(a)
          ? aRe(a, s, i, o)
          : Iq(Mk(n, u || a, void 0, r, !1), s, i, o);
    (l.level = "error"),
      Tk(l, {
        originalException: u,
        mechanism: { handled: !1, type: "onerror" },
      });
  });
}
function nRe(t) {
  sW((e) => {
    const { stackParser: n, attachStacktrace: r } = Cq();
    if (An() !== t || Sq()) return;
    const a = sRe(e),
      s = ck(a) ? rRe(a) : Mk(n, a, void 0, r, !0);
    (s.level = "error"),
      Tk(s, {
        originalException: a,
        mechanism: { handled: !1, type: "onunhandledrejection" },
      });
  });
}
function sRe(t) {
  if (ck(t)) return t;
  const e = t;
  try {
    if ("reason" in e) return e.reason;
    if ("detail" in e && "reason" in e.detail) return e.detail.reason;
  } catch {}
  return t;
}
function rRe(t) {
  return {
    exception: {
      values: [
        {
          type: "UnhandledRejection",
          value: `Non-Error promise rejection captured with value: ${String(
            t
          )}`,
        },
      ],
    },
  };
}
function aRe(t, e, n, r) {
  const a =
    /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;
  let s = uk(t) ? t.message : t,
    i = "Error";
  const o = s.match(a);
  return (
    o && ((i = o[1]), (s = o[2])),
    Iq({ exception: { values: [{ type: i, value: s }] } }, e, n, r)
  );
}
function Iq(t, e, n, r) {
  const a = (t.exception = t.exception || {}),
    s = (a.values = a.values || []),
    i = (s[0] = s[0] || {}),
    o = (i.stacktrace = i.stacktrace || {}),
    u = (o.frames = o.frames || []),
    l = isNaN(parseInt(r, 10)) ? void 0 : r,
    c = isNaN(parseInt(n, 10)) ? void 0 : n,
    d = iu(e) && e.length > 0 ? e : B$();
  return (
    u.length === 0 &&
      u.push({ colno: l, filename: d, function: "?", in_app: !0, lineno: c }),
    t
  );
}
function Q7(t) {
  Fn && Be.log(`Global Handler attached: ${t}`);
}
function Cq() {
  const t = An();
  return (
    (t && t.getOptions()) || { stackParser: () => [], attachStacktrace: !1 }
  );
}
const Aq = "HttpContext",
  iRe = () => ({
    name: Aq,
    setupOnce() {},
    preprocessEvent(t) {
      if (!qt.navigator && !qt.location && !qt.document) return;
      const e =
          (t.request && t.request.url) || (qt.location && qt.location.href),
        { referrer: n } = qt.document || {},
        { userAgent: r } = qt.navigator || {},
        a = {
          ...(t.request && t.request.headers),
          ...(n && { Referer: n }),
          ...(r && { "User-Agent": r }),
        },
        s = { ...t.request, ...(e && { url: e }), headers: a };
      t.request = s;
    },
  }),
  Kk = iRe,
  oRe = Ca(Aq, Kk),
  uRe = "cause",
  lRe = 5,
  Oq = "LinkedErrors",
  cRe = (t = {}) => {
    const e = t.limit || lRe,
      n = t.key || uRe;
    return {
      name: Oq,
      setupOnce() {},
      preprocessEvent(r, a, s) {
        const i = s.getOptions();
        U$(yq, i.stackParser, i.maxValueLength, n, e, r, a);
      },
    };
  },
  Bk = cRe,
  dRe = Ca(Oq, Bk),
  pRe = [
    "EventTarget",
    "Window",
    "Node",
    "ApplicationCache",
    "AudioTrackList",
    "BroadcastChannel",
    "ChannelMergerNode",
    "CryptoOperation",
    "EventSource",
    "FileReader",
    "HTMLUnknownElement",
    "IDBDatabase",
    "IDBRequest",
    "IDBTransaction",
    "KeyOperation",
    "MediaController",
    "MessagePort",
    "ModalWindow",
    "Notification",
    "SVGElementInstance",
    "Screen",
    "SharedWorker",
    "TextTrack",
    "TextTrackCue",
    "TextTrackList",
    "WebSocket",
    "WebSocketWorker",
    "Worker",
    "XMLHttpRequest",
    "XMLHttpRequestEventTarget",
    "XMLHttpRequestUpload",
  ],
  Hq = "TryCatch",
  hRe = (t = {}) => {
    const e = {
      XMLHttpRequest: !0,
      eventTarget: !0,
      requestAnimationFrame: !0,
      setInterval: !0,
      setTimeout: !0,
      ...t,
    };
    return {
      name: Hq,
      setupOnce() {
        e.setTimeout && Ir(qt, "setTimeout", J7),
          e.setInterval && Ir(qt, "setInterval", J7),
          e.requestAnimationFrame && Ir(qt, "requestAnimationFrame", mRe),
          e.XMLHttpRequest &&
            "XMLHttpRequest" in qt &&
            Ir(XMLHttpRequest.prototype, "send", SRe);
        const n = e.eventTarget;
        n && (Array.isArray(n) ? n : pRe).forEach(yRe);
      },
    };
  },
  Vk = hRe,
  fRe = Ca(Hq, Vk);
function J7(t) {
  return function (...e) {
    const n = e[0];
    return (
      (e[0] = Ff(n, {
        mechanism: {
          data: { function: Sl(t) },
          handled: !1,
          type: "instrument",
        },
      })),
      t.apply(this, e)
    );
  };
}
function mRe(t) {
  return function (e) {
    return t.apply(this, [
      Ff(e, {
        mechanism: {
          data: { function: "requestAnimationFrame", handler: Sl(t) },
          handled: !1,
          type: "instrument",
        },
      }),
    ]);
  };
}
function SRe(t) {
  return function (...e) {
    const n = this;
    return (
      ["onload", "onerror", "onprogress", "onreadystatechange"].forEach((a) => {
        a in n &&
          typeof n[a] == "function" &&
          Ir(n, a, function (s) {
            const i = {
                mechanism: {
                  data: { function: a, handler: Sl(s) },
                  handled: !1,
                  type: "instrument",
                },
              },
              o = pk(s);
            return o && (i.mechanism.data.handler = Sl(o)), Ff(s, i);
          });
      }),
      t.apply(this, e)
    );
  };
}
function yRe(t) {
  const e = qt,
    n = e[t] && e[t].prototype;
  !n ||
    !n.hasOwnProperty ||
    !n.hasOwnProperty("addEventListener") ||
    (Ir(n, "addEventListener", function (r) {
      return function (a, s, i) {
        try {
          typeof s.handleEvent == "function" &&
            (s.handleEvent = Ff(s.handleEvent, {
              mechanism: {
                data: { function: "handleEvent", handler: Sl(s), target: t },
                handled: !1,
                type: "instrument",
              },
            }));
        } catch {}
        return r.apply(this, [
          a,
          Ff(s, {
            mechanism: {
              data: { function: "addEventListener", handler: Sl(s), target: t },
              handled: !1,
              type: "instrument",
            },
          }),
          i,
        ]);
      };
    }),
    Ir(n, "removeEventListener", function (r) {
      return function (a, s, i) {
        const o = s;
        try {
          const u = o && o.__sentry_wrapped__;
          u && r.call(this, a, u, i);
        } catch {}
        return r.call(this, a, o, i);
      };
    }));
}
const Nq = [Hk(), Nk(), Vk(), Gk(), Uk(), Bk(), Fk(), Kk()];
function gRe(t) {
  return [...Nq];
}
function vRe(t = {}) {
  t.defaultIntegrations === void 0 && (t.defaultIntegrations = gRe()),
    t.release === void 0 &&
      (typeof __SENTRY_RELEASE__ == "string" &&
        (t.release = __SENTRY_RELEASE__),
      qt.SENTRY_RELEASE &&
        qt.SENTRY_RELEASE.id &&
        (t.release = qt.SENTRY_RELEASE.id)),
    t.autoSessionTracking === void 0 && (t.autoSessionTracking = !0),
    t.sendClientReports === void 0 && (t.sendClientReports = !0);
  const e = {
    ...t,
    stackParser: DCe(t.stackParser || GNe),
    integrations: D1e(t),
    transport: t.transport || (tW() ? bNe : TNe),
  };
  uOe(gq, e), t.autoSessionTracking && bRe();
}
const _Re = (t = {}, e = Zn()) => {
  if (!qt.document) {
    Fn && Be.error("Global document not defined in showReportDialog call");
    return;
  }
  const { client: n, scope: r } = e.getStackTop(),
    a = t.dsn || (n && n.getDsn());
  if (!a) {
    Fn && Be.error("DSN not configured for showReportDialog call");
    return;
  }
  r && (t.user = { ...r.getUser(), ...t.user }),
    t.eventId || (t.eventId = e.lastEventId());
  const s = qt.document.createElement("script");
  (s.async = !0),
    (s.crossOrigin = "anonymous"),
    (s.src = L1e(a, t)),
    t.onLoad && (s.onload = t.onLoad);
  const { onClose: i } = t;
  if (i) {
    const u = (l) => {
      if (l.data === "__sentry_reportdialog_closed__")
        try {
          i();
        } finally {
          qt.removeEventListener("message", u);
        }
    };
    qt.addEventListener("message", u);
  }
  const o = qt.document.head || qt.document.body;
  o
    ? o.appendChild(s)
    : Fn &&
      Be.error("Not injecting report dialog. No injection point found in HTML");
};
function bRe() {
  if (typeof qt.document > "u") {
    Fn &&
      Be.warn(
        "Session tracking in non-browser environment with @sentry/browser is not supported."
      );
    return;
  }
  P7({ ignoreDuration: !0 }),
    I7(),
    Av(({ from: t, to: e }) => {
      t !== void 0 && t !== e && (P7({ ignoreDuration: !0 }), I7());
    });
}
const ERe = Object.freeze(
    Object.defineProperty(
      {
        __proto__: null,
        Breadcrumbs: UNe,
        Dedupe: YNe,
        GlobalHandlers: eRe,
        HttpContext: oRe,
        LinkedErrors: dRe,
        TryCatch: fRe,
      },
      Symbol.toStringTag,
      { value: "Module" }
    )
  ),
  ms = wn,
  jk = "sentryReplaySession",
  TRe = "replay_event",
  zk = "Unable to send Replay",
  wRe = 3e5,
  PRe = 9e5,
  IRe = 5e3,
  CRe = 5500,
  ARe = 6e4,
  ORe = 5e3,
  HRe = 3,
  Z7 = 15e4,
  Z_ = 5e3,
  NRe = 3e3,
  RRe = 300,
  $k = 2e7,
  kRe = 4999,
  xRe = 15e3,
  e8 = 36e5;
function LRe(t, e) {
  return t ?? e();
}
function BT(t) {
  let e,
    n = t[0],
    r = 1;
  for (; r < t.length; ) {
    const a = t[r],
      s = t[r + 1];
    if (
      ((r += 2), (a === "optionalAccess" || a === "optionalCall") && n == null)
    )
      return;
    a === "access" || a === "optionalAccess"
      ? ((e = n), (n = s(n)))
      : (a === "call" || a === "optionalCall") &&
        ((n = s((...i) => n.call(e, ...i))), (e = void 0));
  }
  return n;
}
var Sr;
(function (t) {
  (t[(t.Document = 0)] = "Document"),
    (t[(t.DocumentType = 1)] = "DocumentType"),
    (t[(t.Element = 2)] = "Element"),
    (t[(t.Text = 3)] = "Text"),
    (t[(t.CDATA = 4)] = "CDATA"),
    (t[(t.Comment = 5)] = "Comment");
})(Sr || (Sr = {}));
function MRe(t) {
  return t.nodeType === t.ELEMENT_NODE;
}
function gy(t) {
  const e = BT([t, "optionalAccess", (n) => n.host]);
  return BT([e, "optionalAccess", (n) => n.shadowRoot]) === t;
}
function vy(t) {
  return Object.prototype.toString.call(t) === "[object ShadowRoot]";
}
function DRe(t) {
  return (
    t.includes(" background-clip: text;") &&
      !t.includes(" -webkit-background-clip: text;") &&
      (t = t.replace(
        " background-clip: text;",
        " -webkit-background-clip: text; background-clip: text;"
      )),
    t
  );
}
function GRe(t) {
  const { cssText: e } = t;
  if (e.split('"').length < 3) return e;
  const n = ["@import", `url(${JSON.stringify(t.href)})`];
  return (
    t.layerName === ""
      ? n.push("layer")
      : t.layerName && n.push(`layer(${t.layerName})`),
    t.supportsText && n.push(`supports(${t.supportsText})`),
    t.media.length && n.push(t.media.mediaText),
    n.join(" ") + ";"
  );
}
function VT(t) {
  try {
    const e = t.rules || t.cssRules;
    return e ? DRe(Array.from(e, Rq).join("")) : null;
  } catch {
    return null;
  }
}
function Rq(t) {
  let e;
  if (URe(t))
    try {
      e = VT(t.styleSheet) || GRe(t);
    } catch {}
  else if (KRe(t) && t.selectorText.includes(":")) return FRe(t.cssText);
  return e || t.cssText;
}
function FRe(t) {
  const e = /(\[(?:[\w-]+)[^\\])(:(?:[\w-]+)\])/gm;
  return t.replace(e, "$1\\$2");
}
function URe(t) {
  return "styleSheet" in t;
}
function KRe(t) {
  return "selectorText" in t;
}
class kq {
  constructor() {
    (this.idNodeMap = new Map()), (this.nodeMetaMap = new WeakMap());
  }
  getId(e) {
    if (!e) return -1;
    const n = BT([
      this,
      "access",
      (r) => r.getMeta,
      "call",
      (r) => r(e),
      "optionalAccess",
      (r) => r.id,
    ]);
    return LRe(n, () => -1);
  }
  getNode(e) {
    return this.idNodeMap.get(e) || null;
  }
  getIds() {
    return Array.from(this.idNodeMap.keys());
  }
  getMeta(e) {
    return this.nodeMetaMap.get(e) || null;
  }
  removeNodeFromMap(e) {
    const n = this.getId(e);
    this.idNodeMap.delete(n),
      e.childNodes && e.childNodes.forEach((r) => this.removeNodeFromMap(r));
  }
  has(e) {
    return this.idNodeMap.has(e);
  }
  hasNode(e) {
    return this.nodeMetaMap.has(e);
  }
  add(e, n) {
    const r = n.id;
    this.idNodeMap.set(r, e), this.nodeMetaMap.set(e, n);
  }
  replace(e, n) {
    const r = this.getNode(e);
    if (r) {
      const a = this.nodeMetaMap.get(r);
      a && this.nodeMetaMap.set(n, a);
    }
    this.idNodeMap.set(e, n);
  }
  reset() {
    (this.idNodeMap = new Map()), (this.nodeMetaMap = new WeakMap());
  }
}
function BRe() {
  return new kq();
}
function iP({ maskInputOptions: t, tagName: e, type: n }) {
  return (
    e === "OPTION" && (e = "SELECT"),
    !!(
      t[e.toLowerCase()] ||
      (n && t[n]) ||
      n === "password" ||
      (e === "INPUT" && !n && t.text)
    )
  );
}
function Hg({ isMasked: t, element: e, value: n, maskInputFn: r }) {
  let a = n || "";
  return t ? (r && (a = r(a, e)), "*".repeat(a.length)) : a;
}
function Uf(t) {
  return t.toLowerCase();
}
function OO(t) {
  return t.toUpperCase();
}
const t8 = "__rrweb_original__";
function VRe(t) {
  const e = t.getContext("2d");
  if (!e) return !0;
  const n = 50;
  for (let r = 0; r < t.width; r += n)
    for (let a = 0; a < t.height; a += n) {
      const s = e.getImageData,
        i = t8 in s ? s[t8] : s;
      if (
        new Uint32Array(
          i.call(
            e,
            r,
            a,
            Math.min(n, t.width - r),
            Math.min(n, t.height - a)
          ).data.buffer
        ).some((u) => u !== 0)
      )
        return !1;
    }
  return !0;
}
function Wk(t) {
  const e = t.type;
  return t.hasAttribute("data-rr-is-password") ? "password" : e ? Uf(e) : null;
}
function jT(t, e, n) {
  return e === "INPUT" && (n === "radio" || n === "checkbox")
    ? t.getAttribute("value") || ""
    : t.value;
}
let jRe = 1;
const zRe = new RegExp("[^a-z0-9-_:]"),
  Ng = -2;
function qk() {
  return jRe++;
}
function $Re(t) {
  if (t instanceof HTMLFormElement) return "form";
  const e = Uf(t.tagName);
  return zRe.test(e) ? "div" : e;
}
function WRe(t) {
  let e = "";
  return (
    t.indexOf("//") > -1
      ? (e = t.split("/").slice(0, 3).join("/"))
      : (e = t.split("/")[0]),
    (e = e.split("?")[0]),
    e
  );
}
let sh, n8;
const qRe = /url\((?:(')([^']*)'|(")(.*?)"|([^)]*))\)/gm,
  YRe = /^(?:[a-z+]+:)?\/\//i,
  XRe = /^www\..*/i,
  QRe = /^(data:)([^,]*),(.*)/i;
function zT(t, e) {
  return (t || "").replace(qRe, (n, r, a, s, i, o) => {
    const u = a || i || o,
      l = r || s || "";
    if (!u) return n;
    if (YRe.test(u) || XRe.test(u)) return `url(${l}${u}${l})`;
    if (QRe.test(u)) return `url(${l}${u}${l})`;
    if (u[0] === "/") return `url(${l}${WRe(e) + u}${l})`;
    const c = e.split("/"),
      d = u.split("/");
    c.pop();
    for (const p of d) p !== "." && (p === ".." ? c.pop() : c.push(p));
    return `url(${l}${c.join("/")}${l})`;
  });
}
const JRe = /^[^ \t\n\r\u000c]+/,
  ZRe = /^[, \t\n\r\u000c]+/;
function eke(t, e) {
  if (e.trim() === "") return e;
  let n = 0;
  function r(s) {
    let i;
    const o = s.exec(e.substring(n));
    return o ? ((i = o[0]), (n += i.length), i) : "";
  }
  const a = [];
  for (; r(ZRe), !(n >= e.length); ) {
    let s = r(JRe);
    if (s.slice(-1) === ",")
      (s = Ch(t, s.substring(0, s.length - 1))), a.push(s);
    else {
      let i = "";
      s = Ch(t, s);
      let o = !1;
      for (;;) {
        const u = e.charAt(n);
        if (u === "") {
          a.push((s + i).trim());
          break;
        } else if (o) u === ")" && (o = !1);
        else if (u === ",") {
          (n += 1), a.push((s + i).trim());
          break;
        } else u === "(" && (o = !0);
        (i += u), (n += 1);
      }
    }
  }
  return a.join(", ");
}
function Ch(t, e) {
  if (!e || e.trim() === "") return e;
  const n = t.createElement("a");
  return (n.href = e), n.href;
}
function tke(t) {
  return !!(t.tagName === "svg" || t.ownerSVGElement);
}
function Yk() {
  const t = document.createElement("a");
  return (t.href = ""), t.href;
}
function xq(t, e, n, r, a, s) {
  return (
    r &&
    (n === "src" ||
    (n === "href" && !(e === "use" && r[0] === "#")) ||
    (n === "xlink:href" && r[0] !== "#") ||
    (n === "background" && (e === "table" || e === "td" || e === "th"))
      ? Ch(t, r)
      : n === "srcset"
      ? eke(t, r)
      : n === "style"
      ? zT(r, Yk())
      : e === "object" && n === "data"
      ? Ch(t, r)
      : typeof s == "function"
      ? s(n, r, a)
      : r)
  );
}
function Lq(t, e, n) {
  return (t === "video" || t === "audio") && e === "autoplay";
}
function nke(t, e, n, r) {
  try {
    if (r && t.matches(r)) return !1;
    if (typeof e == "string") {
      if (t.classList.contains(e)) return !0;
    } else
      for (let a = t.classList.length; a--; ) {
        const s = t.classList[a];
        if (e.test(s)) return !0;
      }
    if (n) return t.matches(n);
  } catch {}
  return !1;
}
function ske(t, e) {
  for (let n = t.classList.length; n--; ) {
    const r = t.classList[n];
    if (e.test(r)) return !0;
  }
  return !1;
}
function Dd(t, e, n = 1 / 0, r = 0) {
  return !t || t.nodeType !== t.ELEMENT_NODE || r > n
    ? -1
    : e(t)
    ? r
    : Dd(t.parentNode, e, n, r + 1);
}
function Ah(t, e) {
  return (n) => {
    const r = n;
    if (r === null) return !1;
    try {
      if (t) {
        if (typeof t == "string") {
          if (r.matches(`.${t}`)) return !0;
        } else if (ske(r, t)) return !0;
      }
      return !!(e && r.matches(e));
    } catch {
      return !1;
    }
  };
}
function Kf(t, e, n, r, a, s) {
  try {
    const i = t.nodeType === t.ELEMENT_NODE ? t : t.parentElement;
    if (i === null) return !1;
    if (i.tagName === "INPUT") {
      const l = i.getAttribute("autocomplete");
      if (
        [
          "current-password",
          "new-password",
          "cc-number",
          "cc-exp",
          "cc-exp-month",
          "cc-exp-year",
          "cc-csc",
        ].includes(l)
      )
        return !0;
    }
    let o = -1,
      u = -1;
    if (s) {
      if (((u = Dd(i, Ah(r, a))), u < 0)) return !0;
      o = Dd(i, Ah(e, n), u >= 0 ? u : 1 / 0);
    } else {
      if (((o = Dd(i, Ah(e, n))), o < 0)) return !1;
      u = Dd(i, Ah(r, a), o >= 0 ? o : 1 / 0);
    }
    return o >= 0 ? (u >= 0 ? o <= u : !0) : u >= 0 ? !1 : !!s;
  } catch {}
  return !!s;
}
function rke(t, e, n) {
  const r = t.contentWindow;
  if (!r) return;
  let a = !1,
    s;
  try {
    s = r.document.readyState;
  } catch {
    return;
  }
  if (s !== "complete") {
    const o = setTimeout(() => {
      a || (e(), (a = !0));
    }, n);
    t.addEventListener("load", () => {
      clearTimeout(o), (a = !0), e();
    });
    return;
  }
  const i = "about:blank";
  if (r.location.href !== i || t.src === i || t.src === "")
    return setTimeout(e, 0), t.addEventListener("load", e);
  t.addEventListener("load", e);
}
function ake(t, e, n) {
  let r = !1,
    a;
  try {
    a = t.sheet;
  } catch {
    return;
  }
  if (a) return;
  const s = setTimeout(() => {
    r || (e(), (r = !0));
  }, n);
  t.addEventListener("load", () => {
    clearTimeout(s), (r = !0), e();
  });
}
function ike(t, e) {
  const {
      doc: n,
      mirror: r,
      blockClass: a,
      blockSelector: s,
      unblockSelector: i,
      maskAllText: o,
      maskAttributeFn: u,
      maskTextClass: l,
      unmaskTextClass: c,
      maskTextSelector: d,
      unmaskTextSelector: p,
      inlineStylesheet: m,
      maskInputOptions: y = {},
      maskTextFn: I,
      maskInputFn: O,
      dataURLOptions: g = {},
      inlineImages: C,
      recordCanvas: H,
      keepIframeSrcFn: B,
      newlyAddedElement: he = !1,
    } = e,
    de = oke(n, r);
  switch (t.nodeType) {
    case t.DOCUMENT_NODE:
      return t.compatMode !== "CSS1Compat"
        ? { type: Sr.Document, childNodes: [], compatMode: t.compatMode }
        : { type: Sr.Document, childNodes: [] };
    case t.DOCUMENT_TYPE_NODE:
      return {
        type: Sr.DocumentType,
        name: t.name,
        publicId: t.publicId,
        systemId: t.systemId,
        rootId: de,
      };
    case t.ELEMENT_NODE:
      return lke(t, {
        doc: n,
        blockClass: a,
        blockSelector: s,
        unblockSelector: i,
        inlineStylesheet: m,
        maskAttributeFn: u,
        maskInputOptions: y,
        maskInputFn: O,
        dataURLOptions: g,
        inlineImages: C,
        recordCanvas: H,
        keepIframeSrcFn: B,
        newlyAddedElement: he,
        rootId: de,
        maskAllText: o,
        maskTextClass: l,
        unmaskTextClass: c,
        maskTextSelector: d,
        unmaskTextSelector: p,
      });
    case t.TEXT_NODE:
      return uke(t, {
        maskAllText: o,
        maskTextClass: l,
        unmaskTextClass: c,
        maskTextSelector: d,
        unmaskTextSelector: p,
        maskTextFn: I,
        maskInputOptions: y,
        maskInputFn: O,
        rootId: de,
      });
    case t.CDATA_SECTION_NODE:
      return { type: Sr.CDATA, textContent: "", rootId: de };
    case t.COMMENT_NODE:
      return { type: Sr.Comment, textContent: t.textContent || "", rootId: de };
    default:
      return !1;
  }
}
function oke(t, e) {
  if (!e.hasNode(t)) return;
  const n = e.getId(t);
  return n === 1 ? void 0 : n;
}
function uke(t, e) {
  const {
      maskAllText: n,
      maskTextClass: r,
      unmaskTextClass: a,
      maskTextSelector: s,
      unmaskTextSelector: i,
      maskTextFn: o,
      maskInputOptions: u,
      maskInputFn: l,
      rootId: c,
    } = e,
    d = t.parentNode && t.parentNode.tagName;
  let p = t.textContent;
  const m = d === "STYLE" ? !0 : void 0,
    y = d === "SCRIPT" ? !0 : void 0,
    I = d === "TEXTAREA" ? !0 : void 0;
  if (m && p) {
    try {
      t.nextSibling ||
        t.previousSibling ||
        (BT([
          t,
          "access",
          (g) => g.parentNode,
          "access",
          (g) => g.sheet,
          "optionalAccess",
          (g) => g.cssRules,
        ]) &&
          (p = VT(t.parentNode.sheet)));
    } catch (g) {
      console.warn(
        `Cannot get CSS styles from text's parentNode. Error: ${g}`,
        t
      );
    }
    p = zT(p, Yk());
  }
  y && (p = "SCRIPT_PLACEHOLDER");
  const O = Kf(t, r, s, a, i, n);
  if (
    (!m && !y && !I && p && O && (p = o ? o(p) : p.replace(/[\S]/g, "*")),
    I &&
      p &&
      (u.textarea || O) &&
      (p = l ? l(p, t.parentNode) : p.replace(/[\S]/g, "*")),
    d === "OPTION" && p)
  ) {
    const g = iP({ type: null, tagName: d, maskInputOptions: u });
    p = Hg({
      isMasked: Kf(t, r, s, a, i, g),
      element: t,
      value: p,
      maskInputFn: l,
    });
  }
  return { type: Sr.Text, textContent: p || "", isStyle: m, rootId: c };
}
function lke(t, e) {
  const {
      doc: n,
      blockClass: r,
      blockSelector: a,
      unblockSelector: s,
      inlineStylesheet: i,
      maskInputOptions: o = {},
      maskAttributeFn: u,
      maskInputFn: l,
      dataURLOptions: c = {},
      inlineImages: d,
      recordCanvas: p,
      keepIframeSrcFn: m,
      newlyAddedElement: y = !1,
      rootId: I,
      maskAllText: O,
      maskTextClass: g,
      unmaskTextClass: C,
      maskTextSelector: H,
      unmaskTextSelector: B,
    } = e,
    he = nke(t, r, a, s),
    de = $Re(t);
  let U = {};
  const R = t.attributes.length;
  for (let ve = 0; ve < R; ve++) {
    const we = t.attributes[ve];
    we.name &&
      !Lq(de, we.name, we.value) &&
      (U[we.name] = xq(n, de, Uf(we.name), we.value, t, u));
  }
  if (de === "link" && i) {
    const ve = Array.from(n.styleSheets).find((Te) => Te.href === t.href);
    let we = null;
    ve && (we = VT(ve)),
      we && (delete U.rel, delete U.href, (U._cssText = zT(we, ve.href)));
  }
  if (
    de === "style" &&
    t.sheet &&
    !(t.innerText || t.textContent || "").trim().length
  ) {
    const ve = VT(t.sheet);
    ve && (U._cssText = zT(ve, Yk()));
  }
  if (
    de === "input" ||
    de === "textarea" ||
    de === "select" ||
    de === "option"
  ) {
    const ve = t,
      we = Wk(ve),
      Te = jT(ve, OO(de), we),
      Ce = ve.checked;
    if (we !== "submit" && we !== "button" && Te) {
      const Ee = Kf(
        ve,
        g,
        H,
        C,
        B,
        iP({ type: we, tagName: OO(de), maskInputOptions: o })
      );
      U.value = Hg({ isMasked: Ee, element: ve, value: Te, maskInputFn: l });
    }
    Ce && (U.checked = Ce);
  }
  if (
    (de === "option" &&
      (t.selected && !o.select ? (U.selected = !0) : delete U.selected),
    de === "canvas" && p)
  ) {
    if (t.__context === "2d")
      VRe(t) || (U.rr_dataURL = t.toDataURL(c.type, c.quality));
    else if (!("__context" in t)) {
      const ve = t.toDataURL(c.type, c.quality),
        we = document.createElement("canvas");
      (we.width = t.width), (we.height = t.height);
      const Te = we.toDataURL(c.type, c.quality);
      ve !== Te && (U.rr_dataURL = ve);
    }
  }
  if (de === "img" && d) {
    sh || ((sh = n.createElement("canvas")), (n8 = sh.getContext("2d")));
    const ve = t,
      we = ve.crossOrigin;
    ve.crossOrigin = "anonymous";
    const Te = () => {
      ve.removeEventListener("load", Te);
      try {
        (sh.width = ve.naturalWidth),
          (sh.height = ve.naturalHeight),
          n8.drawImage(ve, 0, 0),
          (U.rr_dataURL = sh.toDataURL(c.type, c.quality));
      } catch (Ce) {
        console.warn(`Cannot inline img src=${ve.currentSrc}! Error: ${Ce}`);
      }
      we ? (U.crossOrigin = we) : ve.removeAttribute("crossorigin");
    };
    ve.complete && ve.naturalWidth !== 0
      ? Te()
      : ve.addEventListener("load", Te);
  }
  if (
    ((de === "audio" || de === "video") &&
      ((U.rr_mediaState = t.paused ? "paused" : "played"),
      (U.rr_mediaCurrentTime = t.currentTime)),
    y ||
      (t.scrollLeft && (U.rr_scrollLeft = t.scrollLeft),
      t.scrollTop && (U.rr_scrollTop = t.scrollTop)),
    he)
  ) {
    const { width: ve, height: we } = t.getBoundingClientRect();
    U = { class: U.class, rr_width: `${ve}px`, rr_height: `${we}px` };
  }
  de === "iframe" &&
    !m(U.src) &&
    (t.contentDocument || (U.rr_src = U.src), delete U.src);
  let ge;
  try {
    customElements.get(de) && (ge = !0);
  } catch {}
  return {
    type: Sr.Element,
    tagName: de,
    attributes: U,
    childNodes: [],
    isSVG: tke(t) || void 0,
    needBlock: he,
    rootId: I,
    isCustom: ge,
  };
}
function hs(t) {
  return t == null ? "" : t.toLowerCase();
}
function cke(t, e) {
  if (e.comment && t.type === Sr.Comment) return !0;
  if (t.type === Sr.Element) {
    if (
      e.script &&
      (t.tagName === "script" ||
        (t.tagName === "link" &&
          (t.attributes.rel === "preload" ||
            t.attributes.rel === "modulepreload") &&
          t.attributes.as === "script") ||
        (t.tagName === "link" &&
          t.attributes.rel === "prefetch" &&
          typeof t.attributes.href == "string" &&
          t.attributes.href.endsWith(".js")))
    )
      return !0;
    if (
      e.headFavicon &&
      ((t.tagName === "link" && t.attributes.rel === "shortcut icon") ||
        (t.tagName === "meta" &&
          (hs(t.attributes.name).match(/^msapplication-tile(image|color)$/) ||
            hs(t.attributes.name) === "application-name" ||
            hs(t.attributes.rel) === "icon" ||
            hs(t.attributes.rel) === "apple-touch-icon" ||
            hs(t.attributes.rel) === "shortcut icon")))
    )
      return !0;
    if (t.tagName === "meta") {
      if (
        e.headMetaDescKeywords &&
        hs(t.attributes.name).match(/^description|keywords$/)
      )
        return !0;
      if (
        e.headMetaSocial &&
        (hs(t.attributes.property).match(/^(og|twitter|fb):/) ||
          hs(t.attributes.name).match(/^(og|twitter):/) ||
          hs(t.attributes.name) === "pinterest")
      )
        return !0;
      if (
        e.headMetaRobots &&
        (hs(t.attributes.name) === "robots" ||
          hs(t.attributes.name) === "googlebot" ||
          hs(t.attributes.name) === "bingbot")
      )
        return !0;
      if (e.headMetaHttpEquiv && t.attributes["http-equiv"] !== void 0)
        return !0;
      if (
        e.headMetaAuthorship &&
        (hs(t.attributes.name) === "author" ||
          hs(t.attributes.name) === "generator" ||
          hs(t.attributes.name) === "framework" ||
          hs(t.attributes.name) === "publisher" ||
          hs(t.attributes.name) === "progid" ||
          hs(t.attributes.property).match(/^article:/) ||
          hs(t.attributes.property).match(/^product:/))
      )
        return !0;
      if (
        e.headMetaVerification &&
        (hs(t.attributes.name) === "google-site-verification" ||
          hs(t.attributes.name) === "yandex-verification" ||
          hs(t.attributes.name) === "csrf-token" ||
          hs(t.attributes.name) === "p:domain_verify" ||
          hs(t.attributes.name) === "verify-v1" ||
          hs(t.attributes.name) === "verification" ||
          hs(t.attributes.name) === "shopify-checkout-api-token")
      )
        return !0;
    }
  }
  return !1;
}
function Oh(t, e) {
  const {
    doc: n,
    mirror: r,
    blockClass: a,
    blockSelector: s,
    unblockSelector: i,
    maskAllText: o,
    maskTextClass: u,
    unmaskTextClass: l,
    maskTextSelector: c,
    unmaskTextSelector: d,
    skipChild: p = !1,
    inlineStylesheet: m = !0,
    maskInputOptions: y = {},
    maskAttributeFn: I,
    maskTextFn: O,
    maskInputFn: g,
    slimDOMOptions: C,
    dataURLOptions: H = {},
    inlineImages: B = !1,
    recordCanvas: he = !1,
    onSerialize: de,
    onIframeLoad: U,
    iframeLoadTimeout: R = 5e3,
    onStylesheetLoad: ge,
    stylesheetLoadTimeout: ve = 5e3,
    keepIframeSrcFn: we = () => !1,
    newlyAddedElement: Te = !1,
  } = e;
  let { preserveWhiteSpace: Ce = !0 } = e;
  const Ee = ike(t, {
    doc: n,
    mirror: r,
    blockClass: a,
    blockSelector: s,
    maskAllText: o,
    unblockSelector: i,
    maskTextClass: u,
    unmaskTextClass: l,
    maskTextSelector: c,
    unmaskTextSelector: d,
    inlineStylesheet: m,
    maskInputOptions: y,
    maskAttributeFn: I,
    maskTextFn: O,
    maskInputFn: g,
    dataURLOptions: H,
    inlineImages: B,
    recordCanvas: he,
    keepIframeSrcFn: we,
    newlyAddedElement: Te,
  });
  if (!Ee) return console.warn(t, "not serialized"), null;
  let x;
  r.hasNode(t)
    ? (x = r.getId(t))
    : cke(Ee, C) ||
      (!Ce &&
        Ee.type === Sr.Text &&
        !Ee.isStyle &&
        !Ee.textContent.replace(/^\s+|\s+$/gm, "").length)
    ? (x = Ng)
    : (x = qk());
  const F = Object.assign(Ee, { id: x });
  if ((r.add(t, F), x === Ng)) return null;
  de && de(t);
  let Se = !p;
  if (F.type === Sr.Element) {
    (Se = Se && !F.needBlock), delete F.needBlock;
    const ye = t.shadowRoot;
    ye && vy(ye) && (F.isShadowHost = !0);
  }
  if ((F.type === Sr.Document || F.type === Sr.Element) && Se) {
    C.headWhitespace &&
      F.type === Sr.Element &&
      F.tagName === "head" &&
      (Ce = !1);
    const ye = {
      doc: n,
      mirror: r,
      blockClass: a,
      blockSelector: s,
      maskAllText: o,
      unblockSelector: i,
      maskTextClass: u,
      unmaskTextClass: l,
      maskTextSelector: c,
      unmaskTextSelector: d,
      skipChild: p,
      inlineStylesheet: m,
      maskInputOptions: y,
      maskAttributeFn: I,
      maskTextFn: O,
      maskInputFn: g,
      slimDOMOptions: C,
      dataURLOptions: H,
      inlineImages: B,
      recordCanvas: he,
      preserveWhiteSpace: Ce,
      onSerialize: de,
      onIframeLoad: U,
      iframeLoadTimeout: R,
      onStylesheetLoad: ge,
      stylesheetLoadTimeout: ve,
      keepIframeSrcFn: we,
    };
    for (const Ae of Array.from(t.childNodes)) {
      const De = Oh(Ae, ye);
      De && F.childNodes.push(De);
    }
    if (MRe(t) && t.shadowRoot)
      for (const Ae of Array.from(t.shadowRoot.childNodes)) {
        const De = Oh(Ae, ye);
        De && (vy(t.shadowRoot) && (De.isShadow = !0), F.childNodes.push(De));
      }
  }
  return (
    t.parentNode && gy(t.parentNode) && vy(t.parentNode) && (F.isShadow = !0),
    F.type === Sr.Element &&
      F.tagName === "iframe" &&
      rke(
        t,
        () => {
          const ye = t.contentDocument;
          if (ye && U) {
            const Ae = Oh(ye, {
              doc: ye,
              mirror: r,
              blockClass: a,
              blockSelector: s,
              unblockSelector: i,
              maskAllText: o,
              maskTextClass: u,
              unmaskTextClass: l,
              maskTextSelector: c,
              unmaskTextSelector: d,
              skipChild: !1,
              inlineStylesheet: m,
              maskInputOptions: y,
              maskAttributeFn: I,
              maskTextFn: O,
              maskInputFn: g,
              slimDOMOptions: C,
              dataURLOptions: H,
              inlineImages: B,
              recordCanvas: he,
              preserveWhiteSpace: Ce,
              onSerialize: de,
              onIframeLoad: U,
              iframeLoadTimeout: R,
              onStylesheetLoad: ge,
              stylesheetLoadTimeout: ve,
              keepIframeSrcFn: we,
            });
            Ae && U(t, Ae);
          }
        },
        R
      ),
    F.type === Sr.Element &&
      F.tagName === "link" &&
      F.attributes.rel === "stylesheet" &&
      ake(
        t,
        () => {
          if (ge) {
            const ye = Oh(t, {
              doc: n,
              mirror: r,
              blockClass: a,
              blockSelector: s,
              unblockSelector: i,
              maskAllText: o,
              maskTextClass: u,
              unmaskTextClass: l,
              maskTextSelector: c,
              unmaskTextSelector: d,
              skipChild: !1,
              inlineStylesheet: m,
              maskInputOptions: y,
              maskAttributeFn: I,
              maskTextFn: O,
              maskInputFn: g,
              slimDOMOptions: C,
              dataURLOptions: H,
              inlineImages: B,
              recordCanvas: he,
              preserveWhiteSpace: Ce,
              onSerialize: de,
              onIframeLoad: U,
              iframeLoadTimeout: R,
              onStylesheetLoad: ge,
              stylesheetLoadTimeout: ve,
              keepIframeSrcFn: we,
            });
            ye && ge(t, ye);
          }
        },
        ve
      ),
    F
  );
}
function dke(t, e) {
  const {
    mirror: n = new kq(),
    blockClass: r = "rr-block",
    blockSelector: a = null,
    unblockSelector: s = null,
    maskAllText: i = !1,
    maskTextClass: o = "rr-mask",
    unmaskTextClass: u = null,
    maskTextSelector: l = null,
    unmaskTextSelector: c = null,
    inlineStylesheet: d = !0,
    inlineImages: p = !1,
    recordCanvas: m = !1,
    maskAllInputs: y = !1,
    maskAttributeFn: I,
    maskTextFn: O,
    maskInputFn: g,
    slimDOM: C = !1,
    dataURLOptions: H,
    preserveWhiteSpace: B,
    onSerialize: he,
    onIframeLoad: de,
    iframeLoadTimeout: U,
    onStylesheetLoad: R,
    stylesheetLoadTimeout: ge,
    keepIframeSrcFn: ve = () => !1,
  } = e || {};
  return Oh(t, {
    doc: t,
    mirror: n,
    blockClass: r,
    blockSelector: a,
    unblockSelector: s,
    maskAllText: i,
    maskTextClass: o,
    unmaskTextClass: u,
    maskTextSelector: l,
    unmaskTextSelector: c,
    skipChild: !1,
    inlineStylesheet: d,
    maskInputOptions:
      y === !0
        ? {
            color: !0,
            date: !0,
            "datetime-local": !0,
            email: !0,
            month: !0,
            number: !0,
            range: !0,
            search: !0,
            tel: !0,
            text: !0,
            time: !0,
            url: !0,
            week: !0,
            textarea: !0,
            select: !0,
          }
        : y === !1
        ? {}
        : y,
    maskAttributeFn: I,
    maskTextFn: O,
    maskInputFn: g,
    slimDOMOptions:
      C === !0 || C === "all"
        ? {
            script: !0,
            comment: !0,
            headFavicon: !0,
            headWhitespace: !0,
            headMetaDescKeywords: C === "all",
            headMetaSocial: !0,
            headMetaRobots: !0,
            headMetaHttpEquiv: !0,
            headMetaAuthorship: !0,
            headMetaVerification: !0,
          }
        : C === !1
        ? {}
        : C,
    dataURLOptions: H,
    inlineImages: p,
    recordCanvas: m,
    preserveWhiteSpace: B,
    onSerialize: he,
    onIframeLoad: de,
    iframeLoadTimeout: U,
    onStylesheetLoad: R,
    stylesheetLoadTimeout: ge,
    keepIframeSrcFn: ve,
    newlyAddedElement: !1,
  });
}
function Jl(t) {
  let e,
    n = t[0],
    r = 1;
  for (; r < t.length; ) {
    const a = t[r],
      s = t[r + 1];
    if (
      ((r += 2), (a === "optionalAccess" || a === "optionalCall") && n == null)
    )
      return;
    a === "access" || a === "optionalAccess"
      ? ((e = n), (n = s(n)))
      : (a === "call" || a === "optionalCall") &&
        ((n = s((...i) => n.call(e, ...i))), (e = void 0));
  }
  return n;
}
function va(t, e, n = document) {
  const r = { capture: !0, passive: !0 };
  return n.addEventListener(t, e, r), () => n.removeEventListener(t, e, r);
}
const mh = `Please stop import mirror directly. Instead of that,\r
now you can use replayer.getMirror() to access the mirror instance of a replayer,\r
or you can use record.mirror to access the mirror instance during recording.`;
let s8 = {
  map: {},
  getId() {
    return console.error(mh), -1;
  },
  getNode() {
    return console.error(mh), null;
  },
  removeNodeFromMap() {
    console.error(mh);
  },
  has() {
    return console.error(mh), !1;
  },
  reset() {
    console.error(mh);
  },
};
typeof window < "u" &&
  window.Proxy &&
  window.Reflect &&
  (s8 = new Proxy(s8, {
    get(t, e, n) {
      return e === "map" && console.error(mh), Reflect.get(t, e, n);
    },
  }));
function Rg(t, e, n = {}) {
  let r = null,
    a = 0;
  return function (...s) {
    const i = Date.now();
    !a && n.leading === !1 && (a = i);
    const o = e - (i - a),
      u = this;
    o <= 0 || o > e
      ? (r && (clearTimeout(r), (r = null)), (a = i), t.apply(u, s))
      : !r &&
        n.trailing !== !1 &&
        (r = setTimeout(() => {
          (a = n.leading === !1 ? 0 : Date.now()), (r = null), t.apply(u, s);
        }, o));
  };
}
function Mq(t, e, n, r, a = window) {
  const s = a.Object.getOwnPropertyDescriptor(t, e);
  return (
    a.Object.defineProperty(
      t,
      e,
      r
        ? n
        : {
            set(i) {
              setTimeout(() => {
                n.set.call(this, i);
              }, 0),
                s && s.set && s.set.call(this, i);
            },
          }
    ),
    () => Mq(t, e, s || {}, !0)
  );
}
function Xk(t, e, n) {
  try {
    if (!(e in t)) return () => {};
    const r = t[e],
      a = n(r);
    return (
      typeof a == "function" &&
        ((a.prototype = a.prototype || {}),
        Object.defineProperties(a, {
          __rrweb_original__: { enumerable: !1, value: r },
        })),
      (t[e] = a),
      () => {
        t[e] = r;
      }
    );
  } catch {
    return () => {};
  }
}
let $T = Date.now;
/[1-9][0-9]{12}/.test(Date.now().toString()) ||
  ($T = () => new Date().getTime());
function Dq(t) {
  const e = t.document;
  return {
    left: e.scrollingElement
      ? e.scrollingElement.scrollLeft
      : t.pageXOffset !== void 0
      ? t.pageXOffset
      : Jl([
          e,
          "optionalAccess",
          (n) => n.documentElement,
          "access",
          (n) => n.scrollLeft,
        ]) ||
        Jl([
          e,
          "optionalAccess",
          (n) => n.body,
          "optionalAccess",
          (n) => n.parentElement,
          "optionalAccess",
          (n) => n.scrollLeft,
        ]) ||
        Jl([
          e,
          "optionalAccess",
          (n) => n.body,
          "optionalAccess",
          (n) => n.scrollLeft,
        ]) ||
        0,
    top: e.scrollingElement
      ? e.scrollingElement.scrollTop
      : t.pageYOffset !== void 0
      ? t.pageYOffset
      : Jl([
          e,
          "optionalAccess",
          (n) => n.documentElement,
          "access",
          (n) => n.scrollTop,
        ]) ||
        Jl([
          e,
          "optionalAccess",
          (n) => n.body,
          "optionalAccess",
          (n) => n.parentElement,
          "optionalAccess",
          (n) => n.scrollTop,
        ]) ||
        Jl([
          e,
          "optionalAccess",
          (n) => n.body,
          "optionalAccess",
          (n) => n.scrollTop,
        ]) ||
        0,
  };
}
function Gq() {
  return (
    window.innerHeight ||
    (document.documentElement && document.documentElement.clientHeight) ||
    (document.body && document.body.clientHeight)
  );
}
function Fq() {
  return (
    window.innerWidth ||
    (document.documentElement && document.documentElement.clientWidth) ||
    (document.body && document.body.clientWidth)
  );
}
function yo(t, e, n, r, a) {
  if (!t) return !1;
  const s = t.nodeType === t.ELEMENT_NODE ? t : t.parentElement;
  if (!s) return !1;
  const i = Ah(e, n);
  if (!a) {
    const l = r && s.matches(r);
    return i(s) && !l;
  }
  const o = Dd(s, i);
  let u = -1;
  return o < 0
    ? !1
    : (r && (u = Dd(s, Ah(null, r))), o > -1 && u < 0 ? !0 : o < u);
}
function pke(t, e) {
  return e.getId(t) !== -1;
}
function eA(t, e) {
  return e.getId(t) === Ng;
}
function Uq(t, e) {
  if (gy(t)) return !1;
  const n = e.getId(t);
  return e.has(n)
    ? t.parentNode && t.parentNode.nodeType === t.DOCUMENT_NODE
      ? !1
      : t.parentNode
      ? Uq(t.parentNode, e)
      : !0
    : !0;
}
function HO(t) {
  return !!t.changedTouches;
}
function hke(t = window) {
  "NodeList" in t &&
    !t.NodeList.prototype.forEach &&
    (t.NodeList.prototype.forEach = Array.prototype.forEach),
    "DOMTokenList" in t &&
      !t.DOMTokenList.prototype.forEach &&
      (t.DOMTokenList.prototype.forEach = Array.prototype.forEach),
    Node.prototype.contains ||
      (Node.prototype.contains = (...e) => {
        let n = e[0];
        if (!(0 in e)) throw new TypeError("1 argument is required");
        do if (this === n) return !0;
        while ((n = n && n.parentNode));
        return !1;
      });
}
function Kq(t, e) {
  return !!(t.nodeName === "IFRAME" && e.getMeta(t));
}
function Bq(t, e) {
  return !!(
    t.nodeName === "LINK" &&
    t.nodeType === t.ELEMENT_NODE &&
    t.getAttribute &&
    t.getAttribute("rel") === "stylesheet" &&
    e.getMeta(t)
  );
}
function NO(t) {
  return !!Jl([t, "optionalAccess", (e) => e.shadowRoot]);
}
class fke {
  constructor() {
    (this.id = 1),
      (this.styleIDMap = new WeakMap()),
      (this.idStyleMap = new Map());
  }
  getId(e) {
    return xAe(this.styleIDMap.get(e), () => -1);
  }
  has(e) {
    return this.styleIDMap.has(e);
  }
  add(e, n) {
    if (this.has(e)) return this.getId(e);
    let r;
    return (
      n === void 0 ? (r = this.id++) : (r = n),
      this.styleIDMap.set(e, r),
      this.idStyleMap.set(r, e),
      r
    );
  }
  getStyle(e) {
    return this.idStyleMap.get(e) || null;
  }
  reset() {
    (this.styleIDMap = new WeakMap()),
      (this.idStyleMap = new Map()),
      (this.id = 1);
  }
  generateId() {
    return this.id++;
  }
}
function Vq(t) {
  let e = null;
  return (
    Jl([
      t,
      "access",
      (n) => n.getRootNode,
      "optionalCall",
      (n) => n(),
      "optionalAccess",
      (n) => n.nodeType,
    ]) === Node.DOCUMENT_FRAGMENT_NODE &&
      t.getRootNode().host &&
      (e = t.getRootNode().host),
    e
  );
}
function mke(t) {
  let e = t,
    n;
  for (; (n = Vq(e)); ) e = n;
  return e;
}
function Ske(t) {
  const e = t.ownerDocument;
  if (!e) return !1;
  const n = mke(t);
  return e.contains(n);
}
function jq(t) {
  const e = t.ownerDocument;
  return e ? e.contains(t) || Ske(t) : !1;
}
let tA;
function yke() {
  if (tA) return tA;
  const t = window.document;
  let e = window.requestAnimationFrame;
  if (t && typeof t.createElement == "function")
    try {
      const n = t.createElement("iframe");
      (n.hidden = !0), t.head.appendChild(n);
      const r = n.contentWindow;
      r && r.requestAnimationFrame && (e = r.requestAnimationFrame),
        t.head.removeChild(n);
    } catch {}
  return (tA = e.bind(window));
}
function gke(...t) {
  return yke()(...t);
}
var bn = ((t) => (
    (t[(t.DomContentLoaded = 0)] = "DomContentLoaded"),
    (t[(t.Load = 1)] = "Load"),
    (t[(t.FullSnapshot = 2)] = "FullSnapshot"),
    (t[(t.IncrementalSnapshot = 3)] = "IncrementalSnapshot"),
    (t[(t.Meta = 4)] = "Meta"),
    (t[(t.Custom = 5)] = "Custom"),
    (t[(t.Plugin = 6)] = "Plugin"),
    t
  ))(bn || {}),
  En = ((t) => (
    (t[(t.Mutation = 0)] = "Mutation"),
    (t[(t.MouseMove = 1)] = "MouseMove"),
    (t[(t.MouseInteraction = 2)] = "MouseInteraction"),
    (t[(t.Scroll = 3)] = "Scroll"),
    (t[(t.ViewportResize = 4)] = "ViewportResize"),
    (t[(t.Input = 5)] = "Input"),
    (t[(t.TouchMove = 6)] = "TouchMove"),
    (t[(t.MediaInteraction = 7)] = "MediaInteraction"),
    (t[(t.StyleSheetRule = 8)] = "StyleSheetRule"),
    (t[(t.CanvasMutation = 9)] = "CanvasMutation"),
    (t[(t.Font = 10)] = "Font"),
    (t[(t.Log = 11)] = "Log"),
    (t[(t.Drag = 12)] = "Drag"),
    (t[(t.StyleDeclaration = 13)] = "StyleDeclaration"),
    (t[(t.Selection = 14)] = "Selection"),
    (t[(t.AdoptedStyleSheet = 15)] = "AdoptedStyleSheet"),
    (t[(t.CustomElement = 16)] = "CustomElement"),
    t
  ))(En || {}),
  ha = ((t) => (
    (t[(t.MouseUp = 0)] = "MouseUp"),
    (t[(t.MouseDown = 1)] = "MouseDown"),
    (t[(t.Click = 2)] = "Click"),
    (t[(t.ContextMenu = 3)] = "ContextMenu"),
    (t[(t.DblClick = 4)] = "DblClick"),
    (t[(t.Focus = 5)] = "Focus"),
    (t[(t.Blur = 6)] = "Blur"),
    (t[(t.TouchStart = 7)] = "TouchStart"),
    (t[(t.TouchMove_Departed = 8)] = "TouchMove_Departed"),
    (t[(t.TouchEnd = 9)] = "TouchEnd"),
    (t[(t.TouchCancel = 10)] = "TouchCancel"),
    t
  ))(ha || {}),
  Uu = ((t) => (
    (t[(t.Mouse = 0)] = "Mouse"),
    (t[(t.Pen = 1)] = "Pen"),
    (t[(t.Touch = 2)] = "Touch"),
    t
  ))(Uu || {});
function vke(t) {
  let e,
    n = t[0],
    r = 1;
  for (; r < t.length; ) {
    const a = t[r],
      s = t[r + 1];
    if (
      ((r += 2), (a === "optionalAccess" || a === "optionalCall") && n == null)
    )
      return;
    a === "access" || a === "optionalAccess"
      ? ((e = n), (n = s(n)))
      : (a === "call" || a === "optionalCall") &&
        ((n = s((...i) => n.call(e, ...i))), (e = void 0));
  }
  return n;
}
function r8(t) {
  return "__ln" in t;
}
class _ke {
  constructor() {
    (this.length = 0), (this.head = null), (this.tail = null);
  }
  get(e) {
    if (e >= this.length) throw new Error("Position outside of list range");
    let n = this.head;
    for (let r = 0; r < e; r++)
      n = vke([n, "optionalAccess", (a) => a.next]) || null;
    return n;
  }
  addNode(e) {
    const n = { value: e, previous: null, next: null };
    if (((e.__ln = n), e.previousSibling && r8(e.previousSibling))) {
      const r = e.previousSibling.__ln.next;
      (n.next = r),
        (n.previous = e.previousSibling.__ln),
        (e.previousSibling.__ln.next = n),
        r && (r.previous = n);
    } else if (
      e.nextSibling &&
      r8(e.nextSibling) &&
      e.nextSibling.__ln.previous
    ) {
      const r = e.nextSibling.__ln.previous;
      (n.previous = r),
        (n.next = e.nextSibling.__ln),
        (e.nextSibling.__ln.previous = n),
        r && (r.next = n);
    } else
      this.head && (this.head.previous = n),
        (n.next = this.head),
        (this.head = n);
    n.next === null && (this.tail = n), this.length++;
  }
  removeNode(e) {
    const n = e.__ln;
    this.head &&
      (n.previous
        ? ((n.previous.next = n.next),
          n.next ? (n.next.previous = n.previous) : (this.tail = n.previous))
        : ((this.head = n.next),
          this.head ? (this.head.previous = null) : (this.tail = null)),
      e.__ln && delete e.__ln,
      this.length--);
  }
}
const a8 = (t, e) => `${t}@${e}`;
class bke {
  constructor() {
    (this.frozen = !1),
      (this.locked = !1),
      (this.texts = []),
      (this.attributes = []),
      (this.removes = []),
      (this.mapRemoves = []),
      (this.movedMap = {}),
      (this.addedSet = new Set()),
      (this.movedSet = new Set()),
      (this.droppedSet = new Set()),
      (this.processMutations = (e) => {
        e.forEach(this.processMutation), this.emit();
      }),
      (this.emit = () => {
        if (this.frozen || this.locked) return;
        const e = [],
          n = new Set(),
          r = new _ke(),
          a = (u) => {
            let l = u,
              c = Ng;
            for (; c === Ng; )
              (l = l && l.nextSibling), (c = l && this.mirror.getId(l));
            return c;
          },
          s = (u) => {
            if (!u.parentNode || !jq(u)) return;
            const l = gy(u.parentNode)
                ? this.mirror.getId(Vq(u))
                : this.mirror.getId(u.parentNode),
              c = a(u);
            if (l === -1 || c === -1) return r.addNode(u);
            const d = Oh(u, {
              doc: this.doc,
              mirror: this.mirror,
              blockClass: this.blockClass,
              blockSelector: this.blockSelector,
              maskAllText: this.maskAllText,
              unblockSelector: this.unblockSelector,
              maskTextClass: this.maskTextClass,
              unmaskTextClass: this.unmaskTextClass,
              maskTextSelector: this.maskTextSelector,
              unmaskTextSelector: this.unmaskTextSelector,
              skipChild: !0,
              newlyAddedElement: !0,
              inlineStylesheet: this.inlineStylesheet,
              maskInputOptions: this.maskInputOptions,
              maskAttributeFn: this.maskAttributeFn,
              maskTextFn: this.maskTextFn,
              maskInputFn: this.maskInputFn,
              slimDOMOptions: this.slimDOMOptions,
              dataURLOptions: this.dataURLOptions,
              recordCanvas: this.recordCanvas,
              inlineImages: this.inlineImages,
              onSerialize: (p) => {
                Kq(p, this.mirror) && this.iframeManager.addIframe(p),
                  Bq(p, this.mirror) &&
                    this.stylesheetManager.trackLinkElement(p),
                  NO(u) &&
                    this.shadowDomManager.addShadowRoot(u.shadowRoot, this.doc);
              },
              onIframeLoad: (p, m) => {
                this.iframeManager.attachIframe(p, m),
                  this.shadowDomManager.observeAttachShadow(p);
              },
              onStylesheetLoad: (p, m) => {
                this.stylesheetManager.attachLinkElement(p, m);
              },
            });
            d && (e.push({ parentId: l, nextId: c, node: d }), n.add(d.id));
          };
        for (; this.mapRemoves.length; )
          this.mirror.removeNodeFromMap(this.mapRemoves.shift());
        for (const u of this.movedSet)
          (i8(this.removes, u, this.mirror) &&
            !this.movedSet.has(u.parentNode)) ||
            s(u);
        for (const u of this.addedSet)
          (!o8(this.droppedSet, u) && !i8(this.removes, u, this.mirror)) ||
          o8(this.movedSet, u)
            ? s(u)
            : this.droppedSet.add(u);
        let i = null;
        for (; r.length; ) {
          let u = null;
          if (i) {
            const l = this.mirror.getId(i.value.parentNode),
              c = a(i.value);
            l !== -1 && c !== -1 && (u = i);
          }
          if (!u) {
            let l = r.tail;
            for (; l; ) {
              const c = l;
              if (((l = l.previous), c)) {
                const d = this.mirror.getId(c.value.parentNode);
                if (a(c.value) === -1) continue;
                if (d !== -1) {
                  u = c;
                  break;
                } else {
                  const m = c.value;
                  if (
                    m.parentNode &&
                    m.parentNode.nodeType === Node.DOCUMENT_FRAGMENT_NODE
                  ) {
                    const y = m.parentNode.host;
                    if (this.mirror.getId(y) !== -1) {
                      u = c;
                      break;
                    }
                  }
                }
              }
            }
          }
          if (!u) {
            for (; r.head; ) r.removeNode(r.head.value);
            break;
          }
          (i = u.previous), r.removeNode(u.value), s(u.value);
        }
        const o = {
          texts: this.texts
            .map((u) => ({ id: this.mirror.getId(u.node), value: u.value }))
            .filter((u) => !n.has(u.id))
            .filter((u) => this.mirror.has(u.id)),
          attributes: this.attributes
            .map((u) => {
              const { attributes: l } = u;
              if (typeof l.style == "string") {
                const c = JSON.stringify(u.styleDiff),
                  d = JSON.stringify(u._unchangedStyles);
                c.length < l.style.length &&
                  (c + d).split("var(").length ===
                    l.style.split("var(").length &&
                  (l.style = u.styleDiff);
              }
              return { id: this.mirror.getId(u.node), attributes: l };
            })
            .filter((u) => !n.has(u.id))
            .filter((u) => this.mirror.has(u.id)),
          removes: this.removes,
          adds: e,
        };
        (!o.texts.length &&
          !o.attributes.length &&
          !o.removes.length &&
          !o.adds.length) ||
          ((this.texts = []),
          (this.attributes = []),
          (this.removes = []),
          (this.addedSet = new Set()),
          (this.movedSet = new Set()),
          (this.droppedSet = new Set()),
          (this.movedMap = {}),
          this.mutationCb(o));
      }),
      (this.processMutation = (e) => {
        if (eA(e.target, this.mirror)) return;
        let n;
        try {
          n = document.implementation.createHTMLDocument();
        } catch {
          n = this.doc;
        }
        switch (e.type) {
          case "characterData": {
            const r = e.target.textContent;
            !yo(
              e.target,
              this.blockClass,
              this.blockSelector,
              this.unblockSelector,
              !1
            ) &&
              r !== e.oldValue &&
              this.texts.push({
                value:
                  Kf(
                    e.target,
                    this.maskTextClass,
                    this.maskTextSelector,
                    this.unmaskTextClass,
                    this.unmaskTextSelector,
                    this.maskAllText
                  ) && r
                    ? this.maskTextFn
                      ? this.maskTextFn(r)
                      : r.replace(/[\S]/g, "*")
                    : r,
                node: e.target,
              });
            break;
          }
          case "attributes": {
            const r = e.target;
            let a = e.attributeName,
              s = e.target.getAttribute(a);
            if (a === "value") {
              const o = Wk(r),
                u = r.tagName;
              s = jT(r, u, o);
              const l = iP({
                  maskInputOptions: this.maskInputOptions,
                  tagName: u,
                  type: o,
                }),
                c = Kf(
                  e.target,
                  this.maskTextClass,
                  this.maskTextSelector,
                  this.unmaskTextClass,
                  this.unmaskTextSelector,
                  l
                );
              s = Hg({
                isMasked: c,
                element: r,
                value: s,
                maskInputFn: this.maskInputFn,
              });
            }
            if (
              yo(
                e.target,
                this.blockClass,
                this.blockSelector,
                this.unblockSelector,
                !1
              ) ||
              s === e.oldValue
            )
              return;
            let i = this.attributes.find((o) => o.node === e.target);
            if (
              r.tagName === "IFRAME" &&
              a === "src" &&
              !this.keepIframeSrcFn(s)
            )
              if (!r.contentDocument) a = "rr_src";
              else return;
            if (
              (i ||
                ((i = {
                  node: e.target,
                  attributes: {},
                  styleDiff: {},
                  _unchangedStyles: {},
                }),
                this.attributes.push(i)),
              a === "type" &&
                r.tagName === "INPUT" &&
                (e.oldValue || "").toLowerCase() === "password" &&
                r.setAttribute("data-rr-is-password", "true"),
              !Lq(r.tagName, a) &&
                ((i.attributes[a] = xq(
                  this.doc,
                  Uf(r.tagName),
                  Uf(a),
                  s,
                  r,
                  this.maskAttributeFn
                )),
                a === "style"))
            ) {
              const o = n.createElement("span");
              e.oldValue && o.setAttribute("style", e.oldValue);
              for (const u of Array.from(r.style)) {
                const l = r.style.getPropertyValue(u),
                  c = r.style.getPropertyPriority(u);
                l !== o.style.getPropertyValue(u) ||
                c !== o.style.getPropertyPriority(u)
                  ? c === ""
                    ? (i.styleDiff[u] = l)
                    : (i.styleDiff[u] = [l, c])
                  : (i._unchangedStyles[u] = [l, c]);
              }
              for (const u of Array.from(o.style))
                r.style.getPropertyValue(u) === "" && (i.styleDiff[u] = !1);
            }
            break;
          }
          case "childList": {
            if (
              yo(
                e.target,
                this.blockClass,
                this.blockSelector,
                this.unblockSelector,
                !0
              )
            )
              return;
            e.addedNodes.forEach((r) => this.genAdds(r, e.target)),
              e.removedNodes.forEach((r) => {
                const a = this.mirror.getId(r),
                  s = gy(e.target)
                    ? this.mirror.getId(e.target.host)
                    : this.mirror.getId(e.target);
                yo(
                  e.target,
                  this.blockClass,
                  this.blockSelector,
                  this.unblockSelector,
                  !1
                ) ||
                  eA(r, this.mirror) ||
                  !pke(r, this.mirror) ||
                  (this.addedSet.has(r)
                    ? (RO(this.addedSet, r), this.droppedSet.add(r))
                    : (this.addedSet.has(e.target) && a === -1) ||
                      Uq(e.target, this.mirror) ||
                      (this.movedSet.has(r) && this.movedMap[a8(a, s)]
                        ? RO(this.movedSet, r)
                        : this.removes.push({
                            parentId: s,
                            id: a,
                            isShadow:
                              gy(e.target) && vy(e.target) ? !0 : void 0,
                          })),
                  this.mapRemoves.push(r));
              });
            break;
          }
        }
      }),
      (this.genAdds = (e, n) => {
        if (
          !this.processedNodeManager.inOtherBuffer(e, this) &&
          !(this.addedSet.has(e) || this.movedSet.has(e))
        ) {
          if (this.mirror.hasNode(e)) {
            if (eA(e, this.mirror)) return;
            this.movedSet.add(e);
            let r = null;
            n && this.mirror.hasNode(n) && (r = this.mirror.getId(n)),
              r &&
                r !== -1 &&
                (this.movedMap[a8(this.mirror.getId(e), r)] = !0);
          } else this.addedSet.add(e), this.droppedSet.delete(e);
          yo(
            e,
            this.blockClass,
            this.blockSelector,
            this.unblockSelector,
            !1
          ) ||
            (e.childNodes.forEach((r) => this.genAdds(r)),
            NO(e) &&
              e.shadowRoot.childNodes.forEach((r) => {
                this.processedNodeManager.add(r, this), this.genAdds(r, e);
              }));
        }
      });
  }
  init(e) {
    [
      "mutationCb",
      "blockClass",
      "blockSelector",
      "unblockSelector",
      "maskAllText",
      "maskTextClass",
      "unmaskTextClass",
      "maskTextSelector",
      "unmaskTextSelector",
      "inlineStylesheet",
      "maskInputOptions",
      "maskAttributeFn",
      "maskTextFn",
      "maskInputFn",
      "keepIframeSrcFn",
      "recordCanvas",
      "inlineImages",
      "slimDOMOptions",
      "dataURLOptions",
      "doc",
      "mirror",
      "iframeManager",
      "stylesheetManager",
      "shadowDomManager",
      "canvasManager",
      "processedNodeManager",
    ].forEach((n) => {
      this[n] = e[n];
    });
  }
  freeze() {
    (this.frozen = !0), this.canvasManager.freeze();
  }
  unfreeze() {
    (this.frozen = !1), this.canvasManager.unfreeze(), this.emit();
  }
  isFrozen() {
    return this.frozen;
  }
  lock() {
    (this.locked = !0), this.canvasManager.lock();
  }
  unlock() {
    (this.locked = !1), this.canvasManager.unlock(), this.emit();
  }
  reset() {
    this.shadowDomManager.reset(), this.canvasManager.reset();
  }
}
function RO(t, e) {
  t.delete(e), e.childNodes.forEach((n) => RO(t, n));
}
function i8(t, e, n) {
  return t.length === 0 ? !1 : zq(t, e, n);
}
function zq(t, e, n) {
  const { parentNode: r } = e;
  if (!r) return !1;
  const a = n.getId(r);
  return t.some((s) => s.id === a) ? !0 : zq(t, r, n);
}
function o8(t, e) {
  return t.size === 0 ? !1 : $q(t, e);
}
function $q(t, e) {
  const { parentNode: n } = e;
  return n ? (t.has(n) ? !0 : $q(t, n)) : !1;
}
let _y;
function Eke(t) {
  _y = t;
}
function Tke() {
  _y = void 0;
}
const Dn = (t) =>
  _y
    ? (...n) => {
        try {
          return t(...n);
        } catch (r) {
          if (_y && _y(r) === !0) return () => {};
          throw r;
        }
      }
    : t;
function eu(t) {
  let e,
    n = t[0],
    r = 1;
  for (; r < t.length; ) {
    const a = t[r],
      s = t[r + 1];
    if (
      ((r += 2), (a === "optionalAccess" || a === "optionalCall") && n == null)
    )
      return;
    a === "access" || a === "optionalAccess"
      ? ((e = n), (n = s(n)))
      : (a === "call" || a === "optionalCall") &&
        ((n = s((...i) => n.call(e, ...i))), (e = void 0));
  }
  return n;
}
const Hh = [];
function Mv(t) {
  try {
    if ("composedPath" in t) {
      const e = t.composedPath();
      if (e.length) return e[0];
    } else if ("path" in t && t.path.length) return t.path[0];
  } catch {}
  return t && t.target;
}
function Wq(t, e) {
  const n = new bke();
  Hh.push(n), n.init(t);
  let r = window.MutationObserver || window.__rrMutationObserver;
  const a = eu([
    window,
    "optionalAccess",
    (i) => i.Zone,
    "optionalAccess",
    (i) => i.__symbol__,
    "optionalCall",
    (i) => i("MutationObserver"),
  ]);
  a && window[a] && (r = window[a]);
  const s = new r(
    Dn((i) => {
      (t.onMutation && t.onMutation(i) === !1) || n.processMutations.bind(n)(i);
    })
  );
  return (
    s.observe(e, {
      attributes: !0,
      attributeOldValue: !0,
      characterData: !0,
      characterDataOldValue: !0,
      childList: !0,
      subtree: !0,
    }),
    s
  );
}
function wke({ mousemoveCb: t, sampling: e, doc: n, mirror: r }) {
  if (e.mousemove === !1) return () => {};
  const a = typeof e.mousemove == "number" ? e.mousemove : 50,
    s = typeof e.mousemoveCallback == "number" ? e.mousemoveCallback : 500;
  let i = [],
    o;
  const u = Rg(
      Dn((d) => {
        const p = Date.now() - o;
        t(
          i.map((m) => ((m.timeOffset -= p), m)),
          d
        ),
          (i = []),
          (o = null);
      }),
      s
    ),
    l = Dn(
      Rg(
        Dn((d) => {
          const p = Mv(d),
            { clientX: m, clientY: y } = HO(d) ? d.changedTouches[0] : d;
          o || (o = $T()),
            i.push({ x: m, y, id: r.getId(p), timeOffset: $T() - o }),
            u(
              typeof DragEvent < "u" && d instanceof DragEvent
                ? En.Drag
                : d instanceof MouseEvent
                ? En.MouseMove
                : En.TouchMove
            );
        }),
        a,
        { trailing: !1 }
      )
    ),
    c = [va("mousemove", l, n), va("touchmove", l, n), va("drag", l, n)];
  return Dn(() => {
    c.forEach((d) => d());
  });
}
function Pke({
  mouseInteractionCb: t,
  doc: e,
  mirror: n,
  blockClass: r,
  blockSelector: a,
  unblockSelector: s,
  sampling: i,
}) {
  if (i.mouseInteraction === !1) return () => {};
  const o =
      i.mouseInteraction === !0 || i.mouseInteraction === void 0
        ? {}
        : i.mouseInteraction,
    u = [];
  let l = null;
  const c = (d) => (p) => {
    const m = Mv(p);
    if (yo(m, r, a, s, !0)) return;
    let y = null,
      I = d;
    if ("pointerType" in p) {
      switch (p.pointerType) {
        case "mouse":
          y = Uu.Mouse;
          break;
        case "touch":
          y = Uu.Touch;
          break;
        case "pen":
          y = Uu.Pen;
          break;
      }
      y === Uu.Touch
        ? ha[d] === ha.MouseDown
          ? (I = "TouchStart")
          : ha[d] === ha.MouseUp && (I = "TouchEnd")
        : Uu.Pen;
    } else HO(p) && (y = Uu.Touch);
    y !== null
      ? ((l = y),
        ((I.startsWith("Touch") && y === Uu.Touch) ||
          (I.startsWith("Mouse") && y === Uu.Mouse)) &&
          (y = null))
      : ha[d] === ha.Click && ((y = l), (l = null));
    const O = HO(p) ? p.changedTouches[0] : p;
    if (!O) return;
    const g = n.getId(m),
      { clientX: C, clientY: H } = O;
    Dn(t)({
      type: ha[I],
      id: g,
      x: C,
      y: H,
      ...(y !== null && { pointerType: y }),
    });
  };
  return (
    Object.keys(ha)
      .filter(
        (d) =>
          Number.isNaN(Number(d)) && !d.endsWith("_Departed") && o[d] !== !1
      )
      .forEach((d) => {
        let p = Uf(d);
        const m = c(d);
        if (window.PointerEvent)
          switch (ha[d]) {
            case ha.MouseDown:
            case ha.MouseUp:
              p = p.replace("mouse", "pointer");
              break;
            case ha.TouchStart:
            case ha.TouchEnd:
              return;
          }
        u.push(va(p, m, e));
      }),
    Dn(() => {
      u.forEach((d) => d());
    })
  );
}
function qq({
  scrollCb: t,
  doc: e,
  mirror: n,
  blockClass: r,
  blockSelector: a,
  unblockSelector: s,
  sampling: i,
}) {
  const o = Dn(
    Rg(
      Dn((u) => {
        const l = Mv(u);
        if (!l || yo(l, r, a, s, !0)) return;
        const c = n.getId(l);
        if (l === e && e.defaultView) {
          const d = Dq(e.defaultView);
          t({ id: c, x: d.left, y: d.top });
        } else t({ id: c, x: l.scrollLeft, y: l.scrollTop });
      }),
      i.scroll || 100
    )
  );
  return va("scroll", o, e);
}
function Ike({ viewportResizeCb: t }, { win: e }) {
  let n = -1,
    r = -1;
  const a = Dn(
    Rg(
      Dn(() => {
        const s = Gq(),
          i = Fq();
        (n !== s || r !== i) &&
          (t({ width: Number(i), height: Number(s) }), (n = s), (r = i));
      }),
      200
    )
  );
  return va("resize", a, e);
}
const Cke = ["INPUT", "TEXTAREA", "SELECT"],
  u8 = new WeakMap();
function Ake({
  inputCb: t,
  doc: e,
  mirror: n,
  blockClass: r,
  blockSelector: a,
  unblockSelector: s,
  ignoreClass: i,
  ignoreSelector: o,
  maskInputOptions: u,
  maskInputFn: l,
  sampling: c,
  userTriggeredOnInput: d,
  maskTextClass: p,
  unmaskTextClass: m,
  maskTextSelector: y,
  unmaskTextSelector: I,
}) {
  function O(U) {
    let R = Mv(U);
    const ge = U.isTrusted,
      ve = R && OO(R.tagName);
    if (
      (ve === "OPTION" && (R = R.parentElement),
      !R || !ve || Cke.indexOf(ve) < 0 || yo(R, r, a, s, !0))
    )
      return;
    const we = R;
    if (we.classList.contains(i) || (o && we.matches(o))) return;
    const Te = Wk(R);
    let Ce = jT(we, ve, Te),
      Ee = !1;
    const x = iP({ maskInputOptions: u, tagName: ve, type: Te }),
      F = Kf(R, p, y, m, I, x);
    (Te === "radio" || Te === "checkbox") && (Ee = R.checked),
      (Ce = Hg({ isMasked: F, element: R, value: Ce, maskInputFn: l })),
      g(
        R,
        d
          ? { text: Ce, isChecked: Ee, userTriggered: ge }
          : { text: Ce, isChecked: Ee }
      );
    const Se = R.name;
    Te === "radio" &&
      Se &&
      Ee &&
      e.querySelectorAll(`input[type="radio"][name="${Se}"]`).forEach((ye) => {
        if (ye !== R) {
          const Ae = Hg({
            isMasked: F,
            element: ye,
            value: jT(ye, ve, Te),
            maskInputFn: l,
          });
          g(
            ye,
            d
              ? { text: Ae, isChecked: !Ee, userTriggered: !1 }
              : { text: Ae, isChecked: !Ee }
          );
        }
      });
  }
  function g(U, R) {
    const ge = u8.get(U);
    if (!ge || ge.text !== R.text || ge.isChecked !== R.isChecked) {
      u8.set(U, R);
      const ve = n.getId(U);
      Dn(t)({ ...R, id: ve });
    }
  }
  const H = (c.input === "last" ? ["change"] : ["input", "change"]).map((U) =>
      va(U, Dn(O), e)
    ),
    B = e.defaultView;
  if (!B)
    return () => {
      H.forEach((U) => U());
    };
  const he = B.Object.getOwnPropertyDescriptor(
      B.HTMLInputElement.prototype,
      "value"
    ),
    de = [
      [B.HTMLInputElement.prototype, "value"],
      [B.HTMLInputElement.prototype, "checked"],
      [B.HTMLSelectElement.prototype, "value"],
      [B.HTMLTextAreaElement.prototype, "value"],
      [B.HTMLSelectElement.prototype, "selectedIndex"],
      [B.HTMLOptionElement.prototype, "selected"],
    ];
  return (
    he &&
      he.set &&
      H.push(
        ...de.map((U) =>
          Mq(
            U[0],
            U[1],
            {
              set() {
                Dn(O)({ target: this, isTrusted: !1 });
              },
            },
            !1,
            B
          )
        )
      ),
    Dn(() => {
      H.forEach((U) => U());
    })
  );
}
function WT(t) {
  const e = [];
  function n(r, a) {
    if (
      (eb("CSSGroupingRule") && r.parentRule instanceof CSSGroupingRule) ||
      (eb("CSSMediaRule") && r.parentRule instanceof CSSMediaRule) ||
      (eb("CSSSupportsRule") && r.parentRule instanceof CSSSupportsRule) ||
      (eb("CSSConditionRule") && r.parentRule instanceof CSSConditionRule)
    ) {
      const i = Array.from(r.parentRule.cssRules).indexOf(r);
      a.unshift(i);
    } else if (r.parentStyleSheet) {
      const i = Array.from(r.parentStyleSheet.cssRules).indexOf(r);
      a.unshift(i);
    }
    return a;
  }
  return n(t, e);
}
function Zl(t, e, n) {
  let r, a;
  return t
    ? (t.ownerNode ? (r = e.getId(t.ownerNode)) : (a = n.getId(t)),
      { styleId: a, id: r })
    : {};
}
function Oke(
  { styleSheetRuleCb: t, mirror: e, stylesheetManager: n },
  { win: r }
) {
  if (!r.CSSStyleSheet || !r.CSSStyleSheet.prototype) return () => {};
  const a = r.CSSStyleSheet.prototype.insertRule;
  r.CSSStyleSheet.prototype.insertRule = new Proxy(a, {
    apply: Dn((c, d, p) => {
      const [m, y] = p,
        { id: I, styleId: O } = Zl(d, e, n.styleMirror);
      return (
        ((I && I !== -1) || (O && O !== -1)) &&
          t({ id: I, styleId: O, adds: [{ rule: m, index: y }] }),
        c.apply(d, p)
      );
    }),
  });
  const s = r.CSSStyleSheet.prototype.deleteRule;
  r.CSSStyleSheet.prototype.deleteRule = new Proxy(s, {
    apply: Dn((c, d, p) => {
      const [m] = p,
        { id: y, styleId: I } = Zl(d, e, n.styleMirror);
      return (
        ((y && y !== -1) || (I && I !== -1)) &&
          t({ id: y, styleId: I, removes: [{ index: m }] }),
        c.apply(d, p)
      );
    }),
  });
  let i;
  r.CSSStyleSheet.prototype.replace &&
    ((i = r.CSSStyleSheet.prototype.replace),
    (r.CSSStyleSheet.prototype.replace = new Proxy(i, {
      apply: Dn((c, d, p) => {
        const [m] = p,
          { id: y, styleId: I } = Zl(d, e, n.styleMirror);
        return (
          ((y && y !== -1) || (I && I !== -1)) &&
            t({ id: y, styleId: I, replace: m }),
          c.apply(d, p)
        );
      }),
    })));
  let o;
  r.CSSStyleSheet.prototype.replaceSync &&
    ((o = r.CSSStyleSheet.prototype.replaceSync),
    (r.CSSStyleSheet.prototype.replaceSync = new Proxy(o, {
      apply: Dn((c, d, p) => {
        const [m] = p,
          { id: y, styleId: I } = Zl(d, e, n.styleMirror);
        return (
          ((y && y !== -1) || (I && I !== -1)) &&
            t({ id: y, styleId: I, replaceSync: m }),
          c.apply(d, p)
        );
      }),
    })));
  const u = {};
  tb("CSSGroupingRule")
    ? (u.CSSGroupingRule = r.CSSGroupingRule)
    : (tb("CSSMediaRule") && (u.CSSMediaRule = r.CSSMediaRule),
      tb("CSSConditionRule") && (u.CSSConditionRule = r.CSSConditionRule),
      tb("CSSSupportsRule") && (u.CSSSupportsRule = r.CSSSupportsRule));
  const l = {};
  return (
    Object.entries(u).forEach(([c, d]) => {
      (l[c] = {
        insertRule: d.prototype.insertRule,
        deleteRule: d.prototype.deleteRule,
      }),
        (d.prototype.insertRule = new Proxy(l[c].insertRule, {
          apply: Dn((p, m, y) => {
            const [I, O] = y,
              { id: g, styleId: C } = Zl(m.parentStyleSheet, e, n.styleMirror);
            return (
              ((g && g !== -1) || (C && C !== -1)) &&
                t({
                  id: g,
                  styleId: C,
                  adds: [{ rule: I, index: [...WT(m), O || 0] }],
                }),
              p.apply(m, y)
            );
          }),
        })),
        (d.prototype.deleteRule = new Proxy(l[c].deleteRule, {
          apply: Dn((p, m, y) => {
            const [I] = y,
              { id: O, styleId: g } = Zl(m.parentStyleSheet, e, n.styleMirror);
            return (
              ((O && O !== -1) || (g && g !== -1)) &&
                t({ id: O, styleId: g, removes: [{ index: [...WT(m), I] }] }),
              p.apply(m, y)
            );
          }),
        }));
    }),
    Dn(() => {
      (r.CSSStyleSheet.prototype.insertRule = a),
        (r.CSSStyleSheet.prototype.deleteRule = s),
        i && (r.CSSStyleSheet.prototype.replace = i),
        o && (r.CSSStyleSheet.prototype.replaceSync = o),
        Object.entries(u).forEach(([c, d]) => {
          (d.prototype.insertRule = l[c].insertRule),
            (d.prototype.deleteRule = l[c].deleteRule);
        });
    })
  );
}
function Yq({ mirror: t, stylesheetManager: e }, n) {
  let r = null;
  n.nodeName === "#document" ? (r = t.getId(n)) : (r = t.getId(n.host));
  const a =
      n.nodeName === "#document"
        ? eu([
            n,
            "access",
            (i) => i.defaultView,
            "optionalAccess",
            (i) => i.Document,
          ])
        : eu([
            n,
            "access",
            (i) => i.ownerDocument,
            "optionalAccess",
            (i) => i.defaultView,
            "optionalAccess",
            (i) => i.ShadowRoot,
          ]),
    s = eu([a, "optionalAccess", (i) => i.prototype])
      ? Object.getOwnPropertyDescriptor(
          eu([a, "optionalAccess", (i) => i.prototype]),
          "adoptedStyleSheets"
        )
      : void 0;
  return r === null || r === -1 || !a || !s
    ? () => {}
    : (Object.defineProperty(n, "adoptedStyleSheets", {
        configurable: s.configurable,
        enumerable: s.enumerable,
        get() {
          return eu([
            s,
            "access",
            (i) => i.get,
            "optionalAccess",
            (i) => i.call,
            "call",
            (i) => i(this),
          ]);
        },
        set(i) {
          const o = eu([
            s,
            "access",
            (u) => u.set,
            "optionalAccess",
            (u) => u.call,
            "call",
            (u) => u(this, i),
          ]);
          if (r !== null && r !== -1)
            try {
              e.adoptStyleSheets(i, r);
            } catch {}
          return o;
        },
      }),
      Dn(() => {
        Object.defineProperty(n, "adoptedStyleSheets", {
          configurable: s.configurable,
          enumerable: s.enumerable,
          get: s.get,
          set: s.set,
        });
      }));
}
function Hke(
  {
    styleDeclarationCb: t,
    mirror: e,
    ignoreCSSAttributes: n,
    stylesheetManager: r,
  },
  { win: a }
) {
  const s = a.CSSStyleDeclaration.prototype.setProperty;
  a.CSSStyleDeclaration.prototype.setProperty = new Proxy(s, {
    apply: Dn((o, u, l) => {
      const [c, d, p] = l;
      if (n.has(c)) return s.apply(u, [c, d, p]);
      const { id: m, styleId: y } = Zl(
        eu([
          u,
          "access",
          (I) => I.parentRule,
          "optionalAccess",
          (I) => I.parentStyleSheet,
        ]),
        e,
        r.styleMirror
      );
      return (
        ((m && m !== -1) || (y && y !== -1)) &&
          t({
            id: m,
            styleId: y,
            set: { property: c, value: d, priority: p },
            index: WT(u.parentRule),
          }),
        o.apply(u, l)
      );
    }),
  });
  const i = a.CSSStyleDeclaration.prototype.removeProperty;
  return (
    (a.CSSStyleDeclaration.prototype.removeProperty = new Proxy(i, {
      apply: Dn((o, u, l) => {
        const [c] = l;
        if (n.has(c)) return i.apply(u, [c]);
        const { id: d, styleId: p } = Zl(
          eu([
            u,
            "access",
            (m) => m.parentRule,
            "optionalAccess",
            (m) => m.parentStyleSheet,
          ]),
          e,
          r.styleMirror
        );
        return (
          ((d && d !== -1) || (p && p !== -1)) &&
            t({
              id: d,
              styleId: p,
              remove: { property: c },
              index: WT(u.parentRule),
            }),
          o.apply(u, l)
        );
      }),
    })),
    Dn(() => {
      (a.CSSStyleDeclaration.prototype.setProperty = s),
        (a.CSSStyleDeclaration.prototype.removeProperty = i);
    })
  );
}
function Nke({
  mediaInteractionCb: t,
  blockClass: e,
  blockSelector: n,
  unblockSelector: r,
  mirror: a,
  sampling: s,
  doc: i,
}) {
  const o = Dn((l) =>
      Rg(
        Dn((c) => {
          const d = Mv(c);
          if (!d || yo(d, e, n, r, !0)) return;
          const { currentTime: p, volume: m, muted: y, playbackRate: I } = d;
          t({
            type: l,
            id: a.getId(d),
            currentTime: p,
            volume: m,
            muted: y,
            playbackRate: I,
          });
        }),
        s.media || 500
      )
    ),
    u = [
      va("play", o(0), i),
      va("pause", o(1), i),
      va("seeked", o(2), i),
      va("volumechange", o(3), i),
      va("ratechange", o(4), i),
    ];
  return Dn(() => {
    u.forEach((l) => l());
  });
}
function Rke({ fontCb: t, doc: e }) {
  const n = e.defaultView;
  if (!n) return () => {};
  const r = [],
    a = new WeakMap(),
    s = n.FontFace;
  n.FontFace = function (u, l, c) {
    const d = new s(u, l, c);
    return (
      a.set(d, {
        family: u,
        buffer: typeof l != "string",
        descriptors: c,
        fontSource:
          typeof l == "string"
            ? l
            : JSON.stringify(Array.from(new Uint8Array(l))),
      }),
      d
    );
  };
  const i = Xk(e.fonts, "add", function (o) {
    return function (u) {
      return (
        setTimeout(
          Dn(() => {
            const l = a.get(u);
            l && (t(l), a.delete(u));
          }),
          0
        ),
        o.apply(this, [u])
      );
    };
  });
  return (
    r.push(() => {
      n.FontFace = s;
    }),
    r.push(i),
    Dn(() => {
      r.forEach((o) => o());
    })
  );
}
function kke(t) {
  const {
    doc: e,
    mirror: n,
    blockClass: r,
    blockSelector: a,
    unblockSelector: s,
    selectionCb: i,
  } = t;
  let o = !0;
  const u = Dn(() => {
    const l = e.getSelection();
    if (!l || (o && eu([l, "optionalAccess", (p) => p.isCollapsed]))) return;
    o = l.isCollapsed || !1;
    const c = [],
      d = l.rangeCount || 0;
    for (let p = 0; p < d; p++) {
      const m = l.getRangeAt(p),
        {
          startContainer: y,
          startOffset: I,
          endContainer: O,
          endOffset: g,
        } = m;
      yo(y, r, a, s, !0) ||
        yo(O, r, a, s, !0) ||
        c.push({
          start: n.getId(y),
          startOffset: I,
          end: n.getId(O),
          endOffset: g,
        });
    }
    i({ ranges: c });
  });
  return u(), va("selectionchange", u);
}
function xke({ doc: t, customElementCb: e }) {
  const n = t.defaultView;
  return !n || !n.customElements
    ? () => {}
    : Xk(n.customElements, "define", function (a) {
        return function (s, i, o) {
          try {
            e({ define: { name: s } });
          } catch {}
          return a.apply(this, [s, i, o]);
        };
      });
}
function Lke(t, e = {}) {
  const n = t.doc.defaultView;
  if (!n) return () => {};
  const r = Wq(t, t.doc),
    a = wke(t),
    s = Pke(t),
    i = qq(t),
    o = Ike(t, { win: n }),
    u = Ake(t),
    l = Nke(t),
    c = Oke(t, { win: n }),
    d = Yq(t, t.doc),
    p = Hke(t, { win: n }),
    m = t.collectFonts ? Rke(t) : () => {},
    y = kke(t),
    I = xke(t),
    O = [];
  for (const g of t.plugins) O.push(g.observer(g.callback, n, g.options));
  return Dn(() => {
    Hh.forEach((g) => g.reset()),
      r.disconnect(),
      a(),
      s(),
      i(),
      o(),
      u(),
      l(),
      c(),
      d(),
      p(),
      m(),
      y(),
      I(),
      O.forEach((g) => g());
  });
}
function eb(t) {
  return typeof window[t] < "u";
}
function tb(t) {
  return !!(
    typeof window[t] < "u" &&
    window[t].prototype &&
    "insertRule" in window[t].prototype &&
    "deleteRule" in window[t].prototype
  );
}
class kO {
  constructor(e) {
    (this.generateIdFn = e),
      (this.iframeIdToRemoteIdMap = new WeakMap()),
      (this.iframeRemoteIdToIdMap = new WeakMap());
  }
  getId(e, n, r, a) {
    const s = r || this.getIdToRemoteIdMap(e),
      i = a || this.getRemoteIdToIdMap(e);
    let o = s.get(n);
    return o || ((o = this.generateIdFn()), s.set(n, o), i.set(o, n)), o;
  }
  getIds(e, n) {
    const r = this.getIdToRemoteIdMap(e),
      a = this.getRemoteIdToIdMap(e);
    return n.map((s) => this.getId(e, s, r, a));
  }
  getRemoteId(e, n, r) {
    const a = r || this.getRemoteIdToIdMap(e);
    if (typeof n != "number") return n;
    const s = a.get(n);
    return s || -1;
  }
  getRemoteIds(e, n) {
    const r = this.getRemoteIdToIdMap(e);
    return n.map((a) => this.getRemoteId(e, a, r));
  }
  reset(e) {
    if (!e) {
      (this.iframeIdToRemoteIdMap = new WeakMap()),
        (this.iframeRemoteIdToIdMap = new WeakMap());
      return;
    }
    this.iframeIdToRemoteIdMap.delete(e), this.iframeRemoteIdToIdMap.delete(e);
  }
  getIdToRemoteIdMap(e) {
    let n = this.iframeIdToRemoteIdMap.get(e);
    return n || ((n = new Map()), this.iframeIdToRemoteIdMap.set(e, n)), n;
  }
  getRemoteIdToIdMap(e) {
    let n = this.iframeRemoteIdToIdMap.get(e);
    return n || ((n = new Map()), this.iframeRemoteIdToIdMap.set(e, n)), n;
  }
}
function l8(t) {
  let e,
    n = t[0],
    r = 1;
  for (; r < t.length; ) {
    const a = t[r],
      s = t[r + 1];
    if (
      ((r += 2), (a === "optionalAccess" || a === "optionalCall") && n == null)
    )
      return;
    a === "access" || a === "optionalAccess"
      ? ((e = n), (n = s(n)))
      : (a === "call" || a === "optionalCall") &&
        ((n = s((...i) => n.call(e, ...i))), (e = void 0));
  }
  return n;
}
class Mke {
  constructor() {
    (this.crossOriginIframeMirror = new kO(qk)),
      (this.crossOriginIframeRootIdMap = new WeakMap());
  }
  addIframe() {}
  addLoadListener() {}
  attachIframe() {}
}
class Dke {
  constructor(e) {
    (this.iframes = new WeakMap()),
      (this.crossOriginIframeMap = new WeakMap()),
      (this.crossOriginIframeMirror = new kO(qk)),
      (this.crossOriginIframeRootIdMap = new WeakMap()),
      (this.mutationCb = e.mutationCb),
      (this.wrappedEmit = e.wrappedEmit),
      (this.stylesheetManager = e.stylesheetManager),
      (this.recordCrossOriginIframes = e.recordCrossOriginIframes),
      (this.crossOriginIframeStyleMirror = new kO(
        this.stylesheetManager.styleMirror.generateId.bind(
          this.stylesheetManager.styleMirror
        )
      )),
      (this.mirror = e.mirror),
      this.recordCrossOriginIframes &&
        window.addEventListener("message", this.handleMessage.bind(this));
  }
  addIframe(e) {
    this.iframes.set(e, !0),
      e.contentWindow && this.crossOriginIframeMap.set(e.contentWindow, e);
  }
  addLoadListener(e) {
    this.loadListener = e;
  }
  attachIframe(e, n) {
    this.mutationCb({
      adds: [{ parentId: this.mirror.getId(e), nextId: null, node: n }],
      removes: [],
      texts: [],
      attributes: [],
      isAttachIframe: !0,
    }),
      l8([this, "access", (r) => r.loadListener, "optionalCall", (r) => r(e)]),
      e.contentDocument &&
        e.contentDocument.adoptedStyleSheets &&
        e.contentDocument.adoptedStyleSheets.length > 0 &&
        this.stylesheetManager.adoptStyleSheets(
          e.contentDocument.adoptedStyleSheets,
          this.mirror.getId(e.contentDocument)
        );
  }
  handleMessage(e) {
    const n = e;
    if (n.data.type !== "rrweb" || n.origin !== n.data.origin || !e.source)
      return;
    const a = this.crossOriginIframeMap.get(e.source);
    if (!a) return;
    const s = this.transformCrossOriginEvent(a, n.data.event);
    s && this.wrappedEmit(s, n.data.isCheckout);
  }
  transformCrossOriginEvent(e, n) {
    switch (n.type) {
      case bn.FullSnapshot: {
        this.crossOriginIframeMirror.reset(e),
          this.crossOriginIframeStyleMirror.reset(e),
          this.replaceIdOnNode(n.data.node, e);
        const r = n.data.node.id;
        return (
          this.crossOriginIframeRootIdMap.set(e, r),
          this.patchRootIdOnNode(n.data.node, r),
          {
            timestamp: n.timestamp,
            type: bn.IncrementalSnapshot,
            data: {
              source: En.Mutation,
              adds: [
                {
                  parentId: this.mirror.getId(e),
                  nextId: null,
                  node: n.data.node,
                },
              ],
              removes: [],
              texts: [],
              attributes: [],
              isAttachIframe: !0,
            },
          }
        );
      }
      case bn.Meta:
      case bn.Load:
      case bn.DomContentLoaded:
        return !1;
      case bn.Plugin:
        return n;
      case bn.Custom:
        return (
          this.replaceIds(n.data.payload, e, [
            "id",
            "parentId",
            "previousId",
            "nextId",
          ]),
          n
        );
      case bn.IncrementalSnapshot:
        switch (n.data.source) {
          case En.Mutation:
            return (
              n.data.adds.forEach((r) => {
                this.replaceIds(r, e, ["parentId", "nextId", "previousId"]),
                  this.replaceIdOnNode(r.node, e);
                const a = this.crossOriginIframeRootIdMap.get(e);
                a && this.patchRootIdOnNode(r.node, a);
              }),
              n.data.removes.forEach((r) => {
                this.replaceIds(r, e, ["parentId", "id"]);
              }),
              n.data.attributes.forEach((r) => {
                this.replaceIds(r, e, ["id"]);
              }),
              n.data.texts.forEach((r) => {
                this.replaceIds(r, e, ["id"]);
              }),
              n
            );
          case En.Drag:
          case En.TouchMove:
          case En.MouseMove:
            return (
              n.data.positions.forEach((r) => {
                this.replaceIds(r, e, ["id"]);
              }),
              n
            );
          case En.ViewportResize:
            return !1;
          case En.MediaInteraction:
          case En.MouseInteraction:
          case En.Scroll:
          case En.CanvasMutation:
          case En.Input:
            return this.replaceIds(n.data, e, ["id"]), n;
          case En.StyleSheetRule:
          case En.StyleDeclaration:
            return (
              this.replaceIds(n.data, e, ["id"]),
              this.replaceStyleIds(n.data, e, ["styleId"]),
              n
            );
          case En.Font:
            return n;
          case En.Selection:
            return (
              n.data.ranges.forEach((r) => {
                this.replaceIds(r, e, ["start", "end"]);
              }),
              n
            );
          case En.AdoptedStyleSheet:
            return (
              this.replaceIds(n.data, e, ["id"]),
              this.replaceStyleIds(n.data, e, ["styleIds"]),
              l8([
                n,
                "access",
                (r) => r.data,
                "access",
                (r) => r.styles,
                "optionalAccess",
                (r) => r.forEach,
                "call",
                (r) =>
                  r((a) => {
                    this.replaceStyleIds(a, e, ["styleId"]);
                  }),
              ]),
              n
            );
        }
    }
    return !1;
  }
  replace(e, n, r, a) {
    for (const s of a)
      (!Array.isArray(n[s]) && typeof n[s] != "number") ||
        (Array.isArray(n[s])
          ? (n[s] = e.getIds(r, n[s]))
          : (n[s] = e.getId(r, n[s])));
    return n;
  }
  replaceIds(e, n, r) {
    return this.replace(this.crossOriginIframeMirror, e, n, r);
  }
  replaceStyleIds(e, n, r) {
    return this.replace(this.crossOriginIframeStyleMirror, e, n, r);
  }
  replaceIdOnNode(e, n) {
    this.replaceIds(e, n, ["id", "rootId"]),
      "childNodes" in e &&
        e.childNodes.forEach((r) => {
          this.replaceIdOnNode(r, n);
        });
  }
  patchRootIdOnNode(e, n) {
    e.type !== Sr.Document && !e.rootId && (e.rootId = n),
      "childNodes" in e &&
        e.childNodes.forEach((r) => {
          this.patchRootIdOnNode(r, n);
        });
  }
}
class Gke {
  init() {}
  addShadowRoot() {}
  observeAttachShadow() {}
  reset() {}
}
class Fke {
  constructor(e) {
    (this.shadowDoms = new WeakSet()),
      (this.restoreHandlers = []),
      (this.mutationCb = e.mutationCb),
      (this.scrollCb = e.scrollCb),
      (this.bypassOptions = e.bypassOptions),
      (this.mirror = e.mirror),
      this.init();
  }
  init() {
    this.reset(), this.patchAttachShadow(Element, document);
  }
  addShadowRoot(e, n) {
    if (!vy(e) || this.shadowDoms.has(e)) return;
    this.shadowDoms.add(e);
    const r = Wq(
      {
        ...this.bypassOptions,
        doc: n,
        mutationCb: this.mutationCb,
        mirror: this.mirror,
        shadowDomManager: this,
      },
      e
    );
    this.restoreHandlers.push(() => r.disconnect()),
      this.restoreHandlers.push(
        qq({
          ...this.bypassOptions,
          scrollCb: this.scrollCb,
          doc: e,
          mirror: this.mirror,
        })
      ),
      setTimeout(() => {
        e.adoptedStyleSheets &&
          e.adoptedStyleSheets.length > 0 &&
          this.bypassOptions.stylesheetManager.adoptStyleSheets(
            e.adoptedStyleSheets,
            this.mirror.getId(e.host)
          ),
          this.restoreHandlers.push(
            Yq(
              {
                mirror: this.mirror,
                stylesheetManager: this.bypassOptions.stylesheetManager,
              },
              e
            )
          );
      }, 0);
  }
  observeAttachShadow(e) {
    !e.contentWindow ||
      !e.contentDocument ||
      this.patchAttachShadow(e.contentWindow.Element, e.contentDocument);
  }
  patchAttachShadow(e, n) {
    const r = this;
    this.restoreHandlers.push(
      Xk(e.prototype, "attachShadow", function (a) {
        return function (s) {
          const i = a.call(this, s);
          return (
            this.shadowRoot && jq(this) && r.addShadowRoot(this.shadowRoot, n),
            i
          );
        };
      })
    );
  }
  reset() {
    this.restoreHandlers.forEach((e) => {
      try {
        e();
      } catch {}
    }),
      (this.restoreHandlers = []),
      (this.shadowDoms = new WeakSet());
  }
}
class c8 {
  reset() {}
  freeze() {}
  unfreeze() {}
  lock() {}
  unlock() {}
  snapshot() {}
}
class Uke {
  constructor(e) {
    (this.trackedLinkElements = new WeakSet()),
      (this.styleMirror = new fke()),
      (this.mutationCb = e.mutationCb),
      (this.adoptedStyleSheetCb = e.adoptedStyleSheetCb);
  }
  attachLinkElement(e, n) {
    "_cssText" in n.attributes &&
      this.mutationCb({
        adds: [],
        removes: [],
        texts: [],
        attributes: [{ id: n.id, attributes: n.attributes }],
      }),
      this.trackLinkElement(e);
  }
  trackLinkElement(e) {
    this.trackedLinkElements.has(e) ||
      (this.trackedLinkElements.add(e), this.trackStylesheetInLinkElement(e));
  }
  adoptStyleSheets(e, n) {
    if (e.length === 0) return;
    const r = { id: n, styleIds: [] },
      a = [];
    for (const s of e) {
      let i;
      this.styleMirror.has(s)
        ? (i = this.styleMirror.getId(s))
        : ((i = this.styleMirror.add(s)),
          a.push({
            styleId: i,
            rules: Array.from(s.rules || CSSRule, (o, u) => ({
              rule: Rq(o),
              index: u,
            })),
          })),
        r.styleIds.push(i);
    }
    a.length > 0 && (r.styles = a), this.adoptedStyleSheetCb(r);
  }
  reset() {
    this.styleMirror.reset(), (this.trackedLinkElements = new WeakSet());
  }
  trackStylesheetInLinkElement(e) {}
}
class Kke {
  constructor() {
    (this.nodeMap = new WeakMap()), (this.loop = !0), this.periodicallyClear();
  }
  periodicallyClear() {
    gke(() => {
      this.clear(), this.loop && this.periodicallyClear();
    });
  }
  inOtherBuffer(e, n) {
    const r = this.nodeMap.get(e);
    return r && Array.from(r).some((a) => a !== n);
  }
  add(e, n) {
    this.nodeMap.set(e, (this.nodeMap.get(e) || new Set()).add(n));
  }
  clear() {
    this.nodeMap = new WeakMap();
  }
  destroy() {
    this.loop = !1;
  }
}
function ur(t) {
  const e = t;
  return (e.timestamp = $T()), e;
}
let qT;
const uo = BRe();
function Ic(t = {}) {
  const {
    emit: e,
    checkoutEveryNms: n,
    checkoutEveryNth: r,
    blockClass: a = "rr-block",
    blockSelector: s = null,
    unblockSelector: i = null,
    ignoreClass: o = "rr-ignore",
    ignoreSelector: u = null,
    maskAllText: l = !1,
    maskTextClass: c = "rr-mask",
    unmaskTextClass: d = null,
    maskTextSelector: p = null,
    unmaskTextSelector: m = null,
    inlineStylesheet: y = !0,
    maskAllInputs: I,
    maskInputOptions: O,
    slimDOMOptions: g,
    maskAttributeFn: C,
    maskInputFn: H,
    maskTextFn: B,
    packFn: he,
    sampling: de = {},
    dataURLOptions: U = {},
    mousemoveWait: R,
    recordCanvas: ge = !1,
    recordCrossOriginIframes: ve = !1,
    recordAfter: we = t.recordAfter === "DOMContentLoaded"
      ? t.recordAfter
      : "load",
    userTriggeredOnInput: Te = !1,
    collectFonts: Ce = !1,
    inlineImages: Ee = !1,
    plugins: x,
    keepIframeSrcFn: F = () => !1,
    ignoreCSSAttributes: Se = new Set([]),
    errorHandler: ye,
    onMutation: Ae,
    getCanvasManager: De,
  } = t;
  Eke(ye);
  const lt = ve ? window.parent === window : !0;
  let nt = !1;
  if (!lt)
    try {
      window.parent.document && (nt = !1);
    } catch {
      nt = !0;
    }
  if (lt && !e) throw new Error("emit function is required");
  R !== void 0 && de.mousemove === void 0 && (de.mousemove = R), uo.reset();
  const L =
      I === !0
        ? {
            color: !0,
            date: !0,
            "datetime-local": !0,
            email: !0,
            month: !0,
            number: !0,
            range: !0,
            search: !0,
            tel: !0,
            text: !0,
            time: !0,
            url: !0,
            week: !0,
            textarea: !0,
            select: !0,
            radio: !0,
            checkbox: !0,
          }
        : O !== void 0
        ? O
        : {},
    M =
      g === !0 || g === "all"
        ? {
            script: !0,
            comment: !0,
            headFavicon: !0,
            headWhitespace: !0,
            headMetaSocial: !0,
            headMetaRobots: !0,
            headMetaHttpEquiv: !0,
            headMetaVerification: !0,
            headMetaAuthorship: g === "all",
            headMetaDescKeywords: g === "all",
          }
        : g || {};
  hke();
  let me,
    K = 0;
  const Ge = (pt) => {
      for (const Xt of x || [])
        Xt.eventProcessor && (pt = Xt.eventProcessor(pt));
      return he && !nt && (pt = he(pt)), pt;
    },
    Ke = (pt, Xt) => {
      if (
        (Zb([
          Hh,
          "access",
          (It) => It[0],
          "optionalAccess",
          (It) => It.isFrozen,
          "call",
          (It) => It(),
        ]) &&
          pt.type !== bn.FullSnapshot &&
          !(
            pt.type === bn.IncrementalSnapshot && pt.data.source === En.Mutation
          ) &&
          Hh.forEach((It) => It.unfreeze()),
        lt)
      )
        Zb([e, "optionalCall", (It) => It(Ge(pt), Xt)]);
      else if (nt) {
        const It = {
          type: "rrweb",
          event: Ge(pt),
          origin: window.location.origin,
          isCheckout: Xt,
        };
        window.parent.postMessage(It, "*");
      }
      if (pt.type === bn.FullSnapshot) (me = pt), (K = 0);
      else if (pt.type === bn.IncrementalSnapshot) {
        if (pt.data.source === En.Mutation && pt.data.isAttachIframe) return;
        K++;
        const It = r && K >= r,
          bt = n && me && pt.timestamp - me.timestamp > n;
        (It || bt) && Dt(!0);
      }
    },
    Re = (pt) => {
      Ke(
        ur({
          type: bn.IncrementalSnapshot,
          data: { source: En.Mutation, ...pt },
        })
      );
    },
    it = (pt) =>
      Ke(
        ur({ type: bn.IncrementalSnapshot, data: { source: En.Scroll, ...pt } })
      ),
    Qe = (pt) =>
      Ke(
        ur({
          type: bn.IncrementalSnapshot,
          data: { source: En.CanvasMutation, ...pt },
        })
      ),
    ct = (pt) =>
      Ke(
        ur({
          type: bn.IncrementalSnapshot,
          data: { source: En.AdoptedStyleSheet, ...pt },
        })
      ),
    ot = new Uke({ mutationCb: Re, adoptedStyleSheetCb: ct }),
    rt =
      typeof __RRWEB_EXCLUDE_IFRAME__ == "boolean" && __RRWEB_EXCLUDE_IFRAME__
        ? new Mke()
        : new Dke({
            mirror: uo,
            mutationCb: Re,
            stylesheetManager: ot,
            recordCrossOriginIframes: ve,
            wrappedEmit: Ke,
          });
  for (const pt of x || [])
    pt.getMirror &&
      pt.getMirror({
        nodeMirror: uo,
        crossOriginIframeMirror: rt.crossOriginIframeMirror,
        crossOriginIframeStyleMirror: rt.crossOriginIframeStyleMirror,
      });
  const gt = new Kke(),
    Mt = Vke(De, {
      mirror: uo,
      win: window,
      mutationCb: (pt) =>
        Ke(
          ur({
            type: bn.IncrementalSnapshot,
            data: { source: En.CanvasMutation, ...pt },
          })
        ),
      recordCanvas: ge,
      blockClass: a,
      blockSelector: s,
      unblockSelector: i,
      sampling: de.canvas,
      dataURLOptions: U,
      errorHandler: ye,
    }),
    at =
      typeof __RRWEB_EXCLUDE_SHADOW_DOM__ == "boolean" &&
      __RRWEB_EXCLUDE_SHADOW_DOM__
        ? new Gke()
        : new Fke({
            mutationCb: Re,
            scrollCb: it,
            bypassOptions: {
              onMutation: Ae,
              blockClass: a,
              blockSelector: s,
              unblockSelector: i,
              maskAllText: l,
              maskTextClass: c,
              unmaskTextClass: d,
              maskTextSelector: p,
              unmaskTextSelector: m,
              inlineStylesheet: y,
              maskInputOptions: L,
              dataURLOptions: U,
              maskAttributeFn: C,
              maskTextFn: B,
              maskInputFn: H,
              recordCanvas: ge,
              inlineImages: Ee,
              sampling: de,
              slimDOMOptions: M,
              iframeManager: rt,
              stylesheetManager: ot,
              canvasManager: Mt,
              keepIframeSrcFn: F,
              processedNodeManager: gt,
            },
            mirror: uo,
          }),
    Dt = (pt = !1) => {
      Ke(
        ur({
          type: bn.Meta,
          data: { href: window.location.href, width: Fq(), height: Gq() },
        }),
        pt
      ),
        ot.reset(),
        at.init(),
        Hh.forEach((It) => It.lock());
      const Xt = dke(document, {
        mirror: uo,
        blockClass: a,
        blockSelector: s,
        unblockSelector: i,
        maskAllText: l,
        maskTextClass: c,
        unmaskTextClass: d,
        maskTextSelector: p,
        unmaskTextSelector: m,
        inlineStylesheet: y,
        maskAllInputs: L,
        maskAttributeFn: C,
        maskInputFn: H,
        maskTextFn: B,
        slimDOM: M,
        dataURLOptions: U,
        recordCanvas: ge,
        inlineImages: Ee,
        onSerialize: (It) => {
          Kq(It, uo) && rt.addIframe(It),
            Bq(It, uo) && ot.trackLinkElement(It),
            NO(It) && at.addShadowRoot(It.shadowRoot, document);
        },
        onIframeLoad: (It, bt) => {
          rt.attachIframe(It, bt), at.observeAttachShadow(It);
        },
        onStylesheetLoad: (It, bt) => {
          ot.attachLinkElement(It, bt);
        },
        keepIframeSrcFn: F,
      });
      if (!Xt) return console.warn("Failed to snapshot the document");
      Ke(
        ur({
          type: bn.FullSnapshot,
          data: { node: Xt, initialOffset: Dq(window) },
        })
      ),
        Hh.forEach((It) => It.unlock()),
        document.adoptedStyleSheets &&
          document.adoptedStyleSheets.length > 0 &&
          ot.adoptStyleSheets(document.adoptedStyleSheets, uo.getId(document));
    };
  qT = Dt;
  try {
    const pt = [],
      Xt = (bt) =>
        Dn(Lke)(
          {
            onMutation: Ae,
            mutationCb: Re,
            mousemoveCb: (yt, tn) =>
              Ke(
                ur({
                  type: bn.IncrementalSnapshot,
                  data: { source: tn, positions: yt },
                })
              ),
            mouseInteractionCb: (yt) =>
              Ke(
                ur({
                  type: bn.IncrementalSnapshot,
                  data: { source: En.MouseInteraction, ...yt },
                })
              ),
            scrollCb: it,
            viewportResizeCb: (yt) =>
              Ke(
                ur({
                  type: bn.IncrementalSnapshot,
                  data: { source: En.ViewportResize, ...yt },
                })
              ),
            inputCb: (yt) =>
              Ke(
                ur({
                  type: bn.IncrementalSnapshot,
                  data: { source: En.Input, ...yt },
                })
              ),
            mediaInteractionCb: (yt) =>
              Ke(
                ur({
                  type: bn.IncrementalSnapshot,
                  data: { source: En.MediaInteraction, ...yt },
                })
              ),
            styleSheetRuleCb: (yt) =>
              Ke(
                ur({
                  type: bn.IncrementalSnapshot,
                  data: { source: En.StyleSheetRule, ...yt },
                })
              ),
            styleDeclarationCb: (yt) =>
              Ke(
                ur({
                  type: bn.IncrementalSnapshot,
                  data: { source: En.StyleDeclaration, ...yt },
                })
              ),
            canvasMutationCb: Qe,
            fontCb: (yt) =>
              Ke(
                ur({
                  type: bn.IncrementalSnapshot,
                  data: { source: En.Font, ...yt },
                })
              ),
            selectionCb: (yt) => {
              Ke(
                ur({
                  type: bn.IncrementalSnapshot,
                  data: { source: En.Selection, ...yt },
                })
              );
            },
            customElementCb: (yt) => {
              Ke(
                ur({
                  type: bn.IncrementalSnapshot,
                  data: { source: En.CustomElement, ...yt },
                })
              );
            },
            blockClass: a,
            ignoreClass: o,
            ignoreSelector: u,
            maskAllText: l,
            maskTextClass: c,
            unmaskTextClass: d,
            maskTextSelector: p,
            unmaskTextSelector: m,
            maskInputOptions: L,
            inlineStylesheet: y,
            sampling: de,
            recordCanvas: ge,
            inlineImages: Ee,
            userTriggeredOnInput: Te,
            collectFonts: Ce,
            doc: bt,
            maskAttributeFn: C,
            maskInputFn: H,
            maskTextFn: B,
            keepIframeSrcFn: F,
            blockSelector: s,
            unblockSelector: i,
            slimDOMOptions: M,
            dataURLOptions: U,
            mirror: uo,
            iframeManager: rt,
            stylesheetManager: ot,
            shadowDomManager: at,
            processedNodeManager: gt,
            canvasManager: Mt,
            ignoreCSSAttributes: Se,
            plugins:
              Zb([
                x,
                "optionalAccess",
                (yt) => yt.filter,
                "call",
                (yt) => yt((tn) => tn.observer),
                "optionalAccess",
                (yt) => yt.map,
                "call",
                (yt) =>
                  yt((tn) => ({
                    observer: tn.observer,
                    options: tn.options,
                    callback: (Ct) =>
                      Ke(
                        ur({
                          type: bn.Plugin,
                          data: { plugin: tn.name, payload: Ct },
                        })
                      ),
                  })),
              ]) || [],
          },
          {}
        );
    rt.addLoadListener((bt) => {
      try {
        pt.push(Xt(bt.contentDocument));
      } catch (yt) {
        console.warn(yt);
      }
    });
    const It = () => {
      Dt(), pt.push(Xt(document));
    };
    return (
      document.readyState === "interactive" ||
      document.readyState === "complete"
        ? It()
        : (pt.push(
            va("DOMContentLoaded", () => {
              Ke(ur({ type: bn.DomContentLoaded, data: {} })),
                we === "DOMContentLoaded" && It();
            })
          ),
          pt.push(
            va(
              "load",
              () => {
                Ke(ur({ type: bn.Load, data: {} })), we === "load" && It();
              },
              window
            )
          )),
      () => {
        pt.forEach((bt) => bt()), gt.destroy(), (qT = void 0), Tke();
      }
    );
  } catch (pt) {
    console.warn(pt);
  }
}
function Bke(t) {
  if (!qT) throw new Error("please take full snapshot after start recording");
  qT(t);
}
Ic.mirror = uo;
Ic.takeFullSnapshot = Bke;
function Vke(t, e) {
  try {
    return t ? t(e) : new c8();
  } catch {
    return console.warn("Unable to initialize CanvasManager"), new c8();
  }
}
const jke = 3,
  zke = 5;
function Qk(t) {
  return t > 9999999999 ? t : t * 1e3;
}
function nA(t) {
  return t > 9999999999 ? t / 1e3 : t;
}
function Dv(t, e) {
  e.category !== "sentry.transaction" &&
    (["ui.click", "ui.input"].includes(e.category)
      ? t.triggerUserActivity()
      : t.checkAndHandleExpiredSession(),
    t.addUpdate(
      () => (
        t.throttledAddEvent({
          type: bn.Custom,
          timestamp: (e.timestamp || 0) * 1e3,
          data: { tag: "breadcrumb", payload: Ii(e, 10, 1e3) },
        }),
        e.category === "console"
      )
    ));
}
const $ke = "button,a";
function Xq(t) {
  return t.closest($ke) || t;
}
function Qq(t) {
  const e = Jq(t);
  return !e || !(e instanceof Element) ? e : Xq(e);
}
function Jq(t) {
  return Wke(t) ? t.target : t;
}
function Wke(t) {
  return typeof t == "object" && !!t && "target" in t;
}
let ec;
function qke(t) {
  return (
    ec || ((ec = []), Yke()),
    ec.push(t),
    () => {
      const e = ec ? ec.indexOf(t) : -1;
      e > -1 && ec.splice(e, 1);
    }
  );
}
function Yke() {
  Ir(ms, "open", function (t) {
    return function (...e) {
      if (ec)
        try {
          ec.forEach((n) => n());
        } catch {}
      return t.apply(ms, e);
    };
  });
}
function Xke(t, e, n) {
  t.handleClick(e, n);
}
class Qke {
  constructor(e, n, r = Dv) {
    (this._lastMutation = 0),
      (this._lastScroll = 0),
      (this._clicks = []),
      (this._timeout = n.timeout / 1e3),
      (this._threshold = n.threshold / 1e3),
      (this._scollTimeout = n.scrollTimeout / 1e3),
      (this._replay = e),
      (this._ignoreSelector = n.ignoreSelector),
      (this._addBreadcrumbEvent = r);
  }
  addListeners() {
    const e = qke(() => {
      this._lastMutation = d8();
    });
    this._teardown = () => {
      e(),
        (this._clicks = []),
        (this._lastMutation = 0),
        (this._lastScroll = 0);
    };
  }
  removeListeners() {
    this._teardown && this._teardown(),
      this._checkClickTimeout && clearTimeout(this._checkClickTimeout);
  }
  handleClick(e, n) {
    if (Zke(n, this._ignoreSelector) || !e2e(e)) return;
    const r = {
      timestamp: nA(e.timestamp),
      clickBreadcrumb: e,
      clickCount: 0,
      node: n,
    };
    this._clicks.some(
      (a) => a.node === r.node && Math.abs(a.timestamp - r.timestamp) < 1
    ) ||
      (this._clicks.push(r),
      this._clicks.length === 1 && this._scheduleCheckClicks());
  }
  registerMutation(e = Date.now()) {
    this._lastMutation = nA(e);
  }
  registerScroll(e = Date.now()) {
    this._lastScroll = nA(e);
  }
  registerClick(e) {
    const n = Xq(e);
    this._handleMultiClick(n);
  }
  _handleMultiClick(e) {
    this._getClicks(e).forEach((n) => {
      n.clickCount++;
    });
  }
  _getClicks(e) {
    return this._clicks.filter((n) => n.node === e);
  }
  _checkClicks() {
    const e = [],
      n = d8();
    this._clicks.forEach((r) => {
      !r.mutationAfter &&
        this._lastMutation &&
        (r.mutationAfter =
          r.timestamp <= this._lastMutation
            ? this._lastMutation - r.timestamp
            : void 0),
        !r.scrollAfter &&
          this._lastScroll &&
          (r.scrollAfter =
            r.timestamp <= this._lastScroll
              ? this._lastScroll - r.timestamp
              : void 0),
        r.timestamp + this._timeout <= n && e.push(r);
    });
    for (const r of e) {
      const a = this._clicks.indexOf(r);
      a > -1 && (this._generateBreadcrumbs(r), this._clicks.splice(a, 1));
    }
    this._clicks.length && this._scheduleCheckClicks();
  }
  _generateBreadcrumbs(e) {
    const n = this._replay,
      r = e.scrollAfter && e.scrollAfter <= this._scollTimeout,
      a = e.mutationAfter && e.mutationAfter <= this._threshold,
      s = !r && !a,
      { clickCount: i, clickBreadcrumb: o } = e;
    if (s) {
      const u = Math.min(e.mutationAfter || this._timeout, this._timeout) * 1e3,
        l = u < this._timeout * 1e3 ? "mutation" : "timeout",
        c = {
          type: "default",
          message: o.message,
          timestamp: o.timestamp,
          category: "ui.slowClickDetected",
          data: {
            ...o.data,
            url: ms.location.href,
            route: n.getCurrentRoute(),
            timeAfterClickMs: u,
            endReason: l,
            clickCount: i || 1,
          },
        };
      this._addBreadcrumbEvent(n, c);
      return;
    }
    if (i > 1) {
      const u = {
        type: "default",
        message: o.message,
        timestamp: o.timestamp,
        category: "ui.multiClick",
        data: {
          ...o.data,
          url: ms.location.href,
          route: n.getCurrentRoute(),
          clickCount: i,
          metric: !0,
        },
      };
      this._addBreadcrumbEvent(n, u);
    }
  }
  _scheduleCheckClicks() {
    this._checkClickTimeout && clearTimeout(this._checkClickTimeout),
      (this._checkClickTimeout = setTimeout(() => this._checkClicks(), 1e3));
  }
}
const Jke = ["A", "BUTTON", "INPUT"];
function Zke(t, e) {
  return !!(
    !Jke.includes(t.tagName) ||
    (t.tagName === "INPUT" &&
      !["submit", "button"].includes(t.getAttribute("type") || "")) ||
    (t.tagName === "A" &&
      (t.hasAttribute("download") ||
        (t.hasAttribute("target") && t.getAttribute("target") !== "_self"))) ||
    (e && t.matches(e))
  );
}
function e2e(t) {
  return !!(t.data && typeof t.data.nodeId == "number" && t.timestamp);
}
function d8() {
  return Date.now() / 1e3;
}
function t2e(t, e) {
  try {
    if (!n2e(e)) return;
    const { source: n } = e.data;
    if (
      (n === En.Mutation && t.registerMutation(e.timestamp),
      n === En.Scroll && t.registerScroll(e.timestamp),
      s2e(e))
    ) {
      const { type: r, id: a } = e.data,
        s = Ic.mirror.getNode(a);
      s instanceof HTMLElement && r === ha.Click && t.registerClick(s);
    }
  } catch {}
}
function n2e(t) {
  return t.type === jke;
}
function s2e(t) {
  return t.data.source === En.MouseInteraction;
}
function ru(t) {
  return { timestamp: Date.now() / 1e3, type: "default", ...t };
}
var YT;
(function (t) {
  (t[(t.Document = 0)] = "Document"),
    (t[(t.DocumentType = 1)] = "DocumentType"),
    (t[(t.Element = 2)] = "Element"),
    (t[(t.Text = 3)] = "Text"),
    (t[(t.CDATA = 4)] = "CDATA"),
    (t[(t.Comment = 5)] = "Comment");
})(YT || (YT = {}));
const r2e = new Set([
  "id",
  "class",
  "aria-label",
  "role",
  "name",
  "alt",
  "title",
  "data-test-id",
  "data-testid",
  "disabled",
  "aria-disabled",
  "data-sentry-component",
]);
function a2e(t) {
  const e = {};
  for (const n in t)
    if (r2e.has(n)) {
      let r = n;
      (n === "data-testid" || n === "data-test-id") && (r = "testId"),
        (e[r] = t[n]);
    }
  return e;
}
const i2e = (t) => (e) => {
  if (!t.isEnabled()) return;
  const n = o2e(e);
  if (!n) return;
  const r = e.name === "click",
    a = r ? e.event : void 0;
  r &&
    t.clickDetector &&
    a &&
    a.target &&
    !a.altKey &&
    !a.metaKey &&
    !a.ctrlKey &&
    !a.shiftKey &&
    Xke(t.clickDetector, n, Qq(e.event)),
    Dv(t, n);
};
function Zq(t, e) {
  const n = Ic.mirror.getId(t),
    r = n && Ic.mirror.getNode(n),
    a = r && Ic.mirror.getMeta(r),
    s = a && l2e(a) ? a : null;
  return {
    message: e,
    data: s
      ? {
          nodeId: n,
          node: {
            id: n,
            tagName: s.tagName,
            textContent: Array.from(s.childNodes)
              .map((i) => i.type === YT.Text && i.textContent)
              .filter(Boolean)
              .map((i) => i.trim())
              .join(""),
            attributes: a2e(s.attributes),
          },
        }
      : {},
  };
}
function o2e(t) {
  const { target: e, message: n } = u2e(t);
  return ru({ category: `ui.${t.name}`, ...Zq(e, n) });
}
function u2e(t) {
  const e = t.name === "click";
  let n,
    r = null;
  try {
    (r = e ? Qq(t.event) : Jq(t.event)),
      (n = $c(r, { maxStringLength: 200 }) || "<unknown>");
  } catch {
    n = "<unknown>";
  }
  return { target: r, message: n };
}
function l2e(t) {
  return t.type === YT.Element;
}
function c2e(t, e) {
  if (!t.isEnabled()) return;
  t.updateUserActivity();
  const n = d2e(e);
  n && Dv(t, n);
}
function d2e(t) {
  const {
    metaKey: e,
    shiftKey: n,
    ctrlKey: r,
    altKey: a,
    key: s,
    target: i,
  } = t;
  if (!i || p2e(i) || !s) return null;
  const o = e || r || a,
    u = s.length === 1;
  if (!o && u) return null;
  const l = $c(i, { maxStringLength: 200 }) || "<unknown>",
    c = Zq(i, l);
  return ru({
    category: "ui.keyDown",
    message: l,
    data: { ...c.data, metaKey: e, shiftKey: n, ctrlKey: r, altKey: a, key: s },
  });
}
function p2e(t) {
  return (
    t.tagName === "INPUT" || t.tagName === "TEXTAREA" || t.isContentEditable
  );
}
const p8 = { resource: y2e, paint: m2e, navigation: S2e };
function h2e(t) {
  return t.map(f2e).filter(Boolean);
}
function f2e(t) {
  return p8[t.entryType] ? p8[t.entryType](t) : null;
}
function Bf(t) {
  return ((Lr || ms.performance.timeOrigin) + t) / 1e3;
}
function m2e(t) {
  const { duration: e, entryType: n, name: r, startTime: a } = t,
    s = Bf(a);
  return { type: n, name: r, start: s, end: s + e, data: void 0 };
}
function S2e(t) {
  const {
    entryType: e,
    name: n,
    decodedBodySize: r,
    duration: a,
    domComplete: s,
    encodedBodySize: i,
    domContentLoadedEventStart: o,
    domContentLoadedEventEnd: u,
    domInteractive: l,
    loadEventStart: c,
    loadEventEnd: d,
    redirectCount: p,
    startTime: m,
    transferSize: y,
    type: I,
  } = t;
  return a === 0
    ? null
    : {
        type: `${e}.${I}`,
        start: Bf(m),
        end: Bf(s),
        name: n,
        data: {
          size: y,
          decodedBodySize: r,
          encodedBodySize: i,
          duration: a,
          domInteractive: l,
          domContentLoadedEventStart: o,
          domContentLoadedEventEnd: u,
          loadEventStart: c,
          loadEventEnd: d,
          domComplete: s,
          redirectCount: p,
        },
      };
}
function y2e(t) {
  const {
    entryType: e,
    initiatorType: n,
    name: r,
    responseEnd: a,
    startTime: s,
    decodedBodySize: i,
    encodedBodySize: o,
    responseStatus: u,
    transferSize: l,
  } = t;
  return ["fetch", "xmlhttprequest"].includes(n)
    ? null
    : {
        type: `${e}.${n}`,
        start: Bf(s),
        end: Bf(a),
        name: r,
        data: {
          size: l,
          statusCode: u,
          decodedBodySize: i,
          encodedBodySize: o,
        },
      };
}
function g2e(t) {
  const e = t.entries,
    n = e[e.length - 1],
    r = n ? n.element : void 0,
    a = t.value,
    s = Bf(a);
  return {
    type: "largest-contentful-paint",
    name: "largest-contentful-paint",
    start: s,
    end: s,
    data: { value: a, size: a, nodeId: r ? Ic.mirror.getId(r) : void 0 },
  };
}
function v2e(t) {
  function e(a) {
    t.performanceEntries.includes(a) || t.performanceEntries.push(a);
  }
  function n({ entries: a }) {
    a.forEach(e);
  }
  const r = [];
  return (
    ["navigation", "paint", "resource"].forEach((a) => {
      r.push(Wc(a, n));
    }),
    r.push(
      oq(({ metric: a }) => {
        t.replayPerformanceEntries.push(g2e(a));
      })
    ),
    () => {
      r.forEach((a) => a());
    }
  );
}
const os = typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__,
  _2e =
    'var t=Uint8Array,n=Uint16Array,r=Int32Array,e=new t([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),i=new t([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),a=new t([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),s=function(t,e){for(var i=new n(31),a=0;a<31;++a)i[a]=e+=1<<t[a-1];var s=new r(i[30]);for(a=1;a<30;++a)for(var o=i[a];o<i[a+1];++o)s[o]=o-i[a]<<5|a;return{b:i,r:s}},o=s(e,2),f=o.b,h=o.r;f[28]=258,h[258]=28;for(var l=s(i,0).r,u=new n(32768),c=0;c<32768;++c){var v=(43690&c)>>1|(21845&c)<<1;v=(61680&(v=(52428&v)>>2|(13107&v)<<2))>>4|(3855&v)<<4,u[c]=((65280&v)>>8|(255&v)<<8)>>1}var d=function(t,r,e){for(var i=t.length,a=0,s=new n(r);a<i;++a)t[a]&&++s[t[a]-1];var o,f=new n(r);for(a=1;a<r;++a)f[a]=f[a-1]+s[a-1]<<1;if(e){o=new n(1<<r);var h=15-r;for(a=0;a<i;++a)if(t[a])for(var l=a<<4|t[a],c=r-t[a],v=f[t[a]-1]++<<c,d=v|(1<<c)-1;v<=d;++v)o[u[v]>>h]=l}else for(o=new n(i),a=0;a<i;++a)t[a]&&(o[a]=u[f[t[a]-1]++]>>15-t[a]);return o},g=new t(288);for(c=0;c<144;++c)g[c]=8;for(c=144;c<256;++c)g[c]=9;for(c=256;c<280;++c)g[c]=7;for(c=280;c<288;++c)g[c]=8;var w=new t(32);for(c=0;c<32;++c)w[c]=5;var p=d(g,9,0),y=d(w,5,0),m=function(t){return(t+7)/8|0},b=function(n,r,e){return(null==r||r<0)&&(r=0),(null==e||e>n.length)&&(e=n.length),new t(n.subarray(r,e))},M=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],E=function(t,n,r){var e=new Error(n||M[t]);if(e.code=t,Error.captureStackTrace&&Error.captureStackTrace(e,E),!r)throw e;return e},z=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8},A=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8,t[e+2]|=r>>16},_=function(r,e){for(var i=[],a=0;a<r.length;++a)r[a]&&i.push({s:a,f:r[a]});var s=i.length,o=i.slice();if(!s)return{t:F,l:0};if(1==s){var f=new t(i[0].s+1);return f[i[0].s]=1,{t:f,l:1}}i.sort((function(t,n){return t.f-n.f})),i.push({s:-1,f:25001});var h=i[0],l=i[1],u=0,c=1,v=2;for(i[0]={s:-1,f:h.f+l.f,l:h,r:l};c!=s-1;)h=i[i[u].f<i[v].f?u++:v++],l=i[u!=c&&i[u].f<i[v].f?u++:v++],i[c++]={s:-1,f:h.f+l.f,l:h,r:l};var d=o[0].s;for(a=1;a<s;++a)o[a].s>d&&(d=o[a].s);var g=new n(d+1),w=x(i[c-1],g,0);if(w>e){a=0;var p=0,y=w-e,m=1<<y;for(o.sort((function(t,n){return g[n.s]-g[t.s]||t.f-n.f}));a<s;++a){var b=o[a].s;if(!(g[b]>e))break;p+=m-(1<<w-g[b]),g[b]=e}for(p>>=y;p>0;){var M=o[a].s;g[M]<e?p-=1<<e-g[M]++-1:++a}for(;a>=0&&p;--a){var E=o[a].s;g[E]==e&&(--g[E],++p)}w=e}return{t:new t(g),l:w}},x=function(t,n,r){return-1==t.s?Math.max(x(t.l,n,r+1),x(t.r,n,r+1)):n[t.s]=r},D=function(t){for(var r=t.length;r&&!t[--r];);for(var e=new n(++r),i=0,a=t[0],s=1,o=function(t){e[i++]=t},f=1;f<=r;++f)if(t[f]==a&&f!=r)++s;else{if(!a&&s>2){for(;s>138;s-=138)o(32754);s>2&&(o(s>10?s-11<<5|28690:s-3<<5|12305),s=0)}else if(s>3){for(o(a),--s;s>6;s-=6)o(8304);s>2&&(o(s-3<<5|8208),s=0)}for(;s--;)o(a);s=1,a=t[f]}return{c:e.subarray(0,i),n:r}},T=function(t,n){for(var r=0,e=0;e<n.length;++e)r+=t[e]*n[e];return r},k=function(t,n,r){var e=r.length,i=m(n+2);t[i]=255&e,t[i+1]=e>>8,t[i+2]=255^t[i],t[i+3]=255^t[i+1];for(var a=0;a<e;++a)t[i+a+4]=r[a];return 8*(i+4+e)},C=function(t,r,s,o,f,h,l,u,c,v,m){z(r,m++,s),++f[256];for(var b=_(f,15),M=b.t,E=b.l,x=_(h,15),C=x.t,U=x.l,F=D(M),I=F.c,S=F.n,L=D(C),O=L.c,j=L.n,q=new n(19),B=0;B<I.length;++B)++q[31&I[B]];for(B=0;B<O.length;++B)++q[31&O[B]];for(var G=_(q,7),H=G.t,J=G.l,K=19;K>4&&!H[a[K-1]];--K);var N,P,Q,R,V=v+5<<3,W=T(f,g)+T(h,w)+l,X=T(f,M)+T(h,C)+l+14+3*K+T(q,H)+2*q[16]+3*q[17]+7*q[18];if(c>=0&&V<=W&&V<=X)return k(r,m,t.subarray(c,c+v));if(z(r,m,1+(X<W)),m+=2,X<W){N=d(M,E,0),P=M,Q=d(C,U,0),R=C;var Y=d(H,J,0);z(r,m,S-257),z(r,m+5,j-1),z(r,m+10,K-4),m+=14;for(B=0;B<K;++B)z(r,m+3*B,H[a[B]]);m+=3*K;for(var Z=[I,O],$=0;$<2;++$){var tt=Z[$];for(B=0;B<tt.length;++B){var nt=31&tt[B];z(r,m,Y[nt]),m+=H[nt],nt>15&&(z(r,m,tt[B]>>5&127),m+=tt[B]>>12)}}}else N=p,P=g,Q=y,R=w;for(B=0;B<u;++B){var rt=o[B];if(rt>255){A(r,m,N[(nt=rt>>18&31)+257]),m+=P[nt+257],nt>7&&(z(r,m,rt>>23&31),m+=e[nt]);var et=31&rt;A(r,m,Q[et]),m+=R[et],et>3&&(A(r,m,rt>>5&8191),m+=i[et])}else A(r,m,N[rt]),m+=P[rt]}return A(r,m,N[256]),m+P[256]},U=new r([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),F=new t(0),I=function(){for(var t=new Int32Array(256),n=0;n<256;++n){for(var r=n,e=9;--e;)r=(1&r&&-306674912)^r>>>1;t[n]=r}return t}(),S=function(){var t=1,n=0;return{p:function(r){for(var e=t,i=n,a=0|r.length,s=0;s!=a;){for(var o=Math.min(s+2655,a);s<o;++s)i+=e+=r[s];e=(65535&e)+15*(e>>16),i=(65535&i)+15*(i>>16)}t=e,n=i},d:function(){return(255&(t%=65521))<<24|(65280&t)<<8|(255&(n%=65521))<<8|n>>8}}},L=function(a,s,o,f,u){if(!u&&(u={l:1},s.dictionary)){var c=s.dictionary.subarray(-32768),v=new t(c.length+a.length);v.set(c),v.set(a,c.length),a=v,u.w=c.length}return function(a,s,o,f,u,c){var v=c.z||a.length,d=new t(f+v+5*(1+Math.ceil(v/7e3))+u),g=d.subarray(f,d.length-u),w=c.l,p=7&(c.r||0);if(s){p&&(g[0]=c.r>>3);for(var y=U[s-1],M=y>>13,E=8191&y,z=(1<<o)-1,A=c.p||new n(32768),_=c.h||new n(z+1),x=Math.ceil(o/3),D=2*x,T=function(t){return(a[t]^a[t+1]<<x^a[t+2]<<D)&z},F=new r(25e3),I=new n(288),S=new n(32),L=0,O=0,j=c.i||0,q=0,B=c.w||0,G=0;j+2<v;++j){var H=T(j),J=32767&j,K=_[H];if(A[J]=K,_[H]=J,B<=j){var N=v-j;if((L>7e3||q>24576)&&(N>423||!w)){p=C(a,g,0,F,I,S,O,q,G,j-G,p),q=L=O=0,G=j;for(var P=0;P<286;++P)I[P]=0;for(P=0;P<30;++P)S[P]=0}var Q=2,R=0,V=E,W=J-K&32767;if(N>2&&H==T(j-W))for(var X=Math.min(M,N)-1,Y=Math.min(32767,j),Z=Math.min(258,N);W<=Y&&--V&&J!=K;){if(a[j+Q]==a[j+Q-W]){for(var $=0;$<Z&&a[j+$]==a[j+$-W];++$);if($>Q){if(Q=$,R=W,$>X)break;var tt=Math.min(W,$-2),nt=0;for(P=0;P<tt;++P){var rt=j-W+P&32767,et=rt-A[rt]&32767;et>nt&&(nt=et,K=rt)}}}W+=(J=K)-(K=A[J])&32767}if(R){F[q++]=268435456|h[Q]<<18|l[R];var it=31&h[Q],at=31&l[R];O+=e[it]+i[at],++I[257+it],++S[at],B=j+Q,++L}else F[q++]=a[j],++I[a[j]]}}for(j=Math.max(j,B);j<v;++j)F[q++]=a[j],++I[a[j]];p=C(a,g,w,F,I,S,O,q,G,j-G,p),w||(c.r=7&p|g[p/8|0]<<3,p-=7,c.h=_,c.p=A,c.i=j,c.w=B)}else{for(j=c.w||0;j<v+w;j+=65535){var st=j+65535;st>=v&&(g[p/8|0]=w,st=v),p=k(g,p+1,a.subarray(j,st))}c.i=v}return b(d,0,f+m(p)+u)}(a,null==s.level?6:s.level,null==s.mem?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(a.length)))):12+s.mem,o,f,u)},O=function(t,n,r){for(;r;++n)t[n]=r,r>>>=8},j=function(){function n(n,r){if("function"==typeof n&&(r=n,n={}),this.ondata=r,this.o=n||{},this.s={l:0,i:32768,w:32768,z:32768},this.b=new t(98304),this.o.dictionary){var e=this.o.dictionary.subarray(-32768);this.b.set(e,32768-e.length),this.s.i=32768-e.length}}return n.prototype.p=function(t,n){this.ondata(L(t,this.o,0,0,this.s),n)},n.prototype.push=function(n,r){this.ondata||E(5),this.s.l&&E(4);var e=n.length+this.s.z;if(e>this.b.length){if(e>2*this.b.length-32768){var i=new t(-32768&e);i.set(this.b.subarray(0,this.s.z)),this.b=i}var a=this.b.length-this.s.z;a&&(this.b.set(n.subarray(0,a),this.s.z),this.s.z=this.b.length,this.p(this.b,!1)),this.b.set(this.b.subarray(-32768)),this.b.set(n.subarray(a),32768),this.s.z=n.length-a+32768,this.s.i=32766,this.s.w=32768}else this.b.set(n,this.s.z),this.s.z+=n.length;this.s.l=1&r,(this.s.z>this.s.w+8191||r)&&(this.p(this.b,r||!1),this.s.w=this.s.i,this.s.i-=2)},n}();function q(t,n){n||(n={});var r=function(){var t=-1;return{p:function(n){for(var r=t,e=0;e<n.length;++e)r=I[255&r^n[e]]^r>>>8;t=r},d:function(){return~t}}}(),e=t.length;r.p(t);var i,a=L(t,n,10+((i=n).filename?i.filename.length+1:0),8),s=a.length;return function(t,n){var r=n.filename;if(t[0]=31,t[1]=139,t[2]=8,t[8]=n.level<2?4:9==n.level?2:0,t[9]=3,0!=n.mtime&&O(t,4,Math.floor(new Date(n.mtime||Date.now())/1e3)),r){t[3]=8;for(var e=0;e<=r.length;++e)t[e+10]=r.charCodeAt(e)}}(a,n),O(a,s-8,r.d()),O(a,s-4,e),a}var B=function(){function t(t,n){this.c=S(),this.v=1,j.call(this,t,n)}return t.prototype.push=function(t,n){this.c.p(t),j.prototype.push.call(this,t,n)},t.prototype.p=function(t,n){var r=L(t,this.o,this.v&&(this.o.dictionary?6:2),n&&4,this.s);this.v&&(function(t,n){var r=n.level,e=0==r?0:r<6?1:9==r?3:2;if(t[0]=120,t[1]=e<<6|(n.dictionary&&32),t[1]|=31-(t[0]<<8|t[1])%31,n.dictionary){var i=S();i.p(n.dictionary),O(t,2,i.d())}}(r,this.o),this.v=0),n&&O(r,r.length-4,this.c.d()),this.ondata(r,n)},t}(),G="undefined"!=typeof TextEncoder&&new TextEncoder,H="undefined"!=typeof TextDecoder&&new TextDecoder;try{H.decode(F,{stream:!0})}catch(t){}var J=function(){function t(t){this.ondata=t}return t.prototype.push=function(t,n){this.ondata||E(5),this.d&&E(4),this.ondata(K(t),this.d=n||!1)},t}();function K(n,r){if(r){for(var e=new t(n.length),i=0;i<n.length;++i)e[i]=n.charCodeAt(i);return e}if(G)return G.encode(n);var a=n.length,s=new t(n.length+(n.length>>1)),o=0,f=function(t){s[o++]=t};for(i=0;i<a;++i){if(o+5>s.length){var h=new t(o+8+(a-i<<1));h.set(s),s=h}var l=n.charCodeAt(i);l<128||r?f(l):l<2048?(f(192|l>>6),f(128|63&l)):l>55295&&l<57344?(f(240|(l=65536+(1047552&l)|1023&n.charCodeAt(++i))>>18),f(128|l>>12&63),f(128|l>>6&63),f(128|63&l)):(f(224|l>>12),f(128|l>>6&63),f(128|63&l))}return b(s,0,o)}const N=new class{constructor(){this._init()}clear(){this._init()}addEvent(t){if(!t)throw new Error("Adding invalid event");const n=this._hasEvents?",":"";this.stream.push(n+t),this._hasEvents=!0}finish(){this.stream.push("]",!0);const t=function(t){let n=0;for(let r=0,e=t.length;r<e;r++)n+=t[r].length;const r=new Uint8Array(n);for(let n=0,e=0,i=t.length;n<i;n++){const i=t[n];r.set(i,e),e+=i.length}return r}(this._deflatedData);return this._init(),t}_init(){this._hasEvents=!1,this._deflatedData=[],this.deflate=new B,this.deflate.ondata=(t,n)=>{this._deflatedData.push(t)},this.stream=new J(((t,n)=>{this.deflate.push(t,n)})),this.stream.push("[")}},P={clear:()=>{N.clear()},addEvent:t=>N.addEvent(t),finish:()=>N.finish(),compress:t=>function(t){return q(K(t))}(t)};addEventListener("message",(function(t){const n=t.data.method,r=t.data.id,e=t.data.arg;if(n in P&&"function"==typeof P[n])try{const t=P[n](e);postMessage({id:r,method:n,success:!0,response:t})}catch(t){postMessage({id:r,method:n,success:!1,response:t.message}),console.error(t)}})),postMessage({id:void 0,method:"init",success:!0,response:void 0});';
function b2e() {
  const t = new Blob([_2e]);
  return URL.createObjectURL(t);
}
function ya(t, e) {
  os && (Be.info(t), e && eY(t));
}
function uf(t, e) {
  os &&
    (Be.info(t),
    e &&
      setTimeout(() => {
        eY(t);
      }, 0));
}
function eY(t) {
  vu(
    {
      category: "console",
      data: { logger: "replay" },
      level: "info",
      message: t,
    },
    { level: "info" }
  );
}
class Jk extends Error {
  constructor() {
    super(`Event buffer exceeded maximum size of ${$k}.`);
  }
}
class tY {
  constructor() {
    (this.events = []), (this._totalSize = 0), (this.hasCheckout = !1);
  }
  get hasEvents() {
    return this.events.length > 0;
  }
  get type() {
    return "sync";
  }
  destroy() {
    this.events = [];
  }
  async addEvent(e) {
    const n = JSON.stringify(e).length;
    if (((this._totalSize += n), this._totalSize > $k)) throw new Jk();
    this.events.push(e);
  }
  finish() {
    return new Promise((e) => {
      const n = this.events;
      this.clear(), e(JSON.stringify(n));
    });
  }
  clear() {
    (this.events = []), (this._totalSize = 0), (this.hasCheckout = !1);
  }
  getEarliestTimestamp() {
    const e = this.events.map((n) => n.timestamp).sort()[0];
    return e ? Qk(e) : null;
  }
}
class E2e {
  constructor(e) {
    (this._worker = e), (this._id = 0);
  }
  ensureReady() {
    return this._ensureReadyPromise
      ? this._ensureReadyPromise
      : ((this._ensureReadyPromise = new Promise((e, n) => {
          this._worker.addEventListener(
            "message",
            ({ data: r }) => {
              r.success ? e() : n();
            },
            { once: !0 }
          ),
            this._worker.addEventListener(
              "error",
              (r) => {
                n(r);
              },
              { once: !0 }
            );
        })),
        this._ensureReadyPromise);
  }
  destroy() {
    ya("[Replay] Destroying compression worker"), this._worker.terminate();
  }
  postMessage(e, n) {
    const r = this._getAndIncrementId();
    return new Promise((a, s) => {
      const i = ({ data: o }) => {
        const u = o;
        if (u.method === e && u.id === r) {
          if ((this._worker.removeEventListener("message", i), !u.success)) {
            os && Be.error("[Replay]", u.response),
              s(new Error("Error in compression worker"));
            return;
          }
          a(u.response);
        }
      };
      this._worker.addEventListener("message", i),
        this._worker.postMessage({ id: r, method: e, arg: n });
    });
  }
  _getAndIncrementId() {
    return this._id++;
  }
}
class T2e {
  constructor(e) {
    (this._worker = new E2e(e)),
      (this._earliestTimestamp = null),
      (this._totalSize = 0),
      (this.hasCheckout = !1);
  }
  get hasEvents() {
    return !!this._earliestTimestamp;
  }
  get type() {
    return "worker";
  }
  ensureReady() {
    return this._worker.ensureReady();
  }
  destroy() {
    this._worker.destroy();
  }
  addEvent(e) {
    const n = Qk(e.timestamp);
    (!this._earliestTimestamp || n < this._earliestTimestamp) &&
      (this._earliestTimestamp = n);
    const r = JSON.stringify(e);
    return (
      (this._totalSize += r.length),
      this._totalSize > $k
        ? Promise.reject(new Jk())
        : this._sendEventToWorker(r)
    );
  }
  finish() {
    return this._finishRequest();
  }
  clear() {
    (this._earliestTimestamp = null),
      (this._totalSize = 0),
      (this.hasCheckout = !1),
      this._worker.postMessage("clear").then(null, (e) => {
        os && Be.warn('[Replay] Sending "clear" message to worker failed', e);
      });
  }
  getEarliestTimestamp() {
    return this._earliestTimestamp;
  }
  _sendEventToWorker(e) {
    return this._worker.postMessage("addEvent", e);
  }
  async _finishRequest() {
    const e = await this._worker.postMessage("finish");
    return (this._earliestTimestamp = null), (this._totalSize = 0), e;
  }
}
class w2e {
  constructor(e) {
    (this._fallback = new tY()),
      (this._compression = new T2e(e)),
      (this._used = this._fallback),
      (this._ensureWorkerIsLoadedPromise = this._ensureWorkerIsLoaded());
  }
  get type() {
    return this._used.type;
  }
  get hasEvents() {
    return this._used.hasEvents;
  }
  get hasCheckout() {
    return this._used.hasCheckout;
  }
  set hasCheckout(e) {
    this._used.hasCheckout = e;
  }
  destroy() {
    this._fallback.destroy(), this._compression.destroy();
  }
  clear() {
    return this._used.clear();
  }
  getEarliestTimestamp() {
    return this._used.getEarliestTimestamp();
  }
  addEvent(e) {
    return this._used.addEvent(e);
  }
  async finish() {
    return await this.ensureWorkerIsLoaded(), this._used.finish();
  }
  ensureWorkerIsLoaded() {
    return this._ensureWorkerIsLoadedPromise;
  }
  async _ensureWorkerIsLoaded() {
    try {
      await this._compression.ensureReady();
    } catch {
      ya(
        "[Replay] Failed to load the compression worker, falling back to simple buffer"
      );
      return;
    }
    await this._switchToCompressionWorker();
  }
  async _switchToCompressionWorker() {
    const { events: e, hasCheckout: n } = this._fallback,
      r = [];
    for (const a of e) r.push(this._compression.addEvent(a));
    (this._compression.hasCheckout = n), (this._used = this._compression);
    try {
      await Promise.all(r);
    } catch (a) {
      os && Be.warn("[Replay] Failed to add events when switching buffers.", a);
    }
  }
}
function P2e({ useCompression: t, workerUrl: e }) {
  if (t && window.Worker) {
    const n = I2e(e);
    if (n) return n;
  }
  return ya("[Replay] Using simple buffer"), new tY();
}
function I2e(t) {
  try {
    const e = t || C2e();
    if (!e) return;
    ya(`[Replay] Using compression worker${t ? ` from ${t}` : ""}`);
    const n = new Worker(e);
    return new w2e(n);
  } catch {
    ya("[Replay] Failed to create compression worker");
  }
}
function C2e() {
  return typeof __SENTRY_EXCLUDE_REPLAY_WORKER__ > "u" ||
    !__SENTRY_EXCLUDE_REPLAY_WORKER__
    ? b2e()
    : "";
}
function Zk() {
  try {
    return "sessionStorage" in ms && !!ms.sessionStorage;
  } catch {
    return !1;
  }
}
function A2e(t) {
  O2e(), (t.session = void 0);
}
function O2e() {
  if (Zk())
    try {
      ms.sessionStorage.removeItem(jk);
    } catch {}
}
function nY(t) {
  return t === void 0 ? !1 : Math.random() < t;
}
function sY(t) {
  const e = Date.now(),
    n = t.id || jn(),
    r = t.started || e,
    a = t.lastActivity || e,
    s = t.segmentId || 0,
    i = t.sampled,
    o = t.previousSessionId;
  return {
    id: n,
    started: r,
    lastActivity: a,
    segmentId: s,
    sampled: i,
    previousSessionId: o,
  };
}
function e2(t) {
  if (Zk())
    try {
      ms.sessionStorage.setItem(jk, JSON.stringify(t));
    } catch {}
}
function H2e(t, e) {
  return nY(t) ? "session" : e ? "buffer" : !1;
}
function h8(
  { sessionSampleRate: t, allowBuffering: e, stickySession: n = !1 },
  { previousSessionId: r } = {}
) {
  const a = H2e(t, e),
    s = sY({ sampled: a, previousSessionId: r });
  return n && e2(s), s;
}
function N2e(t) {
  if (!Zk()) return null;
  try {
    const e = ms.sessionStorage.getItem(jk);
    if (!e) return null;
    const n = JSON.parse(e);
    return uf("[Replay] Loading existing session", t), sY(n);
  } catch {
    return null;
  }
}
function xO(t, e, n = +new Date()) {
  return t === null || e === void 0 || e < 0 ? !0 : e === 0 ? !1 : t + e <= n;
}
function rY(
  t,
  { maxReplayDuration: e, sessionIdleExpire: n, targetTime: r = Date.now() }
) {
  return xO(t.started, e, r) || xO(t.lastActivity, n, r);
}
function aY(t, { sessionIdleExpire: e, maxReplayDuration: n }) {
  return !(
    !rY(t, { sessionIdleExpire: e, maxReplayDuration: n }) ||
    (t.sampled === "buffer" && t.segmentId === 0)
  );
}
function sA(
  {
    traceInternals: t,
    sessionIdleExpire: e,
    maxReplayDuration: n,
    previousSessionId: r,
  },
  a
) {
  const s = a.stickySession && N2e(t);
  return s
    ? aY(s, { sessionIdleExpire: e, maxReplayDuration: n })
      ? (uf(
          "[Replay] Session in sessionStorage is expired, creating new one..."
        ),
        h8(a, { previousSessionId: s.id }))
      : s
    : (uf("[Replay] Creating new session", t), h8(a, { previousSessionId: r }));
}
function R2e(t) {
  return t.type === bn.Custom;
}
function t2(t, e, n) {
  return oY(t, e) ? (iY(t, e, n), !0) : !1;
}
function k2e(t, e, n) {
  return oY(t, e) ? iY(t, e, n) : Promise.resolve(null);
}
async function iY(t, e, n) {
  if (!t.eventBuffer) return null;
  try {
    n && t.recordingMode === "buffer" && t.eventBuffer.clear(),
      n && (t.eventBuffer.hasCheckout = !0);
    const r = t.getOptions(),
      a = x2e(e, r.beforeAddRecordingEvent);
    return a ? await t.eventBuffer.addEvent(a) : void 0;
  } catch (r) {
    const a = r && r instanceof Jk ? "addEventSizeExceeded" : "addEvent";
    os && Be.error(r), await t.stop({ reason: a });
    const s = An();
    s && s.recordDroppedEvent("internal_sdk_error", "replay");
  }
}
function oY(t, e) {
  if (!t.eventBuffer || t.isPaused() || !t.isEnabled()) return !1;
  const n = Qk(e.timestamp);
  return n + t.timeouts.sessionIdlePause < Date.now()
    ? !1
    : n > t.getContext().initialTimestamp + t.getOptions().maxReplayDuration
    ? (ya(
        `[Replay] Skipping event with timestamp ${n} because it is after maxReplayDuration`,
        t.getOptions()._experiments.traceInternals
      ),
      !1)
    : !0;
}
function x2e(t, e) {
  try {
    if (typeof e == "function" && R2e(t)) return e(t);
  } catch (n) {
    return (
      os &&
        Be.error(
          "[Replay] An error occured in the `beforeAddRecordingEvent` callback, skipping the event...",
          n
        ),
      null
    );
  }
  return t;
}
function n2(t) {
  return !t.type;
}
function LO(t) {
  return t.type === "transaction";
}
function L2e(t) {
  return t.type === "replay_event";
}
function f8(t) {
  return t.type === "feedback";
}
function uY(t) {
  const e = G2e();
  return (n, r) => {
    if (!t.isEnabled() || (!n2(n) && !LO(n))) return;
    const a = r && r.statusCode;
    if (!(e && (!a || a < 200 || a >= 300))) {
      if (LO(n)) {
        M2e(t, n);
        return;
      }
      D2e(t, n);
    }
  };
}
function M2e(t, e) {
  const n = t.getContext();
  e.contexts &&
    e.contexts.trace &&
    e.contexts.trace.trace_id &&
    n.traceIds.size < 100 &&
    n.traceIds.add(e.contexts.trace.trace_id);
}
function D2e(t, e) {
  const n = t.getContext();
  if (
    (e.event_id && n.errorIds.size < 100 && n.errorIds.add(e.event_id),
    t.recordingMode !== "buffer" || !e.tags || !e.tags.replayId)
  )
    return;
  const { beforeErrorSampling: r } = t.getOptions();
  (typeof r == "function" && !r(e)) ||
    setTimeout(() => {
      t.sendBufferedReplayOrFlush();
    });
}
function G2e() {
  const t = An();
  if (!t) return !1;
  const e = t.getTransport();
  return (e && e.send.__sentry__baseTransport__) || !1;
}
function F2e(t) {
  return (e) => {
    !t.isEnabled() || !n2(e) || U2e(t, e);
  };
}
function U2e(t, e) {
  const n = e.exception && e.exception.values && e.exception.values[0].value;
  if (
    typeof n == "string" &&
    (n.match(
      /reactjs\.org\/docs\/error-decoder\.html\?invariant=(418|419|422|423|425)/
    ) ||
      n.match(
        /(does not match server-rendered HTML|Hydration failed because)/i
      ))
  ) {
    const r = ru({ category: "replay.hydrate-error" });
    Dv(t, r);
  }
}
function K2e(t, e) {
  return t.type ||
    !t.exception ||
    !t.exception.values ||
    !t.exception.values.length
    ? !1
    : !!(e.originalException && e.originalException.__rrweb__);
}
function B2e(t, e) {
  t.triggerUserActivity(),
    t.addUpdate(() =>
      e.timestamp
        ? (t.throttledAddEvent({
            type: bn.Custom,
            timestamp: e.timestamp * 1e3,
            data: {
              tag: "breadcrumb",
              payload: {
                timestamp: e.timestamp,
                type: "default",
                category: "sentry.feedback",
                data: { feedbackId: e.event_id },
              },
            },
          }),
          !1)
        : !0
    );
}
function V2e(t, e) {
  return t.recordingMode !== "buffer" ||
    e.message === zk ||
    !e.exception ||
    e.type
    ? !1
    : nY(t.getOptions().errorSampleRate);
}
function j2e(t, e = !1) {
  const n = e ? uY(t) : void 0;
  return Object.assign(
    (r, a) =>
      t.isEnabled()
        ? L2e(r)
          ? (delete r.breadcrumbs, r)
          : (!n2(r) && !LO(r) && !f8(r)) || !t.checkAndHandleExpiredSession()
          ? r
          : f8(r)
          ? (t.flush(),
            (r.contexts.feedback.replay_id = t.getSessionId()),
            B2e(t, r),
            r)
          : K2e(r, a) && !t.getOptions()._experiments.captureExceptions
          ? (os && Be.log("[Replay] Ignoring error from rrweb internals", r),
            null)
          : ((V2e(t, r) || t.recordingMode === "session") &&
              (r.tags = { ...r.tags, replayId: t.getSessionId() }),
            n && n(r, { statusCode: 200 }),
            r)
        : r,
    { id: "Replay" }
  );
}
function oP(t, e) {
  return e.map(({ type: n, start: r, end: a, name: s, data: i }) => {
    const o = t.throttledAddEvent({
      type: bn.Custom,
      timestamp: r,
      data: {
        tag: "performanceSpan",
        payload: {
          op: n,
          description: s,
          startTimestamp: r,
          endTimestamp: a,
          data: i,
        },
      },
    });
    return typeof o == "string" ? Promise.resolve(null) : o;
  });
}
function z2e(t) {
  const { from: e, to: n } = t,
    r = Date.now() / 1e3;
  return {
    type: "navigation.push",
    start: r,
    end: r,
    name: n,
    data: { previous: e },
  };
}
function $2e(t) {
  return (e) => {
    if (!t.isEnabled()) return;
    const n = z2e(e);
    n !== null &&
      (t.getContext().urls.push(n.name),
      t.triggerUserActivity(),
      t.addUpdate(() => (oP(t, [n]), !1)));
  };
}
function W2e(t, e) {
  return os && t.getOptions()._experiments.traceInternals ? !1 : fOe(e, An());
}
function uP(t, e) {
  t.isEnabled() &&
    e !== null &&
    (W2e(t, e.name) || t.addUpdate(() => (oP(t, [e]), !0)));
}
function q2e(t) {
  const { startTimestamp: e, endTimestamp: n, fetchData: r, response: a } = t;
  if (!n) return null;
  const { method: s, url: i } = r;
  return {
    type: "resource.fetch",
    start: e / 1e3,
    end: n / 1e3,
    name: i,
    data: { method: s, statusCode: a ? a.status : void 0 },
  };
}
function Y2e(t) {
  return (e) => {
    if (!t.isEnabled()) return;
    const n = q2e(e);
    uP(t, n);
  };
}
function X2e(t) {
  const { startTimestamp: e, endTimestamp: n, xhr: r } = t,
    a = r[Sc];
  if (!e || !n || !a) return null;
  const { method: s, url: i, status_code: o } = a;
  return i === void 0
    ? null
    : {
        type: "resource.xhr",
        name: i,
        start: e / 1e3,
        end: n / 1e3,
        data: { method: s, statusCode: o },
      };
}
function Q2e(t) {
  return (e) => {
    if (!t.isEnabled()) return;
    const n = X2e(e);
    uP(t, n);
  };
}
function lP(t, e) {
  if (t)
    try {
      if (typeof t == "string") return e.encode(t).length;
      if (t instanceof URLSearchParams) return e.encode(t.toString()).length;
      if (t instanceof FormData) {
        const n = pY(t);
        return e.encode(n).length;
      }
      if (t instanceof Blob) return t.size;
      if (t instanceof ArrayBuffer) return t.byteLength;
    } catch {}
}
function lY(t) {
  if (!t) return;
  const e = parseInt(t, 10);
  return isNaN(e) ? void 0 : e;
}
function cY(t) {
  try {
    if (typeof t == "string") return [t];
    if (t instanceof URLSearchParams) return [t.toString()];
    if (t instanceof FormData) return [pY(t)];
    if (!t) return [void 0];
  } catch {
    return (
      os && Be.warn("[Replay] Failed to serialize body", t),
      [void 0, "BODY_PARSE_ERROR"]
    );
  }
  return (
    os && Be.info("[Replay] Skipping network body because of body type", t),
    [void 0, "UNPARSEABLE_BODY_TYPE"]
  );
}
function XT(t, e) {
  if (!t) return { headers: {}, size: void 0, _meta: { warnings: [e] } };
  const n = { ...t._meta },
    r = n.warnings || [];
  return (n.warnings = [...r, e]), (t._meta = n), t;
}
function dY(t, e) {
  if (!e) return null;
  const {
    startTimestamp: n,
    endTimestamp: r,
    url: a,
    method: s,
    statusCode: i,
    request: o,
    response: u,
  } = e;
  return {
    type: t,
    start: n / 1e3,
    end: r / 1e3,
    name: a,
    data: gr({ method: s, statusCode: i, request: o, response: u }),
  };
}
function kg(t) {
  return { headers: {}, size: t, _meta: { warnings: ["URL_SKIPPED"] } };
}
function Cc(t, e, n) {
  if (!e && Object.keys(t).length === 0) return;
  if (!e) return { headers: t };
  if (!n) return { headers: t, size: e };
  const r = { headers: t, size: e },
    { body: a, warnings: s } = J2e(n);
  return (r.body = a), s && s.length > 0 && (r._meta = { warnings: s }), r;
}
function MO(t, e) {
  return Object.keys(t).reduce((n, r) => {
    const a = r.toLowerCase();
    return e.includes(a) && t[r] && (n[a] = t[r]), n;
  }, {});
}
function pY(t) {
  return new URLSearchParams(t).toString();
}
function J2e(t) {
  if (!t || typeof t != "string") return { body: t };
  const e = t.length > Z7,
    n = Z2e(t);
  if (e) {
    const r = t.slice(0, Z7);
    return n
      ? { body: r, warnings: ["MAYBE_JSON_TRUNCATED"] }
      : { body: `${r}…`, warnings: ["TEXT_TRUNCATED"] };
  }
  if (n)
    try {
      return { body: JSON.parse(t) };
    } catch {}
  return { body: t };
}
function Z2e(t) {
  const e = t[0],
    n = t[t.length - 1];
  return (e === "[" && n === "]") || (e === "{" && n === "}");
}
function QT(t, e) {
  const n = exe(t);
  return bm(n, e);
}
function exe(t, e = ms.document.baseURI) {
  if (
    t.startsWith("http://") ||
    t.startsWith("https://") ||
    t.startsWith(ms.location.origin)
  )
    return t;
  const n = new URL(t, e);
  if (n.origin !== new URL(e).origin) return t;
  const r = n.href;
  return !t.endsWith("/") && r.endsWith("/") ? r.slice(0, -1) : r;
}
async function txe(t, e, n) {
  try {
    const r = await sxe(t, e, n),
      a = dY("resource.fetch", r);
    uP(n.replay, a);
  } catch (r) {
    os && Be.error("[Replay] Failed to capture fetch breadcrumb", r);
  }
}
function nxe(t, e, n) {
  const { input: r, response: a } = e,
    s = r ? hY(r) : void 0,
    i = lP(s, n.textEncoder),
    o = a ? lY(a.headers.get("content-length")) : void 0;
  i !== void 0 && (t.data.request_body_size = i),
    o !== void 0 && (t.data.response_body_size = o);
}
async function sxe(t, e, n) {
  const r = Date.now(),
    { startTimestamp: a = r, endTimestamp: s = r } = e,
    {
      url: i,
      method: o,
      status_code: u = 0,
      request_body_size: l,
      response_body_size: c,
    } = t.data,
    d = QT(i, n.networkDetailAllowUrls) && !QT(i, n.networkDetailDenyUrls),
    p = d ? rxe(n, e.input, l) : kg(l),
    m = await axe(d, n, e.response, c);
  return {
    startTimestamp: a,
    endTimestamp: s,
    url: i,
    method: o,
    statusCode: u,
    request: p,
    response: m,
  };
}
function rxe({ networkCaptureBodies: t, networkRequestHeaders: e }, n, r) {
  const a = n ? uxe(n, e) : {};
  if (!t) return Cc(a, r, void 0);
  const s = hY(n),
    [i, o] = cY(s),
    u = Cc(a, r, i);
  return o ? XT(u, o) : u;
}
async function axe(
  t,
  { networkCaptureBodies: e, textEncoder: n, networkResponseHeaders: r },
  a,
  s
) {
  if (!t && s !== void 0) return kg(s);
  const i = a ? fY(a.headers, r) : {};
  if (!a || (!e && s !== void 0)) return Cc(i, s, void 0);
  const [o, u] = await oxe(a),
    l = ixe(o, {
      networkCaptureBodies: e,
      textEncoder: n,
      responseBodySize: s,
      captureDetails: t,
      headers: i,
    });
  return u ? XT(l, u) : l;
}
function ixe(
  t,
  {
    networkCaptureBodies: e,
    textEncoder: n,
    responseBodySize: r,
    captureDetails: a,
    headers: s,
  }
) {
  try {
    const i = t && t.length && r === void 0 ? lP(t, n) : r;
    return a ? (e ? Cc(s, i, t) : Cc(s, i, void 0)) : kg(i);
  } catch (i) {
    return (
      os && Be.warn("[Replay] Failed to serialize response body", i),
      Cc(s, r, void 0)
    );
  }
}
async function oxe(t) {
  const e = lxe(t);
  if (!e) return [void 0, "BODY_PARSE_ERROR"];
  try {
    return [await cxe(e)];
  } catch (n) {
    return (
      os && Be.warn("[Replay] Failed to get text body from response", n),
      [void 0, "BODY_PARSE_ERROR"]
    );
  }
}
function hY(t = []) {
  if (!(t.length !== 2 || typeof t[1] != "object")) return t[1].body;
}
function fY(t, e) {
  const n = {};
  return (
    e.forEach((r) => {
      t.get(r) && (n[r] = t.get(r));
    }),
    n
  );
}
function uxe(t, e) {
  return t.length === 1 && typeof t[0] != "string"
    ? m8(t[0], e)
    : t.length === 2
    ? m8(t[1], e)
    : {};
}
function m8(t, e) {
  if (!t) return {};
  const n = t.headers;
  return n
    ? n instanceof Headers
      ? fY(n, e)
      : Array.isArray(n)
      ? {}
      : MO(n, e)
    : {};
}
function lxe(t) {
  try {
    return t.clone();
  } catch (e) {
    os && Be.warn("[Replay] Failed to clone response body", e);
  }
}
function cxe(t) {
  return new Promise((e, n) => {
    const r = setTimeout(
      () => n(new Error("Timeout while trying to read response body")),
      500
    );
    dxe(t)
      .then(
        (a) => e(a),
        (a) => n(a)
      )
      .finally(() => clearTimeout(r));
  });
}
async function dxe(t) {
  return await t.text();
}
async function pxe(t, e, n) {
  try {
    const r = fxe(t, e, n),
      a = dY("resource.xhr", r);
    uP(n.replay, a);
  } catch (r) {
    os && Be.error("[Replay] Failed to capture xhr breadcrumb", r);
  }
}
function hxe(t, e, n) {
  const { xhr: r, input: a } = e;
  if (!r) return;
  const s = lP(a, n.textEncoder),
    i = r.getResponseHeader("content-length")
      ? lY(r.getResponseHeader("content-length"))
      : gxe(r.response, r.responseType, n.textEncoder);
  s !== void 0 && (t.data.request_body_size = s),
    i !== void 0 && (t.data.response_body_size = i);
}
function fxe(t, e, n) {
  const r = Date.now(),
    { startTimestamp: a = r, endTimestamp: s = r, input: i, xhr: o } = e,
    {
      url: u,
      method: l,
      status_code: c = 0,
      request_body_size: d,
      response_body_size: p,
    } = t.data;
  if (!u) return null;
  if (
    !o ||
    !QT(u, n.networkDetailAllowUrls) ||
    QT(u, n.networkDetailDenyUrls)
  ) {
    const de = kg(d),
      U = kg(p);
    return {
      startTimestamp: a,
      endTimestamp: s,
      url: u,
      method: l,
      statusCode: c,
      request: de,
      response: U,
    };
  }
  const m = o[Sc],
    y = m ? MO(m.request_headers, n.networkRequestHeaders) : {},
    I = MO(mxe(o), n.networkResponseHeaders),
    [O, g] = n.networkCaptureBodies ? cY(i) : [void 0],
    [C, H] = n.networkCaptureBodies ? Sxe(o) : [void 0],
    B = Cc(y, d, O),
    he = Cc(I, p, C);
  return {
    startTimestamp: a,
    endTimestamp: s,
    url: u,
    method: l,
    statusCode: c,
    request: g ? XT(B, g) : B,
    response: H ? XT(he, H) : he,
  };
}
function mxe(t) {
  const e = t.getAllResponseHeaders();
  return e
    ? e
        .split(
          `\r
`
        )
        .reduce((n, r) => {
          const [a, s] = r.split(": ");
          return (n[a.toLowerCase()] = s), n;
        }, {})
    : {};
}
function Sxe(t) {
  const e = [];
  try {
    return [t.responseText];
  } catch (n) {
    e.push(n);
  }
  try {
    return yxe(t.response, t.responseType);
  } catch (n) {
    e.push(n);
  }
  return (
    os && Be.warn("[Replay] Failed to get xhr response body", ...e), [void 0]
  );
}
function yxe(t, e) {
  try {
    if (typeof t == "string") return [t];
    if (t instanceof Document) return [t.body.outerHTML];
    if (e === "json" && t && typeof t == "object") return [JSON.stringify(t)];
    if (!t) return [void 0];
  } catch {
    return (
      os && Be.warn("[Replay] Failed to serialize body", t),
      [void 0, "BODY_PARSE_ERROR"]
    );
  }
  return (
    os && Be.info("[Replay] Skipping network body because of body type", t),
    [void 0, "UNPARSEABLE_BODY_TYPE"]
  );
}
function gxe(t, e, n) {
  try {
    const r = e === "json" && t && typeof t == "object" ? JSON.stringify(t) : t;
    return lP(r, n);
  } catch {
    return;
  }
}
function vxe(t) {
  const e = An();
  try {
    const n = new TextEncoder(),
      {
        networkDetailAllowUrls: r,
        networkDetailDenyUrls: a,
        networkCaptureBodies: s,
        networkRequestHeaders: i,
        networkResponseHeaders: o,
      } = t.getOptions(),
      u = {
        replay: t,
        textEncoder: n,
        networkDetailAllowUrls: r,
        networkDetailDenyUrls: a,
        networkCaptureBodies: s,
        networkRequestHeaders: i,
        networkResponseHeaders: o,
      };
    e && e.on
      ? e.on("beforeAddBreadcrumb", (l, c) => _xe(u, l, c))
      : (hk(Y2e(t)), fk(Q2e(t)));
  } catch {}
}
function _xe(t, e, n) {
  if (e.data)
    try {
      bxe(e) && Txe(n) && (hxe(e, n, t), pxe(e, n, t)),
        Exe(e) && wxe(n) && (nxe(e, n, t), txe(e, n, t));
    } catch {
      os && Be.warn("Error when enriching network breadcrumb");
    }
}
function bxe(t) {
  return t.category === "xhr";
}
function Exe(t) {
  return t.category === "fetch";
}
function Txe(t) {
  return t && t.xhr;
}
function wxe(t) {
  return t && t.response;
}
let S8 = null;
function Pxe(t) {
  return !!t.category;
}
const Ixe = (t) => (e) => {
  if (!t.isEnabled()) return;
  const n = Cxe(e);
  n && Dv(t, n);
};
function Cxe(t) {
  const e = t.getLastBreadcrumb && t.getLastBreadcrumb();
  return S8 === e ||
    !e ||
    ((S8 = e),
    !Pxe(e) ||
      ["fetch", "xhr", "sentry.event", "sentry.transaction"].includes(
        e.category
      ) ||
      e.category.startsWith("ui."))
    ? null
    : e.category === "console"
    ? Axe(e)
    : ru(e);
}
function Axe(t) {
  const e = t.data && t.data.arguments;
  if (!Array.isArray(e) || e.length === 0) return ru(t);
  let n = !1;
  const r = e.map((a) => {
    if (!a) return a;
    if (typeof a == "string")
      return a.length > Z_ ? ((n = !0), `${a.slice(0, Z_)}…`) : a;
    if (typeof a == "object")
      try {
        const s = Ii(a, 7);
        return JSON.stringify(s).length > Z_
          ? ((n = !0), `${JSON.stringify(s, null, 2).slice(0, Z_)}…`)
          : s;
      } catch {}
    return a;
  });
  return ru({
    ...t,
    data: {
      ...t.data,
      arguments: r,
      ...(n ? { _meta: { warnings: ["CONSOLE_ARG_TRUNCATED"] } } : {}),
    },
  });
}
function Oxe(t) {
  const e = er(),
    n = An();
  e.addScopeListener(Ixe(t)), eW(i2e(t)), Av($2e(t)), vxe(t);
  const r = j2e(t, !y8(n));
  n && n.addEventProcessor ? n.addEventProcessor(r) : KW(r),
    y8(n) &&
      (n.on("beforeSendEvent", F2e(t)),
      n.on("afterSendEvent", uY(t)),
      n.on("createDsc", (a) => {
        const s = t.getSessionId();
        s &&
          t.isEnabled() &&
          t.recordingMode === "session" &&
          t.checkAndHandleExpiredSession() &&
          (a.replay_id = s);
      }),
      n.on("startTransaction", (a) => {
        t.lastTransaction = a;
      }),
      n.on("finishTransaction", (a) => {
        t.lastTransaction = a;
      }),
      n.on("beforeSendFeedback", (a, s) => {
        const i = t.getSessionId();
        s &&
          s.includeReplay &&
          t.isEnabled() &&
          i &&
          a.contexts &&
          a.contexts.feedback &&
          (a.contexts.feedback.replay_id = i);
      }));
}
function y8(t) {
  return !!(t && t.on);
}
async function Hxe(t) {
  try {
    return Promise.all(oP(t, [Nxe(ms.performance.memory)]));
  } catch {
    return [];
  }
}
function Nxe(t) {
  const { jsHeapSizeLimit: e, totalJSHeapSize: n, usedJSHeapSize: r } = t,
    a = Date.now() / 1e3;
  return {
    type: "memory",
    name: "memory",
    start: a,
    end: a,
    data: {
      memory: { jsHeapSizeLimit: e, totalJSHeapSize: n, usedJSHeapSize: r },
    },
  };
}
function Rxe(t, e, n) {
  let r, a, s;
  const i = n && n.maxWait ? Math.max(n.maxWait, e) : 0;
  function o() {
    return u(), (r = t()), r;
  }
  function u() {
    a !== void 0 && clearTimeout(a),
      s !== void 0 && clearTimeout(s),
      (a = s = void 0);
  }
  function l() {
    return a !== void 0 || s !== void 0 ? o() : r;
  }
  function c() {
    return (
      a && clearTimeout(a),
      (a = setTimeout(o, e)),
      i && s === void 0 && (s = setTimeout(o, i)),
      r
    );
  }
  return (c.cancel = u), (c.flush = l), c;
}
function kxe(t) {
  let e = !1;
  return (n, r) => {
    if (!t.checkAndHandleExpiredSession()) {
      os && Be.warn("[Replay] Received replay event after session expired.");
      return;
    }
    const a = r || !e;
    (e = !0),
      t.clickDetector && t2e(t.clickDetector, n),
      t.addUpdate(() => {
        if (
          (t.recordingMode === "buffer" && a && t.setInitialState(),
          !t2(t, n, a))
        )
          return !0;
        if (!a) return !1;
        if ((Lxe(t, a), t.session && t.session.previousSessionId)) return !0;
        if (t.recordingMode === "buffer" && t.session && t.eventBuffer) {
          const s = t.eventBuffer.getEarliestTimestamp();
          s &&
            (ya(
              `[Replay] Updating session start time to earliest event in buffer to ${new Date(
                s
              )}`,
              t.getOptions()._experiments.traceInternals
            ),
            (t.session.started = s),
            t.getOptions().stickySession && e2(t.session));
        }
        return t.recordingMode === "session" && t.flush(), !0;
      });
  };
}
function xxe(t) {
  const e = t.getOptions();
  return {
    type: bn.Custom,
    timestamp: Date.now(),
    data: {
      tag: "options",
      payload: {
        shouldRecordCanvas: t.isRecordingCanvas(),
        sessionSampleRate: e.sessionSampleRate,
        errorSampleRate: e.errorSampleRate,
        useCompressionOption: e.useCompression,
        blockAllMedia: e.blockAllMedia,
        maskAllText: e.maskAllText,
        maskAllInputs: e.maskAllInputs,
        useCompression: t.eventBuffer ? t.eventBuffer.type === "worker" : !1,
        networkDetailHasUrls: e.networkDetailAllowUrls.length > 0,
        networkCaptureBodies: e.networkCaptureBodies,
        networkRequestHasHeaders: e.networkRequestHeaders.length > 0,
        networkResponseHasHeaders: e.networkResponseHeaders.length > 0,
      },
    },
  };
}
function Lxe(t, e) {
  !e || !t.session || t.session.segmentId !== 0 || t2(t, xxe(t), !1);
}
function Mxe(t, e, n, r) {
  return hd(cW(t, gk(t), r, n), [
    [{ type: "replay_event" }, t],
    [
      {
        type: "replay_recording",
        length:
          typeof e == "string" ? new TextEncoder().encode(e).length : e.length,
      },
      e,
    ],
  ]);
}
function Dxe({ recordingData: t, headers: e }) {
  let n;
  const r = `${JSON.stringify(e)}
`;
  if (typeof t == "string") n = `${r}${t}`;
  else {
    const s = new TextEncoder().encode(r);
    (n = new Uint8Array(s.length + t.length)), n.set(s), n.set(t, s.length);
  }
  return n;
}
async function Gxe({ client: t, scope: e, replayId: n, event: r }) {
  const a =
      typeof t._integrations == "object" &&
      t._integrations !== null &&
      !Array.isArray(t._integrations)
        ? Object.keys(t._integrations)
        : void 0,
    s = { event_id: n, integrations: a };
  t.emit && t.emit("preprocessEvent", r, s);
  const i = await Ek(t.getOptions(), r, s, e, t, Cu());
  if (!i) return null;
  i.platform = i.platform || "javascript";
  const o = t.getSdkMetadata && t.getSdkMetadata(),
    { name: u, version: l } = (o && o.sdk) || {};
  return (
    (i.sdk = {
      ...i.sdk,
      name: u || "sentry.javascript.unknown",
      version: l || "0.0.0",
    }),
    i
  );
}
async function Fxe({
  recordingData: t,
  replayId: e,
  segmentId: n,
  eventContext: r,
  timestamp: a,
  session: s,
}) {
  const i = Dxe({ recordingData: t, headers: { segment_id: n } }),
    { urls: o, errorIds: u, traceIds: l, initialTimestamp: c } = r,
    d = An(),
    p = er(),
    m = d && d.getTransport(),
    y = d && d.getDsn();
  if (!d || !m || !y || !s.sampled) return;
  const I = {
      type: TRe,
      replay_start_timestamp: c / 1e3,
      timestamp: a / 1e3,
      error_ids: u,
      trace_ids: l,
      urls: o,
      replay_id: e,
      segment_id: n,
      replay_type: s.sampled,
    },
    O = await Gxe({ scope: p, client: d, replayId: e, event: I });
  if (!O) {
    d.recordDroppedEvent("event_processor", "replay", I),
      ya("An event processor returned `null`, will not send event.");
    return;
  }
  delete O.sdkProcessingMetadata;
  const g = Mxe(O, i, y, d.getOptions().tunnel);
  let C;
  try {
    C = await m.send(g);
  } catch (B) {
    const he = new Error(zk);
    try {
      he.cause = B;
    } catch {}
    throw he;
  }
  if (!C) return C;
  if (
    typeof C.statusCode == "number" &&
    (C.statusCode < 200 || C.statusCode >= 300)
  )
    throw new mY(C.statusCode);
  const H = pW({}, C);
  if (dW(H, "replay")) throw new SY(H);
  return C;
}
class mY extends Error {
  constructor(e) {
    super(`Transport returned status code ${e}`);
  }
}
class SY extends Error {
  constructor(e) {
    super("Rate limit hit"), (this.rateLimits = e);
  }
}
async function yY(t, e = { count: 0, interval: ORe }) {
  const { recordingData: n, options: r } = t;
  if (n.length)
    try {
      return await Fxe(t), !0;
    } catch (a) {
      if (a instanceof mY || a instanceof SY) throw a;
      if (
        (gW("Replays", { _retryCount: e.count }),
        os && r._experiments && r._experiments.captureExceptions && X0(a),
        e.count >= HRe)
      ) {
        const s = new Error(`${zk} - max retries exceeded`);
        try {
          s.cause = a;
        } catch {}
        throw s;
      }
      return (
        (e.interval *= ++e.count),
        new Promise((s, i) => {
          setTimeout(async () => {
            try {
              await yY(t, e), s(!0);
            } catch (o) {
              i(o);
            }
          }, e.interval);
        })
      );
    }
}
const gY = "__THROTTLED",
  Uxe = "__SKIPPED";
function Kxe(t, e, n) {
  const r = new Map(),
    a = (o) => {
      const u = o - n;
      r.forEach((l, c) => {
        c < u && r.delete(c);
      });
    },
    s = () => [...r.values()].reduce((o, u) => o + u, 0);
  let i = !1;
  return (...o) => {
    const u = Math.floor(Date.now() / 1e3);
    if ((a(u), s() >= e)) {
      const c = i;
      return (i = !0), c ? Uxe : gY;
    }
    i = !1;
    const l = r.get(u) || 0;
    return r.set(u, l + 1), t(...o);
  };
}
class tc {
  constructor({ options: e, recordingOptions: n }) {
    tc.prototype.__init.call(this),
      tc.prototype.__init2.call(this),
      tc.prototype.__init3.call(this),
      tc.prototype.__init4.call(this),
      tc.prototype.__init5.call(this),
      tc.prototype.__init6.call(this),
      (this.eventBuffer = null),
      (this.performanceEntries = []),
      (this.replayPerformanceEntries = []),
      (this.recordingMode = "session"),
      (this.timeouts = { sessionIdlePause: wRe, sessionIdleExpire: PRe }),
      (this._lastActivity = Date.now()),
      (this._isEnabled = !1),
      (this._isPaused = !1),
      (this._hasInitializedCoreListeners = !1),
      (this._context = {
        errorIds: new Set(),
        traceIds: new Set(),
        urls: [],
        initialTimestamp: Date.now(),
        initialUrl: "",
      }),
      (this._recordingOptions = n),
      (this._options = e),
      (this._debouncedFlush = Rxe(
        () => this._flush(),
        this._options.flushMinDelay,
        { maxWait: this._options.flushMaxDelay }
      )),
      (this._throttledAddEvent = Kxe((i, o) => k2e(this, i, o), 300, 5));
    const { slowClickTimeout: r, slowClickIgnoreSelectors: a } =
        this.getOptions(),
      s = r
        ? {
            threshold: Math.min(NRe, r),
            timeout: r,
            scrollTimeout: RRe,
            ignoreSelector: a ? a.join(",") : "",
          }
        : void 0;
    s && (this.clickDetector = new Qke(this, s));
  }
  getContext() {
    return this._context;
  }
  isEnabled() {
    return this._isEnabled;
  }
  isPaused() {
    return this._isPaused;
  }
  isRecordingCanvas() {
    return !!this._canvas;
  }
  getOptions() {
    return this._options;
  }
  initializeSampling(e) {
    const { errorSampleRate: n, sessionSampleRate: r } = this._options;
    if (!(n <= 0 && r <= 0)) {
      if ((this._initializeSessionForSampling(e), !this.session)) {
        this._handleException(
          new Error("Unable to initialize and create session")
        );
        return;
      }
      this.session.sampled !== !1 &&
        ((this.recordingMode =
          this.session.sampled === "buffer" && this.session.segmentId === 0
            ? "buffer"
            : "session"),
        uf(
          `[Replay] Starting replay in ${this.recordingMode} mode`,
          this._options._experiments.traceInternals
        ),
        this._initializeRecording());
    }
  }
  start() {
    if (this._isEnabled && this.recordingMode === "session")
      throw new Error("Replay recording is already in progress");
    if (this._isEnabled && this.recordingMode === "buffer")
      throw new Error(
        "Replay buffering is in progress, call `flush()` to save the replay"
      );
    uf(
      "[Replay] Starting replay in session mode",
      this._options._experiments.traceInternals
    );
    const e = sA(
      {
        maxReplayDuration: this._options.maxReplayDuration,
        sessionIdleExpire: this.timeouts.sessionIdleExpire,
        traceInternals: this._options._experiments.traceInternals,
      },
      {
        stickySession: this._options.stickySession,
        sessionSampleRate: 1,
        allowBuffering: !1,
      }
    );
    (this.session = e), this._initializeRecording();
  }
  startBuffering() {
    if (this._isEnabled)
      throw new Error("Replay recording is already in progress");
    uf(
      "[Replay] Starting replay in buffer mode",
      this._options._experiments.traceInternals
    );
    const e = sA(
      {
        sessionIdleExpire: this.timeouts.sessionIdleExpire,
        maxReplayDuration: this._options.maxReplayDuration,
        traceInternals: this._options._experiments.traceInternals,
      },
      {
        stickySession: this._options.stickySession,
        sessionSampleRate: 0,
        allowBuffering: !0,
      }
    );
    (this.session = e),
      (this.recordingMode = "buffer"),
      this._initializeRecording();
  }
  startRecording() {
    try {
      const e = this._canvas;
      this._stopRecording = Ic({
        ...this._recordingOptions,
        ...(this.recordingMode === "buffer" && { checkoutEveryNms: ARe }),
        emit: kxe(this),
        onMutation: this._onMutationHandler,
        ...(e
          ? {
              recordCanvas: e.recordCanvas,
              getCanvasManager: e.getCanvasManager,
              sampling: e.sampling,
              dataURLOptions: e.dataURLOptions,
            }
          : {}),
      });
    } catch (e) {
      this._handleException(e);
    }
  }
  stopRecording() {
    try {
      return (
        this._stopRecording &&
          (this._stopRecording(), (this._stopRecording = void 0)),
        !0
      );
    } catch (e) {
      return this._handleException(e), !1;
    }
  }
  async stop({ forceFlush: e = !1, reason: n } = {}) {
    if (this._isEnabled) {
      this._isEnabled = !1;
      try {
        ya(
          `[Replay] Stopping Replay${n ? ` triggered by ${n}` : ""}`,
          this._options._experiments.traceInternals
        ),
          this._removeListeners(),
          this.stopRecording(),
          this._debouncedFlush.cancel(),
          e && (await this._flush({ force: !0 })),
          this.eventBuffer && this.eventBuffer.destroy(),
          (this.eventBuffer = null),
          A2e(this);
      } catch (r) {
        this._handleException(r);
      }
    }
  }
  pause() {
    this._isPaused ||
      ((this._isPaused = !0),
      this.stopRecording(),
      ya("[Replay] Pausing replay", this._options._experiments.traceInternals));
  }
  resume() {
    !this._isPaused ||
      !this._checkSession() ||
      ((this._isPaused = !1),
      this.startRecording(),
      ya(
        "[Replay] Resuming replay",
        this._options._experiments.traceInternals
      ));
  }
  async sendBufferedReplayOrFlush({ continueRecording: e = !0 } = {}) {
    if (this.recordingMode === "session") return this.flushImmediate();
    const n = Date.now();
    ya(
      "[Replay] Converting buffer to session",
      this._options._experiments.traceInternals
    ),
      await this.flushImmediate();
    const r = this.stopRecording();
    !e ||
      !r ||
      (this.recordingMode !== "session" &&
        ((this.recordingMode = "session"),
        this.session &&
          (this._updateUserActivity(n),
          this._updateSessionActivity(n),
          this._maybeSaveSession()),
        this.startRecording()));
  }
  addUpdate(e) {
    const n = e();
    this.recordingMode !== "buffer" && n !== !0 && this._debouncedFlush();
  }
  triggerUserActivity() {
    if ((this._updateUserActivity(), !this._stopRecording)) {
      if (!this._checkSession()) return;
      this.resume();
      return;
    }
    this.checkAndHandleExpiredSession(), this._updateSessionActivity();
  }
  updateUserActivity() {
    this._updateUserActivity(), this._updateSessionActivity();
  }
  conditionalFlush() {
    return this.recordingMode === "buffer"
      ? Promise.resolve()
      : this.flushImmediate();
  }
  flush() {
    return this._debouncedFlush();
  }
  flushImmediate() {
    return this._debouncedFlush(), this._debouncedFlush.flush();
  }
  cancelFlush() {
    this._debouncedFlush.cancel();
  }
  getSessionId() {
    return this.session && this.session.id;
  }
  checkAndHandleExpiredSession() {
    if (
      this._lastActivity &&
      xO(this._lastActivity, this.timeouts.sessionIdlePause) &&
      this.session &&
      this.session.sampled === "session"
    ) {
      this.pause();
      return;
    }
    return !!this._checkSession();
  }
  setInitialState() {
    const e = `${ms.location.pathname}${ms.location.hash}${ms.location.search}`,
      n = `${ms.location.origin}${e}`;
    (this.performanceEntries = []),
      (this.replayPerformanceEntries = []),
      this._clearContext(),
      (this._context.initialUrl = n),
      (this._context.initialTimestamp = Date.now()),
      this._context.urls.push(n);
  }
  throttledAddEvent(e, n) {
    const r = this._throttledAddEvent(e, n);
    if (r === gY) {
      const a = ru({ category: "replay.throttled" });
      this.addUpdate(
        () =>
          !t2(this, {
            type: zke,
            timestamp: a.timestamp || 0,
            data: { tag: "breadcrumb", payload: a, metric: !0 },
          })
      );
    }
    return r;
  }
  getCurrentRoute() {
    const e = this.lastTransaction || er().getTransaction(),
      r = ((e && es(e).data) || {})[Di];
    if (!(!e || !r || !["route", "custom"].includes(r)))
      return es(e).description;
  }
  _initializeRecording() {
    this.setInitialState(),
      this._updateSessionActivity(),
      (this.eventBuffer = P2e({
        useCompression: this._options.useCompression,
        workerUrl: this._options.workerUrl,
      })),
      this._removeListeners(),
      this._addListeners(),
      (this._isEnabled = !0),
      (this._isPaused = !1),
      this.startRecording();
  }
  _handleException(e) {
    os && Be.error("[Replay]", e),
      os &&
        this._options._experiments &&
        this._options._experiments.captureExceptions &&
        X0(e);
  }
  _initializeSessionForSampling(e) {
    const n = this._options.errorSampleRate > 0,
      r = sA(
        {
          sessionIdleExpire: this.timeouts.sessionIdleExpire,
          maxReplayDuration: this._options.maxReplayDuration,
          traceInternals: this._options._experiments.traceInternals,
          previousSessionId: e,
        },
        {
          stickySession: this._options.stickySession,
          sessionSampleRate: this._options.sessionSampleRate,
          allowBuffering: n,
        }
      );
    this.session = r;
  }
  _checkSession() {
    if (!this.session) return !1;
    const e = this.session;
    return aY(e, {
      sessionIdleExpire: this.timeouts.sessionIdleExpire,
      maxReplayDuration: this._options.maxReplayDuration,
    })
      ? (this._refreshSession(e), !1)
      : !0;
  }
  async _refreshSession(e) {
    this._isEnabled &&
      (await this.stop({ reason: "refresh session" }),
      this.initializeSampling(e.id));
  }
  _addListeners() {
    try {
      ms.document.addEventListener(
        "visibilitychange",
        this._handleVisibilityChange
      ),
        ms.addEventListener("blur", this._handleWindowBlur),
        ms.addEventListener("focus", this._handleWindowFocus),
        ms.addEventListener("keydown", this._handleKeyboardEvent),
        this.clickDetector && this.clickDetector.addListeners(),
        this._hasInitializedCoreListeners ||
          (Oxe(this), (this._hasInitializedCoreListeners = !0));
    } catch (e) {
      this._handleException(e);
    }
    this._performanceCleanupCallback = v2e(this);
  }
  _removeListeners() {
    try {
      ms.document.removeEventListener(
        "visibilitychange",
        this._handleVisibilityChange
      ),
        ms.removeEventListener("blur", this._handleWindowBlur),
        ms.removeEventListener("focus", this._handleWindowFocus),
        ms.removeEventListener("keydown", this._handleKeyboardEvent),
        this.clickDetector && this.clickDetector.removeListeners(),
        this._performanceCleanupCallback && this._performanceCleanupCallback();
    } catch (e) {
      this._handleException(e);
    }
  }
  __init() {
    this._handleVisibilityChange = () => {
      ms.document.visibilityState === "visible"
        ? this._doChangeToForegroundTasks()
        : this._doChangeToBackgroundTasks();
    };
  }
  __init2() {
    this._handleWindowBlur = () => {
      const e = ru({ category: "ui.blur" });
      this._doChangeToBackgroundTasks(e);
    };
  }
  __init3() {
    this._handleWindowFocus = () => {
      const e = ru({ category: "ui.focus" });
      this._doChangeToForegroundTasks(e);
    };
  }
  __init4() {
    this._handleKeyboardEvent = (e) => {
      c2e(this, e);
    };
  }
  _doChangeToBackgroundTasks(e) {
    !this.session ||
      rY(this.session, {
        maxReplayDuration: this._options.maxReplayDuration,
        sessionIdleExpire: this.timeouts.sessionIdleExpire,
      }) ||
      (e && this._createCustomBreadcrumb(e), this.conditionalFlush());
  }
  _doChangeToForegroundTasks(e) {
    if (!this.session) return;
    if (!this.checkAndHandleExpiredSession()) {
      ya("[Replay] Document has become active, but session has expired");
      return;
    }
    e && this._createCustomBreadcrumb(e);
  }
  _updateUserActivity(e = Date.now()) {
    this._lastActivity = e;
  }
  _updateSessionActivity(e = Date.now()) {
    this.session && ((this.session.lastActivity = e), this._maybeSaveSession());
  }
  _createCustomBreadcrumb(e) {
    this.addUpdate(() => {
      this.throttledAddEvent({
        type: bn.Custom,
        timestamp: e.timestamp || 0,
        data: { tag: "breadcrumb", payload: e },
      });
    });
  }
  _addPerformanceEntries() {
    const e = h2e(this.performanceEntries).concat(
      this.replayPerformanceEntries
    );
    return (
      (this.performanceEntries = []),
      (this.replayPerformanceEntries = []),
      Promise.all(oP(this, e))
    );
  }
  _clearContext() {
    this._context.errorIds.clear(),
      this._context.traceIds.clear(),
      (this._context.urls = []);
  }
  _updateInitialTimestampFromEventBuffer() {
    const { session: e, eventBuffer: n } = this;
    if (!e || !n || e.segmentId) return;
    const r = n.getEarliestTimestamp();
    r &&
      r < this._context.initialTimestamp &&
      (this._context.initialTimestamp = r);
  }
  _popEventContext() {
    const e = {
      initialTimestamp: this._context.initialTimestamp,
      initialUrl: this._context.initialUrl,
      errorIds: Array.from(this._context.errorIds),
      traceIds: Array.from(this._context.traceIds),
      urls: this._context.urls,
    };
    return this._clearContext(), e;
  }
  async _runFlush() {
    const e = this.getSessionId();
    if (!this.session || !this.eventBuffer || !e) {
      os && Be.error("[Replay] No session or eventBuffer found to flush.");
      return;
    }
    if (
      (await this._addPerformanceEntries(),
      !(!this.eventBuffer || !this.eventBuffer.hasEvents) &&
        (await Hxe(this), !!this.eventBuffer && e === this.getSessionId()))
    )
      try {
        this._updateInitialTimestampFromEventBuffer();
        const n = Date.now();
        if (
          n - this._context.initialTimestamp >
          this._options.maxReplayDuration + 3e4
        )
          throw new Error("Session is too long, not sending replay");
        const r = this._popEventContext(),
          a = this.session.segmentId++;
        this._maybeSaveSession();
        const s = await this.eventBuffer.finish();
        await yY({
          replayId: e,
          recordingData: s,
          segmentId: a,
          eventContext: r,
          session: this.session,
          options: this.getOptions(),
          timestamp: n,
        });
      } catch (n) {
        this._handleException(n), this.stop({ reason: "sendReplay" });
        const r = An();
        r && r.recordDroppedEvent("send_error", "replay");
      }
  }
  __init5() {
    this._flush = async ({ force: e = !1 } = {}) => {
      if (!this._isEnabled && !e) return;
      if (!this.checkAndHandleExpiredSession()) {
        os &&
          Be.error(
            "[Replay] Attempting to finish replay event after session expired."
          );
        return;
      }
      if (!this.session) return;
      const n = this.session.started,
        a = Date.now() - n;
      this._debouncedFlush.cancel();
      const s = a < this._options.minReplayDuration,
        i = a > this._options.maxReplayDuration + 5e3;
      if (s || i) {
        ya(
          `[Replay] Session duration (${Math.floor(a / 1e3)}s) is too ${
            s ? "short" : "long"
          }, not sending replay.`,
          this._options._experiments.traceInternals
        ),
          s && this._debouncedFlush();
        return;
      }
      const o = this.eventBuffer;
      if (
        (o &&
          this.session.segmentId === 0 &&
          !o.hasCheckout &&
          ya(
            "[Replay] Flushing initial segment without checkout.",
            this._options._experiments.traceInternals
          ),
        !this._flushLock)
      ) {
        (this._flushLock = this._runFlush()),
          await this._flushLock,
          (this._flushLock = void 0);
        return;
      }
      try {
        await this._flushLock;
      } catch (u) {
        os && Be.error(u);
      } finally {
        this._debouncedFlush();
      }
    };
  }
  _maybeSaveSession() {
    this.session && this._options.stickySession && e2(this.session);
  }
  __init6() {
    this._onMutationHandler = (e) => {
      const n = e.length,
        r = this._options.mutationLimit,
        a = this._options.mutationBreadcrumbLimit,
        s = r && n > r;
      if (n > a || s) {
        const i = ru({
          category: "replay.mutations",
          data: { count: n, limit: s },
        });
        this._createCustomBreadcrumb(i);
      }
      return s
        ? (this.stop({
            reason: "mutationLimit",
            forceFlush: this.recordingMode === "session",
          }),
          !1)
        : !0;
    };
  }
}
function ES(t, e, n, r) {
  const a = typeof r == "string" ? r.split(",") : [],
    s = [...t, ...a, ...e];
  return (
    typeof n < "u" &&
      (typeof n == "string" && s.push(`.${n}`),
      cp(() => {
        console.warn(
          "[Replay] You are using a deprecated configuration item for privacy. Read the documentation on how to use the new privacy configuration."
        );
      })),
    s.join(",")
  );
}
function Bxe({
  mask: t,
  unmask: e,
  block: n,
  unblock: r,
  ignore: a,
  blockClass: s,
  blockSelector: i,
  maskTextClass: o,
  maskTextSelector: u,
  ignoreClass: l,
}) {
  const c = ['base[href="/"]'],
    d = ES(t, [".sentry-mask", "[data-sentry-mask]"], o, u),
    p = ES(e, [".sentry-unmask", "[data-sentry-unmask]"]),
    m = {
      maskTextSelector: d,
      unmaskTextSelector: p,
      blockSelector: ES(
        n,
        [".sentry-block", "[data-sentry-block]", ...c],
        s,
        i
      ),
      unblockSelector: ES(r, [".sentry-unblock", "[data-sentry-unblock]"]),
      ignoreSelector: ES(
        a,
        [".sentry-ignore", "[data-sentry-ignore]", 'input[type="file"]'],
        l
      ),
    };
  return (
    s instanceof RegExp && (m.blockClass = s),
    o instanceof RegExp && (m.maskTextClass = o),
    m
  );
}
function Vxe({
  el: t,
  key: e,
  maskAttributes: n,
  maskAllText: r,
  privacyOptions: a,
  value: s,
}) {
  return !r || (a.unmaskTextSelector && t.matches(a.unmaskTextSelector))
    ? s
    : n.includes(e) ||
      (e === "value" &&
        t.tagName === "INPUT" &&
        ["submit", "button"].includes(t.getAttribute("type") || ""))
    ? s.replace(/[\S]/g, "*")
    : s;
}
const g8 =
    'img,image,svg,video,object,picture,embed,map,audio,link[rel="icon"],link[rel="apple-touch-icon"]',
  jxe = ["content-length", "content-type", "accept"];
let v8 = !1;
const zxe = (t) => new Gv(t);
class Gv {
  static __initStatic() {
    this.id = "Replay";
  }
  constructor({
    flushMinDelay: e = IRe,
    flushMaxDelay: n = CRe,
    minReplayDuration: r = kRe,
    maxReplayDuration: a = e8,
    stickySession: s = !0,
    useCompression: i = !0,
    workerUrl: o,
    _experiments: u = {},
    sessionSampleRate: l,
    errorSampleRate: c,
    maskAllText: d = !0,
    maskAllInputs: p = !0,
    blockAllMedia: m = !0,
    mutationBreadcrumbLimit: y = 750,
    mutationLimit: I = 1e4,
    slowClickTimeout: O = 7e3,
    slowClickIgnoreSelectors: g = [],
    networkDetailAllowUrls: C = [],
    networkDetailDenyUrls: H = [],
    networkCaptureBodies: B = !0,
    networkRequestHeaders: he = [],
    networkResponseHeaders: de = [],
    mask: U = [],
    maskAttributes: R = ["title", "placeholder"],
    unmask: ge = [],
    block: ve = [],
    unblock: we = [],
    ignore: Te = [],
    maskFn: Ce,
    beforeAddRecordingEvent: Ee,
    beforeErrorSampling: x,
    blockClass: F,
    blockSelector: Se,
    maskInputOptions: ye,
    maskTextClass: Ae,
    maskTextSelector: De,
    ignoreClass: lt,
  } = {}) {
    this.name = Gv.id;
    const nt = Bxe({
      mask: U,
      unmask: ge,
      block: ve,
      unblock: we,
      ignore: Te,
      blockClass: F,
      blockSelector: Se,
      maskTextClass: Ae,
      maskTextSelector: De,
      ignoreClass: lt,
    });
    if (
      ((this._recordingOptions = {
        maskAllInputs: p,
        maskAllText: d,
        maskInputOptions: { ...(ye || {}), password: !0 },
        maskTextFn: Ce,
        maskInputFn: Ce,
        maskAttributeFn: (L, M, me) =>
          Vxe({
            maskAttributes: R,
            maskAllText: d,
            privacyOptions: nt,
            key: L,
            value: M,
            el: me,
          }),
        ...nt,
        slimDOMOptions: "all",
        inlineStylesheet: !0,
        inlineImages: !1,
        collectFonts: !0,
        errorHandler: (L) => {
          try {
            L.__rrweb__ = !0;
          } catch {}
        },
      }),
      (this._initialOptions = {
        flushMinDelay: e,
        flushMaxDelay: n,
        minReplayDuration: Math.min(r, xRe),
        maxReplayDuration: Math.min(a, e8),
        stickySession: s,
        sessionSampleRate: l,
        errorSampleRate: c,
        useCompression: i,
        workerUrl: o,
        blockAllMedia: m,
        maskAllInputs: p,
        maskAllText: d,
        mutationBreadcrumbLimit: y,
        mutationLimit: I,
        slowClickTimeout: O,
        slowClickIgnoreSelectors: g,
        networkDetailAllowUrls: C,
        networkDetailDenyUrls: H,
        networkCaptureBodies: B,
        networkRequestHeaders: _8(he),
        networkResponseHeaders: _8(de),
        beforeAddRecordingEvent: Ee,
        beforeErrorSampling: x,
        _experiments: u,
      }),
      typeof l == "number" &&
        (console.warn(`[Replay] You are passing \`sessionSampleRate\` to the Replay integration.
This option is deprecated and will be removed soon.
Instead, configure \`replaysSessionSampleRate\` directly in the SDK init options, e.g.:
Sentry.init({ replaysSessionSampleRate: ${l} })`),
        (this._initialOptions.sessionSampleRate = l)),
      typeof c == "number" &&
        (console.warn(`[Replay] You are passing \`errorSampleRate\` to the Replay integration.
This option is deprecated and will be removed soon.
Instead, configure \`replaysOnErrorSampleRate\` directly in the SDK init options, e.g.:
Sentry.init({ replaysOnErrorSampleRate: ${c} })`),
        (this._initialOptions.errorSampleRate = c)),
      this._initialOptions.blockAllMedia &&
        (this._recordingOptions.blockSelector = this._recordingOptions
          .blockSelector
          ? `${this._recordingOptions.blockSelector},${g8}`
          : g8),
      this._isInitialized && SO())
    )
      throw new Error(
        "Multiple Sentry Session Replay instances are not supported"
      );
    this._isInitialized = !0;
  }
  get _isInitialized() {
    return v8;
  }
  set _isInitialized(e) {
    v8 = e;
  }
  setupOnce() {
    SO() && (this._setup(), setTimeout(() => this._initialize()));
  }
  start() {
    this._replay && this._replay.start();
  }
  startBuffering() {
    this._replay && this._replay.startBuffering();
  }
  stop() {
    return this._replay
      ? this._replay.stop({
          forceFlush: this._replay.recordingMode === "session",
        })
      : Promise.resolve();
  }
  flush(e) {
    return !this._replay || !this._replay.isEnabled()
      ? Promise.resolve()
      : this._replay.sendBufferedReplayOrFlush(e);
  }
  getReplayId() {
    if (!(!this._replay || !this._replay.isEnabled()))
      return this._replay.getSessionId();
  }
  _initialize() {
    this._replay &&
      (this._maybeLoadFromReplayCanvasIntegration(),
      this._replay.initializeSampling());
  }
  _setup() {
    const e = $xe(this._initialOptions);
    this._replay = new tc({
      options: e,
      recordingOptions: this._recordingOptions,
    });
  }
  _maybeLoadFromReplayCanvasIntegration() {
    try {
      const n = An().getIntegrationByName("ReplayCanvas");
      if (!n) return;
      this._replay._canvas = n.getOptions();
    } catch {}
  }
}
Gv.__initStatic();
function $xe(t) {
  const e = An(),
    n = e && e.getOptions(),
    r = { sessionSampleRate: 0, errorSampleRate: 0, ...gr(t) };
  return n
    ? (t.sessionSampleRate == null &&
        t.errorSampleRate == null &&
        n.replaysSessionSampleRate == null &&
        n.replaysOnErrorSampleRate == null &&
        cp(() => {
          console.warn(
            "Replay is disabled because neither `replaysSessionSampleRate` nor `replaysOnErrorSampleRate` are set."
          );
        }),
      typeof n.replaysSessionSampleRate == "number" &&
        (r.sessionSampleRate = n.replaysSessionSampleRate),
      typeof n.replaysOnErrorSampleRate == "number" &&
        (r.errorSampleRate = n.replaysOnErrorSampleRate),
      r)
    : (cp(() => {
        console.warn("SDK client is not available.");
      }),
      r);
}
function _8(t) {
  return [...jxe, ...t.map((e) => e.toLowerCase())];
}
var b8;
(function (t) {
  (t[(t.Document = 0)] = "Document"),
    (t[(t.DocumentType = 1)] = "DocumentType"),
    (t[(t.Element = 2)] = "Element"),
    (t[(t.Text = 3)] = "Text"),
    (t[(t.CDATA = 4)] = "CDATA"),
    (t[(t.Comment = 5)] = "Comment");
})(b8 || (b8 = {}));
function Wxe(t, e) {
  for (let n = t.classList.length; n--; ) {
    const r = t.classList[n];
    if (e.test(r)) return !0;
  }
  return !1;
}
function DO(t, e, n = 1 / 0, r = 0) {
  return !t || t.nodeType !== t.ELEMENT_NODE || r > n
    ? -1
    : e(t)
    ? r
    : DO(t.parentNode, e, n, r + 1);
}
function E8(t, e) {
  return (n) => {
    const r = n;
    if (r === null) return !1;
    try {
      if (t) {
        if (typeof t == "string") {
          if (r.matches(`.${t}`)) return !0;
        } else if (Wxe(r, t)) return !0;
      }
      return !!(e && r.matches(e));
    } catch {
      return !1;
    }
  };
}
const Sh = `Please stop import mirror directly. Instead of that,\r
now you can use replayer.getMirror() to access the mirror instance of a replayer,\r
or you can use record.mirror to access the mirror instance during recording.`;
let T8 = {
  map: {},
  getId() {
    return console.error(Sh), -1;
  },
  getNode() {
    return console.error(Sh), null;
  },
  removeNodeFromMap() {
    console.error(Sh);
  },
  has() {
    return console.error(Sh), !1;
  },
  reset() {
    console.error(Sh);
  },
};
typeof window < "u" &&
  window.Proxy &&
  window.Reflect &&
  (T8 = new Proxy(T8, {
    get(t, e, n) {
      return e === "map" && console.error(Sh), Reflect.get(t, e, n);
    },
  }));
function s2(t, e, n, r, a = window) {
  const s = a.Object.getOwnPropertyDescriptor(t, e);
  return (
    a.Object.defineProperty(
      t,
      e,
      r
        ? n
        : {
            set(i) {
              setTimeout(() => {
                n.set.call(this, i);
              }, 0),
                s && s.set && s.set.call(this, i);
            },
          }
    ),
    () => s2(t, e, s || {}, !0)
  );
}
function r2(t, e, n) {
  try {
    if (!(e in t)) return () => {};
    const r = t[e],
      a = n(r);
    return (
      typeof a == "function" &&
        ((a.prototype = a.prototype || {}),
        Object.defineProperties(a, {
          __rrweb_original__: { enumerable: !1, value: r },
        })),
      (t[e] = a),
      () => {
        t[e] = r;
      }
    );
  } catch {
    return () => {};
  }
}
/[1-9][0-9]{12}/.test(Date.now().toString());
function cP(t, e, n, r, a) {
  if (!t) return !1;
  const s = t.nodeType === t.ELEMENT_NODE ? t : t.parentElement;
  if (!s) return !1;
  const i = E8(e, n);
  if (!a) {
    const l = r && s.matches(r);
    return i(s) && !l;
  }
  const o = DO(s, i);
  let u = -1;
  return o < 0
    ? !1
    : (r && (u = DO(s, E8(null, r))), o > -1 && u < 0 ? !0 : o < u);
}
let rA;
function qxe() {
  if (rA) return rA;
  const t = window.document;
  let e = window.requestAnimationFrame;
  if (t && typeof t.createElement == "function")
    try {
      const n = t.createElement("iframe");
      (n.hidden = !0), t.head.appendChild(n);
      const r = n.contentWindow;
      r && r.requestAnimationFrame && (e = r.requestAnimationFrame),
        t.head.removeChild(n);
    } catch {}
  return (rA = e.bind(window));
}
function Pd(...t) {
  return qxe()(...t);
}
var Vf = ((t) => (
  (t[(t["2D"] = 0)] = "2D"),
  (t[(t.WebGL = 1)] = "WebGL"),
  (t[(t.WebGL2 = 2)] = "WebGL2"),
  t
))(Vf || {});
let tE;
function Yxe(t) {
  tE = t;
}
const w8 = (t) =>
  tE
    ? (...n) => {
        try {
          return t(...n);
        } catch (r) {
          if (tE && tE(r) === !0) return () => {};
          throw r;
        }
      }
    : t;
var Nh = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
  Xxe = typeof Uint8Array > "u" ? [] : new Uint8Array(256);
for (var nb = 0; nb < Nh.length; nb++) Xxe[Nh.charCodeAt(nb)] = nb;
var Qxe = function (t) {
  var e = new Uint8Array(t),
    n,
    r = e.length,
    a = "";
  for (n = 0; n < r; n += 3)
    (a += Nh[e[n] >> 2]),
      (a += Nh[((e[n] & 3) << 4) | (e[n + 1] >> 4)]),
      (a += Nh[((e[n + 1] & 15) << 2) | (e[n + 2] >> 6)]),
      (a += Nh[e[n + 2] & 63]);
  return (
    r % 3 === 2
      ? (a = a.substring(0, a.length - 1) + "=")
      : r % 3 === 1 && (a = a.substring(0, a.length - 2) + "=="),
    a
  );
};
const P8 = new Map();
function Jxe(t, e) {
  let n = P8.get(t);
  return (
    n || ((n = new Map()), P8.set(t, n)), n.has(e) || n.set(e, []), n.get(e)
  );
}
const vY = (t, e, n) => {
  if (!t || !(bY(t, e) || typeof t == "object")) return;
  const r = t.constructor.name,
    a = Jxe(n, r);
  let s = a.indexOf(t);
  return s === -1 && ((s = a.length), a.push(t)), s;
};
function nE(t, e, n) {
  if (t instanceof Array) return t.map((r) => nE(r, e, n));
  if (t === null) return t;
  if (
    t instanceof Float32Array ||
    t instanceof Float64Array ||
    t instanceof Int32Array ||
    t instanceof Uint32Array ||
    t instanceof Uint8Array ||
    t instanceof Uint16Array ||
    t instanceof Int16Array ||
    t instanceof Int8Array ||
    t instanceof Uint8ClampedArray
  )
    return { rr_type: t.constructor.name, args: [Object.values(t)] };
  if (t instanceof ArrayBuffer) {
    const r = t.constructor.name,
      a = Qxe(t);
    return { rr_type: r, base64: a };
  } else {
    if (t instanceof DataView)
      return {
        rr_type: t.constructor.name,
        args: [nE(t.buffer, e, n), t.byteOffset, t.byteLength],
      };
    if (t instanceof HTMLImageElement) {
      const r = t.constructor.name,
        { src: a } = t;
      return { rr_type: r, src: a };
    } else if (t instanceof HTMLCanvasElement) {
      const r = "HTMLImageElement",
        a = t.toDataURL();
      return { rr_type: r, src: a };
    } else {
      if (t instanceof ImageData)
        return {
          rr_type: t.constructor.name,
          args: [nE(t.data, e, n), t.width, t.height],
        };
      if (bY(t, e) || typeof t == "object") {
        const r = t.constructor.name,
          a = vY(t, e, n);
        return { rr_type: r, index: a };
      }
    }
  }
  return t;
}
const _Y = (t, e, n) => t.map((r) => nE(r, e, n)),
  bY = (t, e) =>
    !![
      "WebGLActiveInfo",
      "WebGLBuffer",
      "WebGLFramebuffer",
      "WebGLProgram",
      "WebGLRenderbuffer",
      "WebGLShader",
      "WebGLShaderPrecisionFormat",
      "WebGLTexture",
      "WebGLUniformLocation",
      "WebGLVertexArrayObject",
      "WebGLVertexArrayObjectOES",
    ]
      .filter((a) => typeof e[a] == "function")
      .find((a) => t instanceof e[a]);
function Zxe(t, e, n, r, a) {
  const s = [],
    i = Object.getOwnPropertyNames(e.CanvasRenderingContext2D.prototype);
  for (const o of i)
    try {
      if (typeof e.CanvasRenderingContext2D.prototype[o] != "function")
        continue;
      const u = r2(e.CanvasRenderingContext2D.prototype, o, function (l) {
        return function (...c) {
          return (
            cP(this.canvas, n, r, a, !0) ||
              setTimeout(() => {
                const d = _Y(c, e, this);
                t(this.canvas, { type: Vf["2D"], property: o, args: d });
              }, 0),
            l.apply(this, c)
          );
        };
      });
      s.push(u);
    } catch {
      const l = s2(e.CanvasRenderingContext2D.prototype, o, {
        set(c) {
          t(this.canvas, {
            type: Vf["2D"],
            property: o,
            args: [c],
            setter: !0,
          });
        },
      });
      s.push(l);
    }
  return () => {
    s.forEach((o) => o());
  };
}
function eLe(t) {
  return t === "experimental-webgl" ? "webgl" : t;
}
function I8(t, e, n, r, a) {
  const s = [];
  try {
    const i = r2(t.HTMLCanvasElement.prototype, "getContext", function (o) {
      return function (u, ...l) {
        if (!cP(this, e, n, r, !0)) {
          const c = eLe(u);
          if (
            ("__context" in this || (this.__context = c),
            a && ["webgl", "webgl2"].includes(c))
          )
            if (l[0] && typeof l[0] == "object") {
              const d = l[0];
              d.preserveDrawingBuffer || (d.preserveDrawingBuffer = !0);
            } else l.splice(0, 1, { preserveDrawingBuffer: !0 });
        }
        return o.apply(this, [u, ...l]);
      };
    });
    s.push(i);
  } catch {
    console.error("failed to patch HTMLCanvasElement.prototype.getContext");
  }
  return () => {
    s.forEach((i) => i());
  };
}
function C8(t, e, n, r, a, s, i, o) {
  const u = [],
    l = Object.getOwnPropertyNames(t);
  for (const c of l)
    if (
      ![
        "isContextLost",
        "canvas",
        "drawingBufferWidth",
        "drawingBufferHeight",
      ].includes(c)
    )
      try {
        if (typeof t[c] != "function") continue;
        const d = r2(t, c, function (p) {
          return function (...m) {
            const y = p.apply(this, m);
            if (
              (vY(y, o, this),
              "tagName" in this.canvas && !cP(this.canvas, r, a, s, !0))
            ) {
              const I = _Y(m, o, this),
                O = { type: e, property: c, args: I };
              n(this.canvas, O);
            }
            return y;
          };
        });
        u.push(d);
      } catch {
        const p = s2(t, c, {
          set(m) {
            n(this.canvas, { type: e, property: c, args: [m], setter: !0 });
          },
        });
        u.push(p);
      }
  return u;
}
function tLe(t, e, n, r, a, s) {
  const i = [];
  return (
    i.push(
      ...C8(e.WebGLRenderingContext.prototype, Vf.WebGL, t, n, r, a, s, e)
    ),
    typeof e.WebGL2RenderingContext < "u" &&
      i.push(
        ...C8(e.WebGL2RenderingContext.prototype, Vf.WebGL2, t, n, r, a, s, e)
      ),
    () => {
      i.forEach((o) => o());
    }
  );
}
var nLe =
  'for(var t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",e="undefined"==typeof Uint8Array?[]:new Uint8Array(256),n=0;n<64;n++)e[t.charCodeAt(n)]=n;var a=function(e){var n,a=new Uint8Array(e),s=a.length,r="";for(n=0;n<s;n+=3)r+=t[a[n]>>2],r+=t[(3&a[n])<<4|a[n+1]>>4],r+=t[(15&a[n+1])<<2|a[n+2]>>6],r+=t[63&a[n+2]];return s%3==2?r=r.substring(0,r.length-1)+"=":s%3==1&&(r=r.substring(0,r.length-2)+"=="),r};const s=new Map,r=new Map;const i=self;i.onmessage=async function(t){if(!("OffscreenCanvas"in globalThis))return i.postMessage({id:t.data.id});{const{id:e,bitmap:n,width:o,height:f,dataURLOptions:c}=t.data,g=async function(t,e,n){const s=t+"-"+e;if("OffscreenCanvas"in globalThis){if(r.has(s))return r.get(s);const i=new OffscreenCanvas(t,e);i.getContext("2d");const o=await i.convertToBlob(n),f=await o.arrayBuffer(),c=a(f);return r.set(s,c),c}return""}(o,f,c),d=new OffscreenCanvas(o,f);d.getContext("2d").drawImage(n,0,0),n.close();const u=await d.convertToBlob(c),h=u.type,w=await u.arrayBuffer(),l=a(w);if(!s.has(e)&&await g===l)return s.set(e,l),i.postMessage({id:e});if(s.get(e)===l)return i.postMessage({id:e});i.postMessage({id:e,type:h,base64:l,width:o,height:f}),s.set(e,l)}};';
function sLe() {
  const t = new Blob([nLe]);
  return URL.createObjectURL(t);
}
class rLe {
  reset() {
    this.pendingCanvasMutations.clear(),
      this.resetObservers && this.resetObservers();
  }
  freeze() {
    this.frozen = !0;
  }
  unfreeze() {
    this.frozen = !1;
  }
  lock() {
    this.locked = !0;
  }
  unlock() {
    this.locked = !1;
  }
  constructor(e) {
    (this.pendingCanvasMutations = new Map()),
      (this.rafStamps = { latestId: 0, invokeId: null }),
      (this.frozen = !1),
      (this.locked = !1),
      (this.processMutation = (c, d) => {
        ((this.rafStamps.invokeId &&
          this.rafStamps.latestId !== this.rafStamps.invokeId) ||
          !this.rafStamps.invokeId) &&
          (this.rafStamps.invokeId = this.rafStamps.latestId),
          this.pendingCanvasMutations.has(c) ||
            this.pendingCanvasMutations.set(c, []),
          this.pendingCanvasMutations.get(c).push(d);
      });
    const {
      sampling: n = "all",
      win: r,
      blockClass: a,
      blockSelector: s,
      unblockSelector: i,
      recordCanvas: o,
      dataURLOptions: u,
      errorHandler: l,
    } = e;
    (this.mutationCb = e.mutationCb),
      (this.mirror = e.mirror),
      (this.options = e),
      l && Yxe(l),
      !e.enableManualSnapshot &&
        w8(() => {
          o && n === "all" && this.initCanvasMutationObserver(r, a, s, i),
            o &&
              typeof n == "number" &&
              this.initCanvasFPSObserver(n, r, a, s, i, { dataURLOptions: u });
        })();
  }
  initCanvasFPSObserver(e, n, r, a, s, i) {
    const o = I8(n, r, a, s, !0),
      u = this.takeSnapshot(!1, e, n, r, a, s, i.dataURLOptions);
    this.resetObservers = () => {
      o(), cancelAnimationFrame(u);
    };
  }
  initCanvasMutationObserver(e, n, r, a) {
    this.startRAFTimestamping(), this.startPendingCanvasMutationFlusher();
    const s = I8(e, n, r, a, !1),
      i = Zxe(this.processMutation.bind(this), e, n, r, a),
      o = tLe(this.processMutation.bind(this), e, n, r, a, this.mirror);
    this.resetObservers = () => {
      s(), i(), o();
    };
  }
  snapshot(e) {
    const { options: n } = this,
      r = this.takeSnapshot(
        !0,
        n.sampling === "all" ? 2 : n.sampling || 2,
        n.win,
        n.blockClass,
        n.blockSelector,
        n.unblockSelector,
        n.dataURLOptions,
        e
      );
    this.resetObservers = () => {
      cancelAnimationFrame(r);
    };
  }
  takeSnapshot(e, n, r, a, s, i, o, u) {
    const l = new Map(),
      c = new Worker(sLe());
    c.onmessage = (O) => {
      const g = O.data,
        { id: C } = g;
      if ((l.set(C, !1), !("base64" in g))) return;
      const { base64: H, type: B, width: he, height: de } = g;
      this.mutationCb({
        id: C,
        type: Vf["2D"],
        commands: [
          { property: "clearRect", args: [0, 0, he, de] },
          {
            property: "drawImage",
            args: [
              {
                rr_type: "ImageBitmap",
                args: [
                  {
                    rr_type: "Blob",
                    data: [{ rr_type: "ArrayBuffer", base64: H }],
                    type: B,
                  },
                ],
              },
              0,
              0,
            ],
          },
        ],
      });
    };
    const d = 1e3 / n;
    let p = 0,
      m;
    const y = (O) => {
        if (O) return [O];
        const g = [];
        return (
          r.document.querySelectorAll("canvas").forEach((C) => {
            cP(C, a, s, i, !0) || g.push(C);
          }),
          g
        );
      },
      I = (O) => {
        if (p && O - p < d) {
          m = Pd(I);
          return;
        }
        (p = O),
          y(u).forEach((g) => {
            const C = this.mirror.getId(g);
            if (!l.get(C) && !(!g.width || !g.height)) {
              if (
                (l.set(C, !0), !e && ["webgl", "webgl2"].includes(g.__context))
              ) {
                const H = g.getContext(g.__context);
                Zb([
                  H,
                  "optionalAccess",
                  (B) => B.getContextAttributes,
                  "call",
                  (B) => B(),
                  "optionalAccess",
                  (B) => B.preserveDrawingBuffer,
                ]) === !1 && H.clear(H.COLOR_BUFFER_BIT);
              }
              createImageBitmap(g)
                .then((H) => {
                  c.postMessage(
                    {
                      id: C,
                      bitmap: H,
                      width: g.width,
                      height: g.height,
                      dataURLOptions: o,
                    },
                    [H]
                  );
                })
                .catch((H) => {
                  w8(() => {
                    throw H;
                  })();
                });
            }
          }),
          (m = Pd(I));
      };
    return (m = Pd(I)), m;
  }
  startPendingCanvasMutationFlusher() {
    Pd(() => this.flushPendingCanvasMutations());
  }
  startRAFTimestamping() {
    const e = (n) => {
      (this.rafStamps.latestId = n), Pd(e);
    };
    Pd(e);
  }
  flushPendingCanvasMutations() {
    this.pendingCanvasMutations.forEach((e, n) => {
      const r = this.mirror.getId(n);
      this.flushPendingCanvasMutationFor(n, r);
    }),
      Pd(() => this.flushPendingCanvasMutations());
  }
  flushPendingCanvasMutationFor(e, n) {
    if (this.frozen || this.locked) return;
    const r = this.pendingCanvasMutations.get(e);
    if (!r || n === -1) return;
    const a = r.map((i) => {
        const { type: o, ...u } = i;
        return u;
      }),
      { type: s } = r[0];
    this.mutationCb({ id: n, type: s, commands: a }),
      this.pendingCanvasMutations.delete(e);
  }
}
const A8 = {
    low: {
      sampling: { canvas: 1 },
      dataURLOptions: { type: "image/webp", quality: 0.25 },
    },
    medium: {
      sampling: { canvas: 2 },
      dataURLOptions: { type: "image/webp", quality: 0.4 },
    },
    high: {
      sampling: { canvas: 4 },
      dataURLOptions: { type: "image/webp", quality: 0.5 },
    },
  },
  EY = "ReplayCanvas",
  aLe = (t = {}) => {
    const e = {
      quality: t.quality || "medium",
      enableManualSnapshot: t.enableManualSnapshot,
    };
    let n;
    const r = new Promise((a) => (n = a));
    return {
      name: EY,
      setupOnce() {},
      getOptions() {
        const { quality: a, enableManualSnapshot: s } = e;
        return {
          enableManualSnapshot: s,
          recordCanvas: !0,
          getCanvasManager: (i) => {
            const o = new rLe({
              ...i,
              enableManualSnapshot: s,
              errorHandler: (u) => {
                try {
                  typeof u == "object" && (u.__rrweb__ = !0);
                } catch {}
              },
            });
            return n(o), o;
          },
          ...(A8[a || "medium"] || A8.medium),
        };
      },
      async snapshot(a) {
        (await r).snapshot(a);
      },
    };
  },
  TY = aLe;
Ca(EY, TY);
const xp = wn,
  aA = "#ffffff",
  O8 = "inherit",
  iA = "rgba(108, 95, 199, 1)",
  H8 = {
    fontFamily: "system-ui, 'Helvetica Neue', Arial, sans-serif",
    fontSize: "14px",
    background: aA,
    backgroundHover: "#f6f6f7",
    foreground: "#2b2233",
    border: "1.5px solid rgba(41, 35, 47, 0.13)",
    borderRadius: "12px",
    boxShadow: "0px 4px 24px 0px rgba(43, 34, 51, 0.12)",
    success: "#268d75",
    error: "#df3338",
    submitBackground: "rgba(88, 74, 192, 1)",
    submitBackgroundHover: iA,
    submitBorder: iA,
    submitOutlineFocus: "#29232f",
    submitForeground: aA,
    submitForegroundHover: aA,
    cancelBackground: "transparent",
    cancelBackgroundHover: "var(--background-hover)",
    cancelBorder: "var(--border)",
    cancelOutlineFocus: "var(--input-outline-focus)",
    cancelForeground: "var(--foreground)",
    cancelForegroundHover: "var(--foreground)",
    inputBackground: O8,
    inputForeground: O8,
    inputBorder: "var(--border)",
    inputOutlineFocus: iA,
    formBorderRadius: "20px",
    formContentBorderRadius: "6px",
  },
  N8 = {
    light: H8,
    dark: {
      ...H8,
      background: "#29232f",
      backgroundHover: "#352f3b",
      foreground: "#ebe6ef",
      border: "1.5px solid rgba(235, 230, 239, 0.15)",
      success: "#2da98c",
      error: "#f55459",
    },
  },
  iLe = "Report a Bug",
  oLe = "Cancel",
  uLe = "Send Bug Report",
  lLe = "Report a Bug",
  cLe = "your.email@example.org",
  dLe = "Email",
  pLe = "What's the bug? What did you expect?",
  hLe = "Description",
  fLe = "Your Name",
  mLe = "Name",
  SLe = "(required)",
  yLe = "Thank you for your report!",
  wY = "widget",
  PY = "api";
async function gLe({ client: t, scope: e, event: n }) {
  const r = {};
  t.emit && t.emit("preprocessEvent", n, r);
  const a = await Ek(t.getOptions(), n, r, e, t, Cu());
  return a === null
    ? (t.recordDroppedEvent("event_processor", "feedback", n), null)
    : ((a.platform = a.platform || "javascript"), a);
}
async function vLe(
  { feedback: { message: t, email: e, name: n, source: r, url: a } },
  { includeReplay: s = !0 } = {}
) {
  const i = An(),
    o = i && i.getTransport(),
    u = i && i.getDsn();
  if (!i || !o || !u) return;
  const l = {
    contexts: {
      feedback: { contact_email: e, name: n, message: t, url: a, source: r },
    },
    type: "feedback",
  };
  return Tm(async (c) => {
    c.clearBreadcrumbs(), [PY, wY].includes(String(r)) && c.setLevel("info");
    const d = await gLe({ scope: c, client: i, event: l });
    if (!d) return;
    i.emit && i.emit("beforeSendFeedback", d, { includeReplay: !!s });
    const p = MW(d, u, i.getOptions()._metadata, i.getOptions().tunnel);
    let m;
    try {
      m = await o.send(p);
    } catch (y) {
      const I = new Error("Unable to send Feedback");
      try {
        I.cause = y;
      } catch {}
      throw I;
    }
    if (m) {
      if (
        typeof m.statusCode == "number" &&
        (m.statusCode < 200 || m.statusCode >= 300)
      )
        throw new Error("Unable to send Feedback");
      return m;
    }
  });
}
function IY(
  { name: t, email: e, message: n, source: r = PY, url: a = B$() },
  s = {}
) {
  if (!n) throw new Error("Unable to submit feedback with empty message");
  return vLe(
    { feedback: { name: t, email: e, message: n, url: a, source: r } },
    s
  );
}
const kd = typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__;
function R8(t, e) {
  return {
    ...t,
    ...e,
    themeDark: { ...t.themeDark, ...e.themeDark },
    themeLight: { ...t.themeLight, ...e.themeLight },
  };
}
function _Le(t) {
  const e = t.createElement("style");
  return (
    (e.textContent = `
.widget__actor {
  line-height: 25px;

  display: flex;
  align-items: center;
  gap: 8px;

  border-radius: var(--border-radius);
  cursor: pointer;
  font-family: inherit;
  font-size: var(--font-size);
  font-weight: 600;
  padding: 12px 16px;
  text-decoration: none;
  z-index: 9000;

  color: var(--foreground);
  background-color: var(--background);
  border: var(--border);
  box-shadow: var(--box-shadow);
  opacity: 1;
  transition: opacity 0.1s ease-in-out;
}

.widget__actor:hover {
  background-color: var(--background-hover);
}

.widget__actor svg {
  width: 16px;
  height: 16px;
}

.widget__actor--hidden {
  opacity: 0;
  pointer-events: none;
  visibility: hidden;
}

.widget__actor__text {
}

.feedback-icon path {
  fill: var(--foreground);
}
`),
    e
  );
}
function bLe(t) {
  const e = t.createElement("style");
  return (
    (e.textContent = `
.dialog {
  line-height: 25px;
  background-color: rgba(0, 0, 0, 0.05);
  border: none;
  position: fixed;
  inset: 0;
  z-index: 10000;
  width: 100vw;
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 1;
  transition: opacity 0.2s ease-in-out;
}

.dialog:not([open]) {
  opacity: 0;
  pointer-events: none;
  visibility: hidden;
}
.dialog:not([open]) .dialog__content {
  transform: translate(0, -16px) scale(0.98);
}

.dialog__content {
  position: fixed;
  left: var(--left);
  right: var(--right);
  bottom: var(--bottom);
  top: var(--top);

  border: var(--border);
  border-radius: var(--form-border-radius);
  background-color: var(--background);
  color: var(--foreground);

  width: 320px;
  max-width: 100%;
  max-height: calc(100% - 2rem);
  display: flex;
  flex-direction: column;
  box-shadow: var(--box-shadow);
  transition: transform 0.2s ease-in-out;
  transform: translate(0, 0) scale(1);
}

.dialog__header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  font-size: 20px;
  font-weight: 600;
  padding: 24px 24px 0 24px;
  margin: 0;
  margin-bottom: 16px;
}

.brand-link {
  display: inline-flex;
}

.error {
  color: var(--error);
  margin-bottom: 16px;
}

.form {
  display: grid;
  overflow: auto;
  flex-direction: column;
  gap: 16px;
  padding: 0 24px 24px;
}

.form__error-container {
  color: var(--error);
}

.form__error-container--hidden {
  display: none;
}

.form__label {
  display: flex;
  flex-direction: column;
  gap: 4px;
  margin: 0px;
}

.form__label__text {
  display: grid;
  gap: 4px;
  align-items: center;
  grid-auto-flow: column;
  grid-auto-columns: max-content;
}

.form__label__text--required {
  font-size: 0.85em;
}

.form__input {
  line-height: inherit;
  background-color: var(--input-background);
  box-sizing: border-box;
  border: var(--input-border);
  border-radius: var(--form-content-border-radius);
  color: var(--input-foreground);
  font-family: inherit;
  font-size: var(--font-size);
  font-weight: 500;
  padding: 6px 12px;
}

.form__input::placeholder {
  color: var(--input-foreground);
  opacity: 0.65;
}

.form__input:focus-visible {
  outline: 1px auto var(--input-outline-focus);
}

.form__input--textarea {
  font-family: inherit;
  resize: vertical;
}

.btn-group {
  display: grid;
  gap: 8px;
  margin-top: 8px;
}

.btn {
  line-height: inherit;
  border: var(--cancel-border);
  border-radius: var(--form-content-border-radius);
  cursor: pointer;
  font-family: inherit;
  font-size: var(--font-size);
  font-weight: 600;
  padding: 6px 16px;
}
.btn[disabled] {
  opacity: 0.6;
  pointer-events: none;
}

.btn--primary {
  background-color: var(--submit-background);
  border-color: var(--submit-border);
  color: var(--submit-foreground);
}
.btn--primary:hover {
  background-color: var(--submit-background-hover);
  color: var(--submit-foreground-hover);
}
.btn--primary:focus-visible {
  outline: 1px auto var(--submit-outline-focus);
}

.btn--default {
  background-color: var(--cancel-background);
  color: var(--cancel-foreground);
  font-weight: 500;
}
.btn--default:hover {
  background-color: var(--cancel-background-hover);
  color: var(--cancel-foreground-hover);
}
.btn--default:focus-visible {
  outline: 1px auto var(--cancel-outline-focus);
}

.success-message {
  background-color: var(--background);
  border: var(--border);
  border-radius: var(--border-radius);
  box-shadow: var(--box-shadow);
  font-weight: 600;
  color: var(--success);
  padding: 12px 24px;
  line-height: 25px;
  display: grid;
  align-items: center;
  grid-auto-flow: column;
  gap: 6px;
  cursor: default;
}

.success-icon path {
  fill: var(--success);
}
`),
    e
  );
}
function k8(t) {
  return `
  --background: ${t.background};
  --background-hover: ${t.backgroundHover};
  --foreground: ${t.foreground};
  --error: ${t.error};
  --success: ${t.success};
  --border: ${t.border};
  --border-radius: ${t.borderRadius};
  --box-shadow: ${t.boxShadow};

  --submit-background: ${t.submitBackground};
  --submit-background-hover: ${t.submitBackgroundHover};
  --submit-border: ${t.submitBorder};
  --submit-outline-focus: ${t.submitOutlineFocus};
  --submit-foreground: ${t.submitForeground};
  --submit-foreground-hover: ${t.submitForegroundHover};

  --cancel-background: ${t.cancelBackground};
  --cancel-background-hover: ${t.cancelBackgroundHover};
  --cancel-border: ${t.cancelBorder};
  --cancel-outline-focus: ${t.cancelOutlineFocus};
  --cancel-foreground: ${t.cancelForeground};
  --cancel-foreground-hover: ${t.cancelForegroundHover};

  --input-background: ${t.inputBackground};
  --input-foreground: ${t.inputForeground};
  --input-border: ${t.inputBorder};
  --input-outline-focus: ${t.inputOutlineFocus};

  --form-border-radius: ${t.formBorderRadius};
  --form-content-border-radius: ${t.formContentBorderRadius};
  `;
}
function ELe(t, e, n) {
  const r = t.createElement("style");
  return (
    (r.textContent = `
:host {
  --bottom: 1rem;
  --right: 1rem;
  --top: auto;
  --left: auto;
  --z-index: 100000;
  --font-family: ${n.light.fontFamily};
  --font-size: ${n.light.fontSize};

  position: fixed;
  left: var(--left);
  right: var(--right);
  bottom: var(--bottom);
  top: var(--top);
  z-index: var(--z-index);

  font-family: var(--font-family);
  font-size: var(--font-size);

  ${k8(e === "dark" ? n.dark : n.light)}
}

${
  e === "system"
    ? `
@media (prefers-color-scheme: dark) {
  :host {
    ${k8(n.dark)}
  }
}`
    : ""
}
}`),
    r
  );
}
function TLe({ id: t, colorScheme: e, themeDark: n, themeLight: r }) {
  try {
    const a = xp.document,
      s = a.createElement("div");
    s.id = t;
    const i = s.attachShadow({ mode: "open" });
    return (
      i.appendChild(ELe(a, e, { dark: n, light: r })),
      i.appendChild(bLe(a)),
      { shadow: i, host: s }
    );
  } catch {
    throw (
      (Be.warn("[Feedback] Browser does not support shadow DOM API"),
      new Error("Browser does not support shadow DOM API."))
    );
  }
}
async function wLe(t, e, n) {
  if (!t) return;
  const r = () => {
    t &&
      t.showError(
        "There was a problem submitting feedback, please wait and try again."
      );
  };
  t.hideError();
  try {
    return await IY({ ...e, source: wY }, n);
  } catch (a) {
    kd && Be.error(a), r();
  }
}
function ai(t, e) {
  return (
    Object.entries(e).forEach(([n, r]) => {
      t.setAttributeNS(null, n, r);
    }),
    t
  );
}
const rh = 20,
  PLe = "http://www.w3.org/2000/svg";
function ILe() {
  const t = (o) => xp.document.createElementNS(PLe, o),
    e = ai(t("svg"), {
      class: "feedback-icon",
      width: `${rh}`,
      height: `${rh}`,
      viewBox: `0 0 ${rh} ${rh}`,
      fill: "none",
    }),
    n = ai(t("g"), { clipPath: "url(#clip0_57_80)" }),
    r = ai(t("path"), {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      d: "M15.6622 15H12.3997C12.2129 14.9959 12.031 14.9396 11.8747 14.8375L8.04965 12.2H7.49956V19.1C7.4875 19.3348 7.3888 19.5568 7.22256 19.723C7.05632 19.8892 6.83435 19.9879 6.59956 20H2.04956C1.80193 19.9968 1.56535 19.8969 1.39023 19.7218C1.21511 19.5467 1.1153 19.3101 1.11206 19.0625V12.2H0.949652C0.824431 12.2017 0.700142 12.1783 0.584123 12.1311C0.468104 12.084 0.362708 12.014 0.274155 11.9255C0.185602 11.8369 0.115689 11.7315 0.0685419 11.6155C0.0213952 11.4995 -0.00202913 11.3752 -0.00034808 11.25V3.75C-0.00900498 3.62067 0.0092504 3.49095 0.0532651 3.36904C0.0972798 3.24712 0.166097 3.13566 0.255372 3.04168C0.344646 2.94771 0.452437 2.87327 0.571937 2.82307C0.691437 2.77286 0.82005 2.74798 0.949652 2.75H8.04965L11.8747 0.1625C12.031 0.0603649 12.2129 0.00407221 12.3997 0H15.6622C15.9098 0.00323746 16.1464 0.103049 16.3215 0.278167C16.4966 0.453286 16.5964 0.689866 16.5997 0.9375V3.25269C17.3969 3.42959 18.1345 3.83026 18.7211 4.41679C19.5322 5.22788 19.9878 6.32796 19.9878 7.47502C19.9878 8.62209 19.5322 9.72217 18.7211 10.5333C18.1345 11.1198 17.3969 11.5205 16.5997 11.6974V14.0125C16.6047 14.1393 16.5842 14.2659 16.5395 14.3847C16.4948 14.5035 16.4268 14.6121 16.3394 14.7042C16.252 14.7962 16.147 14.8698 16.0307 14.9206C15.9144 14.9714 15.7891 14.9984 15.6622 15ZM1.89695 10.325H1.88715V4.625H8.33715C8.52423 4.62301 8.70666 4.56654 8.86215 4.4625L12.6872 1.875H14.7247V13.125H12.6872L8.86215 10.4875C8.70666 10.3835 8.52423 10.327 8.33715 10.325H2.20217C2.15205 10.3167 2.10102 10.3125 2.04956 10.3125C1.9981 10.3125 1.94708 10.3167 1.89695 10.325ZM2.98706 12.2V18.1625H5.66206V12.2H2.98706ZM16.5997 9.93612V5.01393C16.6536 5.02355 16.7072 5.03495 16.7605 5.04814C17.1202 5.13709 17.4556 5.30487 17.7425 5.53934C18.0293 5.77381 18.2605 6.06912 18.4192 6.40389C18.578 6.73866 18.6603 7.10452 18.6603 7.47502C18.6603 7.84552 18.578 8.21139 18.4192 8.54616C18.2605 8.88093 18.0293 9.17624 17.7425 9.41071C17.4556 9.64518 17.1202 9.81296 16.7605 9.90191C16.7072 9.91509 16.6536 9.9265 16.5997 9.93612Z",
    });
  e.appendChild(n).appendChild(r);
  const a = t("defs"),
    s = ai(t("clipPath"), { id: "clip0_57_80" }),
    i = ai(t("rect"), { width: `${rh}`, height: `${rh}`, fill: "white" });
  return (
    s.appendChild(i),
    a.appendChild(s),
    e.appendChild(a).appendChild(s).appendChild(i),
    {
      get el() {
        return e;
      },
    }
  );
}
function Hs(t, e, ...n) {
  const a = xp.document.createElement(t);
  e &&
    Object.entries(e).forEach(([s, i]) => {
      s === "className" && typeof i == "string"
        ? a.setAttribute("class", i)
        : typeof i == "boolean" && i
        ? a.setAttribute(s, "")
        : typeof i == "string"
        ? a.setAttribute(s, i)
        : s.startsWith("on") &&
          typeof i == "function" &&
          a.addEventListener(s.substring(2).toLowerCase(), i);
    });
  for (const s of n) CY(a, s);
  return a;
}
function CY(t, e) {
  const n = xp.document;
  if (!(typeof e > "u" || e === null))
    if (Array.isArray(e)) for (const r of e) CY(t, r);
    else
      e === !1 ||
        (typeof e == "string"
          ? t.appendChild(n.createTextNode(e))
          : e instanceof Node
          ? t.appendChild(e)
          : t.appendChild(n.createTextNode(String(e))));
}
function CLe({ buttonLabel: t, onClick: e }) {
  function n(a) {
    e && e(a);
  }
  const r = Hs(
    "button",
    {
      type: "button",
      className: "widget__actor",
      "aria-label": t,
      "aria-hidden": "false",
    },
    ILe().el,
    t ? Hs("span", { className: "widget__actor__text" }, t) : null
  );
  return (
    r.addEventListener("click", n),
    {
      get el() {
        return r;
      },
      show: () => {
        r.classList.remove("widget__actor--hidden"),
          r.setAttribute("aria-hidden", "false");
      },
      hide: () => {
        r.classList.add("widget__actor--hidden"),
          r.setAttribute("aria-hidden", "true");
      },
    }
  );
}
function ALe({ label: t }) {
  return {
    el: Hs(
      "button",
      { type: "submit", className: "btn btn--primary", "aria-label": t },
      t
    ),
  };
}
function oA(t, e) {
  const n = t.get(e);
  return typeof n == "string" ? n.trim() : "";
}
function OLe({
  nameLabel: t,
  namePlaceholder: e,
  emailLabel: n,
  emailPlaceholder: r,
  messageLabel: a,
  messagePlaceholder: s,
  isRequiredLabel: i,
  cancelButtonLabel: o,
  submitButtonLabel: u,
  showName: l,
  showEmail: c,
  isNameRequired: d,
  isEmailRequired: p,
  defaultName: m,
  defaultEmail: y,
  onCancel: I,
  onSubmit: O,
}) {
  const { el: g } = ALe({ label: u });
  function C(we) {
    if ((we.preventDefault(), we.target instanceof HTMLFormElement))
      try {
        if (O) {
          const Te = new FormData(we.target),
            Ce = {
              name: oA(Te, "name"),
              email: oA(Te, "email"),
              message: oA(Te, "message"),
            };
          O(Ce);
        }
      } catch {}
  }
  const H = Hs("div", {
    className: "form__error-container form__error-container--hidden",
    "aria-hidden": "true",
  });
  function B(we) {
    (H.textContent = we),
      H.classList.remove("form__error-container--hidden"),
      H.setAttribute("aria-hidden", "false");
  }
  function he() {
    (H.textContent = ""),
      H.classList.add("form__error-container--hidden"),
      H.setAttribute("aria-hidden", "true");
  }
  const de = Hs("input", {
      id: "name",
      type: l ? "text" : "hidden",
      "aria-hidden": l ? "false" : "true",
      name: "name",
      required: d,
      className: "form__input",
      placeholder: e,
      value: m,
    }),
    U = Hs("input", {
      id: "email",
      type: c ? "text" : "hidden",
      "aria-hidden": c ? "false" : "true",
      name: "email",
      required: p,
      className: "form__input",
      placeholder: r,
      value: y,
    }),
    R = Hs("textarea", {
      id: "message",
      autoFocus: "true",
      rows: "5",
      name: "message",
      required: !0,
      className: "form__input form__input--textarea",
      placeholder: s,
    }),
    ge = Hs(
      "button",
      {
        type: "button",
        className: "btn btn--default",
        "aria-label": o,
        onClick: (we) => {
          I && I(we);
        },
      },
      o
    ),
    ve = Hs("form", { className: "form", onSubmit: C }, [
      H,
      l &&
        Hs("label", { htmlFor: "name", className: "form__label" }, [
          Hs(
            "span",
            { className: "form__label__text" },
            t,
            d &&
              Hs("span", { className: "form__label__text--required" }, ` ${i}`)
          ),
          de,
        ]),
      !l && de,
      c &&
        Hs("label", { htmlFor: "email", className: "form__label" }, [
          Hs(
            "span",
            { className: "form__label__text" },
            n,
            p &&
              Hs("span", { className: "form__label__text--required" }, ` ${i}`)
          ),
          U,
        ]),
      !c && U,
      Hs("label", { htmlFor: "message", className: "form__label" }, [
        Hs(
          "span",
          { className: "form__label__text" },
          a,
          Hs("span", { className: "form__label__text--required" }, ` ${i}`)
        ),
        R,
      ]),
      Hs("div", { className: "btn-group" }, [g, ge]),
    ]);
  return {
    get el() {
      return ve;
    },
    showError: B,
    hideError: he,
  };
}
const HLe = "http://www.w3.org/2000/svg";
function NLe({ colorScheme: t }) {
  const e = (i) => xp.document.createElementNS(HLe, i),
    n = ai(e("svg"), {
      class: "sentry-logo",
      width: "32",
      height: "30",
      viewBox: "0 0 72 66",
      fill: "none",
    }),
    r = ai(e("path"), {
      transform: "translate(11, 11)",
      d: "M29,2.26a4.67,4.67,0,0,0-8,0L14.42,13.53A32.21,32.21,0,0,1,32.17,40.19H27.55A27.68,27.68,0,0,0,12.09,17.47L6,28a15.92,15.92,0,0,1,9.23,12.17H4.62A.76.76,0,0,1,4,39.06l2.94-5a10.74,10.74,0,0,0-3.36-1.9l-2.91,5a4.54,4.54,0,0,0,1.69,6.24A4.66,4.66,0,0,0,4.62,44H19.15a19.4,19.4,0,0,0-8-17.31l2.31-4A23.87,23.87,0,0,1,23.76,44H36.07a35.88,35.88,0,0,0-16.41-31.8l4.67-8a.77.77,0,0,1,1.05-.27c.53.29,20.29,34.77,20.66,35.17a.76.76,0,0,1-.68,1.13H40.6q.09,1.91,0,3.81h4.78A4.59,4.59,0,0,0,50,39.43a4.49,4.49,0,0,0-.62-2.28Z",
    });
  n.append(r);
  const a = e("defs"),
    s = e("style");
  return (
    (s.textContent = `
    path {
      fill: ${t === "dark" ? "#fff" : "#362d59"};
    }`),
    t === "system" &&
      (s.textContent += `
    @media (prefers-color-scheme: dark) {
      path: {
        fill: '#fff';
      }
    }
    `),
    a.append(s),
    n.append(a),
    {
      get el() {
        return n;
      },
    }
  );
}
function RLe({
  formTitle: t,
  showBranding: e,
  showName: n,
  showEmail: r,
  isNameRequired: a,
  isEmailRequired: s,
  colorScheme: i,
  defaultName: o,
  defaultEmail: u,
  onClosed: l,
  onCancel: c,
  onSubmit: d,
  ...p
}) {
  let m = null;
  function y() {
    I(), l && l();
  }
  function I() {
    m && (m.open = !1);
  }
  function O() {
    m && (m.open = !0);
  }
  function g() {
    return (m && m.open === !0) || !1;
  }
  const {
    el: C,
    showError: H,
    hideError: B,
  } = OLe({
    showEmail: r,
    showName: n,
    isEmailRequired: s,
    isNameRequired: a,
    defaultName: o,
    defaultEmail: u,
    onSubmit: d,
    onCancel: c,
    ...p,
  });
  return (
    (m = Hs(
      "dialog",
      { className: "dialog", open: !0, onClick: y },
      Hs(
        "div",
        {
          className: "dialog__content",
          onClick: (he) => {
            he.stopPropagation();
          },
        },
        Hs(
          "h2",
          { className: "dialog__header" },
          t,
          e &&
            Hs(
              "a",
              {
                className: "brand-link",
                target: "_blank",
                href: "https://sentry.io/welcome/",
                title: "Powered by Sentry",
                rel: "noopener noreferrer",
              },
              NLe({ colorScheme: i }).el
            )
        ),
        C
      )
    )),
    {
      get el() {
        return m;
      },
      showError: H,
      hideError: B,
      open: O,
      close: I,
      checkIsOpen: g,
    }
  );
}
const sb = 16,
  x8 = 17,
  kLe = "http://www.w3.org/2000/svg";
function xLe() {
  const t = (u) => xp.document.createElementNS(kLe, u),
    e = ai(t("svg"), {
      class: "success-icon",
      width: `${sb}`,
      height: `${x8}`,
      viewBox: `0 0 ${sb} ${x8}`,
      fill: "none",
    }),
    n = ai(t("g"), { clipPath: "url(#clip0_57_156)" }),
    r = ai(t("path"), {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      d: "M3.55544 15.1518C4.87103 16.0308 6.41775 16.5 8 16.5C10.1217 16.5 12.1566 15.6571 13.6569 14.1569C15.1571 12.6566 16 10.6217 16 8.5C16 6.91775 15.5308 5.37103 14.6518 4.05544C13.7727 2.73985 12.5233 1.71447 11.0615 1.10897C9.59966 0.503466 7.99113 0.34504 6.43928 0.653721C4.88743 0.962403 3.46197 1.72433 2.34315 2.84315C1.22433 3.96197 0.462403 5.38743 0.153721 6.93928C-0.15496 8.49113 0.00346625 10.0997 0.608967 11.5615C1.21447 13.0233 2.23985 14.2727 3.55544 15.1518ZM4.40546 3.1204C5.46945 2.40946 6.72036 2.03 8 2.03C9.71595 2.03 11.3616 2.71166 12.575 3.92502C13.7883 5.13838 14.47 6.78405 14.47 8.5C14.47 9.77965 14.0905 11.0306 13.3796 12.0945C12.6687 13.1585 11.6582 13.9878 10.476 14.4775C9.29373 14.9672 7.99283 15.0953 6.73777 14.8457C5.48271 14.596 4.32987 13.9798 3.42502 13.075C2.52018 12.1701 1.90397 11.0173 1.65432 9.76224C1.40468 8.50718 1.5328 7.20628 2.0225 6.02404C2.5122 4.8418 3.34148 3.83133 4.40546 3.1204Z",
    }),
    a = ai(t("path"), {
      d: "M6.68775 12.4297C6.78586 12.4745 6.89218 12.4984 7 12.5C7.11275 12.4955 7.22315 12.4664 7.32337 12.4145C7.4236 12.3627 7.51121 12.2894 7.58 12.2L12 5.63999C12.0848 5.47724 12.1071 5.28902 12.0625 5.11098C12.0178 4.93294 11.9095 4.77744 11.7579 4.67392C11.6064 4.57041 11.4221 4.52608 11.24 4.54931C11.0579 4.57254 10.8907 4.66173 10.77 4.79999L6.88 10.57L5.13 8.56999C5.06508 8.49566 4.98613 8.43488 4.89768 8.39111C4.80922 8.34735 4.713 8.32148 4.61453 8.31498C4.51605 8.30847 4.41727 8.32147 4.32382 8.35322C4.23038 8.38497 4.14413 8.43484 4.07 8.49999C3.92511 8.63217 3.83692 8.81523 3.82387 9.01092C3.81083 9.2066 3.87393 9.39976 4 9.54999L6.43 12.24C6.50187 12.3204 6.58964 12.385 6.68775 12.4297Z",
    });
  e.appendChild(n).append(a, r);
  const s = t("defs"),
    i = ai(t("clipPath"), { id: "clip0_57_156" }),
    o = ai(t("rect"), {
      width: `${sb}`,
      height: `${sb}`,
      fill: "white",
      transform: "translate(0 0.5)",
    });
  return (
    i.appendChild(o),
    s.appendChild(i),
    e.appendChild(s).appendChild(i).appendChild(o),
    {
      get el() {
        return e;
      },
    }
  );
}
function LLe({ message: t, onRemove: e }) {
  function n() {
    r && (r.remove(), e && e());
  }
  const r = Hs(
    "div",
    { className: "success-message", onClick: n },
    xLe().el,
    t
  );
  return { el: r, remove: n };
}
function L8({
  shadow: t,
  options: { shouldCreateActor: e = !0, ...n },
  attachTo: r,
}) {
  let a,
    s,
    i = !1;
  function o() {
    if (t)
      try {
        const g = LLe({
          message: n.successMessageText,
          onRemove: () => {
            C && clearTimeout(C), c();
          },
        });
        if (!g.el) throw new Error("Unable to show success message");
        t.appendChild(g.el);
        const C = setTimeout(() => {
          g && g.remove();
        }, 5e3);
      } catch (g) {
        Be.error(g);
      }
  }
  async function u(g) {
    if (!s) return;
    const C = [];
    if (
      (n.isNameRequired && !g.name && C.push(n.nameLabel),
      n.isEmailRequired && !g.email && C.push(n.emailLabel),
      g.message || C.push(n.messageLabel),
      C.length > 0)
    ) {
      s.showError(
        `Please enter in the following required fields: ${C.join(", ")}`
      );
      return;
    }
    if (!(await wLe(s, g))) {
      n.onSubmitError && n.onSubmitError();
      return;
    }
    I(), o(), n.onSubmitSuccess && n.onSubmitSuccess();
  }
  function l() {
    const g = An(),
      C = g && g.getIntegrationByName && g.getIntegrationByName("Replay");
    C &&
      C.flush().catch((H) => {
        kd && Be.error(H);
      });
  }
  function c() {
    a && a.show();
  }
  function d() {
    a && a.hide();
  }
  function p() {
    a && a.el && a.el.remove();
  }
  function m() {
    try {
      if (s) {
        s.open(), (i = !0), n.onFormOpen && n.onFormOpen(), l();
        return;
      }
      const g = n.useSentryUser,
        C = er(),
        H = C && C.getUser();
      if (
        ((s = RLe({
          colorScheme: n.colorScheme,
          showBranding: n.showBranding,
          showName: n.showName || n.isNameRequired,
          showEmail: n.showEmail || n.isEmailRequired,
          isNameRequired: n.isNameRequired,
          isEmailRequired: n.isEmailRequired,
          formTitle: n.formTitle,
          cancelButtonLabel: n.cancelButtonLabel,
          submitButtonLabel: n.submitButtonLabel,
          emailLabel: n.emailLabel,
          emailPlaceholder: n.emailPlaceholder,
          messageLabel: n.messageLabel,
          messagePlaceholder: n.messagePlaceholder,
          nameLabel: n.nameLabel,
          namePlaceholder: n.namePlaceholder,
          isRequiredLabel: n.isRequiredLabel,
          defaultName: (g && H && H[g.name]) || "",
          defaultEmail: (g && H && H[g.email]) || "",
          onClosed: () => {
            c(), (i = !1), n.onFormClose && n.onFormClose();
          },
          onCancel: () => {
            y(), c();
          },
          onSubmit: u,
        })),
        !s.el)
      )
        throw new Error("Unable to open Feedback dialog");
      t.appendChild(s.el), d(), n.onFormOpen && n.onFormOpen(), l();
    } catch (g) {
      Be.error(g);
    }
  }
  function y() {
    s && (s.close(), (i = !1), n.onFormClose && n.onFormClose());
  }
  function I() {
    if (s) {
      y();
      const g = s.el;
      g && g.remove(), (s = void 0);
    }
  }
  function O() {
    i || m(), d();
  }
  return (
    r
      ? r.addEventListener("click", O)
      : e &&
        ((a = CLe({ buttonLabel: n.buttonLabel, onClick: O })),
        a.el && t.appendChild(a.el)),
    {
      get actor() {
        return a;
      },
      get dialog() {
        return s;
      },
      showActor: c,
      hideActor: d,
      removeActor: p,
      openDialog: m,
      closeDialog: y,
      removeDialog: I,
    }
  );
}
const rb = xp.document,
  MLe = (t) => new dP(t);
class dP {
  static __initStatic() {
    this.id = "Feedback";
  }
  constructor({
    autoInject: e = !0,
    id: n = "sentry-feedback",
    isEmailRequired: r = !1,
    isNameRequired: a = !1,
    showBranding: s = !0,
    showEmail: i = !0,
    showName: o = !0,
    useSentryUser: u = { email: "email", name: "username" },
    themeDark: l,
    themeLight: c,
    colorScheme: d = "system",
    buttonLabel: p = iLe,
    cancelButtonLabel: m = oLe,
    submitButtonLabel: y = uLe,
    formTitle: I = lLe,
    emailPlaceholder: O = cLe,
    emailLabel: g = dLe,
    messagePlaceholder: C = pLe,
    messageLabel: H = hLe,
    namePlaceholder: B = fLe,
    nameLabel: he = mLe,
    isRequiredLabel: de = SLe,
    successMessageText: U = yLe,
    onFormClose: R,
    onFormOpen: ge,
    onSubmitError: ve,
    onSubmitSuccess: we,
  } = {}) {
    (this.name = dP.id),
      (this._host = null),
      (this._shadow = null),
      (this._widget = null),
      (this._widgets = new Set()),
      (this._hasInsertedActorStyles = !1),
      (this.options = {
        autoInject: e,
        showBranding: s,
        id: n,
        isEmailRequired: r,
        isNameRequired: a,
        showEmail: i,
        showName: o,
        useSentryUser: u,
        colorScheme: d,
        themeDark: { ...N8.dark, ...l },
        themeLight: { ...N8.light, ...c },
        buttonLabel: p,
        cancelButtonLabel: m,
        submitButtonLabel: y,
        formTitle: I,
        emailLabel: g,
        emailPlaceholder: O,
        messageLabel: H,
        messagePlaceholder: C,
        nameLabel: he,
        namePlaceholder: B,
        isRequiredLabel: de,
        successMessageText: U,
        onFormClose: R,
        onFormOpen: ge,
        onSubmitError: ve,
        onSubmitSuccess: we,
      });
  }
  setupOnce() {
    if (SO())
      try {
        this._cleanupWidgetIfExists();
        const { autoInject: e } = this.options;
        if (!e) return;
        this._createWidget(this.options);
      } catch (e) {
        kd && Be.error(e);
      }
  }
  openDialog() {
    this._widget ||
      this._createWidget({ ...this.options, shouldCreateActor: !1 }),
      this._widget && this._widget.openDialog();
  }
  closeDialog() {
    this._widget && this._widget.closeDialog();
  }
  attachTo(e, n) {
    try {
      const r = R8(this.options, n || {});
      return this._ensureShadowHost(r, ({ shadow: a }) => {
        const s =
          typeof e == "string"
            ? rb.querySelector(e)
            : typeof e.addEventListener == "function"
            ? e
            : null;
        if (!s)
          return (
            kd && Be.error("[Feedback] Unable to attach to target element"),
            null
          );
        const i = L8({ shadow: a, options: r, attachTo: s });
        return this._widgets.add(i), this._widget || (this._widget = i), i;
      });
    } catch (r) {
      return kd && Be.error(r), null;
    }
  }
  createWidget(e) {
    try {
      return this._createWidget(R8(this.options, e || {}));
    } catch (n) {
      return kd && Be.error(n), null;
    }
  }
  removeWidget(e) {
    if (!e) return !1;
    try {
      if (this._widgets.has(e))
        return (
          e.removeActor(),
          e.removeDialog(),
          this._widgets.delete(e),
          this._widget === e && (this._widget = null),
          !0
        );
    } catch (n) {
      kd && Be.error(n);
    }
    return !1;
  }
  getWidget() {
    return this._widget;
  }
  remove() {
    this._host && this._host.remove(), this._initialize();
  }
  _initialize() {
    (this._host = null),
      (this._shadow = null),
      (this._widget = null),
      (this._widgets = new Set()),
      (this._hasInsertedActorStyles = !1);
  }
  _cleanupWidgetIfExists() {
    this._host && this.remove();
    const e = rb.querySelector(`#${this.options.id}`);
    e && e.remove();
  }
  _createWidget(e) {
    return this._ensureShadowHost(e, ({ shadow: n }) => {
      const r = L8({ shadow: n, options: e });
      return (
        !this._hasInsertedActorStyles &&
          r.actor &&
          (n.appendChild(_Le(rb)), (this._hasInsertedActorStyles = !0)),
        this._widgets.add(r),
        this._widget || (this._widget = r),
        r
      );
    });
  }
  _ensureShadowHost(e, n) {
    let r = !1;
    if (!this._shadow || !this._host) {
      const { id: s, colorScheme: i, themeLight: o, themeDark: u } = e,
        { shadow: l, host: c } = TLe({
          id: s,
          colorScheme: i,
          themeLight: o,
          themeDark: u,
        });
      (this._shadow = l), (this._host = c), (r = !0);
    }
    this._host.dataset.sentryFeedbackColorscheme = e.colorScheme;
    const a = n({ shadow: this._shadow, host: this._host });
    return r && rb.body.appendChild(this._host), a;
  }
}
dP.__initStatic();
const M8 = 1e6,
  sE = String(0),
  DLe = "main";
let AY = "",
  OY = "",
  HY = "",
  GO = (qt.navigator && qt.navigator.userAgent) || "",
  NY = "";
const GLe =
  (qt.navigator && qt.navigator.language) ||
  (qt.navigator && qt.navigator.languages && qt.navigator.languages[0]) ||
  "";
function FLe(t) {
  return typeof t == "object" && t !== null && "getHighEntropyValues" in t;
}
const D8 = qt.navigator && qt.navigator.userAgentData;
FLe(D8) &&
  D8.getHighEntropyValues([
    "architecture",
    "model",
    "platform",
    "platformVersion",
    "fullVersionList",
  ])
    .then((t) => {
      if (
        ((AY = t.platform || ""),
        (HY = t.architecture || ""),
        (NY = t.model || ""),
        (OY = t.platformVersion || ""),
        t.fullVersionList && t.fullVersionList.length > 0)
      ) {
        const e = t.fullVersionList[t.fullVersionList.length - 1];
        GO = `${e.brand} ${e.version}`;
      }
    })
    .catch((t) => {});
function ULe(t) {
  return !("thread_metadata" in t);
}
function KLe(t) {
  return ULe(t) ? jLe(t) : t;
}
function BLe(t) {
  const e = t && t.contexts && t.contexts.trace && t.contexts.trace.trace_id;
  return (
    typeof e == "string" &&
      e.length !== 32 &&
      Fn &&
      Be.log(`[Profiling] Invalid traceId: ${e} on profiled event`),
    typeof e != "string" ? "" : e
  );
}
function VLe(t, e, n, r) {
  if (r.type !== "transaction")
    throw new TypeError(
      "Profiling events may only be attached to transactions, this should never occur."
    );
  if (n == null)
    throw new TypeError(
      `Cannot construct profiling event envelope without a valid profile. Got ${n} instead.`
    );
  const a = BLe(r),
    s = KLe(n),
    i =
      e ||
      (typeof r.start_timestamp == "number"
        ? r.start_timestamp * 1e3
        : Date.now()),
    o = typeof r.timestamp == "number" ? r.timestamp * 1e3 : Date.now();
  return {
    event_id: t,
    timestamp: new Date(i).toISOString(),
    platform: "javascript",
    version: "1",
    release: r.release || "",
    environment: r.environment || Hv,
    runtime: { name: "javascript", version: qt.navigator.userAgent },
    os: { name: AY, version: OY, build_number: GO },
    device: {
      locale: GLe,
      model: NY,
      manufacturer: GO,
      architecture: HY,
      is_emulator: !1,
    },
    debug_meta: { images: WLe(n.resources) },
    profile: s,
    transactions: [
      {
        name: r.transaction || "",
        id: r.event_id || jn(),
        trace_id: a,
        active_thread_id: sE,
        relative_start_ns: "0",
        relative_end_ns: ((o - i) * 1e6).toFixed(0),
      },
    ],
  };
}
function RY(t) {
  return t.op === "pageload";
}
function jLe(t) {
  let e,
    n = 0;
  const r = {
    samples: [],
    stacks: [],
    frames: [],
    thread_metadata: { [sE]: { name: DLe } },
  };
  if (!t.samples.length) return r;
  const a = t.samples[0].timestamp,
    s =
      typeof performance.timeOrigin == "number"
        ? performance.timeOrigin
        : Lr || 0,
    i = s - (Lr || s);
  for (let o = 0; o < t.samples.length; o++) {
    const u = t.samples[o];
    if (u.stackId === void 0) {
      e === void 0 && ((e = n), (r.stacks[e] = []), n++),
        (r.samples[o] = {
          elapsed_since_start_ns: ((u.timestamp + i - a) * M8).toFixed(0),
          stack_id: e,
          thread_id: sE,
        });
      continue;
    }
    let l = t.stacks[u.stackId];
    const c = [];
    for (; l; ) {
      c.push(l.frameId);
      const p = t.frames[l.frameId];
      r.frames[l.frameId] === void 0 &&
        (r.frames[l.frameId] = {
          function: p.name,
          abs_path:
            typeof p.resourceId == "number"
              ? t.resources[p.resourceId]
              : void 0,
          lineno: p.line,
          colno: p.column,
        }),
        (l = l.parentId === void 0 ? void 0 : t.stacks[l.parentId]);
    }
    const d = {
      elapsed_since_start_ns: ((u.timestamp + i - a) * M8).toFixed(0),
      stack_id: n,
      thread_id: sE,
    };
    (r.stacks[n] = c), (r.samples[o] = d), n++;
  }
  return r;
}
function zLe(t, e) {
  if (!e.length) return t;
  for (const n of e) t[1].push([{ type: "profile" }, n]);
  return t;
}
function $Le(t) {
  const e = [];
  return (
    xT(t, (n, r) => {
      if (r === "transaction")
        for (let a = 1; a < n.length; a++) {
          const s = n[a];
          s &&
            s.contexts &&
            s.contexts.profile &&
            s.contexts.profile.profile_id &&
            e.push(n[a]);
        }
    }),
    e
  );
}
const G8 = new WeakMap();
function WLe(t) {
  const e = wn._sentryDebugIds;
  if (!e) return [];
  const n = An(),
    r = n && n.getOptions(),
    a = r && r.stackParser;
  if (!a) return [];
  let s;
  const i = G8.get(a);
  i ? (s = i) : ((s = new Map()), G8.set(a, s));
  const o = Object.keys(e).reduce((l, c) => {
      let d;
      const p = s.get(c);
      p ? (d = p) : ((d = a(c)), s.set(c, d));
      for (let m = d.length - 1; m >= 0; m--) {
        const y = d[m],
          I = y && y.filename;
        if (y && I) {
          l[I] = e[c];
          break;
        }
      }
      return l;
    }, {}),
    u = [];
  for (const l of t)
    l && o[l] && u.push({ type: "sourcemap", code_file: l, debug_id: o[l] });
  return u;
}
function qLe(t) {
  return (typeof t != "number" && typeof t != "boolean") ||
    (typeof t == "number" && isNaN(t))
    ? (Fn &&
        Be.warn(
          `[Profiling] Invalid sample rate. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(
            t
          )} of type ${JSON.stringify(typeof t)}.`
        ),
      !1)
    : t === !0 || t === !1
    ? !0
    : t < 0 || t > 1
    ? (Fn &&
        Be.warn(
          `[Profiling] Invalid sample rate. Sample rate must be between 0 and 1. Got ${t}.`
        ),
      !1)
    : !0;
}
function YLe(t) {
  return t.samples.length < 2
    ? (Fn &&
        Be.log(
          "[Profiling] Discarding profile because it contains less than 2 samples"
        ),
      !1)
    : t.frames.length
    ? !0
    : (Fn &&
        Be.log("[Profiling] Discarding profile because it contains no frames"),
      !1);
}
let kY = !1;
const xY = 3e4;
function XLe(t) {
  return typeof t == "function";
}
function QLe() {
  const t = qt.Profiler;
  if (!XLe(t)) {
    Fn &&
      Be.log(
        "[Profiling] Profiling is not supported by this browser, Profiler interface missing on window object."
      );
    return;
  }
  const e = 10,
    n = Math.floor(xY / e);
  try {
    return new t({ sampleInterval: e, maxBufferSize: n });
  } catch {
    Fn &&
      (Be.log(
        "[Profiling] Failed to initialize the Profiling constructor, this is likely due to a missing 'Document-Policy': 'js-profiling' header."
      ),
      Be.log("[Profiling] Disabling profiling for current user session.")),
      (kY = !0);
  }
}
function F8(t) {
  if (kY)
    return (
      Fn &&
        Be.log(
          "[Profiling] Profiling has been disabled for the duration of the current user session."
        ),
      !1
    );
  if (!t.isRecording())
    return (
      Fn &&
        Be.log(
          "[Profiling] Discarding profile because transaction was not sampled."
        ),
      !1
    );
  const e = An(),
    n = e && e.getOptions();
  if (!n)
    return (
      Fn && Be.log("[Profiling] Profiling disabled, no options found."), !1
    );
  const r = n.profilesSampleRate;
  return qLe(r)
    ? r
      ? (r === !0 ? !0 : Math.random() < r)
        ? !0
        : (Fn &&
            Be.log(
              `[Profiling] Discarding profile because it's not included in the random sample (sampling rate = ${Number(
                r
              )})`
            ),
          !1)
      : (Fn &&
          Be.log(
            "[Profiling] Discarding profile because a negative sampling decision was inherited or profileSampleRate is set to 0"
          ),
        !1)
    : (Fn &&
        Be.warn(
          "[Profiling] Discarding profile because of invalid sample rate."
        ),
      !1);
}
function JLe(t, e, n, r) {
  return YLe(n) ? VLe(t, e, n, r) : null;
}
const Gd = new Map();
function ZLe() {
  return Gd.size;
}
function e4e(t) {
  const e = Gd.get(t);
  return e && Gd.delete(t), e;
}
function t4e(t, e) {
  if ((Gd.set(t, e), Gd.size > 30)) {
    const n = Gd.keys().next().value;
    Gd.delete(n);
  }
}
function U8(t) {
  let e;
  RY(t) && (e = yl() * 1e3);
  const n = QLe();
  if (!n) return t;
  Fn &&
    Be.log(`[Profiling] started profiling transaction: ${es(t).description}`);
  const r = jn();
  async function a() {
    return !t || !n
      ? null
      : n
          .stop()
          .then(
            (u) => (
              s && (qt.clearTimeout(s), (s = void 0)),
              Fn &&
                Be.log(
                  `[Profiling] stopped profiling of transaction: ${
                    es(t).description
                  }`
                ),
              u
                ? (t4e(r, u), null)
                : (Fn &&
                    Be.log(
                      `[Profiling] profiler returned null profile for: ${
                        es(t).description
                      }`,
                      "this may indicate an overlapping transaction or a call to stopProfiling with a profile title that was never started"
                    ),
                  null)
            )
          )
          .catch(
            (u) => (
              Fn && Be.log("[Profiling] error while stopping profiler:", u),
              null
            )
          );
  }
  let s = qt.setTimeout(() => {
    Fn &&
      Be.log(
        "[Profiling] max profile duration elapsed, stopping profiling for:",
        es(t).description
      ),
      a();
  }, xY);
  const i = t.end.bind(t);
  function o() {
    return t
      ? (a().then(
          () => {
            t.setContext("profile", { profile_id: r, start_timestamp: e }), i();
          },
          () => {
            i();
          }
        ),
        t)
      : i();
  }
  return (t.end = o), t;
}
const LY = "BrowserProfiling",
  n4e = () => ({
    name: LY,
    setupOnce() {},
    setup(t) {
      const n = er().getTransaction();
      if ((n && RY(n) && F8(n) && U8(n), typeof t.on != "function")) {
        Be.warn(
          "[Profiling] Client does not support hooks, profiling will be disabled"
        );
        return;
      }
      t.on("startTransaction", (r) => {
        F8(r) && U8(r);
      }),
        t.on("beforeEnvelope", (r) => {
          if (!ZLe()) return;
          const a = $Le(r);
          if (!a.length) return;
          const s = [];
          for (const i of a) {
            const o = i && i.contexts,
              u = o && o.profile && o.profile.profile_id,
              l = o && o.profile && o.profile.start_timestamp;
            if (typeof u != "string") {
              Fn &&
                Be.log(
                  "[Profiling] cannot find profile for a transaction without a profile context"
                );
              continue;
            }
            if (!u) {
              Fn &&
                Be.log(
                  "[Profiling] cannot find profile for a transaction without a profile context"
                );
              continue;
            }
            o && o.profile && delete o.profile;
            const c = e4e(u);
            if (!c) {
              Fn &&
                Be.log(
                  `[Profiling] Could not retrieve profile for transaction: ${u}`
                );
              continue;
            }
            const d = JLe(u, l, c, i);
            d && s.push(d);
          }
          zLe(r, s);
        });
    },
  }),
  MY = n4e,
  s4e = Ca(LY, MY);
let DY = {};
qt.Sentry && qt.Sentry.Integrations && (DY = qt.Sentry.Integrations);
const FO = { ...DY, ...tHe, ...ERe },
  r4e = "sentry-ipc";
var nc;
(function (t) {
  (t.RENDERER_START = "sentry-electron.renderer-start"),
    (t.EVENT = "sentry-electron.event"),
    (t.SCOPE = "sentry-electron.scope"),
    (t.ENVELOPE = "sentry-electron.envelope"),
    (t.STATUS = "sentry-electron.status"),
    (t.ADD_METRIC = "sentry-electron.add-metric");
})(nc || (nc = {}));
const a4e = "sentry-electron-renderer-id";
function ah(t) {
  return `${r4e}://${t}/sentry_key`;
}
function i4e() {
  if (window.__SENTRY_IPC__) return window.__SENTRY_IPC__;
  {
    Be.log(
      "IPC was not configured in preload script, falling back to custom protocol and fetch"
    );
    const t = (window.__SENTRY_RENDERER_ID__ = jn()),
      e = { [a4e]: t };
    return {
      sendRendererStart: () => {
        fetch(ah(nc.RENDERER_START), {
          method: "POST",
          body: "",
          headers: e,
        }).catch(() => {
          console.error(`Sentry SDK failed to establish connection with the Electron main process.
  - Ensure you have initialized the SDK in the main process
  - If your renderers use custom sessions, be sure to set 'getSessions' in the main process options
  - If you are bundling your main process code and using Electron < v5, you'll need to manually configure a preload script`);
        });
      },
      sendScope: (n) => {
        fetch(ah(nc.SCOPE), { method: "POST", body: n, headers: e }).catch(
          () => {}
        );
      },
      sendEvent: (n) => {
        fetch(ah(nc.EVENT), { method: "POST", body: n, headers: e }).catch(
          () => {}
        );
      },
      sendEnvelope: (n) => {
        fetch(ah(nc.ENVELOPE), { method: "POST", body: n, headers: e }).catch(
          () => {}
        );
      },
      sendStatus: (n) => {
        fetch(ah(nc.STATUS), {
          method: "POST",
          body: JSON.stringify({ status: n }),
          headers: e,
        }).catch(() => {});
      },
      sendAddMetric: (n) => {
        fetch(ah(nc.ADD_METRIC), {
          method: "POST",
          body: JSON.stringify(n),
          headers: e,
        }).catch(() => {});
      },
    };
  }
}
let ab;
function Fv() {
  return ab || ((ab = i4e()), ab.sendRendererStart()), ab;
}
const GY = "ScopeToMain",
  a2 = () => ({
    name: GY,
    setupOnce() {},
    setup() {
      const t = er();
      if (t) {
        const e = Fv();
        t.addScopeListener((n) => {
          e.sendScope(JSON.stringify(Ii(n.getScopeData(), 20, 2e3))),
            t.clearBreadcrumbs(),
            t.clearAttachments();
        });
      }
    },
  }),
  o4e = Ca(GY, a2);
class pP {
  constructor() {
    this.name = pP.id;
  }
  setupOnce(e) {
    const n = Fv();
    e(
      (r) => (
        (r.breadcrumbs = r.breadcrumbs || []),
        (r.environment = void 0),
        n.sendEvent(JSON.stringify(Ii(r, 20, 2e3))),
        null
      )
    );
  }
}
pP.id = "EventToMain";
const u4e = Object.freeze(
  Object.defineProperty(
    { __proto__: null, EventToMain: pP, ScopeToMain: o4e },
    Symbol.toStringTag,
    { value: "Module" }
  )
);
class l4e {
  constructor() {
    this._ipc = Fv();
  }
  add(e, n, r, a, s, i) {
    this._ipc.sendAddMetric({
      metricType: e,
      name: n,
      value: r,
      unit: a,
      tags: s,
      timestamp: i,
    });
  }
  flush() {}
  close() {}
  toString() {
    return "";
  }
}
const FY = "MetricsAggregator",
  i2 = () => ({
    name: FY,
    setupOnce() {},
    setup(t) {
      t.metricsAggregator = new l4e();
    },
  }),
  c4e = Ca(FY, i2);
function d4e(t) {
  const e = Object.assign(
      { pollInterval: 1e3, anrThreshold: 5e3, captureStackTrace: !1 },
      t
    ),
    n = Fv();
  document.addEventListener("visibilitychange", () => {
    n.sendStatus({ status: document.visibilityState, config: e });
  }),
    n.sendStatus({ status: document.visibilityState, config: e }),
    setInterval(() => {
      n.sendStatus({ status: "alive", config: e });
    }, e.pollInterval);
}
const p4e = 50,
  [, h4e] = vq,
  [, f4e] = GCe(),
  m4e = (t, e = 0) => {
    const n = [];
    for (const r of t
      .split(
        `
`
      )
      .slice(e)) {
      const a = h4e(r),
        s = f4e(r);
      if (
        (a && (s == null ? void 0 : s.in_app) !== !1
          ? n.push(a)
          : s && n.push(gr(s)),
        n.length >= p4e)
      )
        break;
    }
    return Q$(n);
  };
var UO = function (t, e) {
  return (
    (UO =
      Object.setPrototypeOf ||
      ({ __proto__: [] } instanceof Array &&
        function (n, r) {
          n.__proto__ = r;
        }) ||
      function (n, r) {
        for (var a in r)
          Object.prototype.hasOwnProperty.call(r, a) && (n[a] = r[a]);
      }),
    UO(t, e)
  );
};
function Uv(t, e) {
  if (typeof e != "function" && e !== null)
    throw new TypeError(
      "Class extends value " + String(e) + " is not a constructor or null"
    );
  UO(t, e);
  function n() {
    this.constructor = t;
  }
  t.prototype =
    e === null ? Object.create(e) : ((n.prototype = e.prototype), new n());
}
function S4e(t, e, n, r) {
  function a(s) {
    return s instanceof n
      ? s
      : new n(function (i) {
          i(s);
        });
  }
  return new (n || (n = Promise))(function (s, i) {
    function o(c) {
      try {
        l(r.next(c));
      } catch (d) {
        i(d);
      }
    }
    function u(c) {
      try {
        l(r.throw(c));
      } catch (d) {
        i(d);
      }
    }
    function l(c) {
      c.done ? s(c.value) : a(c.value).then(o, u);
    }
    l((r = r.apply(t, e || [])).next());
  });
}
function y4e(t, e, n) {
  if (n || arguments.length === 2)
    for (var r = 0, a = e.length, s; r < a; r++)
      (s || !(r in e)) &&
        (s || (s = Array.prototype.slice.call(e, 0, r)), (s[r] = e[r]));
  return t.concat(s || Array.prototype.slice.call(e));
}
function g4e(t) {
  const e = Fv();
  return nP(t, (n) =>
    S4e(this, void 0, void 0, function* () {
      return e.sendEnvelope(n.body), { statusCode: 200 };
    })
  );
}
function v4e(t) {
  const e = typeof window < "u" ? "renderer" : "main";
  if (e !== t)
    throw new Error(`This code is intended to run in the Electron ${t} process but is currently running in the ${e} process.
This can occur if a bundler picks the wrong entry point.

You can work around this by using a relative import:
import * as Sentry from '@sentry/electron/${e}';`);
}
const UY = [...Nq, a2(), i2()];
function KY(t = {}, e = vRe) {
  if ((v4e("renderer"), window != null && window.__SENTRY__RENDERER_INIT__)) {
    Be.warn(`The browser SDK has already been initialized.
If init has been called in the preload and contextIsolation is disabled, is not required to call init in the renderer`);
    return;
  }
  (window.__SENTRY__RENDERER_INIT__ = !0),
    t.autoSessionTracking === void 0 && (t.autoSessionTracking = !1),
    (t.sendClientReports = !1),
    t.defaultIntegrations === void 0 && (t.defaultIntegrations = UY),
    t.stackParser === void 0 && (t.stackParser = m4e),
    t.dsn === void 0 && (t.dsn = "https://12345@dummy.dsn/12345"),
    t.transport === void 0 && (t.transport = g4e),
    t.anrDetection && d4e(t.anrDetection === !0 ? {} : t.anrDetection),
    delete t.initialScope,
    e(t);
}
const _4e = Object.assign(Object.assign({}, eHe), { MetricsAggregator: c4e }),
  b4e = Object.assign(Object.assign({}, FO), u4e),
  E4e = Object.freeze(
    Object.defineProperty(
      {
        __proto__: null,
        BrowserClient: gq,
        BrowserProfilingIntegration: s4e,
        BrowserTracing: XHe,
        Hub: wk,
        Integrations: b4e,
        ModuleMetadata: POe,
        Replay: Gv,
        Scope: ou,
        addBreadcrumb: vu,
        addEventProcessor: KW,
        addGlobalEventProcessor: hW,
        addIntegration: F1e,
        addTracingExtensions: Ak,
        breadcrumbsIntegration: Gk,
        browserApiErrorsIntegration: Vk,
        browserProfilingIntegration: MY,
        browserTracingIntegration: tNe,
        captureCheckIn: _O,
        captureEvent: Tk,
        captureException: X0,
        captureMessage: qAe,
        configureScope: yW,
        continueTrace: v1e,
        createTransport: nP,
        dedupeIntegration: Fk,
        defaultIntegrations: UY,
        extractTraceparentData: p1e,
        feedbackIntegration: MLe,
        functionToStringIntegration: Nk,
        getActiveSpan: Nv,
        getActiveTransaction: _u,
        getClient: An,
        getCurrentHub: Zn,
        getCurrentScope: er,
        getGlobalScope: EW,
        getHubFromCarrier: DT,
        getIsolationScope: Cu,
        globalHandlersIntegration: Uk,
        httpContextIntegration: Kk,
        inboundFiltersIntegration: Hk,
        init: KY,
        lastEventId: n1e,
        linkedErrorsIntegration: Bk,
        makeMain: EO,
        metrics: _4e,
        metricsAggregatorIntegration: i2,
        moduleMetadataIntegration: WW,
        parameterize: gOe,
        replayCanvasIntegration: TY,
        replayIntegration: zxe,
        runWithAsyncContext: J0,
        scopeToMainIntegration: a2,
        sendFeedback: IY,
        setContext: gW,
        setExtra: XAe,
        setExtras: YAe,
        setMeasurement: LW,
        setTag: JAe,
        setTags: QAe,
        setUser: ZAe,
        showReportDialog: _Re,
        spanStatusfromHttpCode: f1e,
        startActiveSpan: y1e,
        startInactiveSpan: Ck,
        startSpan: IW,
        startSpanManual: g1e,
        startTransaction: e1e,
        trace: S1e,
        withMonitor: t1e,
        withScope: Tm,
      },
      Symbol.toStringTag,
      { value: "Module" }
    )
  );
function T4e(t, e) {
  let n = 0;
  for (let r = t.length - 1; r >= 0; r--) {
    const a = t[r];
    a === "."
      ? t.splice(r, 1)
      : a === ".."
      ? (t.splice(r, 1), n++)
      : n && (t.splice(r, 1), n--);
  }
  if (e) for (; n--; n) t.unshift("..");
  return t;
}
const w4e =
  /^(\S+:\\|\/?)([\s\S]*?)((?:\.{1,2}|[^/\\]+?|)(\.[^./\\]*|))(?:[/\\]*)$/;
function P4e(t) {
  const e = t.length > 1024 ? `<truncated>${t.slice(-1024)}` : t,
    n = w4e.exec(e);
  return n ? n.slice(1) : [];
}
function K8(...t) {
  let e = "",
    n = !1;
  for (let r = t.length - 1; r >= -1 && !n; r--) {
    const a = r >= 0 ? t[r] : "/";
    a && ((e = `${a}/${e}`), (n = a.charAt(0) === "/"));
  }
  return (
    (e = T4e(
      e.split("/").filter((r) => !!r),
      !n
    ).join("/")),
    (n ? "/" : "") + e || "."
  );
}
function B8(t) {
  let e = 0;
  for (; e < t.length && t[e] === ""; e++);
  let n = t.length - 1;
  for (; n >= 0 && t[n] === ""; n--);
  return e > n ? [] : t.slice(e, n - e + 1);
}
function I4e(t, e) {
  (t = K8(t).slice(1)), (e = K8(e).slice(1));
  const n = B8(t.split("/")),
    r = B8(e.split("/")),
    a = Math.min(n.length, r.length);
  let s = a;
  for (let o = 0; o < a; o++)
    if (n[o] !== r[o]) {
      s = o;
      break;
    }
  let i = [];
  for (let o = s; o < n.length; o++) i.push("..");
  return (i = i.concat(r.slice(s))), i.join("/");
}
function C4e(t, e) {
  let n = P4e(t)[2];
  return (
    e && n.slice(e.length * -1) === e && (n = n.slice(0, n.length - e.length)),
    n
  );
}
function A4e(t, e) {
  return Object.assign(
    function (...r) {
      return e(...r);
    },
    { id: t }
  );
}
const BY = "RewriteFrames",
  O4e = (t = {}) => {
    const e = t.root,
      n = t.prefix || "app:///",
      r =
        t.iteratee ||
        ((i) => {
          if (!i.filename) return i;
          const o =
              /^[a-zA-Z]:\\/.test(i.filename) ||
              (i.filename.includes("\\") && !i.filename.includes("/")),
            u = /^\//.test(i.filename);
          if (o || u) {
            const l = o
                ? i.filename.replace(/^[a-zA-Z]:/, "").replace(/\\/g, "/")
                : i.filename,
              c = e ? I4e(e, l) : C4e(l);
            i.filename = `${n}${c}`;
          }
          return i;
        });
    function a(i) {
      try {
        return {
          ...i,
          exception: {
            ...i.exception,
            values: i.exception.values.map((o) => ({
              ...o,
              ...(o.stacktrace && { stacktrace: s(o.stacktrace) }),
            })),
          },
        };
      } catch {
        return i;
      }
    }
    function s(i) {
      return { ...i, frames: i && i.frames && i.frames.map((o) => r(o)) };
    }
    return {
      name: BY,
      setupOnce() {},
      processEvent(i) {
        let o = i;
        return (
          i.exception && Array.isArray(i.exception.values) && (o = a(o)), o
        );
      },
    };
  },
  VY = O4e;
A4e(BY, VY);
var jY = { exports: {} };
(function (t, e) {
  (function (n, r) {
    t.exports = r();
  })(sl, function () {
    var n = function (f, S) {
        return (n =
          Object.setPrototypeOf ||
          ({ __proto__: [] } instanceof Array &&
            function (A, N) {
              A.__proto__ = N;
            }) ||
          function (A, N) {
            for (var G in N)
              Object.prototype.hasOwnProperty.call(N, G) && (A[G] = N[G]);
          })(f, S);
      },
      r = function () {
        return (r =
          Object.assign ||
          function (f) {
            for (var S, A = 1, N = arguments.length; A < N; A++)
              for (var G in (S = arguments[A]))
                Object.prototype.hasOwnProperty.call(S, G) && (f[G] = S[G]);
            return f;
          }).apply(this, arguments);
      };
    function a(f, S, A) {
      if (A || arguments.length === 2)
        for (var N, G = 0, z = S.length; G < z; G++)
          (!N && G in S) ||
            ((N = N || Array.prototype.slice.call(S, 0, G))[G] = S[G]);
      return f.concat(N || Array.prototype.slice.call(S));
    }
    var s =
        typeof globalThis < "u"
          ? globalThis
          : typeof self < "u"
          ? self
          : typeof window < "u"
          ? window
          : sl,
      i = Object.keys,
      o = Array.isArray;
    function u(f, S) {
      return (
        typeof S != "object" ||
          i(S).forEach(function (A) {
            f[A] = S[A];
          }),
        f
      );
    }
    typeof Promise > "u" || s.Promise || (s.Promise = Promise);
    var l = Object.getPrototypeOf,
      c = {}.hasOwnProperty;
    function d(f, S) {
      return c.call(f, S);
    }
    function p(f, S) {
      typeof S == "function" && (S = S(l(f))),
        (typeof Reflect > "u" ? i : Reflect.ownKeys)(S).forEach(function (A) {
          y(f, A, S[A]);
        });
    }
    var m = Object.defineProperty;
    function y(f, S, A, N) {
      m(
        f,
        S,
        u(
          A && d(A, "get") && typeof A.get == "function"
            ? { get: A.get, set: A.set, configurable: !0 }
            : { value: A, configurable: !0, writable: !0 },
          N
        )
      );
    }
    function I(f) {
      return {
        from: function (S) {
          return (
            (f.prototype = Object.create(S.prototype)),
            y(f.prototype, "constructor", f),
            { extend: p.bind(null, f.prototype) }
          );
        },
      };
    }
    var O = Object.getOwnPropertyDescriptor,
      g = [].slice;
    function C(f, S, A) {
      return g.call(f, S, A);
    }
    function H(f, S) {
      return S(f);
    }
    function B(f) {
      if (!f) throw new Error("Assertion Failed");
    }
    function he(f) {
      s.setImmediate ? setImmediate(f) : setTimeout(f, 0);
    }
    function de(f, S) {
      if (typeof S == "string" && d(f, S)) return f[S];
      if (!S) return f;
      if (typeof S != "string") {
        for (var A = [], N = 0, G = S.length; N < G; ++N) {
          var z = de(f, S[N]);
          A.push(z);
        }
        return A;
      }
      var _e = S.indexOf(".");
      if (_e !== -1) {
        var Ie = f[S.substr(0, _e)];
        return Ie == null ? void 0 : de(Ie, S.substr(_e + 1));
      }
    }
    function U(f, S, A) {
      if (f && S !== void 0 && !("isFrozen" in Object && Object.isFrozen(f)))
        if (typeof S != "string" && "length" in S) {
          B(typeof A != "string" && "length" in A);
          for (var N = 0, G = S.length; N < G; ++N) U(f, S[N], A[N]);
        } else {
          var z,
            _e,
            Ie = S.indexOf(".");
          Ie !== -1
            ? ((z = S.substr(0, Ie)),
              (_e = S.substr(Ie + 1)) === ""
                ? A === void 0
                  ? o(f) && !isNaN(parseInt(z))
                    ? f.splice(z, 1)
                    : delete f[z]
                  : (f[z] = A)
                : U((Ie = !(Ie = f[z]) || !d(f, z) ? (f[z] = {}) : Ie), _e, A))
            : A === void 0
            ? o(f) && !isNaN(parseInt(S))
              ? f.splice(S, 1)
              : delete f[S]
            : (f[S] = A);
        }
    }
    function R(f) {
      var S,
        A = {};
      for (S in f) d(f, S) && (A[S] = f[S]);
      return A;
    }
    var ge = [].concat;
    function ve(f) {
      return ge.apply([], f);
    }
    var Gu =
        "BigUint64Array,BigInt64Array,Array,Boolean,String,Date,RegExp,Blob,File,FileList,FileSystemFileHandle,FileSystemDirectoryHandle,ArrayBuffer,DataView,Uint8ClampedArray,ImageBitmap,ImageData,Map,Set,CryptoKey"
          .split(",")
          .concat(
            ve(
              [8, 16, 32, 64].map(function (f) {
                return ["Int", "Uint", "Float"].map(function (S) {
                  return S + f + "Array";
                });
              })
            )
          )
          .filter(function (f) {
            return s[f];
          }),
      we = new Set(
        Gu.map(function (f) {
          return s[f];
        })
      ),
      Te = null;
    function Ce(f) {
      return (
        (Te = new WeakMap()),
        (f = (function S(A) {
          if (!A || typeof A != "object") return A;
          var N = Te.get(A);
          if (N) return N;
          if (o(A)) {
            (N = []), Te.set(A, N);
            for (var G = 0, z = A.length; G < z; ++G) N.push(S(A[G]));
          } else if (we.has(A.constructor)) N = A;
          else {
            var _e,
              Ie = l(A);
            for (_e in ((N = Ie === Object.prototype ? {} : Object.create(Ie)),
            Te.set(A, N),
            A))
              d(A, _e) && (N[_e] = S(A[_e]));
          }
          return N;
        })(f)),
        (Te = null),
        f
      );
    }
    var Ee = {}.toString;
    function x(f) {
      return Ee.call(f).slice(8, -1);
    }
    var F = typeof Symbol < "u" ? Symbol.iterator : "@@iterator",
      Se =
        typeof F == "symbol"
          ? function (f) {
              var S;
              return f != null && (S = f[F]) && S.apply(f);
            }
          : function () {
              return null;
            };
    function ye(f, S) {
      return (S = f.indexOf(S)), 0 <= S && f.splice(S, 1), 0 <= S;
    }
    var Ae = {};
    function De(f) {
      var S, A, N, G;
      if (arguments.length === 1) {
        if (o(f)) return f.slice();
        if (this === Ae && typeof f == "string") return [f];
        if ((G = Se(f))) {
          for (A = []; !(N = G.next()).done; ) A.push(N.value);
          return A;
        }
        if (f == null) return [f];
        if (typeof (S = f.length) != "number") return [f];
        for (A = new Array(S); S--; ) A[S] = f[S];
        return A;
      }
      for (S = arguments.length, A = new Array(S); S--; ) A[S] = arguments[S];
      return A;
    }
    var lt =
        typeof Symbol < "u"
          ? function (f) {
              return f[Symbol.toStringTag] === "AsyncFunction";
            }
          : function () {
              return !1;
            },
      Ct = [
        "Unknown",
        "Constraint",
        "Data",
        "TransactionInactive",
        "ReadOnly",
        "Version",
        "NotFound",
        "InvalidState",
        "InvalidAccess",
        "Abort",
        "Timeout",
        "QuotaExceeded",
        "Syntax",
        "DataClone",
      ],
      wi = [
        "Modify",
        "Bulk",
        "OpenFailed",
        "VersionChange",
        "Schema",
        "Upgrade",
        "InvalidTable",
        "MissingAPI",
        "NoSuchDatabase",
        "InvalidArgument",
        "SubTransaction",
        "Unsupported",
        "Internal",
        "DatabaseClosed",
        "PrematureCommit",
        "ForeignAwait",
      ].concat(Ct),
      nt = {
        VersionChanged: "Database version changed by other database connection",
        DatabaseClosed: "Database has been closed",
        Abort: "Transaction aborted",
        TransactionInactive: "Transaction has already completed or failed",
        MissingAPI:
          "IndexedDB API missing. Please visit https://tinyurl.com/y2uuvskb",
      };
    function L(f, S) {
      (this.name = f), (this.message = S);
    }
    function M(f, S) {
      return (
        f +
        ". Errors: " +
        Object.keys(S)
          .map(function (A) {
            return S[A].toString();
          })
          .filter(function (A, N, G) {
            return G.indexOf(A) === N;
          }).join(`
`)
      );
    }
    function me(f, S, A, N) {
      (this.failures = S),
        (this.failedKeys = N),
        (this.successCount = A),
        (this.message = M(f, S));
    }
    function K(f, S) {
      (this.name = "BulkError"),
        (this.failures = Object.keys(S).map(function (A) {
          return S[A];
        })),
        (this.failuresByPos = S),
        (this.message = M(f, this.failures));
    }
    I(L)
      .from(Error)
      .extend({
        toString: function () {
          return this.name + ": " + this.message;
        },
      }),
      I(me).from(L),
      I(K).from(L);
    var Ge = wi.reduce(function (f, S) {
        return (f[S] = S + "Error"), f;
      }, {}),
      Ke = L,
      Re = wi.reduce(function (f, S) {
        var A = S + "Error";
        function N(G, z) {
          (this.name = A),
            G
              ? typeof G == "string"
                ? ((this.message = "".concat(G).concat(
                    z
                      ? `
 ` + z
                      : ""
                  )),
                  (this.inner = z || null))
                : typeof G == "object" &&
                  ((this.message = "".concat(G.name, " ").concat(G.message)),
                  (this.inner = G))
              : ((this.message = nt[S] || A), (this.inner = null));
        }
        return I(N).from(Ke), (f[S] = N), f;
      }, {});
    (Re.Syntax = SyntaxError), (Re.Type = TypeError), (Re.Range = RangeError);
    var it = Ct.reduce(function (f, S) {
        return (f[S + "Error"] = Re[S]), f;
      }, {}),
      Qe = wi.reduce(function (f, S) {
        return (
          ["Syntax", "Type", "Range"].indexOf(S) === -1 &&
            (f[S + "Error"] = Re[S]),
          f
        );
      }, {});
    function ct() {}
    function ot(f) {
      return f;
    }
    function rt(f, S) {
      return f == null || f === ot
        ? S
        : function (A) {
            return S(f(A));
          };
    }
    function gt(f, S) {
      return function () {
        f.apply(this, arguments), S.apply(this, arguments);
      };
    }
    function Mt(f, S) {
      return f === ct
        ? S
        : function () {
            var A = f.apply(this, arguments);
            A !== void 0 && (arguments[0] = A);
            var N = this.onsuccess,
              G = this.onerror;
            (this.onsuccess = null), (this.onerror = null);
            var z = S.apply(this, arguments);
            return (
              N &&
                (this.onsuccess = this.onsuccess ? gt(N, this.onsuccess) : N),
              G && (this.onerror = this.onerror ? gt(G, this.onerror) : G),
              z !== void 0 ? z : A
            );
          };
    }
    function at(f, S) {
      return f === ct
        ? S
        : function () {
            f.apply(this, arguments);
            var A = this.onsuccess,
              N = this.onerror;
            (this.onsuccess = this.onerror = null),
              S.apply(this, arguments),
              A &&
                (this.onsuccess = this.onsuccess ? gt(A, this.onsuccess) : A),
              N && (this.onerror = this.onerror ? gt(N, this.onerror) : N);
          };
    }
    function Dt(f, S) {
      return f === ct
        ? S
        : function (A) {
            var N = f.apply(this, arguments);
            u(A, N);
            var G = this.onsuccess,
              z = this.onerror;
            return (
              (this.onsuccess = null),
              (this.onerror = null),
              (A = S.apply(this, arguments)),
              G &&
                (this.onsuccess = this.onsuccess ? gt(G, this.onsuccess) : G),
              z && (this.onerror = this.onerror ? gt(z, this.onerror) : z),
              N === void 0 ? (A === void 0 ? void 0 : A) : u(N, A)
            );
          };
    }
    function pt(f, S) {
      return f === ct
        ? S
        : function () {
            return S.apply(this, arguments) !== !1 && f.apply(this, arguments);
          };
    }
    function Xt(f, S) {
      return f === ct
        ? S
        : function () {
            var A = f.apply(this, arguments);
            if (A && typeof A.then == "function") {
              for (var N = this, G = arguments.length, z = new Array(G); G--; )
                z[G] = arguments[G];
              return A.then(function () {
                return S.apply(N, z);
              });
            }
            return S.apply(this, arguments);
          };
    }
    (Qe.ModifyError = me), (Qe.DexieError = L), (Qe.BulkError = K);
    var It =
      typeof location < "u" &&
      /^(http|https):\/\/(localhost|127\.0\.0\.1)/.test(location.href);
    function bt(f) {
      It = f;
    }
    var yt = {},
      tn = 100,
      Gu =
        typeof Promise > "u"
          ? []
          : (function () {
              var f = Promise.resolve();
              if (typeof crypto > "u" || !crypto.subtle) return [f, l(f), f];
              var S = crypto.subtle.digest("SHA-512", new Uint8Array([0]));
              return [S, l(S), f];
            })(),
      Ct = Gu[0],
      wi = Gu[1],
      Gu = Gu[2],
      wi = wi && wi.then,
      Qt = Ct && Ct.constructor,
      Bt = !!Gu,
      Ut = function (f, S) {
        hr.push([f, S]), Ya && (queueMicrotask(QI), (Ya = !1));
      },
      as = !0,
      Ya = !0,
      Wt = [],
      mn = [],
      no = ot,
      ds = {
        id: "global",
        global: !0,
        ref: 0,
        unhandleds: [],
        onunhandled: ct,
        pgp: !1,
        env: {},
        finalize: ct,
      },
      Rt = ds,
      hr = [],
      la = 0,
      so = [];
    function Et(f) {
      if (typeof this != "object")
        throw new TypeError("Promises must be constructed via new");
      (this._listeners = []), (this._lib = !1);
      var S = (this._PSD = Rt);
      if (typeof f != "function") {
        if (f !== yt) throw new TypeError("Not a function");
        return (
          (this._state = arguments[1]),
          (this._value = arguments[2]),
          void (this._state === !1 && Ul(this, this._value))
        );
      }
      (this._state = null),
        (this._value = null),
        ++S.ref,
        (function A(N, G) {
          try {
            G(function (z) {
              if (N._state === null) {
                if (z === N)
                  throw new TypeError(
                    "A promise cannot be resolved with itself."
                  );
                var _e = N._lib && Kl();
                z && typeof z.then == "function"
                  ? A(N, function (Ie, Le) {
                      z instanceof Et ? z._then(Ie, Le) : z.then(Ie, Le);
                    })
                  : ((N._state = !0), (N._value = z), ca(N)),
                  _e && zs();
              }
            }, Ul.bind(null, N));
          } catch (z) {
            Ul(N, z);
          }
        })(this, f);
    }
    var Uo = {
      get: function () {
        var f = Rt,
          S = Qp;
        function A(N, G) {
          var z = this,
            _e = !f.global && (f !== Rt || S !== Qp),
            Ie = _e && !Ko(),
            Le = new Et(function (ke, Ve) {
              Du(z, new Wp(__(N, f, _e, Ie), __(G, f, _e, Ie), ke, Ve, f));
            });
          return this._consoleTask && (Le._consoleTask = this._consoleTask), Le;
        }
        return (A.prototype = yt), A;
      },
      set: function (f) {
        y(
          this,
          "then",
          f && f.prototype === yt
            ? Uo
            : {
                get: function () {
                  return f;
                },
                set: Uo.set,
              }
        );
      },
    };
    function Wp(f, S, A, N, G) {
      (this.onFulfilled = typeof f == "function" ? f : null),
        (this.onRejected = typeof S == "function" ? S : null),
        (this.resolve = A),
        (this.reject = N),
        (this.psd = G);
    }
    function Ul(f, S) {
      var A, N;
      mn.push(S),
        f._state === null &&
          ((A = f._lib && Kl()),
          (S = no(S)),
          (f._state = !1),
          (f._value = S),
          (N = f),
          Wt.some(function (G) {
            return G._value === N._value;
          }) || Wt.push(N),
          ca(f),
          A && zs());
    }
    function ca(f) {
      var S = f._listeners;
      f._listeners = [];
      for (var A = 0, N = S.length; A < N; ++A) Du(f, S[A]);
      var G = f._PSD;
      --G.ref || G.finalize(),
        la === 0 &&
          (++la,
          Ut(function () {
            --la == 0 && iS();
          }, []));
    }
    function Du(f, S) {
      if (f._state !== null) {
        var A = f._state ? S.onFulfilled : S.onRejected;
        if (A === null) return (f._state ? S.resolve : S.reject)(f._value);
        ++S.psd.ref, ++la, Ut(gs, [A, f, S]);
      } else f._listeners.push(S);
    }
    function gs(f, S, A) {
      try {
        var N,
          G = S._value;
        !S._state && mn.length && (mn = []),
          (N =
            It && S._consoleTask
              ? S._consoleTask.run(function () {
                  return f(G);
                })
              : f(G)),
          S._state ||
            mn.indexOf(G) !== -1 ||
            (function (z) {
              for (var _e = Wt.length; _e; )
                if (Wt[--_e]._value === z._value) return Wt.splice(_e, 1);
            })(S),
          A.resolve(N);
      } catch (z) {
        A.reject(z);
      } finally {
        --la == 0 && iS(), --A.psd.ref || A.psd.finalize();
      }
    }
    function QI() {
      ro(ds, function () {
        Kl() && zs();
      });
    }
    function Kl() {
      var f = as;
      return (Ya = as = !1), f;
    }
    function zs() {
      var f, S, A;
      do
        for (; 0 < hr.length; )
          for (f = hr, hr = [], A = f.length, S = 0; S < A; ++S) {
            var N = f[S];
            N[0].apply(null, N[1]);
          }
      while (0 < hr.length);
      Ya = as = !0;
    }
    function iS() {
      var f = Wt;
      (Wt = []),
        f.forEach(function (N) {
          N._PSD.onunhandled.call(null, N._value, N);
        });
      for (var S = so.slice(0), A = S.length; A; ) S[--A]();
    }
    function qp(f) {
      return new Et(yt, !1, f);
    }
    function ps(f, S) {
      var A = Rt;
      return function () {
        var N = Kl(),
          G = Rt;
        try {
          return Bo(A, !0), f.apply(this, arguments);
        } catch (z) {
          S && S(z);
        } finally {
          Bo(G, !1), N && zs();
        }
      };
    }
    p(Et.prototype, {
      then: Uo,
      _then: function (f, S) {
        Du(this, new Wp(null, null, f, S, Rt));
      },
      catch: function (f) {
        if (arguments.length === 1) return this.then(null, f);
        var S = f,
          A = arguments[1];
        return typeof S == "function"
          ? this.then(null, function (N) {
              return (N instanceof S ? A : qp)(N);
            })
          : this.then(null, function (N) {
              return (N && N.name === S ? A : qp)(N);
            });
      },
      finally: function (f) {
        return this.then(
          function (S) {
            return Et.resolve(f()).then(function () {
              return S;
            });
          },
          function (S) {
            return Et.resolve(f()).then(function () {
              return qp(S);
            });
          }
        );
      },
      timeout: function (f, S) {
        var A = this;
        return f < 1 / 0
          ? new Et(function (N, G) {
              var z = setTimeout(function () {
                return G(new Re.Timeout(S));
              }, f);
              A.then(N, G).finally(clearTimeout.bind(null, z));
            })
          : this;
      },
    }),
      typeof Symbol < "u" &&
        Symbol.toStringTag &&
        y(Et.prototype, Symbol.toStringTag, "Dexie.Promise"),
      (ds.env = v_()),
      p(Et, {
        all: function () {
          var f = De.apply(null, arguments).map(Jp);
          return new Et(function (S, A) {
            f.length === 0 && S([]);
            var N = f.length;
            f.forEach(function (G, z) {
              return Et.resolve(G).then(function (_e) {
                (f[z] = _e), --N || S(f);
              }, A);
            });
          });
        },
        resolve: function (f) {
          return f instanceof Et
            ? f
            : f && typeof f.then == "function"
            ? new Et(function (S, A) {
                f.then(S, A);
              })
            : new Et(yt, !0, f);
        },
        reject: qp,
        race: function () {
          var f = De.apply(null, arguments).map(Jp);
          return new Et(function (S, A) {
            f.map(function (N) {
              return Et.resolve(N).then(S, A);
            });
          });
        },
        PSD: {
          get: function () {
            return Rt;
          },
          set: function (f) {
            return (Rt = f);
          },
        },
        totalEchoes: {
          get: function () {
            return Qp;
          },
        },
        newPSD: Xa,
        usePSD: ro,
        scheduler: {
          get: function () {
            return Ut;
          },
          set: function (f) {
            Ut = f;
          },
        },
        rejectionMapper: {
          get: function () {
            return no;
          },
          set: function (f) {
            no = f;
          },
        },
        follow: function (f, S) {
          return new Et(function (A, N) {
            return Xa(
              function (G, z) {
                var _e = Rt;
                (_e.unhandleds = []),
                  (_e.onunhandled = z),
                  (_e.finalize = gt(function () {
                    var Ie,
                      Le = this;
                    (Ie = function () {
                      Le.unhandleds.length === 0 ? G() : z(Le.unhandleds[0]);
                    }),
                      so.push(function ke() {
                        Ie(), so.splice(so.indexOf(ke), 1);
                      }),
                      ++la,
                      Ut(function () {
                        --la == 0 && iS();
                      }, []);
                  }, _e.finalize)),
                  f();
              },
              S,
              A,
              N
            );
          });
        },
      }),
      Qt &&
        (Qt.allSettled &&
          y(Et, "allSettled", function () {
            var f = De.apply(null, arguments).map(Jp);
            return new Et(function (S) {
              f.length === 0 && S([]);
              var A = f.length,
                N = new Array(A);
              f.forEach(function (G, z) {
                return Et.resolve(G)
                  .then(
                    function (_e) {
                      return (N[z] = { status: "fulfilled", value: _e });
                    },
                    function (_e) {
                      return (N[z] = { status: "rejected", reason: _e });
                    }
                  )
                  .then(function () {
                    return --A || S(N);
                  });
              });
            });
          }),
        Qt.any &&
          typeof AggregateError < "u" &&
          y(Et, "any", function () {
            var f = De.apply(null, arguments).map(Jp);
            return new Et(function (S, A) {
              f.length === 0 && A(new AggregateError([]));
              var N = f.length,
                G = new Array(N);
              f.forEach(function (z, _e) {
                return Et.resolve(z).then(
                  function (Ie) {
                    return S(Ie);
                  },
                  function (Ie) {
                    (G[_e] = Ie), --N || A(new AggregateError(G));
                  }
                );
              });
            });
          }));
    var ir = { awaits: 0, echoes: 0, id: 0 },
      JI = 0,
      Yp = [],
      Xp = 0,
      Qp = 0,
      ZI = 0;
    function Xa(f, S, A, N) {
      var G = Rt,
        z = Object.create(G);
      return (
        (z.parent = G),
        (z.ref = 0),
        (z.global = !1),
        (z.id = ++ZI),
        ds.env,
        (z.env = Bt
          ? {
              Promise: Et,
              PromiseProp: { value: Et, configurable: !0, writable: !0 },
              all: Et.all,
              race: Et.race,
              allSettled: Et.allSettled,
              any: Et.any,
              resolve: Et.resolve,
              reject: Et.reject,
            }
          : {}),
        S && u(z, S),
        ++G.ref,
        (z.finalize = function () {
          --this.parent.ref || this.parent.finalize();
        }),
        (N = ro(z, f, A, N)),
        z.ref === 0 && z.finalize(),
        N
      );
    }
    function Bl() {
      return ir.id || (ir.id = ++JI), ++ir.awaits, (ir.echoes += tn), ir.id;
    }
    function Ko() {
      return (
        !!ir.awaits &&
        (--ir.awaits == 0 && (ir.id = 0), (ir.echoes = ir.awaits * tn), !0)
      );
    }
    function Jp(f) {
      return ir.echoes && f && f.constructor === Qt
        ? (Bl(),
          f.then(
            function (S) {
              return Ko(), S;
            },
            function (S) {
              return Ko(), xs(S);
            }
          ))
        : f;
    }
    function eC() {
      var f = Yp[Yp.length - 1];
      Yp.pop(), Bo(f, !1);
    }
    function Bo(f, S) {
      var A,
        N = Rt;
      (S ? !ir.echoes || (Xp++ && f === Rt) : !Xp || (--Xp && f === Rt)) ||
        queueMicrotask(
          S
            ? function (G) {
                ++Qp,
                  (ir.echoes && --ir.echoes != 0) ||
                    (ir.echoes = ir.awaits = ir.id = 0),
                  Yp.push(Rt),
                  Bo(G, !0);
              }.bind(null, f)
            : eC
        ),
        f !== Rt &&
          ((Rt = f),
          N === ds && (ds.env = v_()),
          Bt &&
            ((A = ds.env.Promise),
            (S = f.env),
            (N.global || f.global) &&
              (Object.defineProperty(s, "Promise", S.PromiseProp),
              (A.all = S.all),
              (A.race = S.race),
              (A.resolve = S.resolve),
              (A.reject = S.reject),
              S.allSettled && (A.allSettled = S.allSettled),
              S.any && (A.any = S.any))));
    }
    function v_() {
      var f = s.Promise;
      return Bt
        ? {
            Promise: f,
            PromiseProp: Object.getOwnPropertyDescriptor(s, "Promise"),
            all: f.all,
            race: f.race,
            allSettled: f.allSettled,
            any: f.any,
            resolve: f.resolve,
            reject: f.reject,
          }
        : {};
    }
    function ro(f, S, A, N, G) {
      var z = Rt;
      try {
        return Bo(f, !0), S(A, N, G);
      } finally {
        Bo(z, !1);
      }
    }
    function __(f, S, A, N) {
      return typeof f != "function"
        ? f
        : function () {
            var G = Rt;
            A && Bl(), Bo(S, !0);
            try {
              return f.apply(this, arguments);
            } finally {
              Bo(G, !1), N && queueMicrotask(Ko);
            }
          };
    }
    function oS(f) {
      Promise === Qt && ir.echoes === 0
        ? Xp === 0
          ? f()
          : enqueueNativeMicroTask(f)
        : setTimeout(f, 0);
    }
    ("" + wi).indexOf("[native code]") === -1 && (Bl = Ko = ct);
    var xs = Et.reject,
      be = String.fromCharCode(65535),
      He =
        "Invalid key provided. Keys must be of type string, number, Date or Array<string | number | Date>.",
      We = "String expected.",
      dt = [],
      ft = "__dbnames",
      Ot = "readonly",
      xt = "readwrite";
    function Sn(f, S) {
      return f
        ? S
          ? function () {
              return f.apply(this, arguments) && S.apply(this, arguments);
            }
          : f
        : S;
    }
    var Hn = {
      type: 3,
      lower: -1 / 0,
      lowerOpen: !1,
      upper: [[]],
      upperOpen: !1,
    };
    function da(f) {
      return typeof f != "string" || /\./.test(f)
        ? function (S) {
            return S;
          }
        : function (S) {
            return S[f] === void 0 && f in S && delete (S = Ce(S))[f], S;
          };
    }
    function Qa() {
      throw Re.Type();
    }
    function un(f, S) {
      try {
        var A = Gr(f),
          N = Gr(S);
        if (A !== N)
          return A === "Array"
            ? 1
            : N === "Array"
            ? -1
            : A === "binary"
            ? 1
            : N === "binary"
            ? -1
            : A === "string"
            ? 1
            : N === "string"
            ? -1
            : A === "Date"
            ? 1
            : N !== "Date"
            ? NaN
            : -1;
        switch (A) {
          case "number":
          case "Date":
          case "string":
            return S < f ? 1 : f < S ? -1 : 0;
          case "binary":
            return (function (G, z) {
              for (
                var _e = G.length,
                  Ie = z.length,
                  Le = _e < Ie ? _e : Ie,
                  ke = 0;
                ke < Le;
                ++ke
              )
                if (G[ke] !== z[ke]) return G[ke] < z[ke] ? -1 : 1;
              return _e === Ie ? 0 : _e < Ie ? -1 : 1;
            })(ao(f), ao(S));
          case "Array":
            return (function (G, z) {
              for (
                var _e = G.length,
                  Ie = z.length,
                  Le = _e < Ie ? _e : Ie,
                  ke = 0;
                ke < Le;
                ++ke
              ) {
                var Ve = un(G[ke], z[ke]);
                if (Ve !== 0) return Ve;
              }
              return _e === Ie ? 0 : _e < Ie ? -1 : 1;
            })(f, S);
        }
      } catch {}
      return NaN;
    }
    function Gr(f) {
      var S = typeof f;
      return S != "object"
        ? S
        : ArrayBuffer.isView(f)
        ? "binary"
        : ((f = x(f)), f === "ArrayBuffer" ? "binary" : f);
    }
    function ao(f) {
      return f instanceof Uint8Array
        ? f
        : ArrayBuffer.isView(f)
        ? new Uint8Array(f.buffer, f.byteOffset, f.byteLength)
        : new Uint8Array(f);
    }
    var _F =
      ((vs.prototype._trans = function (f, S, A) {
        var N = this._tx || Rt.trans,
          G = this.name,
          z =
            It &&
            typeof console < "u" &&
            console.createTask &&
            console.createTask(
              "Dexie: "
                .concat(f === "readonly" ? "read" : "write", " ")
                .concat(this.name)
            );
        function _e(ke, Ve, Ne) {
          if (!Ne.schema[G])
            throw new Re.NotFound("Table " + G + " not part of transaction");
          return S(Ne.idbtrans, Ne);
        }
        var Ie = Kl();
        try {
          var Le =
            N && N.db._novip === this.db._novip
              ? N === Rt.trans
                ? N._promise(f, _e, A)
                : Xa(
                    function () {
                      return N._promise(f, _e, A);
                    },
                    { trans: N, transless: Rt.transless || Rt }
                  )
              : (function ke(Ve, Ne, je, xe) {
                  if (
                    Ve.idbdb &&
                    (Ve._state.openComplete || Rt.letThrough || Ve._vip)
                  ) {
                    var Ue = Ve._createTransaction(Ne, je, Ve._dbSchema);
                    try {
                      Ue.create(), (Ve._state.PR1398_maxLoop = 3);
                    } catch (ze) {
                      return ze.name === Ge.InvalidState &&
                        Ve.isOpen() &&
                        0 < --Ve._state.PR1398_maxLoop
                        ? (console.warn("Dexie: Need to reopen db"),
                          Ve.close({ disableAutoOpen: !1 }),
                          Ve.open().then(function () {
                            return ke(Ve, Ne, je, xe);
                          }))
                        : xs(ze);
                    }
                    return Ue._promise(Ne, function (ze, Fe) {
                      return Xa(function () {
                        return (Rt.trans = Ue), xe(ze, Fe, Ue);
                      });
                    }).then(function (ze) {
                      if (Ne === "readwrite")
                        try {
                          Ue.idbtrans.commit();
                        } catch {}
                      return Ne === "readonly"
                        ? ze
                        : Ue._completion.then(function () {
                            return ze;
                          });
                    });
                  }
                  if (Ve._state.openComplete)
                    return xs(new Re.DatabaseClosed(Ve._state.dbOpenError));
                  if (!Ve._state.isBeingOpened) {
                    if (!Ve._state.autoOpen) return xs(new Re.DatabaseClosed());
                    Ve.open().catch(ct);
                  }
                  return Ve._state.dbReadyPromise.then(function () {
                    return ke(Ve, Ne, je, xe);
                  });
                })(this.db, f, [this.name], _e);
          return (
            z &&
              ((Le._consoleTask = z),
              (Le = Le.catch(function (ke) {
                return console.trace(ke), xs(ke);
              }))),
            Le
          );
        } finally {
          Ie && zs();
        }
      }),
      (vs.prototype.get = function (f, S) {
        var A = this;
        return f && f.constructor === Object
          ? this.where(f).first(S)
          : f == null
          ? xs(new Re.Type("Invalid argument to Table.get()"))
          : this._trans("readonly", function (N) {
              return A.core.get({ trans: N, key: f }).then(function (G) {
                return A.hook.reading.fire(G);
              });
            }).then(S);
      }),
      (vs.prototype.where = function (f) {
        if (typeof f == "string") return new this.db.WhereClause(this, f);
        if (o(f))
          return new this.db.WhereClause(this, "[".concat(f.join("+"), "]"));
        var S = i(f);
        if (S.length === 1) return this.where(S[0]).equals(f[S[0]]);
        var A = this.schema.indexes
          .concat(this.schema.primKey)
          .filter(function (Le) {
            if (
              Le.compound &&
              S.every(function (Ve) {
                return 0 <= Le.keyPath.indexOf(Ve);
              })
            ) {
              for (var ke = 0; ke < S.length; ++ke)
                if (S.indexOf(Le.keyPath[ke]) === -1) return !1;
              return !0;
            }
            return !1;
          })
          .sort(function (Le, ke) {
            return Le.keyPath.length - ke.keyPath.length;
          })[0];
        if (A && this.db._maxKey !== be) {
          var _e = A.keyPath.slice(0, S.length);
          return this.where(_e).equals(
            _e.map(function (ke) {
              return f[ke];
            })
          );
        }
        !A &&
          It &&
          console.warn(
            "The query "
              .concat(JSON.stringify(f), " on ")
              .concat(this.name, " would benefit from a ") +
              "compound index [".concat(S.join("+"), "]")
          );
        var N = this.schema.idxByName,
          G = this.db._deps.indexedDB;
        function z(Le, ke) {
          return G.cmp(Le, ke) === 0;
        }
        var Ie = S.reduce(
            function (je, ke) {
              var Ve = je[0],
                Ne = je[1],
                je = N[ke],
                xe = f[ke];
              return [
                Ve || je,
                Ve || !je
                  ? Sn(
                      Ne,
                      je && je.multi
                        ? function (Ue) {
                            return (
                              (Ue = de(Ue, ke)),
                              o(Ue) &&
                                Ue.some(function (ze) {
                                  return z(xe, ze);
                                })
                            );
                          }
                        : function (Ue) {
                            return z(xe, de(Ue, ke));
                          }
                    )
                  : Ne,
              ];
            },
            [null, null]
          ),
          _e = Ie[0],
          Ie = Ie[1];
        return _e
          ? this.where(_e.name).equals(f[_e.keyPath]).filter(Ie)
          : A
          ? this.filter(Ie)
          : this.where(S).equals("");
      }),
      (vs.prototype.filter = function (f) {
        return this.toCollection().and(f);
      }),
      (vs.prototype.count = function (f) {
        return this.toCollection().count(f);
      }),
      (vs.prototype.offset = function (f) {
        return this.toCollection().offset(f);
      }),
      (vs.prototype.limit = function (f) {
        return this.toCollection().limit(f);
      }),
      (vs.prototype.each = function (f) {
        return this.toCollection().each(f);
      }),
      (vs.prototype.toArray = function (f) {
        return this.toCollection().toArray(f);
      }),
      (vs.prototype.toCollection = function () {
        return new this.db.Collection(new this.db.WhereClause(this));
      }),
      (vs.prototype.orderBy = function (f) {
        return new this.db.Collection(
          new this.db.WhereClause(this, o(f) ? "[".concat(f.join("+"), "]") : f)
        );
      }),
      (vs.prototype.reverse = function () {
        return this.toCollection().reverse();
      }),
      (vs.prototype.mapToClass = function (f) {
        var S,
          A = this.db,
          N = this.name;
        function G() {
          return (S !== null && S.apply(this, arguments)) || this;
        }
        (this.schema.mappedClass = f).prototype instanceof Qa &&
          ((function (Le, ke) {
            if (typeof ke != "function" && ke !== null)
              throw new TypeError(
                "Class extends value " +
                  String(ke) +
                  " is not a constructor or null"
              );
            function Ve() {
              this.constructor = Le;
            }
            n(Le, ke),
              (Le.prototype =
                ke === null
                  ? Object.create(ke)
                  : ((Ve.prototype = ke.prototype), new Ve()));
          })(G, (S = f)),
          Object.defineProperty(G.prototype, "db", {
            get: function () {
              return A;
            },
            enumerable: !1,
            configurable: !0,
          }),
          (G.prototype.table = function () {
            return N;
          }),
          (f = G));
        for (var z = new Set(), _e = f.prototype; _e; _e = l(_e))
          Object.getOwnPropertyNames(_e).forEach(function (Le) {
            return z.add(Le);
          });
        function Ie(Le) {
          if (!Le) return Le;
          var ke,
            Ve = Object.create(f.prototype);
          for (ke in Le)
            if (!z.has(ke))
              try {
                Ve[ke] = Le[ke];
              } catch {}
          return Ve;
        }
        return (
          this.schema.readHook &&
            this.hook.reading.unsubscribe(this.schema.readHook),
          (this.schema.readHook = Ie),
          this.hook("reading", Ie),
          f
        );
      }),
      (vs.prototype.defineClass = function () {
        return this.mapToClass(function (f) {
          u(this, f);
        });
      }),
      (vs.prototype.add = function (f, S) {
        var A = this,
          N = this.schema.primKey,
          G = N.auto,
          z = N.keyPath,
          _e = f;
        return (
          z && G && (_e = da(z)(f)),
          this._trans("readwrite", function (Ie) {
            return A.core.mutate({
              trans: Ie,
              type: "add",
              keys: S != null ? [S] : null,
              values: [_e],
            });
          })
            .then(function (Ie) {
              return Ie.numFailures ? Et.reject(Ie.failures[0]) : Ie.lastResult;
            })
            .then(function (Ie) {
              if (z)
                try {
                  U(f, z, Ie);
                } catch {}
              return Ie;
            })
        );
      }),
      (vs.prototype.update = function (f, S) {
        return typeof f != "object" || o(f)
          ? this.where(":id").equals(f).modify(S)
          : ((f = de(f, this.schema.primKey.keyPath)),
            f === void 0
              ? xs(
                  new Re.InvalidArgument(
                    "Given object does not contain its primary key"
                  )
                )
              : this.where(":id").equals(f).modify(S));
      }),
      (vs.prototype.put = function (f, S) {
        var A = this,
          N = this.schema.primKey,
          G = N.auto,
          z = N.keyPath,
          _e = f;
        return (
          z && G && (_e = da(z)(f)),
          this._trans("readwrite", function (Ie) {
            return A.core.mutate({
              trans: Ie,
              type: "put",
              values: [_e],
              keys: S != null ? [S] : null,
            });
          })
            .then(function (Ie) {
              return Ie.numFailures ? Et.reject(Ie.failures[0]) : Ie.lastResult;
            })
            .then(function (Ie) {
              if (z)
                try {
                  U(f, z, Ie);
                } catch {}
              return Ie;
            })
        );
      }),
      (vs.prototype.delete = function (f) {
        var S = this;
        return this._trans("readwrite", function (A) {
          return S.core.mutate({ trans: A, type: "delete", keys: [f] });
        }).then(function (A) {
          return A.numFailures ? Et.reject(A.failures[0]) : void 0;
        });
      }),
      (vs.prototype.clear = function () {
        var f = this;
        return this._trans("readwrite", function (S) {
          return f.core.mutate({ trans: S, type: "deleteRange", range: Hn });
        }).then(function (S) {
          return S.numFailures ? Et.reject(S.failures[0]) : void 0;
        });
      }),
      (vs.prototype.bulkGet = function (f) {
        var S = this;
        return this._trans("readonly", function (A) {
          return S.core.getMany({ keys: f, trans: A }).then(function (N) {
            return N.map(function (G) {
              return S.hook.reading.fire(G);
            });
          });
        });
      }),
      (vs.prototype.bulkAdd = function (f, S, A) {
        var N = this,
          G = Array.isArray(S) ? S : void 0,
          z = (A = A || (G ? void 0 : S)) ? A.allKeys : void 0;
        return this._trans("readwrite", function (_e) {
          var ke = N.schema.primKey,
            Ie = ke.auto,
            ke = ke.keyPath;
          if (ke && G)
            throw new Re.InvalidArgument(
              "bulkAdd(): keys argument invalid on tables with inbound keys"
            );
          if (G && G.length !== f.length)
            throw new Re.InvalidArgument(
              "Arguments objects and keys must have the same length"
            );
          var Le = f.length,
            ke = ke && Ie ? f.map(da(ke)) : f;
          return N.core
            .mutate({
              trans: _e,
              type: "add",
              keys: G,
              values: ke,
              wantResults: z,
            })
            .then(function (Ue) {
              var Ne = Ue.numFailures,
                je = Ue.results,
                xe = Ue.lastResult,
                Ue = Ue.failures;
              if (Ne === 0) return z ? je : xe;
              throw new K(
                ""
                  .concat(N.name, ".bulkAdd(): ")
                  .concat(Ne, " of ")
                  .concat(Le, " operations failed"),
                Ue
              );
            });
        });
      }),
      (vs.prototype.bulkPut = function (f, S, A) {
        var N = this,
          G = Array.isArray(S) ? S : void 0,
          z = (A = A || (G ? void 0 : S)) ? A.allKeys : void 0;
        return this._trans("readwrite", function (_e) {
          var ke = N.schema.primKey,
            Ie = ke.auto,
            ke = ke.keyPath;
          if (ke && G)
            throw new Re.InvalidArgument(
              "bulkPut(): keys argument invalid on tables with inbound keys"
            );
          if (G && G.length !== f.length)
            throw new Re.InvalidArgument(
              "Arguments objects and keys must have the same length"
            );
          var Le = f.length,
            ke = ke && Ie ? f.map(da(ke)) : f;
          return N.core
            .mutate({
              trans: _e,
              type: "put",
              keys: G,
              values: ke,
              wantResults: z,
            })
            .then(function (Ue) {
              var Ne = Ue.numFailures,
                je = Ue.results,
                xe = Ue.lastResult,
                Ue = Ue.failures;
              if (Ne === 0) return z ? je : xe;
              throw new K(
                ""
                  .concat(N.name, ".bulkPut(): ")
                  .concat(Ne, " of ")
                  .concat(Le, " operations failed"),
                Ue
              );
            });
        });
      }),
      (vs.prototype.bulkUpdate = function (f) {
        var S = this,
          A = this.core,
          N = f.map(function (_e) {
            return _e.key;
          }),
          G = f.map(function (_e) {
            return _e.changes;
          }),
          z = [];
        return this._trans("readwrite", function (_e) {
          return A.getMany({ trans: _e, keys: N, cache: "clone" }).then(
            function (Ie) {
              var Le = [],
                ke = [];
              f.forEach(function (Ne, je) {
                var xe = Ne.key,
                  Ue = Ne.changes,
                  ze = Ie[je];
                if (ze) {
                  for (var Fe = 0, qe = Object.keys(Ue); Fe < qe.length; Fe++) {
                    var Ye = qe[Fe],
                      Je = Ue[Ye];
                    if (Ye === S.schema.primKey.keyPath) {
                      if (un(Je, xe) !== 0)
                        throw new Re.Constraint(
                          "Cannot update primary key in bulkUpdate()"
                        );
                    } else U(ze, Ye, Je);
                  }
                  z.push(je), Le.push(xe), ke.push(ze);
                }
              });
              var Ve = Le.length;
              return A.mutate({
                trans: _e,
                type: "put",
                keys: Le,
                values: ke,
                updates: { keys: N, changeSpecs: G },
              }).then(function (Ne) {
                var je = Ne.numFailures,
                  xe = Ne.failures;
                if (je === 0) return Ve;
                for (var Ue = 0, ze = Object.keys(xe); Ue < ze.length; Ue++) {
                  var Fe,
                    qe = ze[Ue],
                    Ye = z[Number(qe)];
                  Ye != null && ((Fe = xe[qe]), delete xe[qe], (xe[Ye] = Fe));
                }
                throw new K(
                  ""
                    .concat(S.name, ".bulkUpdate(): ")
                    .concat(je, " of ")
                    .concat(Ve, " operations failed"),
                  xe
                );
              });
            }
          );
        });
      }),
      (vs.prototype.bulkDelete = function (f) {
        var S = this,
          A = f.length;
        return this._trans("readwrite", function (N) {
          return S.core.mutate({ trans: N, type: "delete", keys: f });
        }).then(function (_e) {
          var G = _e.numFailures,
            z = _e.lastResult,
            _e = _e.failures;
          if (G === 0) return z;
          throw new K(
            ""
              .concat(S.name, ".bulkDelete(): ")
              .concat(G, " of ")
              .concat(A, " operations failed"),
            _e
          );
        });
      }),
      vs);
    function vs() {}
    function uS(f) {
      function S(_e, Ie) {
        if (Ie) {
          for (var Le = arguments.length, ke = new Array(Le - 1); --Le; )
            ke[Le - 1] = arguments[Le];
          return A[_e].subscribe.apply(null, ke), f;
        }
        if (typeof _e == "string") return A[_e];
      }
      var A = {};
      S.addEventType = z;
      for (var N = 1, G = arguments.length; N < G; ++N) z(arguments[N]);
      return S;
      function z(_e, Ie, Le) {
        if (typeof _e != "object") {
          var ke;
          Ie = Ie || pt;
          var Ve = {
            subscribers: [],
            fire: (Le = Le || ct),
            subscribe: function (Ne) {
              Ve.subscribers.indexOf(Ne) === -1 &&
                (Ve.subscribers.push(Ne), (Ve.fire = Ie(Ve.fire, Ne)));
            },
            unsubscribe: function (Ne) {
              (Ve.subscribers = Ve.subscribers.filter(function (je) {
                return je !== Ne;
              })),
                (Ve.fire = Ve.subscribers.reduce(Ie, Le));
            },
          };
          return (A[_e] = S[_e] = Ve);
        }
        i((ke = _e)).forEach(function (Ne) {
          var je = ke[Ne];
          if (o(je)) z(Ne, ke[Ne][0], ke[Ne][1]);
          else {
            if (je !== "asap")
              throw new Re.InvalidArgument("Invalid event config");
            var xe = z(Ne, ot, function () {
              for (var Ue = arguments.length, ze = new Array(Ue); Ue--; )
                ze[Ue] = arguments[Ue];
              xe.subscribers.forEach(function (Fe) {
                he(function () {
                  Fe.apply(null, ze);
                });
              });
            });
          }
        });
      }
    }
    function lS(f, S) {
      return I(S).from({ prototype: f }), S;
    }
    function Zp(f, S) {
      return (
        !(f.filter || f.algorithm || f.or) &&
        (S ? f.justLimit : !f.replayFilter)
      );
    }
    function tC(f, S) {
      f.filter = Sn(f.filter, S);
    }
    function nC(f, S, A) {
      var N = f.replayFilter;
      (f.replayFilter = N
        ? function () {
            return Sn(N(), S());
          }
        : S),
        (f.justLimit = A && !N);
    }
    function b_(f, S) {
      if (f.isPrimKey) return S.primaryKey;
      var A = S.getIndexByKeyPath(f.index);
      if (!A)
        throw new Re.Schema(
          "KeyPath " +
            f.index +
            " on object store " +
            S.name +
            " is not indexed"
        );
      return A;
    }
    function bF(f, S, A) {
      var N = b_(f, S.schema);
      return S.openCursor({
        trans: A,
        values: !f.keysOnly,
        reverse: f.dir === "prev",
        unique: !!f.unique,
        query: { index: N, range: f.range },
      });
    }
    function E_(f, S, A, N) {
      var G = f.replayFilter ? Sn(f.filter, f.replayFilter()) : f.filter;
      if (f.or) {
        var z = {},
          _e = function (Ie, Le, ke) {
            var Ve, Ne;
            (G &&
              !G(
                Le,
                ke,
                function (je) {
                  return Le.stop(je);
                },
                function (je) {
                  return Le.fail(je);
                }
              )) ||
              ((Ne = "" + (Ve = Le.primaryKey)) == "[object ArrayBuffer]" &&
                (Ne = "" + new Uint8Array(Ve)),
              d(z, Ne) || ((z[Ne] = !0), S(Ie, Le, ke)));
          };
        return Promise.all([
          f.or._iterate(_e, A),
          EF(bF(f, N, A), f.algorithm, _e, !f.keysOnly && f.valueMapper),
        ]);
      }
      return EF(
        bF(f, N, A),
        Sn(f.algorithm, G),
        S,
        !f.keysOnly && f.valueMapper
      );
    }
    function EF(f, S, A, N) {
      var G = ps(
        N
          ? function (z, _e, Ie) {
              return A(N(z), _e, Ie);
            }
          : A
      );
      return f.then(function (z) {
        if (z)
          return z.start(function () {
            var _e = function () {
              return z.continue();
            };
            (S &&
              !S(
                z,
                function (Ie) {
                  return (_e = Ie);
                },
                function (Ie) {
                  z.stop(Ie), (_e = ct);
                },
                function (Ie) {
                  z.fail(Ie), (_e = ct);
                }
              )) ||
              G(z.value, z, function (Ie) {
                return (_e = Ie);
              }),
              _e();
          });
      });
    }
    var Gu = Symbol(),
      sC =
        ((TF.prototype.execute = function (f) {
          var S =
            (S = this.replacePrefix) === null || S === void 0 ? void 0 : S[0];
          return S && typeof f == "string" && f.startsWith(S)
            ? this.replacePrefix[1] + f.substring(S.length)
            : f;
        }),
        TF);
    function TF(f) {
      Object.assign(this, f);
    }
    var aSe =
      ((Kn.prototype._read = function (f, S) {
        var A = this._ctx;
        return A.error
          ? A.table._trans(null, xs.bind(null, A.error))
          : A.table._trans("readonly", f).then(S);
      }),
      (Kn.prototype._write = function (f) {
        var S = this._ctx;
        return S.error
          ? S.table._trans(null, xs.bind(null, S.error))
          : S.table._trans("readwrite", f, "locked");
      }),
      (Kn.prototype._addAlgorithm = function (f) {
        var S = this._ctx;
        S.algorithm = Sn(S.algorithm, f);
      }),
      (Kn.prototype._iterate = function (f, S) {
        return E_(this._ctx, f, S, this._ctx.table.core);
      }),
      (Kn.prototype.clone = function (f) {
        var S = Object.create(this.constructor.prototype),
          A = Object.create(this._ctx);
        return f && u(A, f), (S._ctx = A), S;
      }),
      (Kn.prototype.raw = function () {
        return (this._ctx.valueMapper = null), this;
      }),
      (Kn.prototype.each = function (f) {
        var S = this._ctx;
        return this._read(function (A) {
          return E_(S, f, A, S.table.core);
        });
      }),
      (Kn.prototype.count = function (f) {
        var S = this;
        return this._read(function (A) {
          var N = S._ctx,
            G = N.table.core;
          if (Zp(N, !0))
            return G.count({
              trans: A,
              query: { index: b_(N, G.schema), range: N.range },
            }).then(function (_e) {
              return Math.min(_e, N.limit);
            });
          var z = 0;
          return E_(
            N,
            function () {
              return ++z, !1;
            },
            A,
            G
          ).then(function () {
            return z;
          });
        }).then(f);
      }),
      (Kn.prototype.sortBy = function (f, S) {
        var A = f.split(".").reverse(),
          N = A[0],
          G = A.length - 1;
        function z(Le, ke) {
          return ke ? z(Le[A[ke]], ke - 1) : Le[N];
        }
        var _e = this._ctx.dir === "next" ? 1 : -1;
        function Ie(Le, ke) {
          return (
            (Le = z(Le, G)), (ke = z(ke, G)), Le < ke ? -_e : ke < Le ? _e : 0
          );
        }
        return this.toArray(function (Le) {
          return Le.sort(Ie);
        }).then(S);
      }),
      (Kn.prototype.toArray = function (f) {
        var S = this;
        return this._read(function (A) {
          var N = S._ctx;
          if (N.dir === "next" && Zp(N, !0) && 0 < N.limit) {
            var G = N.valueMapper,
              z = b_(N, N.table.core.schema);
            return N.table.core
              .query({
                trans: A,
                limit: N.limit,
                values: !0,
                query: { index: z, range: N.range },
              })
              .then(function (Ie) {
                return (Ie = Ie.result), G ? Ie.map(G) : Ie;
              });
          }
          var _e = [];
          return E_(
            N,
            function (Ie) {
              return _e.push(Ie);
            },
            A,
            N.table.core
          ).then(function () {
            return _e;
          });
        }, f);
      }),
      (Kn.prototype.offset = function (f) {
        var S = this._ctx;
        return (
          f <= 0 ||
            ((S.offset += f),
            Zp(S)
              ? nC(S, function () {
                  var A = f;
                  return function (N, G) {
                    return (
                      A === 0 ||
                      (A === 1
                        ? --A
                        : G(function () {
                            N.advance(A), (A = 0);
                          }),
                      !1)
                    );
                  };
                })
              : nC(S, function () {
                  var A = f;
                  return function () {
                    return --A < 0;
                  };
                })),
          this
        );
      }),
      (Kn.prototype.limit = function (f) {
        return (
          (this._ctx.limit = Math.min(this._ctx.limit, f)),
          nC(
            this._ctx,
            function () {
              var S = f;
              return function (A, N, G) {
                return --S <= 0 && N(G), 0 <= S;
              };
            },
            !0
          ),
          this
        );
      }),
      (Kn.prototype.until = function (f, S) {
        return (
          tC(this._ctx, function (A, N, G) {
            return !f(A.value) || (N(G), S);
          }),
          this
        );
      }),
      (Kn.prototype.first = function (f) {
        return this.limit(1)
          .toArray(function (S) {
            return S[0];
          })
          .then(f);
      }),
      (Kn.prototype.last = function (f) {
        return this.reverse().first(f);
      }),
      (Kn.prototype.filter = function (f) {
        var S;
        return (
          tC(this._ctx, function (A) {
            return f(A.value);
          }),
          ((S = this._ctx).isMatch = Sn(S.isMatch, f)),
          this
        );
      }),
      (Kn.prototype.and = function (f) {
        return this.filter(f);
      }),
      (Kn.prototype.or = function (f) {
        return new this.db.WhereClause(this._ctx.table, f, this);
      }),
      (Kn.prototype.reverse = function () {
        return (
          (this._ctx.dir = this._ctx.dir === "prev" ? "next" : "prev"),
          this._ondirectionchange && this._ondirectionchange(this._ctx.dir),
          this
        );
      }),
      (Kn.prototype.desc = function () {
        return this.reverse();
      }),
      (Kn.prototype.eachKey = function (f) {
        var S = this._ctx;
        return (
          (S.keysOnly = !S.isMatch),
          this.each(function (A, N) {
            f(N.key, N);
          })
        );
      }),
      (Kn.prototype.eachUniqueKey = function (f) {
        return (this._ctx.unique = "unique"), this.eachKey(f);
      }),
      (Kn.prototype.eachPrimaryKey = function (f) {
        var S = this._ctx;
        return (
          (S.keysOnly = !S.isMatch),
          this.each(function (A, N) {
            f(N.primaryKey, N);
          })
        );
      }),
      (Kn.prototype.keys = function (f) {
        var S = this._ctx;
        S.keysOnly = !S.isMatch;
        var A = [];
        return this.each(function (N, G) {
          A.push(G.key);
        })
          .then(function () {
            return A;
          })
          .then(f);
      }),
      (Kn.prototype.primaryKeys = function (f) {
        var S = this._ctx;
        if (S.dir === "next" && Zp(S, !0) && 0 < S.limit)
          return this._read(function (N) {
            var G = b_(S, S.table.core.schema);
            return S.table.core.query({
              trans: N,
              values: !1,
              limit: S.limit,
              query: { index: G, range: S.range },
            });
          })
            .then(function (N) {
              return N.result;
            })
            .then(f);
        S.keysOnly = !S.isMatch;
        var A = [];
        return this.each(function (N, G) {
          A.push(G.primaryKey);
        })
          .then(function () {
            return A;
          })
          .then(f);
      }),
      (Kn.prototype.uniqueKeys = function (f) {
        return (this._ctx.unique = "unique"), this.keys(f);
      }),
      (Kn.prototype.firstKey = function (f) {
        return this.limit(1)
          .keys(function (S) {
            return S[0];
          })
          .then(f);
      }),
      (Kn.prototype.lastKey = function (f) {
        return this.reverse().firstKey(f);
      }),
      (Kn.prototype.distinct = function () {
        var f = this._ctx,
          f = f.index && f.table.schema.idxByName[f.index];
        if (!f || !f.multi) return this;
        var S = {};
        return (
          tC(this._ctx, function (G) {
            var N = G.primaryKey.toString(),
              G = d(S, N);
            return (S[N] = !0), !G;
          }),
          this
        );
      }),
      (Kn.prototype.modify = function (f) {
        var S = this,
          A = this._ctx;
        return this._write(function (N) {
          var G, z, _e;
          _e =
            typeof f == "function"
              ? f
              : ((G = i(f)),
                (z = G.length),
                function (Fe) {
                  for (var qe = !1, Ye = 0; Ye < z; ++Ye) {
                    var Je = G[Ye],
                      et = f[Je],
                      ut = de(Fe, Je);
                    et instanceof sC
                      ? (U(Fe, Je, et.execute(ut)), (qe = !0))
                      : ut !== et && (U(Fe, Je, et), (qe = !0));
                  }
                  return qe;
                });
          function Ie(Fe, Je) {
            var Ye = Je.failures,
              Je = Je.numFailures;
            Ue += Fe - Je;
            for (var et = 0, ut = i(Ye); et < ut.length; et++) {
              var Tt = ut[et];
              xe.push(Ye[Tt]);
            }
          }
          var Le = A.table.core,
            ke = Le.schema.primaryKey,
            Ve = ke.outbound,
            Ne = ke.extractKey,
            je = S.db._options.modifyChunkSize || 200,
            xe = [],
            Ue = 0,
            ze = [];
          return S.clone()
            .primaryKeys()
            .then(function (Fe) {
              function qe(Ye) {
                var Je = Math.min(je, Fe.length - Ye);
                return Le.getMany({
                  trans: N,
                  keys: Fe.slice(Ye, Ye + Je),
                  cache: "immutable",
                }).then(function (et) {
                  for (
                    var ut = [], Tt = [], mt = Ve ? [] : null, vt = [], wt = 0;
                    wt < Je;
                    ++wt
                  ) {
                    var Pt = et[wt],
                      Jt = { value: Ce(Pt), primKey: Fe[Ye + wt] };
                    _e.call(Jt, Jt.value, Jt) !== !1 &&
                      (Jt.value == null
                        ? vt.push(Fe[Ye + wt])
                        : Ve || un(Ne(Pt), Ne(Jt.value)) === 0
                        ? (Tt.push(Jt.value), Ve && mt.push(Fe[Ye + wt]))
                        : (vt.push(Fe[Ye + wt]), ut.push(Jt.value)));
                  }
                  var gn = Zp(A) &&
                    A.limit === 1 / 0 &&
                    (typeof f != "function" || f === rC) && {
                      index: A.index,
                      range: A.range,
                    };
                  return Promise.resolve(
                    0 < ut.length &&
                      Le.mutate({ trans: N, type: "add", values: ut }).then(
                        function (Cn) {
                          for (var vn in Cn.failures)
                            vt.splice(parseInt(vn), 1);
                          Ie(ut.length, Cn);
                        }
                      )
                  )
                    .then(function () {
                      return (
                        (0 < Tt.length || (gn && typeof f == "object")) &&
                        Le.mutate({
                          trans: N,
                          type: "put",
                          keys: mt,
                          values: Tt,
                          criteria: gn,
                          changeSpec: typeof f != "function" && f,
                        }).then(function (Cn) {
                          return Ie(Tt.length, Cn);
                        })
                      );
                    })
                    .then(function () {
                      return (
                        (0 < vt.length || (gn && f === rC)) &&
                        Le.mutate({
                          trans: N,
                          type: "delete",
                          keys: vt,
                          criteria: gn,
                        }).then(function (Cn) {
                          return Ie(vt.length, Cn);
                        })
                      );
                    })
                    .then(function () {
                      return Fe.length > Ye + Je && qe(Ye + je);
                    });
                });
              }
              return qe(0).then(function () {
                if (0 < xe.length)
                  throw new me(
                    "Error modifying one or more objects",
                    xe,
                    Ue,
                    ze
                  );
                return Fe.length;
              });
            });
        });
      }),
      (Kn.prototype.delete = function () {
        var f = this._ctx,
          S = f.range;
        return Zp(f) && (f.isPrimKey || S.type === 3)
          ? this._write(function (A) {
              var N = f.table.core.schema.primaryKey,
                G = S;
              return f.table.core
                .count({ trans: A, query: { index: N, range: G } })
                .then(function (z) {
                  return f.table.core
                    .mutate({ trans: A, type: "deleteRange", range: G })
                    .then(function (_e) {
                      var Ie = _e.failures;
                      if (
                        (_e.lastResult, _e.results, (_e = _e.numFailures), _e)
                      )
                        throw new me(
                          "Could not delete some values",
                          Object.keys(Ie).map(function (Le) {
                            return Ie[Le];
                          }),
                          z - _e
                        );
                      return z - _e;
                    });
                });
            })
          : this.modify(rC);
      }),
      Kn);
    function Kn() {}
    var rC = function (f, S) {
      return (S.value = null);
    };
    function iSe(f, S) {
      return f < S ? -1 : f === S ? 0 : 1;
    }
    function oSe(f, S) {
      return S < f ? -1 : f === S ? 0 : 1;
    }
    function Ja(f, S, A) {
      return (
        (f = f instanceof PF ? new f.Collection(f) : f),
        (f._ctx.error = new (A || TypeError)(S)),
        f
      );
    }
    function eh(f) {
      return new f.Collection(f, function () {
        return wF("");
      }).limit(0);
    }
    function T_(f, S, A, N) {
      var G,
        z,
        _e,
        Ie,
        Le,
        ke,
        Ve,
        Ne = A.length;
      if (
        !A.every(function (Ue) {
          return typeof Ue == "string";
        })
      )
        return Ja(f, We);
      function je(Ue) {
        (G =
          Ue === "next"
            ? function (Fe) {
                return Fe.toUpperCase();
              }
            : function (Fe) {
                return Fe.toLowerCase();
              }),
          (z =
            Ue === "next"
              ? function (Fe) {
                  return Fe.toLowerCase();
                }
              : function (Fe) {
                  return Fe.toUpperCase();
                }),
          (_e = Ue === "next" ? iSe : oSe);
        var ze = A.map(function (Fe) {
          return { lower: z(Fe), upper: G(Fe) };
        }).sort(function (Fe, qe) {
          return _e(Fe.lower, qe.lower);
        });
        (Ie = ze.map(function (Fe) {
          return Fe.upper;
        })),
          (Le = ze.map(function (Fe) {
            return Fe.lower;
          })),
          (Ve = (ke = Ue) === "next" ? "" : N);
      }
      je("next"),
        (f = new f.Collection(f, function () {
          return Vl(Ie[0], Le[Ne - 1] + N);
        })),
        (f._ondirectionchange = function (Ue) {
          je(Ue);
        });
      var xe = 0;
      return (
        f._addAlgorithm(function (Ue, ze, Fe) {
          var qe = Ue.key;
          if (typeof qe != "string") return !1;
          var Ye = z(qe);
          if (S(Ye, Le, xe)) return !0;
          for (var Je = null, et = xe; et < Ne; ++et) {
            var ut = (function (Tt, mt, vt, wt, Pt, Jt) {
              for (
                var gn = Math.min(Tt.length, wt.length), Cn = -1, vn = 0;
                vn < gn;
                ++vn
              ) {
                var io = mt[vn];
                if (io !== wt[vn])
                  return Pt(Tt[vn], vt[vn]) < 0
                    ? Tt.substr(0, vn) + vt[vn] + vt.substr(vn + 1)
                    : Pt(Tt[vn], wt[vn]) < 0
                    ? Tt.substr(0, vn) + wt[vn] + vt.substr(vn + 1)
                    : 0 <= Cn
                    ? Tt.substr(0, Cn) + mt[Cn] + vt.substr(Cn + 1)
                    : null;
                Pt(Tt[vn], io) < 0 && (Cn = vn);
              }
              return gn < wt.length && Jt === "next"
                ? Tt + vt.substr(Tt.length)
                : gn < Tt.length && Jt === "prev"
                ? Tt.substr(0, vt.length)
                : Cn < 0
                ? null
                : Tt.substr(0, Cn) + wt[Cn] + vt.substr(Cn + 1);
            })(qe, Ye, Ie[et], Le[et], _e, ke);
            ut === null && Je === null
              ? (xe = et + 1)
              : (Je === null || 0 < _e(Je, ut)) && (Je = ut);
          }
          return (
            ze(
              Je !== null
                ? function () {
                    Ue.continue(Je + Ve);
                  }
                : Fe
            ),
            !1
          );
        }),
        f
      );
    }
    function Vl(f, S, A, N) {
      return { type: 2, lower: f, upper: S, lowerOpen: A, upperOpen: N };
    }
    function wF(f) {
      return { type: 1, lower: f, upper: f };
    }
    var PF =
      (Object.defineProperty(Er.prototype, "Collection", {
        get: function () {
          return this._ctx.table.db.Collection;
        },
        enumerable: !1,
        configurable: !0,
      }),
      (Er.prototype.between = function (f, S, A, N) {
        (A = A !== !1), (N = N === !0);
        try {
          return 0 < this._cmp(f, S) ||
            (this._cmp(f, S) === 0 && (A || N) && (!A || !N))
            ? eh(this)
            : new this.Collection(this, function () {
                return Vl(f, S, !A, !N);
              });
        } catch {
          return Ja(this, He);
        }
      }),
      (Er.prototype.equals = function (f) {
        return f == null
          ? Ja(this, He)
          : new this.Collection(this, function () {
              return wF(f);
            });
      }),
      (Er.prototype.above = function (f) {
        return f == null
          ? Ja(this, He)
          : new this.Collection(this, function () {
              return Vl(f, void 0, !0);
            });
      }),
      (Er.prototype.aboveOrEqual = function (f) {
        return f == null
          ? Ja(this, He)
          : new this.Collection(this, function () {
              return Vl(f, void 0, !1);
            });
      }),
      (Er.prototype.below = function (f) {
        return f == null
          ? Ja(this, He)
          : new this.Collection(this, function () {
              return Vl(void 0, f, !1, !0);
            });
      }),
      (Er.prototype.belowOrEqual = function (f) {
        return f == null
          ? Ja(this, He)
          : new this.Collection(this, function () {
              return Vl(void 0, f);
            });
      }),
      (Er.prototype.startsWith = function (f) {
        return typeof f != "string"
          ? Ja(this, We)
          : this.between(f, f + be, !0, !0);
      }),
      (Er.prototype.startsWithIgnoreCase = function (f) {
        return f === ""
          ? this.startsWith(f)
          : T_(
              this,
              function (S, A) {
                return S.indexOf(A[0]) === 0;
              },
              [f],
              be
            );
      }),
      (Er.prototype.equalsIgnoreCase = function (f) {
        return T_(
          this,
          function (S, A) {
            return S === A[0];
          },
          [f],
          ""
        );
      }),
      (Er.prototype.anyOfIgnoreCase = function () {
        var f = De.apply(Ae, arguments);
        return f.length === 0
          ? eh(this)
          : T_(
              this,
              function (S, A) {
                return A.indexOf(S) !== -1;
              },
              f,
              ""
            );
      }),
      (Er.prototype.startsWithAnyOfIgnoreCase = function () {
        var f = De.apply(Ae, arguments);
        return f.length === 0
          ? eh(this)
          : T_(
              this,
              function (S, A) {
                return A.some(function (N) {
                  return S.indexOf(N) === 0;
                });
              },
              f,
              be
            );
      }),
      (Er.prototype.anyOf = function () {
        var f = this,
          S = De.apply(Ae, arguments),
          A = this._cmp;
        try {
          S.sort(A);
        } catch {
          return Ja(this, He);
        }
        if (S.length === 0) return eh(this);
        var N = new this.Collection(this, function () {
          return Vl(S[0], S[S.length - 1]);
        });
        N._ondirectionchange = function (z) {
          (A = z === "next" ? f._ascending : f._descending), S.sort(A);
        };
        var G = 0;
        return (
          N._addAlgorithm(function (z, _e, Ie) {
            for (var Le = z.key; 0 < A(Le, S[G]); )
              if (++G === S.length) return _e(Ie), !1;
            return (
              A(Le, S[G]) === 0 ||
              (_e(function () {
                z.continue(S[G]);
              }),
              !1)
            );
          }),
          N
        );
      }),
      (Er.prototype.notEqual = function (f) {
        return this.inAnyRange(
          [
            [-1 / 0, f],
            [f, this.db._maxKey],
          ],
          { includeLowers: !1, includeUppers: !1 }
        );
      }),
      (Er.prototype.noneOf = function () {
        var f = De.apply(Ae, arguments);
        if (f.length === 0) return new this.Collection(this);
        try {
          f.sort(this._ascending);
        } catch {
          return Ja(this, He);
        }
        var S = f.reduce(function (A, N) {
          return A ? A.concat([[A[A.length - 1][1], N]]) : [[-1 / 0, N]];
        }, null);
        return (
          S.push([f[f.length - 1], this.db._maxKey]),
          this.inAnyRange(S, { includeLowers: !1, includeUppers: !1 })
        );
      }),
      (Er.prototype.inAnyRange = function (qe, S) {
        var A = this,
          N = this._cmp,
          G = this._ascending,
          z = this._descending,
          _e = this._min,
          Ie = this._max;
        if (qe.length === 0) return eh(this);
        if (
          !qe.every(function (Ye) {
            return Ye[0] !== void 0 && Ye[1] !== void 0 && G(Ye[0], Ye[1]) <= 0;
          })
        )
          return Ja(
            this,
            "First argument to inAnyRange() must be an Array of two-value Arrays [lower,upper] where upper must not be lower than lower",
            Re.InvalidArgument
          );
        var Le = !S || S.includeLowers !== !1,
          ke = S && S.includeUppers === !0,
          Ve,
          Ne = G;
        function je(Ye, Je) {
          return Ne(Ye[0], Je[0]);
        }
        try {
          (Ve = qe.reduce(function (Ye, Je) {
            for (var et = 0, ut = Ye.length; et < ut; ++et) {
              var Tt = Ye[et];
              if (N(Je[0], Tt[1]) < 0 && 0 < N(Je[1], Tt[0])) {
                (Tt[0] = _e(Tt[0], Je[0])), (Tt[1] = Ie(Tt[1], Je[1]));
                break;
              }
            }
            return et === ut && Ye.push(Je), Ye;
          }, [])).sort(je);
        } catch {
          return Ja(this, He);
        }
        var xe = 0,
          Ue = ke
            ? function (Ye) {
                return 0 < G(Ye, Ve[xe][1]);
              }
            : function (Ye) {
                return 0 <= G(Ye, Ve[xe][1]);
              },
          ze = Le
            ? function (Ye) {
                return 0 < z(Ye, Ve[xe][0]);
              }
            : function (Ye) {
                return 0 <= z(Ye, Ve[xe][0]);
              },
          Fe = Ue,
          qe = new this.Collection(this, function () {
            return Vl(Ve[0][0], Ve[Ve.length - 1][1], !Le, !ke);
          });
        return (
          (qe._ondirectionchange = function (Ye) {
            (Ne = Ye === "next" ? ((Fe = Ue), G) : ((Fe = ze), z)), Ve.sort(je);
          }),
          qe._addAlgorithm(function (Ye, Je, et) {
            for (var ut, Tt = Ye.key; Fe(Tt); )
              if (++xe === Ve.length) return Je(et), !1;
            return (
              (!Ue((ut = Tt)) && !ze(ut)) ||
              (A._cmp(Tt, Ve[xe][1]) === 0 ||
                A._cmp(Tt, Ve[xe][0]) === 0 ||
                Je(function () {
                  Ne === G ? Ye.continue(Ve[xe][0]) : Ye.continue(Ve[xe][1]);
                }),
              !1)
            );
          }),
          qe
        );
      }),
      (Er.prototype.startsWithAnyOf = function () {
        var f = De.apply(Ae, arguments);
        return f.every(function (S) {
          return typeof S == "string";
        })
          ? f.length === 0
            ? eh(this)
            : this.inAnyRange(
                f.map(function (S) {
                  return [S, S + be];
                })
              )
          : Ja(this, "startsWithAnyOf() only works with strings");
      }),
      Er);
    function Er() {}
    function Vo(f) {
      return ps(function (S) {
        return cS(S), f(S.target.error), !1;
      });
    }
    function cS(f) {
      f.stopPropagation && f.stopPropagation(),
        f.preventDefault && f.preventDefault();
    }
    var dS = "storagemutated",
      aC = "x-storagemutated-1",
      jl = uS(null, dS),
      uSe =
        ((jo.prototype._lock = function () {
          return (
            B(!Rt.global),
            ++this._reculock,
            this._reculock !== 1 || Rt.global || (Rt.lockOwnerFor = this),
            this
          );
        }),
        (jo.prototype._unlock = function () {
          if ((B(!Rt.global), --this._reculock == 0))
            for (
              Rt.global || (Rt.lockOwnerFor = null);
              0 < this._blockedFuncs.length && !this._locked();

            ) {
              var f = this._blockedFuncs.shift();
              try {
                ro(f[1], f[0]);
              } catch {}
            }
          return this;
        }),
        (jo.prototype._locked = function () {
          return this._reculock && Rt.lockOwnerFor !== this;
        }),
        (jo.prototype.create = function (f) {
          var S = this;
          if (!this.mode) return this;
          var A = this.db.idbdb,
            N = this.db._state.dbOpenError;
          if ((B(!this.idbtrans), !f && !A))
            switch (N && N.name) {
              case "DatabaseClosedError":
                throw new Re.DatabaseClosed(N);
              case "MissingAPIError":
                throw new Re.MissingAPI(N.message, N);
              default:
                throw new Re.OpenFailed(N);
            }
          if (!this.active) throw new Re.TransactionInactive();
          return (
            B(this._completion._state === null),
            ((f = this.idbtrans =
              f ||
              (this.db.core || A).transaction(this.storeNames, this.mode, {
                durability: this.chromeTransactionDurability,
              })).onerror = ps(function (G) {
              cS(G), S._reject(f.error);
            })),
            (f.onabort = ps(function (G) {
              cS(G),
                S.active && S._reject(new Re.Abort(f.error)),
                (S.active = !1),
                S.on("abort").fire(G);
            })),
            (f.oncomplete = ps(function () {
              (S.active = !1),
                S._resolve(),
                "mutatedParts" in f && jl.storagemutated.fire(f.mutatedParts);
            })),
            this
          );
        }),
        (jo.prototype._promise = function (f, S, A) {
          var N = this;
          if (f === "readwrite" && this.mode !== "readwrite")
            return xs(new Re.ReadOnly("Transaction is readonly"));
          if (!this.active) return xs(new Re.TransactionInactive());
          if (this._locked())
            return new Et(function (z, _e) {
              N._blockedFuncs.push([
                function () {
                  N._promise(f, S, A).then(z, _e);
                },
                Rt,
              ]);
            });
          if (A)
            return Xa(function () {
              var z = new Et(function (_e, Ie) {
                N._lock();
                var Le = S(_e, Ie, N);
                Le && Le.then && Le.then(_e, Ie);
              });
              return (
                z.finally(function () {
                  return N._unlock();
                }),
                (z._lib = !0),
                z
              );
            });
          var G = new Et(function (z, _e) {
            var Ie = S(z, _e, N);
            Ie && Ie.then && Ie.then(z, _e);
          });
          return (G._lib = !0), G;
        }),
        (jo.prototype._root = function () {
          return this.parent ? this.parent._root() : this;
        }),
        (jo.prototype.waitFor = function (f) {
          var S,
            A = this._root(),
            N = Et.resolve(f);
          A._waitingFor
            ? (A._waitingFor = A._waitingFor.then(function () {
                return N;
              }))
            : ((A._waitingFor = N),
              (A._waitingQueue = []),
              (S = A.idbtrans.objectStore(A.storeNames[0])),
              (function z() {
                for (++A._spinCount; A._waitingQueue.length; )
                  A._waitingQueue.shift()();
                A._waitingFor && (S.get(-1 / 0).onsuccess = z);
              })());
          var G = A._waitingFor;
          return new Et(function (z, _e) {
            N.then(
              function (Ie) {
                return A._waitingQueue.push(ps(z.bind(null, Ie)));
              },
              function (Ie) {
                return A._waitingQueue.push(ps(_e.bind(null, Ie)));
              }
            ).finally(function () {
              A._waitingFor === G && (A._waitingFor = null);
            });
          });
        }),
        (jo.prototype.abort = function () {
          this.active &&
            ((this.active = !1),
            this.idbtrans && this.idbtrans.abort(),
            this._reject(new Re.Abort()));
        }),
        (jo.prototype.table = function (f) {
          var S = this._memoizedTables || (this._memoizedTables = {});
          if (d(S, f)) return S[f];
          var A = this.schema[f];
          if (!A)
            throw new Re.NotFound("Table " + f + " not part of transaction");
          return (
            (A = new this.db.Table(f, A, this)),
            (A.core = this.db.core.table(f)),
            (S[f] = A)
          );
        }),
        jo);
    function jo() {}
    function iC(f, S, A, N, G, z, _e) {
      return {
        name: f,
        keyPath: S,
        unique: A,
        multi: N,
        auto: G,
        compound: z,
        src: (A && !_e ? "&" : "") + (N ? "*" : "") + (G ? "++" : "") + IF(S),
      };
    }
    function IF(f) {
      return typeof f == "string"
        ? f
        : f
        ? "[" + [].join.call(f, "+") + "]"
        : "";
    }
    function oC(f, S, A) {
      return {
        name: f,
        primKey: S,
        indexes: A,
        mappedClass: null,
        idxByName:
          ((N = function (G) {
            return [G.name, G];
          }),
          A.reduce(function (G, z, _e) {
            return (_e = N(z, _e)), _e && (G[_e[0]] = _e[1]), G;
          }, {})),
      };
      var N;
    }
    var pS = function (f) {
      try {
        return (
          f.only([[]]),
          (pS = function () {
            return [[]];
          }),
          [[]]
        );
      } catch {
        return (
          (pS = function () {
            return be;
          }),
          be
        );
      }
    };
    function uC(f) {
      return f == null
        ? function () {}
        : typeof f == "string"
        ? (S = f).split(".").length === 1
          ? function (A) {
              return A[S];
            }
          : function (A) {
              return de(A, S);
            }
        : function (A) {
            return de(A, f);
          };
      var S;
    }
    function CF(f) {
      return [].slice.call(f);
    }
    var lSe = 0;
    function hS(f) {
      return f == null
        ? ":id"
        : typeof f == "string"
        ? f
        : "[".concat(f.join("+"), "]");
    }
    function cSe(f, S, Le) {
      function N(Fe) {
        if (Fe.type === 3) return null;
        if (Fe.type === 4)
          throw new Error("Cannot convert never type to IDBKeyRange");
        var xe = Fe.lower,
          Ue = Fe.upper,
          ze = Fe.lowerOpen,
          Fe = Fe.upperOpen;
        return xe === void 0
          ? Ue === void 0
            ? null
            : S.upperBound(Ue, !!Fe)
          : Ue === void 0
          ? S.lowerBound(xe, !!ze)
          : S.bound(xe, Ue, !!ze, !!Fe);
      }
      function G(je) {
        var xe,
          Ue = je.name;
        return {
          name: Ue,
          schema: je,
          mutate: function (ze) {
            var Fe = ze.trans,
              qe = ze.type,
              Ye = ze.keys,
              Je = ze.values,
              et = ze.range;
            return new Promise(function (ut, Tt) {
              ut = ps(ut);
              var mt = Fe.objectStore(Ue),
                vt = mt.keyPath == null,
                wt = qe === "put" || qe === "add";
              if (!wt && qe !== "delete" && qe !== "deleteRange")
                throw new Error("Invalid operation type: " + qe);
              var Pt,
                Jt = (Ye || Je || { length: 1 }).length;
              if (Ye && Je && Ye.length !== Je.length)
                throw new Error(
                  "Given keys array must have same length as given values array."
                );
              if (Jt === 0)
                return ut({
                  numFailures: 0,
                  failures: {},
                  results: [],
                  lastResult: void 0,
                });
              function gn(pa) {
                ++io, cS(pa);
              }
              var Cn = [],
                vn = [],
                io = 0;
              if (qe === "deleteRange") {
                if (et.type === 4)
                  return ut({
                    numFailures: io,
                    failures: vn,
                    results: [],
                    lastResult: void 0,
                  });
                et.type === 3
                  ? Cn.push((Pt = mt.clear()))
                  : Cn.push((Pt = mt.delete(N(et))));
              } else {
                var vt = wt ? (vt ? [Je, Ye] : [Je, null]) : [Ye, null],
                  _n = vt[0],
                  Ur = vt[1];
                if (wt)
                  for (var Kr = 0; Kr < Jt; ++Kr)
                    Cn.push(
                      (Pt =
                        Ur && Ur[Kr] !== void 0
                          ? mt[qe](_n[Kr], Ur[Kr])
                          : mt[qe](_n[Kr]))
                    ),
                      (Pt.onerror = gn);
                else
                  for (Kr = 0; Kr < Jt; ++Kr)
                    Cn.push((Pt = mt[qe](_n[Kr]))), (Pt.onerror = gn);
              }
              function M_(pa) {
                (pa = pa.target.result),
                  Cn.forEach(function (Td, CC) {
                    return Td.error != null && (vn[CC] = Td.error);
                  }),
                  ut({
                    numFailures: io,
                    failures: vn,
                    results:
                      qe === "delete"
                        ? Ye
                        : Cn.map(function (Td) {
                            return Td.result;
                          }),
                    lastResult: pa,
                  });
              }
              (Pt.onerror = function (pa) {
                gn(pa), M_(pa);
              }),
                (Pt.onsuccess = M_);
            });
          },
          getMany: function (ze) {
            var Fe = ze.trans,
              qe = ze.keys;
            return new Promise(function (Ye, Je) {
              Ye = ps(Ye);
              for (
                var et,
                  ut = Fe.objectStore(Ue),
                  Tt = qe.length,
                  mt = new Array(Tt),
                  vt = 0,
                  wt = 0,
                  Pt = function (Cn) {
                    (Cn = Cn.target),
                      (mt[Cn._pos] = Cn.result),
                      ++wt === vt && Ye(mt);
                  },
                  Jt = Vo(Je),
                  gn = 0;
                gn < Tt;
                ++gn
              )
                qe[gn] != null &&
                  (((et = ut.get(qe[gn]))._pos = gn),
                  (et.onsuccess = Pt),
                  (et.onerror = Jt),
                  ++vt);
              vt === 0 && Ye(mt);
            });
          },
          get: function (ze) {
            var Fe = ze.trans,
              qe = ze.key;
            return new Promise(function (Ye, Je) {
              Ye = ps(Ye);
              var et = Fe.objectStore(Ue).get(qe);
              (et.onsuccess = function (ut) {
                return Ye(ut.target.result);
              }),
                (et.onerror = Vo(Je));
            });
          },
          query:
            ((xe = ke),
            function (ze) {
              return new Promise(function (Fe, qe) {
                Fe = ps(Fe);
                var Ye,
                  Je,
                  et,
                  vt = ze.trans,
                  ut = ze.values,
                  Tt = ze.limit,
                  Pt = ze.query,
                  mt = Tt === 1 / 0 ? void 0 : Tt,
                  wt = Pt.index,
                  Pt = Pt.range,
                  vt = vt.objectStore(Ue),
                  wt = wt.isPrimaryKey ? vt : vt.index(wt.name),
                  Pt = N(Pt);
                if (Tt === 0) return Fe({ result: [] });
                xe
                  ? (((mt = ut
                      ? wt.getAll(Pt, mt)
                      : wt.getAllKeys(Pt, mt)).onsuccess = function (Jt) {
                      return Fe({ result: Jt.target.result });
                    }),
                    (mt.onerror = Vo(qe)))
                  : ((Ye = 0),
                    (Je =
                      !ut && "openKeyCursor" in wt
                        ? wt.openKeyCursor(Pt)
                        : wt.openCursor(Pt)),
                    (et = []),
                    (Je.onsuccess = function (Jt) {
                      var gn = Je.result;
                      return gn
                        ? (et.push(ut ? gn.value : gn.primaryKey),
                          ++Ye === Tt ? Fe({ result: et }) : void gn.continue())
                        : Fe({ result: et });
                    }),
                    (Je.onerror = Vo(qe)));
              });
            }),
          openCursor: function (ze) {
            var Fe = ze.trans,
              qe = ze.values,
              Ye = ze.query,
              Je = ze.reverse,
              et = ze.unique;
            return new Promise(function (ut, Tt) {
              ut = ps(ut);
              var wt = Ye.index,
                mt = Ye.range,
                vt = Fe.objectStore(Ue),
                vt = wt.isPrimaryKey ? vt : vt.index(wt.name),
                wt = Je
                  ? et
                    ? "prevunique"
                    : "prev"
                  : et
                  ? "nextunique"
                  : "next",
                Pt =
                  !qe && "openKeyCursor" in vt
                    ? vt.openKeyCursor(N(mt), wt)
                    : vt.openCursor(N(mt), wt);
              (Pt.onerror = Vo(Tt)),
                (Pt.onsuccess = ps(function (Jt) {
                  var gn,
                    Cn,
                    vn,
                    io,
                    _n = Pt.result;
                  _n
                    ? ((_n.___id = ++lSe),
                      (_n.done = !1),
                      (gn = _n.continue.bind(_n)),
                      (Cn = (Cn = _n.continuePrimaryKey) && Cn.bind(_n)),
                      (vn = _n.advance.bind(_n)),
                      (io = function () {
                        throw new Error("Cursor not stopped");
                      }),
                      (_n.trans = Fe),
                      (_n.stop =
                        _n.continue =
                        _n.continuePrimaryKey =
                        _n.advance =
                          function () {
                            throw new Error("Cursor not started");
                          }),
                      (_n.fail = ps(Tt)),
                      (_n.next = function () {
                        var Ur = this,
                          Kr = 1;
                        return this.start(function () {
                          return Kr-- ? Ur.continue() : Ur.stop();
                        }).then(function () {
                          return Ur;
                        });
                      }),
                      (_n.start = function (Ur) {
                        function Kr() {
                          if (Pt.result)
                            try {
                              Ur();
                            } catch (pa) {
                              _n.fail(pa);
                            }
                          else
                            (_n.done = !0),
                              (_n.start = function () {
                                throw new Error("Cursor behind last entry");
                              }),
                              _n.stop();
                        }
                        var M_ = new Promise(function (pa, Td) {
                          (pa = ps(pa)),
                            (Pt.onerror = Vo(Td)),
                            (_n.fail = Td),
                            (_n.stop = function (CC) {
                              (_n.stop =
                                _n.continue =
                                _n.continuePrimaryKey =
                                _n.advance =
                                  io),
                                pa(CC);
                            });
                        });
                        return (
                          (Pt.onsuccess = ps(function (pa) {
                            (Pt.onsuccess = Kr), Kr();
                          })),
                          (_n.continue = gn),
                          (_n.continuePrimaryKey = Cn),
                          (_n.advance = vn),
                          Kr(),
                          M_
                        );
                      }),
                      ut(_n))
                    : ut(null);
                }, Tt));
            });
          },
          count: function (ze) {
            var Fe = ze.query,
              qe = ze.trans,
              Ye = Fe.index,
              Je = Fe.range;
            return new Promise(function (et, ut) {
              var Tt = qe.objectStore(Ue),
                mt = Ye.isPrimaryKey ? Tt : Tt.index(Ye.name),
                Tt = N(Je),
                mt = Tt ? mt.count(Tt) : mt.count();
              (mt.onsuccess = ps(function (vt) {
                return et(vt.target.result);
              })),
                (mt.onerror = Vo(ut));
            });
          },
        };
      }
      var z,
        _e,
        Ie,
        Ve =
          ((_e = Le),
          (Ie = CF((z = f).objectStoreNames)),
          {
            schema: {
              name: z.name,
              tables: Ie.map(function (je) {
                return _e.objectStore(je);
              }).map(function (je) {
                var xe = je.keyPath,
                  Fe = je.autoIncrement,
                  Ue = o(xe),
                  ze = {},
                  Fe = {
                    name: je.name,
                    primaryKey: {
                      name: null,
                      isPrimaryKey: !0,
                      outbound: xe == null,
                      compound: Ue,
                      keyPath: xe,
                      autoIncrement: Fe,
                      unique: !0,
                      extractKey: uC(xe),
                    },
                    indexes: CF(je.indexNames)
                      .map(function (qe) {
                        return je.index(qe);
                      })
                      .map(function (et) {
                        var Ye = et.name,
                          Je = et.unique,
                          ut = et.multiEntry,
                          et = et.keyPath,
                          ut = {
                            name: Ye,
                            compound: o(et),
                            keyPath: et,
                            unique: Je,
                            multiEntry: ut,
                            extractKey: uC(et),
                          };
                        return (ze[hS(et)] = ut);
                      }),
                    getIndexByKeyPath: function (qe) {
                      return ze[hS(qe)];
                    },
                  };
                return (
                  (ze[":id"] = Fe.primaryKey),
                  xe != null && (ze[hS(xe)] = Fe.primaryKey),
                  Fe
                );
              }),
            },
            hasGetAll:
              0 < Ie.length &&
              "getAll" in _e.objectStore(Ie[0]) &&
              !(
                typeof navigator < "u" &&
                /Safari/.test(navigator.userAgent) &&
                !/(Chrome\/|Edge\/)/.test(navigator.userAgent) &&
                [].concat(navigator.userAgent.match(/Safari\/(\d*)/))[1] < 604
              ),
          }),
        Le = Ve.schema,
        ke = Ve.hasGetAll,
        Ve = Le.tables.map(G),
        Ne = {};
      return (
        Ve.forEach(function (je) {
          return (Ne[je.name] = je);
        }),
        {
          stack: "dbcore",
          transaction: f.transaction.bind(f),
          table: function (je) {
            if (!Ne[je]) throw new Error("Table '".concat(je, "' not found"));
            return Ne[je];
          },
          MIN_KEY: -1 / 0,
          MAX_KEY: pS(S),
          schema: Le,
        }
      );
    }
    function dSe(f, S, A, N) {
      var G = A.IDBKeyRange;
      return (
        A.indexedDB,
        {
          dbcore:
            ((N = cSe(S, G, N)),
            f.dbcore.reduce(function (z, _e) {
              return (_e = _e.create), r(r({}, z), _e(z));
            }, N)),
        }
      );
    }
    function w_(f, N) {
      var A = N.db,
        N = dSe(f._middlewares, A, f._deps, N);
      (f.core = N.dbcore),
        f.tables.forEach(function (G) {
          var z = G.name;
          f.core.schema.tables.some(function (_e) {
            return _e.name === z;
          }) &&
            ((G.core = f.core.table(z)),
            f[z] instanceof f.Table && (f[z].core = G.core));
        });
    }
    function P_(f, S, A, N) {
      A.forEach(function (G) {
        var z = N[G];
        S.forEach(function (_e) {
          var Ie = (function Le(ke, Ve) {
            return O(ke, Ve) || ((ke = l(ke)) && Le(ke, Ve));
          })(_e, G);
          (!Ie || ("value" in Ie && Ie.value === void 0)) &&
            (_e === f.Transaction.prototype || _e instanceof f.Transaction
              ? y(_e, G, {
                  get: function () {
                    return this.table(G);
                  },
                  set: function (Le) {
                    m(this, G, {
                      value: Le,
                      writable: !0,
                      configurable: !0,
                      enumerable: !0,
                    });
                  },
                })
              : (_e[G] = new f.Table(G, z)));
        });
      });
    }
    function lC(f, S) {
      S.forEach(function (A) {
        for (var N in A) A[N] instanceof f.Table && delete A[N];
      });
    }
    function pSe(f, S) {
      return f._cfg.version - S._cfg.version;
    }
    function hSe(f, S, A, N) {
      var G = f._dbSchema;
      A.objectStoreNames.contains("$meta") &&
        !G.$meta &&
        ((G.$meta = oC("$meta", OF("")[0], [])), f._storeNames.push("$meta"));
      var z = f._createTransaction("readwrite", f._storeNames, G);
      z.create(A), z._completion.catch(N);
      var _e = z._reject.bind(z),
        Ie = Rt.transless || Rt;
      Xa(function () {
        return (
          (Rt.trans = z),
          (Rt.transless = Ie),
          S !== 0
            ? (w_(f, A),
              (ke = S),
              ((Le = z).storeNames.includes("$meta")
                ? Le.table("$meta")
                    .get("version")
                    .then(function (Ve) {
                      return Ve ?? ke;
                    })
                : Et.resolve(ke)
              )
                .then(function (Ve) {
                  return (
                    (je = Ve),
                    (xe = z),
                    (Ue = A),
                    (ze = []),
                    (Ve = (Ne = f)._versions),
                    (Fe = Ne._dbSchema = C_(0, Ne.idbdb, Ue)),
                    (Ve = Ve.filter(function (qe) {
                      return qe._cfg.version >= je;
                    })).length !== 0
                      ? (Ve.forEach(function (qe) {
                          ze.push(function () {
                            var Ye = Fe,
                              Je = qe._cfg.dbschema;
                            A_(Ne, Ye, Ue),
                              A_(Ne, Je, Ue),
                              (Fe = Ne._dbSchema = Je);
                            var et = cC(Ye, Je);
                            et.add.forEach(function (wt) {
                              dC(Ue, wt[0], wt[1].primKey, wt[1].indexes);
                            }),
                              et.change.forEach(function (wt) {
                                if (wt.recreate)
                                  throw new Re.Upgrade(
                                    "Not yet support for changing primary key"
                                  );
                                var Pt = Ue.objectStore(wt.name);
                                wt.add.forEach(function (Jt) {
                                  return I_(Pt, Jt);
                                }),
                                  wt.change.forEach(function (Jt) {
                                    Pt.deleteIndex(Jt.name), I_(Pt, Jt);
                                  }),
                                  wt.del.forEach(function (Jt) {
                                    return Pt.deleteIndex(Jt);
                                  });
                              });
                            var ut = qe._cfg.contentUpgrade;
                            if (ut && qe._cfg.version > je) {
                              w_(Ne, Ue), (xe._memoizedTables = {});
                              var Tt = R(Je);
                              et.del.forEach(function (wt) {
                                Tt[wt] = Ye[wt];
                              }),
                                lC(Ne, [Ne.Transaction.prototype]),
                                P_(Ne, [Ne.Transaction.prototype], i(Tt), Tt),
                                (xe.schema = Tt);
                              var mt,
                                vt = lt(ut);
                              return (
                                vt && Bl(),
                                (et = Et.follow(function () {
                                  var wt;
                                  (mt = ut(xe)) &&
                                    vt &&
                                    ((wt = Ko.bind(null, null)),
                                    mt.then(wt, wt));
                                })),
                                mt && typeof mt.then == "function"
                                  ? Et.resolve(mt)
                                  : et.then(function () {
                                      return mt;
                                    })
                              );
                            }
                          }),
                            ze.push(function (Ye) {
                              var Je,
                                et,
                                ut = qe._cfg.dbschema;
                              (Je = ut),
                                (et = Ye),
                                [].slice
                                  .call(et.db.objectStoreNames)
                                  .forEach(function (Tt) {
                                    return (
                                      Je[Tt] == null &&
                                      et.db.deleteObjectStore(Tt)
                                    );
                                  }),
                                lC(Ne, [Ne.Transaction.prototype]),
                                P_(
                                  Ne,
                                  [Ne.Transaction.prototype],
                                  Ne._storeNames,
                                  Ne._dbSchema
                                ),
                                (xe.schema = Ne._dbSchema);
                            }),
                            ze.push(function (Ye) {
                              Ne.idbdb.objectStoreNames.contains("$meta") &&
                                (Math.ceil(Ne.idbdb.version / 10) ===
                                qe._cfg.version
                                  ? (Ne.idbdb.deleteObjectStore("$meta"),
                                    delete Ne._dbSchema.$meta,
                                    (Ne._storeNames = Ne._storeNames.filter(
                                      function (Je) {
                                        return Je !== "$meta";
                                      }
                                    )))
                                  : Ye.objectStore("$meta").put(
                                      qe._cfg.version,
                                      "version"
                                    ));
                            });
                        }),
                        (function qe() {
                          return ze.length
                            ? Et.resolve(ze.shift()(xe.idbtrans)).then(qe)
                            : Et.resolve();
                        })().then(function () {
                          AF(Fe, Ue);
                        }))
                      : Et.resolve()
                  );
                  var Ne, je, xe, Ue, ze, Fe;
                })
                .catch(_e))
            : (i(G).forEach(function (Ve) {
                dC(A, Ve, G[Ve].primKey, G[Ve].indexes);
              }),
              w_(f, A),
              void Et.follow(function () {
                return f.on.populate.fire(z);
              }).catch(_e))
        );
        var Le, ke;
      });
    }
    function fSe(f, S) {
      AF(f._dbSchema, S),
        S.db.version % 10 != 0 ||
          S.objectStoreNames.contains("$meta") ||
          S.db
            .createObjectStore("$meta")
            .add(Math.ceil(S.db.version / 10 - 1), "version");
      var A = C_(0, f.idbdb, S);
      A_(f, f._dbSchema, S);
      for (var N = 0, G = cC(A, f._dbSchema).change; N < G.length; N++) {
        var z = (function (_e) {
          if (_e.change.length || _e.recreate)
            return (
              console.warn(
                "Unable to patch indexes of table ".concat(
                  _e.name,
                  " because it has changes on the type of index or primary key."
                )
              ),
              { value: void 0 }
            );
          var Ie = S.objectStore(_e.name);
          _e.add.forEach(function (Le) {
            It &&
              console.debug(
                "Dexie upgrade patch: Creating missing index "
                  .concat(_e.name, ".")
                  .concat(Le.src)
              ),
              I_(Ie, Le);
          });
        })(G[N]);
        if (typeof z == "object") return z.value;
      }
    }
    function cC(f, S) {
      var A,
        N = { del: [], add: [], change: [] };
      for (A in f) S[A] || N.del.push(A);
      for (A in S) {
        var G = f[A],
          z = S[A];
        if (G) {
          var _e = {
            name: A,
            def: z,
            recreate: !1,
            del: [],
            add: [],
            change: [],
          };
          if (
            "" + (G.primKey.keyPath || "") != "" + (z.primKey.keyPath || "") ||
            G.primKey.auto !== z.primKey.auto
          )
            (_e.recreate = !0), N.change.push(_e);
          else {
            var Ie = G.idxByName,
              Le = z.idxByName,
              ke = void 0;
            for (ke in Ie) Le[ke] || _e.del.push(ke);
            for (ke in Le) {
              var Ve = Ie[ke],
                Ne = Le[ke];
              Ve ? Ve.src !== Ne.src && _e.change.push(Ne) : _e.add.push(Ne);
            }
            (0 < _e.del.length || 0 < _e.add.length || 0 < _e.change.length) &&
              N.change.push(_e);
          }
        } else N.add.push([A, z]);
      }
      return N;
    }
    function dC(f, S, A, N) {
      var G = f.db.createObjectStore(
        S,
        A.keyPath
          ? { keyPath: A.keyPath, autoIncrement: A.auto }
          : { autoIncrement: A.auto }
      );
      return (
        N.forEach(function (z) {
          return I_(G, z);
        }),
        G
      );
    }
    function AF(f, S) {
      i(f).forEach(function (A) {
        S.db.objectStoreNames.contains(A) ||
          (It && console.debug("Dexie: Creating missing table", A),
          dC(S, A, f[A].primKey, f[A].indexes));
      });
    }
    function I_(f, S) {
      f.createIndex(S.name, S.keyPath, {
        unique: S.unique,
        multiEntry: S.multi,
      });
    }
    function C_(f, S, A) {
      var N = {};
      return (
        C(S.objectStoreNames, 0).forEach(function (G) {
          for (
            var z = A.objectStore(G),
              _e = iC(
                IF((ke = z.keyPath)),
                ke || "",
                !0,
                !1,
                !!z.autoIncrement,
                ke && typeof ke != "string",
                !0
              ),
              Ie = [],
              Le = 0;
            Le < z.indexNames.length;
            ++Le
          ) {
            var Ve = z.index(z.indexNames[Le]),
              ke = Ve.keyPath,
              Ve = iC(
                Ve.name,
                ke,
                !!Ve.unique,
                !!Ve.multiEntry,
                !1,
                ke && typeof ke != "string",
                !1
              );
            Ie.push(Ve);
          }
          N[G] = oC(G, _e, Ie);
        }),
        N
      );
    }
    function A_(f, S, A) {
      for (var N = A.db.objectStoreNames, G = 0; G < N.length; ++G) {
        var z = N[G],
          _e = A.objectStore(z);
        f._hasGetAll = "getAll" in _e;
        for (var Ie = 0; Ie < _e.indexNames.length; ++Ie) {
          var Le = _e.indexNames[Ie],
            ke = _e.index(Le).keyPath,
            Ve = typeof ke == "string" ? ke : "[" + C(ke).join("+") + "]";
          !S[z] ||
            ((ke = S[z].idxByName[Ve]) &&
              ((ke.name = Le),
              delete S[z].idxByName[Ve],
              (S[z].idxByName[Le] = ke)));
        }
      }
      typeof navigator < "u" &&
        /Safari/.test(navigator.userAgent) &&
        !/(Chrome\/|Edge\/)/.test(navigator.userAgent) &&
        s.WorkerGlobalScope &&
        s instanceof s.WorkerGlobalScope &&
        [].concat(navigator.userAgent.match(/Safari\/(\d*)/))[1] < 604 &&
        (f._hasGetAll = !1);
    }
    function OF(f) {
      return f.split(",").map(function (S, A) {
        var N = (S = S.trim()).replace(/([&*]|\+\+)/g, ""),
          G = /^\[/.test(N) ? N.match(/^\[(.*)\]$/)[1].split("+") : N;
        return iC(
          N,
          G || null,
          /\&/.test(S),
          /\*/.test(S),
          /\+\+/.test(S),
          o(G),
          A === 0
        );
      });
    }
    var mSe =
      ((O_.prototype._parseStoresSpec = function (f, S) {
        i(f).forEach(function (A) {
          if (f[A] !== null) {
            var N = OF(f[A]),
              G = N.shift();
            if (((G.unique = !0), G.multi))
              throw new Re.Schema("Primary key cannot be multi-valued");
            N.forEach(function (z) {
              if (z.auto)
                throw new Re.Schema(
                  "Only primary key can be marked as autoIncrement (++)"
                );
              if (!z.keyPath)
                throw new Re.Schema(
                  "Index must have a name and cannot be an empty string"
                );
            }),
              (S[A] = oC(A, G, N));
          }
        });
      }),
      (O_.prototype.stores = function (A) {
        var S = this.db;
        this._cfg.storesSource = this._cfg.storesSource
          ? u(this._cfg.storesSource, A)
          : A;
        var A = S._versions,
          N = {},
          G = {};
        return (
          A.forEach(function (z) {
            u(N, z._cfg.storesSource),
              (G = z._cfg.dbschema = {}),
              z._parseStoresSpec(N, G);
          }),
          (S._dbSchema = G),
          lC(S, [S._allTables, S, S.Transaction.prototype]),
          P_(
            S,
            [S._allTables, S, S.Transaction.prototype, this._cfg.tables],
            i(G),
            G
          ),
          (S._storeNames = i(G)),
          this
        );
      }),
      (O_.prototype.upgrade = function (f) {
        return (
          (this._cfg.contentUpgrade = Xt(this._cfg.contentUpgrade || ct, f)),
          this
        );
      }),
      O_);
    function O_() {}
    function pC(f, S) {
      var A = f._dbNamesDB;
      return (
        A ||
          (A = f._dbNamesDB =
            new Fu(ft, { addons: [], indexedDB: f, IDBKeyRange: S }))
            .version(1)
            .stores({ dbnames: "name" }),
        A.table("dbnames")
      );
    }
    function hC(f) {
      return f && typeof f.databases == "function";
    }
    function fC(f) {
      return Xa(function () {
        return (Rt.letThrough = !0), f();
      });
    }
    function mC(f) {
      return !("from" in f);
    }
    var Fr = function (f, S) {
      if (!this) {
        var A = new Fr();
        return f && "d" in f && u(A, f), A;
      }
      u(
        this,
        arguments.length
          ? { d: 1, from: f, to: 1 < arguments.length ? S : f }
          : { d: 0 }
      );
    };
    function fS(f, S, A) {
      var N = un(S, A);
      if (!isNaN(N)) {
        if (0 < N) throw RangeError();
        if (mC(f)) return u(f, { from: S, to: A, d: 1 });
        var G = f.l,
          N = f.r;
        if (un(A, f.from) < 0)
          return (
            G
              ? fS(G, S, A)
              : (f.l = { from: S, to: A, d: 1, l: null, r: null }),
            HF(f)
          );
        if (0 < un(S, f.to))
          return (
            N
              ? fS(N, S, A)
              : (f.r = { from: S, to: A, d: 1, l: null, r: null }),
            HF(f)
          );
        un(S, f.from) < 0 &&
          ((f.from = S), (f.l = null), (f.d = N ? N.d + 1 : 1)),
          0 < un(A, f.to) &&
            ((f.to = A), (f.r = null), (f.d = f.l ? f.l.d + 1 : 1)),
          (A = !f.r),
          G && !f.l && mS(f, G),
          N && A && mS(f, N);
      }
    }
    function mS(f, S) {
      mC(S) ||
        (function A(N, Le) {
          var z = Le.from,
            _e = Le.to,
            Ie = Le.l,
            Le = Le.r;
          fS(N, z, _e), Ie && A(N, Ie), Le && A(N, Le);
        })(f, S);
    }
    function H_(f, S) {
      var A = SC(S),
        N = A.next();
      if (N.done) return !1;
      for (
        var G = N.value, z = SC(f), _e = z.next(G.from), Ie = _e.value;
        !N.done && !_e.done;

      ) {
        if (un(Ie.from, G.to) <= 0 && 0 <= un(Ie.to, G.from)) return !0;
        un(G.from, Ie.from) < 0
          ? (G = (N = A.next(Ie.from)).value)
          : (Ie = (_e = z.next(G.from)).value);
      }
      return !1;
    }
    function SC(f) {
      var S = mC(f) ? null : { s: 0, n: f };
      return {
        next: function (A) {
          for (var N = 0 < arguments.length; S; )
            switch (S.s) {
              case 0:
                if (((S.s = 1), N))
                  for (; S.n.l && un(A, S.n.from) < 0; )
                    S = { up: S, n: S.n.l, s: 1 };
                else for (; S.n.l; ) S = { up: S, n: S.n.l, s: 1 };
              case 1:
                if (((S.s = 2), !N || un(A, S.n.to) <= 0))
                  return { value: S.n, done: !1 };
              case 2:
                if (S.n.r) {
                  (S.s = 3), (S = { up: S, n: S.n.r, s: 0 });
                  continue;
                }
              case 3:
                S = S.up;
            }
          return { done: !0 };
        },
      };
    }
    function HF(f) {
      var S,
        A,
        N =
          (((S = f.r) === null || S === void 0 ? void 0 : S.d) || 0) -
          (((A = f.l) === null || A === void 0 ? void 0 : A.d) || 0),
        G = 1 < N ? "r" : N < -1 ? "l" : "";
      G &&
        ((S = G == "r" ? "l" : "r"),
        (A = r({}, f)),
        (N = f[G]),
        (f.from = N.from),
        (f.to = N.to),
        (f[G] = N[G]),
        (A[G] = N[S]),
        ((f[S] = A).d = NF(A))),
        (f.d = NF(f));
    }
    function NF(A) {
      var S = A.r,
        A = A.l;
      return (S ? (A ? Math.max(S.d, A.d) : S.d) : A ? A.d : 0) + 1;
    }
    function N_(f, S) {
      return (
        i(S).forEach(function (A) {
          f[A]
            ? mS(f[A], S[A])
            : (f[A] = (function N(G) {
                var z,
                  _e,
                  Ie = {};
                for (z in G)
                  d(G, z) &&
                    ((_e = G[z]),
                    (Ie[z] =
                      !_e || typeof _e != "object" || we.has(_e.constructor)
                        ? _e
                        : N(_e)));
                return Ie;
              })(S[A]));
        }),
        f
      );
    }
    function yC(f, S) {
      return (
        f.all ||
        S.all ||
        Object.keys(f).some(function (A) {
          return S[A] && H_(S[A], f[A]);
        })
      );
    }
    p(
      Fr.prototype,
      (((wi = {
        add: function (f) {
          return mS(this, f), this;
        },
        addKey: function (f) {
          return fS(this, f, f), this;
        },
        addKeys: function (f) {
          var S = this;
          return (
            f.forEach(function (A) {
              return fS(S, A, A);
            }),
            this
          );
        },
      })[F] = function () {
        return SC(this);
      }),
      wi)
    );
    var bd = {},
      gC = {},
      vC = !1;
    function R_(f) {
      N_(gC, f),
        vC ||
          ((vC = !0),
          setTimeout(function () {
            (vC = !1), _C(gC, !(gC = {}));
          }, 0));
    }
    function _C(f, S) {
      S === void 0 && (S = !1);
      var A = new Set();
      if (f.all)
        for (var N = 0, G = Object.values(bd); N < G.length; N++)
          RF((_e = G[N]), f, A, S);
      else
        for (var z in f) {
          var _e,
            Ie = /^idb\:\/\/(.*)\/(.*)\//.exec(z);
          Ie &&
            ((z = Ie[1]),
            (Ie = Ie[2]),
            (_e = bd["idb://".concat(z, "/").concat(Ie)]) && RF(_e, f, A, S));
        }
      A.forEach(function (Le) {
        return Le();
      });
    }
    function RF(f, S, A, N) {
      for (
        var G = [], z = 0, _e = Object.entries(f.queries.query);
        z < _e.length;
        z++
      ) {
        for (
          var Ie = _e[z], Le = Ie[0], ke = [], Ve = 0, Ne = Ie[1];
          Ve < Ne.length;
          Ve++
        ) {
          var je = Ne[Ve];
          yC(S, je.obsSet)
            ? je.subscribers.forEach(function (Fe) {
                return A.add(Fe);
              })
            : N && ke.push(je);
        }
        N && G.push([Le, ke]);
      }
      if (N)
        for (var xe = 0, Ue = G; xe < Ue.length; xe++) {
          var ze = Ue[xe],
            Le = ze[0],
            ke = ze[1];
          f.queries.query[Le] = ke;
        }
    }
    function SSe(f) {
      var S = f._state,
        A = f._deps.indexedDB;
      if (S.isBeingOpened || f.idbdb)
        return S.dbReadyPromise.then(function () {
          return S.dbOpenError ? xs(S.dbOpenError) : f;
        });
      (S.isBeingOpened = !0), (S.dbOpenError = null), (S.openComplete = !1);
      var N = S.openCanceller,
        G = Math.round(10 * f.verno),
        z = !1;
      function _e() {
        if (S.openCanceller !== N)
          throw new Re.DatabaseClosed("db.open() was cancelled");
      }
      function Ie() {
        return new Et(function (je, xe) {
          if ((_e(), !A)) throw new Re.MissingAPI();
          var Ue = f.name,
            ze = S.autoSchema || !G ? A.open(Ue) : A.open(Ue, G);
          if (!ze) throw new Re.MissingAPI();
          (ze.onerror = Vo(xe)),
            (ze.onblocked = ps(f._fireOnBlocked)),
            (ze.onupgradeneeded = ps(function (Fe) {
              var qe;
              (Ve = ze.transaction),
                S.autoSchema && !f._options.allowEmptyDB
                  ? ((ze.onerror = cS),
                    Ve.abort(),
                    ze.result.close(),
                    ((qe = A.deleteDatabase(Ue)).onsuccess = qe.onerror =
                      ps(function () {
                        xe(
                          new Re.NoSuchDatabase(
                            "Database ".concat(Ue, " doesnt exist")
                          )
                        );
                      })))
                  : ((Ve.onerror = Vo(xe)),
                    (Fe = Fe.oldVersion > Math.pow(2, 62) ? 0 : Fe.oldVersion),
                    (Ne = Fe < 1),
                    (f.idbdb = ze.result),
                    z && fSe(f, Ve),
                    hSe(f, Fe / 10, Ve, xe));
            }, xe)),
            (ze.onsuccess = ps(function () {
              Ve = null;
              var Fe,
                qe,
                Ye,
                Je,
                et,
                ut = (f.idbdb = ze.result),
                Tt = C(ut.objectStoreNames);
              if (0 < Tt.length)
                try {
                  var mt = ut.transaction(
                    (Je = Tt).length === 1 ? Je[0] : Je,
                    "readonly"
                  );
                  if (S.autoSchema)
                    (qe = ut),
                      (Ye = mt),
                      ((Fe = f).verno = qe.version / 10),
                      (Ye = Fe._dbSchema = C_(0, qe, Ye)),
                      (Fe._storeNames = C(qe.objectStoreNames, 0)),
                      P_(Fe, [Fe._allTables], i(Ye), Ye);
                  else if (
                    (A_(f, f._dbSchema, mt),
                    ((et = cC(C_(0, (et = f).idbdb, mt), et._dbSchema)).add
                      .length ||
                      et.change.some(function (vt) {
                        return vt.add.length || vt.change.length;
                      })) &&
                      !z)
                  )
                    return (
                      console.warn(
                        "Dexie SchemaDiff: Schema was extended without increasing the number passed to db.version(). Dexie will add missing parts and increment native version number to workaround this."
                      ),
                      ut.close(),
                      (G = ut.version + 1),
                      (z = !0),
                      je(Ie())
                    );
                  w_(f, mt);
                } catch {}
              dt.push(f),
                (ut.onversionchange = ps(function (vt) {
                  (S.vcFired = !0), f.on("versionchange").fire(vt);
                })),
                (ut.onclose = ps(function (vt) {
                  f.on("close").fire(vt);
                })),
                Ne &&
                  ((et = f._deps),
                  (mt = Ue),
                  (ut = et.indexedDB),
                  (et = et.IDBKeyRange),
                  hC(ut) ||
                    mt === ft ||
                    pC(ut, et).put({ name: mt }).catch(ct)),
                je();
            }, xe));
        }).catch(function (je) {
          switch (je == null ? void 0 : je.name) {
            case "UnknownError":
              if (0 < S.PR1398_maxLoop)
                return (
                  S.PR1398_maxLoop--,
                  console.warn(
                    "Dexie: Workaround for Chrome UnknownError on open()"
                  ),
                  Ie()
                );
              break;
            case "VersionError":
              if (0 < G) return (G = 0), Ie();
          }
          return Et.reject(je);
        });
      }
      var Le,
        ke = S.dbReadyResolve,
        Ve = null,
        Ne = !1;
      return Et.race([
        N,
        (typeof navigator > "u"
          ? Et.resolve()
          : !navigator.userAgentData &&
            /Safari\//.test(navigator.userAgent) &&
            !/Chrom(e|ium)\//.test(navigator.userAgent) &&
            indexedDB.databases
          ? new Promise(function (je) {
              function xe() {
                return indexedDB.databases().finally(je);
              }
              (Le = setInterval(xe, 100)), xe();
            }).finally(function () {
              return clearInterval(Le);
            })
          : Promise.resolve()
        ).then(Ie),
      ])
        .then(function () {
          return (
            _e(),
            (S.onReadyBeingFired = []),
            Et.resolve(
              fC(function () {
                return f.on.ready.fire(f.vip);
              })
            ).then(function je() {
              if (0 < S.onReadyBeingFired.length) {
                var xe = S.onReadyBeingFired.reduce(Xt, ct);
                return (
                  (S.onReadyBeingFired = []),
                  Et.resolve(
                    fC(function () {
                      return xe(f.vip);
                    })
                  ).then(je)
                );
              }
            })
          );
        })
        .finally(function () {
          S.openCanceller === N &&
            ((S.onReadyBeingFired = null), (S.isBeingOpened = !1));
        })
        .catch(function (je) {
          S.dbOpenError = je;
          try {
            Ve && Ve.abort();
          } catch {}
          return N === S.openCanceller && f._close(), xs(je);
        })
        .finally(function () {
          (S.openComplete = !0), ke();
        })
        .then(function () {
          var je;
          return (
            Ne &&
              ((je = {}),
              f.tables.forEach(function (xe) {
                xe.schema.indexes.forEach(function (Ue) {
                  Ue.name &&
                    (je[
                      "idb://"
                        .concat(f.name, "/")
                        .concat(xe.name, "/")
                        .concat(Ue.name)
                    ] = new Fr(-1 / 0, [[[]]]));
                }),
                  (je["idb://".concat(f.name, "/").concat(xe.name, "/")] = je[
                    "idb://".concat(f.name, "/").concat(xe.name, "/:dels")
                  ] =
                    new Fr(-1 / 0, [[[]]]));
              }),
              jl(dS).fire(je),
              _C(je, !0)),
            f
          );
        });
    }
    function bC(f) {
      function S(z) {
        return f.next(z);
      }
      var A = G(S),
        N = G(function (z) {
          return f.throw(z);
        });
      function G(z) {
        return function (Le) {
          var Ie = z(Le),
            Le = Ie.value;
          return Ie.done
            ? Le
            : Le && typeof Le.then == "function"
            ? Le.then(A, N)
            : o(Le)
            ? Promise.all(Le).then(A, N)
            : A(Le);
        };
      }
      return G(S)();
    }
    function k_(f, S, A) {
      for (var N = o(f) ? f.slice() : [f], G = 0; G < A; ++G) N.push(S);
      return N;
    }
    var ySe = {
      stack: "dbcore",
      name: "VirtualIndexMiddleware",
      level: 1,
      create: function (f) {
        return r(r({}, f), {
          table: function (S) {
            var A = f.table(S),
              N = A.schema,
              G = {},
              z = [];
            function _e(Ne, je, xe) {
              var Ue = hS(Ne),
                ze = (G[Ue] = G[Ue] || []),
                Fe = Ne == null ? 0 : typeof Ne == "string" ? 1 : Ne.length,
                qe = 0 < je,
                qe = r(r({}, xe), {
                  name: qe
                    ? "".concat(Ue, "(virtual-from:").concat(xe.name, ")")
                    : xe.name,
                  lowLevelIndex: xe,
                  isVirtual: qe,
                  keyTail: je,
                  keyLength: Fe,
                  extractKey: uC(Ne),
                  unique: !qe && xe.unique,
                });
              return (
                ze.push(qe),
                qe.isPrimaryKey || z.push(qe),
                1 < Fe &&
                  _e(Fe === 2 ? Ne[0] : Ne.slice(0, Fe - 1), je + 1, xe),
                ze.sort(function (Ye, Je) {
                  return Ye.keyTail - Je.keyTail;
                }),
                qe
              );
            }
            (S = _e(N.primaryKey.keyPath, 0, N.primaryKey)), (G[":id"] = [S]);
            for (var Ie = 0, Le = N.indexes; Ie < Le.length; Ie++) {
              var ke = Le[Ie];
              _e(ke.keyPath, 0, ke);
            }
            function Ve(Ne) {
              var je,
                xe = Ne.query.index;
              return xe.isVirtual
                ? r(r({}, Ne), {
                    query: {
                      index: xe.lowLevelIndex,
                      range:
                        ((je = Ne.query.range),
                        (xe = xe.keyTail),
                        {
                          type: je.type === 1 ? 2 : je.type,
                          lower: k_(
                            je.lower,
                            je.lowerOpen ? f.MAX_KEY : f.MIN_KEY,
                            xe
                          ),
                          lowerOpen: !0,
                          upper: k_(
                            je.upper,
                            je.upperOpen ? f.MIN_KEY : f.MAX_KEY,
                            xe
                          ),
                          upperOpen: !0,
                        }),
                    },
                  })
                : Ne;
            }
            return r(r({}, A), {
              schema: r(r({}, N), {
                primaryKey: S,
                indexes: z,
                getIndexByKeyPath: function (Ne) {
                  return (Ne = G[hS(Ne)]) && Ne[0];
                },
              }),
              count: function (Ne) {
                return A.count(Ve(Ne));
              },
              query: function (Ne) {
                return A.query(Ve(Ne));
              },
              openCursor: function (Ne) {
                var je = Ne.query.index,
                  xe = je.keyTail,
                  Ue = je.isVirtual,
                  ze = je.keyLength;
                return Ue
                  ? A.openCursor(Ve(Ne)).then(function (qe) {
                      return qe && Fe(qe);
                    })
                  : A.openCursor(Ne);
                function Fe(qe) {
                  return Object.create(qe, {
                    continue: {
                      value: function (Ye) {
                        Ye != null
                          ? qe.continue(
                              k_(Ye, Ne.reverse ? f.MAX_KEY : f.MIN_KEY, xe)
                            )
                          : Ne.unique
                          ? qe.continue(
                              qe.key
                                .slice(0, ze)
                                .concat(Ne.reverse ? f.MIN_KEY : f.MAX_KEY, xe)
                            )
                          : qe.continue();
                      },
                    },
                    continuePrimaryKey: {
                      value: function (Ye, Je) {
                        qe.continuePrimaryKey(k_(Ye, f.MAX_KEY, xe), Je);
                      },
                    },
                    primaryKey: {
                      get: function () {
                        return qe.primaryKey;
                      },
                    },
                    key: {
                      get: function () {
                        var Ye = qe.key;
                        return ze === 1 ? Ye[0] : Ye.slice(0, ze);
                      },
                    },
                    value: {
                      get: function () {
                        return qe.value;
                      },
                    },
                  });
                }
              },
            });
          },
        });
      },
    };
    function EC(f, S, A, N) {
      return (
        (A = A || {}),
        (N = N || ""),
        i(f).forEach(function (G) {
          var z, _e, Ie;
          d(S, G)
            ? ((z = f[G]),
              (_e = S[G]),
              typeof z == "object" && typeof _e == "object" && z && _e
                ? (Ie = x(z)) !== x(_e)
                  ? (A[N + G] = S[G])
                  : Ie === "Object"
                  ? EC(z, _e, A, N + G + ".")
                  : z !== _e && (A[N + G] = S[G])
                : z !== _e && (A[N + G] = S[G]))
            : (A[N + G] = void 0);
        }),
        i(S).forEach(function (G) {
          d(f, G) || (A[N + G] = S[G]);
        }),
        A
      );
    }
    function TC(f, S) {
      return S.type === "delete"
        ? S.keys
        : S.keys || S.values.map(f.extractKey);
    }
    var gSe = {
      stack: "dbcore",
      name: "HooksMiddleware",
      level: 2,
      create: function (f) {
        return r(r({}, f), {
          table: function (S) {
            var A = f.table(S),
              N = A.schema.primaryKey;
            return r(r({}, A), {
              mutate: function (G) {
                var z = Rt.trans,
                  _e = z.table(S).hook,
                  Ie = _e.deleting,
                  Le = _e.creating,
                  ke = _e.updating;
                switch (G.type) {
                  case "add":
                    if (Le.fire === ct) break;
                    return z._promise(
                      "readwrite",
                      function () {
                        return Ve(G);
                      },
                      !0
                    );
                  case "put":
                    if (Le.fire === ct && ke.fire === ct) break;
                    return z._promise(
                      "readwrite",
                      function () {
                        return Ve(G);
                      },
                      !0
                    );
                  case "delete":
                    if (Ie.fire === ct) break;
                    return z._promise(
                      "readwrite",
                      function () {
                        return Ve(G);
                      },
                      !0
                    );
                  case "deleteRange":
                    if (Ie.fire === ct) break;
                    return z._promise(
                      "readwrite",
                      function () {
                        return (function Ne(je, xe, Ue) {
                          return A.query({
                            trans: je,
                            values: !1,
                            query: { index: N, range: xe },
                            limit: Ue,
                          }).then(function (ze) {
                            var Fe = ze.result;
                            return Ve({
                              type: "delete",
                              keys: Fe,
                              trans: je,
                            }).then(function (qe) {
                              return 0 < qe.numFailures
                                ? Promise.reject(qe.failures[0])
                                : Fe.length < Ue
                                ? {
                                    failures: [],
                                    numFailures: 0,
                                    lastResult: void 0,
                                  }
                                : Ne(
                                    je,
                                    r(r({}, xe), {
                                      lower: Fe[Fe.length - 1],
                                      lowerOpen: !0,
                                    }),
                                    Ue
                                  );
                            });
                          });
                        })(G.trans, G.range, 1e4);
                      },
                      !0
                    );
                }
                return A.mutate(G);
                function Ve(Ne) {
                  var je,
                    xe,
                    Ue,
                    ze = Rt.trans,
                    Fe = Ne.keys || TC(N, Ne);
                  if (!Fe) throw new Error("Keys missing");
                  return (
                    (Ne =
                      Ne.type === "add" || Ne.type === "put"
                        ? r(r({}, Ne), { keys: Fe })
                        : r({}, Ne)).type !== "delete" &&
                      (Ne.values = a([], Ne.values, !0)),
                    Ne.keys && (Ne.keys = a([], Ne.keys, !0)),
                    (je = A),
                    (Ue = Fe),
                    ((xe = Ne).type === "add"
                      ? Promise.resolve([])
                      : je.getMany({
                          trans: xe.trans,
                          keys: Ue,
                          cache: "immutable",
                        })
                    ).then(function (qe) {
                      var Ye = Fe.map(function (Je, et) {
                        var ut,
                          Tt,
                          mt,
                          vt = qe[et],
                          wt = { onerror: null, onsuccess: null };
                        return (
                          Ne.type === "delete"
                            ? Ie.fire.call(wt, Je, vt, ze)
                            : Ne.type === "add" || vt === void 0
                            ? ((ut = Le.fire.call(wt, Je, Ne.values[et], ze)),
                              Je == null &&
                                ut != null &&
                                ((Ne.keys[et] = Je = ut),
                                N.outbound || U(Ne.values[et], N.keyPath, Je)))
                            : ((ut = EC(vt, Ne.values[et])),
                              (Tt = ke.fire.call(wt, ut, Je, vt, ze)) &&
                                ((mt = Ne.values[et]),
                                Object.keys(Tt).forEach(function (Pt) {
                                  d(mt, Pt)
                                    ? (mt[Pt] = Tt[Pt])
                                    : U(mt, Pt, Tt[Pt]);
                                }))),
                          wt
                        );
                      });
                      return A.mutate(Ne)
                        .then(function (Je) {
                          for (
                            var et = Je.failures,
                              ut = Je.results,
                              Tt = Je.numFailures,
                              Je = Je.lastResult,
                              mt = 0;
                            mt < Fe.length;
                            ++mt
                          ) {
                            var vt = (ut || Fe)[mt],
                              wt = Ye[mt];
                            vt == null
                              ? wt.onerror && wt.onerror(et[mt])
                              : wt.onsuccess &&
                                wt.onsuccess(
                                  Ne.type === "put" && qe[mt]
                                    ? Ne.values[mt]
                                    : vt
                                );
                          }
                          return {
                            failures: et,
                            results: ut,
                            numFailures: Tt,
                            lastResult: Je,
                          };
                        })
                        .catch(function (Je) {
                          return (
                            Ye.forEach(function (et) {
                              return et.onerror && et.onerror(Je);
                            }),
                            Promise.reject(Je)
                          );
                        });
                    })
                  );
                }
              },
            });
          },
        });
      },
    };
    function kF(f, S, A) {
      try {
        if (!S || S.keys.length < f.length) return null;
        for (var N = [], G = 0, z = 0; G < S.keys.length && z < f.length; ++G)
          un(S.keys[G], f[z]) === 0 &&
            (N.push(A ? Ce(S.values[G]) : S.values[G]), ++z);
        return N.length === f.length ? N : null;
      } catch {
        return null;
      }
    }
    var vSe = {
      stack: "dbcore",
      level: -1,
      create: function (f) {
        return {
          table: function (S) {
            var A = f.table(S);
            return r(r({}, A), {
              getMany: function (N) {
                if (!N.cache) return A.getMany(N);
                var G = kF(N.keys, N.trans._cache, N.cache === "clone");
                return G
                  ? Et.resolve(G)
                  : A.getMany(N).then(function (z) {
                      return (
                        (N.trans._cache = {
                          keys: N.keys,
                          values: N.cache === "clone" ? Ce(z) : z,
                        }),
                        z
                      );
                    });
              },
              mutate: function (N) {
                return N.type !== "add" && (N.trans._cache = null), A.mutate(N);
              },
            });
          },
        };
      },
    };
    function xF(f, S) {
      return (
        f.trans.mode === "readonly" &&
        !!f.subscr &&
        !f.trans.explicit &&
        f.trans.db._options.cache !== "disabled" &&
        !S.schema.primaryKey.outbound
      );
    }
    function LF(f, S) {
      switch (f) {
        case "query":
          return S.values && !S.unique;
        case "get":
        case "getMany":
        case "count":
        case "openCursor":
          return !1;
      }
    }
    var _Se = {
      stack: "dbcore",
      level: 0,
      name: "Observability",
      create: function (f) {
        var S = f.schema.name,
          A = new Fr(f.MIN_KEY, f.MAX_KEY);
        return r(r({}, f), {
          transaction: function (N, G, z) {
            if (Rt.subscr && G !== "readonly")
              throw new Re.ReadOnly(
                "Readwrite transaction in liveQuery context. Querier source: ".concat(
                  Rt.querier
                )
              );
            return f.transaction(N, G, z);
          },
          table: function (N) {
            var G = f.table(N),
              z = G.schema,
              _e = z.primaryKey,
              Ne = z.indexes,
              Ie = _e.extractKey,
              Le = _e.outbound,
              ke =
                _e.autoIncrement &&
                Ne.filter(function (xe) {
                  return xe.compound && xe.keyPath.includes(_e.keyPath);
                }),
              Ve = r(r({}, G), {
                mutate: function (xe) {
                  function Ue(Pt) {
                    return (
                      (Pt = "idb://".concat(S, "/").concat(N, "/").concat(Pt)),
                      Je[Pt] || (Je[Pt] = new Fr())
                    );
                  }
                  var ze,
                    Fe,
                    qe,
                    Ye = xe.trans,
                    Je = xe.mutatedParts || (xe.mutatedParts = {}),
                    et = Ue(""),
                    ut = Ue(":dels"),
                    Tt = xe.type,
                    wt =
                      xe.type === "deleteRange"
                        ? [xe.range]
                        : xe.type === "delete"
                        ? [xe.keys]
                        : xe.values.length < 50
                        ? [
                            TC(_e, xe).filter(function (Pt) {
                              return Pt;
                            }),
                            xe.values,
                          ]
                        : [],
                    mt = wt[0],
                    vt = wt[1],
                    wt = xe.trans._cache;
                  return (
                    o(mt)
                      ? (et.addKeys(mt),
                        (wt =
                          Tt === "delete" || mt.length === vt.length
                            ? kF(mt, wt)
                            : null) || ut.addKeys(mt),
                        (wt || vt) &&
                          ((ze = Ue),
                          (Fe = wt),
                          (qe = vt),
                          z.indexes.forEach(function (Pt) {
                            var Jt = ze(Pt.name || "");
                            function gn(vn) {
                              return vn != null ? Pt.extractKey(vn) : null;
                            }
                            function Cn(vn) {
                              return Pt.multiEntry && o(vn)
                                ? vn.forEach(function (io) {
                                    return Jt.addKey(io);
                                  })
                                : Jt.addKey(vn);
                            }
                            (Fe || qe).forEach(function (vn, Ur) {
                              var _n = Fe && gn(Fe[Ur]),
                                Ur = qe && gn(qe[Ur]);
                              un(_n, Ur) !== 0 &&
                                (_n != null && Cn(_n), Ur != null && Cn(Ur));
                            });
                          })))
                      : mt
                      ? ((vt = { from: mt.lower, to: mt.upper }),
                        ut.add(vt),
                        et.add(vt))
                      : (et.add(A),
                        ut.add(A),
                        z.indexes.forEach(function (Pt) {
                          return Ue(Pt.name).add(A);
                        })),
                    G.mutate(xe).then(function (Pt) {
                      return (
                        !mt ||
                          (xe.type !== "add" && xe.type !== "put") ||
                          (et.addKeys(Pt.results),
                          ke &&
                            ke.forEach(function (Jt) {
                              var gn = xe.values.map(function (vn) {
                                  return Jt.extractKey(vn);
                                }),
                                Cn = Jt.keyPath.findIndex(function (vn) {
                                  return vn === _e.keyPath;
                                });
                              Pt.results.forEach(function (vn) {
                                return (gn[Cn] = vn);
                              }),
                                Ue(Jt.name).addKeys(gn);
                            })),
                        (Ye.mutatedParts = N_(Ye.mutatedParts || {}, Je)),
                        Pt
                      );
                    })
                  );
                },
              }),
              Ne = function (Ue) {
                var ze = Ue.query,
                  Ue = ze.index,
                  ze = ze.range;
                return [
                  Ue,
                  new Fr(
                    (Ue = ze.lower) !== null && Ue !== void 0 ? Ue : f.MIN_KEY,
                    (ze = ze.upper) !== null && ze !== void 0 ? ze : f.MAX_KEY
                  ),
                ];
              },
              je = {
                get: function (xe) {
                  return [_e, new Fr(xe.key)];
                },
                getMany: function (xe) {
                  return [_e, new Fr().addKeys(xe.keys)];
                },
                count: Ne,
                query: Ne,
                openCursor: Ne,
              };
            return (
              i(je).forEach(function (xe) {
                Ve[xe] = function (Ue) {
                  var ze = Rt.subscr,
                    Fe = !!ze,
                    qe = xF(Rt, G) && LF(xe, Ue) ? (Ue.obsSet = {}) : ze;
                  if (Fe) {
                    var Ye = function (vt) {
                        return (
                          (vt = "idb://"
                            .concat(S, "/")
                            .concat(N, "/")
                            .concat(vt)),
                          qe[vt] || (qe[vt] = new Fr())
                        );
                      },
                      Je = Ye(""),
                      et = Ye(":dels"),
                      ze = je[xe](Ue),
                      Fe = ze[0],
                      ze = ze[1];
                    if (
                      ((xe === "query" && Fe.isPrimaryKey && !Ue.values
                        ? et
                        : Ye(Fe.name || "")
                      ).add(ze),
                      !Fe.isPrimaryKey)
                    ) {
                      if (xe !== "count") {
                        var ut =
                          xe === "query" &&
                          Le &&
                          Ue.values &&
                          G.query(r(r({}, Ue), { values: !1 }));
                        return G[xe].apply(this, arguments).then(function (vt) {
                          if (xe === "query") {
                            if (Le && Ue.values)
                              return ut.then(function (gn) {
                                return (gn = gn.result), Je.addKeys(gn), vt;
                              });
                            var wt = Ue.values ? vt.result.map(Ie) : vt.result;
                            (Ue.values ? Je : et).addKeys(wt);
                          } else if (xe === "openCursor") {
                            var Pt = vt,
                              Jt = Ue.values;
                            return (
                              Pt &&
                              Object.create(Pt, {
                                key: {
                                  get: function () {
                                    return et.addKey(Pt.primaryKey), Pt.key;
                                  },
                                },
                                primaryKey: {
                                  get: function () {
                                    var gn = Pt.primaryKey;
                                    return et.addKey(gn), gn;
                                  },
                                },
                                value: {
                                  get: function () {
                                    return (
                                      Jt && Je.addKey(Pt.primaryKey), Pt.value
                                    );
                                  },
                                },
                              })
                            );
                          }
                          return vt;
                        });
                      }
                      et.add(A);
                    }
                  }
                  return G[xe].apply(this, arguments);
                };
              }),
              Ve
            );
          },
        });
      },
    };
    function MF(f, S, A) {
      if (A.numFailures === 0) return S;
      if (S.type === "deleteRange") return null;
      var N = S.keys
        ? S.keys.length
        : "values" in S && S.values
        ? S.values.length
        : 1;
      return A.numFailures === N
        ? null
        : ((S = r({}, S)),
          o(S.keys) &&
            (S.keys = S.keys.filter(function (G, z) {
              return !(z in A.failures);
            })),
          "values" in S &&
            o(S.values) &&
            (S.values = S.values.filter(function (G, z) {
              return !(z in A.failures);
            })),
          S);
    }
    function wC(f, S) {
      return (
        (A = f),
        ((N = S).lower === void 0 ||
          (N.lowerOpen ? 0 < un(A, N.lower) : 0 <= un(A, N.lower))) &&
          ((f = f),
          (S = S).upper === void 0 ||
            (S.upperOpen ? un(f, S.upper) < 0 : un(f, S.upper) <= 0))
      );
      var A, N;
    }
    function DF(f, S, je, N, G, z) {
      if (!je || je.length === 0) return f;
      var _e = S.query.index,
        Ie = _e.multiEntry,
        Le = S.query.range,
        ke = N.schema.primaryKey.extractKey,
        Ve = _e.extractKey,
        Ne = (_e.lowLevelIndex || _e).extractKey,
        je = je.reduce(function (xe, Ue) {
          var ze = xe,
            Fe =
              Ue.type === "add" || Ue.type === "put"
                ? Ue.values
                    .filter(function (et) {
                      return (
                        (et = Ve(et)),
                        Ie && o(et)
                          ? et.some(function (ut) {
                              return wC(ut, Le);
                            })
                          : wC(et, Le)
                      );
                    })
                    .map(function (et) {
                      return (et = Ce(et)), z && Object.freeze(et), et;
                    })
                : [];
          switch (Ue.type) {
            case "add":
              ze = xe.concat(
                S.values
                  ? Fe
                  : Fe.map(function (ut) {
                      return ke(ut);
                    })
              );
              break;
            case "put":
              var qe = new Fr().addKeys(
                  Ue.values.map(function (ut) {
                    return ke(ut);
                  })
                ),
                ze = xe
                  .filter(function (ut) {
                    return (ut = S.values ? ke(ut) : ut), !H_(new Fr(ut), qe);
                  })
                  .concat(
                    S.values
                      ? Fe
                      : Fe.map(function (ut) {
                          return ke(ut);
                        })
                  );
              break;
            case "delete":
              var Ye = new Fr().addKeys(Ue.keys);
              ze = xe.filter(function (ut) {
                return (ut = S.values ? ke(ut) : ut), !H_(new Fr(ut), Ye);
              });
              break;
            case "deleteRange":
              var Je = Ue.range;
              ze = xe.filter(function (ut) {
                return !wC(ke(ut), Je);
              });
          }
          return ze;
        }, f);
      return je === f
        ? f
        : (je.sort(function (xe, Ue) {
            return un(Ne(xe), Ne(Ue)) || un(ke(xe), ke(Ue));
          }),
          S.limit &&
            S.limit < 1 / 0 &&
            (je.length > S.limit
              ? (je.length = S.limit)
              : f.length === S.limit && je.length < S.limit && (G.dirty = !0)),
          z ? Object.freeze(je) : je);
    }
    function GF(f, S) {
      return (
        un(f.lower, S.lower) === 0 &&
        un(f.upper, S.upper) === 0 &&
        !!f.lowerOpen == !!S.lowerOpen &&
        !!f.upperOpen == !!S.upperOpen
      );
    }
    function bSe(f, S) {
      return (
        (function (A, N, G, z) {
          if (A === void 0) return N !== void 0 ? -1 : 0;
          if (N === void 0) return 1;
          if ((N = un(A, N)) === 0) {
            if (G && z) return 0;
            if (G) return 1;
            if (z) return -1;
          }
          return N;
        })(f.lower, S.lower, f.lowerOpen, S.lowerOpen) <= 0 &&
        0 <=
          (function (A, N, G, z) {
            if (A === void 0) return N !== void 0 ? 1 : 0;
            if (N === void 0) return -1;
            if ((N = un(A, N)) === 0) {
              if (G && z) return 0;
              if (G) return -1;
              if (z) return 1;
            }
            return N;
          })(f.upper, S.upper, f.upperOpen, S.upperOpen)
      );
    }
    function ESe(f, S, A, N) {
      f.subscribers.add(A),
        N.addEventListener("abort", function () {
          var G, z;
          f.subscribers.delete(A),
            f.subscribers.size === 0 &&
              ((G = f),
              (z = S),
              setTimeout(function () {
                G.subscribers.size === 0 && ye(z, G);
              }, 3e3));
        });
    }
    var TSe = {
      stack: "dbcore",
      level: 0,
      name: "Cache",
      create: function (f) {
        var S = f.schema.name;
        return r(r({}, f), {
          transaction: function (A, N, G) {
            var z,
              _e,
              Ie = f.transaction(A, N, G);
            return (
              N === "readwrite" &&
                ((_e = (z = new AbortController()).signal),
                (G = function (Le) {
                  return function () {
                    if ((z.abort(), N === "readwrite")) {
                      for (
                        var ke = new Set(), Ve = 0, Ne = A;
                        Ve < Ne.length;
                        Ve++
                      ) {
                        var je = Ne[Ve],
                          xe = bd["idb://".concat(S, "/").concat(je)];
                        if (xe) {
                          var Ue = f.table(je),
                            ze = xe.optimisticOps.filter(function (Jt) {
                              return Jt.trans === Ie;
                            });
                          if (Ie._explicit && Le && Ie.mutatedParts)
                            for (
                              var Fe = 0, qe = Object.values(xe.queries.query);
                              Fe < qe.length;
                              Fe++
                            )
                              for (
                                var Ye = 0, Je = (Tt = qe[Fe]).slice();
                                Ye < Je.length;
                                Ye++
                              )
                                yC((mt = Je[Ye]).obsSet, Ie.mutatedParts) &&
                                  (ye(Tt, mt),
                                  mt.subscribers.forEach(function (Jt) {
                                    return ke.add(Jt);
                                  }));
                          else if (0 < ze.length) {
                            xe.optimisticOps = xe.optimisticOps.filter(
                              function (Jt) {
                                return Jt.trans !== Ie;
                              }
                            );
                            for (
                              var et = 0, ut = Object.values(xe.queries.query);
                              et < ut.length;
                              et++
                            )
                              for (
                                var Tt,
                                  mt,
                                  vt,
                                  wt = 0,
                                  Pt = (Tt = ut[et]).slice();
                                wt < Pt.length;
                                wt++
                              )
                                (mt = Pt[wt]).res != null &&
                                  Ie.mutatedParts &&
                                  (Le && !mt.dirty
                                    ? ((vt = Object.isFrozen(mt.res)),
                                      (vt = DF(mt.res, mt.req, ze, Ue, mt, vt)),
                                      mt.dirty
                                        ? (ye(Tt, mt),
                                          mt.subscribers.forEach(function (Jt) {
                                            return ke.add(Jt);
                                          }))
                                        : vt !== mt.res &&
                                          ((mt.res = vt),
                                          (mt.promise = Et.resolve({
                                            result: vt,
                                          }))))
                                    : (mt.dirty && ye(Tt, mt),
                                      mt.subscribers.forEach(function (Jt) {
                                        return ke.add(Jt);
                                      })));
                          }
                        }
                      }
                      ke.forEach(function (Jt) {
                        return Jt();
                      });
                    }
                  };
                }),
                Ie.addEventListener("abort", G(!1), { signal: _e }),
                Ie.addEventListener("error", G(!1), { signal: _e }),
                Ie.addEventListener("complete", G(!0), { signal: _e })),
              Ie
            );
          },
          table: function (A) {
            var N = f.table(A),
              G = N.schema.primaryKey;
            return r(r({}, N), {
              mutate: function (z) {
                var _e = Rt.trans;
                if (
                  G.outbound ||
                  _e.db._options.cache === "disabled" ||
                  _e.explicit
                )
                  return N.mutate(z);
                var Ie = bd["idb://".concat(S, "/").concat(A)];
                return Ie
                  ? ((_e = N.mutate(z)),
                    (z.type !== "add" && z.type !== "put") ||
                    !(
                      50 <= z.values.length ||
                      TC(G, z).some(function (Le) {
                        return Le == null;
                      })
                    )
                      ? (Ie.optimisticOps.push(z),
                        z.mutatedParts && R_(z.mutatedParts),
                        _e.then(function (Le) {
                          0 < Le.numFailures &&
                            (ye(Ie.optimisticOps, z),
                            (Le = MF(0, z, Le)) && Ie.optimisticOps.push(Le),
                            z.mutatedParts && R_(z.mutatedParts));
                        }),
                        _e.catch(function () {
                          ye(Ie.optimisticOps, z),
                            z.mutatedParts && R_(z.mutatedParts);
                        }))
                      : _e.then(function (Le) {
                          var ke = MF(
                            0,
                            r(r({}, z), {
                              values: z.values.map(function (xe, Ne) {
                                var je,
                                  xe =
                                    (je = G.keyPath) !== null &&
                                    je !== void 0 &&
                                    je.includes(".")
                                      ? Ce(xe)
                                      : r({}, xe);
                                return U(xe, G.keyPath, Le.results[Ne]), xe;
                              }),
                            }),
                            Le
                          );
                          Ie.optimisticOps.push(ke),
                            queueMicrotask(function () {
                              return z.mutatedParts && R_(z.mutatedParts);
                            });
                        }),
                    _e)
                  : N.mutate(z);
              },
              query: function (z) {
                if (!xF(Rt, N) || !LF("query", z)) return N.query(z);
                var _e =
                    ((ke = Rt.trans) === null || ke === void 0
                      ? void 0
                      : ke.db._options.cache) === "immutable",
                  Ne = Rt,
                  Ie = Ne.requery,
                  Le = Ne.signal,
                  ke = (function (Ue, ze, Fe, qe) {
                    var Ye = bd["idb://".concat(Ue, "/").concat(ze)];
                    if (!Ye) return [];
                    if (!(ze = Ye.queries[Fe])) return [null, !1, Ye, null];
                    var Je = ze[(qe.query ? qe.query.index.name : null) || ""];
                    if (!Je) return [null, !1, Ye, null];
                    switch (Fe) {
                      case "query":
                        var et = Je.find(function (ut) {
                          return (
                            ut.req.limit === qe.limit &&
                            ut.req.values === qe.values &&
                            GF(ut.req.query.range, qe.query.range)
                          );
                        });
                        return et
                          ? [et, !0, Ye, Je]
                          : [
                              Je.find(function (ut) {
                                return (
                                  ("limit" in ut.req ? ut.req.limit : 1 / 0) >=
                                    qe.limit &&
                                  (!qe.values || ut.req.values) &&
                                  bSe(ut.req.query.range, qe.query.range)
                                );
                              }),
                              !1,
                              Ye,
                              Je,
                            ];
                      case "count":
                        return (
                          (et = Je.find(function (ut) {
                            return GF(ut.req.query.range, qe.query.range);
                          })),
                          [et, !!et, Ye, Je]
                        );
                    }
                  })(S, A, "query", z),
                  Ve = ke[0],
                  Ne = ke[1],
                  je = ke[2],
                  xe = ke[3];
                return (
                  Ve && Ne
                    ? (Ve.obsSet = z.obsSet)
                    : ((Ne = N.query(z)
                        .then(function (Ue) {
                          var ze = Ue.result;
                          if ((Ve && (Ve.res = ze), _e)) {
                            for (var Fe = 0, qe = ze.length; Fe < qe; ++Fe)
                              Object.freeze(ze[Fe]);
                            Object.freeze(ze);
                          } else Ue.result = Ce(ze);
                          return Ue;
                        })
                        .catch(function (Ue) {
                          return xe && Ve && ye(xe, Ve), Promise.reject(Ue);
                        })),
                      (Ve = {
                        obsSet: z.obsSet,
                        promise: Ne,
                        subscribers: new Set(),
                        type: "query",
                        req: z,
                        dirty: !1,
                      }),
                      xe
                        ? xe.push(Ve)
                        : ((xe = [Ve]),
                          ((je =
                            je ||
                            (bd["idb://".concat(S, "/").concat(A)] = {
                              queries: { query: {}, count: {} },
                              objs: new Map(),
                              optimisticOps: [],
                              unsignaledParts: {},
                            })).queries.query[z.query.index.name || ""] = xe))),
                  ESe(Ve, xe, Ie, Le),
                  Ve.promise.then(function (Ue) {
                    return {
                      result: DF(
                        Ue.result,
                        z,
                        je == null ? void 0 : je.optimisticOps,
                        N,
                        Ve,
                        _e
                      ),
                    };
                  })
                );
              },
            });
          },
        });
      },
    };
    function x_(f, S) {
      return new Proxy(f, {
        get: function (A, N, G) {
          return N === "db" ? S : Reflect.get(A, N, G);
        },
      });
    }
    var Fu =
      ((nr.prototype.version = function (f) {
        if (isNaN(f) || f < 0.1)
          throw new Re.Type("Given version is not a positive number");
        if (
          ((f = Math.round(10 * f) / 10),
          this.idbdb || this._state.isBeingOpened)
        )
          throw new Re.Schema("Cannot add version when database is open");
        this.verno = Math.max(this.verno, f);
        var S = this._versions,
          A = S.filter(function (N) {
            return N._cfg.version === f;
          })[0];
        return (
          A ||
          ((A = new this.Version(f)),
          S.push(A),
          S.sort(pSe),
          A.stores({}),
          (this._state.autoSchema = !1),
          A)
        );
      }),
      (nr.prototype._whenReady = function (f) {
        var S = this;
        return this.idbdb &&
          (this._state.openComplete || Rt.letThrough || this._vip)
          ? f()
          : new Et(function (A, N) {
              if (S._state.openComplete)
                return N(new Re.DatabaseClosed(S._state.dbOpenError));
              if (!S._state.isBeingOpened) {
                if (!S._state.autoOpen) return void N(new Re.DatabaseClosed());
                S.open().catch(ct);
              }
              S._state.dbReadyPromise.then(A, N);
            }).then(f);
      }),
      (nr.prototype.use = function (f) {
        var S = f.stack,
          A = f.create,
          N = f.level,
          G = f.name;
        return (
          G && this.unuse({ stack: S, name: G }),
          (f = this._middlewares[S] || (this._middlewares[S] = [])),
          f.push({ stack: S, create: A, level: N ?? 10, name: G }),
          f.sort(function (z, _e) {
            return z.level - _e.level;
          }),
          this
        );
      }),
      (nr.prototype.unuse = function (f) {
        var S = f.stack,
          A = f.name,
          N = f.create;
        return (
          S &&
            this._middlewares[S] &&
            (this._middlewares[S] = this._middlewares[S].filter(function (G) {
              return N ? G.create !== N : !!A && G.name !== A;
            })),
          this
        );
      }),
      (nr.prototype.open = function () {
        var f = this;
        return ro(ds, function () {
          return SSe(f);
        });
      }),
      (nr.prototype._close = function () {
        var f = this._state,
          S = dt.indexOf(this);
        if ((0 <= S && dt.splice(S, 1), this.idbdb)) {
          try {
            this.idbdb.close();
          } catch {}
          this.idbdb = null;
        }
        f.isBeingOpened ||
          ((f.dbReadyPromise = new Et(function (A) {
            f.dbReadyResolve = A;
          })),
          (f.openCanceller = new Et(function (A, N) {
            f.cancelOpen = N;
          })));
      }),
      (nr.prototype.close = function (A) {
        var S = (A === void 0 ? { disableAutoOpen: !0 } : A).disableAutoOpen,
          A = this._state;
        S
          ? (A.isBeingOpened && A.cancelOpen(new Re.DatabaseClosed()),
            this._close(),
            (A.autoOpen = !1),
            (A.dbOpenError = new Re.DatabaseClosed()))
          : (this._close(),
            (A.autoOpen = this._options.autoOpen || A.isBeingOpened),
            (A.openComplete = !1),
            (A.dbOpenError = null));
      }),
      (nr.prototype.delete = function (f) {
        var S = this;
        f === void 0 && (f = { disableAutoOpen: !0 });
        var A = 0 < arguments.length && typeof arguments[0] != "object",
          N = this._state;
        return new Et(function (G, z) {
          function _e() {
            S.close(f);
            var Ie = S._deps.indexedDB.deleteDatabase(S.name);
            (Ie.onsuccess = ps(function () {
              var Le, ke, Ve;
              (Le = S._deps),
                (ke = S.name),
                (Ve = Le.indexedDB),
                (Le = Le.IDBKeyRange),
                hC(Ve) || ke === ft || pC(Ve, Le).delete(ke).catch(ct),
                G();
            })),
              (Ie.onerror = Vo(z)),
              (Ie.onblocked = S._fireOnBlocked);
          }
          if (A)
            throw new Re.InvalidArgument(
              "Invalid closeOptions argument to db.delete()"
            );
          N.isBeingOpened ? N.dbReadyPromise.then(_e) : _e();
        });
      }),
      (nr.prototype.backendDB = function () {
        return this.idbdb;
      }),
      (nr.prototype.isOpen = function () {
        return this.idbdb !== null;
      }),
      (nr.prototype.hasBeenClosed = function () {
        var f = this._state.dbOpenError;
        return f && f.name === "DatabaseClosed";
      }),
      (nr.prototype.hasFailed = function () {
        return this._state.dbOpenError !== null;
      }),
      (nr.prototype.dynamicallyOpened = function () {
        return this._state.autoSchema;
      }),
      Object.defineProperty(nr.prototype, "tables", {
        get: function () {
          var f = this;
          return i(this._allTables).map(function (S) {
            return f._allTables[S];
          });
        },
        enumerable: !1,
        configurable: !0,
      }),
      (nr.prototype.transaction = function () {
        var f = function (S, A, N) {
          var G = arguments.length;
          if (G < 2) throw new Re.InvalidArgument("Too few arguments");
          for (var z = new Array(G - 1); --G; ) z[G - 1] = arguments[G];
          return (N = z.pop()), [S, ve(z), N];
        }.apply(this, arguments);
        return this._transaction.apply(this, f);
      }),
      (nr.prototype._transaction = function (f, S, A) {
        var N = this,
          G = Rt.trans;
        (G && G.db === this && f.indexOf("!") === -1) || (G = null);
        var z,
          _e,
          Ie = f.indexOf("?") !== -1;
        f = f.replace("!", "").replace("?", "");
        try {
          if (
            ((_e = S.map(function (ke) {
              if (
                ((ke = ke instanceof N.Table ? ke.name : ke),
                typeof ke != "string")
              )
                throw new TypeError(
                  "Invalid table argument to Dexie.transaction(). Only Table or String are allowed"
                );
              return ke;
            })),
            f == "r" || f === Ot)
          )
            z = Ot;
          else {
            if (f != "rw" && f != xt)
              throw new Re.InvalidArgument("Invalid transaction mode: " + f);
            z = xt;
          }
          if (G) {
            if (G.mode === Ot && z === xt) {
              if (!Ie)
                throw new Re.SubTransaction(
                  "Cannot enter a sub-transaction with READWRITE mode when parent transaction is READONLY"
                );
              G = null;
            }
            G &&
              _e.forEach(function (ke) {
                if (G && G.storeNames.indexOf(ke) === -1) {
                  if (!Ie)
                    throw new Re.SubTransaction(
                      "Table " + ke + " not included in parent transaction."
                    );
                  G = null;
                }
              }),
              Ie && G && !G.active && (G = null);
          }
        } catch (ke) {
          return G
            ? G._promise(null, function (Ve, Ne) {
                Ne(ke);
              })
            : xs(ke);
        }
        var Le = function ke(Ve, Ne, je, xe, Ue) {
          return Et.resolve().then(function () {
            var ze = Rt.transless || Rt,
              Fe = Ve._createTransaction(Ne, je, Ve._dbSchema, xe);
            if (((Fe.explicit = !0), (ze = { trans: Fe, transless: ze }), xe))
              Fe.idbtrans = xe.idbtrans;
            else
              try {
                Fe.create(),
                  (Fe.idbtrans._explicit = !0),
                  (Ve._state.PR1398_maxLoop = 3);
              } catch (Je) {
                return Je.name === Ge.InvalidState &&
                  Ve.isOpen() &&
                  0 < --Ve._state.PR1398_maxLoop
                  ? (console.warn("Dexie: Need to reopen db"),
                    Ve.close({ disableAutoOpen: !1 }),
                    Ve.open().then(function () {
                      return ke(Ve, Ne, je, null, Ue);
                    }))
                  : xs(Je);
              }
            var qe,
              Ye = lt(Ue);
            return (
              Ye && Bl(),
              (ze = Et.follow(function () {
                var Je;
                (qe = Ue.call(Fe, Fe)) &&
                  (Ye
                    ? ((Je = Ko.bind(null, null)), qe.then(Je, Je))
                    : typeof qe.next == "function" &&
                      typeof qe.throw == "function" &&
                      (qe = bC(qe)));
              }, ze)),
              (qe && typeof qe.then == "function"
                ? Et.resolve(qe).then(function (Je) {
                    return Fe.active
                      ? Je
                      : xs(
                          new Re.PrematureCommit(
                            "Transaction committed too early. See http://bit.ly/2kdckMn"
                          )
                        );
                  })
                : ze.then(function () {
                    return qe;
                  })
              )
                .then(function (Je) {
                  return (
                    xe && Fe._resolve(),
                    Fe._completion.then(function () {
                      return Je;
                    })
                  );
                })
                .catch(function (Je) {
                  return Fe._reject(Je), xs(Je);
                })
            );
          });
        }.bind(null, this, z, _e, G, A);
        return G
          ? G._promise(z, Le, "lock")
          : Rt.trans
          ? ro(Rt.transless, function () {
              return N._whenReady(Le);
            })
          : this._whenReady(Le);
      }),
      (nr.prototype.table = function (f) {
        if (!d(this._allTables, f))
          throw new Re.InvalidTable("Table ".concat(f, " does not exist"));
        return this._allTables[f];
      }),
      nr);
    function nr(f, S) {
      var A = this;
      (this._middlewares = {}), (this.verno = 0);
      var N = nr.dependencies;
      (this._options = S =
        r(
          {
            addons: nr.addons,
            autoOpen: !0,
            indexedDB: N.indexedDB,
            IDBKeyRange: N.IDBKeyRange,
            cache: "cloned",
          },
          S
        )),
        (this._deps = { indexedDB: S.indexedDB, IDBKeyRange: S.IDBKeyRange }),
        (N = S.addons),
        (this._dbSchema = {}),
        (this._versions = []),
        (this._storeNames = []),
        (this._allTables = {}),
        (this.idbdb = null),
        (this._novip = this);
      var G,
        z,
        _e,
        Ie,
        Le,
        ke = {
          dbOpenError: null,
          isBeingOpened: !1,
          onReadyBeingFired: null,
          openComplete: !1,
          dbReadyResolve: ct,
          dbReadyPromise: null,
          cancelOpen: ct,
          openCanceller: null,
          autoSchema: !0,
          PR1398_maxLoop: 3,
          autoOpen: S.autoOpen,
        };
      (ke.dbReadyPromise = new Et(function (Ne) {
        ke.dbReadyResolve = Ne;
      })),
        (ke.openCanceller = new Et(function (Ne, je) {
          ke.cancelOpen = je;
        })),
        (this._state = ke),
        (this.name = f),
        (this.on = uS(this, "populate", "blocked", "versionchange", "close", {
          ready: [Xt, ct],
        })),
        (this.on.ready.subscribe = H(this.on.ready.subscribe, function (Ne) {
          return function (je, xe) {
            nr.vip(function () {
              var Ue,
                ze = A._state;
              ze.openComplete
                ? (ze.dbOpenError || Et.resolve().then(je), xe && Ne(je))
                : ze.onReadyBeingFired
                ? (ze.onReadyBeingFired.push(je), xe && Ne(je))
                : (Ne(je),
                  (Ue = A),
                  xe ||
                    Ne(function Fe() {
                      Ue.on.ready.unsubscribe(je), Ue.on.ready.unsubscribe(Fe);
                    }));
            });
          };
        })),
        (this.Collection =
          ((G = this),
          lS(aSe.prototype, function (qe, Fe) {
            this.db = G;
            var xe = Hn,
              Ue = null;
            if (Fe)
              try {
                xe = Fe();
              } catch (Ye) {
                Ue = Ye;
              }
            var ze = qe._ctx,
              Fe = ze.table,
              qe = Fe.hook.reading.fire;
            this._ctx = {
              table: Fe,
              index: ze.index,
              isPrimKey:
                !ze.index ||
                (Fe.schema.primKey.keyPath &&
                  ze.index === Fe.schema.primKey.name),
              range: xe,
              keysOnly: !1,
              dir: "next",
              unique: "",
              algorithm: null,
              filter: null,
              replayFilter: null,
              justLimit: !0,
              isMatch: null,
              offset: 0,
              limit: 1 / 0,
              error: Ue,
              or: ze.or,
              valueMapper: qe !== ot ? qe : null,
            };
          }))),
        (this.Table =
          ((z = this),
          lS(_F.prototype, function (Ne, je, xe) {
            (this.db = z),
              (this._tx = xe),
              (this.name = Ne),
              (this.schema = je),
              (this.hook = z._allTables[Ne]
                ? z._allTables[Ne].hook
                : uS(null, {
                    creating: [Mt, ct],
                    reading: [rt, ot],
                    updating: [Dt, ct],
                    deleting: [at, ct],
                  }));
          }))),
        (this.Transaction =
          ((_e = this),
          lS(uSe.prototype, function (Ne, je, xe, Ue, ze) {
            var Fe = this;
            (this.db = _e),
              (this.mode = Ne),
              (this.storeNames = je),
              (this.schema = xe),
              (this.chromeTransactionDurability = Ue),
              (this.idbtrans = null),
              (this.on = uS(this, "complete", "error", "abort")),
              (this.parent = ze || null),
              (this.active = !0),
              (this._reculock = 0),
              (this._blockedFuncs = []),
              (this._resolve = null),
              (this._reject = null),
              (this._waitingFor = null),
              (this._waitingQueue = null),
              (this._spinCount = 0),
              (this._completion = new Et(function (qe, Ye) {
                (Fe._resolve = qe), (Fe._reject = Ye);
              })),
              this._completion.then(
                function () {
                  (Fe.active = !1), Fe.on.complete.fire();
                },
                function (qe) {
                  var Ye = Fe.active;
                  return (
                    (Fe.active = !1),
                    Fe.on.error.fire(qe),
                    Fe.parent
                      ? Fe.parent._reject(qe)
                      : Ye && Fe.idbtrans && Fe.idbtrans.abort(),
                    xs(qe)
                  );
                }
              );
          }))),
        (this.Version =
          ((Ie = this),
          lS(mSe.prototype, function (Ne) {
            (this.db = Ie),
              (this._cfg = {
                version: Ne,
                storesSource: null,
                dbschema: {},
                tables: {},
                contentUpgrade: null,
              });
          }))),
        (this.WhereClause =
          ((Le = this),
          lS(PF.prototype, function (Ne, je, xe) {
            if (
              ((this.db = Le),
              (this._ctx = {
                table: Ne,
                index: je === ":id" ? null : je,
                or: xe,
              }),
              (this._cmp = this._ascending = un),
              (this._descending = function (Ue, ze) {
                return un(ze, Ue);
              }),
              (this._max = function (Ue, ze) {
                return 0 < un(Ue, ze) ? Ue : ze;
              }),
              (this._min = function (Ue, ze) {
                return un(Ue, ze) < 0 ? Ue : ze;
              }),
              (this._IDBKeyRange = Le._deps.IDBKeyRange),
              !this._IDBKeyRange)
            )
              throw new Re.MissingAPI();
          }))),
        this.on("versionchange", function (Ne) {
          0 < Ne.newVersion
            ? console.warn(
                "Another connection wants to upgrade database '".concat(
                  A.name,
                  "'. Closing db now to resume the upgrade."
                )
              )
            : console.warn(
                "Another connection wants to delete database '".concat(
                  A.name,
                  "'. Closing db now to resume the delete request."
                )
              ),
            A.close({ disableAutoOpen: !1 });
        }),
        this.on("blocked", function (Ne) {
          !Ne.newVersion || Ne.newVersion < Ne.oldVersion
            ? console.warn("Dexie.delete('".concat(A.name, "') was blocked"))
            : console.warn(
                "Upgrade '"
                  .concat(
                    A.name,
                    "' blocked by other connection holding version "
                  )
                  .concat(Ne.oldVersion / 10)
              );
        }),
        (this._maxKey = pS(S.IDBKeyRange)),
        (this._createTransaction = function (Ne, je, xe, Ue) {
          return new A.Transaction(
            Ne,
            je,
            xe,
            A._options.chromeTransactionDurability,
            Ue
          );
        }),
        (this._fireOnBlocked = function (Ne) {
          A.on("blocked").fire(Ne),
            dt
              .filter(function (je) {
                return je.name === A.name && je !== A && !je._state.vcFired;
              })
              .map(function (je) {
                return je.on("versionchange").fire(Ne);
              });
        }),
        this.use(vSe),
        this.use(TSe),
        this.use(_Se),
        this.use(ySe),
        this.use(gSe);
      var Ve = new Proxy(this, {
        get: function (Ne, je, xe) {
          if (je === "_vip") return !0;
          if (je === "table")
            return function (ze) {
              return x_(A.table(ze), Ve);
            };
          var Ue = Reflect.get(Ne, je, xe);
          return Ue instanceof _F
            ? x_(Ue, Ve)
            : je === "tables"
            ? Ue.map(function (ze) {
                return x_(ze, Ve);
              })
            : je === "_createTransaction"
            ? function () {
                return x_(Ue.apply(this, arguments), Ve);
              }
            : Ue;
        },
      });
      (this.vip = Ve),
        N.forEach(function (Ne) {
          return Ne(A);
        });
    }
    var L_,
      wi =
        typeof Symbol < "u" && "observable" in Symbol
          ? Symbol.observable
          : "@@observable",
      wSe =
        ((PC.prototype.subscribe = function (f, S, A) {
          return this._subscribe(
            f && typeof f != "function" ? f : { next: f, error: S, complete: A }
          );
        }),
        (PC.prototype[wi] = function () {
          return this;
        }),
        PC);
    function PC(f) {
      this._subscribe = f;
    }
    try {
      L_ = {
        indexedDB:
          s.indexedDB || s.mozIndexedDB || s.webkitIndexedDB || s.msIndexedDB,
        IDBKeyRange: s.IDBKeyRange || s.webkitIDBKeyRange,
      };
    } catch {
      L_ = { indexedDB: null, IDBKeyRange: null };
    }
    function FF(f) {
      var S,
        A = !1,
        N = new wSe(function (G) {
          var z = lt(f),
            _e,
            Ie = !1,
            Le = {},
            ke = {},
            Ve = {
              get closed() {
                return Ie;
              },
              unsubscribe: function () {
                Ie ||
                  ((Ie = !0),
                  _e && _e.abort(),
                  Ne && jl.storagemutated.unsubscribe(xe));
              },
            };
          G.start && G.start(Ve);
          var Ne = !1,
            je = function () {
              return oS(Ue);
            },
            xe = function (ze) {
              N_(Le, ze), yC(ke, Le) && je();
            },
            Ue = function () {
              var ze, Fe, qe;
              !Ie &&
                L_.indexedDB &&
                ((Le = {}),
                (ze = {}),
                _e && _e.abort(),
                (_e = new AbortController()),
                (qe = (function (Ye) {
                  var Je = Kl();
                  try {
                    z && Bl();
                    var et = Xa(f, Ye);
                    return (et = z ? et.finally(Ko) : et);
                  } finally {
                    Je && zs();
                  }
                })(
                  (Fe = {
                    subscr: ze,
                    signal: _e.signal,
                    requery: je,
                    querier: f,
                    trans: null,
                  })
                )),
                Promise.resolve(qe).then(
                  function (Ye) {
                    (A = !0),
                      (S = Ye),
                      Ie ||
                        Fe.signal.aborted ||
                        ((Le = {}),
                        (function (Je) {
                          for (var et in Je) if (d(Je, et)) return;
                          return 1;
                        })((ke = ze)) ||
                          Ne ||
                          (jl(dS, xe), (Ne = !0)),
                        oS(function () {
                          return !Ie && G.next && G.next(Ye);
                        }));
                  },
                  function (Ye) {
                    (A = !1),
                      ["DatabaseClosedError", "AbortError"].includes(
                        Ye == null ? void 0 : Ye.name
                      ) ||
                        Ie ||
                        oS(function () {
                          Ie || (G.error && G.error(Ye));
                        });
                  }
                ));
            };
          return setTimeout(je, 0), Ve;
        });
      return (
        (N.hasValue = function () {
          return A;
        }),
        (N.getValue = function () {
          return S;
        }),
        N
      );
    }
    var Ed = Fu;
    function IC(f) {
      var S = zl;
      try {
        (zl = !0), jl.storagemutated.fire(f), _C(f, !0);
      } finally {
        zl = S;
      }
    }
    p(
      Ed,
      r(r({}, Qe), {
        delete: function (f) {
          return new Ed(f, { addons: [] }).delete();
        },
        exists: function (f) {
          return new Ed(f, { addons: [] })
            .open()
            .then(function (S) {
              return S.close(), !0;
            })
            .catch("NoSuchDatabaseError", function () {
              return !1;
            });
        },
        getDatabaseNames: function (f) {
          try {
            return (
              (S = Ed.dependencies),
              (A = S.indexedDB),
              (S = S.IDBKeyRange),
              (hC(A)
                ? Promise.resolve(A.databases()).then(function (N) {
                    return N.map(function (G) {
                      return G.name;
                    }).filter(function (G) {
                      return G !== ft;
                    });
                  })
                : pC(A, S).toCollection().primaryKeys()
              ).then(f)
            );
          } catch {
            return xs(new Re.MissingAPI());
          }
          var S, A;
        },
        defineClass: function () {
          return function (f) {
            u(this, f);
          };
        },
        ignoreTransaction: function (f) {
          return Rt.trans ? ro(Rt.transless, f) : f();
        },
        vip: fC,
        async: function (f) {
          return function () {
            try {
              var S = bC(f.apply(this, arguments));
              return S && typeof S.then == "function" ? S : Et.resolve(S);
            } catch (A) {
              return xs(A);
            }
          };
        },
        spawn: function (f, S, A) {
          try {
            var N = bC(f.apply(A, S || []));
            return N && typeof N.then == "function" ? N : Et.resolve(N);
          } catch (G) {
            return xs(G);
          }
        },
        currentTransaction: {
          get: function () {
            return Rt.trans || null;
          },
        },
        waitFor: function (f, S) {
          return (
            (S = Et.resolve(
              typeof f == "function" ? Ed.ignoreTransaction(f) : f
            ).timeout(S || 6e4)),
            Rt.trans ? Rt.trans.waitFor(S) : S
          );
        },
        Promise: Et,
        debug: {
          get: function () {
            return It;
          },
          set: function (f) {
            bt(f);
          },
        },
        derive: I,
        extend: u,
        props: p,
        override: H,
        Events: uS,
        on: jl,
        liveQuery: FF,
        extendObservabilitySet: N_,
        getByKeyPath: de,
        setByKeyPath: U,
        delByKeyPath: function (f, S) {
          typeof S == "string"
            ? U(f, S, void 0)
            : "length" in S &&
              [].map.call(S, function (A) {
                U(f, A, void 0);
              });
        },
        shallowClone: R,
        deepClone: Ce,
        getObjectDiff: EC,
        cmp: un,
        asap: he,
        minKey: -1 / 0,
        addons: [],
        connections: dt,
        errnames: Ge,
        dependencies: L_,
        cache: bd,
        semVer: "4.0.4",
        version: "4.0.4"
          .split(".")
          .map(function (f) {
            return parseInt(f);
          })
          .reduce(function (f, S, A) {
            return f + S / Math.pow(10, 2 * A);
          }),
      })
    ),
      (Ed.maxKey = pS(Ed.dependencies.IDBKeyRange)),
      typeof dispatchEvent < "u" &&
        typeof addEventListener < "u" &&
        (jl(dS, function (f) {
          zl ||
            ((f = new CustomEvent(aC, { detail: f })),
            (zl = !0),
            dispatchEvent(f),
            (zl = !1));
        }),
        addEventListener(aC, function (f) {
          (f = f.detail), zl || IC(f);
        }));
    var th,
      zl = !1,
      UF = function () {};
    return (
      typeof BroadcastChannel < "u" &&
        ((UF = function () {
          (th = new BroadcastChannel(aC)).onmessage = function (f) {
            return f.data && IC(f.data);
          };
        })(),
        typeof th.unref == "function" && th.unref(),
        jl(dS, function (f) {
          zl || th.postMessage(f);
        })),
      typeof addEventListener < "u" &&
        (addEventListener("pagehide", function (f) {
          if (!Fu.disableBfCache && f.persisted) {
            It && console.debug("Dexie: handling persisted pagehide"),
              th != null && th.close();
            for (var S = 0, A = dt; S < A.length; S++)
              A[S].close({ disableAutoOpen: !1 });
          }
        }),
        addEventListener("pageshow", function (f) {
          !Fu.disableBfCache &&
            f.persisted &&
            (It && console.debug("Dexie: handling persisted pageshow"),
            UF(),
            IC({ all: new Fr(-1 / 0, [[]]) }));
        })),
      (Et.rejectionMapper = function (f, S) {
        return !f ||
          f instanceof L ||
          f instanceof TypeError ||
          f instanceof SyntaxError ||
          !f.name ||
          !it[f.name]
          ? f
          : ((S = new it[f.name](S || f.message, f)),
            "stack" in f &&
              y(S, "stack", {
                get: function () {
                  return this.inner.stack;
                },
              }),
            S);
      }),
      bt(It),
      r(
        Fu,
        Object.freeze({
          __proto__: null,
          Dexie: Fu,
          liveQuery: FF,
          Entity: Qa,
          cmp: un,
          PropModSymbol: Gu,
          PropModification: sC,
          replacePrefix: function (f, S) {
            return new sC({ replacePrefix: [f, S] });
          },
          default: Fu,
          RangeSet: Fr,
          mergeRanges: mS,
          rangesOverlap: H_,
        }),
        { default: Fu }
      ),
      Fu
    );
  });
})(jY);
var H4e = jY.exports;
const KO = Lo(H4e),
  V8 = Symbol.for("Dexie"),
  Ns = globalThis[V8] || (globalThis[V8] = KO);
if (KO.semVer !== Ns.semVer)
  throw new Error(
    `Two different versions of Dexie loaded in the same app: ${KO.semVer} and ${Ns.semVer}`
  );
class zY extends Error {
  constructor() {
    super(...arguments),
      (this.name = "DialogAlreadyOpened"),
      (this.ignorable = !0);
  }
}
class Us extends Error {
  constructor() {
    super(...arguments), (this.safeToLog = !0), (this.name = "SafeToLogError");
  }
}
class Fd extends Error {
  constructor() {
    super(...arguments),
      (this.name = "UserCancelDialogueError"),
      (this.ignorable = !0);
  }
  static swallow(e) {
    if (e instanceof Fd) return e;
    throw e;
  }
}
var N4e = (function () {
  try {
    var t = Pp(Object, "defineProperty");
    return t({}, "", {}), t;
  } catch {}
})();
const JT = N4e;
function Hl(t, e, n) {
  e == "__proto__" && JT
    ? JT(t, e, { configurable: !0, enumerable: !0, value: n, writable: !0 })
    : (t[e] = n);
}
function Nl(t, e) {
  var n = {};
  return (
    (e = on(e)),
    wu(t, function (r, a, s) {
      Hl(n, a, e(r, a, s));
    }),
    n
  );
}
const R4e = {},
  k4e = Object.freeze(
    Object.defineProperty(
      { __proto__: null, default: R4e },
      Symbol.toStringTag,
      { value: "Module" }
    )
  ),
  x4e = Fj(k4e);
var o2 = typeof Map == "function" && Map.prototype,
  uA =
    Object.getOwnPropertyDescriptor && o2
      ? Object.getOwnPropertyDescriptor(Map.prototype, "size")
      : null,
  ZT = o2 && uA && typeof uA.get == "function" ? uA.get : null,
  j8 = o2 && Map.prototype.forEach,
  u2 = typeof Set == "function" && Set.prototype,
  lA =
    Object.getOwnPropertyDescriptor && u2
      ? Object.getOwnPropertyDescriptor(Set.prototype, "size")
      : null,
  ew = u2 && lA && typeof lA.get == "function" ? lA.get : null,
  z8 = u2 && Set.prototype.forEach,
  L4e = typeof WeakMap == "function" && WeakMap.prototype,
  by = L4e ? WeakMap.prototype.has : null,
  M4e = typeof WeakSet == "function" && WeakSet.prototype,
  Ey = M4e ? WeakSet.prototype.has : null,
  D4e = typeof WeakRef == "function" && WeakRef.prototype,
  $8 = D4e ? WeakRef.prototype.deref : null,
  G4e = Boolean.prototype.valueOf,
  F4e = Object.prototype.toString,
  U4e = Function.prototype.toString,
  K4e = String.prototype.match,
  l2 = String.prototype.slice,
  yc = String.prototype.replace,
  B4e = String.prototype.toUpperCase,
  W8 = String.prototype.toLowerCase,
  $Y = RegExp.prototype.test,
  q8 = Array.prototype.concat,
  tu = Array.prototype.join,
  V4e = Array.prototype.slice,
  Y8 = Math.floor,
  BO = typeof BigInt == "function" ? BigInt.prototype.valueOf : null,
  cA = Object.getOwnPropertySymbols,
  VO =
    typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
      ? Symbol.prototype.toString
      : null,
  jf = typeof Symbol == "function" && typeof Symbol.iterator == "object",
  aa =
    typeof Symbol == "function" &&
    Symbol.toStringTag &&
    (typeof Symbol.toStringTag === jf || "symbol")
      ? Symbol.toStringTag
      : null,
  WY = Object.prototype.propertyIsEnumerable,
  X8 =
    (typeof Reflect == "function"
      ? Reflect.getPrototypeOf
      : Object.getPrototypeOf) ||
    ([].__proto__ === Array.prototype
      ? function (t) {
          return t.__proto__;
        }
      : null);
function Q8(t, e) {
  if (
    t === 1 / 0 ||
    t === -1 / 0 ||
    t !== t ||
    (t && t > -1e3 && t < 1e3) ||
    $Y.call(/e/, e)
  )
    return e;
  var n = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;
  if (typeof t == "number") {
    var r = t < 0 ? -Y8(-t) : Y8(t);
    if (r !== t) {
      var a = String(r),
        s = l2.call(e, a.length + 1);
      return (
        yc.call(a, n, "$&_") +
        "." +
        yc.call(yc.call(s, /([0-9]{3})/g, "$&_"), /_$/, "")
      );
    }
  }
  return yc.call(e, n, "$&_");
}
var jO = x4e,
  J8 = jO.custom,
  Z8 = YY(J8) ? J8 : null,
  j4e = function t(e, n, r, a) {
    var s = n || {};
    if (
      sc(s, "quoteStyle") &&
      s.quoteStyle !== "single" &&
      s.quoteStyle !== "double"
    )
      throw new TypeError('option "quoteStyle" must be "single" or "double"');
    if (
      sc(s, "maxStringLength") &&
      (typeof s.maxStringLength == "number"
        ? s.maxStringLength < 0 && s.maxStringLength !== 1 / 0
        : s.maxStringLength !== null)
    )
      throw new TypeError(
        'option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`'
      );
    var i = sc(s, "customInspect") ? s.customInspect : !0;
    if (typeof i != "boolean" && i !== "symbol")
      throw new TypeError(
        "option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`"
      );
    if (
      sc(s, "indent") &&
      s.indent !== null &&
      s.indent !== "	" &&
      !(parseInt(s.indent, 10) === s.indent && s.indent > 0)
    )
      throw new TypeError(
        'option "indent" must be "\\t", an integer > 0, or `null`'
      );
    if (sc(s, "numericSeparator") && typeof s.numericSeparator != "boolean")
      throw new TypeError(
        'option "numericSeparator", if provided, must be `true` or `false`'
      );
    var o = s.numericSeparator;
    if (typeof e > "u") return "undefined";
    if (e === null) return "null";
    if (typeof e == "boolean") return e ? "true" : "false";
    if (typeof e == "string") return QY(e, s);
    if (typeof e == "number") {
      if (e === 0) return 1 / 0 / e > 0 ? "0" : "-0";
      var u = String(e);
      return o ? Q8(e, u) : u;
    }
    if (typeof e == "bigint") {
      var l = String(e) + "n";
      return o ? Q8(e, l) : l;
    }
    var c = typeof s.depth > "u" ? 5 : s.depth;
    if ((typeof r > "u" && (r = 0), r >= c && c > 0 && typeof e == "object"))
      return zO(e) ? "[Array]" : "[Object]";
    var d = uMe(s, r);
    if (typeof a > "u") a = [];
    else if (XY(a, e) >= 0) return "[Circular]";
    function p(Ce, Ee, x) {
      if ((Ee && ((a = V4e.call(a)), a.push(Ee)), x)) {
        var F = { depth: s.depth };
        return (
          sc(s, "quoteStyle") && (F.quoteStyle = s.quoteStyle),
          t(Ce, F, r + 1, a)
        );
      }
      return t(Ce, s, r + 1, a);
    }
    if (typeof e == "function" && !e5(e)) {
      var m = Z4e(e),
        y = ib(e, p);
      return (
        "[Function" +
        (m ? ": " + m : " (anonymous)") +
        "]" +
        (y.length > 0 ? " { " + tu.call(y, ", ") + " }" : "")
      );
    }
    if (YY(e)) {
      var I = jf
        ? yc.call(String(e), /^(Symbol\(.*\))_[^)]*$/, "$1")
        : VO.call(e);
      return typeof e == "object" && !jf ? TS(I) : I;
    }
    if (aMe(e)) {
      for (
        var O = "<" + W8.call(String(e.nodeName)),
          g = e.attributes || [],
          C = 0;
        C < g.length;
        C++
      )
        O += " " + g[C].name + "=" + qY(z4e(g[C].value), "double", s);
      return (
        (O += ">"),
        e.childNodes && e.childNodes.length && (O += "..."),
        (O += "</" + W8.call(String(e.nodeName)) + ">"),
        O
      );
    }
    if (zO(e)) {
      if (e.length === 0) return "[]";
      var H = ib(e, p);
      return d && !oMe(H)
        ? "[" + $O(H, d) + "]"
        : "[ " + tu.call(H, ", ") + " ]";
    }
    if (W4e(e)) {
      var B = ib(e, p);
      return !("cause" in Error.prototype) &&
        "cause" in e &&
        !WY.call(e, "cause")
        ? "{ [" +
            String(e) +
            "] " +
            tu.call(q8.call("[cause]: " + p(e.cause), B), ", ") +
            " }"
        : B.length === 0
        ? "[" + String(e) + "]"
        : "{ [" + String(e) + "] " + tu.call(B, ", ") + " }";
    }
    if (typeof e == "object" && i) {
      if (Z8 && typeof e[Z8] == "function" && jO)
        return jO(e, { depth: c - r });
      if (i !== "symbol" && typeof e.inspect == "function") return e.inspect();
    }
    if (eMe(e)) {
      var he = [];
      return (
        j8 &&
          j8.call(e, function (Ce, Ee) {
            he.push(p(Ee, e, !0) + " => " + p(Ce, e));
          }),
        t5("Map", ZT.call(e), he, d)
      );
    }
    if (sMe(e)) {
      var de = [];
      return (
        z8 &&
          z8.call(e, function (Ce) {
            de.push(p(Ce, e));
          }),
        t5("Set", ew.call(e), de, d)
      );
    }
    if (tMe(e)) return dA("WeakMap");
    if (rMe(e)) return dA("WeakSet");
    if (nMe(e)) return dA("WeakRef");
    if (Y4e(e)) return TS(p(Number(e)));
    if (Q4e(e)) return TS(p(BO.call(e)));
    if (X4e(e)) return TS(G4e.call(e));
    if (q4e(e)) return TS(p(String(e)));
    if (typeof window < "u" && e === window) return "{ [object Window] }";
    if (e === sl) return "{ [object globalThis] }";
    if (!$4e(e) && !e5(e)) {
      var U = ib(e, p),
        R = X8
          ? X8(e) === Object.prototype
          : e instanceof Object || e.constructor === Object,
        ge = e instanceof Object ? "" : "null prototype",
        ve =
          !R && aa && Object(e) === e && aa in e
            ? l2.call(fd(e), 8, -1)
            : ge
            ? "Object"
            : "",
        we =
          R || typeof e.constructor != "function"
            ? ""
            : e.constructor.name
            ? e.constructor.name + " "
            : "",
        Te =
          we +
          (ve || ge
            ? "[" + tu.call(q8.call([], ve || [], ge || []), ": ") + "] "
            : "");
      return U.length === 0
        ? Te + "{}"
        : d
        ? Te + "{" + $O(U, d) + "}"
        : Te + "{ " + tu.call(U, ", ") + " }";
    }
    return String(e);
  };
function qY(t, e, n) {
  var r = (n.quoteStyle || e) === "double" ? '"' : "'";
  return r + t + r;
}
function z4e(t) {
  return yc.call(String(t), /"/g, "&quot;");
}
function zO(t) {
  return (
    fd(t) === "[object Array]" && (!aa || !(typeof t == "object" && aa in t))
  );
}
function $4e(t) {
  return (
    fd(t) === "[object Date]" && (!aa || !(typeof t == "object" && aa in t))
  );
}
function e5(t) {
  return (
    fd(t) === "[object RegExp]" && (!aa || !(typeof t == "object" && aa in t))
  );
}
function W4e(t) {
  return (
    fd(t) === "[object Error]" && (!aa || !(typeof t == "object" && aa in t))
  );
}
function q4e(t) {
  return (
    fd(t) === "[object String]" && (!aa || !(typeof t == "object" && aa in t))
  );
}
function Y4e(t) {
  return (
    fd(t) === "[object Number]" && (!aa || !(typeof t == "object" && aa in t))
  );
}
function X4e(t) {
  return (
    fd(t) === "[object Boolean]" && (!aa || !(typeof t == "object" && aa in t))
  );
}
function YY(t) {
  if (jf) return t && typeof t == "object" && t instanceof Symbol;
  if (typeof t == "symbol") return !0;
  if (!t || typeof t != "object" || !VO) return !1;
  try {
    return VO.call(t), !0;
  } catch {}
  return !1;
}
function Q4e(t) {
  if (!t || typeof t != "object" || !BO) return !1;
  try {
    return BO.call(t), !0;
  } catch {}
  return !1;
}
var J4e =
  Object.prototype.hasOwnProperty ||
  function (t) {
    return t in this;
  };
function sc(t, e) {
  return J4e.call(t, e);
}
function fd(t) {
  return F4e.call(t);
}
function Z4e(t) {
  if (t.name) return t.name;
  var e = K4e.call(U4e.call(t), /^function\s*([\w$]+)/);
  return e ? e[1] : null;
}
function XY(t, e) {
  if (t.indexOf) return t.indexOf(e);
  for (var n = 0, r = t.length; n < r; n++) if (t[n] === e) return n;
  return -1;
}
function eMe(t) {
  if (!ZT || !t || typeof t != "object") return !1;
  try {
    ZT.call(t);
    try {
      ew.call(t);
    } catch {
      return !0;
    }
    return t instanceof Map;
  } catch {}
  return !1;
}
function tMe(t) {
  if (!by || !t || typeof t != "object") return !1;
  try {
    by.call(t, by);
    try {
      Ey.call(t, Ey);
    } catch {
      return !0;
    }
    return t instanceof WeakMap;
  } catch {}
  return !1;
}
function nMe(t) {
  if (!$8 || !t || typeof t != "object") return !1;
  try {
    return $8.call(t), !0;
  } catch {}
  return !1;
}
function sMe(t) {
  if (!ew || !t || typeof t != "object") return !1;
  try {
    ew.call(t);
    try {
      ZT.call(t);
    } catch {
      return !0;
    }
    return t instanceof Set;
  } catch {}
  return !1;
}
function rMe(t) {
  if (!Ey || !t || typeof t != "object") return !1;
  try {
    Ey.call(t, Ey);
    try {
      by.call(t, by);
    } catch {
      return !0;
    }
    return t instanceof WeakSet;
  } catch {}
  return !1;
}
function aMe(t) {
  return !t || typeof t != "object"
    ? !1
    : typeof HTMLElement < "u" && t instanceof HTMLElement
    ? !0
    : typeof t.nodeName == "string" && typeof t.getAttribute == "function";
}
function QY(t, e) {
  if (t.length > e.maxStringLength) {
    var n = t.length - e.maxStringLength,
      r = "... " + n + " more character" + (n > 1 ? "s" : "");
    return QY(l2.call(t, 0, e.maxStringLength), e) + r;
  }
  var a = yc.call(yc.call(t, /(['\\])/g, "\\$1"), /[\x00-\x1f]/g, iMe);
  return qY(a, "single", e);
}
function iMe(t) {
  var e = t.charCodeAt(0),
    n = { 8: "b", 9: "t", 10: "n", 12: "f", 13: "r" }[e];
  return n ? "\\" + n : "\\x" + (e < 16 ? "0" : "") + B4e.call(e.toString(16));
}
function TS(t) {
  return "Object(" + t + ")";
}
function dA(t) {
  return t + " { ? }";
}
function t5(t, e, n, r) {
  var a = r ? $O(n, r) : tu.call(n, ", ");
  return t + " (" + e + ") {" + a + "}";
}
function oMe(t) {
  for (var e = 0; e < t.length; e++)
    if (
      XY(
        t[e],
        `
`
      ) >= 0
    )
      return !1;
  return !0;
}
function uMe(t, e) {
  var n;
  if (t.indent === "	") n = "	";
  else if (typeof t.indent == "number" && t.indent > 0)
    n = tu.call(Array(t.indent + 1), " ");
  else return null;
  return { base: n, prev: tu.call(Array(e + 1), n) };
}
function $O(t, e) {
  if (t.length === 0) return "";
  var n =
    `
` +
    e.prev +
    e.base;
  return (
    n +
    tu.call(t, "," + n) +
    `
` +
    e.prev
  );
}
function ib(t, e) {
  var n = zO(t),
    r = [];
  if (n) {
    r.length = t.length;
    for (var a = 0; a < t.length; a++) r[a] = sc(t, a) ? e(t[a], t) : "";
  }
  var s = typeof cA == "function" ? cA(t) : [],
    i;
  if (jf) {
    i = {};
    for (var o = 0; o < s.length; o++) i["$" + s[o]] = s[o];
  }
  for (var u in t)
    sc(t, u) &&
      ((n && String(Number(u)) === u && u < t.length) ||
        (jf && i["$" + u] instanceof Symbol) ||
        ($Y.call(/[^\w$]/, u)
          ? r.push(e(u, t) + ": " + e(t[u], t))
          : r.push(u + ": " + e(t[u], t))));
  if (typeof cA == "function")
    for (var l = 0; l < s.length; l++)
      WY.call(t, s[l]) && r.push("[" + e(s[l]) + "]: " + e(t[s[l]], t));
  return r;
}
const lMe = Lo(j4e);
class cMe extends Error {
  constructor(e, n) {
    const r = `${e}, error: ${dMe(n)}`;
    super(r),
      n instanceof Error
        ? ((this.name = n.name), (this.stack = n.stack))
        : (this.name = JY(n));
  }
}
function JY(t) {
  const e = Object.prototype.toString.call(t).slice(8, -1);
  return e === "Object" && t != null && typeof t == "object"
    ? `Object, ${t.constructor.name}`
    : e;
}
function dMe(t) {
  return t == null || typeof t != "object" ? "" : lMe(Nl(t, pMe(t)));
}
const pMe = (t) => {
  if (t instanceof Us || t instanceof TypeError) return Ys;
  const e = JY(t) === "Object, Object";
  return (n, r) =>
    typeof n == "string" &&
    !(
      r === "title" ||
      r === "code" ||
      r === "syscall" ||
      (e && r === "message")
    )
      ? "[String]"
      : typeof n == "object"
      ? "[Object]"
      : n;
};
function ZY(t) {
  var r, a;
  const e = "ignorable" in t && !!t.ignorable,
    n =
      t.stack != null
        ? ((r = t.stack) == null ? void 0 : r.startsWith(new Fd().name)) ||
          ((a = t.stack) == null ? void 0 : a.startsWith(new zY().name))
        : !1;
  return e || n;
}
const hMe = (t, e) => ({
  isIgnorableError: ZY,
  exception: (n, r, a) => {
    SMe(r) &&
      yMe(r) &&
      typeof r.message == "string" &&
      r.message !== "" &&
      (n = `${n}:
${r.message}`);
    const i = new cMe(n, r);
    t.captureException(i, a),
      t.addBreadcrumb({
        level: "error",
        category: e,
        message: `${i.name}: ${i.message}`,
      });
  },
  info: (n, r) => {
    t.addBreadcrumb({ level: "info", category: e, message: n, data: r });
  },
  setUser: (n) => {
    t.configureScope((r) => r.setUser(n));
  },
});
function fMe() {
  const t = "app:///";
  return VY({
    iteratee: (e) => (e.filename && (e.filename = mMe(t, e.filename)), e),
  });
}
function mMe(t, e) {
  const r =
      /^[a-zA-Z]:\\/.test(e) || (e.includes("\\") && !e.includes("/"))
        ? e.replace(/^[a-zA-Z]:/, "").replace(/\\/g, "/")
        : e,
    a = hAe(r);
  return `${t}${a}`;
}
function SMe(t) {
  const e =
    t instanceof Ns.AbortError ||
    t instanceof Ns.BulkError ||
    t instanceof Ns.ConstraintError ||
    t instanceof Ns.DatabaseClosedError ||
    t instanceof Ns.DataError ||
    t instanceof Ns.InvalidStateError ||
    t instanceof Ns.ModifyError ||
    t instanceof Ns.OpenFailedError ||
    t instanceof Ns.QuotaExceededError ||
    t instanceof Ns.VersionError;
  return (
    t instanceof Us ||
    t instanceof TypeError ||
    t instanceof RangeError ||
    t instanceof Md ||
    vMe(t) ||
    e
  );
}
function yMe(t) {
  return typeof t == "object" && t != null && "message" in t;
}
const gMe = Xe.object({ safeToLog: Xe.literal(!0) }),
  vMe = Iv(gMe);
KY({
  dsn: "https://55af16af94074b88844cd7e16f535fa5@o76327.ingest.sentry.io/193727",
  environment: "production",
  release: "Termius@9.1.1",
  maxBreadcrumbs: 100,
  defaultIntegrations: [
    fMe(),
    new FO.GlobalHandlers({ onerror: !1, onunhandledrejection: !1 }),
    new FO.Breadcrumbs({
      console: !1,
      dom: !1,
      fetch: !0,
      history: !1,
      sentry: !1,
      xhr: !1,
    }),
  ],
  beforeSend: (t, e) => t,
  beforeBreadcrumb: (t) => (bMe(t) ? (EMe(t) ? (wMe(t), t) : null) : t),
});
const eX = PMe(process.type);
vu({ level: "info", category: eX, message: "Sentry has initialized" });
const _Me = hMe(E4e, eX),
  tt = {
    ..._Me,
    withEncryptionLogin(t, e, n) {
      let r = { hasValue: !1 };
      return (
        Tm((a) => {
          a.setExtra("collection", e),
            a.setExtra("encryption_login", t),
            (r = { hasValue: !0, value: n() });
        }),
        r.hasValue || (r = { hasValue: !0, value: n() }),
        r.value
      );
    },
    getUserId() {
      return new Promise((t) =>
        yW((e) => {
          var n, r;
          t(
            ((r = (n = e.getUser()) == null ? void 0 : n.id) == null
              ? void 0
              : r.toString()) ?? ""
          );
        })
      );
    },
  };
function bMe(t) {
  return t.type === "http" && t.category === "fetch";
}
function EMe(t) {
  var e;
  return (
    ((e = t.data) == null
      ? void 0
      : e.url.startsWith("https://api.termius.com")) ?? !1
  );
}
function TMe(t) {
  return `${t.origin}${t.pathname}`;
}
function wMe(t) {
  const { data: e } = t;
  e != null && (e.url = TMe(new URL(e.url)));
}
function PMe(t) {
  switch (t) {
    case "browser":
      return "main";
    case "renderer":
      return window.location.pathname.includes("background-process")
        ? "background"
        : "ui";
    case "worker":
      return "worker";
    default:
      return "unknown";
  }
}
const zf = vi("path"),
  { basename: IMe, join: QS, resolve: G_t } = zf;
function tX(t) {
  return IMe(t, ".exe").toLowerCase();
}
function n5(t, e) {
  const [n] = (t || "").split(" "),
    r = tX(n);
  return e.allowList.has(r) ? r : c2;
}
const c2 = "other",
  CMe = new Set([
    "ash",
    "bash",
    "csh",
    "dash",
    "fish",
    "ksh",
    "mksh",
    "nu",
    "sh",
    "tcsh",
    "zsh",
    c2,
  ]),
  AMe = new Set([
    "wsl",
    "wsl2",
    "pwsh",
    "powershell",
    "ash",
    "bash",
    "csh",
    "dash",
    "fish",
    "ksh",
    "mksh",
    "nu",
    "sh",
    "tcsh",
    "zsh",
    "git-bash",
    c2,
  ]),
  tw = (...t) => localStorage.getItem(...t),
  Cs = (...t) => JSON.parse(tw(...t) || "null"),
  WO = (...t) => localStorage.setItem(...t),
  Ls = (t, e) => WO(t, JSON.stringify(e)),
  lo = (...t) => localStorage.removeItem(...t),
  OMe = (t) => {
    const e = tw(t);
    return lo(t), e;
  },
  rE = (t) => {
    const e = Cs(t);
    return lo(t), e;
  };
function s5(t, e = 22) {
  return e == null || e === 22 ? `${t}` : `[${t}]:${e}`;
}
const nX = () => Cs("experiments") ?? [],
  r5 = (t) => Ls("experiments", t),
  Ft = {
    takeColorScheme: () => rE("settings"),
    takeFontSize: () => rE("settings_font_size"),
    takeFontFamily: () => OMe("settings_font_family"),
    setAllKnownHosts: (t) => Ls("hosts_keys", t),
    getAllKnownHosts: () => Cs("hosts_keys"),
    clearKnownHosts: () => lo("hosts_keys"),
    userJustSawSuggestionToTryPremium: () =>
      Ls("the_date_user_saw_suggestion_to_try_premium", new Date()),
    didUserSeeSuggestionToTryPremium: () =>
      Cs("the_date_user_saw_suggestion_to_try_premium") != null
        ? !0
        : Cs("free_plan_started") === !0
        ? (Ls("the_date_user_saw_suggestion_to_try_premium", new Date(0)),
          lo("free_plan_started"),
          !0)
        : !1,
    setDeprecatedWelcomeScreenOpenedEventSend: () =>
      Ls("welcome_screen_open_event_send", !0),
    isDeprecatedWelcomeScreenOpenedEventSend: () =>
      !!tw("welcome_screen_open_event_send"),
    setDeprecatedLocalhost: (t) => Ls("localhost", t),
    getDeprecatedLocalhost: () => Cs("localhost"),
    removeDeprecatedLocalhost: () => lo("localhost"),
    getDeprecatedHostHashForUser(t, e) {
      const n = this.getAllKnownHosts();
      return n == null ? null : n[s5(t, e)];
    },
    removeDeprecatedHostHashItem(t) {
      const e = this.getAllKnownHosts();
      delete e[t], this.setAllKnownHosts(e);
    },
    removeDeprecatedHostHashForUser(t, e) {
      return this.removeDeprecatedHostHashItem(s5(t, e));
    },
    getKeepAliveInterval: () => tw("keep_alive_interval"),
    setKeepAliveInterval: (t) => WO("keep_alive_interval", t),
    removeKeepAliveInterval: () => lo("keep_alive_interval"),
    wasDeprecatedCopyPasteDialogShown: () =>
      !!Cs("copy_paste_dialog_was_shown"),
    setDeprecatedCopyPasteDialogWasShown: () =>
      Ls("copy_paste_dialog_was_shown", !0),
    takeDarkMode: () => rE("dark_mode"),
    wasDeprecatedSubscriptionExpired: () =>
      !!Cs("subscription_expired_notification"),
    setDeprecatedSubscriptionExpired: () =>
      Ls("subscription_expired_notification", !0),
    removeDeprecatedSubscriptionExpired: () =>
      lo("subscription_expired_notification"),
    getDeprecatedLastSyncVersion: () => Cs("last_sync_version"),
    setDeprecatedLastSyncVersion: (t) => Ls("last_sync_version", t),
    setDeprecatedEncryptionSchema: (t) => WO("encryptionSchema", t),
    getLocalKey: () => Cs("localKey"),
    setLocalKey: (t) => Ls("localKey", t),
    getLocalKeyIsReady: () => !!Cs("local_key_is_ready"),
    setLocalKeyIsReady: () => Ls("local_key_is_ready", !0),
    removeLocalKeyIsReady: () => lo("local_key_is_ready"),
    getLocalKeyVault: () => Cs("local_key_vault"),
    setLocalKeyVault: (t) => Ls("local_key_vault", t),
    removeLocalKeyVault: () => lo("local_key_vault"),
    getCredential: (t) => Cs(t),
    setCredential: (t, e) => Ls(t, e),
    removeCredential: (t) => lo(t),
    getMigrationLog: () => Cs("migrationLog"),
    setMigrationLog: (t) => Ls("migrationLog", t),
    getDeprecatedEnableSharingDialogWasShown: () =>
      !!Cs("enable_sharing_dialog_was_shown"),
    setDeprecatedEnableSharingDialogWasShown: () =>
      Ls("enable_sharing_dialog_was_shown", !0),
    getDeprecatedIsUnsharedLocalTeamTrialData: () =>
      !!Cs("is_unshared_local_team_trial_data"),
    setDeprecatedIsUnsharedLocalTeamTrialData: (t) =>
      Ls("is_unshared_local_team_trial_data", t),
    wasDeprecatedNewWindowHintShown: () => !!Cs("new_window_hint_was_shown"),
    newDeprecatedWindowHintWasShown: () => Ls("new_window_hint_was_shown", !0),
    wasDeprecatedSidePanelShortcutHintShown: () =>
      !!Cs("snippets_panel_shortcut_hint_was_shown"),
    getDeprecatedBellDotType: () => Cs("bell_dot_type"),
    setDeprecatedBellDotType: (t) => Ls("bell_dot_type", t),
    getDeprecatedCustomBackendApiUrl: () => Cs("custom_backend_api_url"),
    setDeprecatedCustomBackendApiUrl: (t) => Ls("custom_backend_api_url", t),
    resetDeprecatedCustomBackendApiUrl: () => lo("custom_backend_api_url"),
    getDeprecatedWasTeamTrialInPreferencesOpened: () =>
      Cs("was_team_trial_in_preferences_opened"),
    setDeprecatedWasTeamTrialInPreferencesOpened: () =>
      Ls("was_team_trial_in_preferences_opened", !0),
    getDeprecatedForceToShowTeamTrialPromotions: () =>
      Cs("force_show_team_trial_promotions"),
    setDeprecatedForceToShowTeamTrialPromotions: (t) =>
      Ls("force_show_team_trial_promotions", t),
    didDeprecatedUserSentAcquisitionChannel: () => Cs("user_init_connection"),
    setDeprecatedUserSentAcquisitionChannel: () =>
      Ls("user_init_connection", !0),
    getDeprecatedDeviceHasSepSupport: () => Cs("device_has_sep_support"),
    setDeprecatedDeviceHasSepSupport: (t) => Ls("device_has_sep_support", t),
  },
  hP = k("REQUEST_MONTHLY_PREMIUM"),
  fP = k("REQUEST_YEARLY_PREMIUM"),
  d2 = k("REQUEST_RESTORE_PREMIUM"),
  Kv = k("PURCHASE_STARTED"),
  p2 = k("PURCHASE_FAILED"),
  sX = k("PURCHASE_SUCCESS"),
  rX = k("RESTORE_FAILED"),
  h2 = k("RESTORE_SUCCESS"),
  nw = Ze("UPDATE_STORE_PRO_PRICES"),
  $d = Ze("UPDATE_BACKEND_PRICES"),
  aX = k("REMOVE_IS_LOADING"),
  HMe = k("RETRY_PURCHASE"),
  iX = k("USER_CANCEL_PURCHASE"),
  aE = Ze("REDIRECT_TO_STRIPE_CHECKOUT");
var oX = { exports: {} };
(function (t) {
  ((e, n) => {
    t.exports ? (t.exports = n()) : (e.fuzzysort = n());
  })(sl, (e) => {
    var n = (L, M) => {
        if (!L || !M) return Ae;
        var me = y(L);
        x(M) || (M = m(M));
        var K = me.bitflags;
        return (K & M._bitflags) !== K ? Ae : O(me, M);
      },
      r = (L, M, me) => {
        if (!L) return me != null && me.all ? I(M, me) : ye;
        var K = y(L),
          Ge = K.bitflags,
          Ke = K.containsSpace,
          Re = d((me == null ? void 0 : me.threshold) || 0),
          it = (me == null ? void 0 : me.limit) || F,
          Qe = 0,
          ct = 0,
          ot = M.length;
        function rt(as) {
          Qe < it
            ? (nt.add(as), ++Qe)
            : (++ct, as._score > nt.peek()._score && nt.replaceTop(as));
        }
        if (me != null && me.key)
          for (var gt = me.key, Mt = 0; Mt < ot; ++Mt) {
            var at = M[Mt],
              Dt = Ee(at, gt);
            if (Dt && (x(Dt) || (Dt = m(Dt)), (Ge & Dt._bitflags) === Ge)) {
              var pt = O(K, Dt);
              pt !== Ae && (pt._score < Re || ((pt.obj = at), rt(pt)));
            }
          }
        else if (me != null && me.keys) {
          var Xt = me.keys,
            It = Xt.length;
          e: for (var Mt = 0; Mt < ot; ++Mt) {
            var at = M[Mt];
            {
              for (var bt = 0, yt = 0; yt < It; ++yt) {
                var gt = Xt[yt],
                  Dt = Ee(at, gt);
                if (!Dt) {
                  Te[yt] = De;
                  continue;
                }
                x(Dt) || (Dt = m(Dt)), (Te[yt] = Dt), (bt |= Dt._bitflags);
              }
              if ((Ge & bt) !== Ge) continue;
            }
            if (Ke)
              for (let Wt = 0; Wt < K.spaceSearches.length; Wt++) ve[Wt] = Se;
            for (var yt = 0; yt < It; ++yt) {
              if (((Dt = Te[yt]), Dt === De)) {
                Ce[yt] = De;
                continue;
              }
              if (((Ce[yt] = O(K, Dt, !1, Ke)), Ce[yt] === Ae)) {
                Ce[yt] = De;
                continue;
              }
              if (Ke)
                for (let mn = 0; mn < K.spaceSearches.length; mn++) {
                  if (we[mn] > -1e3 && ve[mn] > Se) {
                    var tn = (ve[mn] + we[mn]) / 4;
                    tn > ve[mn] && (ve[mn] = tn);
                  }
                  we[mn] > ve[mn] && (ve[mn] = we[mn]);
                }
            }
            if (Ke) {
              for (let Wt = 0; Wt < K.spaceSearches.length; Wt++)
                if (ve[Wt] === Se) continue e;
            } else {
              var Ct = !1;
              for (let Wt = 0; Wt < It; Wt++)
                if (Ce[Wt]._score !== Se) {
                  Ct = !0;
                  break;
                }
              if (!Ct) continue;
            }
            var Qt = new u(It);
            for (let Wt = 0; Wt < It; Wt++) Qt[Wt] = Ce[Wt];
            if (Ke) {
              var Bt = 0;
              for (let Wt = 0; Wt < K.spaceSearches.length; Wt++) Bt += ve[Wt];
            } else {
              var Bt = Se;
              for (let mn = 0; mn < It; mn++) {
                var pt = Qt[mn];
                if (pt._score > -1e3 && Bt > Se) {
                  var tn = (Bt + pt._score) / 4;
                  tn > Bt && (Bt = tn);
                }
                pt._score > Bt && (Bt = pt._score);
              }
            }
            if (((Qt.obj = at), (Qt._score = Bt), me != null && me.scoreFn)) {
              if (((Bt = me.scoreFn(Qt)), !Bt)) continue;
              (Bt = d(Bt)), (Qt._score = Bt);
            }
            Bt < Re || rt(Qt);
          }
        } else
          for (var Mt = 0; Mt < ot; ++Mt) {
            var Dt = M[Mt];
            if (Dt && (x(Dt) || (Dt = m(Dt)), (Ge & Dt._bitflags) === Ge)) {
              var pt = O(K, Dt);
              pt !== Ae && (pt._score < Re || rt(pt));
            }
          }
        if (Qe === 0) return ye;
        for (var Ut = new Array(Qe), Mt = Qe - 1; Mt >= 0; --Mt)
          Ut[Mt] = nt.poll();
        return (Ut.total = Qe + ct), Ut;
      },
      a = (L, M = "<b>", me = "</b>") => {
        for (
          var K = typeof M == "function" ? M : void 0,
            Ge = L.target,
            Ke = Ge.length,
            Re = L.indexes,
            it = "",
            Qe = 0,
            ct = 0,
            ot = !1,
            rt = [],
            gt = 0;
          gt < Ke;
          ++gt
        ) {
          var Mt = Ge[gt];
          if (Re[ct] === gt) {
            if (
              (++ct,
              ot || ((ot = !0), K ? (rt.push(it), (it = "")) : (it += M)),
              ct === Re.length)
            ) {
              K
                ? ((it += Mt),
                  rt.push(K(it, Qe++)),
                  (it = ""),
                  rt.push(Ge.substr(gt + 1)))
                : (it += Mt + me + Ge.substr(gt + 1));
              break;
            }
          } else
            ot &&
              ((ot = !1), K ? (rt.push(K(it, Qe++)), (it = "")) : (it += me));
          it += Mt;
        }
        return K ? rt : it;
      },
      s = (L) => {
        typeof L == "number" ? (L = "" + L) : typeof L != "string" && (L = "");
        var M = C(L);
        return l(L, {
          _targetLower: M._lower,
          _targetLowerCodes: M.lowerCodes,
          _bitflags: M.bitflags,
        });
      },
      i = () => {
        he.clear(), de.clear();
      };
    class o {
      get indexes() {
        return this._indexes
          .slice(0, this._indexes.len)
          .sort((M, me) => M - me);
      }
      set indexes(M) {
        return (this._indexes = M);
      }
      highlight(M, me) {
        return a(this, M, me);
      }
      get score() {
        return c(this._score);
      }
      set score(M) {
        this._score = d(M);
      }
    }
    class u extends Array {
      get score() {
        return c(this._score);
      }
      set score(M) {
        this._score = d(M);
      }
    }
    var l = (L, M) => {
        const me = new o();
        return (
          (me.target = L),
          (me.obj = M.obj ?? Ae),
          (me._score = M._score ?? Se),
          (me._indexes = M._indexes ?? []),
          (me._targetLower = M._targetLower ?? ""),
          (me._targetLowerCodes = M._targetLowerCodes ?? Ae),
          (me._nextBeginningIndexes = M._nextBeginningIndexes ?? Ae),
          (me._bitflags = M._bitflags ?? 0),
          me
        );
      },
      c = (L) =>
        L === Se ? 0 : L > 1 ? L : Math.E ** (((-L + 1) ** 0.04307 - 1) * -2),
      d = (L) =>
        L === 0
          ? Se
          : L > 1
          ? L
          : 1 - Math.pow(Math.log(L) / -2 + 1, 1 / 0.04307),
      p = (L) => {
        typeof L == "number" ? (L = "" + L) : typeof L != "string" && (L = ""),
          (L = L.trim());
        var M = C(L),
          me = [];
        if (M.containsSpace) {
          var K = L.split(/\s+/);
          K = [...new Set(K)];
          for (var Ge = 0; Ge < K.length; Ge++)
            if (K[Ge] !== "") {
              var Ke = C(K[Ge]);
              me.push({
                lowerCodes: Ke.lowerCodes,
                _lower: K[Ge].toLowerCase(),
                containsSpace: !1,
              });
            }
        }
        return {
          lowerCodes: M.lowerCodes,
          _lower: M._lower,
          containsSpace: M.containsSpace,
          bitflags: M.bitflags,
          spaceSearches: me,
        };
      },
      m = (L) => {
        if (L.length > 999) return s(L);
        var M = he.get(L);
        return M !== void 0 || ((M = s(L)), he.set(L, M)), M;
      },
      y = (L) => {
        if (L.length > 999) return p(L);
        var M = de.get(L);
        return M !== void 0 || ((M = p(L)), de.set(L, M)), M;
      },
      I = (L, M) => {
        var me = [];
        me.total = L.length;
        var K = (M == null ? void 0 : M.limit) || F;
        if (M != null && M.key)
          for (var Ge = 0; Ge < L.length; Ge++) {
            var Ke = L[Ge],
              Re = Ee(Ke, M.key);
            if (Re != Ae) {
              x(Re) || (Re = m(Re));
              var it = l(Re.target, { _score: Re._score, obj: Ke });
              if ((me.push(it), me.length >= K)) return me;
            }
          }
        else if (M != null && M.keys)
          for (var Ge = 0; Ge < L.length; Ge++) {
            for (
              var Ke = L[Ge], Qe = new u(M.keys.length), ct = M.keys.length - 1;
              ct >= 0;
              --ct
            ) {
              var Re = Ee(Ke, M.keys[ct]);
              if (!Re) {
                Qe[ct] = De;
                continue;
              }
              x(Re) || (Re = m(Re)),
                (Re._score = Se),
                (Re._indexes.len = 0),
                (Qe[ct] = Re);
            }
            if (((Qe.obj = Ke), (Qe._score = Se), me.push(Qe), me.length >= K))
              return me;
          }
        else
          for (var Ge = 0; Ge < L.length; Ge++) {
            var Re = L[Ge];
            if (
              Re != Ae &&
              (x(Re) || (Re = m(Re)),
              (Re._score = Se),
              (Re._indexes.len = 0),
              me.push(Re),
              me.length >= K)
            )
              return me;
          }
        return me;
      },
      O = (L, M, me = !1, K = !1) => {
        if (me === !1 && L.containsSpace) return g(L, M, K);
        for (
          var Ge = L._lower,
            Ke = L.lowerCodes,
            Re = Ke[0],
            it = M._targetLowerCodes,
            Qe = Ke.length,
            ct = it.length,
            Mt = 0,
            ot = 0,
            rt = 0;
          ;

        ) {
          var gt = Re === it[ot];
          if (gt) {
            if (((U[rt++] = ot), ++Mt, Mt === Qe)) break;
            Re = Ke[Mt];
          }
          if ((++ot, ot >= ct)) return Ae;
        }
        var Mt = 0,
          at = !1,
          Dt = 0,
          pt = M._nextBeginningIndexes;
        pt === Ae && (pt = M._nextBeginningIndexes = B(M.target)),
          (ot = U[0] === 0 ? 0 : pt[U[0] - 1]);
        var Xt = 0;
        if (ot !== ct)
          for (;;)
            if (ot >= ct) {
              if (Mt <= 0 || (++Xt, Xt > 200)) break;
              --Mt;
              var It = R[--Dt];
              ot = pt[It];
            } else {
              var gt = Ke[Mt] === it[ot];
              if (gt) {
                if (((R[Dt++] = ot), ++Mt, Mt === Qe)) {
                  at = !0;
                  break;
                }
                ++ot;
              } else ot = pt[ot];
            }
        var bt = Qe <= 1 ? -1 : M._targetLower.indexOf(Ge, U[0]),
          yt = !!~bt,
          tn = yt ? bt === 0 || M._nextBeginningIndexes[bt - 1] === bt : !1;
        if (yt && !tn) {
          for (var Ct = 0; Ct < pt.length; Ct = pt[Ct])
            if (!(Ct <= bt)) {
              for (
                var Qt = 0;
                Qt < Qe && Ke[Qt] === M._targetLowerCodes[Ct + Qt];
                Qt++
              );
              if (Qt === Qe) {
                (bt = Ct), (tn = !0);
                break;
              }
            }
        }
        var Bt = (Wt) => {
          for (var mn = 0, no = 0, ds = 1; ds < Qe; ++ds)
            Wt[ds] - Wt[ds - 1] !== 1 && ((mn -= Wt[ds]), ++no);
          var Rt = Wt[Qe - 1] - Wt[0] - (Qe - 1);
          if (
            ((mn -= (12 + Rt) * no),
            Wt[0] !== 0 && (mn -= Wt[0] * Wt[0] * 0.2),
            !at)
          )
            mn *= 1e3;
          else {
            for (var hr = 1, ds = pt[0]; ds < ct; ds = pt[ds]) ++hr;
            hr > 24 && (mn *= (hr - 24) * 10);
          }
          return (
            (mn -= (ct - Qe) / 2),
            yt && (mn /= 1 + Qe * Qe * 1),
            tn && (mn /= 1 + Qe * Qe * 1),
            (mn -= (ct - Qe) / 2),
            mn
          );
        };
        if (at)
          if (tn) {
            for (var Ct = 0; Ct < Qe; ++Ct) U[Ct] = bt + Ct;
            var Ut = U,
              as = Bt(U);
          } else
            var Ut = R,
              as = Bt(R);
        else {
          if (yt) for (var Ct = 0; Ct < Qe; ++Ct) U[Ct] = bt + Ct;
          var Ut = U,
            as = Bt(Ut);
        }
        M._score = as;
        for (var Ct = 0; Ct < Qe; ++Ct) M._indexes[Ct] = Ut[Ct];
        M._indexes.len = Qe;
        const Ya = new o();
        return (
          (Ya.target = M.target),
          (Ya._score = M._score),
          (Ya._indexes = M._indexes),
          Ya
        );
      },
      g = (L, M, me) => {
        for (
          var K = new Set(),
            Ge = 0,
            Ke = Ae,
            Re = 0,
            it = L.spaceSearches,
            Qe = it.length,
            ct = 0,
            ot = () => {
              for (let tn = ct - 1; tn >= 0; tn--)
                M._nextBeginningIndexes[ge[tn * 2 + 0]] = ge[tn * 2 + 1];
            },
            rt = !1,
            yt = 0;
          yt < Qe;
          ++yt
        ) {
          we[yt] = Se;
          var gt = it[yt];
          if (((Ke = O(gt, M)), me)) {
            if (Ke === Ae) continue;
            rt = !0;
          } else if (Ke === Ae) return ot(), Ae;
          var Mt = yt === Qe - 1;
          if (!Mt) {
            var at = Ke._indexes,
              Dt = !0;
            for (let Ct = 0; Ct < at.len - 1; Ct++)
              if (at[Ct + 1] - at[Ct] !== 1) {
                Dt = !1;
                break;
              }
            if (Dt) {
              var pt = at[at.len - 1] + 1,
                Xt = M._nextBeginningIndexes[pt - 1];
              for (
                let Ct = pt - 1;
                Ct >= 0 && Xt === M._nextBeginningIndexes[Ct];
                Ct--
              )
                (M._nextBeginningIndexes[Ct] = pt),
                  (ge[ct * 2 + 0] = Ct),
                  (ge[ct * 2 + 1] = Xt),
                  ct++;
            }
          }
          (Ge += Ke._score / Qe),
            (we[yt] = Ke._score / Qe),
            Ke._indexes[0] < Re && (Ge -= (Re - Ke._indexes[0]) * 2),
            (Re = Ke._indexes[0]);
          for (var It = 0; It < Ke._indexes.len; ++It) K.add(Ke._indexes[It]);
        }
        if (me && !rt) return Ae;
        ot();
        var bt = O(L, M, !0);
        if (bt !== Ae && bt._score > Ge) {
          if (me) for (var yt = 0; yt < Qe; ++yt) we[yt] = bt._score / Qe;
          return bt;
        }
        me && (Ke = M), (Ke._score = Ge);
        var yt = 0;
        for (let tn of K) Ke._indexes[yt++] = tn;
        return (Ke._indexes.len = yt), Ke;
      },
      C = (L) => {
        for (
          var M = L.length,
            me = L.toLowerCase(),
            K = [],
            Ge = 0,
            Ke = !1,
            Re = 0;
          Re < M;
          ++Re
        ) {
          var it = (K[Re] = me.charCodeAt(Re));
          if (it === 32) {
            Ke = !0;
            continue;
          }
          var Qe =
            it >= 97 && it <= 122
              ? it - 97
              : it >= 48 && it <= 57
              ? 26
              : it <= 127
              ? 30
              : 31;
          Ge |= 1 << Qe;
        }
        return { lowerCodes: K, bitflags: Ge, containsSpace: Ke, _lower: me };
      },
      H = (L) => {
        for (
          var M = L.length, me = [], K = 0, Ge = !1, Ke = !1, Re = 0;
          Re < M;
          ++Re
        ) {
          var it = L.charCodeAt(Re),
            Qe = it >= 65 && it <= 90,
            ct = Qe || (it >= 97 && it <= 122) || (it >= 48 && it <= 57),
            ot = (Qe && !Ge) || !Ke || !ct;
          (Ge = Qe), (Ke = ct), ot && (me[K++] = Re);
        }
        return me;
      },
      B = (L) => {
        for (
          var M = L.length, me = H(L), K = [], Ge = me[0], Ke = 0, Re = 0;
          Re < M;
          ++Re
        )
          Ge > Re
            ? (K[Re] = Ge)
            : ((Ge = me[++Ke]), (K[Re] = Ge === void 0 ? M : Ge));
        return K;
      },
      he = new Map(),
      de = new Map(),
      U = [],
      R = [],
      ge = [],
      ve = [],
      we = [],
      Te = [],
      Ce = [],
      Ee = (L, M) => {
        var me = L[M];
        if (me !== void 0) return me;
        if (typeof M == "function") return M(L);
        var K = M;
        Array.isArray(M) || (K = M.split("."));
        for (var Ge = K.length, Ke = -1; L && ++Ke < Ge; ) L = L[K[Ke]];
        return L;
      },
      x = (L) => typeof L == "object" && typeof L._bitflags == "number",
      F = 1 / 0,
      Se = -F,
      ye = [];
    ye.total = 0;
    var Ae = null,
      De = s(""),
      lt = (L) => {
        var M = [],
          me = 0,
          K = {},
          Ge = (Ke) => {
            for (var Re = 0, it = M[Re], Qe = 1; Qe < me; ) {
              var ct = Qe + 1;
              (Re = Qe),
                ct < me && M[ct]._score < M[Qe]._score && (Re = ct),
                (M[(Re - 1) >> 1] = M[Re]),
                (Qe = 1 + (Re << 1));
            }
            for (
              var ot = (Re - 1) >> 1;
              Re > 0 && it._score < M[ot]._score;
              ot = ((Re = ot) - 1) >> 1
            )
              M[Re] = M[ot];
            M[Re] = it;
          };
        return (
          (K.add = (Ke) => {
            var Re = me;
            M[me++] = Ke;
            for (
              var it = (Re - 1) >> 1;
              Re > 0 && Ke._score < M[it]._score;
              it = ((Re = it) - 1) >> 1
            )
              M[Re] = M[it];
            M[Re] = Ke;
          }),
          (K.poll = (Ke) => {
            if (me !== 0) {
              var Re = M[0];
              return (M[0] = M[--me]), Ge(), Re;
            }
          }),
          (K.peek = (Ke) => {
            if (me !== 0) return M[0];
          }),
          (K.replaceTop = (Ke) => {
            (M[0] = Ke), Ge();
          }),
          K
        );
      },
      nt = lt();
    return { single: n, go: r, prepare: s, cleanup: i };
  });
})(oX);
var uX = oX.exports;
const NMe = Lo(uX),
  qO = { VAULTS: "vaults", SFTP: "sftp" },
  lX = { JUMP_TO: "JUMP_TO", NEW_TAB: "NEW_TAB" },
  RMe = [
    "label",
    "address",
    "description",
    "ssh_config.port",
    "telnet_config.port",
  ];
function cX(t) {
  return t.commandPalette;
}
const kMe = 1e3,
  a5 = 500,
  xMe = "hardwareKey",
  mP = { moving: "Moving", copying: "Copying" },
  xg = {
    host: { singular: "Host", plural: "Hosts" },
    group: { singular: "Group", plural: "Groups" },
    snippet: { singular: "Snippet", plural: "Snippets" },
    snippetsPackage: {
      singular: "Snippets Package",
      plural: "Snippets Packages",
    },
    portForwardingRule: {
      singular: "Port Forwarding Rule",
      plural: "Port Forwarding Rules",
    },
    identity: { singular: "Identity", plural: "Identities" },
    sshKey: { singular: "SSH Key", plural: "SSH Keys" },
    knownHost: { singular: "Known Host", plural: "Known Hosts" },
    default: { singular: "Entity", plural: "Entities" },
  },
  gc = Object.freeze({
    name: "Personal",
    id: null,
    encryptionKeyId: null,
    role: "Editor",
    isDefault: !1,
  }),
  dX = -2,
  LMe = Object.freeze({
    id: dX,
    isDefault: !1,
    name: "",
    encryptionKeyId: null,
  }),
  f2 = Object.freeze({ is_shared: !1, encrypted_with: null }),
  SP = -1,
  MMe = Object.freeze({ is_shared: !0, encrypted_with: null });
class hp {
  constructor(e) {
    (this.local_id = e.local_id),
      (this.id = e.id),
      (this.updated_at = e.updated_at),
      (this.created_at = e.updated_at),
      (this.address = e.address || ""),
      (this.connected_at = e.connected_at),
      (this.errorMsg = e.errorMsg || ""),
      (this.host = e.host != null ? new Tn(e.host) : null),
      (this.label = e.label || ""),
      (this.password = e.password || ""),
      (this.port = e.port || 0),
      (this.ssh_key = e.ssh_key != null ? new Ia(e.ssh_key) : null),
      (this.startup_snippet =
        e.startup_snippet != null ? new qa(e.startup_snippet) : null),
      (this.username = e.username || ""),
      (this.active = e.active),
      (this.protocol = e.protocol),
      (this.session_log_data = e.session_log_data);
  }
  static createFromConnection(e, n) {
    const { host: r, errorMsg: a, protocol: s, sessionLogData: i } = e,
      { address: o, label: u } = r,
      l = s === "telnet" ? r.getMergedTelnetConfig() : r.getMergedSshConfig(),
      { startup_snippet: c, port: d, identity: p } = l,
      { ssh_key: m, username: y, password: I } = p;
    return new hp({
      address: o,
      connected_at: n,
      errorMsg: a || "",
      host: r,
      label: u,
      password: I,
      port: d,
      ssh_key: m,
      startup_snippet: c,
      username: y,
      active: !0,
      protocol: s,
      session_log_data: i,
    });
  }
}
function Au(t) {
  return typeof t == "function" ? t : Ys;
}
function yi(t, e, n) {
  switch (n.length) {
    case 0:
      return t.call(e);
    case 1:
      return t.call(e, n[0]);
    case 2:
      return t.call(e, n[0], n[1]);
    case 3:
      return t.call(e, n[0], n[1], n[2]);
  }
  return t.apply(e, n);
}
var i5 = Math.max;
function pX(t, e, n) {
  return (
    (e = i5(e === void 0 ? t.length - 1 : e, 0)),
    function () {
      for (
        var r = arguments, a = -1, s = i5(r.length - e, 0), i = Array(s);
        ++a < s;

      )
        i[a] = r[e + a];
      a = -1;
      for (var o = Array(e + 1); ++a < e; ) o[a] = r[a];
      return (o[e] = n(i)), yi(t, this, o);
    }
  );
}
function yP(t) {
  return function () {
    return t;
  };
}
var DMe = JT
  ? function (t, e) {
      return JT(t, "toString", {
        configurable: !0,
        enumerable: !1,
        value: yP(e),
        writable: !0,
      });
    }
  : Ys;
const GMe = DMe;
var FMe = 800,
  UMe = 16,
  KMe = Date.now;
function hX(t) {
  var e = 0,
    n = 0;
  return function () {
    var r = KMe(),
      a = UMe - (r - n);
    if (((n = r), a > 0)) {
      if (++e >= FMe) return arguments[0];
    } else e = 0;
    return t.apply(void 0, arguments);
  };
}
var BMe = hX(GMe);
const m2 = BMe;
function In(t, e) {
  return m2(pX(t, e, Ys), t + "");
}
var VMe = cg && new cg();
const sw = VMe;
var jMe = sw
  ? function (t, e) {
      return sw.set(t, e), t;
    }
  : Ys;
const fX = jMe;
var o5 = Object.create,
  zMe = (function () {
    function t() {}
    return function (e) {
      if (!ws(e)) return {};
      if (o5) return o5(e);
      t.prototype = e;
      var n = new t();
      return (t.prototype = void 0), n;
    };
  })();
const Am = zMe;
function Lg(t) {
  return function () {
    var e = arguments;
    switch (e.length) {
      case 0:
        return new t();
      case 1:
        return new t(e[0]);
      case 2:
        return new t(e[0], e[1]);
      case 3:
        return new t(e[0], e[1], e[2]);
      case 4:
        return new t(e[0], e[1], e[2], e[3]);
      case 5:
        return new t(e[0], e[1], e[2], e[3], e[4]);
      case 6:
        return new t(e[0], e[1], e[2], e[3], e[4], e[5]);
      case 7:
        return new t(e[0], e[1], e[2], e[3], e[4], e[5], e[6]);
    }
    var n = Am(t.prototype),
      r = t.apply(n, e);
    return ws(r) ? r : n;
  };
}
var $Me = 1;
function WMe(t, e, n) {
  var r = e & $Me,
    a = Lg(t);
  function s() {
    var i = this && this !== Or && this instanceof s ? a : t;
    return i.apply(r ? n : this, arguments);
  }
  return s;
}
var qMe = Math.max;
function mX(t, e, n, r) {
  for (
    var a = -1,
      s = t.length,
      i = n.length,
      o = -1,
      u = e.length,
      l = qMe(s - i, 0),
      c = Array(u + l),
      d = !r;
    ++o < u;

  )
    c[o] = e[o];
  for (; ++a < i; ) (d || a < s) && (c[n[a]] = t[a]);
  for (; l--; ) c[o++] = t[a++];
  return c;
}
var YMe = Math.max;
function SX(t, e, n, r) {
  for (
    var a = -1,
      s = t.length,
      i = -1,
      o = n.length,
      u = -1,
      l = e.length,
      c = YMe(s - o, 0),
      d = Array(c + l),
      p = !r;
    ++a < c;

  )
    d[a] = t[a];
  for (var m = a; ++u < l; ) d[m + u] = e[u];
  for (; ++i < o; ) (p || a < s) && (d[m + n[i]] = t[a++]);
  return d;
}
function XMe(t, e) {
  for (var n = t.length, r = 0; n--; ) t[n] === e && ++r;
  return r;
}
function gP() {}
var QMe = 4294967295;
function Rn(t) {
  (this.__wrapped__ = t),
    (this.__actions__ = []),
    (this.__dir__ = 1),
    (this.__filtered__ = !1),
    (this.__iteratees__ = []),
    (this.__takeCount__ = QMe),
    (this.__views__ = []);
}
Rn.prototype = Am(gP.prototype);
Rn.prototype.constructor = Rn;
var JMe = sw
  ? function (t) {
      return sw.get(t);
    }
  : Cf;
const S2 = JMe;
var ZMe = {};
const lf = ZMe;
var eDe = Object.prototype,
  tDe = eDe.hasOwnProperty;
function iE(t) {
  for (
    var e = t.name + "", n = lf[e], r = tDe.call(lf, e) ? n.length : 0;
    r--;

  ) {
    var a = n[r],
      s = a.func;
    if (s == null || s == t) return a.name;
  }
  return e;
}
function zi(t, e) {
  (this.__wrapped__ = t),
    (this.__actions__ = []),
    (this.__chain__ = !!e),
    (this.__index__ = 0),
    (this.__values__ = void 0);
}
zi.prototype = Am(gP.prototype);
zi.prototype.constructor = zi;
function Ua(t, e) {
  var n = -1,
    r = t.length;
  for (e || (e = Array(r)); ++n < r; ) e[n] = t[n];
  return e;
}
function yX(t) {
  if (t instanceof Rn) return t.clone();
  var e = new zi(t.__wrapped__, t.__chain__);
  return (
    (e.__actions__ = Ua(t.__actions__)),
    (e.__index__ = t.__index__),
    (e.__values__ = t.__values__),
    e
  );
}
var nDe = Object.prototype,
  sDe = nDe.hasOwnProperty;
function fe(t) {
  if (Bs(t) && !an(t) && !(t instanceof Rn)) {
    if (t instanceof zi) return t;
    if (sDe.call(t, "__wrapped__")) return yX(t);
  }
  return new zi(t);
}
fe.prototype = gP.prototype;
fe.prototype.constructor = fe;
function YO(t) {
  var e = iE(t),
    n = fe[e];
  if (typeof n != "function" || !(e in Rn.prototype)) return !1;
  if (t === n) return !0;
  var r = S2(n);
  return !!r && t === r[0];
}
var rDe = hX(fX);
const gX = rDe;
var aDe = /\{\n\/\* \[wrapped with (.+)\] \*/,
  iDe = /,? & /;
function oDe(t) {
  var e = t.match(aDe);
  return e ? e[1].split(iDe) : [];
}
var uDe = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/;
function lDe(t, e) {
  var n = e.length;
  if (!n) return t;
  var r = n - 1;
  return (
    (e[r] = (n > 1 ? "& " : "") + e[r]),
    (e = e.join(n > 2 ? ", " : " ")),
    t.replace(
      uDe,
      `{
/* [wrapped with ` +
        e +
        `] */
`
    )
  );
}
function Yi(t, e) {
  for (
    var n = -1, r = t == null ? 0 : t.length;
    ++n < r && e(t[n], n, t) !== !1;

  );
  return t;
}
var cDe = 1,
  dDe = 2,
  pDe = 8,
  hDe = 16,
  fDe = 32,
  mDe = 64,
  SDe = 128,
  yDe = 256,
  gDe = 512,
  vDe = [
    ["ary", SDe],
    ["bind", cDe],
    ["bindKey", dDe],
    ["curry", pDe],
    ["curryRight", hDe],
    ["flip", gDe],
    ["partial", fDe],
    ["partialRight", mDe],
    ["rearg", yDe],
  ];
function _De(t, e) {
  return (
    Yi(vDe, function (n) {
      var r = "_." + n[0];
      e & n[1] && !D0(t, r) && t.push(r);
    }),
    t.sort()
  );
}
function vX(t, e, n) {
  var r = e + "";
  return m2(t, lDe(r, _De(oDe(r), n)));
}
var bDe = 1,
  EDe = 2,
  TDe = 4,
  wDe = 8,
  u5 = 32,
  l5 = 64;
function _X(t, e, n, r, a, s, i, o, u, l) {
  var c = e & wDe,
    d = c ? i : void 0,
    p = c ? void 0 : i,
    m = c ? s : void 0,
    y = c ? void 0 : s;
  (e |= c ? u5 : l5), (e &= ~(c ? l5 : u5)), e & TDe || (e &= ~(bDe | EDe));
  var I = [t, e, a, m, d, y, p, o, u, l],
    O = n.apply(void 0, I);
  return YO(t) && gX(O, I), (O.placeholder = r), vX(O, t, e);
}
function Om(t) {
  var e = t;
  return e.placeholder;
}
var PDe = Math.min;
function IDe(t, e) {
  for (var n = t.length, r = PDe(e.length, n), a = Ua(t); r--; ) {
    var s = e[r];
    t[r] = Pl(s, n) ? a[s] : void 0;
  }
  return t;
}
var c5 = "__lodash_placeholder__";
function qc(t, e) {
  for (var n = -1, r = t.length, a = 0, s = []; ++n < r; ) {
    var i = t[n];
    (i === e || i === c5) && ((t[n] = c5), (s[a++] = n));
  }
  return s;
}
var CDe = 1,
  ADe = 2,
  ODe = 8,
  HDe = 16,
  NDe = 128,
  RDe = 512;
function vP(t, e, n, r, a, s, i, o, u, l) {
  var c = e & NDe,
    d = e & CDe,
    p = e & ADe,
    m = e & (ODe | HDe),
    y = e & RDe,
    I = p ? void 0 : Lg(t);
  function O() {
    for (var g = arguments.length, C = Array(g), H = g; H--; )
      C[H] = arguments[H];
    if (m)
      var B = Om(O),
        he = XMe(C, B);
    if (
      (r && (C = mX(C, r, a, m)),
      s && (C = SX(C, s, i, m)),
      (g -= he),
      m && g < l)
    ) {
      var de = qc(C, B);
      return _X(t, e, vP, O.placeholder, n, C, de, o, u, l - g);
    }
    var U = d ? n : this,
      R = p ? U[t] : t;
    return (
      (g = C.length),
      o ? (C = IDe(C, o)) : y && g > 1 && C.reverse(),
      c && u < g && (C.length = u),
      this && this !== Or && this instanceof O && (R = I || Lg(R)),
      R.apply(U, C)
    );
  }
  return O;
}
function kDe(t, e, n) {
  var r = Lg(t);
  function a() {
    for (var s = arguments.length, i = Array(s), o = s, u = Om(a); o--; )
      i[o] = arguments[o];
    var l = s < 3 && i[0] !== u && i[s - 1] !== u ? [] : qc(i, u);
    if (((s -= l.length), s < n))
      return _X(t, e, vP, a.placeholder, void 0, i, l, void 0, void 0, n - s);
    var c = this && this !== Or && this instanceof a ? r : t;
    return yi(c, this, i);
  }
  return a;
}
var xDe = 1;
function LDe(t, e, n, r) {
  var a = e & xDe,
    s = Lg(t);
  function i() {
    for (
      var o = -1,
        u = arguments.length,
        l = -1,
        c = r.length,
        d = Array(c + u),
        p = this && this !== Or && this instanceof i ? s : t;
      ++l < c;

    )
      d[l] = r[l];
    for (; u--; ) d[l++] = arguments[++o];
    return yi(p, a ? n : this, d);
  }
  return i;
}
var d5 = "__lodash_placeholder__",
  pA = 1,
  MDe = 2,
  DDe = 4,
  p5 = 8,
  wS = 128,
  h5 = 256,
  GDe = Math.min;
function FDe(t, e) {
  var n = t[1],
    r = e[1],
    a = n | r,
    s = a < (pA | MDe | wS),
    i =
      (r == wS && n == p5) ||
      (r == wS && n == h5 && t[7].length <= e[8]) ||
      (r == (wS | h5) && e[7].length <= e[8] && n == p5);
  if (!(s || i)) return t;
  r & pA && ((t[2] = e[2]), (a |= n & pA ? 0 : DDe));
  var o = e[3];
  if (o) {
    var u = t[3];
    (t[3] = u ? mX(u, o, e[4]) : o), (t[4] = u ? qc(t[3], d5) : e[4]);
  }
  return (
    (o = e[5]),
    o &&
      ((u = t[5]),
      (t[5] = u ? SX(u, o, e[6]) : o),
      (t[6] = u ? qc(t[5], d5) : e[6])),
    (o = e[7]),
    o && (t[7] = o),
    r & wS && (t[8] = t[8] == null ? e[8] : GDe(t[8], e[8])),
    t[9] == null && (t[9] = e[9]),
    (t[0] = e[0]),
    (t[1] = a),
    t
  );
}
var UDe = /\s/;
function bX(t) {
  for (var e = t.length; e-- && UDe.test(t.charAt(e)); );
  return e;
}
var KDe = /^\s+/;
function EX(t) {
  return t && t.slice(0, bX(t) + 1).replace(KDe, "");
}
var f5 = 0 / 0,
  BDe = /^[-+]0x[0-9a-f]+$/i,
  VDe = /^0b[01]+$/i,
  jDe = /^0o[0-7]+$/i,
  zDe = parseInt;
function di(t) {
  if (typeof t == "number") return t;
  if (za(t)) return f5;
  if (ws(t)) {
    var e = typeof t.valueOf == "function" ? t.valueOf() : t;
    t = ws(e) ? e + "" : e;
  }
  if (typeof t != "string") return t === 0 ? t : +t;
  t = EX(t);
  var n = VDe.test(t);
  return n || jDe.test(t) ? zDe(t.slice(2), n ? 2 : 8) : BDe.test(t) ? f5 : +t;
}
var m5 = 1 / 0,
  $De = 17976931348623157e292;
function uu(t) {
  if (!t) return t === 0 ? t : 0;
  if (((t = di(t)), t === m5 || t === -m5)) {
    var e = t < 0 ? -1 : 1;
    return e * $De;
  }
  return t === t ? t : 0;
}
function pn(t) {
  var e = uu(t),
    n = e % 1;
  return e === e ? (n ? e - n : e) : 0;
}
var WDe = "Expected a function",
  S5 = 1,
  qDe = 2,
  hA = 8,
  fA = 16,
  mA = 32,
  y5 = 64,
  g5 = Math.max;
function Rl(t, e, n, r, a, s, i, o) {
  var u = e & qDe;
  if (!u && typeof t != "function") throw new TypeError(WDe);
  var l = r ? r.length : 0;
  if (
    (l || ((e &= ~(mA | y5)), (r = a = void 0)),
    (i = i === void 0 ? i : g5(pn(i), 0)),
    (o = o === void 0 ? o : pn(o)),
    (l -= a ? a.length : 0),
    e & y5)
  ) {
    var c = r,
      d = a;
    r = a = void 0;
  }
  var p = u ? void 0 : S2(t),
    m = [t, e, n, r, a, c, d, s, i, o];
  if (
    (p && FDe(m, p),
    (t = m[0]),
    (e = m[1]),
    (n = m[2]),
    (r = m[3]),
    (a = m[4]),
    (o = m[9] = m[9] === void 0 ? (u ? 0 : t.length) : g5(m[9] - l, 0)),
    !o && e & (hA | fA) && (e &= ~(hA | fA)),
    !e || e == S5)
  )
    var y = WMe(t, e, n);
  else
    e == hA || e == fA
      ? (y = kDe(t, e, o))
      : (e == mA || e == (S5 | mA)) && !a.length
      ? (y = LDe(t, e, n, r))
      : (y = vP.apply(void 0, m));
  var I = p ? fX : gX;
  return vX(I(y, m), t, e);
}
var YDe = 32,
  y2 = In(function (t, e) {
    var n = qc(e, Om(y2));
    return Rl(t, YDe, void 0, e, n);
  });
y2.placeholder = {};
const g2 = y2;
function v2(t, e) {
  return g2(Au(e), t);
}
const TX = 14,
  _2 = "termius dark",
  wX = "Source Code Pro",
  XDe = 4,
  QDe = 40,
  JDe = [
    {
      name: "Termius Dark",
      colorPaletteOverrides: [
        "#343851",
        "#f24e50",
        "#008463",
        "#eca855",
        "#08639f",
        "#c13282",
        "#2091f6",
        "#e2e3e8",
        "#8d91a5",
        "#ff7375",
        "#3ed7be",
        "#fdc47d",
        "#6ba0c3",
        "#ff7dc5",
        "#44a7ff",
        "#ffffff",
      ],
      backgroundColor: "#141729",
      cursorColor: "#21b568",
      foregroundColor: "#21b568",
      selectionColor: "#21b56880",
      app: { terminalUIColor: "#8D91A5" },
    },
    {
      name: "Termius Light",
      colorPaletteOverrides: [
        "#141729",
        "#f24e50",
        "#198c51",
        "#f8aa4b",
        "#004878",
        "#8f3c91",
        "#2091f6",
        "#eeeeee",
        "#3e4257",
        "#ff7375",
        "#21b568",
        "#fdc47d",
        "#1d6da2",
        "#ff7dc5",
        "#44a7ff",
        "#ffffff",
      ],
      backgroundColor: "#d5dde0",
      cursorColor: "#32364a",
      foregroundColor: "#32364a",
      selectionColor: "#32364a80",
      app: { terminalUIColor: "#6C797E" },
    },
    {
      name: "Night Owl",
      colorPaletteOverrides: [
        "#072945",
        "#ef5350",
        "#22da6e",
        "#c5e478",
        "#82aaff",
        "#c792ea",
        "#21c7a8",
        "#e1f1ff",
        "#575656",
        "#ff7472",
        "#40fa8d",
        "#ffeb95",
        "#a0beff",
        "#daa4ff",
        "#7fdbca",
        "#ffffff",
      ],
      backgroundColor: "#011627",
      cursorColor: "#80a4c2",
      foregroundColor: "#d6deeb",
      selectionColor: "#d6deeb80",
      app: { terminalUIColor: "#6D90AD" },
    },
    {
      name: "Light Owl",
      colorPaletteOverrides: [
        "#403f53",
        "#de3d3b",
        "#08916a",
        "#e0af02",
        "#288ed7",
        "#d6438a",
        "#2aa298",
        "#e8e5e5",
        "#57566d",
        "#fa5d5b",
        "#1abf90",
        "#f4c315",
        "#3ca3ec",
        "#f559a4",
        "#39c6ba",
        "#f6f6f6",
      ],
      backgroundColor: "#fbfbfb",
      cursorColor: "#90a7b2",
      foregroundColor: "#403f53",
      selectionColor: "#403f5380",
      app: { terminalUIColor: "#8898A4" },
    },
    {
      name: "Aura",
      colorPaletteOverrides: [
        "#1c1b22",
        "#ff6767",
        "#4deeb8",
        "#f4be77",
        "#5b72ee",
        "#a277ff",
        "#51fafa",
        "#dddbfa",
        "#4d4d4d",
        "#ffa285",
        "#99ffdd",
        "#ffd49d",
        "#8296ff",
        "#b592ff",
        "#8cffff",
        "#ffffff",
      ],
      backgroundColor: "#21202e",
      cursorColor: "#edecee",
      foregroundColor: "#edecee",
      selectionColor: "#edecee80",
      app: { terminalUIColor: "#A6A2D7" },
    },
    {
      name: "Rosé Pine",
      colorPaletteOverrides: [
        "#26233a",
        "#be5d78",
        "#78b1bb",
        "#e4ad5f",
        "#266782",
        "#9c7ac5",
        "#c28987",
        "#e0def4",
        "#6e6a86",
        "#eb6f92",
        "#9ccfd8",
        "#f6c177",
        "#4386a1",
        "#d5b2ff",
        "#ebbcba",
        "#f0eeff",
      ],
      backgroundColor: "#191724",
      cursorColor: "#e0def4",
      foregroundColor: "#e0def4",
      selectionColor: "#e0def480",
      app: { terminalUIColor: "#858297" },
    },
    {
      name: "Rosé Pine Moon",
      colorPaletteOverrides: [
        "#393552",
        "#be5d78",
        "#78b1bb",
        "#e4ad5f",
        "#307997",
        "#9c7ac5",
        "#da8c8a",
        "#e0def4",
        "#6e6a86",
        "#eb6f92",
        "#9ccfd8",
        "#f6c177",
        "#3e8fb0",
        "#d5b2ff",
        "#ebbcba",
        "#f0eeff",
      ],
      backgroundColor: "#232136",
      cursorColor: "#e0def4",
      foregroundColor: "#e0def4",
      selectionColor: "#e0def480",
      app: { terminalUIColor: "#858297" },
    },
    {
      name: "Rosé Pine Dawn",
      colorPaletteOverrides: [
        "#c9c0b9",
        "#b4637a",
        "#56949f",
        "#ea9d34",
        "#286983",
        "#875fb5",
        "#c47874",
        "#3e3a5b",
        "#e5dcd3",
        "#e8829f",
        "#a0d5df",
        "#f6c177",
        "#46afd9",
        "#be96ec",
        "#dd8f8c",
        "#aaa2e2",
      ],
      backgroundColor: "#faf4ed",
      cursorColor: "#575279",
      foregroundColor: "#575279",
      selectionColor: "#57527980",
      app: { terminalUIColor: "#7D776F" },
    },
    {
      name: "Cobalt2",
      colorPaletteOverrides: [
        "#000000",
        "#ff0000",
        "#38de21",
        "#ffe50a",
        "#1460d2",
        "#ff4387",
        "#00bbbb",
        "#cfcfcf",
        "#555555",
        "#ff757a",
        "#69fb79",
        "#fff285",
        "#77adff",
        "#ff92cc",
        "#6bffff",
        "#ffffff",
      ],
      backgroundColor: "#132738",
      cursorColor: "#f0cc09",
      foregroundColor: "#ffffff",
      selectionColor: "#ffffff80",
      app: { terminalUIColor: "#8B9CAB" },
    },
    {
      name: "Octocat Dark",
      colorPaletteOverrides: [
        "#000000",
        "#f78166",
        "#56d364",
        "#e3b341",
        "#6ca4f8",
        "#db61a2",
        "#2b7489",
        "#DADADA",
        "#4d4d4d",
        "#ffb5a5",
        "#69fb79",
        "#ffcf5f",
        "#b0d0ff",
        "#ff92cc",
        "#54d8ff",
        "#ffffff",
      ],
      backgroundColor: "#101216",
      cursorColor: "#c9d1d9",
      foregroundColor: "#8b949e",
      selectionColor: "#8b949e80",
      app: { terminalUIColor: "#626873" },
    },
    {
      name: "Octocat Light",
      colorPaletteOverrides: [
        "#000000",
        "#970b16",
        "#07962a",
        "#f1d007",
        "#0053b9",
        "#e94691",
        "#89d1ec",
        "#dfdddd",
        "#666666",
        "#de0000",
        "#87d5a2",
        "#ffe689",
        "#2e6cba",
        "#ffa29f",
        "#1cfafe",
        "#ffffff",
      ],
      backgroundColor: "#f4f4f4",
      cursorColor: "#3f3f3f",
      foregroundColor: "#3e3e3e",
      selectionColor: "#3e3e3e80",
      app: { terminalUIColor: "#A1A1A1" },
    },
    {
      name: "Ayu Dark",
      colorPaletteOverrides: [
        "#000000",
        "#ff3333",
        "#b8cc52",
        "#dbb012",
        "#36a3d9",
        "#df7a80",
        "#6ceedf",
        "#ababab",
        "#323232",
        "#ff8181",
        "#eafe84",
        "#ffe174",
        "#68d5ff",
        "#ffa3aa",
        "#94fff1",
        "#ffffff",
      ],
      backgroundColor: "#0f1419",
      cursorColor: "#f29718",
      foregroundColor: "#e6e1cf",
      selectionColor: "#e6e1cf80",
      app: { terminalUIColor: "#716F67" },
    },
    {
      name: "Ayu Light",
      colorPaletteOverrides: [
        "#000000",
        "#ff3333",
        "#319900",
        "#f29718",
        "#41a6d9",
        "#e07ead",
        "#1dd1b0",
        "#dfdddd",
        "#323232",
        "#ff5959",
        "#b8e532",
        "#ffc94a",
        "#73d8ff",
        "#ffa3aa",
        "#7ff1cb",
        "#ffffff",
      ],
      backgroundColor: "#fafafa",
      cursorColor: "#ff6a00",
      foregroundColor: "#5c6773",
      selectionColor: "#5c677380",
      app: { terminalUIColor: "#A1A1A1" },
    },
    {
      name: "Cyberpunk",
      colorPaletteOverrides: [
        "#100c1d",
        "#ff7092",
        "#01da7f",
        "#ddd84f",
        "#00a0d6",
        "#be4eee",
        "#28e3cc",
        "#eaeaea",
        "#221b3a",
        "#ff9999",
        "#00f890",
        "#fff787",
        "#28bfe9",
        "#e4a7ff",
        "#95fff2",
        "#ffffff",
      ],
      backgroundColor: "#332a57",
      cursorColor: "#21f6bc",
      foregroundColor: "#e5e5e5",
      selectionColor: "#e5e5e580",
      app: { terminalUIColor: "#8174B8" },
    },
    {
      name: "Cyberpunk Scarlet",
      colorPaletteOverrides: [
        "#272831",
        "#c5123d",
        "#019540",
        "#ffed30",
        "#00b0ff",
        "#c77bff",
        "#4ae3c2",
        "#6e7281",
        "#3f4352",
        "#ff8aa4",
        "#44d884",
        "#fff7ac",
        "#c2ecff",
        "#e6aefe",
        "#7bffe2",
        "#ffffff",
      ],
      backgroundColor: "#101116",
      cursorColor: "#00ffc8",
      foregroundColor: "#ff0055",
      selectionColor: "#ff005580",
      app: { terminalUIColor: "#933F5B" },
    },
    {
      name: "Romania Night",
      colorPaletteOverrides: [
        "#0b141f",
        "#b50011",
        "#124150",
        "#8d562d",
        "#444f60",
        "#5b2928",
        "#80252d",
        "#917d7c",
        "#1d2d41",
        "#de1016",
        "#b16749",
        "#d74d29",
        "#e69148",
        "#c2b1ad",
        "#f7d382",
        "#f5f5ea",
      ],
      backgroundColor: "#0b141f",
      cursorColor: "#f7d382",
      foregroundColor: "#f5f5ea",
      selectionColor: "#f5f5ea80",
      app: { terminalUIColor: "#8092A7" },
    },
    {
      name: "Romania Day",
      colorPaletteOverrides: [
        "#300f0d",
        "#b50011",
        "#1c817b",
        "#b4a667",
        "#798cb1",
        "#cf7751",
        "#fd7d89",
        "#bfb3a4",
        "#5b2c29",
        "#000000",
        "#5bc2b1",
        "#ffcd87",
        "#e69148",
        "#c2b1ad",
        "#ddb763",
        "#fffefd",
      ],
      backgroundColor: "#f5e8e7",
      cursorColor: "#d7b25e",
      foregroundColor: "#632228",
      selectionColor: "#63222880",
      app: { terminalUIColor: "#B29A98" },
    },
    {
      name: "Aubergine",
      colorPaletteOverrides: [
        "#47233b",
        "#ae3120",
        "#4e9a06",
        "#c4a000",
        "#3465a4",
        "#8f6696",
        "#5dbdac",
        "#cdc2b6",
        "#682e59",
        "#e95420",
        "#8ae234",
        "#fce94f",
        "#729fcf",
        "#b188ad",
        "#34e2e2",
        "#eeeeec",
      ],
      backgroundColor: "#2c001e",
      cursorColor: "#bbbbbb",
      foregroundColor: "#eeeeec",
      selectionColor: "#eeeeec80",
      app: { terminalUIColor: "#B385A5" },
    },
    {
      name: "Peach Fresh",
      colorPaletteOverrides: [
        "#220200",
        "#cb4434",
        "#65a06a",
        "#e6a200",
        "#3c5672",
        "#7a1a48",
        "#517e9a",
        "#fddac3",
        "#61201b",
        "#db6355",
        "#7db882",
        "#ffcf5c",
        "#5f7c9d",
        "#d06397",
        "#82adc9",
        "#ffffff",
      ],
      backgroundColor: "#f5c19e",
      cursorColor: "#b33a00",
      foregroundColor: "#520701",
      selectionColor: "#e6760180",
      app: { terminalUIColor: "#8A6851" },
    },
    {
      name: "1984 Dark",
      colorPaletteOverrides: [
        "#2a2a54",
        "#db229d",
        "#89b15c",
        "#ddca34",
        "#377fd2",
        "#c124db",
        "#4497a2",
        "#dedef4",
        "#363666",
        "#fd27b5",
        "#9ed262",
        "#f3e049",
        "#44a6e0",
        "#e42cf4",
        "#6bcdda",
        "#ececf9",
      ],
      backgroundColor: "#0d1030",
      cursorColor: "#dedee1",
      foregroundColor: "#dedee1",
      selectionColor: "#dedee180",
      app: { terminalUIColor: "#767698" },
    },
    {
      name: "1984 Light",
      colorPaletteOverrides: [
        "#1f2022",
        "#f93bb8",
        "#2cb569",
        "#ea9033",
        "#0380d9",
        "#cf29ea",
        "#0698a4",
        "#dedef4",
        "#1f2022",
        "#ff89d6",
        "#59d08e",
        "#ffb76d",
        "#6dc2ff",
        "#e26eff",
        "#3bcfdb",
        "#fbfbfe",
      ],
      backgroundColor: "#e4ecf4",
      cursorColor: "#353247",
      foregroundColor: "#353247",
      selectionColor: "#35324780",
      app: { terminalUIColor: "#798DA1" },
    },
    {
      name: "Winter Night",
      colorPaletteOverrides: [
        "#1e2c37",
        "#933911",
        "#51876b",
        "#cc9867",
        "#3e5f7e",
        "#82658a",
        "#7cb298",
        "#f9edcc",
        "#35424c",
        "#d85751",
        "#7b9a8a",
        "#e7cf91",
        "#6098aa",
        "#b690e6",
        "#94d2b5",
        "#fff9ea",
      ],
      backgroundColor: "#00192c",
      cursorColor: "#f8cfa6",
      foregroundColor: "#e4d5cc",
      selectionColor: "#e4d5cc80",
      app: { terminalUIColor: "#869CB2" },
    },
    {
      name: "Winter Day",
      colorPaletteOverrides: [
        "#685b3f",
        "#9c3b12",
        "#5a9f79",
        "#dca067",
        "#546f88",
        "#5d4864",
        "#2e8e9a",
        "#d1c6af",
        "#857554",
        "#b26848",
        "#7cb596",
        "#ffc48d",
        "#6d8fb0",
        "#d3b3dd",
        "#56b6c2",
        "#fff7e4",
      ],
      backgroundColor: "#ece3d1",
      cursorColor: "#5c6370",
      foregroundColor: "#1a2720",
      selectionColor: "#abb2bf80",
      app: { terminalUIColor: "#887F6A" },
    },
    {
      name: "Tokyo Night",
      colorPaletteOverrides: [
        "#373947",
        "#f7768e",
        "#92ba68",
        "#e8be80",
        "#5d91ff",
        "#a079e5",
        "#7dcfff",
        "#6d759a",
        "#414868",
        "#ff8da2",
        "#b8e785",
        "#ffd292",
        "#739fff",
        "#b288ff",
        "#b1e2ff",
        "#dbe2ff",
      ],
      backgroundColor: "#1a1b26",
      cursorColor: "#c0caf5",
      foregroundColor: "#cdd6ff",
      selectionColor: "#c0caf580",
      app: { terminalUIColor: "#6E769A" },
    },
    {
      name: "Tokyo Day",
      colorPaletteOverrides: [
        "#f4f4fb",
        "#f52a65",
        "#506d31",
        "#a07433",
        "#4782d4",
        "#9854f1",
        "#004b65",
        "#465484",
        "#bfc2d0",
        "#ff6692",
        "#819966",
        "#9f8662",
        "#5898f0",
        "#cba4ff",
        "#00a6de",
        "#b6c4f9",
      ],
      backgroundColor: "#e1e2e7",
      cursorColor: "#3760bf",
      foregroundColor: "#2f54a8",
      selectionColor: "#3760bf80",
      app: { terminalUIColor: "#757885" },
    },
    {
      name: "Catppuccin Latte",
      colorPaletteOverrides: [
        "#5c5f77",
        "#c41037",
        "#389524",
        "#d58515",
        "#3167d2",
        "#d26eb7",
        "#09908e",
        "#acb0be",
        "#7a7d92",
        "#e6224c",
        "#4cb435",
        "#eb9926",
        "#2f75ff",
        "#ff99e3",
        "#1eabb3",
        "#d3d7e3",
      ],
      backgroundColor: "#eff1f5",
      cursorColor: "#dc8a78",
      foregroundColor: "#4c4f69",
      selectionColor: "#dc8a7880",
      app: { terminalUIColor: "#858A9C" },
    },
    {
      name: "Catppuccin Mocha",
      colorPaletteOverrides: [
        "#45475a",
        "#ad626b",
        "#95cb91",
        "#b09e76",
        "#4c82d9",
        "#bc81ae",
        "#71b2aa",
        "#5a5d74",
        "#64698a",
        "#fb99b4",
        "#aeeca9",
        "#ffe7b4",
        "#67bfff",
        "#ffccf1",
        "#a2f3e5",
        "#d7ddf3",
      ],
      backgroundColor: "#1e1e2e",
      cursorColor: "#f5e0dc",
      foregroundColor: "#cdd6f4",
      selectionColor: "#f5e0dc80",
      app: { terminalUIColor: "#777790" },
    },
    {
      name: "Diwali",
      colorPaletteOverrides: [
        "#1e0b34",
        "#ad0656",
        "#00b45d",
        "#f8d203",
        "#4548e1",
        "#e869ea",
        "#00d5dd",
        "#856da2",
        "#5a3f7e",
        "#f02889",
        "#35ef96",
        "#ffe769",
        "#7578ff",
        "#fc99ff",
        "#47eef4",
        "#f8efff",
      ],
      backgroundColor: "#311652",
      cursorColor: "#ffa900",
      foregroundColor: "#fdf6f6",
      selectionColor: "#ffa90080",
      app: { terminalUIColor: "#856EA2" },
    },
    {
      name: "Movember",
      colorPaletteOverrides: [
        "#421400",
        "#a43219",
        "#4b6d21",
        "#caa630",
        "#1e4888",
        "#7c2f4a",
        "#357b6e",
        "#cdba9e",
        "#561900",
        "#d04325",
        "#749c43",
        "#fac04f",
        "#4080e0",
        "#b44c72",
        "#52bca8",
        "#fff1dd",
      ],
      backgroundColor: "#1f0900",
      cursorColor: "#e6c03c",
      foregroundColor: "#ffe7c3",
      selectionColor: "#3b262680",
      app: { terminalUIColor: "#8C6D5E" },
    },
    {
      name: "Atom One Dark",
      colorPaletteOverrides: [
        "#000000",
        "#ca6169",
        "#82a568",
        "#bf8c5d",
        "#56a2e1",
        "#b76ccd",
        "#4e9aa3",
        "#c5cbd6",
        "#5c6370",
        "#e77c84",
        "#b4e294",
        "#e9b17b",
        "#7ec5ff",
        "#db8df2",
        "#64cfdd",
        "#ffffff",
      ],
      backgroundColor: "#1e2127",
      cursorColor: "#5c6370",
      foregroundColor: "#abb2bf",
      selectionColor: "#abb2bf80",
      app: { terminalUIColor: "#70798D" },
    },
    {
      name: "Atom One Light",
      colorPaletteOverrides: [
        "#000000",
        "#e45649",
        "#4c9b4b",
        "#c99525",
        "#4078f2",
        "#a626a4",
        "#0184bc",
        "#b8b9bf",
        "#474747",
        "#ff7468",
        "#74ca72",
        "#dba633",
        "#6a99ff",
        "#c142bf",
        "#00b1fd",
        "#ffffff",
      ],
      backgroundColor: "#f9f9f9",
      cursorColor: "#383a42",
      foregroundColor: "#383a42",
      selectionColor: "#383a4280",
      app: { terminalUIColor: "#9395A3" },
    },
    {
      name: "Halloween",
      colorPaletteOverrides: [
        "#100015",
        "#a31736",
        "#887225",
        "#ff7600",
        "#5c50a6",
        "#6d008d",
        "#ae4fa4",
        "#c7c7c6",
        "#694a71",
        "#ff2e5d",
        "#c3a640",
        "#ffa85e",
        "#8e7cff",
        "#c500ff",
        "#f491ea",
        "#fafafa",
      ],
      backgroundColor: "#22012b",
      cursorColor: "#ffa900",
      foregroundColor: "#e5e5e5",
      selectionColor: "#ffa90080",
      app: { terminalUIColor: "#9F84A7" },
    },
    {
      name: "Dia De Muertos",
      colorPaletteOverrides: [
        "#020018",
        "#eb1670",
        "#23816c",
        "#fb6633",
        "#5c439e",
        "#9d2686",
        "#e29b00",
        "#d2cbb4",
        "#3f3b64",
        "#f63b7b",
        "#28aa8b",
        "#ffa85e",
        "#7a54df",
        "#ff81c7",
        "#ffbe30",
        "#f1ebd9",
      ],
      backgroundColor: "#fffdf5",
      cursorColor: "#b33a00",
      foregroundColor: "#281f63",
      selectionColor: "#e6760180",
      app: { terminalUIColor: "#8B8982" },
    },
    {
      name: "Gruvbox Dark",
      colorPaletteOverrides: [
        "#151515",
        "#cc241d",
        "#98971a",
        "#d79921",
        "#458588",
        "#b16286",
        "#689d6a",
        "#c3b198",
        "#695c50",
        "#fb4934",
        "#b8bb26",
        "#fabd2f",
        "#83a598",
        "#f59db5",
        "#8ec07c",
        "#ebdbb2",
      ],
      backgroundColor: "#282828",
      cursorColor: "#ebdbb2",
      foregroundColor: "#ebdbb2",
      selectionColor: "#ebdbb280",
      app: { terminalUIColor: "#908477" },
    },
    {
      name: "Gruvbox Light",
      colorPaletteOverrides: [
        "#dfd6b1",
        "#9d0006",
        "#79740e",
        "#b57614",
        "#076678",
        "#8f3f71",
        "#427b58",
        "#3c3836",
        "#9d8374",
        "#cc241d",
        "#98971a",
        "#d79921",
        "#458588",
        "#d180a5",
        "#689d69",
        "#7c6f64",
      ],
      backgroundColor: "#fbf1c7",
      cursorColor: "#282828",
      foregroundColor: "#282828",
      selectionColor: "#28282880",
      app: { terminalUIColor: "#857D5F" },
    },
    {
      name: "Material Dark",
      colorPaletteOverrides: [
        "#040404",
        "#b7141f",
        "#457b24",
        "#f6981e",
        "#134eb2",
        "#560088",
        "#0e717c",
        "#efefef",
        "#424242",
        "#e83b3f",
        "#7aba3a",
        "#ffea2e",
        "#54a4f3",
        "#aa4dbc",
        "#26bbd1",
        "#d9d9d9",
      ],
      backgroundColor: "#232322",
      cursorColor: "#16afca",
      foregroundColor: "#e5e5e5",
      selectionColor: "#e5e5e580",
      app: { terminalUIColor: "#75756E" },
    },
    {
      name: "Material Light",
      colorPaletteOverrides: [
        "#000000",
        "#b7141f",
        "#457b24",
        "#f6981e",
        "#134eb2",
        "#560088",
        "#0e717c",
        "#f5f5f5",
        "#424242",
        "#e83b3f",
        "#7aba3a",
        "#ffea2e",
        "#54a4f3",
        "#aa4dbc",
        "#26bbd1",
        "#d9d9d9",
      ],
      backgroundColor: "#eaeaea",
      cursorColor: "#16afca",
      foregroundColor: "#2f2f2f",
      selectionColor: "#23232280",
      app: { terminalUIColor: "#747474" },
    },
    {
      name: "Manhattan",
      colorPaletteOverrides: [
        "#0a0a0a",
        "#840f02",
        "#5e5e5c",
        "#c3a421",
        "#727370",
        "#d1d1cb",
        "#4f4f4c",
        "#aaaba6",
        "#2e2e2c",
        "#d15510",
        "#636361",
        "#d8b741",
        "#777875",
        "#d6d6d0",
        "#696966",
        "#afb0ab",
      ],
      backgroundColor: "#0a0a0a",
      cursorColor: "#dfe0db",
      foregroundColor: "#b8b9b4",
      selectionColor: "#b8b9b480",
      app: { terminalUIColor: "#7B7B7B" },
    },
    {
      name: "Plastic World",
      colorPaletteOverrides: [
        "#581743",
        "#de0000",
        "#99d76d",
        "#f2d66f",
        "#eb8dd7",
        "#9b37ff",
        "#68b9dc",
        "#f6b8ec",
        "#86316b",
        "#ff7ba3",
        "#d3ffaf",
        "#ffe383",
        "#fe9be8",
        "#a65cf0",
        "#b0e6fe",
        "#ffe6f7",
      ],
      backgroundColor: "#ea56c1",
      cursorColor: "#bafc8b",
      foregroundColor: "#ffe9da",
      selectionColor: "#ffe9da80",
      app: { terminalUIColor: "#FFD9F2" },
    },
    {
      name: "Basic",
      colorPaletteOverrides: [
        "#2e2e2e",
        "#c61a1a",
        "#007900",
        "#999900",
        "#0f48cd",
        "#b200b2",
        "#3fc1dd",
        "#acacac",
        "#757575",
        "#ff3e3e",
        "#00b300",
        "#d4d400",
        "#316fff",
        "#ff60c9",
        "#6ce5ff",
        "#cac5c5",
      ],
      backgroundColor: "#ffffff",
      cursorColor: "#7f7f7f",
      foregroundColor: "#000000",
      selectionColor: "#00000080",
      app: { terminalUIColor: "#808080" },
    },
    {
      name: "Homebrew",
      colorPaletteOverrides: [
        "#2e2e2e",
        "#c93434",
        "#348e48",
        "#e09e00",
        "#0031e0",
        "#e235ff",
        "#3fc1dd",
        "#d0cfcf",
        "#5b5b5b",
        "#ff6767",
        "#31ff31",
        "#ffdca8",
        "#4465da",
        "#ff5fc8",
        "#8debff",
        "#e6e6e6",
      ],
      backgroundColor: "#000000",
      cursorColor: "#23ff18",
      foregroundColor: "#00ff00",
      selectionColor: "#00ff0080",
      app: { terminalUIColor: "#9D9D9D" },
    },
    {
      name: "Grass",
      colorPaletteOverrides: [
        "#000000",
        "#9a183c",
        "#6eb95e",
        "#ffa673",
        "#00378a",
        "#771361",
        "#3bcbea",
        "#939393",
        "#393939",
        "#e0692f",
        "#b2ffa2",
        "#ffc27b",
        "#2380c4",
        "#ec88c2",
        "#70e4ff",
        "#ffffff",
      ],
      backgroundColor: "#13773d",
      cursorColor: "#8c2800",
      foregroundColor: "#fff0a5",
      selectionColor: "#fff0a580",
      app: { terminalUIColor: "#8ED4AC" },
    },
    {
      name: "Man Page",
      colorPaletteOverrides: [
        "#383838",
        "#9a183c",
        "#009100",
        "#be6600",
        "#114695",
        "#b72fb9",
        "#3bcbea",
        "#959595",
        "#a7a7a7",
        "#e0692f",
        "#00b400",
        "#ffb571",
        "#3392d6",
        "#ec88c2",
        "#70e4ff",
        "#dadada",
      ],
      backgroundColor: "#fef49c",
      cursorColor: "#7f7f7f",
      foregroundColor: "#000000",
      selectionColor: "#00000080",
      app: { terminalUIColor: "#848057" },
    },
    {
      name: "Novel",
      colorPaletteOverrides: [
        "#000000",
        "#d30f0f",
        "#00933b",
        "#d38b40",
        "#00528e",
        "#cc32cf",
        "#26c3e6",
        "#a6a6a6",
        "#5c5c5c",
        "#e0692f",
        "#00b400",
        "#fff284",
        "#3ba6f3",
        "#ec88c2",
        "#38daff",
        "#f2f2f2",
      ],
      backgroundColor: "#dfdbc3",
      cursorColor: "#73635a",
      foregroundColor: "#3b2322",
      selectionColor: "#3b232280",
      app: { terminalUIColor: "#6F6C5A" },
    },
    {
      name: "Ocean",
      colorPaletteOverrides: [
        "#000000",
        "#881616",
        "#399518",
        "#dda114",
        "#00a3ff",
        "#a83aff",
        "#28ccd6",
        "#d3d3d3",
        "#d2d2d2",
        "#ff7658",
        "#00ff47",
        "#f5c147",
        "#79ceff",
        "#ea6fff",
        "#58f4ff",
        "#ffffff",
      ],
      backgroundColor: "#224fbc",
      cursorColor: "#7f7f7f",
      foregroundColor: "#ffffff",
      selectionColor: "#ffffff80",
      app: { terminalUIColor: "#9BB4EE" },
    },
    {
      name: "Pro",
      colorPaletteOverrides: [
        "#2e2e2e",
        "#c93434",
        "#348e48",
        "#e09e00",
        "#002bc7",
        "#e235ff",
        "#3fc1dd",
        "#d0cfcf",
        "#5b5b5b",
        "#ff6767",
        "#31ff31",
        "#ffdca8",
        "#4465da",
        "#ff5fc8",
        "#8debff",
        "#e6e6e6",
      ],
      backgroundColor: "#000000",
      cursorColor: "#4d4d4d",
      foregroundColor: "#f2f2f2",
      selectionColor: "#f2f2f280",
      app: { terminalUIColor: "#9D9D9D" },
    },
    {
      name: "Red Sands",
      colorPaletteOverrides: [
        "#000000",
        "#d30e0e",
        "#58aa47",
        "#ffa673",
        "#0072ff",
        "#ff57ee",
        "#3bcbea",
        "#e6e6e6",
        "#606060",
        "#e0692f",
        "#b2ffa2",
        "#ffc27b",
        "#0193fc",
        "#ffbce2",
        "#70e4ff",
        "#ffffff",
      ],
      backgroundColor: "#7a251e",
      cursorColor: "#ffffff",
      foregroundColor: "#d7c9a7",
      selectionColor: "#d7c9a780",
      app: { terminalUIColor: "#CC8984" },
    },
    {
      name: "Solarized Dark",
      colorPaletteOverrides: [
        "#11586a",
        "#dc322f",
        "#8ea20a",
        "#b58900",
        "#268bd2",
        "#c41f6f",
        "#2aa198",
        "#e7e0cc",
        "#003b4a",
        "#f15c59",
        "#677558",
        "#7e7a61",
        "#83a8ad",
        "#886cc4",
        "#72b6b6",
        "#fdf6e3",
      ],
      backgroundColor: "#002b36",
      cursorColor: "#657779",
      foregroundColor: "#839496",
      selectionColor: "#65777980",
      app: { terminalUIColor: "#5D838D" },
    },
    {
      name: "Solarized Light",
      colorPaletteOverrides: [
        "#073642",
        "#dc322f",
        "#8fa30a",
        "#b58900",
        "#268bd2",
        "#c41f6f",
        "#2aa198",
        "#e6e0cb",
        "#00252f",
        "#e05319",
        "#667558",
        "#7e7960",
        "#83a8ad",
        "#886cc4",
        "#72b6b6",
        "#fff0c7",
      ],
      backgroundColor: "#fdf6e3",
      cursorColor: "#657b83",
      foregroundColor: "#657b83",
      selectionColor: "#657b8380",
      app: { terminalUIColor: "#9C9686" },
    },
    {
      name: "Silver Aerogel",
      colorPaletteOverrides: [
        "#262424",
        "#ca3535",
        "#09672f",
        "#ffbe73",
        "#004582",
        "#cf41e6",
        "#45adce",
        "#eae9e9",
        "#b6b6b6",
        "#ff7658",
        "#57cc5c",
        "#fff06b",
        "#487bff",
        "#ff60c9",
        "#2cc6f7",
        "#ffffff",
      ],
      backgroundColor: "#919191",
      cursorColor: "#d9d9d9",
      foregroundColor: "#000000",
      selectionColor: "#00000080",
      app: { terminalUIColor: "#4D4D4D" },
    },
    {
      name: "Dracula",
      colorPaletteOverrides: [
        "#000000",
        "#e04242",
        "#45e16c",
        "#e3ec7d",
        "#9b7dc6",
        "#e469b0",
        "#8be9fd",
        "#cac5c5",
        "#4a4a4a",
        "#ff5555",
        "#b5ffc8",
        "#fff9c8",
        "#c8a1ff",
        "#ff8cce",
        "#c8f5ff",
        "#ffffff",
      ],
      backgroundColor: "#282a36",
      cursorColor: "#bbbbbb",
      foregroundColor: "#f8f8f2",
      selectionColor: "#f8f8f280",
      app: { terminalUIColor: "#7D8197" },
    },
    {
      name: "Monokai",
      colorPaletteOverrides: [
        "#1a1a1a",
        "#dd0056",
        "#92d526",
        "#fd971f",
        "#874deb",
        "#ea095a",
        "#48bfd8",
        "#c4c5b5",
        "#625e4c",
        "#ff3382",
        "#a6f12f",
        "#e0d561",
        "#9d65ff",
        "#ff116d",
        "#58d1eb",
        "#f6f6ef",
      ],
      backgroundColor: "#0c0c0c",
      cursorColor: "#fc971f",
      foregroundColor: "#d9d9d9",
      selectionColor: "#d9d9d980",
      app: { terminalUIColor: "#86899A" },
    },
    {
      name: "Nord Light",
      colorPaletteOverrides: [
        "#2c3344",
        "#ae545d",
        "#8ca377",
        "#dabe84",
        "#718fae",
        "#95728e",
        "#78acbb",
        "#d8dee9",
        "#4c556a",
        "#d97982",
        "#a3be8b",
        "#eacb8a",
        "#a4c7e9",
        "#b48dac",
        "#8fbcbb",
        "#eceff4",
      ],
      backgroundColor: "#e5e9f0",
      cursorColor: "#88c0d0",
      foregroundColor: "#414858",
      selectionColor: "#41485880",
      app: { terminalUIColor: "#6F7683" },
    },
    {
      name: "Nord Dark",
      colorPaletteOverrides: [
        "#3b4252",
        "#ae545d",
        "#8ca377",
        "#dabe84",
        "#718fae",
        "#95728e",
        "#78acbb",
        "#d8dee9",
        "#4c556a",
        "#d97982",
        "#a3be8b",
        "#eacb8a",
        "#a4c7e9",
        "#b48dac",
        "#8fbcbb",
        "#eceff4",
      ],
      backgroundColor: "#2e3440",
      cursorColor: "#eceff4",
      foregroundColor: "#d8dee9",
      selectionColor: "#eceff480",
      app: { terminalUIColor: "#808A9E" },
    },
  ],
  b2 = Object.fromEntries(JDe.map((t) => [t.name.toLowerCase(), t])),
  ZDe = [
    "Source Code Pro",
    "Source Code Pro Medium",
    "Operator Mono Book",
    "Operator Mono Medium",
    "Fira Mono",
    "Fira Mono Medium",
    "Inconsolata-g",
    "Anonymous Pro",
    "Ubuntu Mono",
    "Droid Sans Mono",
    "Dejavu Sans Mono",
    "PT Mono",
    "Andale Mono",
    "Cascadia Code",
    "Fira Code",
    "JetBrains Mono",
    "Meslo",
  ];
class e6e {
  get(e, n, r) {
    const a = e != null ? e.toLowerCase() : "",
      s = this.getAllSchemeObjects();
    return !e && n === "auto"
      ? this.getAutoScheme(r)
      : SA(a)
      ? s[a]
      : SA(n)
      ? s[n]
      : s[_2];
  }
  getAutoScheme(e) {
    return e
      ? this.getAllSchemeObjects()["termius dark"]
      : this.getAllSchemeObjects()["termius light"];
  }
  getMinFontSize() {
    return XDe;
  }
  getMaxFontSize() {
    return QDe;
  }
  getAllSchemeNames() {
    return [...Object.keys(this.getAllSchemeObjects()), "auto"];
  }
  getAllSchemeObjects() {
    return b2;
  }
  getValidForBackendSchemesValues() {
    return Object.values(this.getAllSchemeObjects());
  }
  getFontFamailies() {
    return ZDe;
  }
  isValidColorSchemeName(e) {
    return SA(e) || e === "auto";
  }
}
const _P = new e6e(),
  SA = (t) => Object.keys(b2).some((e) => e === t),
  PX = (t) => {
    switch (t) {
      case "ssh":
        return "ssh_config";
      case "mosh":
        return "ssh_config";
      case "telnet":
        return "telnet_config";
      default:
        return null;
    }
  },
  IX = (t, e, n, r) => {
    var u, l;
    const a = n || "auto",
      s = {
        from: "global",
        fromTarget: null,
        schemeName: a,
        targetConfigName: e,
      },
      i = r == null ? void 0 : r.name.toLowerCase(),
      o = i && _P.isValidColorSchemeName(i);
    if (e) {
      const c =
        (u = t == null ? void 0 : t[e]) == null ? void 0 : u.color_scheme;
      if (c)
        return (
          (s.from = "host"), (s.fromTarget = t), (s.schemeName = o ? i : c), s
        );
      const d =
          t == null
            ? void 0
            : t.parentGroups.find((m) => {
                var y;
                return !!((y = m[e]) != null && y.color_scheme);
              }),
        p = (l = d == null ? void 0 : d[e]) == null ? void 0 : l.color_scheme;
      if (p)
        return (
          (s.from = "group"), (s.fromTarget = d), (s.schemeName = o ? i : p), s
        );
    }
    return o && i !== a && (s.schemeName = i), s;
  },
  ls = vi("electron-is"),
  t6e = process.env.hasOwnProperty("PROCESSOR_ARCHITEW6432"),
  n6e = `${process.env.windir}\\${t6e ? "Sysnative" : "System32"}`,
  s6e = `${n6e}\\WindowsPowerShell\\v1.0\\powershell.exe`,
  CX = ls.windows() ? s6e : process.env.SHELL || "",
  Rh = (t, ...e) => ({ type: `@analytics/${t}`, payload: e[0] }),
  r6e = k("TEAM_PLAN_TAB_OPENED"),
  AX = k("TRIAL_STARTED"),
  a6e = k("TRIAL_DISMISSED"),
  OX = k("WELCOME_SCREEN_OPENED"),
  i6e = k("NEW_HOST_BUTTON_PRESSED"),
  o6e = k("NEW_HOST_CREATED"),
  HX = k("HOST_DELETED"),
  u6e = k("NEW_IDENTITY_BUTTON_PRESSED"),
  Mg = k("NEW_IDENTITY_SET_UP"),
  l6e = k("NEW_SNIPPET_BUTTON_PRESSED"),
  c6e = k("NEW_SNIPPET_CREATED"),
  d6e = k("SNIPPET_EDITED"),
  E2 = k("SNIPPET_DELETED"),
  p6e = k("SNIPPET_EXECUTED"),
  h6e = k("MAGIC_BUTTON_PRESSED"),
  f6e = k("REWRITE_AI_REQUEST_PRESSED"),
  T2 = k("APP_OPENED"),
  m6e = k("LEARN_MORE_ABOUT_TEAM_BUTTON_PRESSED"),
  S6e = k("TEAM_PROMOTION_DISMISSED"),
  y6e = k("FEATURE_DESCRIPTION_SCREEN_OPENED"),
  g6e = k("NEW_PORT_FORWARDING_RULE_BUTTON_PRESSED"),
  v6e = k("NEW_PORT_FORWARDING_RULE_CREATED"),
  _6e = k("ONBOARDING_IMPORT_SCREEN_DISMISSED"),
  b6e = k("IMPORT_STARTED"),
  E6e = k("IMPORT_BUTTON_PRESSED"),
  T6e = k("IMPORT_FAILED"),
  w6e = k("IMPORT_COMPLETED"),
  NX = k("TEAM_PRIVATE_KEY_GENERATED"),
  RX = k("PERSONAL_KEY_SET_GENERATED"),
  P6e = k("PASSWORD_CHECKED_WITH_HIBP"),
  kX = k("SET_TEAM_ID"),
  I6e = k("CRITICAL_ERROR_RESOLUTION_STARTED"),
  C6e = k("MENU_BANNER_DISMISSED"),
  A6e = k("TERMINAL_SEARCH_EXECUTED"),
  O6e = k("NEW_GROUP_CREATED"),
  xX = k("GROUP_DELETED"),
  H6e = k("NEW_GROUP_BUTTON_PRESSED"),
  N6e = k("MULTIPLE_CONNECTIONS_INITIATED"),
  LX = k("CONNECTION_INITIATED"),
  R6e = k("RECONNECT_ALL_INITIATED"),
  k6e = k("CLOSE_DISCONNECTED_TABS_BUTTON_PRESSED"),
  MX = k("CONNECTION_DETAILS_REQUESTED"),
  w2 = k("CONNECTION_ESTABLISHED"),
  DX = k("CONNECTION_CLOSED"),
  GX = k("CONNECTION_FAILED"),
  x6e = k("EXEC_CHANNEL_OPEN_FAILED"),
  rw = k("APP_STARTED"),
  L6e = k("SHARED_BUTTON_PRESSED"),
  M6e = k("CREATE_TEAM_WIZARD_VIEW_OPENED"),
  D6e = k("NEW_MAIN_WINDOW_OPENED"),
  G6e = k("PROMOTION_SHOWN"),
  F6e = k("PROMOTION_PRESSED"),
  U6e = k("PROMOTION_DISMISSED"),
  XO = k("HISTORY_ITEM_DELETED"),
  K6e = k("SESSION_LOG_OPENED"),
  B6e = k("ENCRYPTION_MIGRATION_WIZARD_VIEW_OPENED"),
  V6e = k("HELP_BUTTON_PRESSED"),
  j6e = k("REMIND_TEAM_OWNER_BUTTON_PRESSED"),
  z6e = k("TEAM_TRIAL_EXPIRED_BUTTON_PRESSED"),
  $6e = k("DEEP_LINK_HANDLED"),
  W6e = k("NOTIFICATION_RECEIVED"),
  q6e = k("NOTIFICATION_SNOOZED"),
  Y6e = k("CONFIRM_ACCESS_BUTTON_PRESSED"),
  FX = k("CUSTOMER_EXPERIENCE_SURVEY_SHOWN"),
  Lp = k("HINT_DISPLAYED"),
  X6e = k("HINT_CLOSED"),
  Q6e = k("SNIPPETS_PANEL_OPENED"),
  J6e = k("SWITCH_TO_TEAM_SCREEN_OPENED"),
  Z6e = k("ACCOUNT_SET_UP_COMPLETED_SCREEN_OPENED"),
  e3e = k("SET_YOUR_DEFAULT_CREDENTIALS_SCREEN_OPENED"),
  UX = k("NEW_IDENTITY_CREATED"),
  t3e = k("DOWNLOAD_BUTTON_PRESSED"),
  n3e = k("TEAM_SIDE_ONBOARDING_PRESSED"),
  P2 = k("TEAM_SIDE_ONBOARDING_SHOWN"),
  s3e = k("TEAM_SIDE_ONBOARDING_CLOSED"),
  r3e = k("SNIPPET_SHARING_CANCELED"),
  a3e = k("MULTIPLE_ITEMS_SELECTED"),
  i3e = k("PREFERENCES_BUTTON_PRESSED"),
  o3e = k("EDIT_ENTITY_SCREEN_OPENED"),
  u3e = k("AUTHORIZED_KEYS_DOWNLOADED"),
  l3e = k("CREATE_MULTIKEY_EXPORT_SCRIPT_BUTTON_PRESSED"),
  KX = k("MULTIKEY_UPDATED"),
  BX = k("SSH_KEY_FOR_MULTIKEY_GENERATED"),
  c3e = k("MULTIKEY_CHOSEN"),
  d3e = k("ENTITIES_DRAG_AND_DROP_STARTED"),
  p3e = k("ENTITIES_DRAG_AND_DROP_COMPLETED"),
  h3e = k("MFA_INSTALL_AUTHY_SCREEN_OPENED"),
  VX = k("MFA_CONFIGURE_SCREEN_OPENED"),
  f3e = k("MFA_PHONE_NUMBER_SCREEN_OPENED"),
  m3e = k("MFA_TOKEN_SCREEN_OPENED"),
  S3e = k("MFA_CONFIRM_PASSWORD_SCREEN_OPENED"),
  jX = k("MFA_CHOOSE_PROVIDER_SCREEN_OPENED"),
  y3e = k("MFA_COPY_CODE_SCREEN_OPENED"),
  g3e = k("MFA_CODE_COPIED"),
  v3e = k("MFA_PROVIDER_CHOSEN"),
  _3e = k("WHOS_IS_TERMIUS_SCREEN_OPENED"),
  b3e = k("PRESENCE_ICON_PRESSED"),
  E3e = k("ENCRYPTION_PASSWORD_INFO_SCREEN_OPENED"),
  T3e = k("SHARE_TERMINAL_BUTTON_PRESSED"),
  w3e = k("TERMINAL_SESSION_SHARING_STARTED"),
  P3e = k("TERMINAL_SESSION_SHARING_FAILED"),
  zX = k("TERMINAL_SESSION_SHARING_STOPPED"),
  $X = k("TERMINAL_SHARING_PERMISSIONS_CHANGED"),
  WX = k("SHARED_TERMINAL_VIEWER_JOINED"),
  qX = k("SHARED_TERMINAL_VIEWER_LEFT"),
  I3e = k("TEAM_TRIAL_EXTENSION_REJECTED_SCREEN_OPENED"),
  C3e = k("SEND_CHOOSE_PLAN_SCREEN_OPENED"),
  A3e = k("TEAM_TRIAL_EXTENDED_SCREEN_OPENED"),
  O3e = k("TEAM_TRIAL_EXPIRED_SCREEN_OPENED"),
  H3e = k("INVITE_SCREEN_OPENED"),
  N3e = k("INVITE_BUTTON_PRESSED"),
  R3e = k("CONTEXT_MENU_OPENED"),
  k3e = k("SFTP_FILE_OPENED"),
  x3e = k("SFTP_UPLOAD_FILE_BUTTON_PRESSED"),
  L3e = k("SFTP_DISCARD_FILE_BUTTON_PRESSED"),
  M3e = k("SFTP_MODIFIED_FILES_BAR_SHOWN"),
  D3e = k("SFTP_FILE_TYPE_ASSOCIATED"),
  G3e = k("CREATE_ACCOUNT_SCREEN_OPENED"),
  F3e = k("TEAM_TRIAL_FUNNEL_STARTED"),
  U3e = k("NEW_KEY_BUTTON_PRESSED"),
  K3e = k("NEW_KEY_OPTION_SELECTED"),
  B3e = k("NEW_CERTIFICATE_BUTTON_PRESSED"),
  YX = k("KEYCHAIN_ITEM_CREATED"),
  Ty = k("KEYCHAIN_ITEM_DELETED"),
  oE = Ze("RESTART_BUTTON_PRESSED"),
  V3e = k("CHANGELOG_BUTTON_PRESSED"),
  j3e = k("CREDENTIALS_SHARING_OPTION_CHOSEN"),
  XX = k("CREDENTIALS_SHARING_SCREEN_OPENED"),
  z3e = k("LEARN_MORE_ABOUT_MULTIKEY_BUTTON_PRESSED"),
  $3e = k("MULTIKEY_PROMO_SCREEN_SHOWN"),
  W3e = k("ROOT_GROUP_SHARED"),
  q3e = k("TAB_CONTEXT_MENU_OPENED"),
  QX = k("NEW_HARDWARE_KEY_CREATED"),
  Y3e = k("AUTOCOMPLETE"),
  X3e = k("SERIAL_CONNECTION_SCREEN_OPENED"),
  Q3e = k("SERIAL_CONNECTION_PROMO_SCREEN_OPENED"),
  J3e = k("COPY_INVITATION_LINK_BUTTON_PRESSED"),
  Z3e = k("CLOUD_CREDENTIALS_CHECKED"),
  JX = k("CLOUD_SYNC_ACTIVATED"),
  eGe = k("SYNC_NOW_BUTTON_PRESSED"),
  ZX = k("CLOUD_SYNC_COMPLETED"),
  eQ = k("CLOUD_SYNC_FAILED"),
  tGe = k("TEAM_PRIVATE_KEY_ENCRYPTED"),
  nGe = k("TERMINAL_THEME_CHANGED"),
  sGe = k("APPEARENCE_PANEL_OPENED"),
  rGe = k("SAVE_APPEARENCE_BUTTON_PRESSED"),
  aGe = k("RESET_APPEARENCE_BUTTON_PRESSED"),
  iGe = k("TERMINAL_FONT_CHANGED"),
  oGe = k("BROADCAST_INPUT_TOGGLED"),
  uGe = k("SUGGEST_TERMINAL_THEME_BUTTON_PRESSED"),
  lGe = k("AUTOCOMPLETE_SETTING_CHANGED"),
  cGe = k("AUTOCOMPLETE_SETTINGS_OPENED"),
  dGe = k("TEAM_TRIAL_STARTED_FAILED"),
  pGe = k("ENTITY_SELECTED"),
  hGe = k("EXPORT_KEY_BUTTON_PRESSED"),
  fGe = k("EXPORT_KEY_STOPPED"),
  mGe = k("KEY_EXPORT_SUCCEEDED"),
  SGe = k("EDIT_HOST_CHAIN_SCREEN_OPENED"),
  yGe = k("BUY_NOW_BUTTON_PRESSED"),
  gGe = k("TEAM_TRIAL_EXTENSION_OFFER_SCREEN_OPENED"),
  vGe = k("COPY_PUBLIC_KEY_BUTTON_PRESSED"),
  _Ge = k("DOWNLOAD_TEMPLATE_BUTTON_PRESSED"),
  bGe = k("GROUP_SETTINGS_OPENED"),
  EGe = k("HISTORY_DETAILS_SCREEN_OPENED"),
  TGe = k("DOWNGRADE_TO_HOBBY_BUTTON_PRESSED"),
  wGe = k("NEW_SNIPPET_PACKAGE_BUTTON_PRESSED"),
  I2 = k("SNIPPET_PACKAGE_CREATED"),
  tQ = k("SNIPPET_PACKAGE_DELETED"),
  PGe = k("PORT_FORWARDING_FORM_TYPE_CHANGED"),
  IGe = k("CREATE_PORT_FORWARDING_WIZARD_VIEW_OPENED"),
  CGe = k("ENTERPRISE_SSO_BUTTON_PRESSED"),
  AGe = k("USER_LOGIN_FAILED"),
  OGe = k("LOGIN_SCREEN_OPENED"),
  HGe = k("FIDO2_KEYGEN_OPTIONS_SUBMITTED"),
  NGe = k("FIDO2_PIN_CODE_REQUESTED"),
  RGe = k("FIDO2_SSH_KEYS_SELECTED"),
  kGe = k("FIDO2_KEY_GENERATION_CONFIRMED"),
  xGe = k("FIDO2_DEVICE_SELECTED"),
  LGe = k("SPLIT_VIEW_TAB_CREATED"),
  MGe = k("SPLIT_VIEW_TAB_UPDATED"),
  DGe = k("SPLIT_VIEW_BUTTON_PRESSED"),
  GGe = k("COPY_HOST_DETAILS_LINK_BUTTON_PRESSED"),
  FGe = k("DUPLICATE_BUTTON_PRESSED"),
  UGe = k("SSH_KEY_DRAGGED_AND_DROPPED"),
  KGe = k("SETUP_CLOUD_SYNC_BUTTON_PRESSED"),
  nQ = k("CRYPTO_ERROR_OCCURRED"),
  PS = {
    shown: k("ENABLE_SHARING_DIALOG_SHOWN"),
    submitted: k("ENABLE_SHARING_DIALOG_SUBMITTED"),
    postponed: k("ENABLE_SHARING_DIALOG_POSTPONED"),
    caughtError: k("ENABLE_SHARING_DIALOG_CAUGHT_ERROR"),
    succeeded: k("ENABLE_SHARING_DIALOG_SUCCEEDED"),
  },
  BGe = k("UPGRADE_TO_PRO_FUNNEL_STARTED"),
  VGe = k("PRO_PLAN_SCREEN_OPENED"),
  jGe = k("SELECT_ENTITY_SCREEN_OPENED"),
  zGe = k("IDENTITY_SETTINGS_SCREEN_OPENED"),
  $Ge = k("KEYWORD_HIGHLIGHTING_SETTING_CHANGED"),
  WGe = k("KEYWORD_HIGHLIGHTING_CUSTOMIZATION_BUTTON_PRESSED"),
  qGe = k("KEYWORD_HIGHLIGHTING_COLOR_ITEM_PRESSED"),
  YGe = k("IMPORT_FIDO2KEY_BUTTON_PRESSED"),
  XGe = k("ADVANCED_SETTINGS_BUTTON_PRESSED"),
  QGe = k("DO_IT_LATER_BUTTON_PRESSED"),
  JGe = k("REQUEST_INPUT_ACCESS_PRESSED"),
  ZGe = k("INPUT_PERMISSIONS_REQUESTED"),
  eFe = k("TERMINAL_SHARING_STATUS_DIALOG_SHOWN"),
  tFe = k("COPY_THE_LINK_BUTTON_PRESSED"),
  nFe = k("COLLABORATION_CONTEXT_MENU_OPENED"),
  sFe = k("COLLABORATION_CONTEXT_MENU_ITEM_PRESSED"),
  rFe = k("WELCOME_SETUP_STARTED"),
  aFe = k("WELCOME_SETUP_STEP_SKIPPED"),
  iFe = k("TOOLS_SETUP_SCREEN_OPENED"),
  oFe = k("APPEARANCE_SETUP_SCREEN_OPENED"),
  uFe = k("APPEARANCE_PICKED"),
  lFe = k("PLATFORM_SETUP_PICKED"),
  cFe = k("IMPORT_SETUP_SCREEN_OPENED"),
  dFe = k("PLATFORMS_SETUP_SCREEN_OPENED"),
  pFe = k("PROFESSIONAL_TOOLS_SELECTED"),
  hFe = k("SAVE_HISTORY_COMMAND_BUTTON_PRESSED"),
  fFe = k("PRODUCTIVITY_PANEL_OPENED"),
  mFe = k("COMMANDS_HISTORY_PANEL_OPENED"),
  C2 = k("TRIAL_ONBOARDING_STARTED"),
  SFe = k("TRIAL_ONBOARDING_BUTTON_PRESSED"),
  yFe = k("COPY_DOWNLOAD_LINK_BUTTON_PRESSED"),
  A2 = k("TRIAL_ONBOARDING_STEP_COMPLETED"),
  gFe = k("TRIAL_ONBOARDING_MINIMIZED"),
  vFe = k("TOOLBAR_CHEVRON_BUTTON_PRESSED"),
  sQ = k("SUBSCRIPTION_GRACE_PERIOD_NOTIFICATION_SHOWN"),
  _Fe = k("SUBSCRIPTION_GRACE_PERIOD_NOTIFICATION_SNOOZED"),
  bFe = k("BULK_DATA_SHARING_SCREEN_OPENED"),
  EFe = k("BULK_SHARING_COMPLETED"),
  TFe = k("TEAM_DEACTIVATION_SCREEN_OPENED"),
  wFe = k("SUBSCRIPTION_EXPIRED_SCREEN_OPENED"),
  PFe = k("EXTEND_TEAM_TRIAL_BUTTON_PRESSED"),
  rQ = k("CHANGING_VAULT_COMPLETED"),
  IFe = k("UPGRADE_BUTTON_PRESSED"),
  CFe = k("SESSION_AUTH_METHOD_CHANGED"),
  AFe = k("MOVE_ENTITY_BUTTON_PRESSED"),
  OFe = k("DOWNGRADED_TO_STARTER_PLAN"),
  HFe = k("SHELL_TYPE_DETECTED"),
  NFe = k("SET_PASSWORD_SCREEN_OPENED"),
  RFe = k("ENTER_PASSWORD_SCREEN_OPENED"),
  kFe = k("WELCOME_SLIDE_CHANGED"),
  xFe = k("ENTER_EMAIL_SCREEN_OPENED"),
  LFe = k("FORGOT_PASSWORD_BUTTON_PRESSED"),
  MFe = k("TERMINAL_SIDE_PANEL_CLOSED"),
  DFe = k("OPEN_TERMINAL_SEARCH_BY_FOCUS"),
  GFe = k("BOOST_SHELL_PERFORMANCE_INITIATED"),
  FFe = k("BOOST_SHELL_PERFORMANCE_SUCCEEDED"),
  UFe = k("BOOST_SHELL_PERFORMANCE_FAILED"),
  KFe = k("SNIPPET_MULTI_EXECUTION_TARGETS_OPENED"),
  BFe = k("COLLAPSE_ALL_RUN_SNIPPET_PREVIEW_PRESSED"),
  VFe = k("SNIPPET_MULTI_EXECUTION_COMPLETED"),
  jFe = k("MOVE_RUN_SNIPPET_TO_SPLIT_VIEW_PRESSED"),
  zFe = k("SNIPPET_MULTI_EXECUTION_CONNECTION_CLOSED"),
  $Fe = k("SNIPPET_MULTI_EXECUTION_CONNECTION_DETACHED"),
  WFe = k("EXPAND_ALL_RUN_SNIPPET_PREVIEW_PRESSED"),
  qFe = k("SNIPPET_MULTI_EXECUTION_PREVIEW_PRESSED"),
  YFe = k("SNIPPET_MULTI_EXECUTION_CANCELED"),
  XFe = k("SNIPPET_MULTI_EXECUTION_STARTED"),
  QFe = k("LOGOUT_WARNING_SCREEN_OPENED"),
  JFe = k("LOGOUT_BIOMETRIC_KEYS_WARNING_SCREEN_OPENED"),
  ZFe = k("ACTIVATION_BANNER_SHOWN"),
  e9e = k("ACTIVATION_BANNER_CLOSED"),
  t9e = k("ENTITY_AUTOCOMPLETE_FIELD_FOCUSED"),
  n9e = k("ENTITY_AUTOCOMPLETE_ITEM_PRESSED"),
  s9e = k("SHOW_CONFIG_DETAILS_BUTTON_PRESSED"),
  r9e = k("NEW_PROTOCOL_ADDED"),
  a9e = k("ENTITY_AUTOCOMPLETE_SHOWN"),
  i9e = k("NEW_TAG_CREATED"),
  o9e = k("WINDOWS_HELLO_AVAILABILITY_DETECTED"),
  u9e = k("COMMAND_PALETTE_OPENED"),
  l9e = k("COMMAND_PALETTE_STATE_CHANGED"),
  c9e = k("COMMAND_PALETTE_ITEM_SELECTED"),
  v5 = 1e3;
function d9e(t) {
  switch (t) {
    case "ssh":
      return "SSH";
    case "telnet":
      return "Telnet";
    case "mosh":
      return "Mosh";
    case "local":
      return "Local";
    case "stream":
      return "LiveTerminal";
    case "serial":
      return "Serial";
    default:
      return null;
  }
}
class p9e {
  constructor({
    dispatch: e,
    type: n,
    host: r,
    userType: a,
    teamStatus: s,
    connectionID: i,
    getSessionLogSize: o,
    wizardID: u,
    theme: l,
    terminalTheme: c,
  }) {
    var p, m, y, I, O, g, C, H, B;
    (this.sendEventWithSafeDelayBetweenEventsToAvoidCollision = (he) => {
      const de = this._next_safe_sent_event_date - Date.now();
      if (de <= 0) {
        he(), (this._next_safe_sent_event_date = new Date(Date.now() + v5));
        return;
      }
      setTimeout(() => {
        he();
      }, de),
        (this._next_safe_sent_event_date = new Date(
          this._next_safe_sent_event_date.getTime() + v5
        ));
    }),
      (this._connectionInitiated = (he) => {
        this._connected = !1;
        const de =
          Ft.didDeprecatedUserSentAcquisitionChannel() || he == null
            ? void 0
            : he.acquisitionChannel;
        Ft.setDeprecatedUserSentAcquisitionChannel(),
          (this.lastConnectionOrigin =
            he == null ? void 0 : he.connectionOrigin),
          this.dispatch(
            LX({
              ...this.properties,
              ...he,
              acquisitionChannel: de,
              cloudIntegration: B_(this.properties.host),
              connectionOrigin: this.lastConnectionOrigin,
              wizardID: this.properties.wizardID,
            })
          );
      }),
      (this.connectionInitiated = (he) =>
        this.sendEventWithSafeDelayBetweenEventsToAvoidCollision(() =>
          this._connectionInitiated(he)
        )),
      (this._connectionDetailsRequested = (he) => {
        this.dispatch(
          MX({
            requestedConnectionProperty: he.property,
            connectionID: this.properties.connectionID,
            cloudIntegration: B_(this.properties.host),
            sessionAuthMethod: he.authMethod,
            connectionOrigin: this.lastConnectionOrigin,
            wizardID: this.properties.wizardID,
          })
        );
      }),
      (this.connectionDetailsRequested = (he) => {
        this.sendEventWithSafeDelayBetweenEventsToAvoidCollision(() =>
          this._connectionDetailsRequested(he)
        );
      }),
      (this._connectionFailed = (he) => {
        this._connected ||
          ((this._connected = !0),
          this.dispatch(
            GX({
              ...this.properties,
              ...he,
              cloudIntegration: B_(this.properties.host),
              connectionOrigin: this.lastConnectionOrigin,
              wizardID: this.properties.wizardID,
            })
          ));
      }),
      (this.connectionFailed = (he) =>
        this.sendEventWithSafeDelayBetweenEventsToAvoidCollision(() =>
          this._connectionFailed(he)
        )),
      (this._connectionEstablished = (he) => {
        (this._connected = !0),
          this.dispatch(
            w2({
              ...this.properties,
              ...he,
              cloudIntegration: B_(this.properties.host),
              connectionOrigin: this.lastConnectionOrigin,
              wizardID: this.properties.wizardID,
            })
          );
      }),
      (this.connectionEstablished = (he) =>
        this.sendEventWithSafeDelayBetweenEventsToAvoidCollision(() =>
          this._connectionEstablished(he)
        )),
      (this._connectionClosed = async (he) => {
        var de;
        this.dispatch(
          DX({
            ...he,
            sessionLogSize: await ((de = this.getSessionLogSize) == null
              ? void 0
              : de.call(this)),
            connectionOrigin: this.lastConnectionOrigin,
          })
        );
      }),
      (this.connectionClosed = (he) =>
        this.sendEventWithSafeDelayBetweenEventsToAvoidCollision(() =>
          this._connectionClosed(he)
        )),
      (this.dispatch = e);
    const d = r ? new Tn(r) : null;
    (this.properties = {
      host: d,
      type: n,
      teamStatus: s,
      userType: a,
      connectionID: i,
      fido2BasedKey: sO(
        (y =
          (m =
            (p = d == null ? void 0 : d.ssh_config) == null
              ? void 0
              : p.identity) == null
            ? void 0
            : m.ssh_key) == null
          ? void 0
          : y.private_key
      ),
      sepkey:
        ((g =
          (O =
            (I = d == null ? void 0 : d.ssh_config) == null
              ? void 0
              : I.identity) == null
            ? void 0
            : O.hardware_key) == null
          ? void 0
          : g.isSep()) ?? !1,
      windowsHelloKey:
        ((B =
          (H =
            (C = d == null ? void 0 : d.ssh_config) == null
              ? void 0
              : C.identity) == null
            ? void 0
            : H.hardware_key) == null
          ? void 0
          : B.isWindowsHello()) ?? !1,
      wizardID: u,
      theme: l,
      terminalTheme: c,
    }),
      (this._connected = !1),
      (this._next_safe_sent_event_date = new Date()),
      (this.getSessionLogSize = o);
  }
}
function h9e(t) {
  return t != null && ["ssh", "mosh", "telnet"].includes(t);
}
function f9e(t) {
  return t != null && ["ssh", "mosh"].includes(t);
}
class bP {
  constructor(e) {
    (this.id = e.id ?? Sm()),
      (this.host = new Tn(e.host || void 0)),
      (this.chainedHostOverrides = e.chainedHostOverrides),
      (this.protocol = e.protocol || this._getMergedProtocol()),
      (this.keepaliveInterval = e.keepaliveInterval),
      (this.errorMsg = e.errorMsg),
      (this.connectedAt = e.connectedAt),
      (this.shellPath = e.shellPath || CX),
      (this.sshKnownHosts = e.sshKnownHosts || []),
      (this.stream = e.stream),
      (this.featureSet = e.featureSet ?? []),
      (this.sessionLogData = e.sessionLogData ?? void 0),
      (this.sessionLogAnalytics = e.sessionLogAnalytics ?? void 0),
      (this.serialOptions = e.serialOptions),
      (this.delegate = e.delegate ?? {
        onDisconnect() {},
        onClosed: m9e((n) => {}),
        onError(n, r, a, s) {},
        hostVerifier(n, r, a, s, i, o) {
          o(!0);
        },
        requestKeyboardInteractive(n, r, a, s, i, o) {},
        async requestSignature(n, r, a) {
          throw new Error("not implemented");
        },
        async askUserNecessaryFields() {
          throw new Error("not implemented");
        },
        requestPassphrase() {},
        handleHostChainConnection() {},
        onLogMessage(n) {},
        requestSKPresence(n) {},
        updateSKPresence(n) {},
        requestPIN() {},
        onHostOSDetected(n) {},
        requestChooseKey() {},
        requestAuthMethod() {},
        requestDiscoverableSKKeys() {},
      }),
      (this.abortController = e.abortController || new AbortController()),
      (this.quick = e.quick || !1),
      (this.saveAsHost = e.saveAsHost ?? !1),
      (this.analyticsHelper = e.analyticsHelper),
      (this.isDetectOSEnabled = e.isDetectOSEnabled ?? !1),
      (this.colorSchemeName = e.colorSchemeName);
  }
  abort() {
    return this.abortController.abort();
  }
  initAnalyticsHelper(e) {
    var u;
    const n = PX(this.protocol),
      r = IX(this.host, n),
      { type: a = d9e(this.protocol) } = e,
      s = r.from === "host" ? "yes" : "inherited",
      i =
        r.schemeName !== "auto"
          ? (u = b2[r.schemeName]) == null
            ? void 0
            : u.name
          : void 0,
      o = r.schemeName !== "auto" ? s : "no";
    this.analyticsHelper = new p9e({
      ...e,
      type: a,
      theme: o,
      terminalTheme: i,
      host: this.host,
      connectionID: this.id,
    });
  }
  get signal() {
    return this.abortController.signal;
  }
  get displayLabel() {
    var a, s;
    if (this.protocol === "local") return "Local Terminal";
    if (this.protocol === "serial")
      return ((a = this.serialOptions) == null ? void 0 : a.path) || "Serial";
    if (this.protocol === "stream")
      return ((s = this.stream) == null ? void 0 : s.title) ?? "Stream";
    const { label: e, address: n } = this.host;
    if (e) return e;
    const r = this._getConfig();
    if (r) {
      const { identity: i, port: o } = r,
        { username: u } = i,
        { protocol: l } = this;
      if (u)
        return (l === "telnet" && o === 23) || (l !== "telnet" && o === 22)
          ? n
          : `${u}@[${n}]:${o}`;
    }
    return n;
  }
  get colorScheme() {
    var n;
    if (this.protocol === "stream")
      return ((n = this.stream) == null ? void 0 : n.color_scheme) || null;
    if (this.colorSchemeName) return this.colorSchemeName;
    const e = this._getConfig();
    return (e && e.color_scheme) || null;
  }
  get startupSnippet() {
    const e = this._getConfig();
    return (e && e.startup_snippet) || null;
  }
  get port() {
    var e;
    return (e = this._getConfig()) == null ? void 0 : e.port;
  }
  get username() {
    var e;
    return (e = this._getConfig()) == null ? void 0 : e.identity.username;
  }
  isHostMissingNecessaryFields() {
    return (
      (h9e(this.protocol) && !this.host.address) ||
      (f9e(this.protocol) && !this.username)
    );
  }
  clone(e) {
    return new bP({ ...this, ...e });
  }
  _getMergedProtocol() {
    return s$(this.host);
  }
  _getConfig() {
    const { protocol: e, host: n } = this;
    switch (e) {
      case "telnet":
        return n.getMergedTelnetConfig();
      case "ssh":
      case "mosh":
        return n.getMergedSshConfig();
      default:
        return null;
    }
  }
  toTransferableObject() {
    return {
      ...this,
      abortController: null,
      delegate: null,
      analyticsHelper: null,
      sessionLogAnalytics: null,
    };
  }
}
function m9e(t) {
  return v2(t, (e, ...n) => {
    e(...n);
  });
}
class Bv extends Fs {
  constructor(e = {}) {
    super(e),
      (this.children_groups = []),
      (this.children_hosts = []),
      (this.children_groups = e.children_groups || []),
      (this.children_hosts = e.children_hosts || []);
  }
  clone(e = {}) {
    return new Bv({ ...this, ...e, changedFields: this.changed(e) });
  }
}
function Zo(t) {
  const e = "encrypted_with" in t ? t.encrypted_with : t.encryptionKeyId;
  return {
    is_shared: "is_shared" in t ? !!t.is_shared : t.id != null,
    encrypted_with: e,
  };
}
let gl = class uE extends Wa {
  constructor(e = {}) {
    super(e),
      (this.entityName = "knownHost"),
      (this.nameInAnalytic = "KnownHost"),
      (this.marker = e.marker || ""),
      (this.hostnames = e.hostnames || ""),
      (this.key = e.key || ""),
      (this.comment = e.comment || "");
  }
  static buildHostName(e) {
    return e.port === 22 ? e.address : `[${e.address}]:${e.port}`;
  }
  static createFromConnection(e, n) {
    const { host: r, port: a, pubKey: s, canEditHost: i } = e;
    return new uE({
      ...Zo(i ? n.host : f2),
      hostnames: uE.buildHostName({ address: r, port: a }),
      key: s,
    });
  }
  toOpenSshFormat() {
    return `${this.hostnames} ${this.key}`;
  }
  isEqual(e) {
    return (
      this.hostnames === e.hostnames &&
      this.marker === e.marker &&
      this.key === e.key &&
      this.comment === e.comment
    );
  }
  clone(e = {}) {
    return new uE({ ...this, ...e, changedFields: this.changed(e) });
  }
  static is(e) {
    return e.entityName === "knownHost";
  }
};
class Xi extends Wa {
  constructor(e) {
    super(e),
      (this.entityName = "portForwardingRule"),
      (this.nameInAnalytic = "PortForwardingRule"),
      (this.bound_address = e.bound_address || "127.0.0.1"),
      (this.host = new Tn(e.host)),
      (this.hostname = e.hostname || ""),
      (this.label = e.label || ""),
      (this.local_port = e.local_port),
      (this.pf_type = e.pf_type),
      (this.remote_port = e.remote_port),
      (this.status = e.status || "disconnected");
  }
  get rule() {
    const e = `From ${this.host.displayLabel}:${this.local_port}`;
    switch (this.pf_type) {
      case "Dynamic Rule":
        return e;
      case "Local Rule":
      case "Remote Rule":
        return `${e} to ${this.hostname}:${this.remote_port}`;
      default:
        return "Unknown port forwarding type";
    }
  }
  get displayLabel() {
    return this.label || this.rule;
  }
  get pfRuleType() {
    switch (this.pf_type) {
      case "Dynamic Rule":
        return "dynamic";
      case "Local Rule":
        return "local";
      case "Remote Rule":
        return "remote";
      default:
        return "local";
    }
  }
  get isValid() {
    var n, r, a;
    return (
      (n = this.pf_type) == null ? void 0 : n.toLowerCase().includes("dynamic")
    )
      ? !!(
          (r = this.host) != null &&
          r.local_id &&
          (this.local_port || this.local_port === 0)
        )
      : !!(
          (a = this.host) != null &&
          a.local_id &&
          this.hostname &&
          (this.local_port || this.local_port === 0) &&
          (this.remote_port || this.remote_port === 0)
        );
  }
  getHost() {
    return this.host;
  }
  replaceHost(e) {
    var n;
    return ((n = this.host) == null ? void 0 : n.local_id) ===
      e.original.local_id
      ? ((this.host = e.copy), !0)
      : !1;
  }
  clone(e = {}) {
    return new Xi({ ...this, ...e, changedFields: this.changed(e) });
  }
  static is(e) {
    return e.entityName === "portForwardingRule";
  }
}
let O2 = class {
    constructor(e) {
      (this.local_id = e.local_id),
        (this.id = e.id),
        (this.updated_at = e.updated_at),
        (this.host = e.host != null ? new Tn(e.host) : null),
        (this.latest_used_protocol = e.latest_used_protocol || null),
        (this.latest_used_identity = e.latest_used_identity
          ? new xr(e.latest_used_identity)
          : null);
    }
  },
  S9e = class aQ {
    constructor(e = {}) {
      (this.entityName = "multikey"),
        (this.id = e.id),
        (this.local_id = e.local_id),
        (this.username = e.username || ""),
        (this.updated_at = e.updated_at),
        (this.is_shared = !!e.is_shared),
        (this.local_updated_at = e.local_updated_at || null);
    }
    clone(e = {}) {
      return new aQ({ ...this, ...e });
    }
    get entityLocalPath() {
      return `${this.entityName}/${this.local_id}`;
    }
  },
  aw = class iQ {
    constructor(e = {}) {
      (this.local_id = e.local_id),
        (this.id = e.id),
        (this.updated_at = e.updated_at),
        (this.script = e.script || ""),
        (this.is_shared = !!e.is_shared),
        (this.local_updated_at = e.local_updated_at || null),
        (this.rating = e.rating ?? 1);
    }
    clone(e = {}) {
      return new iQ({ ...this, ...e });
    }
  };
function H2(t, e) {
  return (
    (e = typeof e == "function" ? e : void 0),
    t && t.length ? zc(t, void 0, e) : []
  );
}
function y9e(t) {
  t.sort((n, r) => (n.local_id || 0) - (r.local_id || 0));
  const e = new Set(H2(t, Pg));
  return t.filter((n) => !e.has(n));
}
var _5 = sa ? sa.isConcatSpreadable : void 0;
function g9e(t) {
  return an(t) || Fc(t) || !!(_5 && t && t[_5]);
}
function Dr(t, e, n, r, a) {
  var s = -1,
    i = t.length;
  for (n || (n = g9e), a || (a = []); ++s < i; ) {
    var o = t[s];
    e > 0 && n(o)
      ? e > 1
        ? Dr(o, e - 1, n, r, a)
        : ud(a, o)
      : r || (a[a.length] = o);
  }
  return a;
}
function Js(t) {
  return Bs(t) && Pa(t);
}
var v9e = In(function (t) {
  return zc(Dr(t, 1, Js, !0));
});
const N2 = v9e;
function EP({ local_id: t }, e) {
  if (t == null) return [];
  const n = e.find((o) => o.local_id === t);
  if (n == null) return [];
  const r = [];
  let a = [n],
    s = [];
  const i = (o) => {
    r.push(o),
      (s = N2(s, _9e(o, e)).filter(
        (u) => !r.some((l) => l.local_id === u.local_id)
      ));
  };
  for (; a.length !== 0; ) a.forEach(i), (a = s), (s = []);
  return r;
}
function _9e({ local_id: t }, e) {
  return t != null
    ? e.filter((n) => {
        var r;
        return ((r = n.parent_group) == null ? void 0 : r.local_id) === t;
      })
    : [];
}
function TP(t, e) {
  const n = new Set(t.map((r) => r.local_id));
  return e.filter(
    ({ group: r }) =>
      (r == null ? void 0 : r.local_id) != null && n.has(r.local_id)
  );
}
function b9e(t) {
  const e = (t == null ? void 0 : t.credentials_mode) === "credentials_sharing";
  return { is_shared: e, encrypted_with: e ? t.encrypted_with : null };
}
function E9e(t) {
  return t && (Fs.is(t) || Tn.is(t))
    ? b9e(t)
    : {
        is_shared: !!(t != null && t.is_shared),
        encrypted_with: t != null && t.is_shared ? t.encrypted_with : null,
      };
}
function T9e(t, e) {
  return "credentials_mode" in t ? t.credentials_mode === e : !1;
}
function w9e(t, e) {
  return t == null
    ? !1
    : t.is_shared &&
        ((e == null ? void 0 : e.ignoreCredentialsMode) ||
          T9e(t, "credentials_sharing"));
}
function Es(t, e) {
  return t.encrypted_with != null &&
    t.is_shared &&
    e.encrypted_with != null &&
    e.is_shared
    ? t.encrypted_with === e.encrypted_with
    : t.is_shared === e.is_shared;
}
function wP(t, e) {
  const n = e.id != null;
  return Es(t, { is_shared: n, encrypted_with: e.encryptionKeyId });
}
const P9e = (t) => Es(Zo(t), f2),
  I9e = (t) => t.id != null,
  C9e = (t) => "pendingAccess" in t && t.pendingAccess === !0;
function A9e(t, e, n, r) {
  for (var a = -1, s = t == null ? 0 : t.length; ++a < s; ) {
    var i = t[a];
    e(r, i, n(i), t);
  }
  return r;
}
function O9e(t, e, n, r) {
  return (
    od(t, function (a, s, i) {
      e(r, a, n(a), i);
    }),
    r
  );
}
function PP(t, e) {
  return function (n, r) {
    var a = an(n) ? A9e : O9e,
      s = e ? e() : {};
    return a(n, t, on(r), s);
  };
}
var H9e = Object.prototype,
  N9e = H9e.hasOwnProperty,
  R9e = PP(function (t, e, n) {
    N9e.call(t, n) ? t[n].push(e) : Hl(t, n, [e]);
  });
const Vv = R9e;
function oQ(t) {
  return t.length === 1 ? t[0] : void 0;
}
function k9e(t, e) {
  var a;
  const n = e.length < t.length ? e.length : "all";
  if (e.length === 0) return { selectedCount: n, label: "None" };
  const r = oQ(e);
  if (r !== void 0) {
    const s =
      ((a = t.find((i) => i.id === r)) == null ? void 0 : a.name) ?? "Unnamed";
    return { selectedCount: n, label: s };
  }
  return { selectedCount: n, label: "Vaults" };
}
const x9e = Object.freeze({ ...LMe, members: [] });
function wy(t) {
  var e = String(t);
  if (e === "[object Object]")
    try {
      e = JSON.stringify(t);
    } catch {}
  return e;
}
var L9e = (function () {
    function t() {
      (this.some = !1), (this.none = !0);
    }
    return (
      (t.prototype[Symbol.iterator] = function () {
        return {
          next: function () {
            return { done: !0, value: void 0 };
          },
        };
      }),
      (t.prototype.unwrapOr = function (e) {
        return e;
      }),
      (t.prototype.expect = function (e) {
        throw new Error("" + e);
      }),
      (t.prototype.unwrap = function () {
        throw new Error("Tried to unwrap None");
      }),
      (t.prototype.map = function (e) {
        return this;
      }),
      (t.prototype.andThen = function (e) {
        return this;
      }),
      (t.prototype.toResult = function (e) {
        return Nn(e);
      }),
      (t.prototype.toString = function () {
        return "None";
      }),
      t
    );
  })(),
  iw = new L9e();
Object.freeze(iw);
var M9e = (function () {
    function t(e) {
      if (!(this instanceof t)) return new t(e);
      (this.some = !0), (this.none = !1), (this.val = e);
    }
    return (
      (t.prototype[Symbol.iterator] = function () {
        var e = Object(this.val);
        return Symbol.iterator in e
          ? e[Symbol.iterator]()
          : {
              next: function () {
                return { done: !0, value: void 0 };
              },
            };
      }),
      (t.prototype.unwrapOr = function (e) {
        return this.val;
      }),
      (t.prototype.expect = function (e) {
        return this.val;
      }),
      (t.prototype.unwrap = function () {
        return this.val;
      }),
      (t.prototype.map = function (e) {
        return ow(e(this.val));
      }),
      (t.prototype.andThen = function (e) {
        return e(this.val);
      }),
      (t.prototype.toResult = function (e) {
        return Ga(this.val);
      }),
      (t.prototype.safeUnwrap = function () {
        return this.val;
      }),
      (t.prototype.toString = function () {
        return "Some(" + wy(this.val) + ")";
      }),
      (t.EMPTY = new t(void 0)),
      t
    );
  })(),
  ow = M9e,
  b5;
(function (t) {
  function e() {
    for (var a = [], s = 0; s < arguments.length; s++) a[s] = arguments[s];
    for (var i = [], o = 0, u = a; o < u.length; o++) {
      var l = u[o];
      if (l.some) i.push(l.val);
      else return l;
    }
    return ow(i);
  }
  t.all = e;
  function n() {
    for (var a = [], s = 0; s < arguments.length; s++) a[s] = arguments[s];
    for (var i = 0, o = a; i < o.length; i++) {
      var u = o[i];
      return u.some, u;
    }
    return iw;
  }
  t.any = n;
  function r(a) {
    return a instanceof ow || a === iw;
  }
  t.isOption = r;
})(b5 || (b5 = {}));
var D9e = (function () {
    function t(e) {
      if (!(this instanceof t)) return new t(e);
      (this.ok = !1), (this.err = !0), (this.val = e);
      var n = new Error().stack
        .split(
          `
`
        )
        .slice(2);
      n && n.length > 0 && n[0].includes("ErrImpl") && n.shift(),
        (this._stack = n.join(`
`));
    }
    return (
      (t.prototype[Symbol.iterator] = function () {
        return {
          next: function () {
            return { done: !0, value: void 0 };
          },
        };
      }),
      (t.prototype.else = function (e) {
        return e;
      }),
      (t.prototype.unwrapOr = function (e) {
        return e;
      }),
      (t.prototype.expect = function (e) {
        throw new Error(
          e +
            " - Error: " +
            wy(this.val) +
            `
` +
            this._stack
        );
      }),
      (t.prototype.unwrap = function () {
        throw new Error(
          "Tried to unwrap Error: " +
            wy(this.val) +
            `
` +
            this._stack
        );
      }),
      (t.prototype.map = function (e) {
        return this;
      }),
      (t.prototype.andThen = function (e) {
        return this;
      }),
      (t.prototype.mapErr = function (e) {
        return new Nn(e(this.val));
      }),
      (t.prototype.toOption = function () {
        return iw;
      }),
      (t.prototype.toString = function () {
        return "Err(" + wy(this.val) + ")";
      }),
      Object.defineProperty(t.prototype, "stack", {
        get: function () {
          return (
            this +
            `
` +
            this._stack
          );
        },
        enumerable: !1,
        configurable: !0,
      }),
      (t.EMPTY = new t(void 0)),
      t
    );
  })(),
  Nn = D9e,
  G9e = (function () {
    function t(e) {
      if (!(this instanceof t)) return new t(e);
      (this.ok = !0), (this.err = !1), (this.val = e);
    }
    return (
      (t.prototype[Symbol.iterator] = function () {
        var e = Object(this.val);
        return Symbol.iterator in e
          ? e[Symbol.iterator]()
          : {
              next: function () {
                return { done: !0, value: void 0 };
              },
            };
      }),
      (t.prototype.else = function (e) {
        return this.val;
      }),
      (t.prototype.unwrapOr = function (e) {
        return this.val;
      }),
      (t.prototype.expect = function (e) {
        return this.val;
      }),
      (t.prototype.unwrap = function () {
        return this.val;
      }),
      (t.prototype.map = function (e) {
        return new Ga(e(this.val));
      }),
      (t.prototype.andThen = function (e) {
        return e(this.val);
      }),
      (t.prototype.mapErr = function (e) {
        return this;
      }),
      (t.prototype.toOption = function () {
        return ow(this.val);
      }),
      (t.prototype.safeUnwrap = function () {
        return this.val;
      }),
      (t.prototype.toString = function () {
        return "Ok(" + wy(this.val) + ")";
      }),
      (t.EMPTY = new t(void 0)),
      t
    );
  })(),
  Ga = G9e,
  Ci;
(function (t) {
  function e() {
    for (var i = [], o = 0; o < arguments.length; o++) i[o] = arguments[o];
    for (var u = [], l = 0, c = i; l < c.length; l++) {
      var d = c[l];
      if (d.ok) u.push(d.val);
      else return d;
    }
    return new Ga(u);
  }
  t.all = e;
  function n() {
    for (var i = [], o = 0; o < arguments.length; o++) i[o] = arguments[o];
    for (var u = [], l = 0, c = i; l < c.length; l++) {
      var d = c[l];
      if (d.ok) return d;
      u.push(d.val);
    }
    return new Nn(u);
  }
  t.any = n;
  function r(i) {
    try {
      return new Ga(i());
    } catch (o) {
      return new Nn(o);
    }
  }
  t.wrap = r;
  function a(i) {
    try {
      return i()
        .then(function (o) {
          return new Ga(o);
        })
        .catch(function (o) {
          return new Nn(o);
        });
    } catch (o) {
      return Promise.resolve(new Nn(o));
    }
  }
  t.wrapAsync = a;
  function s(i) {
    return i instanceof Nn || i instanceof Ga;
  }
  t.isResult = s;
})(Ci || (Ci = {}));
function E5(t) {
  return new Map(t.map((e) => [e.user_id, e]));
}
function F9e(t, e, n) {
  const r = E5(t),
    a = r.get(n);
  if (a == null) return Nn(new Error("Team Owner was not found"));
  const s = E5(e),
    i = e.filter((l) => !r.has(l.user_id)),
    o = t.filter((l) => !s.has(l.user_id)),
    u = e
      .filter((l) => {
        const c = r.get(l.user_id);
        return c != null && c.role !== l.role;
      })
      .map((l) => {
        var c;
        if (l.user_id === n) return { ...l, id: a.id };
        {
          const d = (c = r.get(l.user_id)) == null ? void 0 : c.id;
          return d == null ? void 0 : { ...l, id: d };
        }
      })
      .filter(xn);
  return Ga({ addedMembers: i, deletedMembers: o, updatedMembers: u });
}
function U9e(t) {
  return t.id === dX;
}
const T5 = new Set([
    "editName",
    "editMembersList",
    "updateMembersRoles",
    "updateOwnRole",
    "removeVault",
    "editVaultData",
    "viewVaultData",
  ]),
  K9e = new Set([]),
  B9e = (t, e, n) => {
    if (U9e(t))
      return new Set([
        "editName",
        "editMembersList",
        "updateMembersRoles",
        "updateOwnRole",
      ]);
    const a = t && P9e(t);
    if (e == null || !t || a) return K9e;
    const { isDefault: s, members: i } = t,
      o = i.find((l) => l.user_id === e),
      u = (o == null ? void 0 : o.role) === "Editor";
    return s
      ? n
        ? new Set(["updateMembersRoles", "editVaultData", "viewVaultData"])
        : u
        ? new Set(["editVaultData", "viewVaultData"])
        : new Set(["viewVaultData"])
      : n
      ? u
        ? T5
        : new Set([
            "editName",
            "editMembersList",
            "updateMembersRoles",
            "removeVault",
            "updateOwnRole",
          ])
      : u
      ? T5
      : new Set(["viewVaultData"]);
  };
var V9e = Object.prototype,
  j9e = V9e.hasOwnProperty;
function jv(t, e, n) {
  var r = t[e];
  (!(j9e.call(t, e) && qi(r, n)) || (n === void 0 && !(e in t))) && Hl(t, e, n);
}
function Ou(t, e, n, r) {
  var a = !n;
  n || (n = {});
  for (var s = -1, i = e.length; ++s < i; ) {
    var o = e[s],
      u = r ? r(n[o], t[o], o, n, t) : void 0;
    u === void 0 && (u = t[o]), a ? Hl(n, o, u) : jv(n, o, u);
  }
  return n;
}
function uQ(t, e) {
  return t && Ou(e, dr(e), t);
}
function z9e(t) {
  var e = [];
  if (t != null) for (var n in Object(t)) e.push(n);
  return e;
}
var $9e = Object.prototype,
  W9e = $9e.hasOwnProperty;
function q9e(t) {
  if (!ws(t)) return z9e(t);
  var e = gv(t),
    n = [];
  for (var r in t) (r == "constructor" && (e || !W9e.call(t, r))) || n.push(r);
  return n;
}
function Aa(t) {
  return Pa(t) ? $j(t, !0) : q9e(t);
}
function Y9e(t, e) {
  return t && Ou(e, Aa(e), t);
}
var lQ = typeof exports == "object" && exports && !exports.nodeType && exports,
  w5 = lQ && typeof module == "object" && module && !module.nodeType && module,
  X9e = w5 && w5.exports === lQ,
  P5 = X9e ? Or.Buffer : void 0,
  I5 = P5 ? P5.allocUnsafe : void 0;
function cQ(t, e) {
  if (e) return t.slice();
  var n = t.length,
    r = I5 ? I5(n) : new t.constructor(n);
  return t.copy(r), r;
}
function Q9e(t, e) {
  return Ou(t, OR(t), e);
}
var J9e = Object.getOwnPropertySymbols,
  Z9e = J9e
    ? function (t) {
        for (var e = []; t; ) ud(e, OR(t)), (t = g0(t));
        return e;
      }
    : H0;
const dQ = Z9e;
function e7e(t, e) {
  return Ou(t, dQ(t), e);
}
function R2(t) {
  return Qj(t, Aa, dQ);
}
var t7e = Object.prototype,
  n7e = t7e.hasOwnProperty;
function s7e(t) {
  var e = t.length,
    n = new t.constructor(e);
  return (
    e &&
      typeof t[0] == "string" &&
      n7e.call(t, "index") &&
      ((n.index = t.index), (n.input = t.input)),
    n
  );
}
function k2(t) {
  var e = new t.constructor(t.byteLength);
  return new pT(e).set(new pT(t)), e;
}
function r7e(t, e) {
  var n = e ? k2(t.buffer) : t.buffer;
  return new t.constructor(n, t.byteOffset, t.byteLength);
}
var a7e = /\w*$/;
function i7e(t) {
  var e = new t.constructor(t.source, a7e.exec(t));
  return (e.lastIndex = t.lastIndex), e;
}
var C5 = sa ? sa.prototype : void 0,
  A5 = C5 ? C5.valueOf : void 0;
function o7e(t) {
  return A5 ? Object(A5.call(t)) : {};
}
function pQ(t, e) {
  var n = e ? k2(t.buffer) : t.buffer;
  return new t.constructor(n, t.byteOffset, t.length);
}
var u7e = "[object Boolean]",
  l7e = "[object Date]",
  c7e = "[object Map]",
  d7e = "[object Number]",
  p7e = "[object RegExp]",
  h7e = "[object Set]",
  f7e = "[object String]",
  m7e = "[object Symbol]",
  S7e = "[object ArrayBuffer]",
  y7e = "[object DataView]",
  g7e = "[object Float32Array]",
  v7e = "[object Float64Array]",
  _7e = "[object Int8Array]",
  b7e = "[object Int16Array]",
  E7e = "[object Int32Array]",
  T7e = "[object Uint8Array]",
  w7e = "[object Uint8ClampedArray]",
  P7e = "[object Uint16Array]",
  I7e = "[object Uint32Array]";
function C7e(t, e, n) {
  var r = t.constructor;
  switch (e) {
    case S7e:
      return k2(t);
    case u7e:
    case l7e:
      return new r(+t);
    case y7e:
      return r7e(t, n);
    case g7e:
    case v7e:
    case _7e:
    case b7e:
    case E7e:
    case T7e:
    case w7e:
    case P7e:
    case I7e:
      return pQ(t, n);
    case c7e:
      return new r();
    case d7e:
    case f7e:
      return new r(t);
    case p7e:
      return i7e(t);
    case h7e:
      return new r();
    case m7e:
      return o7e(t);
  }
}
function hQ(t) {
  return typeof t.constructor == "function" && !gv(t) ? Am(g0(t)) : {};
}
var A7e = "[object Map]";
function O7e(t) {
  return Bs(t) && Su(t) == A7e;
}
var O5 = Vi && Vi.isMap,
  H7e = O5 ? mi(O5) : O7e;
const x2 = H7e;
var N7e = "[object Set]";
function R7e(t) {
  return Bs(t) && Su(t) == N7e;
}
var H5 = Vi && Vi.isSet,
  k7e = H5 ? mi(H5) : R7e;
const L2 = k7e;
var x7e = 1,
  L7e = 2,
  M7e = 4,
  fQ = "[object Arguments]",
  D7e = "[object Array]",
  G7e = "[object Boolean]",
  F7e = "[object Date]",
  U7e = "[object Error]",
  mQ = "[object Function]",
  K7e = "[object GeneratorFunction]",
  B7e = "[object Map]",
  V7e = "[object Number]",
  SQ = "[object Object]",
  j7e = "[object RegExp]",
  z7e = "[object Set]",
  $7e = "[object String]",
  W7e = "[object Symbol]",
  q7e = "[object WeakMap]",
  Y7e = "[object ArrayBuffer]",
  X7e = "[object DataView]",
  Q7e = "[object Float32Array]",
  J7e = "[object Float64Array]",
  Z7e = "[object Int8Array]",
  e8e = "[object Int16Array]",
  t8e = "[object Int32Array]",
  n8e = "[object Uint8Array]",
  s8e = "[object Uint8ClampedArray]",
  r8e = "[object Uint16Array]",
  a8e = "[object Uint32Array]",
  fs = {};
fs[fQ] =
  fs[D7e] =
  fs[Y7e] =
  fs[X7e] =
  fs[G7e] =
  fs[F7e] =
  fs[Q7e] =
  fs[J7e] =
  fs[Z7e] =
  fs[e8e] =
  fs[t8e] =
  fs[B7e] =
  fs[V7e] =
  fs[SQ] =
  fs[j7e] =
  fs[z7e] =
  fs[$7e] =
  fs[W7e] =
  fs[n8e] =
  fs[s8e] =
  fs[r8e] =
  fs[a8e] =
    !0;
fs[U7e] = fs[mQ] = fs[q7e] = !1;
function Gi(t, e, n, r, a, s) {
  var i,
    o = e & x7e,
    u = e & L7e,
    l = e & M7e;
  if ((n && (i = a ? n(t, r, a, s) : n(t)), i !== void 0)) return i;
  if (!ws(t)) return t;
  var c = an(t);
  if (c) {
    if (((i = s7e(t)), !o)) return Ua(t, i);
  } else {
    var d = Su(t),
      p = d == mQ || d == K7e;
    if (dl(t)) return cQ(t, o);
    if (d == SQ || d == fQ || (p && !a)) {
      if (((i = u || p ? {} : hQ(t)), !o))
        return u ? e7e(t, Y9e(i, t)) : Q9e(t, uQ(i, t));
    } else {
      if (!fs[d]) return a ? t : {};
      i = C7e(t, d, o);
    }
  }
  s || (s = new To());
  var m = s.get(t);
  if (m) return m;
  s.set(t, i),
    L2(t)
      ? t.forEach(function (O) {
          i.add(Gi(O, e, n, O, t, s));
        })
      : x2(t) &&
        t.forEach(function (O, g) {
          i.set(g, Gi(O, e, n, g, t, s));
        });
  var y = l ? (u ? R2 : V1) : u ? Aa : dr,
    I = c ? void 0 : y(t);
  return (
    Yi(I || t, function (O, g) {
      I && ((g = O), (O = t[g])), jv(i, g, Gi(O, e, n, g, t, s));
    }),
    i
  );
}
function yQ(t, e) {
  return e.length < 2 ? t : Ip(t, ji(e, 0, -1));
}
function M2(t, e) {
  return (e = ld(e, t)), (t = yQ(t, e)), t == null || delete t[Pu(Ar(e))];
}
function i8e(t) {
  return ad(t) ? void 0 : t;
}
function IP(t) {
  var e = t == null ? 0 : t.length;
  return e ? Dr(t, 1) : [];
}
function kl(t) {
  return m2(pX(t, void 0, IP), t + "");
}
var o8e = 1,
  u8e = 2,
  l8e = 4,
  c8e = kl(function (t, e) {
    var n = {};
    if (t == null) return n;
    var r = !1;
    (e = ks(e, function (s) {
      return (s = ld(s, t)), r || (r = s.length > 1), s;
    })),
      Ou(t, R2(t), n),
      r && (n = Gi(n, o8e | u8e | l8e, i8e));
    for (var a = e.length; a--; ) M2(n, e[a]);
    return n;
  });
const zv = c8e;
function Hm(t) {
  return t.presenceEffect;
}
function gQ(t) {
  return t.avatars;
}
function d8e(t) {
  return t.devices.length > 0;
}
function QO(t, e = 0) {
  var n;
  return (n = t.find((r) => r.id === e)) == null ? void 0 : n.base64;
}
const vQ = () => (ls.windows() ? "win" : ls.macOS() ? "mac" : "linux"),
  CP = vQ(),
  JO = ls.windows(),
  p8e = ls.windowsStore(),
  uw = ls.macOS();
ls.linux();
const _Q = ls.mas(),
  yA = ls.mas() || (ls.windowsStore() && ls.ltRelease("10.0.14391")),
  bQ = "unauthorized",
  EQ = "trial",
  h8e = "premium",
  f8e = "premium expired",
  m8e = "team trial owner expired",
  S8e = "github student",
  y8e = "github student expired",
  g8e = "github teacher",
  v8e = "github teacher expired";
function TQ(t) {
  return t.user;
}
function D2(t) {
  return t.user.account;
}
function _i(t) {
  return t.user.account.user_id;
}
function AP(t) {
  return Ea(t)
    ? t.user.team_subscription || t.user.personal_subscription || null
    : t.user.personal_subscription || null;
}
function _8e(t) {
  var e;
  return !!((e = AP(t)) != null && e.is_expired);
}
function wQ(t) {
  return !!AP(t) && !_8e(t);
}
function bu(t) {
  return t.user.account.pro_mode;
}
function b8e(t) {
  return t.user.account.now;
}
function PQ(t) {
  return t.user.account.user_type || bQ;
}
function Nm(t) {
  return PQ(t).toLowerCase() === bQ;
}
function IQ(t) {
  return !Nm(t);
}
function E8e(t) {
  return t.user.account.plan_type;
}
function Ea(t) {
  return !!t.user.team;
}
function OP(t) {
  return !!t.user.team && !t.user.team.is_owner;
}
function CQ(t) {
  return t.team || {};
}
function Dg(t) {
  var e;
  return (e = t.user.team) == null ? void 0 : e.realtime_collaboration;
}
function Oa(t) {
  var e;
  return !!((e = t.user.team) != null && e.is_owner);
}
function G2(t) {
  var e;
  return (e = t.user.team) == null ? void 0 : e.owner;
}
function $v(t) {
  return PQ(t).toLowerCase() === EQ;
}
function T8e(t) {
  return !!Gg(t).show_bell;
}
function w8e(t) {
  return F2(t, "generate_multi_key_pair");
}
function Gg(t) {
  return t.account.authorized_features || {};
}
function F2(t, e) {
  return !!Gg(t.user)[e];
}
function P8e(t) {
  return F2(t, "multiple_vaults");
}
function HP(t) {
  return t.account.feature_toggles || {};
}
function I8e(t) {
  return HP(t.user);
}
function NP(t) {
  return t.user.account.expired_screen_type;
}
function Do(t) {
  return t.user.account.email ?? t.user.username;
}
function C8e(t) {
  return t.feature_toggles.encryption_schema;
}
function U2(t) {
  return C8e(t.account);
}
function RP(t) {
  var e;
  return (e = t.team) == null ? void 0 : e.encryption_schema;
}
function Qi(t) {
  return t.user.team_members || [];
}
function K2(t) {
  return t.user.team_invites || [];
}
Nt(K2, Qi, (t, e) => [...e.filter((n) => !n.is_access_granted), ...t]);
const B2 = Nt(Oa, _i, Qi, (t, e, n) => {
  if (t) return !0;
  const r = n.find((a) => a.user_id === e);
  return r == null ? void 0 : r.is_access_granted;
});
function Wv(t) {
  var e;
  return (e = t.user.team) == null ? void 0 : e.id;
}
function A8e(t) {
  return !t.user.isTeamDataStale;
}
function qv(t) {
  var e;
  return (e = t.user.team) == null ? void 0 : e.owner_id;
}
const O8e = Nt(
  Qi,
  qv,
  (t, e) =>
    new Set(
      t
        .filter((n) => n.is_access_granted)
        .map((n) => n.user_id)
        .concat(e ?? [])
    )
);
function H8e(t) {
  var e;
  return (e = t.user.device) == null ? void 0 : e.id;
}
function N8e(t) {
  return F2(t, "multiple_vaults");
}
const R8e = Nt(Qi, gQ, (t, e) =>
  t
    .filter((n) => n.has_key_pair && !n.is_access_granted && n.role !== "Owner")
    .map((n) => ({
      role: n.role === "Owner" ? "Editor" : n.role,
      email: n.email,
      user_id: n.user_id,
      avatar: QO(e, n.user_id),
    }))
);
Nt(Qi, gQ, qv, G2, (t, e, n, r) => {
  const a = t
      .filter((i) => i.is_access_granted)
      .map((i) => ({
        userId: i.user_id,
        email: i.email,
        avatar: QO(e, i.user_id),
      })),
    s =
      n != null && r != null
        ? { userId: n, email: r, avatar: QO(e, n) }
        : void 0;
  return s != null ? [s, ...a] : a;
});
Nt(
  R8e,
  (t) => t.grantAccessHiddenMembers.hiddenUserIds,
  (t, e) => {
    const n = new Set(e);
    return t.some((r) => !n.has(r.user_id));
  }
);
function ZO(t) {
  return t != null;
}
function kP(t) {
  return ZO(t) && t !== "Member";
}
function k8e(t, e) {
  const n = !!t.is_shared,
    r = t.encrypted_with ?? null;
  return !n || !kP(e == null ? void 0 : e.get(r))
    ? { is_shared: !1, encrypted_with: null }
    : { is_shared: n, encrypted_with: r };
}
function Fg(t) {
  return kP(t == null ? void 0 : t.role);
}
const Py = AQ;
function AQ(t, e) {
  return Array.isArray(t)
    ? t.every((n) => AQ(n, e))
    : x8e(t)
    ? !0
    : Fg(e.find((n) => wP(t, n)));
}
function x8e(t) {
  return t.entityName === xMe;
}
const V2 = Nt(
    (t) => t.vault.selectedVaultIds,
    Ea,
    B2,
    (t, e, n) => (e && n ? t : [null])
  ),
  OQ = Nt(
    (t) => t.vault.vaults,
    (t) => t.vault.withoutKeys,
    F8e,
    B2,
    (t, e, n, r) => {
      const a = t.find((s) => s.isDefault);
      if (a) return a;
      if (!e.some((s) => s.isDefault) && n != null) {
        const s = {
          id: SP,
          encryptionKeyId: null,
          isDefault: !0,
          name: "Team",
          role: n,
        };
        return r ? s : { ...s, pendingAccess: !0 };
      }
    }
  ),
  Rm = Nt(
    (t) => t.vault.vaults,
    OQ,
    B2,
    (t, e, n) =>
      !n && (e == null ? void 0 : e.encryptionKeyId) != null
        ? [gc, { ...e, isDefault: !0, pendingAccess: !0 }]
        : t.length > 0
        ? [gc, ...t]
        : e
        ? [gc, e]
        : [gc]
  ),
  L8e = (t) => t.vault.other ?? [];
function M8e(t, e, n, r) {
  const a = Vv(e, (s) => s.vault_id);
  return new Map(
    t.map((s) => {
      const i = a[s.id ?? x9e.id] ?? [],
        o = B9e({ ...s, members: i }, n, r);
      return [s.id, { ...s, members: i, permissions: o }];
    })
  );
}
const HQ = (t) => t.vault.vaultsMembers ?? [];
Nt(Rm, L8e, HQ, _i, Oa, O8e, (t, e, n, r, a, s) => {
  const i = [...t, ...e];
  return D8e(i, n, r, a, s);
});
const D8e = (t, e, n, r, a) => {
  const s = e.filter(({ user_id: i }) => a.has(i));
  return M8e(t, s, n, r);
};
Nt(
  (t, e) => e,
  HQ,
  (t, e) => e.filter((n) => n.vault_id === t)
);
const NQ = Nt(Rm, V2, (t, e) => t.filter((n) => e.includes(n.id))),
  ia = Nt(Rm, (t) => t.filter((e) => Fg(e)));
Nt(ia, V2, (t, e) => t.find((n) => e.some((r) => r === n.id)) ?? gc);
const RQ = (t) => t.vault.changeVaultWizards;
Nt(
  (t, e) => RQ(t),
  (t, e) => e,
  (t, e) => t.find((n) => n.wizardID === e)
);
const Yu = Nt(
  (t, e) => t.vault.vaults,
  OQ,
  (t, e) => e,
  (t, e, n) =>
    n.is_shared
      ? n.encrypted_with == null ||
        ((e == null ? void 0 : e.id) === SP && n.is_shared)
        ? e
        : t.find((a) => wP(n, a))
      : gc
);
Nt(
  Rm,
  (t) => {
    var e;
    return (e = t.vault.other) == null ? void 0 : e.filter(Fg);
  },
  (t, e) => t.filter(I9e).concat(e ?? [])
);
const G8e = Nt(Rm, V2, Ea, Do, (t, e, n, r) => {
  const a = r ? "Vaults" : "Vault",
    { label: s, selectedCount: i } = k9e(t, e);
  return { label: n ? s : a, defaultLabel: a, selectedCount: i };
});
function F8e(t) {
  if (Oa(t)) return "Owner";
  const e = !!t.user.hasAccessToSharedData,
    n = lw(t.user).includes("platform__edit_shared_entities");
  if (e && n) return "Editor";
  if (OP(t)) return "Member";
}
function lw(t) {
  var e;
  return ((e = t.team) == null ? void 0 : e.team_permissions) || [];
}
Nt(Rm, (t) => t.some((e) => C9e(e)));
function U8e(t, e) {
  return e ? ("role" in e ? Fg(e) : e.is_shared ? Fg(Yu(t, e)) : !0) : !1;
}
function K8e(t) {
  return t.vault.vaults;
}
function $f(t, e) {
  return t.map((n) => new e(n));
}
function Mp(t, e) {
  return Nt(t, NQ, (n, r) => {
    const a = LP(n, r);
    return $f(a, e);
  });
}
function Ji(t, e) {
  return Nt(t, (n) => $f(n, e));
}
const kQ = Mp((t) => t.entities.snippets, qa),
  j2 = Ji((t) => t.entities.snippets, qa);
Nt(kQ, (t) => t.filter((e) => !e.package));
const B8e = (t, e) => {
  if ((e == null ? void 0 : e.local_id) == null) return null;
  const n = kQ(t).filter((r) => {
    var a;
    return ((a = r.package) == null ? void 0 : a.local_id) === e.local_id;
  });
  return n.length > 0 ? n : null;
};
Mp((t) => t.entities.snippetsPackages, Mo);
const xQ = Ji((t) => t.entities.snippetsPackages, Mo),
  V8e = Ji((t) => t.entities.hardwareKeys, Cp),
  j8e = V8e;
Mp((t) => t.entities.sshKeys, Ia);
const z8e = Ji((t) => t.entities.sshKeys, Ia);
Mp((t) => t.entities.visibleIdentities, xr);
const $8e = Ji((t) => t.entities.visibleIdentities, xr);
Mp((t) => t.entities.portForwardingRules, Xi);
const W8e = Ji((t) => t.entities.portForwardingRules, Xi);
Mp((t) => t.entities.knownHosts, gl);
const LQ = Ji((t) => t.entities.knownHosts, gl);
Nt(LQ, (t) => t.map((e) => e.toOpenSshFormat()));
const q8e = Ji((t) => t.entities.histories, hp),
  Y8e = Ji((t) => t.entities.hostLatestActivities, O2),
  X8e = (t, e) =>
    (e != null &&
      Y8e(t).find((n) => {
        var r;
        return ((r = n.host) == null ? void 0 : r.local_id) === e;
      })) ||
    null,
  z2 = Mp((t) => t.entities.hosts, Tn),
  Zi = Ji((t) => t.entities.hosts, Tn);
Nt(
  (t, e) => Zi(t),
  cX,
  (t, e) => e,
  (t, { filter: e }, n) => {
    if (e && e !== lX.NEW_TAB) return [];
    if (n === "") {
      const r = new Date();
      return t.sort((a, s) => {
        const i = a.interaction_date
            ? new Date(a.interaction_date).getTime()
            : 0,
          o = s.interaction_date ? new Date(s.interaction_date).getTime() : 0,
          u = Math.abs(i - r.getTime()),
          l = Math.abs(o - r.getTime());
        return u - l;
      });
    }
    return uX.go(n, t, { keys: RMe }).map(({ obj: r }) => r);
  }
);
Nt(z2, (t) => t.filter((e) => !e.parentGroups.length));
const MQ = (t) => t.entities.hosts.length,
  Q8e = (t, e) => {
    if (!e) return null;
    const n = Number.parseInt(e, 10);
    return Zi(t).find((r) => r.id === n) || null;
  };
Nt(
  (t, e) => z2(t),
  (t, e) => e,
  (t, e) => e.map((n) => t.find((r) => r.local_id === n.local_id)).filter(xn)
);
const J8e = Nt(
    Zi,
    (t) => (e) => (e && t.find((n) => n.local_id === e)) || null
  ),
  DQ = (t, e) =>
    e
      ? t.filter((n) => {
          var r, a, s, i, o, u, l;
          return (
            e.local_id &&
            (((a = (r = n.ssh_config) == null ? void 0 : r.identity) == null
              ? void 0
              : a.local_id) === e.local_id ||
              ((o =
                (i = (s = n.ssh_config) == null ? void 0 : s.proxy) == null
                  ? void 0
                  : i.identity) == null
                ? void 0
                : o.local_id) === e.local_id ||
              ((l = (u = n.telnet_config) == null ? void 0 : u.identity) == null
                ? void 0
                : l.local_id) === e.local_id)
          );
        })
      : [],
  Z8e = (t, e) => {
    const n = Zi(t);
    return DQ(n, e);
  },
  e5e = (t, e) => {
    const n = Dp(t);
    return DQ(n, e);
  },
  t5e = Nt(
    (t) => t.entities.groups,
    z2,
    NQ,
    (t, e, n) => {
      const r = LP(t, n);
      return $f(r, Fs).map((a) => {
        const s = new Bv(a),
          i = EP(a, $f(r, Fs));
        return (s.children_groups = i), (s.children_hosts = TP(i, e)), s;
      });
    }
  ),
  Dp = Nt(
    Ji((t) => t.entities.groups, Fs),
    Zi,
    (t, e) =>
      t.map((n) => {
        const r = new Bv(n),
          a = EP(n, t);
        return (r.children_groups = a), (r.children_hosts = TP(a, e)), r;
      })
  );
Nt(
  (t, e = null) => Dp(t),
  (t, e = null) => e,
  GQ
);
Nt(t5e, (t) => (e) => GQ(t, e));
function GQ(t, e) {
  return (e && t.find((n) => n.local_id === e)) || null;
}
const n5e = (t) => Dp(t).filter((e) => e.is_shared) || [],
  s5e = (t) => Zi(t).filter((e) => e.is_shared) || [],
  r5e = (t) => j2(t).filter((e) => e.is_shared) || [],
  a5e = (t) => xQ(t).filter((e) => e.is_shared) || [],
  xP = (t) =>
    !!n5e(t).length || !!r5e(t).length || !!a5e(t).length || !!s5e(t).length;
Ji((t) => t.entities.historyCommands, aw);
const LP = (t, e) => (e ? t.filter((n) => e.some((r) => wP(n, r))) : t);
function JS(t, e) {
  const n = Yu(t, e);
  return n != null ? [n] : [];
}
function gA(t, e) {
  return Nt(t, JS, lE(e));
}
function lE(t) {
  return (e, n) => {
    const r = LP(e, n);
    return $f(r, t);
  };
}
Nt(
  (t, e) => t.entities.hosts,
  (t, e, n) => (n != null && n.allVaults ? null : JS(t, e)),
  lE(Tn)
),
  Nt(
    (t, e) => t.entities.visibleIdentities,
    (t, e, n) => (w9e(e, n) ? JS(t, e) : [gc]),
    lE(xr)
  ),
  Nt(
    (t, e) => t.entities.sshKeys,
    (t, e) => (E9e(e).is_shared ? JS(t, e) : [gc]),
    lE(Ia)
  ),
  gA(j8e, Cp),
  Nt(
    (t, e) => t.entities.groups,
    Zi,
    (t, e, n) => (n != null && n.allVaults ? null : JS(t, e)),
    (t, e, n) => {
      const r = $f(LP(t, n), Fs);
      return r.map((a) => {
        const s = new Bv(a),
          i = EP(a, r);
        return (s.children_groups = i), (s.children_hosts = TP(i, e)), s;
      });
    }
  ),
  gA((t) => t.entities.snippets, qa),
  gA((t) => t.entities.snippetsPackages, Mo);
const i5e = {
  host: Zi,
  group: Dp,
  portForwardingRule: W8e,
  snippetsPackage: xQ,
  snippet: j2,
  identity: $8e,
  sshKey: z8e,
  knownHost: LQ,
};
function o5e(t) {
  return Object.values(i5e).flatMap((e) => e(t));
}
function FQ(t) {
  return t.ui.theme === "dark";
}
function u5e(t) {
  return t.ui.isTerminalSharingVisible;
}
function l5e(t) {
  return t.ui.isSettingsOpened;
}
function UQ(t) {
  return t.ui.gracePeriodUntilDate;
}
function MP(t) {
  return t.globalTerminalSettings.colorScheme;
}
function c5e(t) {
  return t.globalTerminalSettings.colorSchemeAwaitsSynchronization;
}
const d5e = Nt(FQ, MP, (t, e) => (n) => _P.get(n, e, t));
function vA(t) {
  return _P.get(void 0, MP(t), FQ(t)).name;
}
function p5e(t) {
  return t.globalTerminalSettings.fontFamily;
}
function h5e(t) {
  return t.globalTerminalSettings.optionIsMeta;
}
Nt(J8e, MP, (t, e) => (n, r) => {
  const a = t(n == null ? void 0 : n.connectionHostLocalId),
    s = PX(n == null ? void 0 : n.connectionProtocol);
  return IX(a, s, e, r);
});
const go = Ze("SYNC_HISTORY"),
  KQ = k("UPDATE_HISTORY"),
  f5e = k("SHOW_MORE_HISTORY"),
  Ac = Ze("LOAD_MORE_HISTORY"),
  cw = Ze("CHECK_HISTORY_UPDATES"),
  Wd = Ze("VALIDATE_SESSION_LOG_FILE_EXIST"),
  BQ = k("RESET_HISTORY_META"),
  km = k("SET_HISTORY_META"),
  VQ = k("TOGGLE_HISTORY");
function Yn(t, e) {
  return ta(e, (n) => {
    for (const [r, a] of Object.entries(t))
      n.addCase(r, (s, i) => a(m5e(s), i));
  });
}
function m5e(t) {
  return !Ki(t) || !mu(t) ? t : RSe(t);
}
const Kt = (t) => k(t, (e) => ({ payload: e, meta: { scope: "local" } })),
  xm = 10,
  eH = {
    isLoading: !1,
    isNeedUpdate: !1,
    totalCount: 0,
    shownCount: xm,
    isShowing: !0,
    sessionLogFileExists: !1,
  },
  S5e = Yn(
    {
      [Ac.request.toString()]: (t) => ({ ...t, isLoading: !0 }),
      [Ac.success.toString()]: (t, { payload: e }) => ({
        ...t,
        ...e,
        isLoading: !1,
      }),
      [Ac.failure.toString()]: (t) => ({ ...t, isLoading: !1 }),
      [go.success.toString()]: (t, { payload: e }) => ({ ...t, ...e }),
      [km.toString()]: (t, { payload: e }) => ({ ...t, ...e }),
      [VQ.toString()]: (t) => ({ ...t, isShowing: !t.isShowing }),
      [Wd.request.toString()]: (t) => ({ ...t, sessionLogFileExists: !1 }),
      [Wd.success.toString()]: (t) => ({ ...t, sessionLogFileExists: !0 }),
      [Wd.failure.toString()]: (t) => ({ ...t, sessionLogFileExists: !1 }),
      [BQ.toString()]: () => eH,
    },
    eH
  );
function dw(t) {
  return t.history.totalCount;
}
function $2(t) {
  return t.history.shownCount;
}
function y5e(t) {
  return $2(t) + xm;
}
function g5e(t) {
  return $2(t) <= xm;
}
const jQ = k("MARK_AS_READ"),
  DP = k("ADD_LOCAL_IN_APP_MESSAGE"),
  v5e = k("REMOVE_LOCAL_IN_APP_MESSAGE"),
  _5e = k("REMOVE_UPDATE_IN_APP_MESSAGE"),
  zQ = k("MARK_ALL_AS_READ");
k("CLEAR_ALL_IN_APP_MESSAGES");
const $Q = k("IN_APP_MESSAGE_DETAILS_PRESSED"),
  b5e = k("IN_APP_MESSAGE_LIST_SCREEN_OPENED"),
  WQ = k("GET_IN_APP_MESSAGES_ON_PUSH_NOTIFICATION"),
  ea = Ze("GET_IN_APP_MESSAGES"),
  qd = Ze("INIT_IN_APP_MESSAGES"),
  al = Ze("UPDATE_IN_APP_MESSAGES"),
  qQ = k("SHOW_FULL_SCREEN_IN_APP_MESSAGES"),
  Iy = Ze("REMOVE_IN_APP_MESSAGES"),
  YQ = k("CHANGE_SAVING_QUICK_CONNECT_AS_HOST"),
  E5e = k("INCREASE_CONNECTIONS_AMOUNT"),
  T5e = k("SET_FIRST_LAUNCH_DATE"),
  tH = k("RESET_SESSION"),
  w5e = k("ADD_TAB_DURING_SESSION"),
  P5e = k("INTERACT_DURING_SESSION");
function GP(t, e, n) {
  for (var r = -1, a = t.length; ++r < a; ) {
    var s = t[r],
      i = e(s);
    if (i != null && (o === void 0 ? i === i && !za(i) : n(i, o)))
      var o = i,
        u = s;
  }
  return u;
}
function W2(t, e) {
  return t > e;
}
function FP(t, e) {
  return t && t.length ? GP(t, on(e), W2) : void 0;
}
function q2(t, e) {
  for (var n, r = -1, a = t.length; ++r < a; ) {
    var s = e(t[r]);
    s !== void 0 && (n = n === void 0 ? s : n + s);
  }
  return n;
}
function Y2(t, e) {
  return t && t.length ? q2(t, on(e)) : 0;
}
const I5e = Nt(
    (t) => t.stats.lastInteractionDate,
    (t) => t.stats.firstInteractionDate,
    (t, e) => Math.round((t - e) / 1e3)
  ),
  XQ = Nt(
    (t) => t.stats.sessionTabs,
    (t) => Object.values(t)
  ),
  C5e = Nt(XQ, (t) => Y2(t, "totalTerminalTabs")),
  A5e = Nt(XQ, (t) => {
    var e;
    return (
      ((e = FP(t, "maxTerminalTabs")) == null ? void 0 : e.maxTerminalTabs) ?? 0
    );
  }),
  N5 = Nt(A5e, C5e, I5e, (t, e, n) => ({
    maxTerminalTabs: t,
    totalTerminalTabs: e,
    lastSessionDuration: n,
  })),
  $t = Ze("SYNC"),
  QQ = Ze("SYNC_SEQUENTIALLY"),
  Cy = Ze("SYNC_ON_PUSH_NOTIFICATION"),
  JQ = k("INIT_SYNC_OPTIONS"),
  ZQ = k("UPDATE_SYNC_KEYS_AND_IDENTITIES"),
  cE = Ze("TOGGLE_SYNC_KEYS_AND_IDENTITIES"),
  ZS = k("SET_SHARING_POSSIBLE"),
  nH = Ze("TRY_FIX_SHARING_SETUP"),
  O5e = Kt("ADD_RECONNECTABLE_TERMINAL"),
  H5e = Kt("REMOVE_RECONNECTABLE_TERMINAL");
Kt("CLOSE_ALL_DISCONNECTED_TERMINALS");
const N5e = Kt("INCREASE_RECONNECT_TIMER"),
  R5e = Kt("RESET_RECONNECT_TIMER"),
  k5e = Kt("RECONNECT_TERMINAL"),
  x5e = Kt("RESET_TERMINAL_DISCONNECT_TIMESTAMP"),
  L5e = Kt("SET_SEARCH_QUERY"),
  M5e = Kt("ADD_TERMINAL"),
  D5e = Kt("ADD_EXISTED_TERMINAL_TAB"),
  G5e = Kt("ADD_SPLITVIEW_TAB"),
  F5e = Kt("ADD_TERMINAL_TAB"),
  U5e = Kt("MOVE_TERMINAL_TO_NEW_TAB"),
  K5e = Kt("REMOVE_TERMINAL"),
  B5e = Kt("SPLIT_TERMINAL"),
  V5e = Kt("TOGGLE_SPLIT_VIEW_BROADCAST_MODE"),
  eJ = Kt("ADD_SHELL_INTEGRATION_ACTIVATED_CONNECTION"),
  tJ = k("OPEN_TERMINAL_SEARCH"),
  j5e = Kt("CLOSE_TERMINAL_SEARCH");
Kt("EXIT_FROM_SEARCH");
const z5e = Kt("ACTIVATE_TERMINAL"),
  $5e = Kt("ACTIVATE_TERMINAL_TAB"),
  W5e = Kt("TERMINAL_DISCONNECT"),
  q5e = Kt("DEACTIVATE_WINDOW_TERMINALS"),
  Y5e = Kt("ESTABLISH_TERMINAL");
Kt("TERMINAL_FIND_NEXT_MATCH");
Kt("TERMINAL_FIND_PREV_MATCH");
k("INCREASE_TERMINAL_FONT_SIZE");
k("DECREASE_TERMINAL_FONT_SIZE");
k("SET_TERMINAL_FONT_SIZE");
k("SET_TERMINAL_FONT_NAME");
k("RESET_TERMINAL_FONT_SIZE_TO_DEFAULT");
k("SET_LOCAL_TERMINAL_VISUAL_SETTINGS_AS_DEFAULT");
k("SET_TERMINAL_COLOR_SCHEME");
const X5e = Kt("REORDER_TERMINALS"),
  Q5e = Kt("REORDER_SPLIT_VIEW_PANES"),
  J5e = Kt("RESIZE_SPLIT_VIEW");
Kt("RECONNECT_TAB");
const Z5e = Kt("PATCH_TERMINAL"),
  eUe = Kt("PATCH_TERMINAL_TAB");
k("RUN_IN_ALL_ACTIVE_TABS");
Kt("PRE_CREATE_HISTORY");
const tUe = k("SHOW_SPLIT_VIEW_HINT"),
  nUe = k("DISMISS_SPLIT_VIEW_HINT");
Kt("TERMINAL_ERROR");
const sUe = k("SINGLE_TERMINAL_SESSION_STARTED"),
  rUe = k("SINGLE_TERMINAL_SESSION_FINISHED"),
  aUe = k("SINGLE_TERMINAL_TAB_RENAMED"),
  nJ = k("OPEN_CONNECTED_TO_TERMINAL_WITH_UNAVAILABLE_PRO_FEATURES_HINT"),
  iUe = k("CLOSE_CONNECTED_TO_TERMINAL_WITH_UNAVAILABLE_PRO_FEATURES_HINT"),
  oUe = Kt("SET_AUTOCOMPLETE_DISABLED_FOR_TERMINAL_SESSION"),
  uUe = Kt("SET_TERMINAL_HISTORY"),
  lUe = k("SESSION_LOGS_QUEUE_OVERFLOWED");
(function () {
  if (typeof window > "u") return;
  var t = {
    searchParams: "URLSearchParams" in self,
    iterable: "Symbol" in self && "iterator" in Symbol,
    blob:
      "FileReader" in self &&
      "Blob" in self &&
      (function () {
        try {
          return new Blob(), !0;
        } catch {
          return !1;
        }
      })(),
    formData: "FormData" in self,
    arrayBuffer: "ArrayBuffer" in self,
  };
  function e(U) {
    return U && DataView.prototype.isPrototypeOf(U);
  }
  if (t.arrayBuffer)
    var n = [
        "[object Int8Array]",
        "[object Uint8Array]",
        "[object Uint8ClampedArray]",
        "[object Int16Array]",
        "[object Uint16Array]",
        "[object Int32Array]",
        "[object Uint32Array]",
        "[object Float32Array]",
        "[object Float64Array]",
      ],
      r =
        ArrayBuffer.isView ||
        function (U) {
          return U && n.indexOf(Object.prototype.toString.call(U)) > -1;
        };
  function a(U) {
    if (
      (typeof U != "string" && (U = String(U)),
      /[^a-z0-9\-#$%&'*+.^_`|~]/i.test(U))
    )
      throw new TypeError("Invalid character in header field name");
    return U.toLowerCase();
  }
  function s(U) {
    return typeof U != "string" && (U = String(U)), U;
  }
  function i(U) {
    var R = {
      next: function () {
        var ge = U.shift();
        return { done: ge === void 0, value: ge };
      },
    };
    return (
      t.iterable &&
        (R[Symbol.iterator] = function () {
          return R;
        }),
      R
    );
  }
  function o(U) {
    (this.map = {}),
      U instanceof o
        ? U.forEach(function (R, ge) {
            this.append(ge, R);
          }, this)
        : Array.isArray(U)
        ? U.forEach(function (R) {
            this.append(R[0], R[1]);
          }, this)
        : U &&
          Object.getOwnPropertyNames(U).forEach(function (R) {
            this.append(R, U[R]);
          }, this);
  }
  (o.prototype.append = function (U, R) {
    (U = a(U)), (R = s(R));
    var ge = this.map[U];
    this.map[U] = ge ? ge + ", " + R : R;
  }),
    (o.prototype.delete = function (U) {
      delete this.map[a(U)];
    }),
    (o.prototype.get = function (U) {
      return (U = a(U)), this.has(U) ? this.map[U] : null;
    }),
    (o.prototype.has = function (U) {
      return this.map.hasOwnProperty(a(U));
    }),
    (o.prototype.set = function (U, R) {
      this.map[a(U)] = s(R);
    }),
    (o.prototype.forEach = function (U, R) {
      for (var ge in this.map)
        this.map.hasOwnProperty(ge) && U.call(R, this.map[ge], ge, this);
    }),
    (o.prototype.keys = function () {
      var U = [];
      return (
        this.forEach(function (R, ge) {
          U.push(ge);
        }),
        i(U)
      );
    }),
    (o.prototype.values = function () {
      var U = [];
      return (
        this.forEach(function (R) {
          U.push(R);
        }),
        i(U)
      );
    }),
    (o.prototype.entries = function () {
      var U = [];
      return (
        this.forEach(function (R, ge) {
          U.push([ge, R]);
        }),
        i(U)
      );
    }),
    t.iterable && (o.prototype[Symbol.iterator] = o.prototype.entries);
  function u(U) {
    return U.bodyUsed ? !0 : ((U.bodyUsed = !0), !1);
  }
  function l(U) {
    return new Promise(function (R, ge) {
      (U.onload = function () {
        R(U.result);
      }),
        (U.onerror = function () {
          ge(U.error);
        });
    });
  }
  function c(U) {
    var R = new FileReader(),
      ge = l(R);
    return R.readAsArrayBuffer(U), ge;
  }
  function d(U) {
    var R = new FileReader(),
      ge = l(R);
    return R.readAsText(U), ge;
  }
  function p(U) {
    for (
      var R = new Uint8Array(U), ge = new Array(R.length), ve = 0;
      ve < R.length;
      ve++
    )
      ge[ve] = String.fromCharCode(R[ve]);
    return ge.join("");
  }
  function m(U) {
    if (U.slice) return U.slice(0);
    var R = new Uint8Array(U.byteLength);
    return R.set(new Uint8Array(U)), R.buffer;
  }
  function y() {
    return (
      (this.bodyUsed = !1),
      (this._initBody = function (U) {
        (this._bodyInit = U),
          U
            ? typeof U == "string"
              ? (this._bodyText = U)
              : t.blob && Blob.prototype.isPrototypeOf(U)
              ? (this._bodyBlob = U)
              : t.formData && FormData.prototype.isPrototypeOf(U)
              ? (this._bodyFormData = U)
              : t.searchParams && URLSearchParams.prototype.isPrototypeOf(U)
              ? (this._bodyText = U.toString())
              : t.arrayBuffer && t.blob && e(U)
              ? ((this._bodyArrayBuffer = m(U.buffer)),
                (this._bodyInit = new Blob([this._bodyArrayBuffer])))
              : t.arrayBuffer &&
                (ArrayBuffer.prototype.isPrototypeOf(U) || r(U))
              ? (this._bodyArrayBuffer = m(U))
              : (this._bodyText = U = Object.prototype.toString.call(U))
            : (this._bodyText = ""),
          this.headers.get("content-type") ||
            (typeof U == "string"
              ? this.headers.set("content-type", "text/plain;charset=UTF-8")
              : this._bodyBlob && this._bodyBlob.type
              ? this.headers.set("content-type", this._bodyBlob.type)
              : t.searchParams &&
                URLSearchParams.prototype.isPrototypeOf(U) &&
                this.headers.set(
                  "content-type",
                  "application/x-www-form-urlencoded;charset=UTF-8"
                ));
      }),
      t.blob &&
        ((this.blob = function () {
          var U = u(this);
          if (U) return Promise.reject(new TypeError("Already read"));
          if (this._bodyBlob) return Promise.resolve(this._bodyBlob);
          if (this._bodyArrayBuffer)
            return Promise.resolve(new Blob([this._bodyArrayBuffer]));
          if (this._bodyFormData)
            throw new Error("could not read FormData body as blob");
          return Promise.resolve(new Blob([this._bodyText]));
        }),
        (this.arrayBuffer = function () {
          return this._bodyArrayBuffer
            ? u(this)
              ? Promise.reject(new TypeError("Already read"))
              : Promise.resolve(this._bodyArrayBuffer)
            : this.blob().then(c);
        })),
      (this.text = function () {
        var U = u(this);
        if (U) return Promise.reject(new TypeError("Already read"));
        if (this._bodyBlob) return d(this._bodyBlob);
        if (this._bodyArrayBuffer)
          return Promise.resolve(p(this._bodyArrayBuffer));
        if (this._bodyFormData)
          throw new Error("could not read FormData body as text");
        return Promise.resolve(this._bodyText);
      }),
      t.formData &&
        (this.formData = function () {
          return this.text().then(C);
        }),
      (this.json = function () {
        return this.text().then(JSON.parse);
      }),
      this
    );
  }
  var I = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];
  function O(U) {
    var R = U.toUpperCase();
    return I.indexOf(R) > -1 ? R : U;
  }
  function g(U, R) {
    R = R || {};
    var ge = R.body;
    if (U instanceof g) {
      if (U.bodyUsed) throw new TypeError("Already read");
      (this.url = U.url),
        (this.credentials = U.credentials),
        R.headers || (this.headers = new o(U.headers)),
        (this.method = U.method),
        (this.mode = U.mode),
        (this.signal = U.signal),
        !ge && U._bodyInit != null && ((ge = U._bodyInit), (U.bodyUsed = !0));
    } else this.url = String(U);
    if (
      ((this.credentials = R.credentials || this.credentials || "same-origin"),
      (R.headers || !this.headers) && (this.headers = new o(R.headers)),
      (this.method = O(R.method || this.method || "GET")),
      (this.mode = R.mode || this.mode || null),
      (this.signal = R.signal || this.signal),
      (this.referrer = null),
      (this.method === "GET" || this.method === "HEAD") && ge)
    )
      throw new TypeError("Body not allowed for GET or HEAD requests");
    this._initBody(ge);
  }
  g.prototype.clone = function () {
    return new g(this, { body: this._bodyInit });
  };
  function C(U) {
    var R = new FormData();
    return (
      U.trim()
        .split("&")
        .forEach(function (ge) {
          if (ge) {
            var ve = ge.split("="),
              we = ve.shift().replace(/\+/g, " "),
              Te = ve.join("=").replace(/\+/g, " ");
            R.append(decodeURIComponent(we), decodeURIComponent(Te));
          }
        }),
      R
    );
  }
  function H(U) {
    var R = new o(),
      ge = U.replace(/\r?\n[\t ]+/g, " ");
    return (
      ge.split(/\r?\n/).forEach(function (ve) {
        var we = ve.split(":"),
          Te = we.shift().trim();
        if (Te) {
          var Ce = we.join(":").trim();
          R.append(Te, Ce);
        }
      }),
      R
    );
  }
  y.call(g.prototype);
  function B(U, R) {
    R || (R = {}),
      (this.type = "default"),
      (this.status = R.status === void 0 ? 200 : R.status),
      (this.ok = this.status >= 200 && this.status < 300),
      (this.statusText = "statusText" in R ? R.statusText : "OK"),
      (this.headers = new o(R.headers)),
      (this.url = R.url || ""),
      this._initBody(U);
  }
  y.call(B.prototype),
    (B.prototype.clone = function () {
      return new B(this._bodyInit, {
        status: this.status,
        statusText: this.statusText,
        headers: new o(this.headers),
        url: this.url,
      });
    }),
    (B.error = function () {
      var U = new B(null, { status: 0, statusText: "" });
      return (U.type = "error"), U;
    });
  var he = [301, 302, 303, 307, 308];
  (B.redirect = function (U, R) {
    if (he.indexOf(R) === -1) throw new RangeError("Invalid status code");
    return new B(null, { status: R, headers: { location: U } });
  }),
    (self.DOMException = self.DOMException);
  try {
    new self.DOMException();
  } catch {
    (self.DOMException = function (R, ge) {
      (this.message = R), (this.name = ge);
      var ve = Error(R);
      this.stack = ve.stack;
    }),
      (self.DOMException.prototype = Object.create(Error.prototype)),
      (self.DOMException.prototype.constructor = self.DOMException);
  }
  function de(U, R) {
    return new Promise(function (ge, ve) {
      var we = new g(U, R);
      if (we.signal && we.signal.aborted)
        return ve(new self.DOMException("Aborted", "AbortError"));
      var Te = new XMLHttpRequest();
      function Ce() {
        Te.abort();
      }
      (Te.onload = function () {
        var Ee = {
          status: Te.status,
          statusText: Te.statusText,
          headers: H(Te.getAllResponseHeaders() || ""),
        };
        Ee.url =
          "responseURL" in Te
            ? Te.responseURL
            : Ee.headers.get("X-Request-URL");
        var x = "response" in Te ? Te.response : Te.responseText;
        ge(new B(x, Ee));
      }),
        (Te.onerror = function () {
          ve(new TypeError("Network request failed"));
        }),
        (Te.ontimeout = function () {
          ve(new TypeError("Network request failed"));
        }),
        (Te.onabort = function () {
          ve(new self.DOMException("Aborted", "AbortError"));
        }),
        Te.open(we.method, we.url, !0),
        we.credentials === "include"
          ? (Te.withCredentials = !0)
          : we.credentials === "omit" && (Te.withCredentials = !1),
        "responseType" in Te && t.blob && (Te.responseType = "blob"),
        we.headers.forEach(function (Ee, x) {
          Te.setRequestHeader(x, Ee);
        }),
        we.signal &&
          (we.signal.addEventListener("abort", Ce),
          (Te.onreadystatechange = function () {
            Te.readyState === 4 && we.signal.removeEventListener("abort", Ce);
          })),
        Te.send(typeof we._bodyInit > "u" ? null : we._bodyInit);
    });
  }
  (de.polyfill = !0),
    self.fetch ||
      ((self.fetch = de),
      (self.Headers = o),
      (self.Request = g),
      (self.Response = B));
})();
var X2 = ((t) => (
  (t.Prod = "prod"), (t.Staging = "staging"), (t.Dev = "dev"), t
))(X2 || {});
let h = null,
  v = !1,
  ka = null,
  T = null,
  $ = null,
  _ = !0;
const sJ = "fZE5MnweJsHojzBRwRlq";
let w = null;
typeof Object.assign != "function" &&
  Object.defineProperty(Object, "assign", {
    value: function (e, n) {
      if (e == null)
        throw new TypeError("Cannot convert undefined or null to object");
      let r = Object(e);
      for (let a = 1; a < arguments.length; a++) {
        let s = arguments[a];
        if (s != null)
          for (let i in s)
            Object.prototype.hasOwnProperty.call(s, i) && (r[i] = s[i]);
      }
      return r;
    },
    writable: !0,
    configurable: !0,
  });
const cUe = {
  BottomRight: ({ bottom: t, right: e }) => ({
    position: "BottomRight",
    bottom: t,
    right: e,
  }),
  BottomLeft: ({ bottom: t, left: e }) => ({
    position: "BottomLeft",
    bottom: t,
    left: e,
  }),
  TopRight: ({ top: t, right: e }) => ({
    position: "TopRight",
    top: t,
    right: e,
  }),
  TopLeft: ({ top: t, left: e }) => ({ position: "TopLeft", top: t, left: e }),
};
let j = {
  logEventSent: function (e, n, r) {
    const a =
      "Event Sent:" +
      e +
      "Event Props:" +
      JSON.stringify(n) +
      "User Props:" +
      JSON.stringify(r);
    (ka && ka.logDebug && ka.logDebug(h, a)) ||
      (typeof console < "u" &&
        console.log(
          "[avo] Event Sent:",
          e,
          "Event Props:",
          n,
          "User Props:",
          r
        ));
  },
  log: function (e) {
    (ka && ka.logDebug && ka.logDebug(h, e)) ||
      (typeof console < "u" && console.log("[avo] " + e));
  },
  warn: function (e) {
    (ka && ka.logWarn && ka.logWarn(h, e)) ||
      (typeof console < "u" && console.warn("[avo] " + e));
  },
  error: function (t, e) {
    (ka && ka.logError && ka.logError(h, t + e)) ||
      (typeof console < "u" && console.error("[avo] " + t, e));
  },
};
function P(t) {
  let e = {};
  return (
    t.forEach((n) => {
      e[n.name] = n.value;
    }),
    e
  );
}
let sH, ns;
sH = function (e, n) {
  let r = [];
  for (let a = 0; a < e.length; a++) n.indexOf(e[a]) === -1 && r.push(e[a]);
  return r;
};
ns = {
  assertObject: function (e, n, r) {
    if (typeof r != "object") {
      let a =
        n +
        " should be of type object but you provided type " +
        typeof r +
        " with value " +
        JSON.stringify(r);
      return [
        {
          tag: "expectedObjectType",
          propertyId: e,
          message: a,
          actualType: typeof r,
        },
      ];
    } else return [];
  },
  assertString: function (e, n, r) {
    if (typeof r != "string") {
      let a =
        n +
        " should be of type string but you provided type " +
        typeof r +
        " with value " +
        JSON.stringify(r);
      return [
        {
          tag: "expectedStringType",
          propertyId: e,
          message: a,
          actualType: typeof r,
        },
      ];
    } else return [];
  },
  assertInt: function (e, n, r) {
    if (typeof r == "number" && r !== Math.round(r)) {
      let a =
        n +
        " should be of type int but you provided type float with value " +
        JSON.stringify(r);
      return [
        {
          tag: "expectedIntType",
          propertyId: e,
          message: a,
          actualType: "float",
        },
      ];
    } else if (typeof r != "number") {
      let a =
        n +
        " should be of type int but you provided type " +
        typeof r +
        " with value " +
        JSON.stringify(r);
      return [
        {
          tag: "expectedIntType",
          propertyId: e,
          message: a,
          actualType: typeof r,
        },
      ];
    } else return [];
  },
  assertLong: function (e, n, r) {
    if (typeof r == "number" && r !== Math.round(r)) {
      let a =
        n +
        " should be of type long but you provided type float with value " +
        JSON.stringify(r);
      return [
        {
          tag: "expectedLongType",
          propertyId: e,
          message: a,
          actualType: "float",
        },
      ];
    } else if (typeof r != "number") {
      let a =
        n +
        " should be of type long but you provided type " +
        typeof r +
        " with value " +
        JSON.stringify(r);
      return [
        {
          tag: "expectedLongType",
          propertyId: e,
          message: a,
          actualType: typeof r,
        },
      ];
    } else return [];
  },
  assertFloat: function (e, n, r) {
    if (typeof r != "number") {
      let a =
        n +
        " should be of type float but you provided type " +
        typeof r +
        " with value " +
        JSON.stringify(r);
      return [
        {
          tag: "expectedFloatType",
          propertyId: e,
          message: a,
          actualType: typeof r,
        },
      ];
    } else return [];
  },
  assertBool: function (e, n, r) {
    if (typeof r != "boolean") {
      let a =
        n +
        " should be of type boolean but you provided type " +
        typeof r +
        " with value " +
        JSON.stringify(r);
      return [
        {
          tag: "expectedBoolType",
          propertyId: e,
          message: a,
          actualType: typeof r,
        },
      ];
    } else return [];
  },
  assertMax: function (e, n, r, a) {
    if (a > r) {
      let s =
        n +
        " has a maximum value of " +
        r +
        " but you provided the value " +
        JSON.stringify(a);
      return [{ tag: "expectedMax", propertyId: e, message: s }];
    } else return [];
  },
  assertMin: function (e, n, r, a) {
    if (a < r) {
      let s =
        n +
        " has a minimum value of " +
        r +
        " but you provided the value " +
        JSON.stringify(a);
      return [{ tag: "expectedMin", propertyId: e, message: s }];
    } else return [];
  },
  assertList: function (e, n, r) {
    if (Array.isArray(r)) return [];
    {
      let a = n + " should be of type list but you provided type " + typeof r;
      return [{ tag: "expectedList", propertyId: e, message: a }];
    }
  },
  assertNoAdditionalProperties: function (e, n, r) {
    let a = sH(n, r);
    if (a.length) {
      let s =
        "Additional properties when sending event " +
        e +
        ": " +
        JSON.stringify(a);
      return [
        {
          tag: "expectedNoAdditionalProperties",
          additionalProperties: a,
          message: s,
        },
      ];
    } else return [];
  },
  assertNoAdditionalUserProperties: function (e, n, r) {
    let a = sH(n, r);
    if (a.length) {
      let s =
        "Additional user properties when sending event " +
        e +
        ": " +
        JSON.stringify(a);
      return [
        {
          tag: "expectedNoAdditionalUserProperties",
          additionalProperties: a,
          message: s,
        },
      ];
    } else return [];
  },
};
let W,
  rJ,
  cf = 1;
W = function (e, n, r, a, s) {
  typeof window > "u" ||
    (cf > 0 &&
      Math.random() < cf &&
      fetch("https://api.avo.app/i", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          ac: "RXgPLsluvsKXipaFdPQb",
          br: "master",
          en: e,
          ev: n,
          ha: r,
          sc: "pvOMxiTKpoHAWDEF4z0y",
          se: new Date().toISOString(),
          so: "OkL9kX1Hj",
          va: a.length === 0,
          me: a,
          or: s,
        }),
      })
        .then(function (i) {
          return i.json();
        })
        .then(function (i) {
          cf = i.sa;
        })
        .catch(function () {}));
};
rJ = function (e, n, r, a) {
  typeof window > "u" ||
    (cf > 0 &&
      Math.random() < cf &&
      fetch("https://api.avo.app/i", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          ac: "RXgPLsluvsKXipaFdPQb",
          br: "master",
          en: e,
          ty: n,
          sc: "pvOMxiTKpoHAWDEF4z0y",
          se: new Date().toISOString(),
          so: "OkL9kX1Hj",
          va: r.length === 0,
          me: r,
          or: a,
        }),
      })
        .then(function (s) {
          return s.json();
        })
        .then(function (s) {
          cf = s.sa;
        })
        .catch(function () {}));
};
let q,
  rH = [],
  aJ = !1;
typeof window < "u" &&
  window.addEventListener("message", function (t) {
    if (t.origin !== "https://www.avo.app") return;
    let e = document.getElementById("avo-debugger");
    if (e && t && t.data && t.data.type_ === "avo-debugger-update-style")
      e.style = t.data.style;
    else if (e && t && t.data && t.data.type_ === "avo-debugger-ready") {
      let n = {
        type_: "avo-debugger-boot-events",
        schemaId: "pvOMxiTKpoHAWDEF4z0y",
        href: window.location.href,
        events: rH,
      };
      (rH = []),
        (aJ = !0),
        e.contentWindow.postMessage(n, "https://www.avo.app/_debugger");
    }
  });
q = function (e, n, r, a, s, i) {
  if (typeof window > "u") return;
  let o = {
    eventId: e,
    eventName: n,
    messages: r,
    timestamp: Date.now(),
    eventProperties: a,
    userProperties: s,
    groupProperties: i,
  };
  if (aJ) {
    let u = { type_: "avo-debugger-events", events: [o] };
    document
      .getElementById("avo-debugger")
      .contentWindow.postMessage(u, "https://www.avo.app/_debugger");
  } else rH.push(o);
};
function dUe(t) {
  typeof window > "u" ||
    window.addEventListener("message", function (e) {
      if (
        e.origin === "https://www.avo.app" &&
        e.data.type_ === "avo-debugger-ready" &&
        t !== null
      ) {
        var n = { type_: "avo-debugger-position", position: t };
        document
          .getElementById("avo-debugger")
          .contentWindow.postMessage(n, "https://www.avo.app/_debugger");
      }
    });
}
let V = {
  make: function (e, n) {
    if (typeof window > "u") {
      j.warn("window.mixpanel is not available in Node.js");
      return;
    }
    typeof window.mixpanel > "u" &&
      (function (r, a) {
        if (!a.__SV) {
          var s, i, o, u;
          (window.mixpanel = a),
            (a._i = []),
            (a.init = function (l, c, d) {
              function p(I, O) {
                var g = O.split(".");
                g.length == 2 && ((I = I[g[0]]), (O = g[1])),
                  (I[O] = function () {
                    I.push(
                      [O].concat(Array.prototype.slice.call(arguments, 0))
                    );
                  });
              }
              var m = a;
              for (
                typeof d < "u" ? (m = a[d] = []) : (d = "mixpanel"),
                  m.people = m.people || [],
                  m.toString = function (I) {
                    var O = "mixpanel";
                    return (
                      d !== "mixpanel" && (O += "." + d),
                      I || (O += " (stub)"),
                      O
                    );
                  },
                  m.people.toString = function () {
                    return m.toString(1) + ".people (stub)";
                  },
                  o =
                    "disable time_event track track_pageview track_links track_forms track_with_groups add_group set_group remove_group register register_once alias unregister identify name_tag set_config reset opt_in_tracking opt_out_tracking has_opted_in_tracking has_opted_out_tracking clear_opt_in_out_tracking start_batch_senders people.set people.set_once people.unset people.increment people.append people.union people.track_charge people.clear_charges people.delete_user people.remove".split(
                      " "
                    ),
                  u = 0;
                u < o.length;
                u++
              )
                p(m, o[u]);
              var y = "set set_once union unset remove delete".split(" ");
              (m.get_group = function () {
                function I(H) {
                  O[H] = function () {
                    var B = arguments,
                      he = [H].concat(Array.prototype.slice.call(B, 0));
                    m.push([g, he]);
                  };
                }
                for (
                  var O = {},
                    g = ["get_group"].concat(
                      Array.prototype.slice.call(arguments, 0)
                    ),
                    C = 0;
                  C < y.length;
                  C++
                )
                  I(y[C]);
                return O;
              }),
                a._i.push([l, c, d]);
            }),
            (a.__SV = 1.2),
            (s = r.createElement("script")),
            (s.type = "text/javascript"),
            (s.async = !0),
            (s.src =
              typeof MIXPANEL_CUSTOM_LIB_URL < "u"
                ? MIXPANEL_CUSTOM_LIB_URL
                : r.location.protocol === "file:" &&
                  "//cdn.mxpnl.com/libs/mixpanel-2-latest.min.js".match(/^\/\//)
                ? "https://cdn.mxpnl.com/libs/mixpanel-2-latest.min.js"
                : "//cdn.mxpnl.com/libs/mixpanel-2-latest.min.js"),
            (i = r.getElementsByTagName("script")[0]),
            i.parentNode.insertBefore(s, i);
        }
      })(document, window.mixpanel || []),
      (this.getInstance = () => window.mixpanel),
      this.getInstance().init(e, n);
  },
  addCurrentUserToGroup: function (e, n) {
    typeof window > "u" || this.getInstance().set_group(e, n);
  },
  logEvent: function (e, n) {
    typeof window > "u" || this.getInstance().track(e, n);
  },
  logEventWithGroups: function (e, n, r) {
    typeof window > "u" || this.getInstance().track_with_groups(e, n, r);
  },
  setUserProperties: function (e) {
    typeof window > "u" || this.getInstance().people.set(e);
  },
  setGroupProperties: function (e, n, r) {
    typeof window > "u" || this.getInstance().get_group(e, n).set(r);
  },
  identify: function (e) {
    typeof window > "u" || this.getInstance().identify(e);
  },
  revenue: function (e, n) {
    typeof window > "u" || this.getInstance().people.track_charge(e, n);
  },
  unidentify: function () {
    typeof window > "u" || this.getInstance().reset();
  },
};
const iJ = {
    IDENTITY: "Identity",
    SSH_KEY: "SSH Key",
    BIOMETRIC_KEY: "Biometric Key",
    SSH_CERTIFICATE: "SSH Certificate",
    FIDO2: "Fido2",
  },
  oJ = {
    EXP_1_MENUHEADER: "Exp_1_MenuHeader",
    EXP_1_MENUFOOTER: "Exp_1_MenuFooter",
    EXP_1_MENUSWIPE: "Exp_1_MenuSwipe",
    EXP_1_OFF: "Exp_1_Off",
    EXP_2_FEATURELIST: "Exp_2_FeatureList",
    EXP_2_FEATURELIST_FINGERS: "Exp_2_FeatureList_Fingers",
    EXP_2_CAROUSEL: "Exp_2_Carousel",
    EXP_2_STORIES: "Exp_2_Stories",
    EXP_2_DISABLED: "Exp_2_Disabled",
    EXP_3_BASELINE: "Exp_3_Baseline",
    EXP_3_TEAMTRIAL: "Exp_3_TeamTrial",
    EXP_3_DISABLED: "Exp_3_Disabled",
    EXP_4_BASELINE: "Exp_4_Baseline",
    EXP_4_DAILYTIPCELL: "Exp_4_DailyTipCell",
    EXP_4_DAILYTIPPOPUP: "Exp_4_DailyTipPopup",
    EXP_4_DISABLED: "Exp_4_Disabled",
  },
  uJ = {
    TRIAL: "Trial",
    PREMIUM: "Premium",
    TEAM: "Team",
    BACKUP_SYNC: "Backup & Sync",
    SHARE_HOSTS: "Share Hosts",
    MULTI_KEY: "MultiKey",
    INVITE_PEOPLE: "Invite People",
    SPLIT_VIEW: "Split View",
    SPLIT_VIEW_FROM_TAB_CONTEXT_MENU: "Split View From Tab Context Menu",
    WHATS_NEW: "What's New",
  },
  lJ = {
    NEW_ENCRYPTION: "NewEncryption",
    CUSTOMER_EXPERIENCE_SURVEY: "Customer Experience Survey",
    APP_UPDATE: "App Update",
    CONFIRM_ACCESS: "Confirm Access",
  },
  cJ = {
    SA: "sa",
    SSH: "ssh",
    TELNET: "telnet",
    SERVERAUDITOR: "serverauditor",
    TERMIUS: "termius",
    MOSH: "mosh",
    FILE: "file",
  },
  dJ = {
    EMAIL: "Email",
    GOOGLE_AUTH: "Google Auth",
    APPLE_AUTH: "Apple Auth",
    WORKOS_SSO: "WorkOS/SSO",
  },
  pJ = { REMOVE: "Remove", MOVE: "Move", CANCEL: "Cancel" },
  hJ = {
    DIRECT_COMPARISON_EXPERIMENT_NEW_DESIGN:
      "DirectComparisonExperimentNewDesign",
    DIRECT_COMPARISON_EXPERIMENT_OLD_DESIGN:
      "DirectComparisonExperimentOldDesign",
  },
  fJ = {
    IMPORT_CONFIG_DIALOG: "Import Config Dialog",
    IMPORT_KEY_BUTTON: "Import Key Button",
    HOSTS_EMPTY_SCREEN: "Hosts Empty Screen",
    IMPORT_KEY_IN_CONNECTION_FLOW: "Import Key in Connection Flow",
    IMPORT_DURING_ONBOARDING: "Import During Onboarding",
    IMPORT_KNOWN_HOSTS: "Import Known Hosts",
    IMPORT_KNOWN_HOSTS_FROM_TOOLBAR: "Import Known Hosts From Toolbar",
  },
  mJ = { PRIVATE: "private", PUBLIC: "public" },
  SJ = {
    EXP_1_BASELINE: "Exp_1_Baseline",
    EXP_1_BUTTONS: "Exp_1_Buttons",
    EXP_1_TOOLTIP: "Exp_1_Tooltip",
    EXP_1_DISABLED: "Exp_1_Disabled",
    EXP_2_BASELINE: "Exp_2_Baseline",
    EXP_2_NEWCONNECTIONFLOW: "Exp_2_NewConnectionFlow",
    EXP_2_DISABLED: "Exp_2_Disabled",
    EXP_3_BASELINE: "Exp_3_Baseline",
    EXP_3_HOSTONBOARDING: "Exp_3_HostOnboarding",
    EXP_3_DISABLED: "Exp_3_Disabled",
  },
  yJ = {
    TRIAL: "TRIAL",
    GITHUB_STUDENT: "GITHUB_STUDENT",
    GITHUB_TEACHER: "GITHUB_TEACHER",
    PREMIUM: "PREMIUM",
    TEAM_MEMBER: "TEAM_MEMBER",
    TEAM_OWNER: "TEAM_OWNER",
    TRIAL_TEAM_OWNER: "TRIAL_TEAM_OWNER",
    TRIAL_TEAM_OWNER_WITHOUT_MEMBERS_AND_SHARED_GROUPS:
      "TRIAL_TEAM_OWNER_WITHOUT_MEMBERS_AND_SHARED_GROUPS",
    SUBSCRIBED_TRIAL_TEAM_OWNER: "SUBSCRIBED_TRIAL_TEAM_OWNER",
    SUBSCRIBED_TRIAL_TEAM_OWNER_WITHOUT_MEMBERS_AND_SHARED_GROUPS:
      "SUBSCRIBED_TRIAL_TEAM_OWNER_WITHOUT_MEMBERS_AND_SHARED_GROUPS",
    TEAM_TRIAL_OWNER_AWAITING_DOWNGRADE: "TEAM_TRIAL_OWNER_AWAITING_DOWNGRADE",
  },
  gJ = {
    SSH: "SSH",
    TELNET: "Telnet",
    MOSH: "Mosh",
    SFTP: "SFTP",
    LOCAL: "Local",
    PORT_FORWARDING: "PortForwarding",
    SERIAL: "Serial",
    LIVE_TERMINAL: "LiveTerminal",
  },
  vJ = { WIZARD: "Wizard", FORM: "Form" },
  _J = {
    HISTORY: "History",
    SFTP_SCREEN: "SFTP Screen",
    HOSTS_SCREEN: "Hosts Screen",
    PORT_FORWARDING_SCREEN: "Port Forwarding Screen",
    QUICK_CONNECT: "Quick Connect",
    DUPLICATED_TAB: "Duplicated Tab",
    DUPLICATED_IN_NEW_WINDOW: "Duplicated In New Window",
    CONNECTION_FLOW: "Connection Flow",
    LOCAL_HOST: "Local Host",
    RECONNECT_CONTEXT: "Reconnect Context",
    RECONNECT_HINT: "Reconnect Hint",
    LIVE_TERMINAL_LINK: "Live Terminal Link",
    SIDE_MENU: "Side Menu",
    SYSTEM_TOP_BAR: "System Top Bar",
    SHORTCUT: "Shortcut",
    SERIAL: "Serial",
    HOST_DETAILS_LINK: "Host Details Link",
    EDIT_HOST_SCREEN: "Edit Host Screen",
    QUICK_CONNECT_IN_CONTEXT_MENU: "Quick Connect In Context Menu",
    CONNECT_IN_CONTEXT_MENU: "Connect In Context Menu",
    QUICK_CONNECT_IN_A_NEW_WINDOW_CONTEXT_MENU:
      "Quick Connect In a New Window Context Menu",
    CONNECT_IN_A_NEW_WINDOW_CONTEXT_MENU:
      "Connect In a New Window Context Menu",
    DOUBLE_CLICK: "Double Click",
    TOOLBAR_ON_HOSTS_SCREEN: "Toolbar On Hosts Screen",
    COLLABORATION_CONTEXT_MENU: "Collaboration Context Menu",
    RECONNECT_HOTKEY: "Reconnect Hotkey",
    RECONNECT_BUTTON: "Reconnect Button",
    RUN_SNIPPET: "Run Snippet",
    COMMAND_PALETTE: "Command Palette",
  },
  bJ = {
    SSO: "SSO",
    TERMINAL_SHARING: "Terminal Sharing",
    CONNECT_VIA_LINK: "Connect via link",
  },
  EJ = {
    FREE_TO_TRIAL: "FreeToTrial",
    TRIAL_TO_PREMIUM: "TrialToPremium",
    PREMIUM_TO_TEAM: "PremiumToTeam",
  },
  TJ = {
    SNIPPETS_SCREEN: "Snippets Screen",
    SELECT_SNIPPET_EMPTY_SCREEN: "Select Snippet Empty Screen",
    TOOLBAR_ON_SELECT_SNIPPET_SCREEN: "Toolbar On Select Snippet Screen",
    TERMINAL_SIDE_BAR: "Terminal Side Bar",
    SNIPPETS_EMPTY_SCREEN_NEW_SNIPPET: "Snippets Empty Screen New Snippet",
    SNIPPETS_EMPTY_SCREEN_ASK_AI: "Snippets Empty Screen Ask AI",
    SNIPPET_PACKAGE_EMPTY_SCREEN_NEW_SNIPPET:
      "Snippet Package Empty Screen New Snippet",
  },
  wJ = { YES: "yes", NO: "no" },
  PJ = {
    EXP_1_DISABLED: "Exp_1_Disabled",
    EXP_1_BASELINE: "Exp_1_Baseline",
    EXP_1_NEWWELCOME: "Exp_1_NewWelcome",
    EXP_1_NEWWELCOMEWITHGOOGLE: "Exp_1_NewWelcomeWithGoogle",
    EXP_2_BASELINE: "Exp_2_Baseline",
    EXP_2_DISABLED: "Exp_2_Disabled",
    EXP_2_SFTPBADGE: "Exp_2_SFTPBadge",
    EXP_2_SFTPPLACEHOLDER: "Exp_2_SFTPPlaceholder",
    EXP_3_BASELINE: "Exp_3_Baseline",
    EXP_3_CREATEFREEACCOUNT: "Exp_3_CreateFreeAccount",
    EXP_3_DISABLED: "Exp_3_Disabled",
    EXP_4_BASELINE: "Exp_4_Baseline",
    EXP_4_DISABLED: "Exp_4_Disabled",
    EXP_4_COMPULSORYCAROUSEL: "Exp_4_CompulsoryCarousel",
    EXP_4_CALLTOACTIONANDCOMPULSORYCAROUSEL:
      "Exp_4_CallToActionAndCompulsoryCarousel",
  },
  IJ = { OWNER: "Owner", EDITOR: "Editor", MEMBER: "Member" },
  CJ = {
    NO_SUGGESTIONS: "No suggestions",
    SCROLL: "Scroll",
    CLICK_OUTSIDE: "Click outside",
    ESC: "Esc",
    REQUEST_FAILED: "Request failed",
  },
  AJ = { INSTALL: "Install", INVITE: "Invite" },
  OJ = {
    CHOOSE_PLAN_SCREEN: "Choose Plan Screen",
    EXTENSION_OFFER_SCREEN: "Extension Offer Screen",
    EXPIRED_SUBSCRIPTION_SCREEN: "Expired Subscription Screen",
    DEACTIVATE_TEAM_SCREEN: "Deactivate Team Screen",
    DOWNGRADE_FROM_PRO_SCREEN: "Downgrade From Pro Screen",
  },
  HJ = {
    DECRYPTION: "Decryption",
    ENCRYPTION: "Encryption",
    LOCAL_DECRYPTION: "Local Decryption",
  },
  NJ = {
    PASSWORD: "Password",
    SSH_KEY: "SSH Key",
    IDENTITY: "Identity",
    INHERITED_PASSWORD: "Inherited Password",
    INHERITED_SSH_KEY: "Inherited SSH Key",
    INHERITED_IDENTITY: "Inherited Identity",
    SSH_CERTIFICATE: "SSH Certificate",
    INHERITED_SSH_CERTIFICATE: "Inherited SSH Certificate",
    BIOMETRIC_KEY: "Biometric Key",
    INHERITED_BIOMETRIC_KEY: "Inherited Biometric Key",
    FIDO2: "FIDO2",
  },
  RJ = { WHOS_IN_TERMIUS_SCREEN: "Who's in Termius Screen" },
  kJ = {
    LOG_IN: "Log In",
    SIGN_UP: "Sign Up",
    CREATE_A_TEAM: "Create a Team",
    INVITE_A_MEMBER: "Invite a Member",
  },
  xJ = {
    EDIT_GROUP: "Edit Group",
    EDIT_HOST: "Edit Host",
    ON_STARTUP: "On Startup",
    TIP_OF_THE_DAY: "Tip of the Day",
    SIDE_PROMO: "Side Promo",
    PREFERENCES: "Preferences",
    INVITE_PEOPLE_BUTTON: "Invite People Button",
    CONTEXT_GROUP: "Context Group",
    CONTEXT_HOST: "Context Host",
    EDIT_SNIPPET: "Edit Snippet",
    CONTEXT_SNIPPET: "Context Snippet",
    TRIAL_ONBOARDING: "Trial Onboarding",
    EXPIRED_SUBSCRIPTION_SCREEN: "Expired Subscription Screen",
    CONTEXT_PORT_FORWARDING: "Context Port Forwarding",
    EDIT_PORT_FORWARDING: "Edit Port Forwarding",
    CONTEXT_KEYCHAIN: "Context Keychain",
    EDIT_KEYCHAIN: "Edit Keychain",
    CONTEXT_KNOWN_HOSTS: "Context Known Hosts",
    VAULT_PICKER: "Vault Picker",
    CONTEXT_MULTISELECT_KEYCHAIN: "Context Multiselect Keychain",
    CONTEXT_MULTISELECT_HOSTS: "Context Multiselect Hosts",
    CONTEXT_MULTISELECT_PORT_FORWARDING: "Context Multiselect Port Forwarding",
    CONTEXT_MULTISELECT_SNIPPETS: "Context Multiselect Snippets",
    CONTEXT_MULTISELECT_KNOWN_HOSTS: "Context Multiselect Known Hosts",
    CHOOSE_PLAN_SCREEN: "Choose Plan Screen",
    TRIAL_SUCCESS_SCREEN: "Trial Success Screen",
    HISTORY_SCREEN: "History Screen",
    SFTP_SCREEN: "Sftp Screen",
    EDIT_SNIPPET_PACKAGE: "Edit Snippet Package",
    CONTEXT_SNIPPET_PACKAGE: "Context Snippet Package",
  },
  LJ = {
    VAULTS_FILTER: "Vaults Filter",
    MOVE_IN_CONTEXT_MENU: "Move in Context Menu",
    COPY_IN_CONTEXT_MENU: "Copy in Context Menu",
    EDIT_FORM: "Edit Form",
    GRANT_PERMISSIONS_SCREEN: "Grant Permissions Screen",
    VAULTS_SCREEN: "Vaults Screen",
    REVOKE_ACCESS_BUTTON: "Revoke Access Button",
  },
  MJ = {
    INTEGRATIONS: "Integrations",
    SECURE_SYNC: "Secure Sync",
    CROSS_PLATFORM: "Cross-platform",
    VAULT: "Vault",
    SERIAL_CONNECTIONS: "Serial Connections",
    FIDO2: "FIDO2",
    BIOMETRIC_LOCK: "Biometric Lock",
    AUTOMATION: "Automation",
    TUNNELING: "Tunneling",
    CERTIFICATES: "Certificates",
    AGENT_FORWARDING: "Agent Forwarding",
    LOCAL_TERMINAL: "Local Terminal",
    BROADCAST_INPUT: "Broadcast Input",
    TEXT_TO_COMMAND_WITH_AI: "Text To Command With AI",
    SNIPPETS_WITH_AI: "Snippets With AI",
    TERMINAL_SHARING: "Terminal Sharing",
  },
  DJ = { DIGITAL_OCEAN: "Digital Ocean", AWS: "AWS", AZURE: "Azure" },
  GJ = { YES: "yes", NO: "no" },
  FJ = {
    EXP_1_BASELINE: "Exp_1_Baseline",
    EXP_1_RESTRICTEDREGISTRATION: "Exp_1_RestrictedRegistration",
    EXP_1_UNRESTRICTEDREGISTRATION: "Exp_1_UnrestrictedRegistration",
  },
  UJ = { YES: "yes", NO: "no", INHERITED: "inherited" },
  KJ = {
    CMD_K: "CMD+K",
    CMD_T: "CMD+T",
    CMD_J: "CMD+J",
    ADD_CONNECTION_BUTTON: "Add Connection Button",
    JUMP_TO_CONNECTION_BUTTON: "Jump to Connection Button",
  },
  BJ = { ENABLE: "enable", DISABLE: "disable" },
  VJ = { YES: "yes", NO: "no" },
  jJ = {
    HOSTS: "Hosts",
    TERMINALS: "Terminals",
    PORT_FORWARDING: "Port Forwarding",
    KEYCHAIN: "Keychain",
    HISTORY: "History",
    KNOWN_HOSTS: "Known Hosts",
    SNIPPETS: "Snippets",
    SFTP: "SFTP",
    SETTINGS: "Settings",
    LOG_IN: "Log In",
    ENTER_PASSPHRASE: "Enter Passphrase",
    EDIT_HOST: "Edit Host",
    SNIPPET_MULTI_EXECUTION: "Snippet Multi-Execution",
    CONNECTION_FLOW: "Connection Flow",
    ADD_KEY: "Add Key",
    TERMINAL_SHARING_PERMISSIONS: "Terminal Sharing Permissions",
    TERMINAL: "Terminal",
    EDIT_GROUP: "Edit Group",
  },
  zJ = {
    HOST: "Host",
    ACTIVE_CONNECTION: "Active Connection",
    TERMINAL: "Terminal",
    SERIAL: "Serial",
    QUICK_CONNECT: "Quick Connect",
    VAULT: "Vault",
    SFTP: "SFTP",
  },
  $J = {
    BUTTON: "Button",
    SHORTCUT: "Shortcut",
    COMMAND_PALETTE: "Command Palette",
    SYSTEM_MENU: "System Menu",
  },
  WJ = {
    CONTEXT_MENU: "Context Menu",
    ENTITY_CELL: "Entity Cell",
    CONNECTION_FLOW: "Connection Flow",
    EXTERNAL_LINK: "External Link",
  },
  qJ = {
    DISCONNECT: "Disconnect",
    ADD_SNIPPETS_FROM_HISTORY: "Add Snippets from History",
    THE_NO_ACCESS_INSTRUCTIONS_COPIED: 'The "No Access" Instructions Copied',
    THE_NO_ACCESS_URL_COPIED: 'The "No Access" URL Copied',
    TRY_LIVE_TERMINAL: "Try Live Terminal",
    ASSOCIATE_FILE_TYPE_WITH: "Associate File Type With",
    TERMINAL_SHARING_INPUT_PERMISSIONS_GRANTED:
      "Terminal Sharing Input Permissions Granted",
    TERMINAL_SHARING_INPUT_PERMISSIONS_REQUESTED:
      "Terminal Sharing Input Permissions Requested",
    TERMINAL_SHARING_INPUT_PERMISSIONS_REVOKED:
      "Terminal Sharing Input Permissions Revoked",
    INACTIVE_PRO_FEATURES: "Inactive Pro Features",
    SIDE_PANEL_SHORTCUT: "Side Panel Shortcut",
  },
  YJ = {
    HISTORY: "History",
    HOSTS_SCREEN: "Hosts Screen",
    HOSTS_EMPTY_SCREEN: "Hosts Empty Screen",
    TOOLBAR_ON_SELECT_HOST_SCREEN: "Toolbar On Select Host Screen",
    SELECT_HOST_EMPTY_SCREEN: "Select Host Empty Screen",
    GROUP_EMPTY_SCREEN: "Group Empty Screen",
  },
  XJ = { PERSONAL: "Personal", NOT_PERSONAL: "Not-personal" },
  QJ = {
    GENERATE: "Generate",
    PASTE: "Paste",
    SEPKEY: "SEPKey",
    IMPORT: "Import",
    FIDO2_GENERATE: "FIDO2 Generate",
    FIDO2_IMPORT: "FIDO2 Import",
    WINDOWS_HELLO_KEY: "WindowsHelloKey",
  },
  JJ = { AUTHY: "Authy", TOTP: "TOTP" },
  ZJ = { INFO: "Info", WARN: "Warn" },
  eZ = {
    TEAM_PLAN_PROMOTION_FOR_FREE_USERS: "TeamPlanPromotionForFreeUsers",
    TRY_PREMIUM_EXPERIMENT: "TryPremiumExperiment",
    TEAM_PLAN_PROMOTION_FOR_PREMIUM_USERS: "TeamPlanPromotionForPremiumUsers",
    LAZY_REGISTRATION: "LazyRegistration",
    SOCIAL_VALIDATION_CHOOSE_PLAN_TRIAL_EXPIRED:
      "SocialValidationChoosePlanTrialExpired",
    IMPORT_HOSTS_ON_MOBILE: "ImportHostsOnMobile",
    TEAM_PLAN_PROMOTION_FROM_MENU: "TeamPlanPromotionFromMenu",
    PASSWORD_STRENGTH: "PasswordStrength",
    BACK_UP_AND_SYNC: "BackUpAndSync",
    ABANDONED_CART: "AbandonedCart",
    SOCIAL_AUTH_ANDROID: "SocialAuthAndroid",
    LEARN_MORE_ABOUT_PREMIUM_FROM_WELCOME_SCREEN:
      "LearnMoreAboutPremiumFromWelcomeScreen",
    SFTPPROMOTION_FOR_FREE_USERS: "SFTPPromotionForFreeUsers",
    FIRST_HOST_ACTIVATION: "FirstHostActivation",
    NEW_CHOOSE_PLAN_SCREEN: "NewChoosePlanScreen",
    NEW_CONNECTION_FLOW: "NewConnectionFlow",
    HOST_ONBOARDING_ON_IO_S: "HostOnboardingOnIOS",
    WELCOME_CALL_TO_ACTION_IO_S: "WelcomeCallToActionIOS",
    TEAM_TRIAL_ACTIVATION_VIA_HOST_SHARING: "TeamTrialActivationViaHostSharing",
    TEAM_TRIAL_ACTIVATION_VIA_DAILY_TIP: "TeamTrialActivationViaDailyTip",
    TRY_TRIAL_WITH_COMPULSORY_CAROUSEL: "TryTrialWithCompulsoryCarousel",
    LOGOUT_UX_IMPROVEMENT: "LogoutUXImprovement",
    NPSDIALOG: "NPSDialog",
    USER_SEGMENTATION_ONBOARDING: "UserSegmentationOnboarding",
    TEAM_TRIAL_TIP_PREMIUM: "TeamTrialTipPremium",
    SNIPPETS_HINT_IO_S: "SnippetsHintIOS",
    SHARE_HOSTS_SIDE_PROMOTION: "Share Hosts Side Promotion",
    TEAM_TRIAL_AT_STARTUP: "TeamTrialAtStartup",
    PRESENCE_EFFECT: "PresenceEffect",
    NEW_WELCOME_ANDROID: "NewWelcomeAndroid",
    TEST_MARKETING_EMAILS: "TestMarketingEmails",
    TEST_INDIVIDUAL_TRIAL_MARKETING_EMAILS:
      "TestIndividualTrialMarketingEmails",
    ANIMATED_CREATE_ACCOUNT_FORM_ANDROID: "AnimatedCreateAccountFormAndroid",
    NEW_INTRODUCTORY_OFFER_V1: "NewIntroductoryOfferV1",
    NEW_WELCOME_DESKTOPV1: "NewWelcomeDesktopv1",
    SIGN_UP_EMAIL_VERIFICATION: "SignUpEmailVerification",
  },
  tZ = { CONTEXT_MENU: "Context Menu", DETACH_BUTTON: "Detach Button" },
  nZ = {
    CONTEXT_MENU: "Context Menu",
    KEY_DETAILS: "Key Details",
    EXPORT_DETAILS: "Export Details",
    CELL_DOUBLE_CLICK: "Cell Double Click",
    KEY_DETAILS_CONTEXT_MENU: "Key Details Context Menu",
  },
  sZ = {
    NO_CREDENTIALS: "No credentials",
    MULTI_KEY: "MultiKey",
    CREDENTIALS: "Credentials",
  },
  Q2 = {
    TEAM_MEMBER_DOESNT_HAVE_ENOUGH_PERMISSIONS:
      "Team member doesn't have enough permissions",
    BACKEND_API_ISNT_AVAILABLE_CANT_FETCH_USER_INFO_FOR_SYNC:
      "Backend API isn't available - can't fetch user info for sync",
    FAILED_TO_DECRYPT_TEAM_KEY: "Failed to decrypt team key",
    NETWORK_ERROR: "Network Error",
  },
  rZ = {
    JUMP_HOSTS: "Jump Hosts",
    AGENT_FORWARDING: "Agent Forwarding",
    PROXY: "Proxy",
    SERIAL_CABLE: "Serial Cable",
    SSH_CERTIFICATES: "SSH Certificates",
    FIDO2_KEYS: "FIDO2 Keys",
  },
  aZ = {
    NO_CREDENTIALS: "No credentials",
    SOFT_CREDENTIALS: "Soft credentials",
    HARD_CREDENTIALS: "Hard credentials",
    INVESTIGATION_REQUIRED: "Investigation required",
  },
  iZ = { YES: "yes", NO: "no" },
  oZ = {
    DOUBLE_CLICK: "DoubleClick",
    SNIPPET_HOTKEY: "SnippetHotkey",
    SNIPPET_CELL_CONTEXT_MENU: "SnippetCellContextMenu",
    SNIPPET_EDIT_FORM_CONTEXT_MENU: "SnippetEditFormContextMenu",
    SNIPPET_EDIT_FORM_BUTTON: "SnippetEditFormButton",
  },
  uZ = {
    CLOSED_WITH_ERROR: "Closed with Error",
    ACTIVE: "Active",
    ACTION_REQUIRED: "Action Required",
    CONNECTING: "Connecting",
    CLOSED_SUCCESSFULLY: "Closed Successfully",
    RUNNING: "Running",
  },
  lZ = {
    FREE: "Free",
    TRIAL: "Trial",
    PREMIUM: "Premium",
    TEAM: "Team",
    GITHUB_STUDENT_DEVELOPER_PACK: "GitHub Student Developer Pack",
    TEAM_EXPIRED: "Team Expired",
    GITHUB_TEACHER_TOOLKIT: "GitHub Teacher Toolkit",
    PREMIUM_TEAM_TRIAL_EXPIRED: "Premium Team Trial Expired",
    TEAM_TRIAL_EXPIRED: "Team Trial Expired",
    ENTERPRISE: "Enterprise",
    ENTERPRISE_EXPIRED: "Enterprise Expired",
    BUSINESS: "Business",
  },
  cZ = { YES: "yes", NO: "no", INHERITED: "inherited" },
  dZ = { BUTTON: "Button", ESC: "Esc" },
  pZ = {
    ALTERNATIVE_BUFFER: "Alternative Buffer",
    DATA_TIMEOUT: "Data Timeout",
    CONNECTION_COMPLETED: "Connection Completed",
    CONNECTION_FAILURE: "Connection Failure",
    RESPONSE_TIMEOUT: "Response Timeout",
    NON_SHELL_PROMPT: "Non-Shell Prompt",
    UNSUPPORTED_SHELL: "Unsupported Shell",
  },
  hZ = { YES: "yes", NO: "no", INHERITED: "inherited" },
  fZ = {
    GOOGLE_PLAY: "GooglePlay",
    AMAZON_APP_STORE: "AmazonAppStore",
    MAC_APP_STORE: "MacAppStore",
    APP_STORE: "AppStore",
    TERMIUS_WEBSITE: "TermiusWebsite",
    MICROSOFT_APP_STORE: "MicrosoftAppStore",
    SNAPCRAFT: "Snapcraft",
    TERMIUS_COM: "TermiusCom",
    DEBIAN_PACKAGE: "DebianPackage",
  },
  mZ = {
    AUTO_RECONNECT: "Auto Reconnect",
    RECONNECT_BUTTON: "Reconnect Button",
    SHORTCUT: "Shortcut",
  },
  SZ = {
    CROSS_PLATFORM: "Cross Platform",
    MOBILE: "Mobile",
    CROSS_DESKTOP: "Cross Desktop",
  },
  yZ = {
    HOST: "Host",
    GROUP: "Group",
    CONNECTION: "Connection",
    SNIPPET: "Snippet",
    KNOWN_HOST: "KnownHost",
    PORT_FORWARDING_RULE: "PortForwardingRule",
    IDENTITY: "Identity",
    PRIVATE_KEY: "PrivateKey",
    PROXY: "Proxy",
    SSHCONFIG: "SSHConfig",
    TELNET_CONFIG: "TelnetConfig",
    TAG: "Tag",
    PORT_KNOCKING_RULE: "PortKnockingRule",
    MULTI_KEY: "MultiKey",
    SEPKEY: "SEPKey",
    SNIPPET_PACKAGE: "SnippetPackage",
    HOST_CHAIN: "HostChain",
    CERTIFICATE: "Certificate",
    WINDOWS_HELLO_KEY: "WindowsHelloKey",
  },
  gZ = { YES: "yes", NO: "no" },
  vZ = { YES: "yes", NO: "no" },
  _Z = { GRID: "Grid", LIST: "List" },
  bZ = {
    COOKIES: "Cookies",
    BOX: "Box",
    DISPLAY: "Display",
    SHARED_GROUP: "Shared Group",
  },
  EZ = { PATH: "Path", ALL: "All", PASSWORDS: "Passwords" },
  TZ = { YES: "yes", NO: "no" },
  wZ = {
    WELCOME_SCREEN: "WelcomeScreen",
    NAV_PANEL: "NavPanel",
    SYNC: "Sync",
    AGENT_FORWARDING: "AgentForwarding",
    HOST_CHAINING: "HostChaining",
    PROXY: "Proxy",
    ENV_VARIABLE: "EnvVariable",
    SETTINGS: "Settings",
    WIDGET: "Widget",
    TERMIUS_COM: "TermiusCom",
    STUDENT_SCREEN: "StudentScreen",
    TRY_PREMIUM: "TryPremium",
    ACCESS_REVOKE: "AccessRevoke",
    LOCAL_TERMINAL: "LocalTerminal",
    LIVE_TERMINAL: "LiveTerminal",
    STARTUP_SNIPPET: "StartupSnippet",
    SERIAL: "Serial",
    AGENT_FORWARDING_CONNECTION_FLOW: "Agent Forwarding Connection Flow",
    HOST_CHAINING_CONNECTION_FLOW: "Host Chaining Connection Flow",
    STARTUP_SNIPPET_CONNECTION_FLOW: "Startup Snippet Connection Flow",
    ENVIRONMENT_VARIABLES_CONNECTION_FLOW:
      "Environment Variables Connection Flow",
    SNIPPET_RUN_IN_ALL_TABS: "Snippet Run In All Tabs",
    BROADCAST_COMMAND: "Broadcast Command",
    CERTIFICATES: "Certificates",
    INTEGRATIONS_EMPTY_HOST: "Integrations Empty Host",
    INTEGRATIONS_ADD_ON_HOSTS: "Integrations Add on Hosts",
    INTEGRATIONS_EDIT_GROUP: "Integrations Edit Group",
    FIDO2_IMPORT: "FIDO2 Import",
    FIDO2_GENERATE: "FIDO2 Generate",
    FEATURE_LIST: "Feature List",
    CONNECTION_FLOW: "Connection Flow",
    AI_COMMAND_GENERATOR: "AI Command Generator",
    NEW_SNIPPET_SCREEN: "New Snippet Screen",
    SNIPPETS_EMPTY_SCREEN: "Snippets Empty Screen",
    TERMINAL_SHARING: "Terminal Sharing",
  },
  PZ = { HISTORY_DETAILS: "HistoryDetails" },
  IZ = {
    TERMINAL_COMMANDS_HISTORY_SCREEN: "Terminal Commands History Screen",
    CREATE_SNIPPET_SCREEN: "Create Snippet Screen",
    TOP_3_SNIPPETS_HINT_IN_TERMINAL: "Top 3 Snippets Hint in Terminal",
    GLOBAL_COMMANDS_HISTORY_SCREEN: "Global Commands History Screen",
    TOP_5_SNIPPETS_ON_SNIPPETS_EMPTY_SCREEN:
      "Top 5 Snippets On Snippets Empty Screen",
    SNIPPET_EMPTY_SCREEN_ADD_PACKAGE_FOR_SEGMENT:
      "Snippet Empty Screen Add Package For Segment",
    AUTOCOMPLETE_ON_NEW_HOST_SCREEN: "Autocomplete on New Host Screen",
    AUTOCOMPLETE_ON_NEW_GROUP_SCREEN: "Autocomplete on New Group Screen",
  },
  CZ = {
    DEVICES: "Devices",
    TEAM_MEMBER_ONBOARDING: "Team Member Onboarding",
    DOWNLOAD_PAGE: "Download Page",
    HOST_DETAILS_PAGE: "Host Details Page",
    ACCOUNT_MANAGEMENT: "Account Management",
    LIZHI_ONBOARDING: "Lizhi Onboarding",
    CREATE_ACCOUNT_ONBOARDING: "Create Account Onboarding",
  },
  AZ = {
    LIVE_TERMINAL: "Live Terminal",
    LIZHI: "Lizhi",
    HOST_DETAILS_DEEPLINK: "Host Details Deeplink",
  },
  OZ = {
    LOGIN: "login",
    TOKEN_EXPIRED: "token expired",
    DANGEROUS_LOGOUT: "dangerous logout",
  },
  HZ = {
    APP_PREFERENCES: "App Preferences",
    HOST_EDIT: "Host Edit",
    GROUP_EDIT: "Group Edit",
    TERMINAL: "Terminal",
  },
  NZ = {
    GROUP: "Group",
    TAG: "Tag",
    IDENTITY: "Identity",
    SSH_KEY: "SSH Key",
    CERTIFICATE: "Certificate",
    FIDO2: "FIDO2",
    SNIPPET: "Snippet",
    ENCODING: "Encoding",
  },
  RZ = {
    AVAILABLE: "Available",
    PLATFORM_AUTHENTICATOR_IS_NOT_AVAILABLE:
      "Platform authenticator is not available",
    WEBAUTHN_API_VERSION_IS_BELLOW_THAN_SUPPORTED:
      "WebAuthn API version is bellow than supported",
    FAILED_TO_LOAD_WEBAUTHN_API: "Failed to load WebAuthn API",
    FAILED_TO_LOAD_WEBAUTHN_DLL: "Failed to load WebAuthn.dll",
  },
  kZ = { MOVE: "Move", COPY: "Copy", CANCEL: "Cancel" },
  xZ = {
    PREFERENCES: "Preferences",
    TEAM: "Team",
    ACCOUNT: "Account",
    TERMINAL: "Terminal",
    SHORTCUTS: "Shortcuts",
    KNOWN_HOSTS: "Known Hosts",
    KEYCHAIN: "Keychain",
    SFTP: "SFTP",
  },
  LZ = { YES: "yes", NO: "no" },
  MZ = {
    SHARE: "Share",
    INVITE: "Invite",
    WAIT_TO_JOIN: "Wait to Join",
    GRANT_ACCESS: "Grant Access",
    MANAGE_BILLING: "Manage Billing",
  },
  DZ = { INPUT: "Input", VIEW_ONLY: "View-only" },
  GZ = { DEFAULT: "default", CTRL_H: "ctrl+h" },
  FZ = { YES: "yes", NO: "no", INHERITED: "inherited" },
  UZ = {
    WELCOME_SCREEN: "Welcome Screen",
    TRY_PREMIUM_SCREEN: "Try Premium Screen",
    TERMINAL_SHARING_SCREEN: "Terminal Sharing Screen",
    PREFERENCES_ACCOUNT_SCREEN: "Preferences Account Screen",
    FEATURE_DESCRIPTION_SCREEN: "Feature Description Screen",
    TRIAL_OFFER_ONBOARDING: "Trial Offer Onboarding",
    SNIPPETS_WITH_AI: "Snippets With AI",
    TEXT_TO_COMMAND_WITH_AI: "Text To Command With AI",
  },
  KZ = { YES: "yes", NO: "no" },
  BZ = {
    KEYCHAIN_EMPTY_SCREEN: "Keychain Empty Screen",
    KEYCHAIN_TOOLBAR: "Keychain Toolbar",
    AUTOCOMPLETE_ON_NEW_HOST_SCREEN: "Autocomplete on New Host Screen",
    AUTOCOMPLETE_ON_NEW_GROUP_SCREEN: "Autocomplete on New Group Screen",
    AUTOCOMPLETE_ON_NEW_IDENTITY_SCREEN: "Autocomplete on New Identity Screen",
  },
  VZ = { YES: "yes", NO: "no" },
  jZ = {
    DEVICES: "Devices",
    IMPORT: "Import",
    TOOLS: "Tools",
    APPEARANCE: "Appearance",
    SKILLS: "Skills",
  },
  zZ = { YES: "yes", NO: "no" },
  $Z = {
    SIDEBAR: "Sidebar",
    SYSTEM_TOP_BAR: "SystemTopBar",
    NAVIGATION_BAR: "Navigation Bar",
    EDIT_HOST: "Edit Host",
    TERMINAL: "Terminal",
    CONNECTION_FLOW_INIT: "Connection Flow Init",
    CONNECTION_FLOW_FAILED: "Connection Flow Failed",
    VAULT_TAB: "Vault Tab",
  },
  WZ = { DECRYPTION_KEY_NOT_FOUND_ERROR: "DecryptionKeyNotFoundError" },
  qZ = { YES: "yes", NO: "no", INHERITED: "inherited" },
  YZ = {
    TOOLBAR_ON_SELECT_GROUP_SCREEN: "Toolbar On Select Group Screen",
    SELECT_GROUP_EMPTY_SCREEN: "Select Group Empty Screen",
    HOSTS_SCREEN: "Hosts Screen",
    AUTOCOMPLETE_ON_EDIT_HOST_SCREEN: "Autocomplete on Edit Host Screen",
    AUTOCOMPLETE_ON_EDIT_GROUP_SCREEN: "Autocomplete on Edit Group Screen",
    GROUP_ACTIVATION_BANNER: "Group Activation Banner",
    GROUP_ACTIVATION_IN_TEXT_FIELD: "Group Activation in Text Field",
  },
  XZ = { TEAM: "Team", BUSINESS: "Business" },
  QZ = {
    UPGRADE: "Upgrade",
    DOWNGRADE: "Downgrade",
    POSTPONE: "Postpone",
    EXTEND: "Extend",
    CONTACT_US: "Contact Us",
  },
  JZ = {
    GROUP: "Group",
    SNIPPET: "Snippet",
    HOST: "Host",
    SNIPPET_PACKAGE: "Snippet Package",
    HOSTS_MULTI_SELECT: "Hosts Multi-Select",
    SNIPPETS_MULTI_SELECT: "Snippets Multi-Select",
    PORT_FORWARDING: "Port Forwarding",
    PORT_FORWARDING_MULTI_SELECT: "Port Forwarding Multi-Select",
    KNOWN_HOSTS: "Known Hosts",
    KNOWN_HOSTS_MULTI_SELECT: "Known Hosts Multi-Select",
    KEYCHAIN_MULTI_SELECT: "Keychain Multi-Select",
    SSH_KEY: "SSH Key",
    IDENTITY: "Identity",
  },
  ZZ = { YES: "yes", NO: "no" },
  eee = { DISMISSED: "Dismissed", FEEDBACK: "Feedback", REVIEW: "Review" },
  tee = {
    MENU_TOP_CT_A: "MenuTopCTA",
    MENU_BOTTOM_CT_A: "MenuBottomCTA",
    MENU_BANNER_CT_A: "MenuBannerCTA",
    EXP_1_HEADER: "Exp_1_Header",
    EXP_1_MENUBOTTOM: "Exp_1_MenuBottom",
    EXP_1_SIDEPANEL: "Exp_1_SidePanel",
    EXP_1_DISABLED: "Exp_1_Disabled",
  },
  nee = { YES: "yes", NO: "no" },
  see = { YES: "yes", NO: "no" },
  ree = {
    TAB_CONTEXT_MENU: "Tab Context Menu",
    TEAM_COLLABORATION_REQUEST: "Team Collaboration Request",
    USER_INITIATED: "User-Initiated",
    TERMINAL_SIDE_BAR: "Terminal Side Bar",
  },
  aee = { YES: "yes", NO: "no" },
  iee = { YES: "yes", NO: "no" },
  oee = { LIGHT: "Light", DARK: "Dark", BLACK: "Black" },
  uee = { CONTEXT_MENU: "Context Menu", CONNECTION_FLOW: "Connection Flow" },
  lee = { IDENTITY: "Identity", HOST: "Host", GROUP: "Group" },
  cee = {
    EMPTY_PACKAGE_SCREEN: "Empty Package Screen",
    EMPTY_GROUP_SCREEN: "Empty Group Screen",
  },
  dee = { YES: "yes", NO: "no", INHERITED: "inherited" },
  pee = { YES: "yes", NO: "no" },
  hee = {
    BUTTON: "Button",
    SHORTCUT: "Shortcut",
    COMMAND_PALETTE: "Command Palette",
    SYSTEM_MENU: "System Menu",
  },
  fee = {
    APP_STORE: "App Store",
    GOOGLE_PLAY: "Google Play",
    MAC_APP_STORE: "Mac App Store",
    MICROSOFT_STORE: "Microsoft Store",
    SNAPCRAFT: "Snapcraft",
    WEBSITE: "Website",
    BETA: "Beta",
    BACKEND: "Backend",
    DEBIAN_PACKAGE: "Debian Package",
    CANARY: "Canary",
  },
  mee = {
    TEAM_PROMOTION: "Team Promotion",
    _OWNER_HOW_TO_SHARE_GROUPS: "[Owner] How to share groups",
    _OWNER_DEFAULT_SHARED_GROUP: "[Owner] Default shared group",
    _TEAMMATES_NO_ACCESS_TO_SHARED_DATA: "[Teammates] No Access to shared data",
  },
  See = { YES: "yes", NO: "no" },
  yee = { EDIT_FORM: "EditForm", CONTEXT_MENU: "ContextMenu" },
  gee = {
    GROUP: "Group",
    TAG: "Tag",
    USERNAME: "Username",
    PASSWORD: "Password",
    SSH_KEY: "SSH Key",
    CERTIFICATE: "Certificate",
    FIDO2_KEY: "FIDO2 Key",
    SNIPPET: "Snippet",
    ENCODING: "Encoding",
  },
  vee = {
    BASELINE: "Baseline",
    DISABLED: "Disabled",
    EXP_1_LOGOUTWARNING: "Exp_1_LogoutWarning",
    EXP_2_NPSOLDPRESENTATIONCRITERIA: "Exp_2_NPSOldPresentationCriteria",
    EXP_2_NPSVITALITYPRESENTATIONCRITERIA:
      "Exp_2_NPSVitalityPresentationCriteria",
    EXP_3_USERSEGMENTATION: "Exp_3_UserSegmentation",
    EXP_4_TEAMTRIALTIPPREMIUM: "Exp_4_TeamTrialTipPremium",
    SNIPPETS_HINT_ENABLED: "SnippetsHintEnabled",
    BACKUP_AND_SYNC_DESKTOP_HOSTS: "BackupAndSyncDesktopHosts",
    BACKUP_AND_SYNC_ENTITIES: "BackupAndSyncEntities",
    SIDEPROMO_COOKIES: "SidePromo_Cookies",
    SIDEPROMO_BOX: "SidePromo_Box",
    SIDEPROMO_DISPLAY: "SidePromo_Display",
    SIDEPROMO_GROUPICON: "SidePromo_GroupIcon",
    TEAM_TRIAL_AT_STARTUP: "TeamTrialAtStartup",
    WELCOME_WITH_CREATE_ACCOUNT_BUTTON: "WelcomeWithCreateAccountButton",
    WELCOME_WITH_SOCIAL_LOGIN_BUTTONS: "WelcomeWithSocialLoginButtons",
    ENROLLED_IN_MARKETING: "EnrolledInMarketing",
    ANIMATED_CREATE_ACCOUNT_FORM: "AnimatedCreateAccountForm",
    IOS_INTRODUCTORY_OFFER_V1: "iOS_Introductory_Offer_v1",
    WELCOME_WITH_SETUPV1: "WelcomeWithSetupv1",
    CONTROL: "Control",
    EMAIL_VERIFICATION: "EmailVerification",
  },
  _ee = {
    USER_CANCELED: "UserCanceled",
    ERROR: "Error",
    UNSUPPORTED_FORMAT: "UnsupportedFormat",
    CHOOSE_FILE_CANCELED: "ChooseFileCanceled",
    USER_NOT_SATISFIED: "UserNotSatisfied",
  },
  bee = { YES: "yes", NO: "no" },
  Eee = {
    TOOLBAR_ON_SELECT_IDENTITY_SCREEN: "Toolbar On Select Identity Screen",
    SELECT_IDENTITY_EMPTY_SCREEN: "Select Identity Empty Screen",
    KEYCHAIN_SCREEN: "Keychain Screen",
    AUTOCOMPLETE_FOR_SUDO: "Autocomplete for sudo",
    IDENTITY_ACTIVATION_BANNER: "Identity Activation Banner",
    USERNAME_TEXT_FIELD: "Username Text Field",
  },
  Tee = {
    SNIPPET: "Snippet",
    HISTORY: "History",
    BUILD_IN_COMMAND: "Build-in Command",
    PATH: "Path",
    PASSWORDS: "Passwords",
    AI: "AI",
  },
  wee = { YES: "yes", NO: "no" },
  Pee = { YES: "yes", NO: "no" },
  Iee = { NONE: "None", ROOT: "Root", NESTED: "Nested" },
  Cee = {
    CHILD_GROUP: "Child Group",
    ROOT_GROUP: "Root Group",
    HOST_INSIDE_GROUP: "Host inside Group",
    HOST_WITHOUT_GROUP: "Host without Group",
  },
  Aee = {
    SHORTCUT: "Shortcut",
    SYSTEM_MENU: "SystemMenu",
    TERMINAL_SIDE_BAR: "Terminal Side Bar",
  },
  Oee = {
    TRIAL_EXPIRED: "Trial Expired",
    LEARN_MORE: "Learn More",
    TRY_PREMIUM_SCREEN: "Try Premium Screen",
    SYNCHRONIZATION_SCREEN: "Synchronization Screen",
    REMOTE_ACCESS_REVOKE_SCREEN: "Remote Access Revoke Screen",
    PATTERN_LOCK_SCREEN: "Pattern Lock Screen",
    FINGERPRINT_UNLOCK_SCREEN: "Fingerprint Unlock Screen",
    FINGERPRINT_GESTURES_SCREEN: "Fingerprint Gestures Screen",
    SNIPPETS_SCREEN: "Snippets Screen",
    AGENT_FORWARDING_SCREEN: "Agent Forwarding Screen",
    HOST_CHAINING_SCREEN: "Host Chaining Screen",
    PROXIES_SCREEN: "Proxies Screen",
    ENVIRONMENT_VARIABLES_SCREEN: "Environment Variables Screen",
    LOGOUT_SCREEN: "Logout Screen",
    ENABLE_SYNC_WARNING: "Enable Sync Warning",
    AWS_DO_SCREEN: "AWS & DO Screen",
    PROFILE_SCREEN_GO_PREMIUM: "Profile Screen Go Premium",
    SERIAL: "Serial",
    CLOUD_INTEGRATION: "Cloud integration",
    MENU_BUY_NOW: "Menu Buy Now",
    UPGRADE_ACCOUNT: "Upgrade Account",
    UPGRADE_MENU: "Upgrade Menu",
  },
  Hee = { COLLAPSED: "Collapsed", EXPANDED: "Expanded" },
  Nee = {
    HOSTS_EMPTY_SCREEN: "Hosts Empty Screen",
    ADD_ENTITY_DROPDOWN_ON_HOSTS: "Add Entity Dropdown on Hosts",
  },
  Ree = {
    PORT_FORWARDING_TOOLBAR: "PortForwardingToolbar",
    PORT_FORWARDING_CHEVRON: "PortForwardingChevron",
    PORT_FORWARDING_EMPTY_SCREEN: "PortForwardingEmptyScreen",
  },
  kee = { SHORTCUT: "Shortcut", CLICK: "Click", BACKSPACE: "Backspace" },
  xee = { YES: "yes", NO: "no" },
  Lee = { MONTHLY: "monthly", YEARLY: "yearly" },
  Mee = { YES: "Yes", NO: "No" },
  Dee = {
    I_O_S: "iOS",
    ANDROID: "Android",
    DESKTOP: "Desktop",
    ACCOUNT_MANAGEMENT: "AccountManagement",
    BACKEND: "Backend",
    WEBSITE: "Website",
    CLI: "CLI",
  },
  Gee = { NO: "no", YES: "yes" },
  Fee = {
    SSH_KEY: "SSH key",
    PASSWORD: "Password",
    HARDWARE_KEY: "Hardware key",
    USERNAME_ONLY: "Username-only",
    IDENTITY: "Identity",
    FIDO: "FIDO",
  },
  Uee = {
    SYSTEM_ADMINISTRATION: "System Administration",
    NETWORK_ENGINEER: "Network Engineer",
    DEV_OPS: "DevOps",
    TOP_FIVE_COMMANDS_FROM_HISTORY: "Top Five Commands From History",
  },
  Kee = {
    SOURCE_CODE_PRO_REGULAR: "Source Code Pro Regular",
    SOURCE_CODE_PRO_MEDIUM: "Source Code Pro Medium",
    OPERATOR_MONO_BOOK: "Operator Mono Book",
    OPERATOR_MONO_MEDIUM: "Operator Mono Medium",
    FIRA_MONO_MEDIUM: "Fira Mono Medium",
    INCONSOLATA_G: "Inconsolata-g",
    ANONYMOUS_PRO: "Anonymous Pro",
    UBUNTU_MONO: "Ubuntu Mono",
    DROID_SANS_MONO: "Droid Sans Mono",
    PT_MONO: "PT Mono",
    ANDALE_MONO: "Andale Mono",
    DEJAVU_SANS_MONO: "DejaVu Sans Mono",
    CASCADIA_CODE: "Cascadia Code",
    FIRA_CODE: "Fira Code",
    JETBRAINS_MONO: "JetBrains Mono",
    MESLO: "Meslo",
    COURIER_NEW: "Courier New",
  },
  Bee = {
    SHORTCUT: "Shortcut",
    SYSTEM_TOP_BAR: "System Top Bar",
    SIDE_MENU: "Side Menu",
    TERMINALS: "Terminals",
    TOOLBAR: "Toolbar",
    COMMAND_PALETTE: "Command Palette",
  },
  Vee = { CAN_EDIT: "Can edit", CAN_VIEW: "Can view", NO_ACCESS: "No access" },
  jee = { YES: "yes", NO: "no", INHERITED: "inherited" },
  zee = { YES: "yes", NO: "no" },
  $ee = {
    CANCELED: "Canceled",
    NETWORK_ERROR: "Network Error",
    CONNECTION_ERROR: "Connection Error",
    UNKNOWN_ERROR: "Unknown Error",
  },
  Wee = { YES: "yes", NO: "no" },
  qee = { BUTTON: "Button", HOTKEY: "Hotkey" },
  Yee = {
    ACCOUNT_ALREADY_EXISTS: "Account Already Exists",
    NETWORK: "Network",
    UNKNOWN: "Unknown",
  },
  Xee = { PERSONAL: "Personal", NOT_PERSONAL: "Not-personal" },
  Qee = { YES: "yes", NO: "no" },
  Jee = { SETTINGS: "Settings", TERMINAL: "Terminal" },
  Zee = {
    GENERATE: "Generate",
    IMPORT: "Import",
    CONNECTION_FLOW: "Connection Flow",
  },
  ete = {
    PREMIUM: "premium",
    TEAM: "team",
    TEAM_SLOT: "team_slot",
    BUSINESS: "business",
    BUSINESS_SLOT: "business_slot",
  },
  tte = {
    I_O_S: "iOS",
    ANDROID: "Android",
    WINDOWS: "Windows",
    LINUX: "Linux",
    MAC_O_S: "MacOS",
  },
  nte = {
    JUMP_TO: "Jump To",
    NEW_TAB: "New Tab",
    ALL_SUGGESTIONS: "All Suggestions",
  },
  ste = { YES: "yes", NO: "no" },
  rte = {
    PROTOCOL: "Protocol",
    USERNAME: "Username",
    PASSWORD: "Password",
    KEY: "Key",
    PASSPHRASE: "Passphrase",
    NEW_FINGERPRINT: "New Fingerprint",
    FINGERPRINT_CHANGED: "Fingerprint Changed",
    KEYBOARD_INTERACTIVE: "Keyboard Interactive",
    DISCOVERABLE_FIDO2_BASED_KEY: "Discoverable FIDO2-based key",
    QUICK_CONNECT_SETTINGS: "Quick Connect Settings",
    BIOMETRIC_KEY: "Biometric Key",
  },
  ate = { YES: "yes", NO: "no" },
  ite = { YES: "yes", NO: "no", INHERITED: "inherited" },
  ote = {
    GRANT_VAULT_PERMISSIONS: "Grant Vault Permissions",
    GROUP_GRANT_VAULT_PERMISSIONS: "Group Grant Vault Permissions",
  },
  ute = { ENABLED: "enabled", DISABLED: "disabled", INHERITED: "inherited" },
  lte = { COPY: "Copy", MOVE: "Move", CREATE: "Create", IMPORT: "Import" },
  cte = {
    NEW_HOST: "New Host",
    NEW_KEY: "New Key",
    NEW_SNIPPET: "New Snippet",
    NEW_PORT_FORWARDING_RULE: "New Port Forwarding Rule",
  },
  dte = {
    LOCAL_PORT: "Local Port",
    LABEL: "Label",
    REMOTE_PORT: "Remote Port",
    SELECT_HOST: "Select Host",
    DESTINATION_HOST: "Destination Host",
  },
  pte = {
    CHANGELOG: "Changelog",
    LIBRARIES: "Libraries",
    QUICK_GUIDE: "Quick Guide",
    DOCUMENTATION: "Documentation",
    FEATURE_REQUEST: "Feature Request",
    BUG_REPORT: "Bug Report",
  },
  hte = { YES: "yes", NO: "no", INHERITED: "inherited" },
  fte = {
    JUMP_TO: "Jump To",
    NEW_TAB: "New Tab",
    ALL_SUGGESTIONS: "All Suggestions",
  },
  mte = {
    EXP_1_IMPORTHOSTS: "Exp_1_ImportHosts",
    EXP_1_BASELINE: "Exp_1_Baseline",
    EXP_1_OFF: "Exp_1_Off",
  },
  Ste = {
    BUTTON: "Button",
    SHORTCUT: "Shortcut",
    MENU_BAR_ITEM: "Menu Bar Item",
  },
  yte = {
    KEYCHAIN: "Keychain",
    KEY_PICKER: "KeyPicker",
    SELECT_KEY_EMPTY_SCREEN: "Select Key Empty Screen",
    CONNECTION_FLOW: "Connection Flow",
    KEYCHAIN_EMPTY_SCREEN: "Keychain Empty Screen",
    AUTOCOMPLETE_ON_NEW_HOST_SCREEN: "Autocomplete on New Host Screen",
    AUTOCOMPLETE_ON_NEW_GROUP_SCREEN: "Autocomplete on New Group Screen",
    AUTOCOMPLETE_ON_NEW_IDENTITY_SCREEN: "Autocomplete on New Identity Screen",
  },
  gte = { YES: "yes", NO: "no" },
  vte = {
    GROUP_CONTEXT_MENU: "Group Context Menu",
    GROUP_EDIT_SCREEN: "Group Edit Screen",
    NAVIGATION_BAR: "Navigation Bar",
    HOST_EDIT_SCREEN: "Host Edit Screen",
    HOST_CONTEXT_MENU: "Host Context Menu",
    SNIPPET_CONTEXT_MENU: "Snippet Context Menu",
    SNIPPET_EDIT_SCREEN: "Snippet Edit Screen",
    SHARE_ALL_SNIPPETS: "Share All Snippets",
    SNIPPET_PACKAGE_CONTEXT_MENU: "Snippet Package Context Menu",
    SNIPPETS_MULTI_SELECT_CONTEXT_MENU: "Snippets Multi-Select Context Menu",
    HOSTS_MULTI_SELECT_CONTEXT_MENU: "Hosts Multi-Select Context Menu",
    SNIPPET_PACKAGE_EDIT_SCREEN: "Snippet Package Edit Screen",
    PORT_FORWARDING_EDIT_SCREEN: "Port Forwarding Edit Screen",
    PORT_FORWARDING_CONTEXT_MENU: "Port Forwarding Context Menu",
    PORT_FORWARDING_MULTI_SELECT_CONTEXT_MENU:
      "Port Forwarding Multi-Select Context Menu",
    KNOWN_HOSTS_CONTEXT_MENU: "Known Hosts Context Menu",
    KNOWN_HOSTS_MULTI_SELECT_CONTEXT_MENU:
      "Known Hosts Multi-Select Context Menu",
  },
  _te = {
    POP_UP_NOTIFICATION: "Pop-up Notification",
    NOTIFICATIONS_LIST: "Notifications List",
    GRANT_VAULT_PERMISSIONS_SCREEN: "Grant Vault Permissions Screen",
  },
  bte = { DOCK: "Dock", SHORTCUT: "Shortcut", SYSTEM_MENU: "SystemMenu" },
  Ete = {
    SOURCE_CODE_PRO_REGULAR: "Source Code Pro Regular",
    SOURCE_CODE_PRO_MEDIUM: "Source Code Pro Medium",
    OPERATOR_MONO_BOOK: "Operator Mono Book",
    OPERATOR_MONO_MEDIUM: "Operator Mono Medium",
    FIRA_MONO_MEDIUM: "Fira Mono Medium",
    INCONSOLATA_G: "Inconsolata-g",
    ANONYMOUS_PRO: "Anonymous Pro",
    UBUNTU_MONO: "Ubuntu Mono",
    DROID_SANS_MONO: "Droid Sans Mono",
    PT_MONO: "PT Mono",
    ANDALE_MONO: "Andale Mono",
    DEJAVU_SANS_MONO: "DejaVu Sans Mono",
    CASCADIA_CODE: "Cascadia Code",
    FIRA_CODE: "Fira Code",
    JETBRAINS_MONO: "JetBrains Mono",
    MESLO: "Meslo",
    COURIER_NEW: "Courier New",
  },
  Tte = { YES: "yes", NO: "no" },
  wte = {
    GRANT_PERMISSIONS_SCREEN: "Grant Permissions Screen",
    EDIT_VAULT_SCREEN: "Edit Vault Screen",
  },
  Pte = { RIGHT_CLICK: "Right Click", THREE_DOTS_BUTTON: "Three Dots Button" },
  Ite = {
    MENU_WIDGET: "Menu Widget",
    TRIAL_EXPIRED_SCREEN: "Trial Expired Screen",
    TRIAL_EXTENSION_REJECTED_SCREEN: "Trial Extension Rejected Screen",
    CHOOSE_PLAN_SCREEN: "Choose Plan Screen",
    ACCOUNT_DETAILS: "Account Details",
    FEATURE_DESCRIPTION_SCREEN: "Feature Description Screen",
    FEATURES_LIST_SCREEN: "Features List Screen",
    GRACE_PERIOD_NOTIFICATION: "Grace Period Notification",
    EXPIRED_SUBSCRIPTION_SCREEN: "Expired Subscription Screen",
    TRIAL_EXTENSION_OFFER_SCREEN: "Trial Extension Offer Screen",
    TEAM_DEACTIVATION_SCREEN: "Team Deactivation Screen",
    DOWNGRADE_FROM_PRO_SCREEN: "Downgrade From Pro Screen",
  },
  Cte = { KEEP: "Keep", DELETE: "Delete" },
  Ate = {
    KEYCHAIN: "Keychain",
    HOST_SETTINGS: "Host Settings",
    AUTOCOMPLETE: "Autocomplete",
    GROUP_SETTINGS: "Group Settings",
    AUTOCOMPLETE_FOR_SUDO: "Autocomplete for sudo",
  },
  Ote = {
    BEFORE_YOU_PROCEED: "BeforeYouProceed",
    ENTER_PASSWORD: "EnterPassword",
    FORGOT_PASSWORD: "ForgotPassword",
    SUCCESS: "Success",
    LANDING: "Landing",
  },
  Hte = {
    EXP_1_SOCIALVALIDATION: "Exp_1_SocialValidation",
    EXP_1_BASELINE: "Exp_1_Baseline",
    EXP_1_OFF: "Exp_1_Off",
    EXP_2_BASELINE: "Exp_2_Baseline",
    EXP_2_ABANDONEDCART: "Exp_2_AbandonedCart",
    EXP_2_DISABLED: "Exp_2_Disabled",
    EXP_3_BASELINE: "Exp_3_Baseline",
    EXP_3_NEWCHOOSEPLAN: "Exp_3_NewChoosePlan",
    EXP_3_DISABLED: "Exp_3_Disabled",
  },
  Nte = { YES: "Yes", NO: "No" },
  Rte = { YES: "yes", NO: "no" },
  kte = {
    BACKUP_AND_SYNC: "Backup and Sync",
    IMPORT: "Import",
    INSTALL: "Install",
  },
  xte = {
    DESCRIPTION: "Description",
    CREATE_TEAM: "Create Team",
    INVITE_MEMBERS: "Invite Members",
    GROUP_PICKER: "Group Picker",
    PURCHASE_TEAM: "Purchase Team",
    CREATE_ACCOUNT: "Create Account",
    SUCCESS: "Success",
    DESCRIPTION_INVITE_PEOPLE: "Description Invite People",
    SHARED_DATA_PICKER: "Shared Data Picker",
    SET_PASSWORD: "Set Password",
    CREDENTIALS_MODE: "Credentials Mode",
  },
  Lte = { CLICK: "Click", ENTER: "Enter" },
  Mte = { ENABLED: "enabled", DISABLED: "disabled" },
  Dte = { ENABLED: "enabled", DISABLED: "disabled" },
  Gte = {
    FREE: "Free",
    TRIAL: "Trial",
    PREMIUM: "Premium",
    TEAM: "Team",
    TEAM_EXPIRED: "Team Expired",
    GITHUB_STUDENT_DEVELOPER_PACK: "GitHub Student Developer Pack",
    GITHUB_TEACHER_TOOLKIT: "GitHub Teacher Toolkit",
    PREMIUM_TEAM_TRIAL_EXPIRED: "Premium Team Trial Expired",
    TEAM_TRIAL_EXPIRED: "Team Trial Expired",
    ENTERPRISE: "Enterprise",
    ENTERPRISE_EXPIRED: "Enterprise Expired",
    BUSINESS: "Business",
  },
  Fte = { IPV4: "IPv4", IPV6: "IPv6", HOSTNAME: "hostname" },
  Ute = { YES: "yes", NO: "no" },
  Kte = {
    OPEN: "Open",
    OPEN_WITH: "Open with",
    OPEN_WITH_ASSOCIATED_APP: "Open With Associated App",
  },
  Bte = { YES: "yes", NO: "no" },
  Vte = {
    ACCOUNT_PAGE: "Account Page",
    SIDE_MENU: "Side Menu",
    MULTIPLE_VAULTS_PROMO: "Multiple Vaults Promo",
  },
  jte = { ENABLED: "enabled", DISABLED: "disabled" },
  zte = { YES: "yes", NO: "no" },
  $te = {
    IMPORTED: "Imported",
    GENERATED: "Generated",
    PASTED: "Pasted",
    CONNECTION_FLOW: "Connection Flow",
    CONNECTION_FLOW_EMPTY_SCREEN: "Connection Flow Empty Screen",
  },
  Wte = { MENU: "Menu", TERMINAL: "Terminal", TAB: "Tab" },
  qte = {
    STARTUP: "Startup",
    AUTOCOMPLETE: "Autocomplete",
    SNIPPETS_SCREEN: "Snippets Screen",
    SNIPPETS_PANEL: "Snippets Panel",
    TERMINAL_HISTORY: "Terminal History",
  },
  Yte = {
    HOST_TAG: "Host Tag",
    SNIPPET_EDIT_FORM: "Snippet Edit Form",
    PACKAGE_CREATE_FORM: "Package Create Form",
    SNIPPET_EMPTY_SCREEN_ADD_PACKAGE_FOR_SEGMENT:
      "Snippet Empty Screen Add Package For Segment",
    SNIPPET_EMPTY_SCREEN_TOP_FIVE_COMMANDS_PACKAGE:
      "Snippet Empty Screen Top Five Commands Package",
  },
  Xte = {
    CREATE_TEAM_WIZARD: "Create-Team Wizard",
    WHOS_IN_TERMIUS: "Who's in Termius",
    TEAM_SCREEN: "Team Screen",
    INVITE_COLLEAGUES: "Invite Colleagues",
    INVITE_COLLEAGUES_AFTER_TRIAL_EXTENSION:
      "Invite Colleagues After Trial Extension",
  },
  Qte = { YES: "yes", NO: "no" },
  Jte = {
    ENABLED: "enabled",
    DISABLED: "disabled",
    DISABLED_FOR_SESSION: "disabled for session",
    DISABLED_FOR_ONE_DAY: "disabled for one day",
  },
  Zte = {
    PREFERENCES: "Preferences",
    ONBOARDING: "Onboarding",
    HOSTS: "Hosts",
    CONTEXT_MENU: "ContextMenu",
    HOSTS_EMPTY_SCREEN: "Hosts Empty Screen",
  },
  ene = { LOCAL: "Local", REMOTE: "Remote", DYNAMIC: "Dynamic" },
  tne = {
    ON_STARTUP: "OnStartup",
    ON_CONNECTION_CLOSE: "OnConnectionClose",
    EXP_1_WELCOMESCREEN: "Exp_1_WelcomeScreen",
    EXP_1_TRYPREMIUM: "Exp_1_TryPremium",
    EXP_1_OFF: "Exp_1_Off",
    EXP_2_BASELINE: "Exp_2_Baseline",
    EXP_2_CAROUSEL: "Exp_2_Carousel",
    EXP_2_DISABLED: "Exp_2_Disabled",
  },
  nne = { YES: "yes", NO: "no" },
  sne = {
    PASSWORD: "Password",
    KEYBOARD_INTERACTIVE: "Keyboard Interactive",
    PUBLIC_KEY: "Public Key",
  },
  rne = { YES: "yes", NO: "no" },
  ane = { SNIPPET: "Snippet", AUTOCOMPLETE: "Autocomplete" },
  ine = {
    DIGITAL_OCEAN: "DigitalOcean",
    AWS: "AWS",
    SSH_CONFIG: "SSH Config",
    SECURE_CR_T: "SecureCRT",
    PU_TT_Y: "PuTTY",
    KI_TT_Y: "KiTTY",
    CSV: "CSV",
    SOLAR_PUTTY: "Solar PuTTY",
    MOBA_X_TERM: "MobaXTerm",
    M_REMOTE_N_G: "mRemoteNG",
    BITVISE_SSH: "Bitvise SSH",
    WIN_SC_P: "WinSCP",
    KEY_FILE: "Key File",
    _SSH_FOLDER: ".SSH Folder",
    KNOWN_HOSTS: "Known Hosts",
  },
  one = { GLOBAL_HISTORY: "Global History", HOST_HISTORY: "Host History" },
  une = {
    HOST: "Host",
    GROUP: "Group",
    SNIPPET: "Snippet",
    PACKAGE: "Package",
  },
  lne = {
    EXP_1_BASELINE: "Exp_1_Baseline",
    EXP_1_TOAST: "Exp_1_Toast",
    EXP_1_BOUNCINGVIEW: "Exp_1_BouncingView",
    EXP_1_DISABLED: "Exp_1_Disabled",
  },
  cne = {
    SEPKEY: "SEPKey",
    LOCAL: "Local",
    CLOUD: "Cloud",
    MULTI_KEY: "MultiKey",
    WINDOWS_HELLO_KEY: "WindowsHelloKey",
  },
  dne = { YES: "yes", NO: "no" },
  pne = {
    AMAZON_EC2: "Amazon EC2",
    AMAZON_LIGHTSAIL: "Amazon Lightsail",
    DIGITALOCEAN_DROPLETS: "DigitalOcean Droplets",
    AZURE_VMS: "Azure VMs",
  },
  hne = {
    BILLING_ISSUE: "Billing Issue",
    ERROR: "Error",
    ITEM_ISSUE: "Item Issue",
    CONNECTION_ISSUE: "Connection Issue",
    USER_CANCELED: "User Canceled",
  },
  fne = { YES: "yes", NO: "no" };
let Y, X, Q, J, Z, ee, te, ne, se, re, ae, b, E, ie, oe, ue;
function UP(t) {
  t.platform !== null && t.platform !== void 0 && (Y = t.platform),
    t.appSource !== null && t.appSource !== void 0 && (X = t.appSource),
    t.systemPlan !== null && t.systemPlan !== void 0 && (Q = t.systemPlan),
    t.appVersion !== null && t.appVersion !== void 0 && (J = t.appVersion),
    t.cpuarchitecture !== null &&
      t.cpuarchitecture !== void 0 &&
      (Z = t.cpuarchitecture),
    t.systemHosts !== null && t.systemHosts !== void 0 && (ee = t.systemHosts),
    t.systemSnippets !== null &&
      t.systemSnippets !== void 0 &&
      (te = t.systemSnippets),
    t.systemGroups !== null &&
      t.systemGroups !== void 0 &&
      (ne = t.systemGroups),
    t.systemSharedHosts !== null &&
      t.systemSharedHosts !== void 0 &&
      (se = t.systemSharedHosts),
    t.systemSharedGroups !== null &&
      t.systemSharedGroups !== void 0 &&
      (re = t.systemSharedGroups),
    t.systemSharedSnippets !== null &&
      t.systemSharedSnippets !== void 0 &&
      (ae = t.systemSharedSnippets),
    t.systemSnippetPackages !== null &&
      t.systemSnippetPackages !== void 0 &&
      ((b = t.systemSnippetPackages), le(b)),
    t.systemSharedSnippetPackages !== null &&
      t.systemSharedSnippetPackages !== void 0 &&
      ((E = t.systemSharedSnippetPackages), ce(E)),
    t.systemTags !== null && t.systemTags !== void 0 && (ie = t.systemTags),
    t.numberOfSharedVaults !== null &&
      t.numberOfSharedVaults !== void 0 &&
      (oe = t.numberOfSharedVaults),
    t.systemKnownHosts !== null &&
      t.systemKnownHosts !== void 0 &&
      (ue = t.systemKnownHosts);
}
function J2(t, e, n) {
  var r;
  h === null &&
    ((h = t.env),
    t.avoLogger !== void 0 && (ka = t.avoLogger),
    t.noop === !0 && (v = !0),
    v &&
      h == "prod" &&
      (j.warn("[avo] ****************************************************"),
      j.warn(
        "[avo] WARNING Avo cannot be initialized in noop mode in production:"
      ),
      j.warn("[avo] - Overwriting configuration with noop=false."),
      j.warn(
        "[avo] - Please reach out if you want to be able to run Avo in production mode with noop=true"
      ),
      j.warn("[avo] ****************************************************"),
      (v = !1)),
    v &&
      (j.log("[avo] ****************************************************"),
      j.log("[avo] Avo is now initialized in noop mode. This means:"),
      j.log("[avo] - No events will be sent"),
      j.log("[avo] - No network requests are made"),
      j.log("[avo] ****************************************************")),
    t.strict !== void 0 && (T = t.strict !== !1),
    t.reportFailureAs !== void 0 && ($ = t.reportFailureAs),
    (_ =
      !v &&
      ((typeof window < "u" &&
        window.location.search.indexOf("avo_debug=1") > -1) ||
        (t.webDebugger !== !1 && h !== "prod"))),
    !v && t.inspector !== void 0
      ? (w = t.inspector)
      : h !== "prod" &&
        j.warn("[avo] Avo Inspector not provided in initAvo() call"),
    UP(e),
    (n = n || {}),
    _ &&
      !v &&
      ((r = t.webDebuggerOptions) != null &&
        r.position &&
        dUe(t.webDebuggerOptions.position),
      (function () {
        if (typeof window > "u") return;
        let a = function () {
          let s = document.createElement("iframe");
          document.body.appendChild(s),
            (s.id = "avo-debugger"),
            (s.src = "https://www.avo.app/_debugger"),
            (s.style = "display: none;");
        };
        document.body ? a() : document.addEventListener("DOMContentLoaded", a);
      })()),
    v ||
      (h === "prod" && V.make("33f17a443becf835952c482848961160", n.mixpanel),
      h === "dev" && V.make("bb7be59ea72efaec753697c6013b3a4f", n.mixpanel),
      h === "staging" && V.make("712dee34a1d609cb0b0c44b0c14c8dd5", n.mixpanel),
      h === "dev" && rJ(h, "init", [], "init")));
}
function pUe(t, e) {
  let n = [];
  return (
    (n = n.concat(
      ns.assertInt("F10rl0OxEL", e ? "SnippetLength: " + e : "SnippetLength", t)
    )),
    (n = n.concat(
      ns.assertMin(
        "F10rl0OxEL",
        e ? "SnippetLength: " + e : "SnippetLength",
        -1,
        t
      )
    )),
    n
  );
}
function hUe(t, e) {
  let n = [];
  return (
    t != null &&
      ((n = n.concat(
        ns.assertInt("GM283Ov5I", e ? "Length: " + e : "Length", t)
      )),
      (n = n.concat(
        ns.assertMin("GM283Ov5I", e ? "Length: " + e : "Length", 0, t)
      ))),
    n
  );
}
function fUe(t, e) {
  let n = [];
  return (
    (n = n.concat(
      ns.assertInt("Gmn8dg8iFI", e ? "SnippetLines: " + e : "SnippetLines", t)
    )),
    (n = n.concat(
      ns.assertMin(
        "Gmn8dg8iFI",
        e ? "SnippetLines: " + e : "SnippetLines",
        -1,
        t
      )
    )),
    n
  );
}
function mUe(t, e) {
  let n = [];
  return (
    (n = n.concat(
      ns.assertInt(
        "JQRgbHj1p8",
        e ? "CryptorVersion: " + e : "CryptorVersion",
        t
      )
    )),
    (n = n.concat(
      ns.assertMin(
        "JQRgbHj1p8",
        e ? "CryptorVersion: " + e : "CryptorVersion",
        0,
        t
      )
    )),
    (n = n.concat(
      ns.assertMax(
        "JQRgbHj1p8",
        e ? "CryptorVersion: " + e : "CryptorVersion",
        4,
        t
      )
    )),
    n
  );
}
function le(t, e) {
  let n = [];
  return (
    t != null &&
      ((n = n.concat(
        ns.assertInt(
          "LXRkNGrwby",
          e ? "SystemSnippetPackages: " + e : "SystemSnippetPackages",
          t
        )
      )),
      (n = n.concat(
        ns.assertMin(
          "LXRkNGrwby",
          e ? "SystemSnippetPackages: " + e : "SystemSnippetPackages",
          0,
          t
        )
      ))),
    n
  );
}
function Z2(t, e) {
  let n = [];
  return (
    t != null &&
      ((n = n.concat(
        ns.assertInt("W9DBs0X2C", e ? "Position: " + e : "Position", t)
      )),
      (n = n.concat(
        ns.assertMin("W9DBs0X2C", e ? "Position: " + e : "Position", 0, t)
      ))),
    n
  );
}
function SUe(t, e) {
  let n = [];
  return (
    t != null &&
      ((n = n.concat(
        ns.assertInt("ZfA7_QPg4_", e ? "OnPage: " + e : "OnPage", t)
      )),
      (n = n.concat(
        ns.assertMin("ZfA7_QPg4_", e ? "OnPage: " + e : "OnPage", 0, t)
      )),
      (n = n.concat(
        ns.assertMax("ZfA7_QPg4_", e ? "OnPage: " + e : "OnPage", 4, t)
      ))),
    n
  );
}
function ce(t, e) {
  let n = [];
  return (
    t != null &&
      ((n = n.concat(
        ns.assertInt(
          "oh72Fb99pm",
          e
            ? "SystemSharedSnippetPackages: " + e
            : "SystemSharedSnippetPackages",
          t
        )
      )),
      (n = n.concat(
        ns.assertMin(
          "oh72Fb99pm",
          e
            ? "SystemSharedSnippetPackages: " + e
            : "SystemSharedSnippetPackages",
          0,
          t
        )
      ))),
    n
  );
}
function yUe(t, e) {
  let n = [];
  return (
    (n = n.concat(
      ns.assertInt(
        "qzdBPWWR7",
        e ? "LastSessionDuration: " + e : "LastSessionDuration",
        t
      )
    )),
    (n = n.concat(
      ns.assertMin(
        "qzdBPWWR7",
        e ? "LastSessionDuration: " + e : "LastSessionDuration",
        0,
        t
      )
    )),
    n
  );
}
function gUe(t, e) {
  let n = [];
  return (
    (n = n.concat(ns.assertInt("vzA_bIeMgA", e ? "CSAT: " + e : "CSAT", t))),
    (n = n.concat(ns.assertMin("vzA_bIeMgA", e ? "CSAT: " + e : "CSAT", 1, t))),
    (n = n.concat(ns.assertMax("vzA_bIeMgA", e ? "CSAT: " + e : "CSAT", 5, t))),
    n
  );
}
function vUe(t, e) {
  let n = [];
  return (
    t != null &&
      ((n = n.concat(
        ns.assertInt(
          "ymKyyoK7m0",
          e ? "SnippetPackageID: " + e : "SnippetPackageID",
          t
        )
      )),
      (n = n.concat(
        ns.assertMin(
          "ymKyyoK7m0",
          e ? "SnippetPackageID: " + e : "SnippetPackageID",
          -1,
          t
        )
      ))),
    n
  );
}
function mne(t, e) {
  let n = [];
  return (
    (n = n.concat(
      ns.assertInt(
        "ymKyyoK7m0",
        e ? "SnippetPackageID: " + e : "SnippetPackageID",
        t
      )
    )),
    (n = n.concat(
      ns.assertMin(
        "ymKyyoK7m0",
        e ? "SnippetPackageID: " + e : "SnippetPackageID",
        -1,
        t
      )
    )),
    n
  );
}
function _Ue(t) {
  ka = t;
}
function ex(t) {
  let e = [];
  e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "_vPYKenif",
          "a27f45d7e4993e2bf0d5256b17fc4114fd7e48c7b4fdfa85e5ea976c49a7151e",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Welcome Screen Opened", n, a),
      _ && q("_vPYKenif", "Welcome Screen Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Welcome Screen Opened': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Welcome Screen Opened",
          n,
          "_vPYKenif",
          "a27f45d7e4993e2bf0d5256b17fc4114fd7e48c7b4fdfa85e5ea976c49a7151e"
        ),
      V.logEvent("Welcome Screen Opened", Object.assign({}, s)));
}
function tx(t) {
  let e = [];
  e.push({ id: "1yGELHVfm8", name: "AuthMethod", value: t.authMethod }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [];
  t.email !== void 0 && t.email !== null
    ? r.push({ id: "-R5kiliI5", name: "Email", value: t.email })
    : r.push({ id: "-R5kiliI5", name: "Email", value: null }),
    r.push({ id: "Gbo7USoaG", name: "Plan", value: t.plan });
  let a = P(r);
  if (h !== "prod" || _) {
    let o = [];
    if (
      ((o = o.concat(le(b))),
      (o = o.concat(ce(E))),
      v ||
        W(
          h,
          "ySRwLYMcF",
          "960155d207dfbd9040c9ef2a80816b7ac1d3412b1034321ba7bac67ce136e726",
          o.map((u) =>
            Object.assign(
              {},
              {
                tag: u.tag,
                propertyId: u.propertyId,
                additionalProperties: u.additionalProperties,
                actualType: u.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("User Login", n, a),
      _ && q("ySRwLYMcF", "User Login", o, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (o.length !== 0)
        throw new Error("Error sending event 'User Login': " + o[0].message);
    } else
      o.forEach(function (u) {
        console[$ || "error"]("[avo] " + u.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts;
  let i = { ...a };
  (i.$email = i.Email),
    delete i.Email,
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "User Login",
          n,
          "ySRwLYMcF",
          "960155d207dfbd9040c9ef2a80816b7ac1d3412b1034321ba7bac67ce136e726"
        ),
      V.identify(t.userId_),
      V.setUserProperties(Object.assign({}, i)),
      V.logEvent("User Login", Object.assign({}, s)));
}
function nx(t) {
  let e = [];
  e.push({ id: "KV_0SzvdI", name: "Source", value: t.from }),
    t.authMethod !== void 0 && t.authMethod !== null
      ? e.push({ id: "1yGELHVfm8", name: "AuthMethod", value: t.authMethod })
      : e.push({ id: "1yGELHVfm8", name: "AuthMethod", value: null }),
    t.introductoryOffer !== void 0 && t.introductoryOffer !== null
      ? e.push({
          id: "Lk1S4CsSou",
          name: "IntroductoryOffer",
          value: t.introductoryOffer,
        })
      : e.push({ id: "Lk1S4CsSou", name: "IntroductoryOffer", value: null }),
    t.time !== void 0 && t.time !== null
      ? e.push({ id: "kkJhdtDbsB", name: "Time", value: t.time })
      : e.push({ id: "kkJhdtDbsB", name: "Time", value: null }),
    e.push({
      id: "LxHTbfjiwj",
      name: "UpgradeToProFunnelID",
      value: t.upgradeToProFunnelID,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [];
  t.email !== void 0 && t.email !== null
    ? r.push({ id: "-R5kiliI5", name: "Email", value: t.email })
    : r.push({ id: "-R5kiliI5", name: "Email", value: null }),
    t.trialEndDate !== void 0 && t.trialEndDate !== null
      ? r.push({
          id: "uoqM6H2WLH",
          name: "TrialEndDate",
          value: t.trialEndDate,
        })
      : r.push({ id: "uoqM6H2WLH", name: "TrialEndDate", value: null });
  let a = P(r);
  if (h !== "prod" || _) {
    let o = [];
    if (
      ((o = o.concat(le(b))),
      (o = o.concat(ce(E))),
      v ||
        W(
          h,
          "FMEaeqrqC",
          "7f5afe3474fd354bbfd22cbbe88d96adfa942d6c128f342bdbca19bf866af069",
          o.map((u) =>
            Object.assign(
              {},
              {
                tag: u.tag,
                propertyId: u.propertyId,
                additionalProperties: u.additionalProperties,
                actualType: u.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Trial Started", n, a),
      _ && q("FMEaeqrqC", "Trial Started", o, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (o.length !== 0)
        throw new Error("Error sending event 'Trial Started': " + o[0].message);
    } else
      o.forEach(function (u) {
        console[$ || "error"]("[avo] " + u.message);
      });
  }
  let s = { ...n };
  (s.time = s.Time),
    delete s.Time,
    (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts;
  let i = { ...a };
  (i.$email = i.Email),
    delete i.Email,
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Trial Started",
          n,
          "FMEaeqrqC",
          "7f5afe3474fd354bbfd22cbbe88d96adfa942d6c128f342bdbca19bf866af069"
        ),
      V.setUserProperties(Object.assign({}, i)),
      V.logEvent("Trial Started", Object.assign({}, s)));
}
function sx(t) {
  let e = [];
  e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "p1OMaKKHi",
          "3b37b3e884fbd453d60512500783a0afb404e4c8e472d5ec3b5fa2b3851cb2ac",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Trial Dismissed", n, a),
      _ && q("p1OMaKKHi", "Trial Dismissed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Trial Dismissed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Trial Dismissed",
          n,
          "p1OMaKKHi",
          "3b37b3e884fbd453d60512500783a0afb404e4c8e472d5ec3b5fa2b3851cb2ac"
        ),
      V.logEvent("Trial Dismissed", Object.assign({}, s)));
}
function rx(t) {
  let e = [];
  t.type !== void 0 && t.type !== null
    ? e.push({ id: "4JK6HZoSy", name: "Type", value: t.type })
    : e.push({ id: "4JK6HZoSy", name: "Type", value: null }),
    e.push({ id: "hfEMKFB-W", name: "HostChain", value: t.hostChain }),
    e.push({ id: "Ah7cxGtvs", name: "Proxy", value: t.proxy }),
    t.agentForwarding !== void 0 && t.agentForwarding !== null
      ? e.push({
          id: "i2MaNCX0T",
          name: "AgentForwarding",
          value: t.agentForwarding,
        })
      : e.push({ id: "i2MaNCX0T", name: "AgentForwarding", value: null }),
    t.addressType !== void 0 && t.addressType !== null
      ? e.push({ id: "swXL264i3", name: "AddressType", value: t.addressType })
      : e.push({ id: "swXL264i3", name: "AddressType", value: null }),
    e.push({ id: "OPNqNxEuxS", name: "SharedEntity", value: t.isSharedEntity }),
    t.isSharedEntityOwner !== void 0 && t.isSharedEntityOwner !== null
      ? e.push({
          id: "WEcuaha6WC",
          name: "IsSharedEntityOwner",
          value: t.isSharedEntityOwner,
        })
      : e.push({ id: "WEcuaha6WC", name: "IsSharedEntityOwner", value: null }),
    t.isLocationTrackingEnabled !== void 0 &&
    t.isLocationTrackingEnabled !== null
      ? e.push({
          id: "_AYHwbh7r7",
          name: "IsLocationTrackingEnabled",
          value: t.isLocationTrackingEnabled,
        })
      : e.push({
          id: "_AYHwbh7r7",
          name: "IsLocationTrackingEnabled",
          value: null,
        }),
    t.sepkey !== void 0 && t.sepkey !== null
      ? e.push({ id: "tlHBNp-4Ik", name: "SEPKey", value: t.sepkey })
      : e.push({ id: "tlHBNp-4Ik", name: "SEPKey", value: null }),
    e.push({ id: "dvpH6RB7e1", name: "Snippet", value: t.snippet }),
    e.push({ id: "LtX0SIqFoB", name: "ConnectionID", value: t.connectionID }),
    t.fido2BasedKey !== void 0 && t.fido2BasedKey !== null
      ? e.push({
          id: "d0wP8dzLwR",
          name: "FIDO2BasedKey",
          value: t.fido2BasedKey,
        })
      : e.push({ id: "d0wP8dzLwR", name: "FIDO2BasedKey", value: null }),
    e.push({ id: "_V7x0pN7h", name: "ParentGroup", value: t.parentGroup }),
    e.push({ id: "NggaaqHaw", name: "Port", value: t.port }),
    e.push({ id: "Qt2yxjeru", name: "Charset", value: t.charset }),
    e.push({
      id: "IEJoR6qrk",
      name: "EnvironmentVariables",
      value: t.environmentVariables,
    }),
    e.push({ id: "7uK7SjClI", name: "Credentials", value: t.credentials }),
    e.push({ id: "Vo4DpSt7V", name: "Username", value: t.username }),
    e.push({ id: "k5slDkAXX", name: "Theme", value: t.theme }),
    e.push({ id: "HNqSfSOeH", name: "Mosh", value: t.mosh }),
    t.wizardID !== void 0 && t.wizardID !== null
      ? e.push({ id: "MGexS9ePV", name: "WizardID", value: t.wizardID })
      : e.push({ id: "MGexS9ePV", name: "WizardID", value: null }),
    e.push({ id: "z2dq40ZkM", name: "Label", value: t.label }),
    e.push({ id: "Msi5WU1vK", name: "Backspace", value: t.backspace }),
    e.push({ id: "dhTokcwuGb", name: "NumberOfTags", value: t.numberOfTags }),
    e.push({
      id: "yI0m2a7x9",
      name: "NumberOfEnvironmentVariables",
      value: t.numberOfEnvironmentVariables,
    }),
    t.windowsHelloKey !== void 0 && t.windowsHelloKey !== null
      ? e.push({
          id: "PK_HMw_8q",
          name: "WindowsHelloKey",
          value: t.windowsHelloKey,
        })
      : e.push({ id: "PK_HMw_8q", name: "WindowsHelloKey", value: null }),
    t.terminalTheme !== void 0 && t.terminalTheme !== null
      ? e.push({
          id: "QI8h95kq-",
          name: "TerminalTheme",
          value: t.terminalTheme,
        })
      : e.push({ id: "QI8h95kq-", name: "TerminalTheme", value: null }),
    t.cloudIntegration !== void 0 && t.cloudIntegration !== null
      ? e.push({
          id: "9KGA7NDbUO",
          name: "CloudIntegration",
          value: t.cloudIntegration,
        })
      : e.push({ id: "9KGA7NDbUO", name: "CloudIntegration", value: null }),
    e.push({ id: "l_C5WKHfwm", name: "HostsInChain", value: t.hostsInChain }),
    t.connectionOrigin !== void 0 && t.connectionOrigin !== null
      ? e.push({
          id: "53c_AHgLyJ",
          name: "ConnectionOrigin",
          value: t.connectionOrigin,
        })
      : e.push({ id: "53c_AHgLyJ", name: "ConnectionOrigin", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "oBOl8mGks",
          "6f662fa9f02435c63d5ff9911bf00c9ddc758b4746d3acbbdd55d1ba00f88a71",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Connection Established", n, a),
      _ && q("oBOl8mGks", "Connection Established", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Connection Established': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Protocol = s.Type),
    delete s.Type,
    (s.SharedEntityOwner = s.IsSharedEntityOwner),
    delete s.IsSharedEntityOwner,
    (s.LocationTrackingEnabled = s.IsLocationTrackingEnabled),
    delete s.IsLocationTrackingEnabled,
    (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Connection Established",
          n,
          "oBOl8mGks",
          "6f662fa9f02435c63d5ff9911bf00c9ddc758b4746d3acbbdd55d1ba00f88a71"
        ),
      V.logEvent("Connection Established", Object.assign({}, s)));
}
function ax(t) {
  let e = [];
  e.push({ id: "B4WRezXjG", name: "Success", value: t.success }),
    t.length !== void 0 && t.length !== null
      ? e.push({ id: "GM283Ov5I", name: "Length", value: t.length })
      : e.push({ id: "GM283Ov5I", name: "Length", value: null }),
    t.position !== void 0 && t.position !== null
      ? e.push({ id: "W9DBs0X2C", name: "Position", value: t.position })
      : e.push({ id: "W9DBs0X2C", name: "Position", value: null }),
    t.suggestionSource !== void 0 && t.suggestionSource !== null
      ? e.push({
          id: "Zo7gsYe4UL",
          name: "SuggestionSource",
          value: t.suggestionSource,
        })
      : e.push({ id: "Zo7gsYe4UL", name: "SuggestionSource", value: null }),
    t.closeReason !== void 0 && t.closeReason !== null
      ? e.push({ id: "6TFRRfy1S", name: "CloseReason", value: t.closeReason })
      : e.push({ id: "6TFRRfy1S", name: "CloseReason", value: null }),
    e.push({ id: "LtX0SIqFoB", name: "ConnectionID", value: t.connectionID }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(hUe(t.length))),
      (i = i.concat(Z2(t.position))),
      (i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "O-QPA07Fk",
          "d0e867304d2d90a4478f494b872362ecadef4b7fdb3efe2a3a81e4dd2f3d4e05",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Autocomplete", n, a),
      _ && q("O-QPA07Fk", "Autocomplete", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error("Error sending event 'Autocomplete': " + i[0].message);
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Autocomplete",
          n,
          "O-QPA07Fk",
          "d0e867304d2d90a4478f494b872362ecadef4b7fdb3efe2a3a81e4dd2f3d4e05"
        ),
      V.logEvent("Autocomplete", Object.assign({}, s)));
}
function Sne(t) {
  let e = [];
  e.push({ id: "dypH2dod8", name: "Native", value: t.native_ }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "YZHr86n_a",
          "bb357b6cf19ef6946ec4556df25279deeb8add2a19051bd0f811e985cb3d6f69",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("App Crash", n, a),
      _ && q("YZHr86n_a", "App Crash", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error("Error sending event 'App Crash': " + i[0].message);
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "App Crash",
          n,
          "YZHr86n_a",
          "bb357b6cf19ef6946ec4556df25279deeb8add2a19051bd0f811e985cb3d6f69"
        ),
      V.logEvent("App Crash", Object.assign({}, s)));
}
function ix(t) {
  let e = [];
  t.period !== void 0 && t.period !== null
    ? e.push({ id: "c3Fu42Njx", name: "Period", value: t.period })
    : e.push({ id: "c3Fu42Njx", name: "Period", value: null }),
    t.productID !== void 0 && t.productID !== null
      ? e.push({ id: "gDYctvq6g", name: "ProductID", value: t.productID })
      : e.push({ id: "gDYctvq6g", name: "ProductID", value: null }),
    e.push({
      id: "pLarNQTsUH",
      name: "BuyNowButtonLocation",
      value: t.buyNowButtonLocation,
    }),
    e.push({
      id: "LxHTbfjiwj",
      name: "UpgradeToProFunnelID",
      value: t.upgradeToProFunnelID,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "oUGxpVEk4",
          "6235560074eb951cbfc3c7b860e26b486e4ce263d9cf58b23a424cf9d949dd8d",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Purchase Started", n, a),
      _ && q("oUGxpVEk4", "Purchase Started", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Purchase Started': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Purchase Started",
          n,
          "oUGxpVEk4",
          "6235560074eb951cbfc3c7b860e26b486e4ce263d9cf58b23a424cf9d949dd8d"
        ),
      V.logEvent("Purchase Started", Object.assign({}, s)));
}
function ox(t) {
  let e = [];
  e.push({
    id: "aiR-1EncX1",
    name: "ChoosePlanSource",
    value: t.choosePlanSource,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "GaZWQ3Hfv",
          "35fd7a626d7ff3a0806f771eb1053e855fd8223a1096dfa30a6512ddead627be",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Choose Plan Screen Opened", n, a),
      _ && q("GaZWQ3Hfv", "Choose Plan Screen Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Choose Plan Screen Opened': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Choose Plan Screen Opened",
          n,
          "GaZWQ3Hfv",
          "35fd7a626d7ff3a0806f771eb1053e855fd8223a1096dfa30a6512ddead627be"
        ),
      V.logEvent("Choose Plan Screen Opened", Object.assign({}, s)));
}
function ux(t) {
  let e = [];
  e.push({
    id: "CKBXncUUxf",
    name: "HostCreationOrigin",
    value: t.hostCreationOrigin,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "JTT4rIjY5",
          "2b4320565cca2e22ea12812a0a995145f36eeb509f6e138b702b923f24201066",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("New Host Button Pressed", n, a),
      _ && q("JTT4rIjY5", "New Host Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'New Host Button Pressed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "New Host Button Pressed",
          n,
          "JTT4rIjY5",
          "2b4320565cca2e22ea12812a0a995145f36eeb509f6e138b702b923f24201066"
        ),
      V.logEvent("New Host Button Pressed", Object.assign({}, s)));
}
function lx(t) {
  let e = [];
  e.push({ id: "OPNqNxEuxS", name: "SharedEntity", value: t.isSharedEntity }),
    t.eventTeamRole !== void 0 && t.eventTeamRole !== null
      ? e.push({ id: "6LKqiSL8zD", name: "TeamRole", value: t.eventTeamRole })
      : e.push({ id: "6LKqiSL8zD", name: "TeamRole", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "V7Zm_RvAu",
          "31a3624013d940eea52532dfc352bc41f397777461ea51e6b0bc55a113aede44",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("New Host Created", n, a),
      _ && q("V7Zm_RvAu", "New Host Created", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'New Host Created': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "New Host Created",
          n,
          "V7Zm_RvAu",
          "31a3624013d940eea52532dfc352bc41f397777461ea51e6b0bc55a113aede44"
        ),
      V.logEvent("New Host Created", Object.assign({}, s)));
}
function yne() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "Iq9GkMf57",
          "11094263b9e11ca89533e419283423d783f25212a93f08365c5070c0690e33f8",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Team Screen Opened", e, r),
      _ && q("Iq9GkMf57", "Team Screen Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Team Screen Opened': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Team Screen Opened",
          e,
          "Iq9GkMf57",
          "11094263b9e11ca89533e419283423d783f25212a93f08365c5070c0690e33f8"
        ),
      V.logEvent("Team Screen Opened", Object.assign({}, a)));
}
function cx() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "DSEk6QMb7",
          "913a1bb120ce73620388623f6c724a9788df2d8bc5ed35d707887449f3ed3f8f",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Team Plan Tab Opened", e, r),
      _ && q("DSEk6QMb7", "Team Plan Tab Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Team Plan Tab Opened': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Team Plan Tab Opened",
          e,
          "DSEk6QMb7",
          "913a1bb120ce73620388623f6c724a9788df2d8bc5ed35d707887449f3ed3f8f"
        ),
      V.logEvent("Team Plan Tab Opened", Object.assign({}, a)));
}
function dx(t) {
  let e = [];
  t.type !== void 0 && t.type !== null
    ? e.push({ id: "4JK6HZoSy", name: "Type", value: t.type })
    : e.push({ id: "4JK6HZoSy", name: "Type", value: null }),
    e.push({ id: "hfEMKFB-W", name: "HostChain", value: t.hostChain }),
    e.push({ id: "Ah7cxGtvs", name: "Proxy", value: t.proxy }),
    t.agentForwarding !== void 0 && t.agentForwarding !== null
      ? e.push({
          id: "i2MaNCX0T",
          name: "AgentForwarding",
          value: t.agentForwarding,
        })
      : e.push({ id: "i2MaNCX0T", name: "AgentForwarding", value: null }),
    t.addressType !== void 0 && t.addressType !== null
      ? e.push({ id: "swXL264i3", name: "AddressType", value: t.addressType })
      : e.push({ id: "swXL264i3", name: "AddressType", value: null }),
    e.push({ id: "OPNqNxEuxS", name: "SharedEntity", value: t.isSharedEntity }),
    t.isSharedEntityOwner !== void 0 && t.isSharedEntityOwner !== null
      ? e.push({
          id: "WEcuaha6WC",
          name: "IsSharedEntityOwner",
          value: t.isSharedEntityOwner,
        })
      : e.push({ id: "WEcuaha6WC", name: "IsSharedEntityOwner", value: null }),
    t.isLocationTrackingEnabled !== void 0 &&
    t.isLocationTrackingEnabled !== null
      ? e.push({
          id: "_AYHwbh7r7",
          name: "IsLocationTrackingEnabled",
          value: t.isLocationTrackingEnabled,
        })
      : e.push({
          id: "_AYHwbh7r7",
          name: "IsLocationTrackingEnabled",
          value: null,
        }),
    t.sepkey !== void 0 && t.sepkey !== null
      ? e.push({ id: "tlHBNp-4Ik", name: "SEPKey", value: t.sepkey })
      : e.push({ id: "tlHBNp-4Ik", name: "SEPKey", value: null }),
    e.push({ id: "dvpH6RB7e1", name: "Snippet", value: t.snippet }),
    e.push({ id: "LtX0SIqFoB", name: "ConnectionID", value: t.connectionID }),
    t.fido2BasedKey !== void 0 && t.fido2BasedKey !== null
      ? e.push({
          id: "d0wP8dzLwR",
          name: "FIDO2BasedKey",
          value: t.fido2BasedKey,
        })
      : e.push({ id: "d0wP8dzLwR", name: "FIDO2BasedKey", value: null }),
    e.push({ id: "_V7x0pN7h", name: "ParentGroup", value: t.parentGroup }),
    e.push({ id: "NggaaqHaw", name: "Port", value: t.port }),
    e.push({ id: "Qt2yxjeru", name: "Charset", value: t.charset }),
    e.push({
      id: "IEJoR6qrk",
      name: "EnvironmentVariables",
      value: t.environmentVariables,
    }),
    e.push({ id: "7uK7SjClI", name: "Credentials", value: t.credentials }),
    e.push({ id: "Vo4DpSt7V", name: "Username", value: t.username }),
    e.push({ id: "k5slDkAXX", name: "Theme", value: t.theme }),
    e.push({ id: "HNqSfSOeH", name: "Mosh", value: t.mosh }),
    t.wizardID !== void 0 && t.wizardID !== null
      ? e.push({ id: "MGexS9ePV", name: "WizardID", value: t.wizardID })
      : e.push({ id: "MGexS9ePV", name: "WizardID", value: null }),
    e.push({ id: "z2dq40ZkM", name: "Label", value: t.label }),
    e.push({ id: "Msi5WU1vK", name: "Backspace", value: t.backspace }),
    e.push({ id: "dhTokcwuGb", name: "NumberOfTags", value: t.numberOfTags }),
    e.push({
      id: "yI0m2a7x9",
      name: "NumberOfEnvironmentVariables",
      value: t.numberOfEnvironmentVariables,
    }),
    t.windowsHelloKey !== void 0 && t.windowsHelloKey !== null
      ? e.push({
          id: "PK_HMw_8q",
          name: "WindowsHelloKey",
          value: t.windowsHelloKey,
        })
      : e.push({ id: "PK_HMw_8q", name: "WindowsHelloKey", value: null }),
    t.terminalTheme !== void 0 && t.terminalTheme !== null
      ? e.push({
          id: "QI8h95kq-",
          name: "TerminalTheme",
          value: t.terminalTheme,
        })
      : e.push({ id: "QI8h95kq-", name: "TerminalTheme", value: null }),
    t.connectionOrigin !== void 0 && t.connectionOrigin !== null
      ? e.push({
          id: "53c_AHgLyJ",
          name: "ConnectionOrigin",
          value: t.connectionOrigin,
        })
      : e.push({ id: "53c_AHgLyJ", name: "ConnectionOrigin", value: null }),
    t.credentialsSharingMode !== void 0 && t.credentialsSharingMode !== null
      ? e.push({
          id: "EAhyJvlH96",
          name: "CredentialsSharingMode",
          value: t.credentialsSharingMode,
        })
      : e.push({
          id: "EAhyJvlH96",
          name: "CredentialsSharingMode",
          value: null,
        }),
    t.cloudIntegration !== void 0 && t.cloudIntegration !== null
      ? e.push({
          id: "9KGA7NDbUO",
          name: "CloudIntegration",
          value: t.cloudIntegration,
        })
      : e.push({ id: "9KGA7NDbUO", name: "CloudIntegration", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [];
  r.push({ id: "btyOwlRVD", name: "History", value: t.history }),
    t.acquisitionChannel !== void 0 && t.acquisitionChannel !== null
      ? r.push({
          id: "LJQLa2zMX",
          name: "AcquisitionChannel",
          value: t.acquisitionChannel,
        })
      : r.push({ id: "LJQLa2zMX", name: "AcquisitionChannel", value: null });
  let a = P(r);
  if (h !== "prod" || _) {
    let o = [];
    if (
      ((o = o.concat(le(b))),
      (o = o.concat(ce(E))),
      v ||
        W(
          h,
          "h_Qv5wNHY",
          "cf4cf19e1b7e746462f5bf39945a0a8c64dcbccd30bc1682a5e4318e68112478",
          o.map((u) =>
            Object.assign(
              {},
              {
                tag: u.tag,
                propertyId: u.propertyId,
                additionalProperties: u.additionalProperties,
                actualType: u.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Connection Initiated", n, a),
      _ && q("h_Qv5wNHY", "Connection Initiated", o, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (o.length !== 0)
        throw new Error(
          "Error sending event 'Connection Initiated': " + o[0].message
        );
    } else
      o.forEach(function (u) {
        console[$ || "error"]("[avo] " + u.message);
      });
  }
  let s = { ...n };
  (s.Protocol = s.Type),
    delete s.Type,
    (s.SharedEntityOwner = s.IsSharedEntityOwner),
    delete s.IsSharedEntityOwner,
    (s.LocationTrackingEnabled = s.IsLocationTrackingEnabled),
    delete s.IsLocationTrackingEnabled,
    (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts;
  let i = { ...a };
  v ||
    (w != null &&
      w._avoFunctionTrackSchemaFromEvent(
        "Connection Initiated",
        n,
        "h_Qv5wNHY",
        "cf4cf19e1b7e746462f5bf39945a0a8c64dcbccd30bc1682a5e4318e68112478"
      ),
    V.setUserProperties(Object.assign({}, i)),
    V.logEvent("Connection Initiated", Object.assign({}, s)));
}
function px(t) {
  let e = [];
  t.type !== void 0 && t.type !== null
    ? e.push({ id: "4JK6HZoSy", name: "Type", value: t.type })
    : e.push({ id: "4JK6HZoSy", name: "Type", value: null }),
    e.push({ id: "hfEMKFB-W", name: "HostChain", value: t.hostChain }),
    e.push({ id: "Ah7cxGtvs", name: "Proxy", value: t.proxy }),
    t.agentForwarding !== void 0 && t.agentForwarding !== null
      ? e.push({
          id: "i2MaNCX0T",
          name: "AgentForwarding",
          value: t.agentForwarding,
        })
      : e.push({ id: "i2MaNCX0T", name: "AgentForwarding", value: null }),
    t.addressType !== void 0 && t.addressType !== null
      ? e.push({ id: "swXL264i3", name: "AddressType", value: t.addressType })
      : e.push({ id: "swXL264i3", name: "AddressType", value: null }),
    e.push({ id: "OPNqNxEuxS", name: "SharedEntity", value: t.isSharedEntity }),
    t.isSharedEntityOwner !== void 0 && t.isSharedEntityOwner !== null
      ? e.push({
          id: "WEcuaha6WC",
          name: "IsSharedEntityOwner",
          value: t.isSharedEntityOwner,
        })
      : e.push({ id: "WEcuaha6WC", name: "IsSharedEntityOwner", value: null }),
    t.isLocationTrackingEnabled !== void 0 &&
    t.isLocationTrackingEnabled !== null
      ? e.push({
          id: "_AYHwbh7r7",
          name: "IsLocationTrackingEnabled",
          value: t.isLocationTrackingEnabled,
        })
      : e.push({
          id: "_AYHwbh7r7",
          name: "IsLocationTrackingEnabled",
          value: null,
        }),
    t.sepkey !== void 0 && t.sepkey !== null
      ? e.push({ id: "tlHBNp-4Ik", name: "SEPKey", value: t.sepkey })
      : e.push({ id: "tlHBNp-4Ik", name: "SEPKey", value: null }),
    e.push({ id: "dvpH6RB7e1", name: "Snippet", value: t.snippet }),
    e.push({ id: "LtX0SIqFoB", name: "ConnectionID", value: t.connectionID }),
    t.fido2BasedKey !== void 0 && t.fido2BasedKey !== null
      ? e.push({
          id: "d0wP8dzLwR",
          name: "FIDO2BasedKey",
          value: t.fido2BasedKey,
        })
      : e.push({ id: "d0wP8dzLwR", name: "FIDO2BasedKey", value: null }),
    e.push({ id: "_V7x0pN7h", name: "ParentGroup", value: t.parentGroup }),
    e.push({ id: "NggaaqHaw", name: "Port", value: t.port }),
    e.push({ id: "Qt2yxjeru", name: "Charset", value: t.charset }),
    e.push({
      id: "IEJoR6qrk",
      name: "EnvironmentVariables",
      value: t.environmentVariables,
    }),
    e.push({ id: "7uK7SjClI", name: "Credentials", value: t.credentials }),
    e.push({ id: "Vo4DpSt7V", name: "Username", value: t.username }),
    e.push({ id: "k5slDkAXX", name: "Theme", value: t.theme }),
    e.push({ id: "HNqSfSOeH", name: "Mosh", value: t.mosh }),
    t.wizardID !== void 0 && t.wizardID !== null
      ? e.push({ id: "MGexS9ePV", name: "WizardID", value: t.wizardID })
      : e.push({ id: "MGexS9ePV", name: "WizardID", value: null }),
    e.push({ id: "z2dq40ZkM", name: "Label", value: t.label }),
    e.push({ id: "Msi5WU1vK", name: "Backspace", value: t.backspace }),
    e.push({ id: "dhTokcwuGb", name: "NumberOfTags", value: t.numberOfTags }),
    e.push({
      id: "yI0m2a7x9",
      name: "NumberOfEnvironmentVariables",
      value: t.numberOfEnvironmentVariables,
    }),
    t.windowsHelloKey !== void 0 && t.windowsHelloKey !== null
      ? e.push({
          id: "PK_HMw_8q",
          name: "WindowsHelloKey",
          value: t.windowsHelloKey,
        })
      : e.push({ id: "PK_HMw_8q", name: "WindowsHelloKey", value: null }),
    t.terminalTheme !== void 0 && t.terminalTheme !== null
      ? e.push({
          id: "QI8h95kq-",
          name: "TerminalTheme",
          value: t.terminalTheme,
        })
      : e.push({ id: "QI8h95kq-", name: "TerminalTheme", value: null }),
    e.push({ id: "eVNjeYObne", name: "Reason", value: t.failureReason }),
    t.connectionErrorCode !== void 0 && t.connectionErrorCode !== null
      ? e.push({
          id: "KXtb8IonD7",
          name: "ConnectionErrorCode",
          value: t.connectionErrorCode,
        })
      : e.push({ id: "KXtb8IonD7", name: "ConnectionErrorCode", value: null }),
    t.cloudIntegration !== void 0 && t.cloudIntegration !== null
      ? e.push({
          id: "9KGA7NDbUO",
          name: "CloudIntegration",
          value: t.cloudIntegration,
        })
      : e.push({ id: "9KGA7NDbUO", name: "CloudIntegration", value: null }),
    e.push({ id: "l_C5WKHfwm", name: "HostsInChain", value: t.hostsInChain }),
    t.sshserver !== void 0 && t.sshserver !== null
      ? e.push({ id: "N0qFTBDXA", name: "SSHServer", value: t.sshserver })
      : e.push({ id: "N0qFTBDXA", name: "SSHServer", value: null }),
    t.sshserverComment !== void 0 && t.sshserverComment !== null
      ? e.push({
          id: "zG_hDC9QO",
          name: "SSHServerComment",
          value: t.sshserverComment,
        })
      : e.push({ id: "zG_hDC9QO", name: "SSHServerComment", value: null }),
    t.connectionOrigin !== void 0 && t.connectionOrigin !== null
      ? e.push({
          id: "53c_AHgLyJ",
          name: "ConnectionOrigin",
          value: t.connectionOrigin,
        })
      : e.push({ id: "53c_AHgLyJ", name: "ConnectionOrigin", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "gIuHgQ8xT",
          "68c8f357062537f2ab563098d5596a04e96a24de1c8589f36d461a2a27713a5b",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Connection Failed", n, a),
      _ && q("gIuHgQ8xT", "Connection Failed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Connection Failed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Protocol = s.Type),
    delete s.Type,
    (s.SharedEntityOwner = s.IsSharedEntityOwner),
    delete s.IsSharedEntityOwner,
    (s.LocationTrackingEnabled = s.IsLocationTrackingEnabled),
    delete s.IsLocationTrackingEnabled,
    (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Connection Failed",
          n,
          "gIuHgQ8xT",
          "68c8f357062537f2ab563098d5596a04e96a24de1c8589f36d461a2a27713a5b"
        ),
      V.logEvent("Connection Failed", Object.assign({}, s)));
}
function hx(t) {
  let e = [];
  t.optionAsMeta !== void 0 && t.optionAsMeta !== null
    ? e.push({ id: "quzA-qa5qB", name: "OptionAsMeta", value: t.optionAsMeta })
    : e.push({ id: "quzA-qa5qB", name: "OptionAsMeta", value: null }),
    t.appColorTheme !== void 0 && t.appColorTheme !== null
      ? e.push({
          id: "U1nxNhexeT",
          name: "AppColorTheme",
          value: t.appColorTheme,
        })
      : e.push({ id: "U1nxNhexeT", name: "AppColorTheme", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [];
  r.push({ id: "CLYW2g_g-", name: "Groups", value: t.groups }),
    r.push({ id: "C-ALvHBy4", name: "Keys", value: t.keys }),
    r.push({ id: "QqbeHQnj5", name: "Identities", value: t.identities }),
    r.push({
      id: "bD0m1yMKp",
      name: "PortForwardings",
      value: t.portForwardings,
    }),
    r.push({ id: "btyOwlRVD", name: "History", value: t.history }),
    r.push({ id: "lPyFjA1BH", name: "KnownHosts", value: t.knownHosts }),
    r.push({
      id: "cCL22g8r9",
      name: "SyncKeyPasswords",
      value: t.syncKeyPasswords,
    }),
    t.choosePlanExperiment !== void 0 && t.choosePlanExperiment !== null
      ? r.push({
          id: "2C_Wkbl02",
          name: "ChoosePlanExperiment",
          value: t.choosePlanExperiment,
        })
      : r.push({ id: "2C_Wkbl02", name: "ChoosePlanExperiment", value: null }),
    t.teamOwner !== void 0 && t.teamOwner !== null
      ? r.push({ id: "fW1suTDaw", name: "TeamOwner", value: t.teamOwner })
      : r.push({ id: "fW1suTDaw", name: "TeamOwner", value: null }),
    r.push({ id: "pPjLC263t", name: "Snippets", value: t.snippets }),
    r.push({ id: "RQlk4dgN-", name: "Hosts", value: t.hosts }),
    r.push({
      id: "arkc-Mgeq",
      name: "SnippetPackages",
      value: t.snippetPackages,
    }),
    t.globalTerminalTheme !== void 0 && t.globalTerminalTheme !== null
      ? r.push({
          id: "Y6gLgMSQN",
          name: "GlobalTerminalTheme",
          value: t.globalTerminalTheme,
        })
      : r.push({ id: "Y6gLgMSQN", name: "GlobalTerminalTheme", value: null }),
    r.push({ id: "mpEeos7N6", name: "TerminalFont", value: t.terminalFont }),
    r.push({ id: "oghxwszWAr", name: "Certificates", value: t.certificates }),
    r.push({ id: "hJcbz1EeF", name: "Tags", value: t.tags });
  let a = P(r);
  if (h !== "prod" || _) {
    let o = [];
    if (
      ((o = o.concat(le(b))),
      (o = o.concat(ce(E))),
      v ||
        W(
          h,
          "RsiD2IlTr",
          "8c756595ffe8966c365f88d23a8984e9d323f875d5a778fc37c271326be00554",
          o.map((u) =>
            Object.assign(
              {},
              {
                tag: u.tag,
                propertyId: u.propertyId,
                additionalProperties: u.additionalProperties,
                actualType: u.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("App Opened", n, a),
      _ && q("RsiD2IlTr", "App Opened", o, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (o.length !== 0)
        throw new Error("Error sending event 'App Opened': " + o[0].message);
    } else
      o.forEach(function (u) {
        console[$ || "error"]("[avo] " + u.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts;
  let i = { ...a };
  v ||
    (w != null &&
      w._avoFunctionTrackSchemaFromEvent(
        "App Opened",
        n,
        "RsiD2IlTr",
        "8c756595ffe8966c365f88d23a8984e9d323f875d5a778fc37c271326be00554"
      ),
    V.setUserProperties(Object.assign({}, i)),
    V.logEvent("App Opened", Object.assign({}, s)));
}
function Ay(t) {
  let e = [];
  e.push({ id: "wq_Cu081p", name: "ErrorCode", value: t.errorCode }),
    t.failReason !== void 0 && t.failReason !== null
      ? e.push({ id: "ExzuVZSz89", name: "FailReason", value: t.failReason })
      : e.push({ id: "ExzuVZSz89", name: "FailReason", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "kCj7HGL9I",
          "7d5532b28c46ae8f998f53ee30ff1f6bdb86dcd5a6e48a703de36fd6f953175c",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Sync Failed", n, a),
      _ && q("kCj7HGL9I", "Sync Failed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error("Error sending event 'Sync Failed': " + i[0].message);
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Sync Failed",
          n,
          "kCj7HGL9I",
          "7d5532b28c46ae8f998f53ee30ff1f6bdb86dcd5a6e48a703de36fd6f953175c"
        ),
      V.logEvent("Sync Failed", Object.assign({}, s)));
}
function fx(t) {
  let e = [];
  t.biometricKeysDecision !== void 0 && t.biometricKeysDecision !== null
    ? e.push({
        id: "qK8GoE4oW",
        name: "BiometricKeysDecision",
        value: t.biometricKeysDecision,
      })
    : e.push({ id: "qK8GoE4oW", name: "BiometricKeysDecision", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "1jcjYb10i",
          "f47a9018b29a1e951a370243b313b5dbd51c7d0d92a8ef221b67e5afdd0ce03d",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("User Logout", n, a),
      _ && q("1jcjYb10i", "User Logout", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error("Error sending event 'User Logout': " + i[0].message);
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "User Logout",
          n,
          "1jcjYb10i",
          "f47a9018b29a1e951a370243b313b5dbd51c7d0d92a8ef221b67e5afdd0ce03d"
        ),
      V.logEvent("User Logout", Object.assign({}, s)),
      V.unidentify());
}
function gne() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "_hrlFT4M7",
          "5b58dca837e8a945899191dea1f391f26083d1a9aa6f6f42c29634276bc1c2fa",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Account Details Screen Opened", e, r),
      _ && q("_hrlFT4M7", "Account Details Screen Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Account Details Screen Opened': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Account Details Screen Opened",
          e,
          "_hrlFT4M7",
          "5b58dca837e8a945899191dea1f391f26083d1a9aa6f6f42c29634276bc1c2fa"
        ),
      V.logEvent("Account Details Screen Opened", Object.assign({}, a)));
}
function mx(t) {
  let e = [];
  e.push({
    id: "gYbcr8Ydm",
    name: "DownloadPlatform",
    value: t.downloadPlatform,
  }),
    e.push({
      id: "LIMTk61yK",
      name: "DownloadButtonLocation",
      value: t.downloadButtonLocation,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "6FWCuI5PS",
          "397d7dff47a8d9b23eaed55f511c294cd15c9d20d5910e5eac8ae032dfe558a6",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Download Button Pressed", n, a),
      _ && q("6FWCuI5PS", "Download Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Download Button Pressed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Download Button Pressed",
          n,
          "6FWCuI5PS",
          "397d7dff47a8d9b23eaed55f511c294cd15c9d20d5910e5eac8ae032dfe558a6"
        ),
      V.logEvent("Download Button Pressed", Object.assign({}, s)));
}
function Sx(t) {
  let e = [];
  e.push({ id: "zociz0dWi", name: "Reason", value: t.reason }),
    e.push({ id: "gDYctvq6g", name: "ProductID", value: t.productID }),
    e.push({
      id: "LxHTbfjiwj",
      name: "UpgradeToProFunnelID",
      value: t.upgradeToProFunnelID,
    }),
    t.errorCode !== void 0 && t.errorCode !== null
      ? e.push({ id: "wq_Cu081p", name: "ErrorCode", value: t.errorCode })
      : e.push({ id: "wq_Cu081p", name: "ErrorCode", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "IXY0ZlSN3",
          "5acf59b5c3d1ee6ed8e676fff45b5905de466c87affff22a7189ca9e9a1bce08",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Purchase Dismissed", n, a),
      _ && q("IXY0ZlSN3", "Purchase Dismissed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Purchase Dismissed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Purchase Dismissed",
          n,
          "IXY0ZlSN3",
          "5acf59b5c3d1ee6ed8e676fff45b5905de466c87affff22a7189ca9e9a1bce08"
        ),
      V.logEvent("Purchase Dismissed", Object.assign({}, s)));
}
function yx(t) {
  let e = [];
  e.push({ id: "7_qQHXAyKt", name: "Action", value: t.action }),
    e.push({ id: "IdLc6aidYP", name: "Entity", value: t.entity }),
    t.entityID !== void 0 && t.entityID !== null
      ? e.push({ id: "Gn7pMin78i", name: "EntityID", value: t.entityID })
      : e.push({ id: "Gn7pMin78i", name: "EntityID", value: null }),
    e.push({
      id: "JQRgbHj1p8",
      name: "CryptorVersion",
      value: t.cryptorVersion,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(mUe(t.cryptorVersion))),
      (i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "7aAZDGtTJl",
          "b2e0c4ae1434bc447ad5951830baf9853b77d97e350f70849babb60cb026e5ec",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Crypto Error", n, a),
      _ && q("7aAZDGtTJl", "Crypto Error", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error("Error sending event 'Crypto Error': " + i[0].message);
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Crypto Error",
          n,
          "7aAZDGtTJl",
          "b2e0c4ae1434bc447ad5951830baf9853b77d97e350f70849babb60cb026e5ec"
        ),
      V.logEvent("Crypto Error", Object.assign({}, s)));
}
function pw(t) {
  let e = [];
  t.optionAsMeta !== void 0 && t.optionAsMeta !== null
    ? e.push({ id: "quzA-qa5qB", name: "OptionAsMeta", value: t.optionAsMeta })
    : e.push({ id: "quzA-qa5qB", name: "OptionAsMeta", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "4HvSEgFEyD",
          "b35777c49c4634495fa3e7804cc9149c46c16e7be80915bbc3dba2e96799746a",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Option as Meta Changed", n, a),
      _ && q("4HvSEgFEyD", "Option as Meta Changed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Option as Meta Changed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Option as Meta Changed",
          n,
          "4HvSEgFEyD",
          "b35777c49c4634495fa3e7804cc9149c46c16e7be80915bbc3dba2e96799746a"
        ),
      V.logEvent("Option as Meta Changed", Object.assign({}, s)));
}
function gx(t) {
  let e = [];
  e.push({
    id: "4RAzf2u5DV",
    name: "PortForwardingFormType",
    value: t.portForwardingFormType,
  }),
    e.push({
      id: "axjLqWrW3",
      name: "NewPortForwardingLocation",
      value: t.newPortForwardingLocation,
    }),
    e.push({
      id: "vsXVGIjJfk",
      name: "PortForwardingType",
      value: t.portForwardingType,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "0pzgLeQLg4",
          "509cfc2b6fee5a678a5aa7fb184b57d8a051488b7bc9d489ed269767dd23939f",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("New Port Forwarding Rule Button Pressed", n, a),
      _ &&
        q("0pzgLeQLg4", "New Port Forwarding Rule Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'New Port Forwarding Rule Button Pressed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "New Port Forwarding Rule Button Pressed",
          n,
          "0pzgLeQLg4",
          "509cfc2b6fee5a678a5aa7fb184b57d8a051488b7bc9d489ed269767dd23939f"
        ),
      V.logEvent(
        "New Port Forwarding Rule Button Pressed",
        Object.assign({}, s)
      ));
}
function vx() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "m0fm_KJ6fF",
          "3132ec3305e4c876c78a26b207173aa38faa60c67fa8e3c76f1d16d8d4be7c29",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("New Port Forwarding Rule Created", e, r),
      _ && q("m0fm_KJ6fF", "New Port Forwarding Rule Created", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'New Port Forwarding Rule Created': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "New Port Forwarding Rule Created",
          e,
          "m0fm_KJ6fF",
          "3132ec3305e4c876c78a26b207173aa38faa60c67fa8e3c76f1d16d8d4be7c29"
        ),
      V.logEvent("New Port Forwarding Rule Created", Object.assign({}, a)));
}
function _x(t) {
  let e = [];
  e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [];
  t.premiumToTeamAppExperiment !== void 0 &&
  t.premiumToTeamAppExperiment !== null
    ? r.push({
        id: "TNUDtcXrEE",
        name: "PremiumToTeamAppExperiment",
        value: t.premiumToTeamAppExperiment,
      })
    : r.push({
        id: "TNUDtcXrEE",
        name: "PremiumToTeamAppExperiment",
        value: null,
      });
  let a = P(r);
  if (h !== "prod" || _) {
    let o = [];
    if (
      ((o = o.concat(le(b))),
      (o = o.concat(ce(E))),
      v ||
        W(
          h,
          "PNseUXkPYd",
          "459bae2b3589cca5ff2534b2e6ae72343000ec730855a977a32d242ba2187660",
          o.map((u) =>
            Object.assign(
              {},
              {
                tag: u.tag,
                propertyId: u.propertyId,
                additionalProperties: u.additionalProperties,
                actualType: u.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Learn More About Team Button Pressed", n, a),
      _ && q("PNseUXkPYd", "Learn More About Team Button Pressed", o, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (o.length !== 0)
        throw new Error(
          "Error sending event 'Learn More About Team Button Pressed': " +
            o[0].message
        );
    } else
      o.forEach(function (u) {
        console[$ || "error"]("[avo] " + u.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts;
  let i = { ...a };
  v ||
    (w != null &&
      w._avoFunctionTrackSchemaFromEvent(
        "Learn More About Team Button Pressed",
        n,
        "PNseUXkPYd",
        "459bae2b3589cca5ff2534b2e6ae72343000ec730855a977a32d242ba2187660"
      ),
    V.setUserProperties(Object.assign({}, i)),
    V.logEvent("Learn More About Team Button Pressed", Object.assign({}, s)));
}
function bx(t) {
  let e = [];
  t.promoType !== void 0 && t.promoType !== null
    ? e.push({ id: "5wNDwJ-3K3", name: "PromoType", value: t.promoType })
    : e.push({ id: "5wNDwJ-3K3", name: "PromoType", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "JwxPNn3mfp",
          "6359ffa9bc9edadfc47819b74217492122bbba09a01db765db1abfe1c678fc55",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Menu Banner Dismissed", n, a),
      _ && q("JwxPNn3mfp", "Menu Banner Dismissed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Menu Banner Dismissed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Menu Banner Dismissed",
          n,
          "JwxPNn3mfp",
          "6359ffa9bc9edadfc47819b74217492122bbba09a01db765db1abfe1c678fc55"
        ),
      V.logEvent("Menu Banner Dismissed", Object.assign({}, s)));
}
function Ex(t) {
  let e = [];
  e.push({
    id: "vo76VoR02V",
    name: "AutocompleteState",
    value: t.autocompleteState,
  }),
    e.push({
      id: "JfertE6mM",
      name: "AutocompleteType",
      value: t.autocompleteType,
    }),
    t.connectionID !== void 0 && t.connectionID !== null
      ? e.push({
          id: "LtX0SIqFoB",
          name: "ConnectionID",
          value: t.connectionID,
        })
      : e.push({ id: "LtX0SIqFoB", name: "ConnectionID", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "KAg8tFGW-0",
          "0e2f9c4899f534a6a9cd46dba7fcf8fc974e6e87535eb721e4a3913863192a3f",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Autocomplete Setting Changed", n, a),
      _ && q("KAg8tFGW-0", "Autocomplete Setting Changed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Autocomplete Setting Changed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Autocomplete Setting Changed",
          n,
          "KAg8tFGW-0",
          "0e2f9c4899f534a6a9cd46dba7fcf8fc974e6e87535eb721e4a3913863192a3f"
        ),
      V.logEvent("Autocomplete Setting Changed", Object.assign({}, s)));
}
function vne(t) {
  let e = [];
  e.push({ id: "DpNYtUHSDj", name: "ExperimentName", value: t.experimentName }),
    e.push({
      id: "XmNQOflo-y",
      name: "iOSExperimentVariant",
      value: t.iOsExperimentVariant,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [];
  t.tryPremiumExperiment !== void 0 && t.tryPremiumExperiment !== null
    ? r.push({
        id: "wCcrwwKN_S",
        name: "TryPremiumExperiment",
        value: t.tryPremiumExperiment,
      })
    : r.push({ id: "wCcrwwKN_S", name: "TryPremiumExperiment", value: null }),
    t.freeToTeamAppExperiment !== void 0 && t.freeToTeamAppExperiment !== null
      ? r.push({
          id: "0WpQ43mJOT",
          name: "FreeToTeamAppExperiment",
          value: t.freeToTeamAppExperiment,
        })
      : r.push({
          id: "0WpQ43mJOT",
          name: "FreeToTeamAppExperiment",
          value: null,
        }),
    t.premiumToTeamAppExperiment !== void 0 &&
    t.premiumToTeamAppExperiment !== null
      ? r.push({
          id: "TNUDtcXrEE",
          name: "PremiumToTeamAppExperiment",
          value: t.premiumToTeamAppExperiment,
        })
      : r.push({
          id: "TNUDtcXrEE",
          name: "PremiumToTeamAppExperiment",
          value: null,
        }),
    t.trialExpiredToPremiumExperiment !== void 0 &&
    t.trialExpiredToPremiumExperiment !== null
      ? r.push({
          id: "qrBovSPM2D",
          name: "TrialExpiredToPremiumExperiment",
          value: t.trialExpiredToPremiumExperiment,
        })
      : r.push({
          id: "qrBovSPM2D",
          name: "TrialExpiredToPremiumExperiment",
          value: null,
        }),
    t.crossDeviceActivationExperiment !== void 0 &&
    t.crossDeviceActivationExperiment !== null
      ? r.push({
          id: "kqxcHnLF5D",
          name: "CrossDeviceActivationExperiment",
          value: t.crossDeviceActivationExperiment,
        })
      : r.push({
          id: "kqxcHnLF5D",
          name: "CrossDeviceActivationExperiment",
          value: null,
        }),
    t.passwordStrengthExperiment !== void 0 &&
    t.passwordStrengthExperiment !== null
      ? r.push({
          id: "AJs1Fs8Fw4",
          name: "PasswordStrengthExperiment",
          value: t.passwordStrengthExperiment,
        })
      : r.push({
          id: "AJs1Fs8Fw4",
          name: "PasswordStrengthExperiment",
          value: null,
        }),
    t.freeToPremiumExperiment !== void 0 && t.freeToPremiumExperiment !== null
      ? r.push({
          id: "yTXJOxIJCo",
          name: "FreeToPremiumExperiment",
          value: t.freeToPremiumExperiment,
        })
      : r.push({
          id: "yTXJOxIJCo",
          name: "FreeToPremiumExperiment",
          value: null,
        }),
    t.freeToTrialExperiment !== void 0 && t.freeToTrialExperiment !== null
      ? r.push({
          id: "6Cil89Ti_z",
          name: "FreeToTrialExperiment",
          value: t.freeToTrialExperiment,
        })
      : r.push({
          id: "6Cil89Ti_z",
          name: "FreeToTrialExperiment",
          value: null,
        }),
    t.onboardingExperiment !== void 0 && t.onboardingExperiment !== null
      ? r.push({
          id: "2rZXKyUv2",
          name: "OnboardingExperiment",
          value: t.onboardingExperiment,
        })
      : r.push({ id: "2rZXKyUv2", name: "OnboardingExperiment", value: null });
  let a = P(r);
  if (h !== "prod" || _) {
    let o = [];
    if (
      ((o = o.concat(le(b))),
      (o = o.concat(ce(E))),
      v ||
        W(
          h,
          "IPcHVacftj",
          "d109d670bcb66746b6b03b1c217d8ff7560b84e7934ee0575a5698fe9922e1aa",
          o.map((u) =>
            Object.assign(
              {},
              {
                tag: u.tag,
                propertyId: u.propertyId,
                additionalProperties: u.additionalProperties,
                actualType: u.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Experiment Started", n, a),
      _ && q("IPcHVacftj", "Experiment Started", o, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (o.length !== 0)
        throw new Error(
          "Error sending event 'Experiment Started': " + o[0].message
        );
    } else
      o.forEach(function (u) {
        console[$ || "error"]("[avo] " + u.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts;
  let i = { ...a };
  v ||
    (w != null &&
      w._avoFunctionTrackSchemaFromEvent(
        "Experiment Started",
        n,
        "IPcHVacftj",
        "d109d670bcb66746b6b03b1c217d8ff7560b84e7934ee0575a5698fe9922e1aa"
      ),
    V.setUserProperties(Object.assign({}, i)),
    V.logEvent("Experiment Started", Object.assign({}, s)));
}
function Tx(t) {
  let e = [];
  e.push({
    id: "yazyYoYkq",
    name: "KeychainItemLocation",
    value: t.keychainItemLocation,
  }),
    e.push({ id: "u1WQcoOF-", name: "KeySource", value: t.keySource }),
    e.push({ id: "-Z42kquDH", name: "KeychainItem", value: t.keychainItem }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [];
  t.sepkeys !== void 0 && t.sepkeys !== null
    ? r.push({ id: "P_CE4kdFW8", name: "SEPKeys", value: t.sepkeys })
    : r.push({ id: "P_CE4kdFW8", name: "SEPKeys", value: null }),
    r.push({ id: "QqbeHQnj5", name: "Identities", value: t.identities }),
    r.push({ id: "C-ALvHBy4", name: "Keys", value: t.keys }),
    r.push({ id: "oghxwszWAr", name: "Certificates", value: t.certificates }),
    t.windowsHelloKeys !== void 0 && t.windowsHelloKeys !== null
      ? r.push({
          id: "Rai_eXtiD",
          name: "WindowsHelloKeys",
          value: t.windowsHelloKeys,
        })
      : r.push({ id: "Rai_eXtiD", name: "WindowsHelloKeys", value: null });
  let a = P(r);
  if (h !== "prod" || _) {
    let o = [];
    if (
      ((o = o.concat(le(b))),
      (o = o.concat(ce(E))),
      v ||
        W(
          h,
          "cmnBUmhLGq",
          "da9b80135eb85fdde70b5b46e4a80ff560936e8c86d63d46bf86691622085255",
          o.map((u) =>
            Object.assign(
              {},
              {
                tag: u.tag,
                propertyId: u.propertyId,
                additionalProperties: u.additionalProperties,
                actualType: u.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Keychain Item Created", n, a),
      _ && q("cmnBUmhLGq", "Keychain Item Created", o, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (o.length !== 0)
        throw new Error(
          "Error sending event 'Keychain Item Created': " + o[0].message
        );
    } else
      o.forEach(function (u) {
        console[$ || "error"]("[avo] " + u.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts;
  let i = { ...a };
  v ||
    (w != null &&
      w._avoFunctionTrackSchemaFromEvent(
        "Keychain Item Created",
        n,
        "cmnBUmhLGq",
        "da9b80135eb85fdde70b5b46e4a80ff560936e8c86d63d46bf86691622085255"
      ),
    V.setUserProperties(Object.assign({}, i)),
    V.logEvent("Keychain Item Created", Object.assign({}, s)));
}
function wx(t) {
  let e = [];
  e.push({
    id: "QukBAObz_",
    name: "CreateGroupOrigin",
    value: t.createGroupOrigin,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "XRFTg4b8L6",
          "54399380a7640e53f8e9868b381297f0dfc132620fad4f437b5fc7a3071ac25c",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("New Group Button Pressed", n, a),
      _ && q("XRFTg4b8L6", "New Group Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'New Group Button Pressed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "New Group Button Pressed",
          n,
          "XRFTg4b8L6",
          "54399380a7640e53f8e9868b381297f0dfc132620fad4f437b5fc7a3071ac25c"
        ),
      V.logEvent("New Group Button Pressed", Object.assign({}, s)));
}
function Px(t) {
  let e = [];
  t.eventTeamRole !== void 0 && t.eventTeamRole !== null
    ? e.push({ id: "6LKqiSL8zD", name: "TeamRole", value: t.eventTeamRole })
    : e.push({ id: "6LKqiSL8zD", name: "TeamRole", value: null }),
    e.push({ id: "OPNqNxEuxS", name: "SharedEntity", value: t.isSharedEntity }),
    t.cloudIntegration !== void 0 && t.cloudIntegration !== null
      ? e.push({
          id: "9KGA7NDbUO",
          name: "CloudIntegration",
          value: t.cloudIntegration,
        })
      : e.push({ id: "9KGA7NDbUO", name: "CloudIntegration", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "2DPY9FG3-l",
          "ecf132031846dd13780834a2c0bc77f300e830a9488db5656b0116476970b9d8",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("New Group Created", n, a),
      _ && q("2DPY9FG3-l", "New Group Created", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'New Group Created': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "New Group Created",
          n,
          "2DPY9FG3-l",
          "ecf132031846dd13780834a2c0bc77f300e830a9488db5656b0116476970b9d8"
        ),
      V.logEvent("New Group Created", Object.assign({}, s)));
}
function Ix() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "32D8ne_Ezv",
          "3c081b999138844626db2c74726ad706f50b507aed38ab081ee173ffc30d8815",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Team Promotion Dismissed", e, r),
      _ && q("32D8ne_Ezv", "Team Promotion Dismissed", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Team Promotion Dismissed': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Team Promotion Dismissed",
          e,
          "32D8ne_Ezv",
          "3c081b999138844626db2c74726ad706f50b507aed38ab081ee173ffc30d8815"
        ),
      V.logEvent("Team Promotion Dismissed", Object.assign({}, a)));
}
function Cx(t) {
  let e = [];
  e.push({
    id: "votK3i61Xp",
    name: "ImportButtonLocation",
    value: t.importButtonLocation,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "bULP-pE2Wp",
          "ebe9f9b7de479544e98931d8bc738304c947d2484414e92bb67b08231618fb8c",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Import Button Pressed", n, a),
      _ && q("bULP-pE2Wp", "Import Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Import Button Pressed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Import Button Pressed",
          n,
          "bULP-pE2Wp",
          "ebe9f9b7de479544e98931d8bc738304c947d2484414e92bb67b08231618fb8c"
        ),
      V.logEvent("Import Button Pressed", Object.assign({}, s)));
}
function Ax(t) {
  let e = [];
  e.push({
    id: "tdIgKNAqB7",
    name: "NumberOfImportedHosts",
    value: t.numberOfImportedHosts,
  }),
    e.push({
      id: "uIoe8i7qon",
      name: "NumberOfImportedPortForwardingRules",
      value: t.numberOfImportedPortForwardingRules,
    }),
    e.push({
      id: "rllMnGbmIk",
      name: "NumberOfImportedKeys",
      value: t.numberOfImportedKeys,
    }),
    e.push({
      id: "uqspTe_rv",
      name: "NumberOfImportedSnippets",
      value: t.numberOfImportedSnippets,
    }),
    e.push({
      id: "q0t-YWVHHZ",
      name: "NumberOfImportedGroups",
      value: t.numberOfImportedGroups,
    }),
    e.push({
      id: "j1eB4OA5y",
      name: "NumberOfIgnoredKeys",
      value: t.numberOfIgnoredKeys,
    }),
    e.push({
      id: "w-ySgNoi-",
      name: "NumberOfIgnoredSubconfigs",
      value: t.numberOfIgnoredSubconfigs,
    }),
    e.push({ id: "2Lf-80Nr95", name: "ImportOrigin", value: t.importOrigin }),
    t.importSource !== void 0 && t.importSource !== null
      ? e.push({
          id: "xmt8-f0SMH",
          name: "ImportSource",
          value: t.importSource,
        })
      : e.push({ id: "xmt8-f0SMH", name: "ImportSource", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "BVIgnmr7Ka",
          "a2337ef84090a8febe04d50ee77de087ac870b56387d103c3f9ee38bef97dbe5",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Import Completed", n, a),
      _ && q("BVIgnmr7Ka", "Import Completed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Import Completed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Import Completed",
          n,
          "BVIgnmr7Ka",
          "a2337ef84090a8febe04d50ee77de087ac870b56387d103c3f9ee38bef97dbe5"
        ),
      V.logEvent("Import Completed", Object.assign({}, s)));
}
function Ox(t) {
  let e = [];
  e.push({
    id: "ZJRma0YXNL",
    name: "ImportFailReason",
    value: t.importFailReason,
  }),
    e.push({ id: "vAfcgSvge", name: "FileExtension", value: t.fileExtension }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "u9bPB1sgdE",
          "3f1a844f6c3774d58d60b24159f92edadbbd41475b729f1034d1c31c445bb714",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Import Failed", n, a),
      _ && q("u9bPB1sgdE", "Import Failed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error("Error sending event 'Import Failed': " + i[0].message);
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Import Failed",
          n,
          "u9bPB1sgdE",
          "3f1a844f6c3774d58d60b24159f92edadbbd41475b729f1034d1c31c445bb714"
        ),
      V.logEvent("Import Failed", Object.assign({}, s)));
}
function Hx() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "yc-c_quzKV",
          "b37fa11739a96d7bc37d95a9f70fc192b6def01abdd40a39c266b9b29be81ebc",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Onboarding Import Screen Dismissed", e, r),
      _ && q("yc-c_quzKV", "Onboarding Import Screen Dismissed", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Onboarding Import Screen Dismissed': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Onboarding Import Screen Dismissed",
          e,
          "yc-c_quzKV",
          "b37fa11739a96d7bc37d95a9f70fc192b6def01abdd40a39c266b9b29be81ebc"
        ),
      V.logEvent("Onboarding Import Screen Dismissed", Object.assign({}, a)));
}
function Nx() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "gEZPcNOWjo",
          "fd44116d5b89e72d3b4fc79d8f08f7a76635d0ed4e76a8836cea7899ed152454",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Team Private Key Generated", e, r),
      _ && q("gEZPcNOWjo", "Team Private Key Generated", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Team Private Key Generated': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Team Private Key Generated",
          e,
          "gEZPcNOWjo",
          "fd44116d5b89e72d3b4fc79d8f08f7a76635d0ed4e76a8836cea7899ed152454"
        ),
      V.logEvent("Team Private Key Generated", Object.assign({}, a)));
}
function Rx() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "kOw3IuO-bs",
          "35196eb205ca3036dff3ef8e9bc2fe3b87979cfa449ec1efb0fcfa7bd792cc30",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Personal Key Set Generated", e, r),
      _ && q("kOw3IuO-bs", "Personal Key Set Generated", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Personal Key Set Generated': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Personal Key Set Generated",
          e,
          "kOw3IuO-bs",
          "35196eb205ca3036dff3ef8e9bc2fe3b87979cfa449ec1efb0fcfa7bd792cc30"
        ),
      V.logEvent("Personal Key Set Generated", Object.assign({}, a)));
}
function kx(t) {
  let e = [];
  e.push({ id: "1W4Pysy66", name: "TeamMemberID", value: t.teamMemberID }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "577IuMd4OP",
          "5bb07342672d311969f667913d1dc9a5bb67061ecb9a8103beb06d6827db7346",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Team Private Key Encrypted", n, a),
      _ && q("577IuMd4OP", "Team Private Key Encrypted", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Team Private Key Encrypted': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Team Private Key Encrypted",
          n,
          "577IuMd4OP",
          "5bb07342672d311969f667913d1dc9a5bb67061ecb9a8103beb06d6827db7346"
        ),
      V.logEvent("Team Private Key Encrypted", Object.assign({}, s)));
}
function _ne() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "3XR_9CvOiO",
          "c875221b0cd349cdde2e025c4c9f480e8e610a3751b4e271044ace25bfc2c858",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Team Private Key Adopted", e, r),
      _ && q("3XR_9CvOiO", "Team Private Key Adopted", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Team Private Key Adopted': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Team Private Key Adopted",
          e,
          "3XR_9CvOiO",
          "c875221b0cd349cdde2e025c4c9f480e8e610a3751b4e271044ace25bfc2c858"
        ),
      V.logEvent("Team Private Key Adopted", Object.assign({}, a)));
}
function xx(t) {
  let e = [];
  e.push({
    id: "QlNhSybvzD",
    name: "CriticalErrorType",
    value: t.criticalErrorType,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "GrZt4VDPb-",
          "7a41d3b3d659fa5ae2ff8827d74146e29ac4add6bcf19663e7727c8bcc9bd10e",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Critical Error Resolution Screen Opened", n, a),
      _ &&
        q("GrZt4VDPb-", "Critical Error Resolution Screen Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Critical Error Resolution Screen Opened': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Critical Error Resolution Screen Opened",
          n,
          "GrZt4VDPb-",
          "7a41d3b3d659fa5ae2ff8827d74146e29ac4add6bcf19663e7727c8bcc9bd10e"
        ),
      V.logEvent(
        "Critical Error Resolution Screen Opened",
        Object.assign({}, s)
      ));
}
function Lx(t) {
  let e = [];
  e.push({
    id: "QlNhSybvzD",
    name: "CriticalErrorType",
    value: t.criticalErrorType,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "PYWKEn58Lr",
          "7b1d627e566650c9981d245077791086d5de33a2ea67a47027cdfadbf2cfd02d",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Critical Error Resolution Started", n, a),
      _ && q("PYWKEn58Lr", "Critical Error Resolution Started", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Critical Error Resolution Started': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Critical Error Resolution Started",
          n,
          "PYWKEn58Lr",
          "7b1d627e566650c9981d245077791086d5de33a2ea67a47027cdfadbf2cfd02d"
        ),
      V.logEvent("Critical Error Resolution Started", Object.assign({}, s)));
}
function Mx(t) {
  let e = [];
  e.push({ id: "KV_0SzvdI", name: "Source", value: t.from }),
    e.push({ id: "8qh8FC23K", name: "Feature", value: t.feature }),
    e.push({
      id: "LxHTbfjiwj",
      name: "UpgradeToProFunnelID",
      value: t.upgradeToProFunnelID,
    }),
    e.push({ id: "zuSXi5ulk4", name: "Trial", value: t.trial }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "a5PPC14LQw",
          "f8e8dd2f53b05cefd2ae72f2c65f2d6fcf607031cb7bc0ed23c25c59cc07d19d",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Feature Description Screen Opened", n, a),
      _ && q("a5PPC14LQw", "Feature Description Screen Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Feature Description Screen Opened': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Feature Description Screen Opened",
          n,
          "a5PPC14LQw",
          "f8e8dd2f53b05cefd2ae72f2c65f2d6fcf607031cb7bc0ed23c25c59cc07d19d"
        ),
      V.logEvent("Feature Description Screen Opened", Object.assign({}, s)));
}
function Dx(t) {
  let e = [];
  e.push({ id: "1jzIfmU5vH", name: "URLScheme", value: t.urlscheme }),
    e.push({ id: "5S_Dtkz1X", name: "FeatureName", value: t.featureName }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "mGmTs1YhIb",
          "79b708ad958e51b2fb074c3b1b639642436dbc5e01b8d32d28dfd54086eb645e",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Deep Link Handled", n, a),
      _ && q("mGmTs1YhIb", "Deep Link Handled", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Deep Link Handled': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Deep Link Handled",
          n,
          "mGmTs1YhIb",
          "79b708ad958e51b2fb074c3b1b639642436dbc5e01b8d32d28dfd54086eb645e"
        ),
      V.logEvent("Deep Link Handled", Object.assign({}, s)));
}
function Gx(t) {
  let e = [];
  e.push({
    id: "yazyYoYkq",
    name: "KeychainItemLocation",
    value: t.keychainItemLocation,
  }),
    e.push({ id: "-Z42kquDH", name: "KeychainItem", value: t.keychainItem }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [];
  t.sepkeys !== void 0 && t.sepkeys !== null
    ? r.push({ id: "P_CE4kdFW8", name: "SEPKeys", value: t.sepkeys })
    : r.push({ id: "P_CE4kdFW8", name: "SEPKeys", value: null }),
    r.push({ id: "QqbeHQnj5", name: "Identities", value: t.identities }),
    r.push({ id: "C-ALvHBy4", name: "Keys", value: t.keys }),
    r.push({ id: "oghxwszWAr", name: "Certificates", value: t.certificates }),
    t.windowsHelloKeys !== void 0 && t.windowsHelloKeys !== null
      ? r.push({
          id: "Rai_eXtiD",
          name: "WindowsHelloKeys",
          value: t.windowsHelloKeys,
        })
      : r.push({ id: "Rai_eXtiD", name: "WindowsHelloKeys", value: null });
  let a = P(r);
  if (h !== "prod" || _) {
    let o = [];
    if (
      ((o = o.concat(le(b))),
      (o = o.concat(ce(E))),
      v ||
        W(
          h,
          "G-nUErv8Ar",
          "3e4fba169a25c768bfbfe879a3d073d49b70182093617c5c575cc9cc4397f2ba",
          o.map((u) =>
            Object.assign(
              {},
              {
                tag: u.tag,
                propertyId: u.propertyId,
                additionalProperties: u.additionalProperties,
                actualType: u.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Keychain Item Deleted", n, a),
      _ && q("G-nUErv8Ar", "Keychain Item Deleted", o, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (o.length !== 0)
        throw new Error(
          "Error sending event 'Keychain Item Deleted': " + o[0].message
        );
    } else
      o.forEach(function (u) {
        console[$ || "error"]("[avo] " + u.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts;
  let i = { ...a };
  v ||
    (w != null &&
      w._avoFunctionTrackSchemaFromEvent(
        "Keychain Item Deleted",
        n,
        "G-nUErv8Ar",
        "3e4fba169a25c768bfbfe879a3d073d49b70182093617c5c575cc9cc4397f2ba"
      ),
    V.setUserProperties(Object.assign({}, i)),
    V.logEvent("Keychain Item Deleted", Object.assign({}, s)));
}
function Fx(t) {
  let e = [];
  e.push({ id: "QPo4oqHA9", name: "Leaked", value: t.leaked }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "AXdUDnSZvo",
          "3e16088e6a2032a760755948dacf50d818bcffbe4b9ef607f3941ec41674bdb2",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Password Checked with HIBP", n, a),
      _ && q("AXdUDnSZvo", "Password Checked with HIBP", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Password Checked with HIBP': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Password Checked with HIBP",
          n,
          "AXdUDnSZvo",
          "3e16088e6a2032a760755948dacf50d818bcffbe4b9ef607f3941ec41674bdb2"
        ),
      V.logEvent("Password Checked with HIBP", Object.assign({}, s)));
}
function hw(t) {
  let e = [];
  e.push({
    id: "aNAQ5U-kwi",
    name: "TerminalSearchSource",
    value: t.terminalSearchSource,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "UUzvlWldbx",
          "470fc4941f5295e1fc2b111b577317abb3fe92dbc659e6d3aef23489bef05c88",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Terminal Search Opened", n, a),
      _ && q("UUzvlWldbx", "Terminal Search Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Terminal Search Opened': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Terminal Search Opened",
          n,
          "UUzvlWldbx",
          "470fc4941f5295e1fc2b111b577317abb3fe92dbc659e6d3aef23489bef05c88"
        ),
      V.logEvent("Terminal Search Opened", Object.assign({}, s)));
}
function Ux() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "7SceQvfKCp",
          "d3dff78f6c73efc9d4fa997057175cd20c902c3ac409e26cc782762c1f12ade8",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Terminal Search Executed", e, r),
      _ && q("7SceQvfKCp", "Terminal Search Executed", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Terminal Search Executed': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Terminal Search Executed",
          e,
          "7SceQvfKCp",
          "d3dff78f6c73efc9d4fa997057175cd20c902c3ac409e26cc782762c1f12ade8"
        ),
      V.logEvent("Terminal Search Executed", Object.assign({}, a)));
}
function Kx(t) {
  let e = [];
  t.importSource !== void 0 && t.importSource !== null
    ? e.push({ id: "xmt8-f0SMH", name: "ImportSource", value: t.importSource })
    : e.push({ id: "xmt8-f0SMH", name: "ImportSource", value: null }),
    e.push({ id: "2Lf-80Nr95", name: "ImportOrigin", value: t.importOrigin }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "P6Fup3OE0j",
          "94153eba65146ae8ff901b63abc135caef8ff52578788a9c5285e30da9691b82",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Import Started", n, a),
      _ && q("P6Fup3OE0j", "Import Started", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Import Started': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Import Started",
          n,
          "P6Fup3OE0j",
          "94153eba65146ae8ff901b63abc135caef8ff52578788a9c5285e30da9691b82"
        ),
      V.logEvent("Import Started", Object.assign({}, s)));
}
function Bx(t) {
  let e = [];
  e.push({
    id: "OPLwDStnF",
    name: "CreateAccountScreenType",
    value: t.createAccountScreenType,
  }),
    e.push({
      id: "LxHTbfjiwj",
      name: "UpgradeToProFunnelID",
      value: t.upgradeToProFunnelID,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "1afQXJT_I",
          "0eea9f2771edc6ddcbb24e83e002a9f5d1ccca3b92593f7e83d983162618148a",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Create Account Screen Opened", n, a),
      _ && q("1afQXJT_I", "Create Account Screen Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Create Account Screen Opened': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Create Account Screen Opened",
          n,
          "1afQXJT_I",
          "0eea9f2771edc6ddcbb24e83e002a9f5d1ccca3b92593f7e83d983162618148a"
        ),
      V.logEvent("Create Account Screen Opened", Object.assign({}, s)));
}
function fw(t) {
  let e = [];
  e.push({ id: "640FZWTj1q", name: "FirstTime", value: t.firstTime }),
    e.push({
      id: "MlG2vzvEz",
      name: "MaxTerminalTabs",
      value: t.maxTerminalTabs,
    }),
    e.push({
      id: "qzdBPWWR7",
      name: "LastSessionDuration",
      value: t.lastSessionDuration,
    }),
    e.push({
      id: "uMt0kpdg7",
      name: "TotalTerminalTabs",
      value: t.totalTerminalTabs,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(yUe(t.lastSessionDuration))),
      (i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "_8l1mU5YYm",
          "4aae18d6593ecf92ea8a378f10dbe6abe90d0bd67965d2c80c94b285d144da64",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("App Started", n, a),
      _ && q("_8l1mU5YYm", "App Started", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error("Error sending event 'App Started': " + i[0].message);
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "App Started",
          n,
          "_8l1mU5YYm",
          "4aae18d6593ecf92ea8a378f10dbe6abe90d0bd67965d2c80c94b285d144da64"
        ),
      V.logEvent("App Started", Object.assign({}, s)));
}
function Vx(t) {
  let e = [];
  e.push({ id: "LtX0SIqFoB", name: "ConnectionID", value: t.connectionID }),
    t.sessionLogSize !== void 0 && t.sessionLogSize !== null
      ? e.push({
          id: "1zMnR0PgZ",
          name: "SessionLogSize",
          value: t.sessionLogSize,
        })
      : e.push({ id: "1zMnR0PgZ", name: "SessionLogSize", value: null }),
    t.connectionOrigin !== void 0 && t.connectionOrigin !== null
      ? e.push({
          id: "53c_AHgLyJ",
          name: "ConnectionOrigin",
          value: t.connectionOrigin,
        })
      : e.push({ id: "53c_AHgLyJ", name: "ConnectionOrigin", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "g-_H0sJ7Nw",
          "40e4e33d4ec2d95f92d93008e8c08a9056a33b222d06c80801d87ec152749e4d",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Connection Closed", n, a),
      _ && q("g-_H0sJ7Nw", "Connection Closed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Connection Closed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Connection Closed",
          n,
          "g-_H0sJ7Nw",
          "40e4e33d4ec2d95f92d93008e8c08a9056a33b222d06c80801d87ec152749e4d"
        ),
      V.logEvent("Connection Closed", Object.assign({}, s)));
}
function jx(t) {
  let e = [];
  e.push({
    id: "mPalehkskc",
    name: "Location",
    value: t.sharingButtonLocation,
  }),
    e.push({ id: "SA2XkdmuzJN", name: "SharedEntity", value: t.sharedEntity }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "1dJvJQdl2x",
          "52a65af6f9cd404a36aeb52eb01d383fa1de13edccba76059031ceb9afccffc1",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Share Button Pressed", n, a),
      _ && q("1dJvJQdl2x", "Share Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Share Button Pressed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Share Button Pressed",
          n,
          "1dJvJQdl2x",
          "52a65af6f9cd404a36aeb52eb01d383fa1de13edccba76059031ceb9afccffc1"
        ),
      V.logEvent("Share Button Pressed", Object.assign({}, s)));
}
function zx(t) {
  let e = [];
  e.push({
    id: "riRNOJmR8b",
    name: "CreateTeamWizardStep",
    value: t.createTeamWizardStep,
  }),
    t.trial !== void 0 && t.trial !== null
      ? e.push({ id: "zuSXi5ulk4", name: "Trial", value: t.trial })
      : e.push({ id: "zuSXi5ulk4", name: "Trial", value: null }),
    e.push({ id: "8gtfydWW0", name: "OpenedFrom", value: t.openedFrom }),
    e.push({
      id: "doMi5lwcT0",
      name: "TeamTrialFunnelID",
      value: t.teamTrialFunnelID,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "NjJ4FEIYpM",
          "6a2e378e674d862db22ee0c7bcf2359c54e852a5bfcb555ce415fba325b90647",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Create-Team Wizard View Opened", n, a),
      _ && q("NjJ4FEIYpM", "Create-Team Wizard View Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Create-Team Wizard View Opened': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Create-Team Wizard View Opened",
          n,
          "NjJ4FEIYpM",
          "6a2e378e674d862db22ee0c7bcf2359c54e852a5bfcb555ce415fba325b90647"
        ),
      V.logEvent("Create-Team Wizard View Opened", Object.assign({}, s)));
}
function $x(t) {
  let e = [];
  e.push({ id: "mjndXzzBdc", name: "Origin", value: t.newWindowOrigin }),
    e.push({ id: "ZIiW1WgaSr", name: "WindowsCount", value: t.windowsCount }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "zqKc62bvij",
          "96a1ac53371951d768c778ec8af3cd68b697afe20cccf1983544fa72dcb81fa4",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("New Main Window Opened", n, a),
      _ && q("zqKc62bvij", "New Main Window Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'New Main Window Opened': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "New Main Window Opened",
          n,
          "zqKc62bvij",
          "96a1ac53371951d768c778ec8af3cd68b697afe20cccf1983544fa72dcb81fa4"
        ),
      V.logEvent("New Main Window Opened", Object.assign({}, s)));
}
function bne(t) {
  let e = [];
  t.tipType !== void 0 && t.tipType !== null
    ? e.push({ id: "XOdZOsJrKw", name: "TipType", value: t.tipType })
    : e.push({ id: "XOdZOsJrKw", name: "TipType", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "vzU2jneLeI",
          "c889bce4a41c92b614a4ed0ae421f444c3dc52d62d045ce355c32740de6f211d",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Daily Tip Pressed", n, a),
      _ && q("vzU2jneLeI", "Daily Tip Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Daily Tip Pressed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Daily Tip Pressed",
          n,
          "vzU2jneLeI",
          "c889bce4a41c92b614a4ed0ae421f444c3dc52d62d045ce355c32740de6f211d"
        ),
      V.logEvent("Daily Tip Pressed", Object.assign({}, s)));
}
function Wx(t) {
  let e = [];
  e.push({ id: "B6I4Af3CH3", name: "OnScreen", value: t.onScreen }),
    t.openedVia !== void 0 && t.openedVia !== null
      ? e.push({ id: "o9ERIEC9Y", name: "OpenedVia", value: t.openedVia })
      : e.push({ id: "o9ERIEC9Y", name: "OpenedVia", value: null }),
    t.wizardID !== void 0 && t.wizardID !== null
      ? e.push({ id: "MGexS9ePV", name: "WizardID", value: t.wizardID })
      : e.push({ id: "MGexS9ePV", name: "WizardID", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "5_ZdWFXpow",
          "04b11b6147005e2da8e638a8fab40530c748d660f15e45dbf628c69ff8bbbd1d",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Context Menu Opened", n, a),
      _ && q("5_ZdWFXpow", "Context Menu Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Context Menu Opened': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Context Menu Opened",
          n,
          "5_ZdWFXpow",
          "04b11b6147005e2da8e638a8fab40530c748d660f15e45dbf628c69ff8bbbd1d"
        ),
      V.logEvent("Context Menu Opened", Object.assign({}, s)));
}
function qx(t) {
  let e = [];
  e.push({ id: "jcNobwqlXN", name: "HelpButtonType", value: t.helpButtonType }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "I4vx1LvxXD",
          "122a6fa162dd9a061a89c0d893ffb610af96fba7bd1722b6cab5be0d8e6ea4b7",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Help Button Pressed", n, a),
      _ && q("I4vx1LvxXD", "Help Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Help Button Pressed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.ButtonType = s.HelpButtonType),
    delete s.HelpButtonType,
    (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Help Button Pressed",
          n,
          "I4vx1LvxXD",
          "122a6fa162dd9a061a89c0d893ffb610af96fba7bd1722b6cab5be0d8e6ea4b7"
        ),
      V.logEvent("Help Button Pressed", Object.assign({}, s)));
}
function Yx(t) {
  let e = [];
  e.push({ id: "J4VlcT3plg", name: "Layout", value: t.layoutType }),
    e.push({ id: "B6I4Af3CH3", name: "OnScreen", value: t.onScreen }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "K0ZzLSevC8",
          "da7ec3b3475795b5940b13bdf786fa1e686aab96359703a9204234e22ffedfd5",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Screen Layout Changed", n, a),
      _ && q("K0ZzLSevC8", "Screen Layout Changed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Screen Layout Changed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Screen Layout Changed",
          n,
          "K0ZzLSevC8",
          "da7ec3b3475795b5940b13bdf786fa1e686aab96359703a9204234e22ffedfd5"
        ),
      V.logEvent("Screen Layout Changed", Object.assign({}, s)));
}
function Xx(t) {
  let e = [];
  e.push({
    id: "h2glTAgvbF",
    name: "RequestedProperty",
    value: t.requestedConnectionProperty,
  }),
    e.push({ id: "LtX0SIqFoB", name: "ConnectionID", value: t.connectionID }),
    t.cloudIntegration !== void 0 && t.cloudIntegration !== null
      ? e.push({
          id: "9KGA7NDbUO",
          name: "CloudIntegration",
          value: t.cloudIntegration,
        })
      : e.push({ id: "9KGA7NDbUO", name: "CloudIntegration", value: null }),
    t.sessionAuthMethod !== void 0 && t.sessionAuthMethod !== null
      ? e.push({
          id: "wU3CN_zRm",
          name: "SessionAuthMethod",
          value: t.sessionAuthMethod,
        })
      : e.push({ id: "wU3CN_zRm", name: "SessionAuthMethod", value: null }),
    t.connectionOrigin !== void 0 && t.connectionOrigin !== null
      ? e.push({
          id: "53c_AHgLyJ",
          name: "ConnectionOrigin",
          value: t.connectionOrigin,
        })
      : e.push({ id: "53c_AHgLyJ", name: "ConnectionOrigin", value: null }),
    t.wizardID !== void 0 && t.wizardID !== null
      ? e.push({ id: "MGexS9ePV", name: "WizardID", value: t.wizardID })
      : e.push({ id: "MGexS9ePV", name: "WizardID", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "EwcXY8vVHJ",
          "f070c4f54d589addc0748f5075c282229c919c7e9471e8577a052b7b242f2429",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Connection Details Requested", n, a),
      _ && q("EwcXY8vVHJ", "Connection Details Requested", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Connection Details Requested': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Connection Details Requested",
          n,
          "EwcXY8vVHJ",
          "f070c4f54d589addc0748f5075c282229c919c7e9471e8577a052b7b242f2429"
        ),
      V.logEvent("Connection Details Requested", Object.assign({}, s)));
}
function Qx() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "3AwASm6QVQ",
          "2235a72fc197f5c6090e67209dbdac737098a9b5160d7c9ae2aae83837d44119",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Logout Warning Screen Opened", e, r),
      _ && q("3AwASm6QVQ", "Logout Warning Screen Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Logout Warning Screen Opened': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Logout Warning Screen Opened",
          e,
          "3AwASm6QVQ",
          "2235a72fc197f5c6090e67209dbdac737098a9b5160d7c9ae2aae83837d44119"
        ),
      V.logEvent("Logout Warning Screen Opened", Object.assign({}, a)));
}
function Jx(t) {
  let e = [];
  e.push({ id: "QaL07rDdEQ", name: "Location", value: t.promotionLocation }),
    e.push({ id: "12Jzh1xxFN", name: "Type", value: t.promotionType }),
    t.trialDaysLeft !== void 0 && t.trialDaysLeft !== null
      ? e.push({
          id: "LnG4vmu6Ew",
          name: "TrialDaysLeft",
          value: t.trialDaysLeft,
        })
      : e.push({ id: "LnG4vmu6Ew", name: "TrialDaysLeft", value: null }),
    t.sideMenuTeamTrialPromoType !== void 0 &&
    t.sideMenuTeamTrialPromoType !== null
      ? e.push({
          id: "JcouUlHi9",
          name: "SideMenuTeamTrialPromoType",
          value: t.sideMenuTeamTrialPromoType,
        })
      : e.push({
          id: "JcouUlHi9",
          name: "SideMenuTeamTrialPromoType",
          value: null,
        }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "WvAGWl2C_3",
          "3a88838627ad45ae51004559089d5fedba121dca236b4941d033675ac7afe3b2",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Promotion Shown", n, a),
      _ && q("WvAGWl2C_3", "Promotion Shown", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Promotion Shown': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Promotion Shown",
          n,
          "WvAGWl2C_3",
          "3a88838627ad45ae51004559089d5fedba121dca236b4941d033675ac7afe3b2"
        ),
      V.logEvent("Promotion Shown", Object.assign({}, s)));
}
function Zx(t) {
  let e = [];
  e.push({ id: "QaL07rDdEQ", name: "Location", value: t.promotionLocation }),
    e.push({ id: "12Jzh1xxFN", name: "Type", value: t.promotionType }),
    t.trialDaysLeft !== void 0 && t.trialDaysLeft !== null
      ? e.push({
          id: "LnG4vmu6Ew",
          name: "TrialDaysLeft",
          value: t.trialDaysLeft,
        })
      : e.push({ id: "LnG4vmu6Ew", name: "TrialDaysLeft", value: null }),
    t.sideMenuTeamTrialPromoType !== void 0 &&
    t.sideMenuTeamTrialPromoType !== null
      ? e.push({
          id: "JcouUlHi9",
          name: "SideMenuTeamTrialPromoType",
          value: t.sideMenuTeamTrialPromoType,
        })
      : e.push({
          id: "JcouUlHi9",
          name: "SideMenuTeamTrialPromoType",
          value: null,
        }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "2fABx-u1_2",
          "6e26e24dac054e0941daf92f0307d14886356bc8881440d80baef704e0cc0186",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Promotion Pressed", n, a),
      _ && q("2fABx-u1_2", "Promotion Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Promotion Pressed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Promotion Pressed",
          n,
          "2fABx-u1_2",
          "6e26e24dac054e0941daf92f0307d14886356bc8881440d80baef704e0cc0186"
        ),
      V.logEvent("Promotion Pressed", Object.assign({}, s)));
}
function eL(t) {
  let e = [];
  e.push({ id: "QaL07rDdEQ", name: "Location", value: t.promotionLocation }),
    e.push({ id: "12Jzh1xxFN", name: "Type", value: t.promotionType }),
    t.trialDaysLeft !== void 0 && t.trialDaysLeft !== null
      ? e.push({
          id: "LnG4vmu6Ew",
          name: "TrialDaysLeft",
          value: t.trialDaysLeft,
        })
      : e.push({ id: "LnG4vmu6Ew", name: "TrialDaysLeft", value: null }),
    t.sideMenuTeamTrialPromoType !== void 0 &&
    t.sideMenuTeamTrialPromoType !== null
      ? e.push({
          id: "JcouUlHi9",
          name: "SideMenuTeamTrialPromoType",
          value: t.sideMenuTeamTrialPromoType,
        })
      : e.push({
          id: "JcouUlHi9",
          name: "SideMenuTeamTrialPromoType",
          value: null,
        }),
    t.dismissForever !== void 0 && t.dismissForever !== null
      ? e.push({
          id: "eX1QBLdyPs",
          name: "DismissForever",
          value: t.dismissForever,
        })
      : e.push({ id: "eX1QBLdyPs", name: "DismissForever", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "Zqz-q870r3",
          "1628c9663625542b74819aba258f86b7cfb0f831a7c676e5e08c7a26156b6245",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Promotion Dismissed", n, a),
      _ && q("Zqz-q870r3", "Promotion Dismissed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Promotion Dismissed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Promotion Dismissed",
          n,
          "Zqz-q870r3",
          "1628c9663625542b74819aba258f86b7cfb0f831a7c676e5e08c7a26156b6245"
        ),
      V.logEvent("Promotion Dismissed", Object.assign({}, s)));
}
function tL(t) {
  let e = [];
  e.push({ id: "OPNqNxEuxS", name: "SharedEntity", value: t.isSharedEntity }),
    e.push({
      id: "Kbgnl4vlhN",
      name: "SnippetCreationSource",
      value: t.snippetCreationSource,
    }),
    e.push({
      id: "pfJnedbZ2m",
      name: "CreatedSnippets",
      value: t.createdSnippets,
    }),
    e.push({ id: "F10rl0OxEL", name: "SnippetLength", value: t.snippetLength }),
    e.push({ id: "Gmn8dg8iFI", name: "SnippetLines", value: t.snippetLines }),
    t.aianalyticsID !== void 0 && t.aianalyticsID !== null
      ? e.push({
          id: "xhalC63i7",
          name: "AIAnalyticsID",
          value: t.aianalyticsID,
        })
      : e.push({ id: "xhalC63i7", name: "AIAnalyticsID", value: null }),
    t.predefinedSnippetPackageID !== void 0 &&
    t.predefinedSnippetPackageID !== null
      ? e.push({
          id: "dWZSKigQm",
          name: "PredefinedSnippetPackageID",
          value: t.predefinedSnippetPackageID,
        })
      : e.push({
          id: "dWZSKigQm",
          name: "PredefinedSnippetPackageID",
          value: null,
        }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [];
  r.push({ id: "pPjLC263t", name: "Snippets", value: t.snippets });
  let a = P(r);
  if (h !== "prod" || _) {
    let o = [];
    if (
      ((o = o.concat(pUe(t.snippetLength))),
      (o = o.concat(fUe(t.snippetLines))),
      (o = o.concat(le(b))),
      (o = o.concat(ce(E))),
      v ||
        W(
          h,
          "V-0Pcxps2y",
          "58ba1627e9ff2641d0185bc1466e96b3e00d36c1dfd01a820795eb95364e2ae6",
          o.map((u) =>
            Object.assign(
              {},
              {
                tag: u.tag,
                propertyId: u.propertyId,
                additionalProperties: u.additionalProperties,
                actualType: u.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("New Snippet Created", n, a),
      _ && q("V-0Pcxps2y", "New Snippet Created", o, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (o.length !== 0)
        throw new Error(
          "Error sending event 'New Snippet Created': " + o[0].message
        );
    } else
      o.forEach(function (u) {
        console[$ || "error"]("[avo] " + u.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts;
  let i = { ...a };
  v ||
    (w != null &&
      w._avoFunctionTrackSchemaFromEvent(
        "New Snippet Created",
        n,
        "V-0Pcxps2y",
        "58ba1627e9ff2641d0185bc1466e96b3e00d36c1dfd01a820795eb95364e2ae6"
      ),
    V.setUserProperties(Object.assign({}, i)),
    V.logEvent("New Snippet Created", Object.assign({}, s)));
}
function nL(t) {
  let e = [];
  e.push({ id: "u_Y9V0HZzU", name: "Source", value: t.snippetSource }),
    e.push({ id: "OPNqNxEuxS", name: "SharedEntity", value: t.isSharedEntity }),
    t.isSharedEntityOwner !== void 0 && t.isSharedEntityOwner !== null
      ? e.push({
          id: "WEcuaha6WC",
          name: "IsSharedEntityOwner",
          value: t.isSharedEntityOwner,
        })
      : e.push({ id: "WEcuaha6WC", name: "IsSharedEntityOwner", value: null }),
    e.push({
      id: "ImJKSbpAvv",
      name: "IsExecutedInMultipleTabs",
      value: t.isExecutedInMultipleTabs,
    }),
    t.snippetPackageID !== void 0 && t.snippetPackageID !== null
      ? e.push({
          id: "ymKyyoK7m0",
          name: "SnippetPackageID",
          value: t.snippetPackageID,
        })
      : e.push({ id: "ymKyyoK7m0", name: "SnippetPackageID", value: null }),
    e.push({
      id: "G6aDlMxTT",
      name: "IsExecutedInSplitView",
      value: t.isExecutedInSplitView,
    }),
    e.push({ id: "r08pzpqtdPz", name: "SnippetID", value: t.snippetID }),
    t.aianalyticsID !== void 0 && t.aianalyticsID !== null
      ? e.push({
          id: "xhalC63i7",
          name: "AIAnalyticsID",
          value: t.aianalyticsID,
        })
      : e.push({ id: "xhalC63i7", name: "AIAnalyticsID", value: null }),
    t.predefinedSnippetPackageID !== void 0 &&
    t.predefinedSnippetPackageID !== null
      ? e.push({
          id: "dWZSKigQm",
          name: "PredefinedSnippetPackageID",
          value: t.predefinedSnippetPackageID,
        })
      : e.push({
          id: "dWZSKigQm",
          name: "PredefinedSnippetPackageID",
          value: null,
        }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(vUe(t.snippetPackageID))),
      (i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "uA4HfKXDre",
          "4a785fc61f3fb620aad4adc5d0c8d95e416ea5f5a54cb8eef80201d2f9b169d3",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Snippet Executed", n, a),
      _ && q("uA4HfKXDre", "Snippet Executed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Snippet Executed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.SharedEntityOwner = s.IsSharedEntityOwner),
    delete s.IsSharedEntityOwner,
    (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Snippet Executed",
          n,
          "uA4HfKXDre",
          "4a785fc61f3fb620aad4adc5d0c8d95e416ea5f5a54cb8eef80201d2f9b169d3"
        ),
      V.logEvent("Snippet Executed", Object.assign({}, s)));
}
function sL(t) {
  let e = [];
  e.push({
    id: "r-iE6RhnE_",
    name: "RemovedSnippets",
    value: t.numberOfRemovedSnippets,
  }),
    t.aianalyticsID !== void 0 && t.aianalyticsID !== null
      ? e.push({
          id: "xhalC63i7",
          name: "AIAnalyticsID",
          value: t.aianalyticsID,
        })
      : e.push({ id: "xhalC63i7", name: "AIAnalyticsID", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [];
  r.push({ id: "pPjLC263t", name: "Snippets", value: t.snippets });
  let a = P(r);
  if (h !== "prod" || _) {
    let o = [];
    if (
      ((o = o.concat(le(b))),
      (o = o.concat(ce(E))),
      v ||
        W(
          h,
          "q08ob72UbU",
          "68c70454a52ff60e833a8e049115354c739f2d276bf649814864f6e882a84e6f",
          o.map((u) =>
            Object.assign(
              {},
              {
                tag: u.tag,
                propertyId: u.propertyId,
                additionalProperties: u.additionalProperties,
                actualType: u.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Snippet Deleted", n, a),
      _ && q("q08ob72UbU", "Snippet Deleted", o, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (o.length !== 0)
        throw new Error(
          "Error sending event 'Snippet Deleted': " + o[0].message
        );
    } else
      o.forEach(function (u) {
        console[$ || "error"]("[avo] " + u.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts;
  let i = { ...a };
  v ||
    (w != null &&
      w._avoFunctionTrackSchemaFromEvent(
        "Snippet Deleted",
        n,
        "q08ob72UbU",
        "68c70454a52ff60e833a8e049115354c739f2d276bf649814864f6e882a84e6f"
      ),
    V.setUserProperties(Object.assign({}, i)),
    V.logEvent("Snippet Deleted", Object.assign({}, s)));
}
function rL(t) {
  let e = [];
  e.push({
    id: "606yMqvAez",
    name: "CreateSnippetOrigin",
    value: t.createSnippetOrigin,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "PBbC18Q-q9",
          "8545c31c5ade475f83c7492619f8b86d562dd88877cd71f14788a3329dd2bf3b",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("New Snippet Button Pressed", n, a),
      _ && q("PBbC18Q-q9", "New Snippet Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'New Snippet Button Pressed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "New Snippet Button Pressed",
          n,
          "PBbC18Q-q9",
          "8545c31c5ade475f83c7492619f8b86d562dd88877cd71f14788a3329dd2bf3b"
        ),
      V.logEvent("New Snippet Button Pressed", Object.assign({}, s)));
}
function aL(t) {
  let e = [];
  e.push({
    id: "I_LZE0F7Al",
    name: "InitiallySelectedPlatform",
    value: t.initiallySelectedPlatform,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "o9kSUIypKO",
          "669d14fa084e7a972f45d6e84545e95c9784420379e3fffad13c168d51ccb288",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Platform Setup Picked", n, a),
      _ && q("o9kSUIypKO", "Platform Setup Picked", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Platform Setup Picked': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Platform Setup Picked",
          n,
          "o9kSUIypKO",
          "669d14fa084e7a972f45d6e84545e95c9784420379e3fffad13c168d51ccb288"
        ),
      V.logEvent("Platform Setup Picked", Object.assign({}, s)));
}
function iL(t) {
  let e = [];
  e.push({ id: "fIRZo1cbTC", name: "ClearAll", value: t.clearAll }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [];
  r.push({ id: "btyOwlRVD", name: "History", value: t.history });
  let a = P(r);
  if (h !== "prod" || _) {
    let o = [];
    if (
      ((o = o.concat(le(b))),
      (o = o.concat(ce(E))),
      v ||
        W(
          h,
          "P8HM8mr9OH",
          "47da15d132a63869294c99cec440c39e6652d5dc5be1688d25bcfa1c22ff7d7f",
          o.map((u) =>
            Object.assign(
              {},
              {
                tag: u.tag,
                propertyId: u.propertyId,
                additionalProperties: u.additionalProperties,
                actualType: u.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("History Item Deleted", n, a),
      _ && q("P8HM8mr9OH", "History Item Deleted", o, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (o.length !== 0)
        throw new Error(
          "Error sending event 'History Item Deleted': " + o[0].message
        );
    } else
      o.forEach(function (u) {
        console[$ || "error"]("[avo] " + u.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts;
  let i = { ...a };
  v ||
    (w != null &&
      w._avoFunctionTrackSchemaFromEvent(
        "History Item Deleted",
        n,
        "P8HM8mr9OH",
        "47da15d132a63869294c99cec440c39e6652d5dc5be1688d25bcfa1c22ff7d7f"
      ),
    V.setUserProperties(Object.assign({}, i)),
    V.logEvent("History Item Deleted", Object.assign({}, s)));
}
function mw(t) {
  let e = [];
  e.push({ id: "1cm1oSV7u4", name: "Action", value: t.bellNotificationAction }),
    t.teamMemberID !== void 0 && t.teamMemberID !== null
      ? e.push({ id: "1W4Pysy66", name: "TeamMemberID", value: t.teamMemberID })
      : e.push({ id: "1W4Pysy66", name: "TeamMemberID", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "1W4CsCPwbX",
          "0f14580cd44df642dfb1d8f3efc5dac58b9369ec6ad858ca653dbafc0ce1893e",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Notification Received", n, a),
      _ && q("1W4CsCPwbX", "Notification Received", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Notification Received': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Notification Received",
          n,
          "1W4CsCPwbX",
          "0f14580cd44df642dfb1d8f3efc5dac58b9369ec6ad858ca653dbafc0ce1893e"
        ),
      V.logEvent("Notification Received", Object.assign({}, s)));
}
function oL() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "9D1M13v_HU",
          "e8b8b6050e1887fb2e7bed6df7a89288111cba5a6bf90ff2c1da63c1f7064b97",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Notification List Screen Opened", e, r),
      _ && q("9D1M13v_HU", "Notification List Screen Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Notification List Screen Opened': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Notification List Screen Opened",
          e,
          "9D1M13v_HU",
          "e8b8b6050e1887fb2e7bed6df7a89288111cba5a6bf90ff2c1da63c1f7064b97"
        ),
      V.logEvent("Notification List Screen Opened", Object.assign({}, a)));
}
function uL(t) {
  let e = [];
  e.push({ id: "1cm1oSV7u4", name: "Action", value: t.bellNotificationAction }),
    e.push({ id: "nDljpbsRUF", name: "Auto", value: t.auto }),
    t.teamMemberID !== void 0 && t.teamMemberID !== null
      ? e.push({ id: "1W4Pysy66", name: "TeamMemberID", value: t.teamMemberID })
      : e.push({ id: "1W4Pysy66", name: "TeamMemberID", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "rCl6j-SQFp",
          "fce64ea4c6814098be0f15a8b8326f8cbfc63c17b802673a1427a60d1fb96aec",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Bell Notification Opened", n, a),
      _ && q("rCl6j-SQFp", "Bell Notification Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Bell Notification Opened': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Bell Notification Opened",
          n,
          "rCl6j-SQFp",
          "fce64ea4c6814098be0f15a8b8326f8cbfc63c17b802673a1427a60d1fb96aec"
        ),
      V.logEvent("Bell Notification Opened", Object.assign({}, s)));
}
function lL(t) {
  let e = [];
  e.push({
    id: "qnIrkBDY3S",
    name: "EncryptionMigrationWizardStep",
    value: t.encryptionMigrationWizardStep,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "976EzGrqCc",
          "62df305f208e461b2c696f63c446dd73cc36c66223db47eeb597c0337456790e",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Encryption Migration Wizard View Opened", n, a),
      _ &&
        q("976EzGrqCc", "Encryption Migration Wizard View Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Encryption Migration Wizard View Opened': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Encryption Migration Wizard View Opened",
          n,
          "976EzGrqCc",
          "62df305f208e461b2c696f63c446dd73cc36c66223db47eeb597c0337456790e"
        ),
      V.logEvent(
        "Encryption Migration Wizard View Opened",
        Object.assign({}, s)
      ));
}
function cL(t) {
  let e = [];
  e.push({ id: "OPNqNxEuxS", name: "SharedEntity", value: t.isSharedEntity }),
    t.eventTeamRole !== void 0 && t.eventTeamRole !== null
      ? e.push({ id: "6LKqiSL8zD", name: "TeamRole", value: t.eventTeamRole })
      : e.push({ id: "6LKqiSL8zD", name: "TeamRole", value: null }),
    e.push({ id: "7znwrvx1F", name: "HostID", value: t.hostID }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "OjoT1E_qmQ",
          "bc2d8c215f8083ab8d8101220291ee4d014be42f80fa173cf19fc0485802fa5f",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Host Deleted", n, a),
      _ && q("OjoT1E_qmQ", "Host Deleted", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error("Error sending event 'Host Deleted': " + i[0].message);
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Host Deleted",
          n,
          "OjoT1E_qmQ",
          "bc2d8c215f8083ab8d8101220291ee4d014be42f80fa173cf19fc0485802fa5f"
        ),
      V.logEvent("Host Deleted", Object.assign({}, s)));
}
function dL(t) {
  let e = [];
  e.push({ id: "OPNqNxEuxS", name: "SharedEntity", value: t.isSharedEntity }),
    t.eventTeamRole !== void 0 && t.eventTeamRole !== null
      ? e.push({ id: "6LKqiSL8zD", name: "TeamRole", value: t.eventTeamRole })
      : e.push({ id: "6LKqiSL8zD", name: "TeamRole", value: null }),
    t.groupID !== void 0 && t.groupID !== null
      ? e.push({ id: "RhQWGFml-1", name: "ID", value: t.groupID })
      : e.push({ id: "RhQWGFml-1", name: "ID", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "X4puJJg8Yd",
          "43721ff4f0cd3c08c4337cb58919bc926335b2f2c3be10d27ea28205b5dc3d89",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Group Deleted", n, a),
      _ && q("X4puJJg8Yd", "Group Deleted", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error("Error sending event 'Group Deleted': " + i[0].message);
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Group Deleted",
          n,
          "X4puJJg8Yd",
          "43721ff4f0cd3c08c4337cb58919bc926335b2f2c3be10d27ea28205b5dc3d89"
        ),
      V.logEvent("Group Deleted", Object.assign({}, s)));
}
function pL(t) {
  let e = [];
  e.push({ id: "OPNqNxEuxS", name: "SharedEntity", value: t.isSharedEntity }),
    t.eventTeamRole !== void 0 && t.eventTeamRole !== null
      ? e.push({ id: "6LKqiSL8zD", name: "TeamRole", value: t.eventTeamRole })
      : e.push({ id: "6LKqiSL8zD", name: "TeamRole", value: null }),
    e.push({ id: "d74LiZiN0BW", name: "IdentityType", value: t.identityType }),
    e.push({
      id: "qkVi6xQuee",
      name: "IdentitySource",
      value: t.identitySource,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "6B7WCtCdai",
          "cd10982675ec6123e7bb2f7bebf082db19b22b78e4fc0c6e426a8f25b24d1f36",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("New Identity Set Up", n, a),
      _ && q("6B7WCtCdai", "New Identity Set Up", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'New Identity Set Up': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "New Identity Set Up",
          n,
          "6B7WCtCdai",
          "cd10982675ec6123e7bb2f7bebf082db19b22b78e4fc0c6e426a8f25b24d1f36"
        ),
      V.logEvent("New Identity Set Up", Object.assign({}, s)));
}
function Ene(t) {
  let e = [];
  t.tipType !== void 0 && t.tipType !== null
    ? e.push({ id: "XOdZOsJrKw", name: "TipType", value: t.tipType })
    : e.push({ id: "XOdZOsJrKw", name: "TipType", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "sU8Mnvlw7",
          "14f6101e1f029d61b09bfc62ec14fe78e5851bdf573c05b876c897e442189451",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Daily Tip Shown", n, a),
      _ && q("sU8Mnvlw7", "Daily Tip Shown", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Daily Tip Shown': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Daily Tip Shown",
          n,
          "sU8Mnvlw7",
          "14f6101e1f029d61b09bfc62ec14fe78e5851bdf573c05b876c897e442189451"
        ),
      V.logEvent("Daily Tip Shown", Object.assign({}, s)));
}
function Tne(t) {
  let e = [];
  e.push({ id: "8bh6jYHCCg", name: "RequestType", value: t.requestType }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "MO-wa4NwYT",
          "18add81bd039942040962e493f736e6081928289a6f3fb6934c01a3d7e73af26",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Server Error Screen Opened", n, a),
      _ && q("MO-wa4NwYT", "Server Error Screen Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Server Error Screen Opened': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Server Error Screen Opened",
          n,
          "MO-wa4NwYT",
          "18add81bd039942040962e493f736e6081928289a6f3fb6934c01a3d7e73af26"
        ),
      V.logEvent("Server Error Screen Opened", Object.assign({}, s)));
}
function hL() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "9CsgnTr_Nx",
          "a6d70a1b6ec1df7001f60daf1804a4dc500c5adf744e4c467497b4c5b0cbceb5",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Remind Team Owner Button Pressed", e, r),
      _ && q("9CsgnTr_Nx", "Remind Team Owner Button Pressed", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Remind Team Owner Button Pressed': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Remind Team Owner Button Pressed",
          e,
          "9CsgnTr_Nx",
          "a6d70a1b6ec1df7001f60daf1804a4dc500c5adf744e4c467497b4c5b0cbceb5"
        ),
      V.logEvent("Remind Team Owner Button Pressed", Object.assign({}, a)));
}
function fL(t) {
  let e = [];
  e.push({
    id: "RY4A3LW4bw",
    name: "TeamExpiredDecision",
    value: t.teamExpiredDecision,
  }),
    e.push({
      id: "ks7IIGgN1",
      name: "TeamJoinedMembers",
      value: t.teamJoinedMembers,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "NmX-RColCA",
          "a64db2ac19d6d8957a202082b24180abdf33903cde49aedb5aa4f1e76123c636",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Team Trial Expired Button Pressed", n, a),
      _ && q("NmX-RColCA", "Team Trial Expired Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Team Trial Expired Button Pressed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Team Trial Expired Button Pressed",
          n,
          "NmX-RColCA",
          "a64db2ac19d6d8957a202082b24180abdf33903cde49aedb5aa4f1e76123c636"
        ),
      V.logEvent("Team Trial Expired Button Pressed", Object.assign({}, s)));
}
function mL() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "RC0MOjK3OQ",
          "92660af4ce657103325bf61118cfa83fb47152096716f46b7307d4f26aad49fe",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Customer Experience Survey Shown", e, r),
      _ && q("RC0MOjK3OQ", "Customer Experience Survey Shown", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Customer Experience Survey Shown': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Customer Experience Survey Shown",
          e,
          "RC0MOjK3OQ",
          "92660af4ce657103325bf61118cfa83fb47152096716f46b7307d4f26aad49fe"
        ),
      V.logEvent("Customer Experience Survey Shown", Object.assign({}, a)));
}
function SL(t) {
  let e = [];
  e.push({ id: "vzA_bIeMgA", name: "CSAT", value: t.csat }),
    e.push({
      id: "THcwRSZvM6",
      name: "CESurveyResult",
      value: t.cesurveyResult,
    }),
    t.cesurveyEmail !== void 0 && t.cesurveyEmail !== null
      ? e.push({
          id: "hOgislLRc",
          name: "CESurveyEmail",
          value: t.cesurveyEmail,
        })
      : e.push({ id: "hOgislLRc", name: "CESurveyEmail", value: null }),
    t.cesurveyFeedback !== void 0 && t.cesurveyFeedback !== null
      ? e.push({
          id: "m516K79yy",
          name: "CESurveyFeedback",
          value: t.cesurveyFeedback,
        })
      : e.push({ id: "m516K79yy", name: "CESurveyFeedback", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(gUe(t.csat))),
      (i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "lm-MuRBQzB",
          "dac0caff572e7ade81c545a0f42f2630a94bea4a62a2296466e7c8d2b6e47200",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Customer Experience Survey Taken", n, a),
      _ && q("lm-MuRBQzB", "Customer Experience Survey Taken", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Customer Experience Survey Taken': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Customer Experience Survey Taken",
          n,
          "lm-MuRBQzB",
          "dac0caff572e7ade81c545a0f42f2630a94bea4a62a2296466e7c8d2b6e47200"
        ),
      V.logEvent("Customer Experience Survey Taken", Object.assign({}, s)));
}
function yL(t) {
  let e = [];
  e.push({ id: "DeMN2QB0ec", name: "HintLevel", value: t.hintLevel }),
    e.push({ id: "BsxQQWI9Wq", name: "HintMessage", value: t.hintMessage }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "5DOF9DUSWu",
          "0e86bb6c98971f47104b609ceb60506b58978b6f228b69431c3ad64729ad2a44",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Hint Displayed", n, a),
      _ && q("5DOF9DUSWu", "Hint Displayed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Hint Displayed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Hint Displayed",
          n,
          "5DOF9DUSWu",
          "0e86bb6c98971f47104b609ceb60506b58978b6f228b69431c3ad64729ad2a44"
        ),
      V.logEvent("Hint Displayed", Object.assign({}, s)));
}
function gL(t) {
  let e = [];
  e.push({ id: "DeMN2QB0ec", name: "HintLevel", value: t.hintLevel }),
    e.push({ id: "BsxQQWI9Wq", name: "HintMessage", value: t.hintMessage }),
    t.closingMethod !== void 0 && t.closingMethod !== null
      ? e.push({
          id: "Hx9k049uK",
          name: "ClosingMethod",
          value: t.closingMethod,
        })
      : e.push({ id: "Hx9k049uK", name: "ClosingMethod", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "mLmcHm7_I8",
          "4d20ed54e449fbad1385031152a9ebc6f677bd42b7ba0d120ba9f10264b29829",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Hint Closed", n, a),
      _ && q("mLmcHm7_I8", "Hint Closed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error("Error sending event 'Hint Closed': " + i[0].message);
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Hint Closed",
          n,
          "mLmcHm7_I8",
          "4d20ed54e449fbad1385031152a9ebc6f677bd42b7ba0d120ba9f10264b29829"
        ),
      V.logEvent("Hint Closed", Object.assign({}, s)));
}
function vL(t) {
  let e = [];
  t.terminalSidePanelToggledVia !== void 0 &&
  t.terminalSidePanelToggledVia !== null
    ? e.push({
        id: "lSiIv-InY",
        name: "TerminalSidePanelToggledVia",
        value: t.terminalSidePanelToggledVia,
      })
    : e.push({
        id: "lSiIv-InY",
        name: "TerminalSidePanelToggledVia",
        value: null,
      }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "jNNwdgzwgN",
          "e69c0bf03156c7dcfb14c6bc678c5e7324321c01980188e3ab7e17edd8357549",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Snippets Panel Opened", n, a),
      _ && q("jNNwdgzwgN", "Snippets Panel Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Snippets Panel Opened': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Snippets Panel Opened",
          n,
          "jNNwdgzwgN",
          "e69c0bf03156c7dcfb14c6bc678c5e7324321c01980188e3ab7e17edd8357549"
        ),
      V.logEvent("Snippets Panel Opened", Object.assign({}, s)));
}
function _L(t) {
  let e = [];
  t.trialDaysLeft !== void 0 && t.trialDaysLeft !== null
    ? e.push({
        id: "LnG4vmu6Ew",
        name: "TrialDaysLeft",
        value: t.trialDaysLeft,
      })
    : e.push({ id: "LnG4vmu6Ew", name: "TrialDaysLeft", value: null }),
    e.push({
      id: "SgnSzgGRzc",
      name: "TeamSharedGroups",
      value: t.teamSharedGroups,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "5c7uPww_ZF",
          "f53d9d7b703676e20f41c41bb63113ffc00d2c8b796322167cb668c710cce154",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Switch To Team Screen Opened", n, a),
      _ && q("5c7uPww_ZF", "Switch To Team Screen Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Switch To Team Screen Opened': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Switch To Team Screen Opened",
          n,
          "5c7uPww_ZF",
          "f53d9d7b703676e20f41c41bb63113ffc00d2c8b796322167cb668c710cce154"
        ),
      V.logEvent("Switch To Team Screen Opened", Object.assign({}, s)));
}
function bL() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "VrhGHWR65NG",
          "a92029633caa8cb35a553ce14b6567c7865a4c92975108c0f2aa649a0b6181bf",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Set Your Default Credentials Screen Opened", e, r),
      _ &&
        q(
          "VrhGHWR65NG",
          "Set Your Default Credentials Screen Opened",
          s,
          t,
          n,
          []
        ),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Set Your Default Credentials Screen Opened': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Set Your Default Credentials Screen Opened",
          e,
          "VrhGHWR65NG",
          "a92029633caa8cb35a553ce14b6567c7865a4c92975108c0f2aa649a0b6181bf"
        ),
      V.logEvent(
        "Set Your Default Credentials Screen Opened",
        Object.assign({}, a)
      ));
}
function EL() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "SdZhnjCSDqo",
          "04fe7a0f773be96c3d27a418e9e1f3d110872d8a29a6ce9e203421a86e0ed975",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Account Set Up Completed Screen Opened", e, r),
      _ &&
        q("SdZhnjCSDqo", "Account Set Up Completed Screen Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Account Set Up Completed Screen Opened': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Account Set Up Completed Screen Opened",
          e,
          "SdZhnjCSDqo",
          "04fe7a0f773be96c3d27a418e9e1f3d110872d8a29a6ce9e203421a86e0ed975"
        ),
      V.logEvent(
        "Account Set Up Completed Screen Opened",
        Object.assign({}, a)
      ));
}
function TL(t) {
  let e = [];
  e.push({ id: "d74LiZiN0BW", name: "IdentityType", value: t.identityType }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "oG0KIW9jF09",
          "fe69b65855f08f8dfaef47638a1d6dcf675555f63cca53de362f7d99be93be10",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("New Identity Created", n, a),
      _ && q("oG0KIW9jF09", "New Identity Created", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'New Identity Created': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "New Identity Created",
          n,
          "oG0KIW9jF09",
          "fe69b65855f08f8dfaef47638a1d6dcf675555f63cca53de362f7d99be93be10"
        ),
      V.logEvent("New Identity Created", Object.assign({}, s)));
}
function wL(t) {
  let e = [];
  e.push({ id: "T_GJOpzN0k3", name: "HasSharedData", value: t.hasSharedData }),
    e.push({
      id: "XP6sVAPyWQ0",
      name: "HasInvitedMembers",
      value: t.hasInvitedMembers,
    }),
    e.push({
      id: "ZMjhQIr0_ji",
      name: "HasJoinedMembers",
      value: t.hasJoinedMembers,
    }),
    e.push({
      id: "IzK8QfangYc",
      name: "HasGrantedAccess",
      value: t.hasGrantedAccess,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "Z7Xdo4oT4dz",
          "2672858b333d50308d22a30ee414fe42beb134dc9c0f31f2e22baf87f18c80e6",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Team Side Onboarding Shown", n, a),
      _ && q("Z7Xdo4oT4dz", "Team Side Onboarding Shown", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Team Side Onboarding Shown': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Team Side Onboarding Shown",
          n,
          "Z7Xdo4oT4dz",
          "2672858b333d50308d22a30ee414fe42beb134dc9c0f31f2e22baf87f18c80e6"
        ),
      V.logEvent("Team Side Onboarding Shown", Object.assign({}, s)));
}
function PL(t) {
  let e = [];
  e.push({
    id: "MmOXEv8Gki0",
    name: "TeamSideOnboardingStage",
    value: t.teamSideOnboardingStage,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "G7WMqEPgDYu",
          "b9ec144a2f22a68c61a35111f926eb8c7b652fd837f3068bbdd2f670d801291a",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Team Side Onboarding Pressed", n, a),
      _ && q("G7WMqEPgDYu", "Team Side Onboarding Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Team Side Onboarding Pressed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Team Side Onboarding Pressed",
          n,
          "G7WMqEPgDYu",
          "b9ec144a2f22a68c61a35111f926eb8c7b652fd837f3068bbdd2f670d801291a"
        ),
      V.logEvent("Team Side Onboarding Pressed", Object.assign({}, s)));
}
function IL(t) {
  let e = [];
  e.push({ id: "T_GJOpzN0k3", name: "HasSharedData", value: t.hasSharedData }),
    e.push({
      id: "ZMjhQIr0_ji",
      name: "HasJoinedMembers",
      value: t.hasJoinedMembers,
    }),
    e.push({
      id: "XP6sVAPyWQ0",
      name: "HasInvitedMembers",
      value: t.hasInvitedMembers,
    }),
    e.push({
      id: "IzK8QfangYc",
      name: "HasGrantedAccess",
      value: t.hasGrantedAccess,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "burpyjUJw1I",
          "5089ff4890e1229b5a4ba47fc54d8cc502c7f6b99f7c62647272ca24a203738a",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Team Side Onboarding Closed", n, a),
      _ && q("burpyjUJw1I", "Team Side Onboarding Closed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Team Side Onboarding Closed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Team Side Onboarding Closed",
          n,
          "burpyjUJw1I",
          "5089ff4890e1229b5a4ba47fc54d8cc502c7f6b99f7c62647272ca24a203738a"
        ),
      V.logEvent("Team Side Onboarding Closed", Object.assign({}, s)));
}
function CL() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "FqSuK7n6fgS",
          "8669bde8077d5099f1b4bde4d2967138057c670c49bf1c103e4dafb821ea19ef",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Snippet Sharing Canceled", e, r),
      _ && q("FqSuK7n6fgS", "Snippet Sharing Canceled", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Snippet Sharing Canceled': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Snippet Sharing Canceled",
          e,
          "FqSuK7n6fgS",
          "8669bde8077d5099f1b4bde4d2967138057c670c49bf1c103e4dafb821ea19ef"
        ),
      V.logEvent("Snippet Sharing Canceled", Object.assign({}, a)));
}
function wne() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "4FL9Tt8bX1v",
          "baf780f05e766f782ae42faef5a0957292f3fc758b3b7f22e95a11fbf36a6dcf",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Share All Snippets Shown", e, r),
      _ && q("4FL9Tt8bX1v", "Share All Snippets Shown", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Share All Snippets Shown': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Share All Snippets Shown",
          e,
          "4FL9Tt8bX1v",
          "baf780f05e766f782ae42faef5a0957292f3fc758b3b7f22e95a11fbf36a6dcf"
        ),
      V.logEvent("Share All Snippets Shown", Object.assign({}, a)));
}
function AL(t) {
  let e = [];
  e.push({ id: "B6I4Af3CH3", name: "OnScreen", value: t.onScreen }),
    e.push({ id: "J4VlcT3plg", name: "Layout", value: t.layoutType }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "4r2n9ziHWaO",
          "2db1497806e71af37475cce231188506b6cd22818ece5a35e1f750faa61edc15",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Multiple Items Selected", n, a),
      _ && q("4r2n9ziHWaO", "Multiple Items Selected", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Multiple Items Selected': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Multiple Items Selected",
          n,
          "4r2n9ziHWaO",
          "2db1497806e71af37475cce231188506b6cd22818ece5a35e1f750faa61edc15"
        ),
      V.logEvent("Multiple Items Selected", Object.assign({}, s)));
}
function OL(t) {
  let e = [];
  e.push({ id: "y1UUcrqggS_", name: "SelectedItems", value: t.selectedItems }),
    e.push({
      id: "2lB-ZwNtoR",
      name: "NumberOfSelectedItems",
      value: t.numberOfSelectedItems,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "wEuFmnoZeHD",
          "50e11b9ea58c08fbd611afb3dc529a6866b7aebc1dc4b46aea2ef3b68804735c",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Multiple Connections Initiated", n, a),
      _ && q("wEuFmnoZeHD", "Multiple Connections Initiated", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Multiple Connections Initiated': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Multiple Connections Initiated",
          n,
          "wEuFmnoZeHD",
          "50e11b9ea58c08fbd611afb3dc529a6866b7aebc1dc4b46aea2ef3b68804735c"
        ),
      V.logEvent("Multiple Connections Initiated", Object.assign({}, s)));
}
function HL(t) {
  let e = [];
  e.push({ id: "MciOfxjGk3", name: "Preference", value: t.preference }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "6ghzS_o1ig",
          "b3b080dc642910d58f15358c1c9df9313e8d82d04d0921b510b48bcb0bfdc761",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Preferences Button Pressed", n, a),
      _ && q("6ghzS_o1ig", "Preferences Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Preferences Button Pressed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Preferences Button Pressed",
          n,
          "6ghzS_o1ig",
          "b3b080dc642910d58f15358c1c9df9313e8d82d04d0921b510b48bcb0bfdc761"
        ),
      V.logEvent("Preferences Button Pressed", Object.assign({}, s)));
}
function NL(t) {
  let e = [];
  e.push({ id: "IdLc6aidYP", name: "Entity", value: t.entity }),
    t.editButtonOrigin !== void 0 && t.editButtonOrigin !== null
      ? e.push({
          id: "BW6ieYUNjc",
          name: "EditButtonOrigin",
          value: t.editButtonOrigin,
        })
      : e.push({ id: "BW6ieYUNjc", name: "EditButtonOrigin", value: null }),
    e.push({ id: "Gn7pMin78i", name: "EntityID", value: t.entityID }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "A7NWN5K0Wg",
          "ccc20de73f477034948ea15f9882fd92900bcb889f90bbde439525e1dde21646",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Edit Entity Screen Opened", n, a),
      _ && q("A7NWN5K0Wg", "Edit Entity Screen Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Edit Entity Screen Opened': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Edit Entity Screen Opened",
          n,
          "A7NWN5K0Wg",
          "ccc20de73f477034948ea15f9882fd92900bcb889f90bbde439525e1dde21646"
        ),
      V.logEvent("Edit Entity Screen Opened", Object.assign({}, s)));
}
function RL() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "faY_VsDiM9",
          "cf8c6c2e4e57a261374f079c9337b5b8d01eeb8d37f5f87e0cd5ab16bfe3d1b1",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("MultiKey Updated", e, r),
      _ && q("faY_VsDiM9", "MultiKey Updated", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'MultiKey Updated': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "MultiKey Updated",
          e,
          "faY_VsDiM9",
          "cf8c6c2e4e57a261374f079c9337b5b8d01eeb8d37f5f87e0cd5ab16bfe3d1b1"
        ),
      V.logEvent("MultiKey Updated", Object.assign({}, a)));
}
function kL() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "PjUuiO47OU",
          "a562bfe91293f63b4667c197f3222bf2866b1021ffbc360a0a822dc4bdf52f43",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Authorized Keys Downloaded", e, r),
      _ && q("PjUuiO47OU", "Authorized Keys Downloaded", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Authorized Keys Downloaded': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Authorized Keys Downloaded",
          e,
          "PjUuiO47OU",
          "a562bfe91293f63b4667c197f3222bf2866b1021ffbc360a0a822dc4bdf52f43"
        ),
      V.logEvent("Authorized Keys Downloaded", Object.assign({}, a)));
}
function xL() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let a = [];
    if (
      ((a = a.concat(le(b))),
      (a = a.concat(ce(E))),
      v ||
        W(
          h,
          "smHQsUAB8i",
          "2c6686529eb292f9413168c6ae771678c85aa365fb1e7e11c8167e12ee9e305d",
          a.map((s) =>
            Object.assign(
              {},
              {
                tag: s.tag,
                propertyId: s.propertyId,
                additionalProperties: s.additionalProperties,
                actualType: s.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("MultiKey Chosen", e, r),
      _ && q("smHQsUAB8i", "MultiKey Chosen", a, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (a.length !== 0)
        throw new Error(
          "Error sending event 'MultiKey Chosen': " + a[0].message
        );
    } else
      a.forEach(function (s) {
        console[$ || "error"]("[avo] " + s.message);
      });
  }
  (({ ...e }), { ...r }),
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "MultiKey Chosen",
          e,
          "smHQsUAB8i",
          "2c6686529eb292f9413168c6ae771678c85aa365fb1e7e11c8167e12ee9e305d"
        ));
}
function LL() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "6KKvv6pik",
          "9347b50340fccc9354ac4d1a2d5377468ad4eaa24dd870b2545bdd18ec1de534",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("SSH Key For MultiKey Generated", e, r),
      _ && q("6KKvv6pik", "SSH Key For MultiKey Generated", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'SSH Key For MultiKey Generated': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "SSH Key For MultiKey Generated",
          e,
          "6KKvv6pik",
          "9347b50340fccc9354ac4d1a2d5377468ad4eaa24dd870b2545bdd18ec1de534"
        ),
      V.logEvent("SSH Key For MultiKey Generated", Object.assign({}, a)));
}
function ML() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "SB4NEs87IT",
          "b652b1824424aed9fff46a2aa532d1411ea41b2ea70e898b45f2d6efe3cf6b93",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Create MultiKey-Export Script Button Pressed", e, r),
      _ &&
        q(
          "SB4NEs87IT",
          "Create MultiKey-Export Script Button Pressed",
          s,
          t,
          n,
          []
        ),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Create MultiKey-Export Script Button Pressed': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Create MultiKey-Export Script Button Pressed",
          e,
          "SB4NEs87IT",
          "b652b1824424aed9fff46a2aa532d1411ea41b2ea70e898b45f2d6efe3cf6b93"
        ),
      V.logEvent(
        "Create MultiKey-Export Script Button Pressed",
        Object.assign({}, a)
      ));
}
function Pne() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "2a6F2uAma",
          "965f8852a0e2c66c407635f82e6b04d702bd1f09cb387bd7a4cec2f66cdb02e2",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Copy as Authorized_Keys Button Pressed", e, r),
      _ &&
        q("2a6F2uAma", "Copy as Authorized_Keys Button Pressed", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Copy as Authorized_Keys Button Pressed': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Copy as Authorized_Keys Button Pressed",
          e,
          "2a6F2uAma",
          "965f8852a0e2c66c407635f82e6b04d702bd1f09cb387bd7a4cec2f66cdb02e2"
        ),
      V.logEvent(
        "Copy as Authorized_Keys Button Pressed",
        Object.assign({}, a)
      ));
}
function DL() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "BbOuOWdYKb",
          "91e50ba1f3b9d26f7291b741ec89f381e1a95038cb3e37e54758d36781489ea7",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("MFA Configure Screen Opened", e, r),
      _ && q("BbOuOWdYKb", "MFA Configure Screen Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'MFA Configure Screen Opened': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "MFA Configure Screen Opened",
          e,
          "BbOuOWdYKb",
          "91e50ba1f3b9d26f7291b741ec89f381e1a95038cb3e37e54758d36781489ea7"
        ),
      V.logEvent("MFA Configure Screen Opened", Object.assign({}, a)));
}
function GL() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "12KggkktJr",
          "a4a88aed45628d157521e7cc6a0dec7f1eb5298020b60b550a7b010412b11e6b",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("MFA Install Authy Screen Opened", e, r),
      _ && q("12KggkktJr", "MFA Install Authy Screen Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'MFA Install Authy Screen Opened': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "MFA Install Authy Screen Opened",
          e,
          "12KggkktJr",
          "a4a88aed45628d157521e7cc6a0dec7f1eb5298020b60b550a7b010412b11e6b"
        ),
      V.logEvent("MFA Install Authy Screen Opened", Object.assign({}, a)));
}
function FL() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "qfetGxaWuW",
          "7df8032e8c97d1c963af6ae39fcb5151b6cc0a328cfbbc661a9fb33ebe6ef4c6",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("MFA Confirm Password Screen Opened", e, r),
      _ && q("qfetGxaWuW", "MFA Confirm Password Screen Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'MFA Confirm Password Screen Opened': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "MFA Confirm Password Screen Opened",
          e,
          "qfetGxaWuW",
          "7df8032e8c97d1c963af6ae39fcb5151b6cc0a328cfbbc661a9fb33ebe6ef4c6"
        ),
      V.logEvent("MFA Confirm Password Screen Opened", Object.assign({}, a)));
}
function UL() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "P_iBqyBP42",
          "f2c72f869688050432ba1dc55cf34395022519b40bbd17cd78572f05ecc70ebf",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("MFA Phone Number Screen Opened", e, r),
      _ && q("P_iBqyBP42", "MFA Phone Number Screen Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'MFA Phone Number Screen Opened': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "MFA Phone Number Screen Opened",
          e,
          "P_iBqyBP42",
          "f2c72f869688050432ba1dc55cf34395022519b40bbd17cd78572f05ecc70ebf"
        ),
      V.logEvent("MFA Phone Number Screen Opened", Object.assign({}, a)));
}
function KL() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "WWq57_Qb1E",
          "6ea904f8521d8900018043d6fa2cc05ada415615f8e346dfe4cebd0013f01a30",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("MFA Token Screen Opened", e, r),
      _ && q("WWq57_Qb1E", "MFA Token Screen Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'MFA Token Screen Opened': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "MFA Token Screen Opened",
          e,
          "WWq57_Qb1E",
          "6ea904f8521d8900018043d6fa2cc05ada415615f8e346dfe4cebd0013f01a30"
        ),
      V.logEvent("MFA Token Screen Opened", Object.assign({}, a)));
}
function BL(t) {
  let e = [];
  e.push({ id: "y1UUcrqggS_", name: "SelectedItems", value: t.selectedItems }),
    e.push({
      id: "2lB-ZwNtoR",
      name: "NumberOfSelectedItems",
      value: t.numberOfSelectedItems,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "LGqW4BgzC9",
          "207deb48cc2b0df63e586b748ca12fba27878a4b3c34f6a25602223c19170bed",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Entities Drag and Drop Completed", n, a),
      _ && q("LGqW4BgzC9", "Entities Drag and Drop Completed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Entities Drag and Drop Completed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Entities Drag and Drop Completed",
          n,
          "LGqW4BgzC9",
          "207deb48cc2b0df63e586b748ca12fba27878a4b3c34f6a25602223c19170bed"
        ),
      V.logEvent("Entities Drag and Drop Completed", Object.assign({}, s)));
}
function VL(t) {
  let e = [];
  e.push({ id: "y1UUcrqggS_", name: "SelectedItems", value: t.selectedItems }),
    e.push({
      id: "2lB-ZwNtoR",
      name: "NumberOfSelectedItems",
      value: t.numberOfSelectedItems,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "53KQu8OQbO",
          "fcaf9ae3598ef178116023cfce357b00b223f0acdaa396f16ef77ec9dbe6de96",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Entities Drag and Drop Started", n, a),
      _ && q("53KQu8OQbO", "Entities Drag and Drop Started", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Entities Drag and Drop Started': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Entities Drag and Drop Started",
          n,
          "53KQu8OQbO",
          "fcaf9ae3598ef178116023cfce357b00b223f0acdaa396f16ef77ec9dbe6de96"
        ),
      V.logEvent("Entities Drag and Drop Started", Object.assign({}, s)));
}
function jL(t) {
  let e = [];
  e.push({ id: "1yGELHVfm8", name: "AuthMethod", value: t.authMethod }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "VOsgf3ReZL",
          "8cd7647e0f796d71242a4e80e4be07e03cbb80f2253c95db742357ce3492583c",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Enter Password Screen Opened", n, a),
      _ && q("VOsgf3ReZL", "Enter Password Screen Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Enter Password Screen Opened': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Enter Password Screen Opened",
          n,
          "VOsgf3ReZL",
          "8cd7647e0f796d71242a4e80e4be07e03cbb80f2253c95db742357ce3492583c"
        ),
      V.logEvent("Enter Password Screen Opened", Object.assign({}, s)));
}
function zL(t) {
  let e = [];
  e.push({ id: "1yGELHVfm8", name: "AuthMethod", value: t.authMethod }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "R2kPreqXUa",
          "3d6b193027695004acc34046157f26629c221cfbb0df2422b0dc407ab103ed13",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Set Password Screen Opened", n, a),
      _ && q("R2kPreqXUa", "Set Password Screen Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Set Password Screen Opened': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Set Password Screen Opened",
          n,
          "R2kPreqXUa",
          "3d6b193027695004acc34046157f26629c221cfbb0df2422b0dc407ab103ed13"
        ),
      V.logEvent("Set Password Screen Opened", Object.assign({}, s)));
}
function $L(t) {
  let e = [];
  e.push({ id: "1yGELHVfm8", name: "AuthMethod", value: t.authMethod }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "YeNBiqQOwF",
          "22f516c541bd35567522ce56cd6aa84808893260e59498951a61ccd6c1798360",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Passphrase Info Screen Opened", n, a),
      _ && q("YeNBiqQOwF", "Passphrase Info Screen Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Passphrase Info Screen Opened': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Passphrase Info Screen Opened",
          n,
          "YeNBiqQOwF",
          "22f516c541bd35567522ce56cd6aa84808893260e59498951a61ccd6c1798360"
        ),
      V.logEvent("Passphrase Info Screen Opened", Object.assign({}, s)));
}
function WL(t) {
  let e = [];
  e.push({ id: "uF5Jw9j-9", name: "UsersOnline", value: t.usersOnline }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "67KCqwRYdA",
          "92801ba29c0623a4d974777fdb14861f2056cd8eb74b0aa56b1e76c95759fa43",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Who's in Termius Screen Opened", n, a),
      _ && q("67KCqwRYdA", "Who's in Termius Screen Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Who's in Termius Screen Opened': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Who's in Termius Screen Opened",
          n,
          "67KCqwRYdA",
          "92801ba29c0623a4d974777fdb14861f2056cd8eb74b0aa56b1e76c95759fa43"
        ),
      V.logEvent("Who's in Termius Screen Opened", Object.assign({}, s)));
}
function qL(t) {
  let e = [];
  e.push({
    id: "8GJN4gfO8N",
    name: "PresenceIconLocation",
    value: t.presenceIconLocation,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "bF6kOLEZR0",
          "5c0048c0c55b84eb3717fc9295b975d9378b7689f70e89d4a5a8281267686572",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Presence Icon Pressed", n, a),
      _ && q("bF6kOLEZR0", "Presence Icon Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Presence Icon Pressed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Presence Icon Pressed",
          n,
          "bF6kOLEZR0",
          "5c0048c0c55b84eb3717fc9295b975d9378b7689f70e89d4a5a8281267686572"
        ),
      V.logEvent("Presence Icon Pressed", Object.assign({}, s)));
}
function YL(t) {
  let e = [];
  e.push({ id: "dpPMXLXJdx", name: "SerialSource", value: t.serialSource }),
    t.promoType !== void 0 && t.promoType !== null
      ? e.push({ id: "5wNDwJ-3K3", name: "PromoType", value: t.promoType })
      : e.push({ id: "5wNDwJ-3K3", name: "PromoType", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "hZ18MRQxJ",
          "1136952f6d21a0b268c33f0904cda267e72fe6fbbd017dfb3a4e6957826be1cb",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Serial Connection Promo Screen Opened", n, a),
      _ && q("hZ18MRQxJ", "Serial Connection Promo Screen Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Serial Connection Promo Screen Opened': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Serial Connection Promo Screen Opened",
          n,
          "hZ18MRQxJ",
          "1136952f6d21a0b268c33f0904cda267e72fe6fbbd017dfb3a4e6957826be1cb"
        ),
      V.logEvent(
        "Serial Connection Promo Screen Opened",
        Object.assign({}, s)
      ));
}
function XL(t) {
  let e = [];
  e.push({ id: "dpPMXLXJdx", name: "SerialSource", value: t.serialSource }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "DZf_uvuEKu",
          "3f510e2fd979c1d293a8f63bd1de3103efb1463f4ff031467f89ee1400b1ead3",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Serial Connection Screen Opened", n, a),
      _ && q("DZf_uvuEKu", "Serial Connection Screen Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Serial Connection Screen Opened': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Serial Connection Screen Opened",
          n,
          "DZf_uvuEKu",
          "3f510e2fd979c1d293a8f63bd1de3103efb1463f4ff031467f89ee1400b1ead3"
        ),
      V.logEvent("Serial Connection Screen Opened", Object.assign({}, s)));
}
function QL() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "1-52F0GKM",
          "e0f8be596f098e35ed5aa723b31d6126c302388205b2a32070f8e1ee0a3d22ae",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("MFA Choose Provider Screen Opened", e, r),
      _ && q("1-52F0GKM", "MFA Choose Provider Screen Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'MFA Choose Provider Screen Opened': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "MFA Choose Provider Screen Opened",
          e,
          "1-52F0GKM",
          "e0f8be596f098e35ed5aa723b31d6126c302388205b2a32070f8e1ee0a3d22ae"
        ),
      V.logEvent("MFA Choose Provider Screen Opened", Object.assign({}, a)));
}
function JL() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "b5uH_0m74S",
          "ec484df3fbc4fc365cdf670f52f5937eb81b47dfb015a8bddebc7c67f7c5a889",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("MFA Copy Code Screen Opened", e, r),
      _ && q("b5uH_0m74S", "MFA Copy Code Screen Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'MFA Copy Code Screen Opened': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "MFA Copy Code Screen Opened",
          e,
          "b5uH_0m74S",
          "ec484df3fbc4fc365cdf670f52f5937eb81b47dfb015a8bddebc7c67f7c5a889"
        ),
      V.logEvent("MFA Copy Code Screen Opened", Object.assign({}, a)));
}
function ZL() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "QGG1T1nUF",
          "b177e6617e60c83152175ac1c74cf5503a582384e4e70445844f06fdd6d58f1c",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("MFA Code Copied", e, r),
      _ && q("QGG1T1nUF", "MFA Code Copied", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'MFA Code Copied': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "MFA Code Copied",
          e,
          "QGG1T1nUF",
          "b177e6617e60c83152175ac1c74cf5503a582384e4e70445844f06fdd6d58f1c"
        ),
      V.logEvent("MFA Code Copied", Object.assign({}, a)));
}
function e4(t) {
  let e = [];
  e.push({
    id: "DKvuKwSF0",
    name: "MFAProviderType",
    value: t.mfaproviderType,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "CSRCH7tzW",
          "165a22f23fa2fbe2ea0d6f2f7182f488c072478df0b84fa76d0aa773e88a3322",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("MFA Provider Chosen", n, a),
      _ && q("CSRCH7tzW", "MFA Provider Chosen", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'MFA Provider Chosen': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "MFA Provider Chosen",
          n,
          "CSRCH7tzW",
          "165a22f23fa2fbe2ea0d6f2f7182f488c072478df0b84fa76d0aa773e88a3322"
        ),
      V.logEvent("MFA Provider Chosen", Object.assign({}, s)));
}
function t4(t) {
  let e = [];
  e.push({ id: "LtX0SIqFoB", name: "ConnectionID", value: t.connectionID }),
    e.push({
      id: "TdSO5JLzHi",
      name: "TerminalSharingSource",
      value: t.terminalSharingSource,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "BGlxEczlH",
          "f55344a43be1e6969142c4319ac8805a7e93b317c38b2ba20ad5fe30855c622c",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Shared Terminal Session Started", n, a),
      _ && q("BGlxEczlH", "Shared Terminal Session Started", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Shared Terminal Session Started': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Shared Terminal Session Started",
          n,
          "BGlxEczlH",
          "f55344a43be1e6969142c4319ac8805a7e93b317c38b2ba20ad5fe30855c622c"
        ),
      V.logEvent("Shared Terminal Session Started", Object.assign({}, s)));
}
function n4(t) {
  let e = [];
  e.push({ id: "LtX0SIqFoB", name: "ConnectionID", value: t.connectionID }),
    e.push({
      id: "MnWhD9Jv8I",
      name: "SharedTerminalPermissions",
      value: t.sharedTerminalPermissions,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "TopFwE-reB",
          "a68d84c90a7da5ad172408b3167f9da3fcd4371e656de12a558012c9daddcc03",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Shared Terminal Session Permissions Changed", n, a),
      _ &&
        q(
          "TopFwE-reB",
          "Shared Terminal Session Permissions Changed",
          i,
          e,
          r,
          []
        ),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Shared Terminal Session Permissions Changed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Shared Terminal Session Permissions Changed",
          n,
          "TopFwE-reB",
          "a68d84c90a7da5ad172408b3167f9da3fcd4371e656de12a558012c9daddcc03"
        ),
      V.logEvent(
        "Shared Terminal Session Permissions Changed",
        Object.assign({}, s)
      ));
}
function s4(t) {
  let e = [];
  e.push({ id: "LtX0SIqFoB", name: "ConnectionID", value: t.connectionID }),
    e.push({ id: "teufSR2Bu", name: "PeakViewers", value: t.peakViewers }),
    e.push({ id: "2zl-Stmjk", name: "Duration", value: t.duration }),
    e.push({
      id: "NLmnkBWKH",
      name: "ReceivedCommands",
      value: t.receivedCommands,
    }),
    e.push({ id: "EMMeE6kiC", name: "TotalViewers", value: t.totalViewers }),
    e.push({
      id: "MnWhD9Jv8I",
      name: "SharedTerminalPermissions",
      value: t.sharedTerminalPermissions,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "LRlsjeGPu",
          "5cfd533ed165bf527699b46b4897b604cc168db203dbf26d34b1598f4ba1c21c",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Shared Terminal Session Stopped", n, a),
      _ && q("LRlsjeGPu", "Shared Terminal Session Stopped", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Shared Terminal Session Stopped': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Shared Terminal Session Stopped",
          n,
          "LRlsjeGPu",
          "5cfd533ed165bf527699b46b4897b604cc168db203dbf26d34b1598f4ba1c21c"
        ),
      V.logEvent("Shared Terminal Session Stopped", Object.assign({}, s)));
}
function r4(t) {
  let e = [];
  e.push({ id: "LtX0SIqFoB", name: "ConnectionID", value: t.connectionID }),
    e.push({
      id: "l4X5Kp_TW",
      name: "CurrentViewers",
      value: t.currentViewers,
    }),
    e.push({
      id: "MnWhD9Jv8I",
      name: "SharedTerminalPermissions",
      value: t.sharedTerminalPermissions,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "xMZFX8kkq",
          "363caf140bf352999df6e94087793b30608053c0f4c883c66e214e0e45be4484",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Shared Terminal Viewer Joined", n, a),
      _ && q("xMZFX8kkq", "Shared Terminal Viewer Joined", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Shared Terminal Viewer Joined': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Shared Terminal Viewer Joined",
          n,
          "xMZFX8kkq",
          "363caf140bf352999df6e94087793b30608053c0f4c883c66e214e0e45be4484"
        ),
      V.logEvent("Shared Terminal Viewer Joined", Object.assign({}, s)));
}
function a4(t) {
  let e = [];
  e.push({ id: "LtX0SIqFoB", name: "ConnectionID", value: t.connectionID }),
    e.push({
      id: "l4X5Kp_TW",
      name: "CurrentViewers",
      value: t.currentViewers,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "YBCcpTz_3m",
          "904e89108b81ce785d555ce3c7a2089feca168b7b876f8167fde8cd92326f349",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Shared Terminal Viewer Left", n, a),
      _ && q("YBCcpTz_3m", "Shared Terminal Viewer Left", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Shared Terminal Viewer Left': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Shared Terminal Viewer Left",
          n,
          "YBCcpTz_3m",
          "904e89108b81ce785d555ce3c7a2089feca168b7b876f8167fde8cd92326f349"
        ),
      V.logEvent("Shared Terminal Viewer Left", Object.assign({}, s)));
}
function i4(t) {
  let e = [];
  e.push({ id: "LtX0SIqFoB", name: "ConnectionID", value: t.connectionID }),
    e.push({
      id: "TdSO5JLzHi",
      name: "TerminalSharingSource",
      value: t.terminalSharingSource,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "1e_LCMCs5",
          "eb93979d947e016a9c7fcdf561c6326269612d8908b02797d73db338e41c9fdf",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Share Terminal Button Pressed", n, a),
      _ && q("1e_LCMCs5", "Share Terminal Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Share Terminal Button Pressed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Share Terminal Button Pressed",
          n,
          "1e_LCMCs5",
          "eb93979d947e016a9c7fcdf561c6326269612d8908b02797d73db338e41c9fdf"
        ),
      V.logEvent("Share Terminal Button Pressed", Object.assign({}, s)));
}
function o4(t) {
  let e = [];
  e.push({ id: "LtX0SIqFoB", name: "ConnectionID", value: t.connectionID }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "KG6OCK1uwI",
          "3a88f0e56e9ae6f059c9463231505a7d5d994cf68efb3b8b05bc4719d233e25b",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Shared Terminal Session Failed", n, a),
      _ && q("KG6OCK1uwI", "Shared Terminal Session Failed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Shared Terminal Session Failed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Shared Terminal Session Failed",
          n,
          "KG6OCK1uwI",
          "3a88f0e56e9ae6f059c9463231505a7d5d994cf68efb3b8b05bc4719d233e25b"
        ),
      V.logEvent("Shared Terminal Session Failed", Object.assign({}, s)));
}
function u4(t) {
  let e = [];
  e.push({
    id: "ks7IIGgN1",
    name: "TeamJoinedMembers",
    value: t.teamJoinedMembers,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "y8pocRvOc8",
          "1d6f09938aca20f1e17b86b1f016fd9e74d1ca0f7d643f6ff963e2522447648a",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Team Trial Expired Screen Opened", n, a),
      _ && q("y8pocRvOc8", "Team Trial Expired Screen Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Team Trial Expired Screen Opened': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Team Trial Expired Screen Opened",
          n,
          "y8pocRvOc8",
          "1d6f09938aca20f1e17b86b1f016fd9e74d1ca0f7d643f6ff963e2522447648a"
        ),
      V.logEvent("Team Trial Expired Screen Opened", Object.assign({}, s)));
}
function l4(t) {
  let e = [];
  e.push({
    id: "ks7IIGgN1",
    name: "TeamJoinedMembers",
    value: t.teamJoinedMembers,
  }),
    t.trialDaysLeft !== void 0 && t.trialDaysLeft !== null
      ? e.push({
          id: "LnG4vmu6Ew",
          name: "TrialDaysLeft",
          value: t.trialDaysLeft,
        })
      : e.push({ id: "LnG4vmu6Ew", name: "TrialDaysLeft", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "t_71r4v3c",
          "39289ce67c610f43cc9753b739606710adac19581eb9ea166775fb05e0212ab1",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Team Trial Extended Screen Opened", n, a),
      _ && q("t_71r4v3c", "Team Trial Extended Screen Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Team Trial Extended Screen Opened': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Team Trial Extended Screen Opened",
          n,
          "t_71r4v3c",
          "39289ce67c610f43cc9753b739606710adac19581eb9ea166775fb05e0212ab1"
        ),
      V.logEvent("Team Trial Extended Screen Opened", Object.assign({}, s)));
}
function c4(t) {
  let e = [];
  e.push({
    id: "ks7IIGgN1",
    name: "TeamJoinedMembers",
    value: t.teamJoinedMembers,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "2XlX4c0LyY",
          "c21515ff3ee5123a3152c19f1b2016e1a24f34cbc0c7e22f8deef216bcd5ddfc",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Team Trial Extension Rejected Screen Opened", n, a),
      _ &&
        q(
          "2XlX4c0LyY",
          "Team Trial Extension Rejected Screen Opened",
          i,
          e,
          r,
          []
        ),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Team Trial Extension Rejected Screen Opened': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Team Trial Extension Rejected Screen Opened",
          n,
          "2XlX4c0LyY",
          "c21515ff3ee5123a3152c19f1b2016e1a24f34cbc0c7e22f8deef216bcd5ddfc"
        ),
      V.logEvent(
        "Team Trial Extension Rejected Screen Opened",
        Object.assign({}, s)
      ));
}
function d4() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "OaktgXYQxv",
          "22858d17218095ca8289c756ff631fa92032b31b0363c2f71298e91be6fc972a",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Invite Screen Opened", e, r),
      _ && q("OaktgXYQxv", "Invite Screen Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Invite Screen Opened': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Invite Screen Opened",
          e,
          "OaktgXYQxv",
          "22858d17218095ca8289c756ff631fa92032b31b0363c2f71298e91be6fc972a"
        ),
      V.logEvent("Invite Screen Opened", Object.assign({}, a)));
}
function p4(t) {
  let e = [];
  e.push({
    id: "Lw0SpgCRV",
    name: "NumberOfInvitees",
    value: t.numberOfInvitees,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "_di-DZMVju",
          "993d353e0452df90316c8399825d4488e81bc9bd16cf70bcd2beeb9919acfd71",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Invite Button Pressed", n, a),
      _ && q("_di-DZMVju", "Invite Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Invite Button Pressed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Invite Button Pressed",
          n,
          "_di-DZMVju",
          "993d353e0452df90316c8399825d4488e81bc9bd16cf70bcd2beeb9919acfd71"
        ),
      V.logEvent("Invite Button Pressed", Object.assign({}, s)));
}
function Ine() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "bZCf1CnPJ",
          "75b9689b3fabddbbaa0b47f677ceab99225192e54454883e8b99ee953dc6c32f",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Contact Us Button Pressed", e, r),
      _ && q("bZCf1CnPJ", "Contact Us Button Pressed", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Contact Us Button Pressed': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Contact Us Button Pressed",
          e,
          "bZCf1CnPJ",
          "75b9689b3fabddbbaa0b47f677ceab99225192e54454883e8b99ee953dc6c32f"
        ),
      V.logEvent("Contact Us Button Pressed", Object.assign({}, a)));
}
function h4(t) {
  let e = [];
  e.push({ id: "vAfcgSvge", name: "FileExtension", value: t.fileExtension }),
    e.push({
      id: "tSkac5onpn",
      name: "FileOpenOption",
      value: t.fileOpenOption,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "7xt4Qaz4y",
          "c48179fdeecf61d994943b3651bb3bdbd0d4356f7ce127b264919252454858bc",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("SFTP File Opened", n, a),
      _ && q("7xt4Qaz4y", "SFTP File Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'SFTP File Opened': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "SFTP File Opened",
          n,
          "7xt4Qaz4y",
          "c48179fdeecf61d994943b3651bb3bdbd0d4356f7ce127b264919252454858bc"
        ),
      V.logEvent("SFTP File Opened", Object.assign({}, s)));
}
function f4(t) {
  let e = [];
  e.push({ id: "B6I4Af3CH3", name: "OnScreen", value: t.onScreen }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "uDvBA6LP3Z",
          "bac0dadddd5ea5a990ac431e404adc47f92f3c05a0d2f00bc3b5970d185066ed",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("File Type Associated", n, a),
      _ && q("uDvBA6LP3Z", "File Type Associated", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'File Type Associated': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "File Type Associated",
          n,
          "uDvBA6LP3Z",
          "bac0dadddd5ea5a990ac431e404adc47f92f3c05a0d2f00bc3b5970d185066ed"
        ),
      V.logEvent("File Type Associated", Object.assign({}, s)));
}
function m4() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "HwxQ1GLnVN",
          "488f1ab273b61b8a7714337648127ebef104c6b9add009620315860434cce4fa",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("SFTP Upload File Button Pressed", e, r),
      _ && q("HwxQ1GLnVN", "SFTP Upload File Button Pressed", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'SFTP Upload File Button Pressed': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "SFTP Upload File Button Pressed",
          e,
          "HwxQ1GLnVN",
          "488f1ab273b61b8a7714337648127ebef104c6b9add009620315860434cce4fa"
        ),
      V.logEvent("SFTP Upload File Button Pressed", Object.assign({}, a)));
}
function S4() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "WZfNZqn-4",
          "15933e5200462eb3a73a6e73808dc24b94b2a3ccb06db001bc287a4a4756c8b4",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("SFTP Discard File Button Pressed", e, r),
      _ && q("WZfNZqn-4", "SFTP Discard File Button Pressed", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'SFTP Discard File Button Pressed': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "SFTP Discard File Button Pressed",
          e,
          "WZfNZqn-4",
          "15933e5200462eb3a73a6e73808dc24b94b2a3ccb06db001bc287a4a4756c8b4"
        ),
      V.logEvent("SFTP Discard File Button Pressed", Object.assign({}, a)));
}
function y4() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "a0rIl5eAV",
          "62ecdcc123afb769d69ca03ea06ec4ae60de4abd7db8c10fae9445695d92ae0e",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("SFTP Modified Files Bar Shown", e, r),
      _ && q("a0rIl5eAV", "SFTP Modified Files Bar Shown", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'SFTP Modified Files Bar Shown': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "SFTP Modified Files Bar Shown",
          e,
          "a0rIl5eAV",
          "62ecdcc123afb769d69ca03ea06ec4ae60de4abd7db8c10fae9445695d92ae0e"
        ),
      V.logEvent("SFTP Modified Files Bar Shown", Object.assign({}, a)));
}
function g4(t) {
  let e = [];
  e.push({ id: "8gtfydWW0", name: "OpenedFrom", value: t.openedFrom }),
    e.push({
      id: "doMi5lwcT0",
      name: "TeamTrialFunnelID",
      value: t.teamTrialFunnelID,
    }),
    t.teamTrialPlan !== void 0 && t.teamTrialPlan !== null
      ? e.push({
          id: "R3l4OxBEb",
          name: "TeamTrialPlan",
          value: t.teamTrialPlan,
        })
      : e.push({ id: "R3l4OxBEb", name: "TeamTrialPlan", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "o5jfvS2OCp",
          "c5e5d58ac92aeb01f0f4cf837fb118e6eb7381cfddd3074441d7010bad2bca48",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Team Trial Funnel Started", n, a),
      _ && q("o5jfvS2OCp", "Team Trial Funnel Started", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Team Trial Funnel Started': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Team Trial Funnel Started",
          n,
          "o5jfvS2OCp",
          "c5e5d58ac92aeb01f0f4cf837fb118e6eb7381cfddd3074441d7010bad2bca48"
        ),
      V.logEvent("Team Trial Funnel Started", Object.assign({}, s)));
}
function v4(t) {
  let e = [];
  e.push({ id: "lZBTEK4F3G", name: "NewKeyLocation", value: t.newKeyLocation }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "_ynFTy3iQZ",
          "46a75f75464f1258f812fd61162facbac401a29221d0d8c99742936f4caba7b2",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("New Key Button Pressed", n, a),
      _ && q("_ynFTy3iQZ", "New Key Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'New Key Button Pressed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "New Key Button Pressed",
          n,
          "_ynFTy3iQZ",
          "46a75f75464f1258f812fd61162facbac401a29221d0d8c99742936f4caba7b2"
        ),
      V.logEvent("New Key Button Pressed", Object.assign({}, s)));
}
function _4(t) {
  let e = [];
  e.push({ id: "CohO2Q7nBB", name: "AddKeyOption", value: t.addKeyOption }),
    t.wizardID !== void 0 && t.wizardID !== null
      ? e.push({ id: "MGexS9ePV", name: "WizardID", value: t.wizardID })
      : e.push({ id: "MGexS9ePV", name: "WizardID", value: null }),
    e.push({
      id: "lZBTEK4F3G",
      name: "NewKeyLocation",
      value: t.newKeyLocation,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "aYl6vBHSQ",
          "0b991f1dabb7499e15b416244d2567255432fe27a428647da74dd788db3afcf0",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("New Key Option Selected", n, a),
      _ && q("aYl6vBHSQ", "New Key Option Selected", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'New Key Option Selected': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "New Key Option Selected",
          n,
          "aYl6vBHSQ",
          "0b991f1dabb7499e15b416244d2567255432fe27a428647da74dd788db3afcf0"
        ),
      V.logEvent("New Key Option Selected", Object.assign({}, s)));
}
function b4() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "1_9kXZN9NE",
          "449bfcaa1e9d8649bfc064313f32e0bcc49e32855fb5a10aabda2fb88842f437",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Restart Button Pressed", e, r),
      _ && q("1_9kXZN9NE", "Restart Button Pressed", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Restart Button Pressed': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Restart Button Pressed",
          e,
          "1_9kXZN9NE",
          "449bfcaa1e9d8649bfc064313f32e0bcc49e32855fb5a10aabda2fb88842f437"
        ),
      V.logEvent("Restart Button Pressed", Object.assign({}, a)));
}
function E4() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "t1-R7YvCh",
          "e82057c53a95b62a353528a8f09f1eef5eda178cc001803f5071e2a057326d70",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Changelog Button Pressed", e, r),
      _ && q("t1-R7YvCh", "Changelog Button Pressed", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Changelog Button Pressed': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Changelog Button Pressed",
          e,
          "t1-R7YvCh",
          "e82057c53a95b62a353528a8f09f1eef5eda178cc001803f5071e2a057326d70"
        ),
      V.logEvent("Changelog Button Pressed", Object.assign({}, a)));
}
function T4() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "2Zq-iqtUgz",
          "da23631cc10d651bddec5f517e1d804615d10b63ac68bca07407b258104683da",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Tab Context Menu Opened", e, r),
      _ && q("2Zq-iqtUgz", "Tab Context Menu Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Tab Context Menu Opened': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Tab Context Menu Opened",
          e,
          "2Zq-iqtUgz",
          "da23631cc10d651bddec5f517e1d804615d10b63ac68bca07407b258104683da"
        ),
      V.logEvent("Tab Context Menu Opened", Object.assign({}, a)));
}
function w4(t) {
  let e = [];
  e.push({ id: "d0wP8dzLwR", name: "FIDO2BasedKey", value: t.fido2BasedKey }),
    e.push({ id: "u1WQcoOF-", name: "KeySource", value: t.keySource }),
    t.wizardID !== void 0 && t.wizardID !== null
      ? e.push({ id: "MGexS9ePV", name: "WizardID", value: t.wizardID })
      : e.push({ id: "MGexS9ePV", name: "WizardID", value: null }),
    t.connectionID !== void 0 && t.connectionID !== null
      ? e.push({
          id: "LtX0SIqFoB",
          name: "ConnectionID",
          value: t.connectionID,
        })
      : e.push({ id: "LtX0SIqFoB", name: "ConnectionID", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "ep-h46gZpJ",
          "9d6c552121d83e0a8411c917852d0a6fa08efd589064e64da32c2a137e99290c",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("New Hardware Key Created", n, a),
      _ && q("ep-h46gZpJ", "New Hardware Key Created", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'New Hardware Key Created': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "New Hardware Key Created",
          n,
          "ep-h46gZpJ",
          "9d6c552121d83e0a8411c917852d0a6fa08efd589064e64da32c2a137e99290c"
        ),
      V.logEvent("New Hardware Key Created", Object.assign({}, s)));
}
function Cne(t) {
  let e = [];
  e.push({
    id: "TYVOienMHN",
    name: "SessionLogsEnabled",
    value: t.sessionLogsEnabled,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [];
  r.push({ id: "tk9fRGBE_", name: "SessionLogs", value: t.sessionLogs });
  let a = P(r);
  if (h !== "prod" || _) {
    let o = [];
    if (
      ((o = o.concat(le(b))),
      (o = o.concat(ce(E))),
      v ||
        W(
          h,
          "fOfijHQWY6",
          "f896dace12566b34e001acfc61f0822b6f8d7819cc82ec70e62e5c0ace0a8c7e",
          o.map((u) =>
            Object.assign(
              {},
              {
                tag: u.tag,
                propertyId: u.propertyId,
                additionalProperties: u.additionalProperties,
                actualType: u.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Session Logs Setting Changed", n, a),
      _ && q("fOfijHQWY6", "Session Logs Setting Changed", o, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (o.length !== 0)
        throw new Error(
          "Error sending event 'Session Logs Setting Changed': " + o[0].message
        );
    } else
      o.forEach(function (u) {
        console[$ || "error"]("[avo] " + u.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts;
  let i = { ...a };
  v ||
    (w != null &&
      w._avoFunctionTrackSchemaFromEvent(
        "Session Logs Setting Changed",
        n,
        "fOfijHQWY6",
        "f896dace12566b34e001acfc61f0822b6f8d7819cc82ec70e62e5c0ace0a8c7e"
      ),
    V.setUserProperties(Object.assign({}, i)),
    V.logEvent("Session Logs Setting Changed", Object.assign({}, s)));
}
function P4(t) {
  let e = [];
  e.push({ id: "K_mOuzpKT", name: "Source", value: t.sessionLogSource }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "SUCW5Ug_Gz",
          "adbe13f844570fefa198d522ca9eabc02cad79a4e1b6c0e48233f8c6ea31086b",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Session Log Opened", n, a),
      _ && q("SUCW5Ug_Gz", "Session Log Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Session Log Opened': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Session Log Opened",
          n,
          "SUCW5Ug_Gz",
          "adbe13f844570fefa198d522ca9eabc02cad79a4e1b6c0e48233f8c6ea31086b"
        ),
      V.logEvent("Session Log Opened", Object.assign({}, s)));
}
function I4(t) {
  let e = [];
  e.push({
    id: "xzir_lk9N",
    name: "CommandsHistorySource",
    value: t.commandsHistorySource,
  }),
    t.terminalSidePanelToggledVia !== void 0 &&
    t.terminalSidePanelToggledVia !== null
      ? e.push({
          id: "lSiIv-InY",
          name: "TerminalSidePanelToggledVia",
          value: t.terminalSidePanelToggledVia,
        })
      : e.push({
          id: "lSiIv-InY",
          name: "TerminalSidePanelToggledVia",
          value: null,
        }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "zp9KhzqfXc",
          "4b40d3885b8962168b6d9f29e83d1373fa5efd1d9738679d2bf2ec4939f8f317",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Commands History Panel Opened", n, a),
      _ && q("zp9KhzqfXc", "Commands History Panel Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Commands History Panel Opened': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Commands History Panel Opened",
          n,
          "zp9KhzqfXc",
          "4b40d3885b8962168b6d9f29e83d1373fa5efd1d9738679d2bf2ec4939f8f317"
        ),
      V.logEvent("Commands History Panel Opened", Object.assign({}, s)));
}
function C4(t) {
  let e = [];
  e.push({
    id: "EAhyJvlH96",
    name: "CredentialsSharingMode",
    value: t.credentialsSharingMode,
  }),
    e.push({ id: "MGexS9ePV", name: "WizardID", value: t.wizardID }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "fpB7nE905Y",
          "80caaea698e98012ff3347bd3a911ea6a090d6c1d49f99e57cbff14592658832",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Credentials Sharing Screen Opened", n, a),
      _ && q("fpB7nE905Y", "Credentials Sharing Screen Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Credentials Sharing Screen Opened': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Credentials Sharing Screen Opened",
          n,
          "fpB7nE905Y",
          "80caaea698e98012ff3347bd3a911ea6a090d6c1d49f99e57cbff14592658832"
        ),
      V.logEvent("Credentials Sharing Screen Opened", Object.assign({}, s)));
}
function A4(t) {
  let e = [];
  e.push({
    id: "EAhyJvlH96",
    name: "CredentialsSharingMode",
    value: t.credentialsSharingMode,
  }),
    e.push({ id: "t6cAXFgtd", name: "DefaultValue", value: t.defaultValue }),
    t.hostsWithoutCredentials !== void 0 && t.hostsWithoutCredentials !== null
      ? e.push({
          id: "FlbONHRsO7",
          name: "HostsWithoutCredentials",
          value: t.hostsWithoutCredentials,
        })
      : e.push({
          id: "FlbONHRsO7",
          name: "HostsWithoutCredentials",
          value: null,
        }),
    e.push({
      id: "DJSG5S4380",
      name: "HostsInTheGroup",
      value: t.hostsInTheGroup,
    }),
    e.push({
      id: "G4ssDJ0mPq",
      name: "CredentialsSettingsMode",
      value: t.credentialsSettingsMode,
    }),
    e.push({ id: "hfEMKFB-W", name: "HostChain", value: t.hostChain }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "5pMsD2DzKO",
          "9c6c48af397862dfafd5dae28f725f4804be64248f4100650f94c6695871afc3",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Root Group Shared", n, a),
      _ && q("5pMsD2DzKO", "Root Group Shared", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Root Group Shared': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Root Group Shared",
          n,
          "5pMsD2DzKO",
          "9c6c48af397862dfafd5dae28f725f4804be64248f4100650f94c6695871afc3"
        ),
      V.logEvent("Root Group Shared", Object.assign({}, s)));
}
function O4() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "FrHaD1mTRt",
          "6ddc6d505a8f5f9a429d279fb5140046150791a7c7926058fda312862768ff8e",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Learn More About MultiKey Button Pressed", e, r),
      _ &&
        q(
          "FrHaD1mTRt",
          "Learn More About MultiKey Button Pressed",
          s,
          t,
          n,
          []
        ),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Learn More About MultiKey Button Pressed': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Learn More About MultiKey Button Pressed",
          e,
          "FrHaD1mTRt",
          "6ddc6d505a8f5f9a429d279fb5140046150791a7c7926058fda312862768ff8e"
        ),
      V.logEvent(
        "Learn More About MultiKey Button Pressed",
        Object.assign({}, a)
      ));
}
function H4() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "Wa0oQaH4xq",
          "3f61da8fce35bfc3eb38b67898555c007f9bcecbed9f7ad972622f7f17253b37",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("MultiKey Promo Screen Shown", e, r),
      _ && q("Wa0oQaH4xq", "MultiKey Promo Screen Shown", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'MultiKey Promo Screen Shown': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "MultiKey Promo Screen Shown",
          e,
          "Wa0oQaH4xq",
          "3f61da8fce35bfc3eb38b67898555c007f9bcecbed9f7ad972622f7f17253b37"
        ),
      V.logEvent("MultiKey Promo Screen Shown", Object.assign({}, a)));
}
function N4(t) {
  let e = [];
  e.push({
    id: "EAhyJvlH96",
    name: "CredentialsSharingMode",
    value: t.credentialsSharingMode,
  }),
    e.push({ id: "MGexS9ePV", name: "WizardID", value: t.wizardID }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "VoX_W19CQ",
          "3d079c6ed762b5a35064a51303e46f57747788fd647b114cb0e9159f9a874e81",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Credentials Sharing Option Chosen", n, a),
      _ && q("VoX_W19CQ", "Credentials Sharing Option Chosen", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Credentials Sharing Option Chosen': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Credentials Sharing Option Chosen",
          n,
          "VoX_W19CQ",
          "3d079c6ed762b5a35064a51303e46f57747788fd647b114cb0e9159f9a874e81"
        ),
      V.logEvent("Credentials Sharing Option Chosen", Object.assign({}, s)));
}
function R4(t) {
  let e = [];
  e.push({
    id: "ujpie620S",
    name: "InviteLinkLocation",
    value: t.inviteLinkLocation,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "D23dAzAw4F",
          "37b5ab731b85149eba26a68259915953f23c0344f614ce9231637fdb238779f6",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Copy Invitation Link Button Pressed", n, a),
      _ && q("D23dAzAw4F", "Copy Invitation Link Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Copy Invitation Link Button Pressed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Copy Invitation Link Button Pressed",
          n,
          "D23dAzAw4F",
          "37b5ab731b85149eba26a68259915953f23c0344f614ce9231637fdb238779f6"
        ),
      V.logEvent("Copy Invitation Link Button Pressed", Object.assign({}, s)));
}
function k4(t) {
  let e = [];
  e.push({ id: "wFdQeJjzt", name: "IsVisible", value: t.isVisible }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "Yntp0ITPcj",
          "62e088e8d085b251c919c309b23076095fff9076bf8485c7e5b241cc8f1b1e9f",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Terminal Sharing Visibility Changed", n, a),
      _ && q("Yntp0ITPcj", "Terminal Sharing Visibility Changed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Terminal Sharing Visibility Changed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Terminal Sharing Visibility Changed",
          n,
          "Yntp0ITPcj",
          "62e088e8d085b251c919c309b23076095fff9076bf8485c7e5b241cc8f1b1e9f"
        ),
      V.logEvent("Terminal Sharing Visibility Changed", Object.assign({}, s)));
}
function x4(t) {
  let e = [];
  t.onPage !== void 0 && t.onPage !== null
    ? e.push({ id: "ZfA7_QPg4_", name: "OnPage", value: t.onPage })
    : e.push({ id: "ZfA7_QPg4_", name: "OnPage", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(SUe(t.onPage))),
      (i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "fGF1chvSU",
          "f7a1441b3227efafd661486ca07706fe15d8a2e8bc93321eb6e5e6d644c4130c",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Welcome Slide Changed", n, a),
      _ && q("fGF1chvSU", "Welcome Slide Changed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Welcome Slide Changed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Welcome Slide Changed",
          n,
          "fGF1chvSU",
          "f7a1441b3227efafd661486ca07706fe15d8a2e8bc93321eb6e5e6d644c4130c"
        ),
      V.logEvent("Welcome Slide Changed", Object.assign({}, s)));
}
function L4(t) {
  let e = [];
  e.push({
    id: "9KGA7NDbUO",
    name: "CloudIntegration",
    value: t.cloudIntegration,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "Dz7r4RAol",
          "1d3cb5e276f0a52a483f63f100a99d4fa3e9e8e49d2e5ab076c1bb16b36a6210",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Cloud Sync Activated", n, a),
      _ && q("Dz7r4RAol", "Cloud Sync Activated", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Cloud Sync Activated': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Cloud Sync Activated",
          n,
          "Dz7r4RAol",
          "1d3cb5e276f0a52a483f63f100a99d4fa3e9e8e49d2e5ab076c1bb16b36a6210"
        ),
      V.logEvent("Cloud Sync Activated", Object.assign({}, s)));
}
function M4(t) {
  let e = [];
  e.push({ id: "B4WRezXjG", name: "Success", value: t.success }),
    e.push({
      id: "9KGA7NDbUO",
      name: "CloudIntegration",
      value: t.cloudIntegration,
    }),
    e.push({
      id: "zk_ff4qfU",
      name: "ImportedServices",
      value: t.importedServices,
    }),
    e.push({
      id: "2X2YElVC7w",
      name: "ImportedIPType",
      value: t.importedIpType,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "1NcC-b-th",
          "1d9c46ec50e9dad78c490cf012da6c06299654f9101121f225a9f4d3e1dd9835",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Cloud Credentials Checked", n, a),
      _ && q("1NcC-b-th", "Cloud Credentials Checked", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Cloud Credentials Checked': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Cloud Credentials Checked",
          n,
          "1NcC-b-th",
          "1d9c46ec50e9dad78c490cf012da6c06299654f9101121f225a9f4d3e1dd9835"
        ),
      V.logEvent("Cloud Credentials Checked", Object.assign({}, s)));
}
function D4() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "GRv72DDtnz",
          "de396d3fca1447ca64400bdebdcb03bdccca795cedc7ddec5b7e6a793c661e55",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Sync Now Button Pressed", e, r),
      _ && q("GRv72DDtnz", "Sync Now Button Pressed", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Sync Now Button Pressed': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Sync Now Button Pressed",
          e,
          "GRv72DDtnz",
          "de396d3fca1447ca64400bdebdcb03bdccca795cedc7ddec5b7e6a793c661e55"
        ),
      V.logEvent("Sync Now Button Pressed", Object.assign({}, a)));
}
function G4(t) {
  let e = [];
  e.push({ id: "Aj8Sl89wT", name: "ResponseTime", value: t.responseTime }),
    e.push({
      id: "tdIgKNAqB7",
      name: "NumberOfImportedHosts",
      value: t.numberOfImportedHosts,
    }),
    e.push({
      id: "UBfCxEUpf",
      name: "NumberOfRemovedHosts",
      value: t.numberOfRemovedHosts,
    }),
    e.push({
      id: "9KGA7NDbUO",
      name: "CloudIntegration",
      value: t.cloudIntegration,
    }),
    e.push({
      id: "zk_ff4qfU",
      name: "ImportedServices",
      value: t.importedServices,
    }),
    e.push({
      id: "2X2YElVC7w",
      name: "ImportedIPType",
      value: t.importedIpType,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "riTGaD0y3",
          "74e8413436164070a093b7737ee47ebbc2ee4beffcc63c523430a4bc190b500b",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Cloud Sync Completed", n, a),
      _ && q("riTGaD0y3", "Cloud Sync Completed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Cloud Sync Completed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Cloud Sync Completed",
          n,
          "riTGaD0y3",
          "74e8413436164070a093b7737ee47ebbc2ee4beffcc63c523430a4bc190b500b"
        ),
      V.logEvent("Cloud Sync Completed", Object.assign({}, s)));
}
function F4(t) {
  let e = [];
  e.push({ id: "1W4Pysy66", name: "TeamMemberID", value: t.teamMemberID }),
    e.push({
      id: "mU3J-SLGrJ",
      name: "ConfirmAccessButtonLocation",
      value: t.confirmAccessButtonLocation,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "NgNLQa0Hf",
          "a1210b3192356f05f83e1c988445cf4ba87f49e97f89adb856d16a58d74afa04",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Confirm Access Button Pressed", n, a),
      _ && q("NgNLQa0Hf", "Confirm Access Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Confirm Access Button Pressed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Confirm Access Button Pressed",
          n,
          "NgNLQa0Hf",
          "a1210b3192356f05f83e1c988445cf4ba87f49e97f89adb856d16a58d74afa04"
        ),
      V.logEvent("Confirm Access Button Pressed", Object.assign({}, s)));
}
function U4(t) {
  let e = [];
  e.push({ id: "1cm1oSV7u4", name: "Action", value: t.bellNotificationAction }),
    t.teamMemberID !== void 0 && t.teamMemberID !== null
      ? e.push({ id: "1W4Pysy66", name: "TeamMemberID", value: t.teamMemberID })
      : e.push({ id: "1W4Pysy66", name: "TeamMemberID", value: null }),
    t.snoozedFromScreen !== void 0 && t.snoozedFromScreen !== null
      ? e.push({
          id: "higRBGDgd",
          name: "SnoozedFromScreen",
          value: t.snoozedFromScreen,
        })
      : e.push({ id: "higRBGDgd", name: "SnoozedFromScreen", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "HNlyzVT9XD",
          "5d300dc8943efa7318c70b28b11439990caf464f7b49e6f7ba7cfd31d565c658",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Notification Snoozed", n, a),
      _ && q("HNlyzVT9XD", "Notification Snoozed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Notification Snoozed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Notification Snoozed",
          n,
          "HNlyzVT9XD",
          "5d300dc8943efa7318c70b28b11439990caf464f7b49e6f7ba7cfd31d565c658"
        ),
      V.logEvent("Notification Snoozed", Object.assign({}, s)));
}
function K4(t) {
  let e = [];
  e.push({ id: "QI8h95kq-", name: "TerminalTheme", value: t.terminalTheme }),
    e.push({
      id: "LgHfdBjOOo",
      name: "TerminalThemeSource",
      value: t.terminalThemeSource,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [];
  t.globalTerminalTheme !== void 0 && t.globalTerminalTheme !== null
    ? r.push({
        id: "Y6gLgMSQN",
        name: "GlobalTerminalTheme",
        value: t.globalTerminalTheme,
      })
    : r.push({ id: "Y6gLgMSQN", name: "GlobalTerminalTheme", value: null });
  let a = P(r);
  if (h !== "prod" || _) {
    let o = [];
    if (
      ((o = o.concat(le(b))),
      (o = o.concat(ce(E))),
      v ||
        W(
          h,
          "TRGVKlmNaM",
          "4731433d5755034d1fdd7d6780c005c5139df0121fca71edbe0958bc2fdce269",
          o.map((u) =>
            Object.assign(
              {},
              {
                tag: u.tag,
                propertyId: u.propertyId,
                additionalProperties: u.additionalProperties,
                actualType: u.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Terminal Theme Changed", n, a),
      _ && q("TRGVKlmNaM", "Terminal Theme Changed", o, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (o.length !== 0)
        throw new Error(
          "Error sending event 'Terminal Theme Changed': " + o[0].message
        );
    } else
      o.forEach(function (u) {
        console[$ || "error"]("[avo] " + u.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts;
  let i = { ...a };
  v ||
    (w != null &&
      w._avoFunctionTrackSchemaFromEvent(
        "Terminal Theme Changed",
        n,
        "TRGVKlmNaM",
        "4731433d5755034d1fdd7d6780c005c5139df0121fca71edbe0958bc2fdce269"
      ),
    V.setUserProperties(Object.assign({}, i)),
    V.logEvent("Terminal Theme Changed", Object.assign({}, s)));
}
function B4(t) {
  let e = [];
  e.push({
    id: "fggXnGeD5",
    name: "TerminalFontSource",
    value: t.terminalFontSource,
  }),
    e.push({
      id: "doG_XobUa",
      name: "TerminalFontSelected",
      value: t.terminalFontSelected,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [];
  r.push({ id: "mpEeos7N6", name: "TerminalFont", value: t.terminalFont });
  let a = P(r);
  if (h !== "prod" || _) {
    let o = [];
    if (
      ((o = o.concat(le(b))),
      (o = o.concat(ce(E))),
      v ||
        W(
          h,
          "dSsfy0Y8Ko",
          "d1d3a8dc7b8faf0eff820fe1fcd7692b2a95a9e141af72a882ccff36035d164e",
          o.map((u) =>
            Object.assign(
              {},
              {
                tag: u.tag,
                propertyId: u.propertyId,
                additionalProperties: u.additionalProperties,
                actualType: u.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Terminal Font Changed", n, a),
      _ && q("dSsfy0Y8Ko", "Terminal Font Changed", o, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (o.length !== 0)
        throw new Error(
          "Error sending event 'Terminal Font Changed': " + o[0].message
        );
    } else
      o.forEach(function (u) {
        console[$ || "error"]("[avo] " + u.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts;
  let i = { ...a };
  v ||
    (w != null &&
      w._avoFunctionTrackSchemaFromEvent(
        "Terminal Font Changed",
        n,
        "dSsfy0Y8Ko",
        "d1d3a8dc7b8faf0eff820fe1fcd7692b2a95a9e141af72a882ccff36035d164e"
      ),
    V.setUserProperties(Object.assign({}, i)),
    V.logEvent("Terminal Font Changed", Object.assign({}, s)));
}
function V4() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "heVG_dyXp5",
          "0271c0c9678d5d5880e9d9fb7e48d7ca4678a30cbda2e129ba09427bd90194e0",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Download Template Button Pressed", e, r),
      _ && q("heVG_dyXp5", "Download Template Button Pressed", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Download Template Button Pressed': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Download Template Button Pressed",
          e,
          "heVG_dyXp5",
          "0271c0c9678d5d5880e9d9fb7e48d7ca4678a30cbda2e129ba09427bd90194e0"
        ),
      V.logEvent("Download Template Button Pressed", Object.assign({}, a)));
}
function j4() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "8GS5aZmLFh",
          "801fbec62947f2116ba4f4c31d4a47ad52fee4ac5ded7bb4f529c0763dfb0d27",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Autocomplete Settings Opened", e, r),
      _ && q("8GS5aZmLFh", "Autocomplete Settings Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Autocomplete Settings Opened': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Autocomplete Settings Opened",
          e,
          "8GS5aZmLFh",
          "801fbec62947f2116ba4f4c31d4a47ad52fee4ac5ded7bb4f529c0763dfb0d27"
        ),
      V.logEvent("Autocomplete Settings Opened", Object.assign({}, a)));
}
function z4(t) {
  let e = [];
  e.push({
    id: "doMi5lwcT0",
    name: "TeamTrialFunnelID",
    value: t.teamTrialFunnelID,
  }),
    e.push({ id: "8gtfydWW0", name: "OpenedFrom", value: t.openedFrom }),
    e.push({
      id: "er51NtVwlb",
      name: "TrialStartingFailReason",
      value: t.trialStartingFailReason,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "hmcsU1TZ_l",
          "eb81c03a50c27a453fa32011c6b81f71bcda507234f8f1189afc973c1fd91b9d",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Team Trial Starting Failed", n, a),
      _ && q("hmcsU1TZ_l", "Team Trial Starting Failed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Team Trial Starting Failed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Team Trial Starting Failed",
          n,
          "hmcsU1TZ_l",
          "eb81c03a50c27a453fa32011c6b81f71bcda507234f8f1189afc973c1fd91b9d"
        ),
      V.logEvent("Team Trial Starting Failed", Object.assign({}, s)));
}
function $4(t) {
  let e = [];
  e.push({
    id: "j2rYk-kq5x",
    name: "NumberOfMessages",
    value: t.numberOfMessages,
  }),
    e.push({
      id: "6gefBXDr4",
      name: "SizeOfMessages",
      value: t.sizeOfMessages,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "MlBiWGJjb",
          "e680ef6e7c6563bd6e6d85bce02575f5b1de8c8bbe0ba89984c1fd8b5c6be686",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Session Log Encode Queue Overflowed", n, a),
      _ && q("MlBiWGJjb", "Session Log Encode Queue Overflowed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Session Log Encode Queue Overflowed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Session Log Encode Queue Overflowed",
          n,
          "MlBiWGJjb",
          "e680ef6e7c6563bd6e6d85bce02575f5b1de8c8bbe0ba89984c1fd8b5c6be686"
        ),
      V.logEvent("Session Log Encode Queue Overflowed", Object.assign({}, s)));
}
function W4(t) {
  let e = [];
  e.push({
    id: "j2rYk-kq5x",
    name: "NumberOfMessages",
    value: t.numberOfMessages,
  }),
    e.push({
      id: "6gefBXDr4",
      name: "SizeOfMessages",
      value: t.sizeOfMessages,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "PeaFCy9Pdz",
          "a7f986d789c34462a9a28eca5171faf648bd825f532ac7b72f005841c3dce0d3",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Session Log Write Queue Overflowed", n, a),
      _ && q("PeaFCy9Pdz", "Session Log Write Queue Overflowed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Session Log Write Queue Overflowed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Session Log Write Queue Overflowed",
          n,
          "PeaFCy9Pdz",
          "a7f986d789c34462a9a28eca5171faf648bd825f532ac7b72f005841c3dce0d3"
        ),
      V.logEvent("Session Log Write Queue Overflowed", Object.assign({}, s)));
}
function q4(t) {
  let e = [];
  e.push({
    id: "E275OIoxiW",
    name: "ExportButtonLocation",
    value: t.exportButtonLocation,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "5wA7eqURli",
          "804e3121b00ed32f3240b10a11cfd75bb8312317ed096fc4486ef21f5b9655cd",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Export Key Button Pressed", n, a),
      _ && q("5wA7eqURli", "Export Key Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Export Key Button Pressed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Export Key Button Pressed",
          n,
          "5wA7eqURli",
          "804e3121b00ed32f3240b10a11cfd75bb8312317ed096fc4486ef21f5b9655cd"
        ),
      V.logEvent("Export Key Button Pressed", Object.assign({}, s)));
}
function Y4(t) {
  let e = [];
  e.push({ id: "IdLc6aidYP", name: "Entity", value: t.entity }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "5FYuWBIHSn",
          "9c78f9bb837b44bcad5299f0def68ec61c8b40b13b2d0d7e65fc50a7e77e5e38",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Entity Selected", n, a),
      _ && q("5FYuWBIHSn", "Entity Selected", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Entity Selected': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Entity Selected",
          n,
          "5FYuWBIHSn",
          "9c78f9bb837b44bcad5299f0def68ec61c8b40b13b2d0d7e65fc50a7e77e5e38"
        ),
      V.logEvent("Entity Selected", Object.assign({}, s)));
}
function X4(t) {
  let e = [];
  e.push({
    id: "yazyYoYkq",
    name: "KeychainItemLocation",
    value: t.keychainItemLocation,
  }),
    e.push({ id: "-Z42kquDH", name: "KeychainItem", value: t.keychainItem }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "lUe-3TWITt",
          "810ecd5f6f60399507458a7cda7f73756fd7c9c1b85a42df15afea719d86a1d4",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Key Export Succeeded", n, a),
      _ && q("lUe-3TWITt", "Key Export Succeeded", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Key Export Succeeded': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Key Export Succeeded",
          n,
          "lUe-3TWITt",
          "810ecd5f6f60399507458a7cda7f73756fd7c9c1b85a42df15afea719d86a1d4"
        ),
      V.logEvent("Key Export Succeeded", Object.assign({}, s)));
}
function Q4() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "FJvalLpllU",
          "457a1bbe08ace289b95f886ef546fb71d2935920d6526fd568a68bf0063957f5",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Export Key Stopped", e, r),
      _ && q("FJvalLpllU", "Export Key Stopped", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Export Key Stopped': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Export Key Stopped",
          e,
          "FJvalLpllU",
          "457a1bbe08ace289b95f886ef546fb71d2935920d6526fd568a68bf0063957f5"
        ),
      V.logEvent("Export Key Stopped", Object.assign({}, a)));
}
function Ane(t) {
  let e = [];
  e.push({ id: "u53M8Xyd2", name: "SFTPSource", value: t.sftpsource }),
    e.push({
      id: "WZawPsBEK",
      name: "SFTPTabOpenedVia",
      value: t.sftptabOpenedVia,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "dpEL6WG2xY",
          "b910ae66886a7d0a456a553c9cef41ed53c7002824ba1a3c2a10b9bfc3d9bf9e",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("SFTP Screen Opened", n, a),
      _ && q("dpEL6WG2xY", "SFTP Screen Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'SFTP Screen Opened': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "SFTP Screen Opened",
          n,
          "dpEL6WG2xY",
          "b910ae66886a7d0a456a553c9cef41ed53c7002824ba1a3c2a10b9bfc3d9bf9e"
        ),
      V.logEvent("SFTP Screen Opened", Object.assign({}, s)));
}
function J4(t) {
  let e = [];
  e.push({
    id: "pLarNQTsUH",
    name: "BuyNowButtonLocation",
    value: t.buyNowButtonLocation,
  }),
    e.push({ id: "gDYctvq6g", name: "ProductID", value: t.productID }),
    t.upgradeToProFunnelID !== void 0 && t.upgradeToProFunnelID !== null
      ? e.push({
          id: "LxHTbfjiwj",
          name: "UpgradeToProFunnelID",
          value: t.upgradeToProFunnelID,
        })
      : e.push({ id: "LxHTbfjiwj", name: "UpgradeToProFunnelID", value: null }),
    t.period !== void 0 && t.period !== null
      ? e.push({ id: "c3Fu42Njx", name: "Period", value: t.period })
      : e.push({ id: "c3Fu42Njx", name: "Period", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "4l_C1pQSMC",
          "1700a94520f9e8833accf8926fbbcedfd67105e432d9bd5de34a31acd1087081",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Buy Now Button Pressed", n, a),
      _ && q("4l_C1pQSMC", "Buy Now Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Buy Now Button Pressed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Buy Now Button Pressed",
          n,
          "4l_C1pQSMC",
          "1700a94520f9e8833accf8926fbbcedfd67105e432d9bd5de34a31acd1087081"
        ),
      V.logEvent("Buy Now Button Pressed", Object.assign({}, s)));
}
function Z4(t) {
  let e = [];
  e.push({
    id: "ks7IIGgN1",
    name: "TeamJoinedMembers",
    value: t.teamJoinedMembers,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "E5g4JCeZ3-",
          "9fd1e322c40dfb30a86982b00f5d5dd3c329b881d2365b4b63e2c7beb3bdcf6e",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Team Trial Extension Offer Screen Opened", n, a),
      _ &&
        q(
          "E5g4JCeZ3-",
          "Team Trial Extension Offer Screen Opened",
          i,
          e,
          r,
          []
        ),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Team Trial Extension Offer Screen Opened': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Team Trial Extension Offer Screen Opened",
          n,
          "E5g4JCeZ3-",
          "9fd1e322c40dfb30a86982b00f5d5dd3c329b881d2365b4b63e2c7beb3bdcf6e"
        ),
      V.logEvent(
        "Team Trial Extension Offer Screen Opened",
        Object.assign({}, s)
      ));
}
function eM(t) {
  let e = [];
  e.push({ id: "IdLc6aidYP", name: "Entity", value: t.entity }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "K2fdYB7UpI",
          "8b9b2f5a18854b2bb0f40cf89a95cb8e0c16c14b59180ac4c10709ce98ef613f",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Edit Host Chain Screen Opened", n, a),
      _ && q("K2fdYB7UpI", "Edit Host Chain Screen Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Edit Host Chain Screen Opened': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Edit Host Chain Screen Opened",
          n,
          "K2fdYB7UpI",
          "8b9b2f5a18854b2bb0f40cf89a95cb8e0c16c14b59180ac4c10709ce98ef613f"
        ),
      V.logEvent("Edit Host Chain Screen Opened", Object.assign({}, s)));
}
function tM() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "AhZNGaZLkq",
          "e1dea7683994444ac580d1d7db49e576e1ead66c85afbe018705c29b069046de",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Copy Public Key Button Pressed", e, r),
      _ && q("AhZNGaZLkq", "Copy Public Key Button Pressed", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Copy Public Key Button Pressed': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Copy Public Key Button Pressed",
          e,
          "AhZNGaZLkq",
          "e1dea7683994444ac580d1d7db49e576e1ead66c85afbe018705c29b069046de"
        ),
      V.logEvent("Copy Public Key Button Pressed", Object.assign({}, a)));
}
function nM(t) {
  let e = [];
  e.push({
    id: "AIzqCgQNNB",
    name: "IsSSHConfigEnabled",
    value: t.isSshConfigEnabled,
  }),
    e.push({
      id: "MeRgdhdj-V",
      name: "IsTelnetConfigEnabled",
      value: t.isTelnetConfigEnabled,
    }),
    t.cloudIntegration !== void 0 && t.cloudIntegration !== null
      ? e.push({
          id: "9KGA7NDbUO",
          name: "CloudIntegration",
          value: t.cloudIntegration,
        })
      : e.push({ id: "9KGA7NDbUO", name: "CloudIntegration", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "IwJLQDAloY",
          "9b6526b8436533f08ce6c32caeac72f5f81cd31ecd274b7e1bd33d6296b8698d",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Group Settings Opened", n, a),
      _ && q("IwJLQDAloY", "Group Settings Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Group Settings Opened': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Group Settings Opened",
          n,
          "IwJLQDAloY",
          "9b6526b8436533f08ce6c32caeac72f5f81cd31ecd274b7e1bd33d6296b8698d"
        ),
      V.logEvent("Group Settings Opened", Object.assign({}, s)));
}
function sM(t) {
  let e = [];
  e.push({ id: "FHiAAlmFBK", name: "CloudErrorType", value: t.cloudErrorType }),
    e.push({
      id: "9KGA7NDbUO",
      name: "CloudIntegration",
      value: t.cloudIntegration,
    }),
    e.push({
      id: "zk_ff4qfU",
      name: "ImportedServices",
      value: t.importedServices,
    }),
    e.push({
      id: "2X2YElVC7w",
      name: "ImportedIPType",
      value: t.importedIpType,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "X_1typjhPG",
          "baf264b33857a8dc7b74f4930995f695f2f11ef3df2a9b73ad4d85278e9693ad",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Cloud Sync Failed", n, a),
      _ && q("X_1typjhPG", "Cloud Sync Failed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Cloud Sync Failed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Cloud Sync Failed",
          n,
          "X_1typjhPG",
          "baf264b33857a8dc7b74f4930995f695f2f11ef3df2a9b73ad4d85278e9693ad"
        ),
      V.logEvent("Cloud Sync Failed", Object.assign({}, s)));
}
function rM(t) {
  let e = [];
  e.push({ id: "ToOcPzU1Lu", name: "ExtensionOffer", value: t.extensionOffer }),
    e.push({
      id: "7Era1drMui",
      name: "DowngradeButtonLocation",
      value: t.downgradeButtonLocation,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "bKbL2IkGyO",
          "99c30ad5f96b1525ca186ccb6feba98ca8ade75bfaa173aced7099c23b397003",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Downgrade to Hobby Button Pressed", n, a),
      _ && q("bKbL2IkGyO", "Downgrade to Hobby Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Downgrade to Hobby Button Pressed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Downgrade to Hobby Button Pressed",
          n,
          "bKbL2IkGyO",
          "99c30ad5f96b1525ca186ccb6feba98ca8ade75bfaa173aced7099c23b397003"
        ),
      V.logEvent("Downgrade to Hobby Button Pressed", Object.assign({}, s)));
}
function aM() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "NFBOw9mgHX",
          "990c7c557a3812dd9486ac25dfafc8009054ee1ba6318356e82a6015ba6665e6",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("History Details Screen Opened", e, r),
      _ && q("NFBOw9mgHX", "History Details Screen Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'History Details Screen Opened': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "History Details Screen Opened",
          e,
          "NFBOw9mgHX",
          "990c7c557a3812dd9486ac25dfafc8009054ee1ba6318356e82a6015ba6665e6"
        ),
      V.logEvent("History Details Screen Opened", Object.assign({}, a)));
}
function iM(t) {
  let e = [];
  e.push({ id: "uezZxC86dI", name: "PackageOrigin", value: t.packageOrigin }),
    e.push({ id: "OPNqNxEuxS", name: "SharedEntity", value: t.isSharedEntity }),
    t.predefinedSnippetPackageID !== void 0 &&
    t.predefinedSnippetPackageID !== null
      ? e.push({
          id: "dWZSKigQm",
          name: "PredefinedSnippetPackageID",
          value: t.predefinedSnippetPackageID,
        })
      : e.push({
          id: "dWZSKigQm",
          name: "PredefinedSnippetPackageID",
          value: null,
        }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [];
  r.push({
    id: "arkc-Mgeq",
    name: "SnippetPackages",
    value: t.snippetPackages,
  });
  let a = P(r);
  if (h !== "prod" || _) {
    let o = [];
    if (
      ((o = o.concat(le(b))),
      (o = o.concat(ce(E))),
      v ||
        W(
          h,
          "rC-XB7CMwe",
          "072f3fae7a288921f0bf48c8901a16e37eca77f655d78a70865421aaa6c5fddc",
          o.map((u) =>
            Object.assign(
              {},
              {
                tag: u.tag,
                propertyId: u.propertyId,
                additionalProperties: u.additionalProperties,
                actualType: u.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Snippet Package Created", n, a),
      _ && q("rC-XB7CMwe", "Snippet Package Created", o, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (o.length !== 0)
        throw new Error(
          "Error sending event 'Snippet Package Created': " + o[0].message
        );
    } else
      o.forEach(function (u) {
        console[$ || "error"]("[avo] " + u.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts;
  let i = { ...a };
  v ||
    (w != null &&
      w._avoFunctionTrackSchemaFromEvent(
        "Snippet Package Created",
        n,
        "rC-XB7CMwe",
        "072f3fae7a288921f0bf48c8901a16e37eca77f655d78a70865421aaa6c5fddc"
      ),
    V.setUserProperties(Object.assign({}, i)),
    V.logEvent("Snippet Package Created", Object.assign({}, s)));
}
function oM(t) {
  let e = [];
  e.push({ id: "OPNqNxEuxS", name: "SharedEntity", value: t.isSharedEntity }),
    e.push({
      id: "ymKyyoK7m0",
      name: "SnippetPackageID",
      value: t.snippetPackageID,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [];
  r.push({
    id: "arkc-Mgeq",
    name: "SnippetPackages",
    value: t.snippetPackages,
  });
  let a = P(r);
  if (h !== "prod" || _) {
    let o = [];
    if (
      ((o = o.concat(mne(t.snippetPackageID))),
      (o = o.concat(le(b))),
      (o = o.concat(ce(E))),
      v ||
        W(
          h,
          "Z7XEb2H9oz",
          "72d1277a83ac6c322843754cd43e52796ac48965afab49472de756fd800843e8",
          o.map((u) =>
            Object.assign(
              {},
              {
                tag: u.tag,
                propertyId: u.propertyId,
                additionalProperties: u.additionalProperties,
                actualType: u.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Snippet Package Deleted", n, a),
      _ && q("Z7XEb2H9oz", "Snippet Package Deleted", o, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (o.length !== 0)
        throw new Error(
          "Error sending event 'Snippet Package Deleted': " + o[0].message
        );
    } else
      o.forEach(function (u) {
        console[$ || "error"]("[avo] " + u.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts;
  let i = { ...a };
  v ||
    (w != null &&
      w._avoFunctionTrackSchemaFromEvent(
        "Snippet Package Deleted",
        n,
        "Z7XEb2H9oz",
        "72d1277a83ac6c322843754cd43e52796ac48965afab49472de756fd800843e8"
      ),
    V.setUserProperties(Object.assign({}, i)),
    V.logEvent("Snippet Package Deleted", Object.assign({}, s)));
}
function uM() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "7D8dpNPlWS",
          "c23ebd79d9d802597a2f1ef6877ef78785c390e374b3be76998543655dc14087",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("New Snippet Package Button Pressed", e, r),
      _ && q("7D8dpNPlWS", "New Snippet Package Button Pressed", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'New Snippet Package Button Pressed': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "New Snippet Package Button Pressed",
          e,
          "7D8dpNPlWS",
          "c23ebd79d9d802597a2f1ef6877ef78785c390e374b3be76998543655dc14087"
        ),
      V.logEvent("New Snippet Package Button Pressed", Object.assign({}, a)));
}
function One() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "8WGkh-spEr",
          "5aeba62184fe281bfc62bd8cf6be7b47f96e221c498dd751887ee94f941213fb",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Snippets Screen Opened", e, r),
      _ && q("8WGkh-spEr", "Snippets Screen Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Snippets Screen Opened': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Snippets Screen Opened",
          e,
          "8WGkh-spEr",
          "5aeba62184fe281bfc62bd8cf6be7b47f96e221c498dd751887ee94f941213fb"
        ),
      V.logEvent("Snippets Screen Opened", Object.assign({}, a)));
}
function lM(t) {
  let e = [];
  e.push({ id: "rQnlDCA-VS", name: "Instruction", value: t.instruction }),
    e.push({
      id: "gYbcr8Ydm",
      name: "DownloadPlatform",
      value: t.downloadPlatform,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "VwUPK1Z-L",
          "2e4e4671674ee87d69e67d667b67e7da84b0fa1391ff86b71ac03c83e46f2011",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Copy Download Link Button Pressed", n, a),
      _ && q("VwUPK1Z-L", "Copy Download Link Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Copy Download Link Button Pressed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Copy Download Link Button Pressed",
          n,
          "VwUPK1Z-L",
          "2e4e4671674ee87d69e67d667b67e7da84b0fa1391ff86b71ac03c83e46f2011"
        ),
      V.logEvent("Copy Download Link Button Pressed", Object.assign({}, s)));
}
function Hne() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "KhZJJ3Oas",
          "21622a6bbd100371a95898351eb34e6ca6ddd37de2f65b4f9d9f70da71520cba",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Pro Trial Extended Screen Opened", e, r),
      _ && q("KhZJJ3Oas", "Pro Trial Extended Screen Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Pro Trial Extended Screen Opened': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Pro Trial Extended Screen Opened",
          e,
          "KhZJJ3Oas",
          "21622a6bbd100371a95898351eb34e6ca6ddd37de2f65b4f9d9f70da71520cba"
        ),
      V.logEvent("Pro Trial Extended Screen Opened", Object.assign({}, a)));
}
function Nne() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "FC-5LUc5f",
          "f2e344dce81194e61f4a5a2c4e7ddab8e4bc5c7e4c5dc9ca2cab5f273a1dc2e2",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Pro Trial Extension Offer Screen Opened", e, r),
      _ &&
        q("FC-5LUc5f", "Pro Trial Extension Offer Screen Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Pro Trial Extension Offer Screen Opened': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Pro Trial Extension Offer Screen Opened",
          e,
          "FC-5LUc5f",
          "f2e344dce81194e61f4a5a2c4e7ddab8e4bc5c7e4c5dc9ca2cab5f273a1dc2e2"
        ),
      V.logEvent(
        "Pro Trial Extension Offer Screen Opened",
        Object.assign({}, a)
      ));
}
function Rne() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "2B2fjY2wol",
          "560a879153be3340e3e384f862048d2575dd1b6803bbb084839e6f4fc8b34912",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Extend Pro Trial Button Pressed", e, r),
      _ && q("2B2fjY2wol", "Extend Pro Trial Button Pressed", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Extend Pro Trial Button Pressed': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Extend Pro Trial Button Pressed",
          e,
          "2B2fjY2wol",
          "560a879153be3340e3e384f862048d2575dd1b6803bbb084839e6f4fc8b34912"
        ),
      V.logEvent("Extend Pro Trial Button Pressed", Object.assign({}, a)));
}
function cM(t) {
  let e = [];
  e.push({
    id: "ilRHb7HbEk",
    name: "CreatePortForwardingWizardStep",
    value: t.createPortForwardingWizardStep,
  }),
    e.push({
      id: "vsXVGIjJfk",
      name: "PortForwardingType",
      value: t.portForwardingType,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "i9BbQv_W2B",
          "d6c1e1929023657470e3ba123edc74bcf7d6a63a5b8a7d95d2049738ed74e7cd",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Create Port Forwarding Wizard View Opened", n, a),
      _ &&
        q(
          "i9BbQv_W2B",
          "Create Port Forwarding Wizard View Opened",
          i,
          e,
          r,
          []
        ),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Create Port Forwarding Wizard View Opened': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Create Port Forwarding Wizard View Opened",
          n,
          "i9BbQv_W2B",
          "d6c1e1929023657470e3ba123edc74bcf7d6a63a5b8a7d95d2049738ed74e7cd"
        ),
      V.logEvent(
        "Create Port Forwarding Wizard View Opened",
        Object.assign({}, s)
      ));
}
function dM(t) {
  let e = [];
  e.push({
    id: "4RAzf2u5DV",
    name: "PortForwardingFormType",
    value: t.portForwardingFormType,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "KDbDSyMFA",
          "376748d59d0fbf15c2cd899fd8f46beb934435dea93d4cc56c1abcc3a676d8f1",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Port Forwarding Form Type Changed", n, a),
      _ && q("KDbDSyMFA", "Port Forwarding Form Type Changed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Port Forwarding Form Type Changed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Port Forwarding Form Type Changed",
          n,
          "KDbDSyMFA",
          "376748d59d0fbf15c2cd899fd8f46beb934435dea93d4cc56c1abcc3a676d8f1"
        ),
      V.logEvent("Port Forwarding Form Type Changed", Object.assign({}, s)));
}
function kne() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "sWZjFhRmZ",
          "efaf2cc0b21988c51baaaf30d7b62a3f1eac7d7d00caa8680ff599cf6f8acc70",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Port Forwarding Screen Opened", e, r),
      _ && q("sWZjFhRmZ", "Port Forwarding Screen Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Port Forwarding Screen Opened': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Port Forwarding Screen Opened",
          e,
          "sWZjFhRmZ",
          "efaf2cc0b21988c51baaaf30d7b62a3f1eac7d7d00caa8680ff599cf6f8acc70"
        ),
      V.logEvent("Port Forwarding Screen Opened", Object.assign({}, a)));
}
function pM(t) {
  let e = [];
  e.push({ id: "LeXsAZ3QC", name: "LoginType", value: t.loginType }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "r-OkQKHNnn",
          "102ab1402dc0b9591e86bc6fd9347a6ee4a72a3c65aefd6212af5ac2885dd7d8",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Log-in Screen Opened", n, a),
      _ && q("r-OkQKHNnn", "Log-in Screen Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Log-in Screen Opened': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Log-in Screen Opened",
          n,
          "r-OkQKHNnn",
          "102ab1402dc0b9591e86bc6fd9347a6ee4a72a3c65aefd6212af5ac2885dd7d8"
        ),
      V.logEvent("Log-in Screen Opened", Object.assign({}, s)));
}
function hM() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "KP0X5bOND1",
          "cbe1b72894a9a2b4692bdd05997ae9be7d69219aff8b70e84c978638935c3c8a",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Enterprise SSO Button Pressed", e, r),
      _ && q("KP0X5bOND1", "Enterprise SSO Button Pressed", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Enterprise SSO Button Pressed': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Enterprise SSO Button Pressed",
          e,
          "KP0X5bOND1",
          "cbe1b72894a9a2b4692bdd05997ae9be7d69219aff8b70e84c978638935c3c8a"
        ),
      V.logEvent("Enterprise SSO Button Pressed", Object.assign({}, a)));
}
function fM(t) {
  let e = [];
  e.push({ id: "gqOecLjxp", name: "ErrorMessage", value: t.errorMessage }),
    e.push({ id: "B6I4Af3CH3", name: "OnScreen", value: t.onScreen }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "Ki56E_KBPb",
          "68e865a9fc8550aecc21a79f05376185ae366d353a988b2a912746921b3acbf6",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("User Login Failed", n, a),
      _ && q("Ki56E_KBPb", "User Login Failed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'User Login Failed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "User Login Failed",
          n,
          "Ki56E_KBPb",
          "68e865a9fc8550aecc21a79f05376185ae366d353a988b2a912746921b3acbf6"
        ),
      V.logEvent("User Login Failed", Object.assign({}, s)));
}
function mM(t) {
  let e = [];
  e.push({
    id: "g5hgdQgvZF",
    name: "FIDO2WizardSource",
    value: t.fido2WizardSource,
  }),
    e.push({ id: "MGexS9ePV", name: "WizardID", value: t.wizardID }),
    t.connectionID !== void 0 && t.connectionID !== null
      ? e.push({
          id: "LtX0SIqFoB",
          name: "ConnectionID",
          value: t.connectionID,
        })
      : e.push({ id: "LtX0SIqFoB", name: "ConnectionID", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "qFO-YELvdm",
          "868965ec59fdc3cb414613543b1a938dd950f3f0b30bcc387ad14e1bc2cc77f1",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("FIDO2 Device Selected", n, a),
      _ && q("qFO-YELvdm", "FIDO2 Device Selected", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'FIDO2 Device Selected': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "FIDO2 Device Selected",
          n,
          "qFO-YELvdm",
          "868965ec59fdc3cb414613543b1a938dd950f3f0b30bcc387ad14e1bc2cc77f1"
        ),
      V.logEvent("FIDO2 Device Selected", Object.assign({}, s)));
}
function SM(t) {
  let e = [];
  e.push({ id: "MGexS9ePV", name: "WizardID", value: t.wizardID }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "-NrpYBIgn",
          "3c4a10fe511040d0b876695471a867c42dbc0d241aaeea6503ea6cce0635a005",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("FIDO2 Keygen Options Submitted", n, a),
      _ && q("-NrpYBIgn", "FIDO2 Keygen Options Submitted", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'FIDO2 Keygen Options Submitted': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "FIDO2 Keygen Options Submitted",
          n,
          "-NrpYBIgn",
          "3c4a10fe511040d0b876695471a867c42dbc0d241aaeea6503ea6cce0635a005"
        ),
      V.logEvent("FIDO2 Keygen Options Submitted", Object.assign({}, s)));
}
function yM(t) {
  let e = [];
  e.push({ id: "MGexS9ePV", name: "WizardID", value: t.wizardID }),
    e.push({
      id: "g5hgdQgvZF",
      name: "FIDO2WizardSource",
      value: t.fido2WizardSource,
    }),
    t.connectionID !== void 0 && t.connectionID !== null
      ? e.push({
          id: "LtX0SIqFoB",
          name: "ConnectionID",
          value: t.connectionID,
        })
      : e.push({ id: "LtX0SIqFoB", name: "ConnectionID", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "FZwvuuD2mQ",
          "7cff990d8e21b40ac2533e9d0a000921027b397773c127f435d5a4fdbc57b4e0",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("FIDO2 PIN Code Requested", n, a),
      _ && q("FZwvuuD2mQ", "FIDO2 PIN Code Requested", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'FIDO2 PIN Code Requested': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "FIDO2 PIN Code Requested",
          n,
          "FZwvuuD2mQ",
          "7cff990d8e21b40ac2533e9d0a000921027b397773c127f435d5a4fdbc57b4e0"
        ),
      V.logEvent("FIDO2 PIN Code Requested", Object.assign({}, s)));
}
function gM(t) {
  let e = [];
  e.push({ id: "MGexS9ePV", name: "WizardID", value: t.wizardID }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "WjTjNSFyp4",
          "678b086e00d2d2a3026e23ef9344f4cbb695a70ea5d2247f4cdce191ef49bb68",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("FIDO2 Key Generation Confirmed", n, a),
      _ && q("WjTjNSFyp4", "FIDO2 Key Generation Confirmed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'FIDO2 Key Generation Confirmed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "FIDO2 Key Generation Confirmed",
          n,
          "WjTjNSFyp4",
          "678b086e00d2d2a3026e23ef9344f4cbb695a70ea5d2247f4cdce191ef49bb68"
        ),
      V.logEvent("FIDO2 Key Generation Confirmed", Object.assign({}, s)));
}
function vM(t) {
  let e = [];
  e.push({
    id: "g5hgdQgvZF",
    name: "FIDO2WizardSource",
    value: t.fido2WizardSource,
  }),
    e.push({ id: "MGexS9ePV", name: "WizardID", value: t.wizardID }),
    t.connectionID !== void 0 && t.connectionID !== null
      ? e.push({
          id: "LtX0SIqFoB",
          name: "ConnectionID",
          value: t.connectionID,
        })
      : e.push({ id: "LtX0SIqFoB", name: "ConnectionID", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "UVM4_NbKDr",
          "d17f6ac5be47dac2615cc399253571d3a2d0e238e0ea07d437486802bd58f5f6",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("FIDO2 SSH Keys Selected", n, a),
      _ && q("UVM4_NbKDr", "FIDO2 SSH Keys Selected", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'FIDO2 SSH Keys Selected': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "FIDO2 SSH Keys Selected",
          n,
          "UVM4_NbKDr",
          "d17f6ac5be47dac2615cc399253571d3a2d0e238e0ea07d437486802bd58f5f6"
        ),
      V.logEvent("FIDO2 SSH Keys Selected", Object.assign({}, s)));
}
function _M() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "sBkVBkHVh",
          "5434815941178c2ceac4fa8a457d300ada72adda7fb0819b023566fc1f416e09",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Split View Tab Created", e, r),
      _ && q("sBkVBkHVh", "Split View Tab Created", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Split View Tab Created': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Split View Tab Created",
          e,
          "sBkVBkHVh",
          "5434815941178c2ceac4fa8a457d300ada72adda7fb0819b023566fc1f416e09"
        ),
      V.logEvent("Split View Tab Created", Object.assign({}, a)));
}
function bM(t) {
  let e = [];
  e.push({
    id: "MiV7GjvDO",
    name: "NumberOfTerminals",
    value: t.numberOfTerminals,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "4XntknxtM",
          "949c1ead638546ca28f7416eab141d522d893725d70102fbce9326d47ea99a0d",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Split View Tab Updated", n, a),
      _ && q("4XntknxtM", "Split View Tab Updated", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Split View Tab Updated': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Split View Tab Updated",
          n,
          "4XntknxtM",
          "949c1ead638546ca28f7416eab141d522d893725d70102fbce9326d47ea99a0d"
        ),
      V.logEvent("Split View Tab Updated", Object.assign({}, s)));
}
function EM() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "lt0ay4U2Qo",
          "bba55951ef65d25008d0c8226545008f3fe103c8da6ee35b43e98f740c40908f",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Copy Host Details Link Button Pressed", e, r),
      _ &&
        q("lt0ay4U2Qo", "Copy Host Details Link Button Pressed", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Copy Host Details Link Button Pressed': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Copy Host Details Link Button Pressed",
          e,
          "lt0ay4U2Qo",
          "bba55951ef65d25008d0c8226545008f3fe103c8da6ee35b43e98f740c40908f"
        ),
      V.logEvent(
        "Copy Host Details Link Button Pressed",
        Object.assign({}, a)
      ));
}
function TM() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "kIODlszstp",
          "e588df51a3b0029de728f52f4248f672cbdb7a14c961585476bc48188fb598b3",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Split View Button Pressed", e, r),
      _ && q("kIODlszstp", "Split View Button Pressed", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Split View Button Pressed': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Split View Button Pressed",
          e,
          "kIODlszstp",
          "e588df51a3b0029de728f52f4248f672cbdb7a14c961585476bc48188fb598b3"
        ),
      V.logEvent("Split View Button Pressed", Object.assign({}, a)));
}
function wM(t) {
  let e = [];
  e.push({ id: "IdLc6aidYP", name: "Entity", value: t.entity }),
    e.push({ id: "B6I4Af3CH3", name: "OnScreen", value: t.onScreen }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "NIEv7wr9a2",
          "533ba851cf2b84fd3e4503c1a3de46dcc2f528a1c015404d4ff0b0099e77c209",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Duplicate Button Pressed", n, a),
      _ && q("NIEv7wr9a2", "Duplicate Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Duplicate Button Pressed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Duplicate Button Pressed",
          n,
          "NIEv7wr9a2",
          "533ba851cf2b84fd3e4503c1a3de46dcc2f528a1c015404d4ff0b0099e77c209"
        ),
      V.logEvent("Duplicate Button Pressed", Object.assign({}, s)));
}
function PM(t) {
  let e = [];
  e.push({ id: "B6I4Af3CH3", name: "OnScreen", value: t.onScreen }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "ReDcdERgH4",
          "daf77a8b105fed82c72ba7f7e97450a201d16b123ed21d2457255832938b097e",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("SSH Key Dragged and Dropped", n, a),
      _ && q("ReDcdERgH4", "SSH Key Dragged and Dropped", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'SSH Key Dragged and Dropped': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "SSH Key Dragged and Dropped",
          n,
          "ReDcdERgH4",
          "daf77a8b105fed82c72ba7f7e97450a201d16b123ed21d2457255832938b097e"
        ),
      V.logEvent("SSH Key Dragged and Dropped", Object.assign({}, s)));
}
function IM(t) {
  let e = [];
  e.push({
    id: "9KGA7NDbUO",
    name: "CloudIntegration",
    value: t.cloudIntegration,
  }),
    e.push({
      id: "avGrPTXK6",
      name: "CloudSyncButtonOrigin",
      value: t.cloudSyncButtonOrigin,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "HmHH4sLcW2",
          "111f5aaa275845090a2fbd2f7fbabc190c0ef7b52804e3cdd87bdc64269a4d7d",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Setup Cloud Sync Button Pressed", n, a),
      _ && q("HmHH4sLcW2", "Setup Cloud Sync Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Setup Cloud Sync Button Pressed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Setup Cloud Sync Button Pressed",
          n,
          "HmHH4sLcW2",
          "111f5aaa275845090a2fbd2f7fbabc190c0ef7b52804e3cdd87bdc64269a4d7d"
        ),
      V.logEvent("Setup Cloud Sync Button Pressed", Object.assign({}, s)));
}
function CM(t) {
  let e = [];
  e.push({ id: "B6I4Af3CH3", name: "OnScreen", value: t.onScreen }),
    e.push({
      id: "iGacyV6jQ",
      name: "AssociatedWith",
      value: t.associatedWith,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "3dvucCzA3E",
          "5d9449224a093519d56e615c91aef14ef1171f45e00d0631f5b1a449bd92dcfe",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Toolbar Chevron Button Pressed", n, a),
      _ && q("3dvucCzA3E", "Toolbar Chevron Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Toolbar Chevron Button Pressed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Toolbar Chevron Button Pressed",
          n,
          "3dvucCzA3E",
          "5d9449224a093519d56e615c91aef14ef1171f45e00d0631f5b1a449bd92dcfe"
        ),
      V.logEvent("Toolbar Chevron Button Pressed", Object.assign({}, s)));
}
function AM() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "7AtZHQmcNf",
          "f40f24565102a85defbeb6897cece90471931701108558de1880435bf8f2b553",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Enable Sharing Screen Shown", e, r),
      _ && q("7AtZHQmcNf", "Enable Sharing Screen Shown", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Enable Sharing Screen Shown': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Enable Sharing Screen Shown",
          e,
          "7AtZHQmcNf",
          "f40f24565102a85defbeb6897cece90471931701108558de1880435bf8f2b553"
        ),
      V.logEvent("Enable Sharing Screen Shown", Object.assign({}, a)));
}
function OM() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "KbvoQixKw-",
          "b432672d9f992e33c0aef53f0b3edacaa486df99b3997727642bf3b7d5de8497",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Enable Sharing Form Submitted", e, r),
      _ && q("KbvoQixKw-", "Enable Sharing Form Submitted", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Enable Sharing Form Submitted': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Enable Sharing Form Submitted",
          e,
          "KbvoQixKw-",
          "b432672d9f992e33c0aef53f0b3edacaa486df99b3997727642bf3b7d5de8497"
        ),
      V.logEvent("Enable Sharing Form Submitted", Object.assign({}, a)));
}
function HM() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "RGLmz_XlAG",
          "17cd62da419dd246b9a8705895cb310165c9c08b799697be5adf222da4f2405b",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Enable Sharing Form Postponed", e, r),
      _ && q("RGLmz_XlAG", "Enable Sharing Form Postponed", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Enable Sharing Form Postponed': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Enable Sharing Form Postponed",
          e,
          "RGLmz_XlAG",
          "17cd62da419dd246b9a8705895cb310165c9c08b799697be5adf222da4f2405b"
        ),
      V.logEvent("Enable Sharing Form Postponed", Object.assign({}, a)));
}
function NM() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "GvtPnfbvg",
          "2790c36f572ce11f252caa31020224ce2a23a9096c14811288af4eea0cc7f5cd",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Enable Sharing Form Error Caught", e, r),
      _ && q("GvtPnfbvg", "Enable Sharing Form Error Caught", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Enable Sharing Form Error Caught': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Enable Sharing Form Error Caught",
          e,
          "GvtPnfbvg",
          "2790c36f572ce11f252caa31020224ce2a23a9096c14811288af4eea0cc7f5cd"
        ),
      V.logEvent("Enable Sharing Form Error Caught", Object.assign({}, a)));
}
function RM() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "eVDeCr0IZ",
          "8c624a27d1ac8ede67c56ed438f8702829593e129d8bfca419a1aa4cc5a49f0d",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Enable Sharing Form Succeeded", e, r),
      _ && q("eVDeCr0IZ", "Enable Sharing Form Succeeded", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Enable Sharing Form Succeeded': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Enable Sharing Form Succeeded",
          e,
          "eVDeCr0IZ",
          "8c624a27d1ac8ede67c56ed438f8702829593e129d8bfca419a1aa4cc5a49f0d"
        ),
      V.logEvent("Enable Sharing Form Succeeded", Object.assign({}, a)));
}
function kM() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "vLaRy837B",
          "fb7faee319131b024e2a0116d9160ea52341e5466991cef8a3d3704c72029980",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Platforms Setup Screen Opened", e, r),
      _ && q("vLaRy837B", "Platforms Setup Screen Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Platforms Setup Screen Opened': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Platforms Setup Screen Opened",
          e,
          "vLaRy837B",
          "fb7faee319131b024e2a0116d9160ea52341e5466991cef8a3d3704c72029980"
        ),
      V.logEvent("Platforms Setup Screen Opened", Object.assign({}, a)));
}
function xM(t) {
  let e = [];
  e.push({ id: "zuSXi5ulk4", name: "Trial", value: t.trial }),
    e.push({
      id: "LxHTbfjiwj",
      name: "UpgradeToProFunnelID",
      value: t.upgradeToProFunnelID,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "NHTG6qc8Mf",
          "d74f654384b7a77170f48f0b8f2b58af11b0ae1b82b5512971272e1c4ffec088",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Pro Plan Screen Opened", n, a),
      _ && q("NHTG6qc8Mf", "Pro Plan Screen Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Pro Plan Screen Opened': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Pro Plan Screen Opened",
          n,
          "NHTG6qc8Mf",
          "d74f654384b7a77170f48f0b8f2b58af11b0ae1b82b5512971272e1c4ffec088"
        ),
      V.logEvent("Pro Plan Screen Opened", Object.assign({}, s)));
}
function LM(t) {
  let e = [];
  e.push({
    id: "GARBBm-DW",
    name: "RunSnippetOrigin",
    value: t.runSnippetOrigin,
  }),
    e.push({ id: "MGexS9ePV", name: "WizardID", value: t.wizardID }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "2xXi_9148",
          "df3131dedc0a017b92b91d190fd79767475e4279cb350fc5076cdd47a62b6b5f",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Snippet Multi-Execution Targets Opened", n, a),
      _ &&
        q("2xXi_9148", "Snippet Multi-Execution Targets Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Snippet Multi-Execution Targets Opened': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Snippet Multi-Execution Targets Opened",
          n,
          "2xXi_9148",
          "df3131dedc0a017b92b91d190fd79767475e4279cb350fc5076cdd47a62b6b5f"
        ),
      V.logEvent(
        "Snippet Multi-Execution Targets Opened",
        Object.assign({}, s)
      ));
}
function MM(t) {
  let e = [];
  e.push({
    id: "E9zN6uflrr",
    name: "NumberOfSelectedHosts",
    value: t.numberOfSelectedHosts,
  }),
    e.push({
      id: "haxxWXSol",
      name: "CloseSessionsAfterRunning",
      value: t.closeSessionsAfterRunning,
    }),
    e.push({ id: "MGexS9ePV", name: "WizardID", value: t.wizardID }),
    e.push({
      id: "GARBBm-DW",
      name: "RunSnippetOrigin",
      value: t.runSnippetOrigin,
    }),
    e.push({
      id: "brGQVfI5Z",
      name: "UsedSavedSnippetTargets",
      value: t.usedSavedSnippetTargets,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "U3dK0Ur4ZO",
          "eac3404229af036b5c6aec5976bf014ca619352fdd3836b1ec5d0a93e2c30c7e",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Snippet Multi-Execution Started", n, a),
      _ && q("U3dK0Ur4ZO", "Snippet Multi-Execution Started", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Snippet Multi-Execution Started': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Snippet Multi-Execution Started",
          n,
          "U3dK0Ur4ZO",
          "eac3404229af036b5c6aec5976bf014ca619352fdd3836b1ec5d0a93e2c30c7e"
        ),
      V.logEvent("Snippet Multi-Execution Started", Object.assign({}, s)));
}
function DM(t) {
  let e = [];
  e.push({
    id: "8YHJy1sdm",
    name: "NumberOfSuccessExecutions",
    value: t.numberOfSuccessExecutions,
  }),
    e.push({
      id: "ly9HevPFu",
      name: "NumberOfFailedExecutions",
      value: t.numberOfFailedExecutions,
    }),
    e.push({
      id: "9SY7V76fo",
      name: "NumberOfFailedConnections",
      value: t.numberOfFailedConnections,
    }),
    e.push({ id: "MGexS9ePV", name: "WizardID", value: t.wizardID }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "98Jdtdmf1",
          "c53c16ad1d4cb9a5eb4530ac986d0fc01995b78f3e85df378b6f91fbaea85716",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Snippet Multi-Execution Completed", n, a),
      _ && q("98Jdtdmf1", "Snippet Multi-Execution Completed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Snippet Multi-Execution Completed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Snippet Multi-Execution Completed",
          n,
          "98Jdtdmf1",
          "c53c16ad1d4cb9a5eb4530ac986d0fc01995b78f3e85df378b6f91fbaea85716"
        ),
      V.logEvent("Snippet Multi-Execution Completed", Object.assign({}, s)));
}
function GM(t) {
  let e = [];
  e.push({
    id: "LxHTbfjiwj",
    name: "UpgradeToProFunnelID",
    value: t.upgradeToProFunnelID,
  }),
    e.push({ id: "zuSXi5ulk4", name: "Trial", value: t.trial }),
    e.push({ id: "KV_0SzvdI", name: "Source", value: t.from }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "eMzW8m9cb",
          "51544eb287d3b6dab4cc0a60374415b00c2359e03f22e7474006e605f99c5bd4",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Upgrade to Pro Funnel Started", n, a),
      _ && q("eMzW8m9cb", "Upgrade to Pro Funnel Started", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Upgrade to Pro Funnel Started': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Upgrade to Pro Funnel Started",
          n,
          "eMzW8m9cb",
          "51544eb287d3b6dab4cc0a60374415b00c2359e03f22e7474006e605f99c5bd4"
        ),
      V.logEvent("Upgrade to Pro Funnel Started", Object.assign({}, s)));
}
function FM(t) {
  let e = [];
  e.push({ id: "IdLc6aidYP", name: "Entity", value: t.entity }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "ACpUmXkZXw",
          "4a5269fd5998657c729e76c8277b83768a0f02cada1caac4a99637ae2b85d674",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Select Entity Screen Opened", n, a),
      _ && q("ACpUmXkZXw", "Select Entity Screen Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Select Entity Screen Opened': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Select Entity Screen Opened",
          n,
          "ACpUmXkZXw",
          "4a5269fd5998657c729e76c8277b83768a0f02cada1caac4a99637ae2b85d674"
        ),
      V.logEvent("Select Entity Screen Opened", Object.assign({}, s)));
}
function UM(t) {
  let e = [];
  e.push({
    id: "ZX5sNRmJp",
    name: "CreateIdentityOrigin",
    value: t.createIdentityOrigin,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "2_hOoZWV7",
          "3567b881b6ad27fc0af7e911eacbed35080b6b505e1258e5b7313620360d150d",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("New Identity Button Pressed", n, a),
      _ && q("2_hOoZWV7", "New Identity Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'New Identity Button Pressed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "New Identity Button Pressed",
          n,
          "2_hOoZWV7",
          "3567b881b6ad27fc0af7e911eacbed35080b6b505e1258e5b7313620360d150d"
        ),
      V.logEvent("New Identity Button Pressed", Object.assign({}, s)));
}
function KM(t) {
  let e = [];
  e.push({ id: "qkVi6xQuee", name: "IdentitySource", value: t.identitySource }),
    e.push({
      id: "N0LOUrnt3J",
      name: "NumberOfLinkedElements",
      value: t.numberOfLinkedElements,
    }),
    e.push({ id: "bp4_W5oM_u", name: "IdentityID", value: t.identityID }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "2sXQx-k7MX",
          "24a61a1393c1ee2791c1a7e2138a4e0533b8bf50635650e3052656b7a3bd78d9",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Identity Settings Screen Opened", n, a),
      _ && q("2sXQx-k7MX", "Identity Settings Screen Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Identity Settings Screen Opened': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Identity Settings Screen Opened",
          n,
          "2sXQx-k7MX",
          "24a61a1393c1ee2791c1a7e2138a4e0533b8bf50635650e3052656b7a3bd78d9"
        ),
      V.logEvent("Identity Settings Screen Opened", Object.assign({}, s)));
}
function BM() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "AzNLX3GNSR",
          "45b8083cb165ea5d5506782167f144edf15b5e69e7e28b8033b2e3f6dde8ffe2",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Welcome Setup Started", e, r),
      _ && q("AzNLX3GNSR", "Welcome Setup Started", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Welcome Setup Started': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Welcome Setup Started",
          e,
          "AzNLX3GNSR",
          "45b8083cb165ea5d5506782167f144edf15b5e69e7e28b8033b2e3f6dde8ffe2"
        ),
      V.logEvent("Welcome Setup Started", Object.assign({}, a)));
}
function VM(t) {
  let e = [];
  e.push({
    id: "QB8EP8ANu",
    name: "WelcomeSetupStep",
    value: t.welcomeSetupStep,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "Ibn69o5Ah",
          "e335d550b04ba0cbf5b06499506c6093b8f22e9bcb6db9827607de71b477500c",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Welcome Setup Step Skipped", n, a),
      _ && q("Ibn69o5Ah", "Welcome Setup Step Skipped", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Welcome Setup Step Skipped': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Welcome Setup Step Skipped",
          n,
          "Ibn69o5Ah",
          "e335d550b04ba0cbf5b06499506c6093b8f22e9bcb6db9827607de71b477500c"
        ),
      V.logEvent("Welcome Setup Step Skipped", Object.assign({}, s)));
}
function jM() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "rtevGhBZkG",
          "dd4e57e1ae0e5e3d350c6edbcdeffcd4a59c3fde74de98205d4a3371ce33bcde",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Import Setup Screen Opened", e, r),
      _ && q("rtevGhBZkG", "Import Setup Screen Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Import Setup Screen Opened': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Import Setup Screen Opened",
          e,
          "rtevGhBZkG",
          "dd4e57e1ae0e5e3d350c6edbcdeffcd4a59c3fde74de98205d4a3371ce33bcde"
        ),
      V.logEvent("Import Setup Screen Opened", Object.assign({}, a)));
}
function zM() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "Uf-_Q7tskB",
          "2b6d035595a213210bd70b22a1c5a2fd2624d0774c68b7ba22d78a08b217d45b",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Tools Setup Screen Opened", e, r),
      _ && q("Uf-_Q7tskB", "Tools Setup Screen Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Tools Setup Screen Opened': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Tools Setup Screen Opened",
          e,
          "Uf-_Q7tskB",
          "2b6d035595a213210bd70b22a1c5a2fd2624d0774c68b7ba22d78a08b217d45b"
        ),
      V.logEvent("Tools Setup Screen Opened", Object.assign({}, a)));
}
function $M(t) {
  let e = [];
  e.push({ id: "FXsGpFrYCv", name: "SelectedTools", value: t.selectedTools }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "wtQ-QSWGCe",
          "322cedd5710549dad8cda2ff3a9389043d959d8035afc39510ec1914841ceab4",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Professional Tools Selected", n, a),
      _ && q("wtQ-QSWGCe", "Professional Tools Selected", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Professional Tools Selected': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Professional Tools Selected",
          n,
          "wtQ-QSWGCe",
          "322cedd5710549dad8cda2ff3a9389043d959d8035afc39510ec1914841ceab4"
        ),
      V.logEvent("Professional Tools Selected", Object.assign({}, s)));
}
function WM(t) {
  let e = [];
  e.push({
    id: "tfd4YVqZw",
    name: "KeywordHighlightingEnabled",
    value: t.keywordHighlightingEnabled,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [];
  r.push({
    id: "s7RRaoVwo",
    name: "KeywordHighlighting",
    value: t.keywordHighlighting,
  });
  let a = P(r);
  if (h !== "prod" || _) {
    let o = [];
    if (
      ((o = o.concat(le(b))),
      (o = o.concat(ce(E))),
      v ||
        W(
          h,
          "eu1JI4WShB",
          "2999636fdedaad7a3a83896099987fe38252b65ce4ed6ff972d4fb11822ee91d",
          o.map((u) =>
            Object.assign(
              {},
              {
                tag: u.tag,
                propertyId: u.propertyId,
                additionalProperties: u.additionalProperties,
                actualType: u.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Keyword Highlighting Setting Changed", n, a),
      _ && q("eu1JI4WShB", "Keyword Highlighting Setting Changed", o, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (o.length !== 0)
        throw new Error(
          "Error sending event 'Keyword Highlighting Setting Changed': " +
            o[0].message
        );
    } else
      o.forEach(function (u) {
        console[$ || "error"]("[avo] " + u.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts;
  let i = { ...a };
  v ||
    (w != null &&
      w._avoFunctionTrackSchemaFromEvent(
        "Keyword Highlighting Setting Changed",
        n,
        "eu1JI4WShB",
        "2999636fdedaad7a3a83896099987fe38252b65ce4ed6ff972d4fb11822ee91d"
      ),
    V.setUserProperties(Object.assign({}, i)),
    V.logEvent("Keyword Highlighting Setting Changed", Object.assign({}, s)));
}
function qM() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "9dQJDDKcYg",
          "6195add6971628298fc39acadd91abea2803b1225e5e9d48ed9ae5f0f5cee000",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Keyword Color Item Pressed", e, r),
      _ && q("9dQJDDKcYg", "Keyword Color Item Pressed", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Keyword Color Item Pressed': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Keyword Color Item Pressed",
          e,
          "9dQJDDKcYg",
          "6195add6971628298fc39acadd91abea2803b1225e5e9d48ed9ae5f0f5cee000"
        ),
      V.logEvent("Keyword Color Item Pressed", Object.assign({}, a)));
}
function YM() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "SwtqGgKENV",
          "eaa8fa1d31ee81c3f1047acab93ba6fbfe5f9fa9a68e5c730edcc52704a28e42",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent(
        "Request Keywords Highlight Customization Button Pressed",
        e,
        r
      ),
      _ &&
        q(
          "SwtqGgKENV",
          "Request Keywords Highlight Customization Button Pressed",
          s,
          t,
          n,
          []
        ),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Request Keywords Highlight Customization Button Pressed': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Request Keywords Highlight Customization Button Pressed",
          e,
          "SwtqGgKENV",
          "eaa8fa1d31ee81c3f1047acab93ba6fbfe5f9fa9a68e5c730edcc52704a28e42"
        ),
      V.logEvent(
        "Request Keywords Highlight Customization Button Pressed",
        Object.assign({}, a)
      ));
}
function XM() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "crCM5fiPHq",
          "488cf4c693ae2d64689b8964ff8451e382eb82efebb8380a1a03e757581848c5",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Advanced Settings Button Pressed", e, r),
      _ && q("crCM5fiPHq", "Advanced Settings Button Pressed", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Advanced Settings Button Pressed': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Advanced Settings Button Pressed",
          e,
          "crCM5fiPHq",
          "488cf4c693ae2d64689b8964ff8451e382eb82efebb8380a1a03e757581848c5"
        ),
      V.logEvent("Advanced Settings Button Pressed", Object.assign({}, a)));
}
function QM(t) {
  let e = [];
  e.push({
    id: "B2UYJN6OD",
    name: "SaveAsHostEnabled",
    value: t.saveAsHostEnabled,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "JMpuRHYTTa",
          "e28207bb4782d41b4233fe7bf93f63dc85ea7321333a11ee43df2f0f41afa7c4",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Save as Host Setting Changed", n, a),
      _ && q("JMpuRHYTTa", "Save as Host Setting Changed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Save as Host Setting Changed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Save as Host Setting Changed",
          n,
          "JMpuRHYTTa",
          "e28207bb4782d41b4233fe7bf93f63dc85ea7321333a11ee43df2f0f41afa7c4"
        ),
      V.logEvent("Save as Host Setting Changed", Object.assign({}, s)));
}
function JM() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let a = [];
    if (
      ((a = a.concat(le(b))),
      (a = a.concat(ce(E))),
      v ||
        W(
          h,
          "Ds0OUBWJjl",
          "c68d1bd68e3f13cd5d2b12aef2fee65c297f8f2216bee676889560c7dad2cb9c",
          a.map((s) =>
            Object.assign(
              {},
              {
                tag: s.tag,
                propertyId: s.propertyId,
                additionalProperties: s.additionalProperties,
                actualType: s.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Import FIDO2 Key Button Pressed", e, r),
      _ && q("Ds0OUBWJjl", "Import FIDO2 Key Button Pressed", a, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (a.length !== 0)
        throw new Error(
          "Error sending event 'Import FIDO2 Key Button Pressed': " +
            a[0].message
        );
    } else
      a.forEach(function (s) {
        console[$ || "error"]("[avo] " + s.message);
      });
  }
  (({ ...e }), { ...r }),
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Import FIDO2 Key Button Pressed",
          e,
          "Ds0OUBWJjl",
          "c68d1bd68e3f13cd5d2b12aef2fee65c297f8f2216bee676889560c7dad2cb9c"
        ));
}
function ZM(t) {
  let e = [];
  e.push({ id: "LtX0SIqFoB", name: "ConnectionID", value: t.connectionID }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "eBGyqk7Tj",
          "a9c9d6ce1d8f0cff1edf66043f7ef716535e0dd7aec93696921088d6de10e176",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Input Permissions Requested", n, a),
      _ && q("eBGyqk7Tj", "Input Permissions Requested", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Input Permissions Requested': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Input Permissions Requested",
          n,
          "eBGyqk7Tj",
          "a9c9d6ce1d8f0cff1edf66043f7ef716535e0dd7aec93696921088d6de10e176"
        ),
      V.logEvent("Input Permissions Requested", Object.assign({}, s)));
}
function eD(t) {
  let e = [];
  e.push({ id: "LtX0SIqFoB", name: "ConnectionID", value: t.connectionID }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "foKfD2xkG",
          "43c88a41c8a03d017eb0427bd85608faa2ca6f1bd3ce1524c0dee423d2a5ac30",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Terminal Sharing Status Dialog Shown", n, a),
      _ && q("foKfD2xkG", "Terminal Sharing Status Dialog Shown", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Terminal Sharing Status Dialog Shown': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Terminal Sharing Status Dialog Shown",
          n,
          "foKfD2xkG",
          "43c88a41c8a03d017eb0427bd85608faa2ca6f1bd3ce1524c0dee423d2a5ac30"
        ),
      V.logEvent("Terminal Sharing Status Dialog Shown", Object.assign({}, s)));
}
function tD(t) {
  let e = [];
  e.push({ id: "LtX0SIqFoB", name: "ConnectionID", value: t.connectionID }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "Uw2bhboryx",
          "c89263f5b31f3524ed8ebc94cb7700af3d392b1e1d58f45db2c932fa46fb4860",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Request Input Access Pressed", n, a),
      _ && q("Uw2bhboryx", "Request Input Access Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Request Input Access Pressed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Request Input Access Pressed",
          n,
          "Uw2bhboryx",
          "c89263f5b31f3524ed8ebc94cb7700af3d392b1e1d58f45db2c932fa46fb4860"
        ),
      V.logEvent("Request Input Access Pressed", Object.assign({}, s)));
}
function nD() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "kbKMhg_JF",
          "adc8abf2c4ab0e0ac8b255e093a7145a57f55c9e1861ce1247b48e727538c92e",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Copy the Link Button Pressed", e, r),
      _ && q("kbKMhg_JF", "Copy the Link Button Pressed", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Copy the Link Button Pressed': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Copy the Link Button Pressed",
          e,
          "kbKMhg_JF",
          "adc8abf2c4ab0e0ac8b255e093a7145a57f55c9e1861ce1247b48e727538c92e"
        ),
      V.logEvent("Copy the Link Button Pressed", Object.assign({}, a)));
}
function sD(t) {
  let e = [];
  e.push({
    id: "HstxcQ3Qc",
    name: "NumberOfConnectedUsers",
    value: t.numberOfConnectedUsers,
  }),
    e.push({
      id: "pOwyvVQPog",
      name: "NumberOfConnections",
      value: t.numberOfConnections,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "qQKBUELuKP",
          "705d7ab3fd8a8016aa7af8dd48a2de6f2b85b700d8dfbd930cb9cc08281b7137",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Collaboration Context Menu Opened", n, a),
      _ && q("qQKBUELuKP", "Collaboration Context Menu Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Collaboration Context Menu Opened': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Collaboration Context Menu Opened",
          n,
          "qQKBUELuKP",
          "705d7ab3fd8a8016aa7af8dd48a2de6f2b85b700d8dfbd930cb9cc08281b7137"
        ),
      V.logEvent("Collaboration Context Menu Opened", Object.assign({}, s)));
}
function rD(t) {
  let e = [];
  e.push({ id: "B6I4Af3CH3", name: "OnScreen", value: t.onScreen }),
    e.push({ id: "LtX0SIqFoB", name: "ConnectionID", value: t.connectionID }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "BpKUW7lEv",
          "40bde6c69cf437dca7a516f37b8435ed266404a9aa083b99ae5101591646c074",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Do It Later Button Pressed", n, a),
      _ && q("BpKUW7lEv", "Do It Later Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Do It Later Button Pressed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Do It Later Button Pressed",
          n,
          "BpKUW7lEv",
          "40bde6c69cf437dca7a516f37b8435ed266404a9aa083b99ae5101591646c074"
        ),
      V.logEvent("Do It Later Button Pressed", Object.assign({}, s)));
}
function aD(t) {
  let e = [];
  e.push({ id: "LtX0SIqFoB", name: "ConnectionID", value: t.connectionID }),
    e.push({ id: "wZLSn-_eq", name: "Owner", value: t.isOwner }),
    e.push({
      id: "l4X5Kp_TW",
      name: "CurrentViewers",
      value: t.currentViewers,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "T4RqLf9uYE",
          "47c7bcab785bdc8ce68ebdb86529a3da57422b49549184953a60177d2fd8514c",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Collaboration Context Menu Item Pressed", n, a),
      _ &&
        q("T4RqLf9uYE", "Collaboration Context Menu Item Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Collaboration Context Menu Item Pressed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Collaboration Context Menu Item Pressed",
          n,
          "T4RqLf9uYE",
          "47c7bcab785bdc8ce68ebdb86529a3da57422b49549184953a60177d2fd8514c"
        ),
      V.logEvent(
        "Collaboration Context Menu Item Pressed",
        Object.assign({}, s)
      ));
}
function iD() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "VwOy60-NpV",
          "b526017a02aeaf0754977a8a47a30ab2f64891040bc9ffa1a0a2dfef8cc5c440",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Appearance Setup Screen Opened", e, r),
      _ && q("VwOy60-NpV", "Appearance Setup Screen Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Appearance Setup Screen Opened': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Appearance Setup Screen Opened",
          e,
          "VwOy60-NpV",
          "b526017a02aeaf0754977a8a47a30ab2f64891040bc9ffa1a0a2dfef8cc5c440"
        ),
      V.logEvent("Appearance Setup Screen Opened", Object.assign({}, a)));
}
function oD(t) {
  let e = [];
  t.appColorTheme !== void 0 && t.appColorTheme !== null
    ? e.push({
        id: "U1nxNhexeT",
        name: "AppColorTheme",
        value: t.appColorTheme,
      })
    : e.push({ id: "U1nxNhexeT", name: "AppColorTheme", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "XqoGz-Iob",
          "c481832ab6c46c30544c56c298a4133f8b56dbb6ce64f8958dd76a9ac47a02fa",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Appearance Picked", n, a),
      _ && q("XqoGz-Iob", "Appearance Picked", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Appearance Picked': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Appearance Picked",
          n,
          "XqoGz-Iob",
          "c481832ab6c46c30544c56c298a4133f8b56dbb6ce64f8958dd76a9ac47a02fa"
        ),
      V.logEvent("Appearance Picked", Object.assign({}, s)));
}
function uD() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "qAkX46X0C",
          "b78abf4f4846825010affc5bd5e12a8123cc2abe2b3a41d201234262f5110887",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Save History Command Button Pressed", e, r),
      _ && q("qAkX46X0C", "Save History Command Button Pressed", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Save History Command Button Pressed': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Save History Command Button Pressed",
          e,
          "qAkX46X0C",
          "b78abf4f4846825010affc5bd5e12a8123cc2abe2b3a41d201234262f5110887"
        ),
      V.logEvent("Save History Command Button Pressed", Object.assign({}, a)));
}
function lD() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "SknNUVBfHO",
          "effd2afc78938b94670f6a8d477f421332b0f159ab8b0018b9ae4b0c9b8c07e6",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Trial Onboarding Started", e, r),
      _ && q("SknNUVBfHO", "Trial Onboarding Started", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Trial Onboarding Started': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Trial Onboarding Started",
          e,
          "SknNUVBfHO",
          "effd2afc78938b94670f6a8d477f421332b0f159ab8b0018b9ae4b0c9b8c07e6"
        ),
      V.logEvent("Trial Onboarding Started", Object.assign({}, a)));
}
function cD(t) {
  let e = [];
  e.push({
    id: "6_6tqp2HB",
    name: "OnboardingAction",
    value: t.onboardingAction,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "L85uTgtP7z",
          "e76ed3ea663d7d578e220e93171f12391ba1f4dbe624739f4dbf61366c194871",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Trial Onboarding Button Pressed", n, a),
      _ && q("L85uTgtP7z", "Trial Onboarding Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Trial Onboarding Button Pressed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Trial Onboarding Button Pressed",
          n,
          "L85uTgtP7z",
          "e76ed3ea663d7d578e220e93171f12391ba1f4dbe624739f4dbf61366c194871"
        ),
      V.logEvent("Trial Onboarding Button Pressed", Object.assign({}, s)));
}
function dD() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "CbVzesajyT",
          "27cdb390cd51d1407e5d9f1b70283817f3cfeb610b9f2b2d4c4743991b8827d1",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Trial Onboarding Minimized", e, r),
      _ && q("CbVzesajyT", "Trial Onboarding Minimized", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Trial Onboarding Minimized': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Trial Onboarding Minimized",
          e,
          "CbVzesajyT",
          "27cdb390cd51d1407e5d9f1b70283817f3cfeb610b9f2b2d4c4743991b8827d1"
        ),
      V.logEvent("Trial Onboarding Minimized", Object.assign({}, a)));
}
function pD(t) {
  let e = [];
  e.push({
    id: "6_6tqp2HB",
    name: "OnboardingAction",
    value: t.onboardingAction,
  }),
    e.push({ id: "B4WRezXjG", name: "Success", value: t.success }),
    e.push({
      id: "fml0_jZ5l",
      name: "RemainingSteps",
      value: t.remainingSteps,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "rEZFSMOypv",
          "dad76f6af69f6ad13c49965693de39cf266a057b2dd055683145ae8424301c13",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Trial Onboarding Step Completed", n, a),
      _ && q("rEZFSMOypv", "Trial Onboarding Step Completed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Trial Onboarding Step Completed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Trial Onboarding Step Completed",
          n,
          "rEZFSMOypv",
          "dad76f6af69f6ad13c49965693de39cf266a057b2dd055683145ae8424301c13"
        ),
      V.logEvent("Trial Onboarding Step Completed", Object.assign({}, s)));
}
function hD(t) {
  let e = [];
  e.push({ id: "B6I4Af3CH3", name: "OnScreen", value: t.onScreen }),
    e.push({
      id: "OTTtp_Niv",
      name: "NewCertificateLocation",
      value: t.newCertificateLocation,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "GLTIan8bZh",
          "3eb518fa6de28bcd254a71cea69a7181bde40e3f202f6011c16834d723c8bd24",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("New Certificate Button Pressed", n, a),
      _ && q("GLTIan8bZh", "New Certificate Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'New Certificate Button Pressed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "New Certificate Button Pressed",
          n,
          "GLTIan8bZh",
          "3eb518fa6de28bcd254a71cea69a7181bde40e3f202f6011c16834d723c8bd24"
        ),
      V.logEvent("New Certificate Button Pressed", Object.assign({}, s)));
}
function fD(t) {
  let e = [];
  e.push({ id: "YKMQM0sEv", name: "ShellType", value: t.shellType }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "xv-0240nC",
          "0bc46c0187f2baad107397f167186325dca2581f46b8357672c4157c8d1e5bfc",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Local Terminal Shell Type Changed", n, a),
      _ && q("xv-0240nC", "Local Terminal Shell Type Changed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Local Terminal Shell Type Changed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Local Terminal Shell Type Changed",
          n,
          "xv-0240nC",
          "0bc46c0187f2baad107397f167186325dca2581f46b8357672c4157c8d1e5bfc"
        ),
      V.logEvent("Local Terminal Shell Type Changed", Object.assign({}, s)));
}
function mD() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "jGU-iSxSSB",
          "119aa9977596ba7b9b89b1d80977d75987a011552f7537b26d31cff8af11d4f8",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Subscription Grace Period Notification Shown", e, r),
      _ &&
        q(
          "jGU-iSxSSB",
          "Subscription Grace Period Notification Shown",
          s,
          t,
          n,
          []
        ),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Subscription Grace Period Notification Shown': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Subscription Grace Period Notification Shown",
          e,
          "jGU-iSxSSB",
          "119aa9977596ba7b9b89b1d80977d75987a011552f7537b26d31cff8af11d4f8"
        ),
      V.logEvent(
        "Subscription Grace Period Notification Shown",
        Object.assign({}, a)
      ));
}
function SD() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "_8FZ8ggKE",
          "74769712d9a1a997cea3cb0611d7e45491558ad9e345dd1d777dc5e8d3869434",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Subscription Grace Period Notification Snoozed", e, r),
      _ &&
        q(
          "_8FZ8ggKE",
          "Subscription Grace Period Notification Snoozed",
          s,
          t,
          n,
          []
        ),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Subscription Grace Period Notification Snoozed': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Subscription Grace Period Notification Snoozed",
          e,
          "_8FZ8ggKE",
          "74769712d9a1a997cea3cb0611d7e45491558ad9e345dd1d777dc5e8d3869434"
        ),
      V.logEvent(
        "Subscription Grace Period Notification Snoozed",
        Object.assign({}, a)
      ));
}
function yD(t) {
  let e = [];
  e.push({
    id: "3LjNRtYT_",
    name: "ExpiredScreenType",
    value: t.expiredScreenType,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "ejQd8CmVKm",
          "181476f52f60b3c16fd04671d57fce0e2c9e30231edabd4770f1ed9b414c375d",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Subscription Expired Screen Opened", n, a),
      _ && q("ejQd8CmVKm", "Subscription Expired Screen Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Subscription Expired Screen Opened': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Subscription Expired Screen Opened",
          n,
          "ejQd8CmVKm",
          "181476f52f60b3c16fd04671d57fce0e2c9e30231edabd4770f1ed9b414c375d"
        ),
      V.logEvent("Subscription Expired Screen Opened", Object.assign({}, s)));
}
function gD() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "6YW0JVGD95",
          "f601f7cd31e31daed36271d48837e98024969d48bab0dbe08566f9d1d628dfba",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Team Deactivation Screen Opened", e, r),
      _ && q("6YW0JVGD95", "Team Deactivation Screen Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Team Deactivation Screen Opened': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Team Deactivation Screen Opened",
          e,
          "6YW0JVGD95",
          "f601f7cd31e31daed36271d48837e98024969d48bab0dbe08566f9d1d628dfba"
        ),
      V.logEvent("Team Deactivation Screen Opened", Object.assign({}, a)));
}
function vD() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "legeNEqkZ",
          "463f5de09f06e8311bba76e0f2bb39f6f6b7c48c204ba2a9b8e8f28a6494b79c",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Extend Team Trial Button Pressed", e, r),
      _ && q("legeNEqkZ", "Extend Team Trial Button Pressed", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Extend Team Trial Button Pressed': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Extend Team Trial Button Pressed",
          e,
          "legeNEqkZ",
          "463f5de09f06e8311bba76e0f2bb39f6f6b7c48c204ba2a9b8e8f28a6494b79c"
        ),
      V.logEvent("Extend Team Trial Button Pressed", Object.assign({}, a)));
}
function _D(t) {
  let e = [];
  e.push({
    id: "xKRXCm6f5",
    name: "MagicButtonOrigin",
    value: t.magicButtonOrigin,
  }),
    t.connectionID !== void 0 && t.connectionID !== null
      ? e.push({
          id: "LtX0SIqFoB",
          name: "ConnectionID",
          value: t.connectionID,
        })
      : e.push({ id: "LtX0SIqFoB", name: "ConnectionID", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "iZYQb-jRTn",
          "f7f76e8104e90650a392cc75e9250b8096ba4b0f5043d6a3de1353142f796acf",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Magic Button Pressed", n, a),
      _ && q("iZYQb-jRTn", "Magic Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Magic Button Pressed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Magic Button Pressed",
          n,
          "iZYQb-jRTn",
          "f7f76e8104e90650a392cc75e9250b8096ba4b0f5043d6a3de1353142f796acf"
        ),
      V.logEvent("Magic Button Pressed", Object.assign({}, s)));
}
function bD(t) {
  let e = [];
  e.push({
    id: "ymKyyoK7m0",
    name: "SnippetPackageID",
    value: t.snippetPackageID,
  }),
    e.push({ id: "r08pzpqtdPz", name: "SnippetID", value: t.snippetID }),
    t.aianalyticsID !== void 0 && t.aianalyticsID !== null
      ? e.push({
          id: "xhalC63i7",
          name: "AIAnalyticsID",
          value: t.aianalyticsID,
        })
      : e.push({ id: "xhalC63i7", name: "AIAnalyticsID", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(mne(t.snippetPackageID))),
      (i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "R_8vhyYVA",
          "5e3d1dcfbca2339af66d7252a58a43fa6cabfc7bbc90308679eff25130137d5a",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Snippet Edited", n, a),
      _ && q("R_8vhyYVA", "Snippet Edited", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Snippet Edited': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Snippet Edited",
          n,
          "R_8vhyYVA",
          "5e3d1dcfbca2339af66d7252a58a43fa6cabfc7bbc90308679eff25130137d5a"
        ),
      V.logEvent("Snippet Edited", Object.assign({}, s)));
}
function ED() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "MCA66H2aAB",
          "c4e915198da606c65b64f92123f8c3100ff3b249517279c7eb977f90ee46f4f2",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Bulk Data Sharing Screen Opened", e, r),
      _ && q("MCA66H2aAB", "Bulk Data Sharing Screen Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Bulk Data Sharing Screen Opened': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Bulk Data Sharing Screen Opened",
          e,
          "MCA66H2aAB",
          "c4e915198da606c65b64f92123f8c3100ff3b249517279c7eb977f90ee46f4f2"
        ),
      V.logEvent("Bulk Data Sharing Screen Opened", Object.assign({}, a)));
}
function TD(t) {
  let e = [];
  e.push({ id: "24-APg5Ij", name: "NumberOfHosts", value: t.numberOfHosts }),
    e.push({
      id: "iapLxR6-T",
      name: "NumberOfGroups",
      value: t.numberOfGroups,
    }),
    e.push({
      id: "n7Ba_Y7I3",
      name: "NumberOfSnippets",
      value: t.numberOfSnippets,
    }),
    e.push({
      id: "OOG7M0Izj",
      name: "NumberOfPackages",
      value: t.numberOfPackages,
    }),
    t.numberOfKnownHosts !== void 0 && t.numberOfKnownHosts !== null
      ? e.push({
          id: "F07kfz8Ts",
          name: "NumberOfKnownHosts",
          value: t.numberOfKnownHosts,
        })
      : e.push({ id: "F07kfz8Ts", name: "NumberOfKnownHosts", value: null }),
    t.numberOfSshKeys !== void 0 && t.numberOfSshKeys !== null
      ? e.push({
          id: "TlhhQlKf9",
          name: "NumberOfSSHKeys",
          value: t.numberOfSshKeys,
        })
      : e.push({ id: "TlhhQlKf9", name: "NumberOfSSHKeys", value: null }),
    t.numberOfIdentities !== void 0 && t.numberOfIdentities !== null
      ? e.push({
          id: "OtS3q3w6a",
          name: "NumberOfIdentities",
          value: t.numberOfIdentities,
        })
      : e.push({ id: "OtS3q3w6a", name: "NumberOfIdentities", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "oLcT8v7FDy",
          "8066e44b22511e889dd80d82f75c82df182eb4096d870f574a2c201a1bb601bc",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Bulk Sharing Completed", n, a),
      _ && q("oLcT8v7FDy", "Bulk Sharing Completed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Bulk Sharing Completed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Bulk Sharing Completed",
          n,
          "oLcT8v7FDy",
          "8066e44b22511e889dd80d82f75c82df182eb4096d870f574a2c201a1bb601bc"
        ),
      V.logEvent("Bulk Sharing Completed", Object.assign({}, s)));
}
function wD(t) {
  let e = [];
  t.sshserver !== void 0 && t.sshserver !== null
    ? e.push({ id: "N0qFTBDXA", name: "SSHServer", value: t.sshserver })
    : e.push({ id: "N0qFTBDXA", name: "SSHServer", value: null }),
    t.sshserverComment !== void 0 && t.sshserverComment !== null
      ? e.push({
          id: "zG_hDC9QO",
          name: "SSHServerComment",
          value: t.sshserverComment,
        })
      : e.push({ id: "zG_hDC9QO", name: "SSHServerComment", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "wNWPIRBBp",
          "3e5886b8657d87e02edc6da4a377b56662b9137fa3a855efb70cfb41fd150464",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Exec Channel Open Failed", n, a),
      _ && q("wNWPIRBBp", "Exec Channel Open Failed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Exec Channel Open Failed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Exec Channel Open Failed",
          n,
          "wNWPIRBBp",
          "3e5886b8657d87e02edc6da4a377b56662b9137fa3a855efb70cfb41fd150464"
        ),
      V.logEvent("Exec Channel Open Failed", Object.assign({}, s)));
}
function PD(t) {
  let e = [];
  t.terminalSidePanelToggledVia !== void 0 &&
  t.terminalSidePanelToggledVia !== null
    ? e.push({
        id: "lSiIv-InY",
        name: "TerminalSidePanelToggledVia",
        value: t.terminalSidePanelToggledVia,
      })
    : e.push({
        id: "lSiIv-InY",
        name: "TerminalSidePanelToggledVia",
        value: null,
      }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "WEgCZY0qUn",
          "bb4b890ed8cd72513eba3378cc6f3542e91336c3160babfab08a8652caa03449",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Appearence Panel Opened", n, a),
      _ && q("WEgCZY0qUn", "Appearence Panel Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Appearence Panel Opened': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Appearence Panel Opened",
          n,
          "WEgCZY0qUn",
          "bb4b890ed8cd72513eba3378cc6f3542e91336c3160babfab08a8652caa03449"
        ),
      V.logEvent("Appearence Panel Opened", Object.assign({}, s)));
}
function ID() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "s_sbwSycNa",
          "eb36147a8f60a5c853aa67caf3a97f673ca4472ec9efc1f4280623625d6c7ee6",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Reset Appearance Button Pressed", e, r),
      _ && q("s_sbwSycNa", "Reset Appearance Button Pressed", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Reset Appearance Button Pressed': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Reset Appearance Button Pressed",
          e,
          "s_sbwSycNa",
          "eb36147a8f60a5c853aa67caf3a97f673ca4472ec9efc1f4280623625d6c7ee6"
        ),
      V.logEvent("Reset Appearance Button Pressed", Object.assign({}, a)));
}
function CD(t) {
  let e = [];
  t.terminalTheme !== void 0 && t.terminalTheme !== null
    ? e.push({ id: "QI8h95kq-", name: "TerminalTheme", value: t.terminalTheme })
    : e.push({ id: "QI8h95kq-", name: "TerminalTheme", value: null }),
    t.terminalFontSelected !== void 0 && t.terminalFontSelected !== null
      ? e.push({
          id: "doG_XobUa",
          name: "TerminalFontSelected",
          value: t.terminalFontSelected,
        })
      : e.push({ id: "doG_XobUa", name: "TerminalFontSelected", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [];
  t.globalTerminalTheme !== void 0 && t.globalTerminalTheme !== null
    ? r.push({
        id: "Y6gLgMSQN",
        name: "GlobalTerminalTheme",
        value: t.globalTerminalTheme,
      })
    : r.push({ id: "Y6gLgMSQN", name: "GlobalTerminalTheme", value: null }),
    r.push({ id: "mpEeos7N6", name: "TerminalFont", value: t.terminalFont });
  let a = P(r);
  if (h !== "prod" || _) {
    let o = [];
    if (
      ((o = o.concat(le(b))),
      (o = o.concat(ce(E))),
      v ||
        W(
          h,
          "D3NjRnuSzg",
          "43ad39652c881c97bde36ce7e089c2d4ab6dcad35b70035f88a6079012f70f7f",
          o.map((u) =>
            Object.assign(
              {},
              {
                tag: u.tag,
                propertyId: u.propertyId,
                additionalProperties: u.additionalProperties,
                actualType: u.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Save Appearance Button Pressed", n, a),
      _ && q("D3NjRnuSzg", "Save Appearance Button Pressed", o, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (o.length !== 0)
        throw new Error(
          "Error sending event 'Save Appearance Button Pressed': " +
            o[0].message
        );
    } else
      o.forEach(function (u) {
        console[$ || "error"]("[avo] " + u.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts;
  let i = { ...a };
  v ||
    (w != null &&
      w._avoFunctionTrackSchemaFromEvent(
        "Save Appearance Button Pressed",
        n,
        "D3NjRnuSzg",
        "43ad39652c881c97bde36ce7e089c2d4ab6dcad35b70035f88a6079012f70f7f"
      ),
    V.setUserProperties(Object.assign({}, i)),
    V.logEvent("Save Appearance Button Pressed", Object.assign({}, s)));
}
function AD(t) {
  let e = [];
  e.push({ id: "gw20UEhDR", name: "Highlighted", value: t.highlighted }),
    e.push({
      id: "tgeWzQteJ",
      name: "UpgradeButtonLocation",
      value: t.upgradeButtonLocation,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "OZRy7Yrh1U",
          "93579dd9bc8ebf796eb25bed06a4b7acb19f7289ceaa2061391c237d06a881a6",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Upgrade Button Pressed", n, a),
      _ && q("OZRy7Yrh1U", "Upgrade Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Upgrade Button Pressed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Upgrade Button Pressed",
          n,
          "OZRy7Yrh1U",
          "93579dd9bc8ebf796eb25bed06a4b7acb19f7289ceaa2061391c237d06a881a6"
        ),
      V.logEvent("Upgrade Button Pressed", Object.assign({}, s)));
}
function OD(t) {
  let e = [];
  e.push({
    id: "wU3CN_zRm",
    name: "SessionAuthMethod",
    value: t.sessionAuthMethod,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "TyPGydX4c",
          "07b0c8f8bfdafeb7e56ad9ec8cbdc657707263e840ae9dc7caad147fd4bb651c",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Session Auth Method Changed", n, a),
      _ && q("TyPGydX4c", "Session Auth Method Changed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Session Auth Method Changed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Session Auth Method Changed",
          n,
          "TyPGydX4c",
          "07b0c8f8bfdafeb7e56ad9ec8cbdc657707263e840ae9dc7caad147fd4bb651c"
        ),
      V.logEvent("Session Auth Method Changed", Object.assign({}, s)));
}
function HD(t) {
  let e = [];
  e.push({
    id: "SJ2oRtAGd",
    name: "BroadcastEnabled",
    value: t.broadcastEnabled,
  }),
    e.push({
      id: "e_DWEvcVX",
      name: "BroadcastActivatedBy",
      value: t.broadcastActivatedBy,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "-n5OzkAia",
          "bd0831ef4476d7959883c79ef84341e1079e2eff483641b46302d170f52d280c",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Broadcast Input Toggled", n, a),
      _ && q("-n5OzkAia", "Broadcast Input Toggled", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Broadcast Input Toggled': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Broadcast Input Toggled",
          n,
          "-n5OzkAia",
          "bd0831ef4476d7959883c79ef84341e1079e2eff483641b46302d170f52d280c"
        ),
      V.logEvent("Broadcast Input Toggled", Object.assign({}, s)));
}
function ND(t) {
  let e = [];
  e.push({
    id: "LgHfdBjOOo",
    name: "TerminalThemeSource",
    value: t.terminalThemeSource,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "oTE3vbu6r",
          "82327e1c0bcbec3acbf279d341709696f3dea62db71cc9c012706faa09114bda",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Suggest Terminal Theme Button Pressed", n, a),
      _ && q("oTE3vbu6r", "Suggest Terminal Theme Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Suggest Terminal Theme Button Pressed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Suggest Terminal Theme Button Pressed",
          n,
          "oTE3vbu6r",
          "82327e1c0bcbec3acbf279d341709696f3dea62db71cc9c012706faa09114bda"
        ),
      V.logEvent(
        "Suggest Terminal Theme Button Pressed",
        Object.assign({}, s)
      ));
}
function RD(t) {
  let e = [];
  e.push({ id: "LtX0SIqFoB", name: "ConnectionID", value: t.connectionID }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "iD6CxL4zf",
          "0e72d96077a19ae50d060af36ef26e32bb49110bc91e5a40eb2c99d85d0a98fd",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Rewrite AI Request Button Pressed", n, a),
      _ && q("iD6CxL4zf", "Rewrite AI Request Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Rewrite AI Request Button Pressed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Rewrite AI Request Button Pressed",
          n,
          "iD6CxL4zf",
          "0e72d96077a19ae50d060af36ef26e32bb49110bc91e5a40eb2c99d85d0a98fd"
        ),
      V.logEvent("Rewrite AI Request Button Pressed", Object.assign({}, s)));
}
function xne() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "HGfsPRSzt",
          "11f28464e467888ef571d09ae9d31904ad41a573615e6d9beda020200d4a1f20",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Known Hosts Screen Opened", e, r),
      _ && q("HGfsPRSzt", "Known Hosts Screen Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Known Hosts Screen Opened': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Known Hosts Screen Opened",
          e,
          "HGfsPRSzt",
          "11f28464e467888ef571d09ae9d31904ad41a573615e6d9beda020200d4a1f20"
        ),
      V.logEvent("Known Hosts Screen Opened", Object.assign({}, a)));
}
function kD(t) {
  let e = [];
  e.push({ id: "IdLc6aidYP", name: "Entity", value: t.entity }),
    e.push({
      id: "VV7UI2iSr",
      name: "MoveEntityButtonOrigin",
      value: t.moveEntityButtonOrigin,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "UCsOvX-0v_",
          "f71034a2d491a1e4b1bb59b0b6bb186af7ec58ff88538f1edda9682a10eea53d",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Move Entity Button Pressed", n, a),
      _ && q("UCsOvX-0v_", "Move Entity Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Move Entity Button Pressed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Move Entity Button Pressed",
          n,
          "UCsOvX-0v_",
          "f71034a2d491a1e4b1bb59b0b6bb186af7ec58ff88538f1edda9682a10eea53d"
        ),
      V.logEvent("Move Entity Button Pressed", Object.assign({}, s)));
}
function Lne(t) {
  let e = [];
  e.push({ id: "MGexS9ePV", name: "WizardID", value: t.wizardID }),
    e.push({
      id: "QIyEGImHR",
      name: "DependencyHosts",
      value: t.dependencyHosts,
    }),
    e.push({
      id: "erwL1KwJf",
      name: "DependencySnippets",
      value: t.dependencySnippets,
    }),
    e.push({
      id: "nb2VaAtbG",
      name: "DependencyKeys",
      value: t.dependencyKeys,
    }),
    e.push({
      id: "7eQdGPSAZ",
      name: "DependencyIdentities",
      value: t.dependencyIdentities,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "CGXxQDDQV",
          "abd094a4616cc8e1a2c6f22b822f0acb3b0c696c202eb9b3c9100abc61abce59",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Dependency Screen Opened", n, a),
      _ && q("CGXxQDDQV", "Dependency Screen Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Dependency Screen Opened': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Dependency Screen Opened",
          n,
          "CGXxQDDQV",
          "abd094a4616cc8e1a2c6f22b822f0acb3b0c696c202eb9b3c9100abc61abce59"
        ),
      V.logEvent("Dependency Screen Opened", Object.assign({}, s)));
}
function Mne(t) {
  let e = [];
  e.push({ id: "MGexS9ePV", name: "WizardID", value: t.wizardID }),
    e.push({
      id: "M0mIBBeJt",
      name: "DependencyResolution",
      value: t.dependencyResolution,
    }),
    e.push({
      id: "QIyEGImHR",
      name: "DependencyHosts",
      value: t.dependencyHosts,
    }),
    e.push({
      id: "erwL1KwJf",
      name: "DependencySnippets",
      value: t.dependencySnippets,
    }),
    e.push({
      id: "nb2VaAtbG",
      name: "DependencyKeys",
      value: t.dependencyKeys,
    }),
    e.push({
      id: "7eQdGPSAZ",
      name: "DependencyIdentities",
      value: t.dependencyIdentities,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "61OENmXJJ",
          "af02f80c5352e895d92cd57f45f36c0f9a27f82a30c851a1b23b00ff224171e0",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Dependency Resolution Chosen", n, a),
      _ && q("61OENmXJJ", "Dependency Resolution Chosen", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Dependency Resolution Chosen': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Dependency Resolution Chosen",
          n,
          "61OENmXJJ",
          "af02f80c5352e895d92cd57f45f36c0f9a27f82a30c851a1b23b00ff224171e0"
        ),
      V.logEvent("Dependency Resolution Chosen", Object.assign({}, s)));
}
function Dne(t) {
  let e = [];
  e.push({ id: "MGexS9ePV", name: "WizardID", value: t.wizardID }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "lVXUiQpu0",
          "45bd330cfdb5b01fc16c0f155dbf00692a314a5dd12b2ea99bf8eed4267280dc",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Port Forwarding Links Screen Opened", n, a),
      _ && q("lVXUiQpu0", "Port Forwarding Links Screen Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Port Forwarding Links Screen Opened': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Port Forwarding Links Screen Opened",
          n,
          "lVXUiQpu0",
          "45bd330cfdb5b01fc16c0f155dbf00692a314a5dd12b2ea99bf8eed4267280dc"
        ),
      V.logEvent("Port Forwarding Links Screen Opened", Object.assign({}, s)));
}
function Gne(t) {
  let e = [];
  e.push({ id: "MGexS9ePV", name: "WizardID", value: t.wizardID }),
    e.push({
      id: "1yjsUQIcy",
      name: "PortForwardingLinkResolution",
      value: t.portForwardingLinkResolution,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "-p3yIpPJ8",
          "381ad7713ee5e0a6b5c6ae2a194c7079a8c572c7f1432db51a2688e5d8b8cb38",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Port Forwarding Links Resolution Chosen", n, a),
      _ &&
        q("-p3yIpPJ8", "Port Forwarding Links Resolution Chosen", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Port Forwarding Links Resolution Chosen': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Port Forwarding Links Resolution Chosen",
          n,
          "-p3yIpPJ8",
          "381ad7713ee5e0a6b5c6ae2a194c7079a8c572c7f1432db51a2688e5d8b8cb38"
        ),
      V.logEvent(
        "Port Forwarding Links Resolution Chosen",
        Object.assign({}, s)
      ));
}
function xD(t) {
  let e = [];
  e.push({
    id: "i9yWYC6-q",
    name: "ChangeVaultAction",
    value: t.changeVaultAction,
  }),
    e.push({ id: "MGexS9ePV", name: "WizardID", value: t.wizardID }),
    t.entity !== void 0 && t.entity !== null
      ? e.push({ id: "IdLc6aidYP", name: "Entity", value: t.entity })
      : e.push({ id: "IdLc6aidYP", name: "Entity", value: null }),
    e.push({
      id: "XTttVvHyd",
      name: "ChangeVaultSource",
      value: t.changeVaultSource,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "0rVKTGWwH",
          "8b9aae3da979a2dcb3f417bf285570f7fdc6a68e8f12e6c76132aec77f189b2f",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Changing Vault Completed", n, a),
      _ && q("0rVKTGWwH", "Changing Vault Completed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Changing Vault Completed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Changing Vault Completed",
          n,
          "0rVKTGWwH",
          "8b9aae3da979a2dcb3f417bf285570f7fdc6a68e8f12e6c76132aec77f189b2f"
        ),
      V.logEvent("Changing Vault Completed", Object.assign({}, s)));
}
function Fne() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "xCLCBXw1dC",
          "6b377fc0678f5c7540258620f9979f97bfddfb24d06b23bbaae4deeaf691853e",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Vault Filter Button Pressed", e, r),
      _ && q("xCLCBXw1dC", "Vault Filter Button Pressed", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Vault Filter Button Pressed': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Vault Filter Button Pressed",
          e,
          "xCLCBXw1dC",
          "6b377fc0678f5c7540258620f9979f97bfddfb24d06b23bbaae4deeaf691853e"
        ),
      V.logEvent("Vault Filter Button Pressed", Object.assign({}, a)));
}
function Une(t) {
  let e = [];
  e.push({
    id: "YekWDk7Ce",
    name: "NumberOfSelectedVaults",
    value: t.numberOfSelectedVaults,
  }),
    e.push({
      id: "U17ubUC_M",
      name: "PersonalVaultSelected",
      value: t.personalVaultSelected,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "baHtzASUN5",
          "5499c6f5c70d4455ff70b95665152e1702814647de93a8e4ab904f065e6e4124",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Vault Filter Selected", n, a),
      _ && q("baHtzASUN5", "Vault Filter Selected", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Vault Filter Selected': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Vault Filter Selected",
          n,
          "baHtzASUN5",
          "5499c6f5c70d4455ff70b95665152e1702814647de93a8e4ab904f065e6e4124"
        ),
      V.logEvent("Vault Filter Selected", Object.assign({}, s)));
}
function Kne(t) {
  let e = [];
  e.push({
    id: "i9yWYC6-q",
    name: "ChangeVaultAction",
    value: t.changeVaultAction,
  }),
    e.push({
      id: "XTttVvHyd",
      name: "ChangeVaultSource",
      value: t.changeVaultSource,
    }),
    t.entity !== void 0 && t.entity !== null
      ? e.push({ id: "IdLc6aidYP", name: "Entity", value: t.entity })
      : e.push({ id: "IdLc6aidYP", name: "Entity", value: null }),
    e.push({ id: "MGexS9ePV", name: "WizardID", value: t.wizardID }),
    e.push({ id: "CKWj08e5Z", name: "ChangeToVault", value: t.changeToVault }),
    e.push({ id: "f3sg8Ou-G", name: "CurrentVault", value: t.currentVault }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "Fx8KikoKF",
          "52f478206fba9ff91cdd37ae747e2ebd476cb54d4f4cbacc70ee161173ad60f6",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Changing Vault Button Pressed", n, a),
      _ && q("Fx8KikoKF", "Changing Vault Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Changing Vault Button Pressed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Changing Vault Button Pressed",
          n,
          "Fx8KikoKF",
          "52f478206fba9ff91cdd37ae747e2ebd476cb54d4f4cbacc70ee161173ad60f6"
        ),
      V.logEvent("Changing Vault Button Pressed", Object.assign({}, s)));
}
function Bne(t) {
  let e = [];
  e.push({
    id: "EAhyJvlH96",
    name: "CredentialsSharingMode",
    value: t.credentialsSharingMode,
  }),
    e.push({
      id: "_eZgJ6aS8",
      name: "SharingModeEntity",
      value: t.sharingModeEntity,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "tHDHfY0F0",
          "ba3bfc9e38939e8fe13908b06f81ece265b4d54ac8dfd2166d957b904748b736",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Credentials Sharing Option Changed", n, a),
      _ && q("tHDHfY0F0", "Credentials Sharing Option Changed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Credentials Sharing Option Changed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Credentials Sharing Option Changed",
          n,
          "tHDHfY0F0",
          "ba3bfc9e38939e8fe13908b06f81ece265b4d54ac8dfd2166d957b904748b736"
        ),
      V.logEvent("Credentials Sharing Option Changed", Object.assign({}, s)));
}
function LD() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "5aQKOlZuk0",
          "793fa4c1cf88b637a80712d22a6b87273016fc7df41ea1d9a55c7aba4f80ce80",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Downgraded to Starter Plan", e, r),
      _ && q("5aQKOlZuk0", "Downgraded to Starter Plan", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Downgraded to Starter Plan': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Downgraded to Starter Plan",
          e,
          "5aQKOlZuk0",
          "793fa4c1cf88b637a80712d22a6b87273016fc7df41ea1d9a55c7aba4f80ce80"
        ),
      V.logEvent("Downgraded to Starter Plan", Object.assign({}, a)));
}
function MD(t) {
  let e = [];
  e.push({ id: "YKMQM0sEv", name: "ShellType", value: t.shellType }),
    e.push({ id: "LtX0SIqFoB", name: "ConnectionID", value: t.connectionID }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "kuQrcoIFk",
          "df80a2e8f0ca30bb789d6795ba76c75c9b17b103a70c562a25596002e98ad49f",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Shell Type Detected", n, a),
      _ && q("kuQrcoIFk", "Shell Type Detected", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Shell Type Detected': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Shell Type Detected",
          n,
          "kuQrcoIFk",
          "df80a2e8f0ca30bb789d6795ba76c75c9b17b103a70c562a25596002e98ad49f"
        ),
      V.logEvent("Shell Type Detected", Object.assign({}, s)));
}
function DD(t) {
  let e = [];
  e.push({
    id: "k4Mn4t3MI",
    name: "NumberOfDisconnectedTerminals",
    value: t.numberOfDisconnectedTerminals,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "7OeQ9Yr1m4",
          "307a692f226fb4b41dda9c8ac15c47aab99591a745037e05d44f75da7e537544",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Close Disconnected Tabs Button Pressed", n, a),
      _ &&
        q("7OeQ9Yr1m4", "Close Disconnected Tabs Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Close Disconnected Tabs Button Pressed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Close Disconnected Tabs Button Pressed",
          n,
          "7OeQ9Yr1m4",
          "307a692f226fb4b41dda9c8ac15c47aab99591a745037e05d44f75da7e537544"
        ),
      V.logEvent(
        "Close Disconnected Tabs Button Pressed",
        Object.assign({}, s)
      ));
}
function GD(t) {
  let e = [];
  e.push({
    id: "INPjjaAd5",
    name: "ReconnectActionType",
    value: t.reconnectActionType,
  }),
    e.push({
      id: "k4Mn4t3MI",
      name: "NumberOfDisconnectedTerminals",
      value: t.numberOfDisconnectedTerminals,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "Vopdu6eiM",
          "38a6e0eb92af71497ae63a379c3a1ce1a13b3c7413b7b838ea1ebf89f05a4b95",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Reconnect All Initiated", n, a),
      _ && q("Vopdu6eiM", "Reconnect All Initiated", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Reconnect All Initiated': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Reconnect All Initiated",
          n,
          "Vopdu6eiM",
          "38a6e0eb92af71497ae63a379c3a1ce1a13b3c7413b7b838ea1ebf89f05a4b95"
        ),
      V.logEvent("Reconnect All Initiated", Object.assign({}, s)));
}
function Sw(t) {
  let e = [];
  e.push({
    id: "r858i4JpB",
    name: "AutoReconnectEnabled",
    value: t.autoReconnectEnabled,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [];
  r.push({ id: "rw_JFh6dl", name: "AutoReconnect", value: t.autoReconnect });
  let a = P(r);
  if (h !== "prod" || _) {
    let o = [];
    if (
      ((o = o.concat(le(b))),
      (o = o.concat(ce(E))),
      v ||
        W(
          h,
          "W9D4ESUS6E",
          "97a4bb835368fcd48b0d272e14cee913104edb3dff37f77fb6764a3cf38ac0a1",
          o.map((u) =>
            Object.assign(
              {},
              {
                tag: u.tag,
                propertyId: u.propertyId,
                additionalProperties: u.additionalProperties,
                actualType: u.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Auto Reconnect Setting Changed", n, a),
      _ && q("W9D4ESUS6E", "Auto Reconnect Setting Changed", o, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (o.length !== 0)
        throw new Error(
          "Error sending event 'Auto Reconnect Setting Changed': " +
            o[0].message
        );
    } else
      o.forEach(function (u) {
        console[$ || "error"]("[avo] " + u.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts;
  let i = { ...a };
  v ||
    (w != null &&
      w._avoFunctionTrackSchemaFromEvent(
        "Auto Reconnect Setting Changed",
        n,
        "W9D4ESUS6E",
        "97a4bb835368fcd48b0d272e14cee913104edb3dff37f77fb6764a3cf38ac0a1"
      ),
    V.setUserProperties(Object.assign({}, i)),
    V.logEvent("Auto Reconnect Setting Changed", Object.assign({}, s)));
}
function FD(t) {
  let e = [];
  t.terminalSidePanelToggledVia !== void 0 &&
  t.terminalSidePanelToggledVia !== null
    ? e.push({
        id: "lSiIv-InY",
        name: "TerminalSidePanelToggledVia",
        value: t.terminalSidePanelToggledVia,
      })
    : e.push({
        id: "lSiIv-InY",
        name: "TerminalSidePanelToggledVia",
        value: null,
      }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "tM4NB0Ztah",
          "59cba93b0db189c204b8538ad2e7358ec08d93883526137469666efcc028c911",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Productivity Panel Opened", n, a),
      _ && q("tM4NB0Ztah", "Productivity Panel Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Productivity Panel Opened': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Productivity Panel Opened",
          n,
          "tM4NB0Ztah",
          "59cba93b0db189c204b8538ad2e7358ec08d93883526137469666efcc028c911"
        ),
      V.logEvent("Productivity Panel Opened", Object.assign({}, s)));
}
function UD(t) {
  let e = [];
  e.push({
    id: "lSiIv-InY",
    name: "TerminalSidePanelToggledVia",
    value: t.terminalSidePanelToggledVia,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "IQ8yUZVUke",
          "d890fa27ffc323403847b4043999dbf17c13e0241b5ed1a0da942afa13b99e1f",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Terminal Side Panel Closed", n, a),
      _ && q("IQ8yUZVUke", "Terminal Side Panel Closed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Terminal Side Panel Closed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Terminal Side Panel Closed",
          n,
          "IQ8yUZVUke",
          "d890fa27ffc323403847b4043999dbf17c13e0241b5ed1a0da942afa13b99e1f"
        ),
      V.logEvent("Terminal Side Panel Closed", Object.assign({}, s)));
}
function KD(t) {
  let e = [];
  e.push({ id: "1yGELHVfm8", name: "AuthMethod", value: t.authMethod }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "kgYQ1b31nM",
          "c402214c6ad5e6418246d020757a9713ed89cc07033c1b0d551392692b25a9e0",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Enter Email Screen Opened", n, a),
      _ && q("kgYQ1b31nM", "Enter Email Screen Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Enter Email Screen Opened': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Enter Email Screen Opened",
          n,
          "kgYQ1b31nM",
          "c402214c6ad5e6418246d020757a9713ed89cc07033c1b0d551392692b25a9e0"
        ),
      V.logEvent("Enter Email Screen Opened", Object.assign({}, s)));
}
function BD() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "nC9YUm0fbL",
          "3681ca4381cd78c9a2feb65835852e05f33c35662b32d303439876f2a27ce2e8",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Forgot Password Button Pressed", e, r),
      _ && q("nC9YUm0fbL", "Forgot Password Button Pressed", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Forgot Password Button Pressed': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Forgot Password Button Pressed",
          e,
          "nC9YUm0fbL",
          "3681ca4381cd78c9a2feb65835852e05f33c35662b32d303439876f2a27ce2e8"
        ),
      V.logEvent("Forgot Password Button Pressed", Object.assign({}, a)));
}
function VD(t) {
  let e = [];
  e.push({ id: "LtX0SIqFoB", name: "ConnectionID", value: t.connectionID }),
    e.push({ id: "B6I4Af3CH3", name: "OnScreen", value: t.onScreen }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "yLgwpvUHjy",
          "aa6ee9cbdaed0ef7c7e43c29c89edbddb7ab6357d23df7ad8a608d16f4242bed",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Boost Shell Performance Initiated", n, a),
      _ && q("yLgwpvUHjy", "Boost Shell Performance Initiated", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Boost Shell Performance Initiated': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Boost Shell Performance Initiated",
          n,
          "yLgwpvUHjy",
          "aa6ee9cbdaed0ef7c7e43c29c89edbddb7ab6357d23df7ad8a608d16f4242bed"
        ),
      V.logEvent("Boost Shell Performance Initiated", Object.assign({}, s)));
}
function jD(t) {
  let e = [];
  e.push({ id: "LtX0SIqFoB", name: "ConnectionID", value: t.connectionID }),
    e.push({ id: "B6I4Af3CH3", name: "OnScreen", value: t.onScreen }),
    e.push({
      id: "I53sr7E31",
      name: "ShellPerformanceBoostFailureReason",
      value: t.shellPerformanceBoostFailureReason,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "bKNSQu0ODO",
          "e35ec4b518427728a1a63ceabfeb613286bf6e99abef51e65e462fec5cb209c1",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Boost Shell Performance Failed", n, a),
      _ && q("bKNSQu0ODO", "Boost Shell Performance Failed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Boost Shell Performance Failed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Boost Shell Performance Failed",
          n,
          "bKNSQu0ODO",
          "e35ec4b518427728a1a63ceabfeb613286bf6e99abef51e65e462fec5cb209c1"
        ),
      V.logEvent("Boost Shell Performance Failed", Object.assign({}, s)));
}
function zD(t) {
  let e = [];
  e.push({ id: "LtX0SIqFoB", name: "ConnectionID", value: t.connectionID }),
    e.push({ id: "B6I4Af3CH3", name: "OnScreen", value: t.onScreen }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "RaB-05fDqm",
          "ad9d695b8dc544e96bddca6074724f784a4d8af85be12fc2220c441da18a5813",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Boost Shell Performance Succeeded", n, a),
      _ && q("RaB-05fDqm", "Boost Shell Performance Succeeded", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Boost Shell Performance Succeeded': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Boost Shell Performance Succeeded",
          n,
          "RaB-05fDqm",
          "ad9d695b8dc544e96bddca6074724f784a4d8af85be12fc2220c441da18a5813"
        ),
      V.logEvent("Boost Shell Performance Succeeded", Object.assign({}, s)));
}
function $D(t) {
  let e = [];
  e.push({ id: "LtX0SIqFoB", name: "ConnectionID", value: t.connectionID }),
    e.push({ id: "MGexS9ePV", name: "WizardID", value: t.wizardID }),
    e.push({
      id: "DuhiMqTqh",
      name: "ConnectionDetachOrigin",
      value: t.connectionDetachOrigin,
    }),
    e.push({
      id: "GCP2DZ2Hc",
      name: "ConnectionRunState",
      value: t.connectionRunState,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "qTawPeKCp",
          "fbafddbba883b1ec9c736044d73be1cfdb891471bd00f2b1dc9c621eb18c2918",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Snippet Multi-Execution Connection Detached", n, a),
      _ &&
        q(
          "qTawPeKCp",
          "Snippet Multi-Execution Connection Detached",
          i,
          e,
          r,
          []
        ),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Snippet Multi-Execution Connection Detached': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Snippet Multi-Execution Connection Detached",
          n,
          "qTawPeKCp",
          "fbafddbba883b1ec9c736044d73be1cfdb891471bd00f2b1dc9c621eb18c2918"
        ),
      V.logEvent(
        "Snippet Multi-Execution Connection Detached",
        Object.assign({}, s)
      ));
}
function WD(t) {
  let e = [];
  e.push({ id: "MGexS9ePV", name: "WizardID", value: t.wizardID }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "V_hWKt6oM",
          "98577de532bb76ccd26cd2252c2324b6fe4b929e96e41c334ca1ccfe4ee7e14c",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Snippet Multi-Execution Canceled", n, a),
      _ && q("V_hWKt6oM", "Snippet Multi-Execution Canceled", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Snippet Multi-Execution Canceled': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Snippet Multi-Execution Canceled",
          n,
          "V_hWKt6oM",
          "98577de532bb76ccd26cd2252c2324b6fe4b929e96e41c334ca1ccfe4ee7e14c"
        ),
      V.logEvent("Snippet Multi-Execution Canceled", Object.assign({}, s)));
}
function qD(t) {
  let e = [];
  e.push({ id: "MGexS9ePV", name: "WizardID", value: t.wizardID }),
    e.push({
      id: "sbCYo_DHf",
      name: "RunSnippetPreviewsMoved",
      value: t.runSnippetPreviewsMoved,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "dtsat6Skd",
          "11318934b95c7404ac33399b3365073f6a81fd822d45fb39c28d898d1d8a3d4e",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Move Run Snippet to Split View Pressed", n, a),
      _ &&
        q("dtsat6Skd", "Move Run Snippet to Split View Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Move Run Snippet to Split View Pressed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Move Run Snippet to Split View Pressed",
          n,
          "dtsat6Skd",
          "11318934b95c7404ac33399b3365073f6a81fd822d45fb39c28d898d1d8a3d4e"
        ),
      V.logEvent(
        "Move Run Snippet to Split View Pressed",
        Object.assign({}, s)
      ));
}
function YD(t) {
  let e = [];
  e.push({ id: "MGexS9ePV", name: "WizardID", value: t.wizardID }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "sy43u5K4i",
          "4596397b54e207f60cbeee51777b702daaa8c9ef6b9d76ed0e3a994b85aae443",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Expand All Run Snippet Preview Pressed", n, a),
      _ &&
        q("sy43u5K4i", "Expand All Run Snippet Preview Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Expand All Run Snippet Preview Pressed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Expand All Run Snippet Preview Pressed",
          n,
          "sy43u5K4i",
          "4596397b54e207f60cbeee51777b702daaa8c9ef6b9d76ed0e3a994b85aae443"
        ),
      V.logEvent(
        "Expand All Run Snippet Preview Pressed",
        Object.assign({}, s)
      ));
}
function XD(t) {
  let e = [];
  e.push({ id: "MGexS9ePV", name: "WizardID", value: t.wizardID }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "62WW-LqDg",
          "6993af7a7328dd2deda7f5460290521a47ca1784c60daeaca00a044e261a8257",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Collapse All Run Snippet Preview Pressed", n, a),
      _ &&
        q("62WW-LqDg", "Collapse All Run Snippet Preview Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Collapse All Run Snippet Preview Pressed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Collapse All Run Snippet Preview Pressed",
          n,
          "62WW-LqDg",
          "6993af7a7328dd2deda7f5460290521a47ca1784c60daeaca00a044e261a8257"
        ),
      V.logEvent(
        "Collapse All Run Snippet Preview Pressed",
        Object.assign({}, s)
      ));
}
function QD(t) {
  let e = [];
  e.push({ id: "MGexS9ePV", name: "WizardID", value: t.wizardID }),
    e.push({ id: "LtX0SIqFoB", name: "ConnectionID", value: t.connectionID }),
    e.push({ id: "auygTuguU", name: "PreviewState", value: t.previewState }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "yVhdNAmPQ",
          "3d22eb8e3b90cb1598febdcf4266d41ea80776cea239ddeb60190d4cd63d4246",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Snippet Multi-Execution Preview Pressed", n, a),
      _ &&
        q("yVhdNAmPQ", "Snippet Multi-Execution Preview Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Snippet Multi-Execution Preview Pressed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Snippet Multi-Execution Preview Pressed",
          n,
          "yVhdNAmPQ",
          "3d22eb8e3b90cb1598febdcf4266d41ea80776cea239ddeb60190d4cd63d4246"
        ),
      V.logEvent(
        "Snippet Multi-Execution Preview Pressed",
        Object.assign({}, s)
      ));
}
function JD(t) {
  let e = [];
  e.push({ id: "MGexS9ePV", name: "WizardID", value: t.wizardID }),
    e.push({ id: "LtX0SIqFoB", name: "ConnectionID", value: t.connectionID }),
    e.push({
      id: "GCP2DZ2Hc",
      name: "ConnectionRunState",
      value: t.connectionRunState,
    }),
    e.push({
      id: "UtQJN4dun",
      name: "ConnectionCloseOrigin",
      value: t.connectionCloseOrigin,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "pAkyxwZ7z",
          "0ca1db3e46c6a6769243cbf503df8dc9182097daa9329089284d0093df0771b1",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Snippet Multi-Execution Connection Closed", n, a),
      _ &&
        q(
          "pAkyxwZ7z",
          "Snippet Multi-Execution Connection Closed",
          i,
          e,
          r,
          []
        ),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Snippet Multi-Execution Connection Closed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Snippet Multi-Execution Connection Closed",
          n,
          "pAkyxwZ7z",
          "0ca1db3e46c6a6769243cbf503df8dc9182097daa9329089284d0093df0771b1"
        ),
      V.logEvent(
        "Snippet Multi-Execution Connection Closed",
        Object.assign({}, s)
      ));
}
function ZD() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "NgFKy90h29",
          "71399620a47a043f209f312c70bebe2f252c15ee777b62c10c9c8bbc44bc7ea4",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Logout Biometric Keys Warning Screen Opened", e, r),
      _ &&
        q(
          "NgFKy90h29",
          "Logout Biometric Keys Warning Screen Opened",
          s,
          t,
          n,
          []
        ),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Logout Biometric Keys Warning Screen Opened': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Logout Biometric Keys Warning Screen Opened",
          e,
          "NgFKy90h29",
          "71399620a47a043f209f312c70bebe2f252c15ee777b62c10c9c8bbc44bc7ea4"
        ),
      V.logEvent(
        "Logout Biometric Keys Warning Screen Opened",
        Object.assign({}, a)
      ));
}
function e6(t) {
  let e = [];
  t.type !== void 0 && t.type !== null
    ? e.push({ id: "4JK6HZoSy", name: "Type", value: t.type })
    : e.push({ id: "4JK6HZoSy", name: "Type", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "QvfVBCwSGe",
          "c952cd7b0d814491fc668c358387210499f744b8cf5bc2a9416a8db969e998f5",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("New Protocol Added", n, a),
      _ && q("QvfVBCwSGe", "New Protocol Added", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'New Protocol Added': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Protocol = s.Type),
    delete s.Type,
    (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "New Protocol Added",
          n,
          "QvfVBCwSGe",
          "c952cd7b0d814491fc668c358387210499f744b8cf5bc2a9416a8db969e998f5"
        ),
      V.logEvent("New Protocol Added", Object.assign({}, s)));
}
function t6(t) {
  let e = [];
  e.push({
    id: "yqWQU3Jhd",
    name: "NumberOfSymbols",
    value: t.numberOfSymbols,
  }),
    e.push({
      id: "iCB47H6zx",
      name: "NumberOfSuggestions",
      value: t.numberOfSuggestions,
    }),
    e.push({
      id: "Xf2ljEhI-",
      name: "InputFieldType",
      value: t.inputFieldType,
    }),
    e.push({
      id: "LtN1StzAY",
      name: "SuggestedEntity",
      value: t.suggestedEntity,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "zkPfU86LKn",
          "dd418beb4575e8e740a3f3b8e1cba621b3d1f5486f28e8093fdf71328b96cbac",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Entity Autocomplete Shown", n, a),
      _ && q("zkPfU86LKn", "Entity Autocomplete Shown", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Entity Autocomplete Shown': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Entity Autocomplete Shown",
          n,
          "zkPfU86LKn",
          "dd418beb4575e8e740a3f3b8e1cba621b3d1f5486f28e8093fdf71328b96cbac"
        ),
      V.logEvent("Entity Autocomplete Shown", Object.assign({}, s)));
}
function n6(t) {
  let e = [];
  t.position !== void 0 && t.position !== null
    ? e.push({ id: "W9DBs0X2C", name: "Position", value: t.position })
    : e.push({ id: "W9DBs0X2C", name: "Position", value: null }),
    e.push({
      id: "yqWQU3Jhd",
      name: "NumberOfSymbols",
      value: t.numberOfSymbols,
    }),
    e.push({
      id: "Xf2ljEhI-",
      name: "InputFieldType",
      value: t.inputFieldType,
    }),
    e.push({
      id: "LtN1StzAY",
      name: "SuggestedEntity",
      value: t.suggestedEntity,
    }),
    e.push({
      id: "N0LOUrnt3J",
      name: "NumberOfLinkedElements",
      value: t.numberOfLinkedElements,
    }),
    e.push({
      id: "iCB47H6zx",
      name: "NumberOfSuggestions",
      value: t.numberOfSuggestions,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(Z2(t.position))),
      (i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "Oq1yVRY9YU",
          "630c901bd03f20ac908f3ca5f772400b6f205ae6209107f360580981464a13f7",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Entity Autocomplete Item Pressed", n, a),
      _ && q("Oq1yVRY9YU", "Entity Autocomplete Item Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Entity Autocomplete Item Pressed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Entity Autocomplete Item Pressed",
          n,
          "Oq1yVRY9YU",
          "630c901bd03f20ac908f3ca5f772400b6f205ae6209107f360580981464a13f7"
        ),
      V.logEvent("Entity Autocomplete Item Pressed", Object.assign({}, s)));
}
function s6(t) {
  let e = [];
  e.push({ id: "Gn7pMin78i", name: "EntityID", value: t.entityID }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "hDT5ULM4R",
          "e6b1254f3430d9538dfb6f9a2f0484dd5f3feef74128b3392a92d20932089eed",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Show Config Details Button Pressed", n, a),
      _ && q("hDT5ULM4R", "Show Config Details Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Show Config Details Button Pressed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Show Config Details Button Pressed",
          n,
          "hDT5ULM4R",
          "e6b1254f3430d9538dfb6f9a2f0484dd5f3feef74128b3392a92d20932089eed"
        ),
      V.logEvent("Show Config Details Button Pressed", Object.assign({}, s)));
}
function r6(t) {
  let e = [];
  e.push({ id: "Xf2ljEhI-", name: "InputFieldType", value: t.inputFieldType }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "NSafu_L3i",
          "66eae59f42a004edf9c3ce738cb4ac52da89ad60705388659768f9cb910e2ce5",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Entity Autocomplete Field Focused", n, a),
      _ && q("NSafu_L3i", "Entity Autocomplete Field Focused", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Entity Autocomplete Field Focused': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Entity Autocomplete Field Focused",
          n,
          "NSafu_L3i",
          "66eae59f42a004edf9c3ce738cb4ac52da89ad60705388659768f9cb910e2ce5"
        ),
      V.logEvent("Entity Autocomplete Field Focused", Object.assign({}, s)));
}
function a6(t) {
  let e = [];
  e.push({ id: "IdLc6aidYP", name: "Entity", value: t.entity }),
    e.push({
      id: "N0LOUrnt3J",
      name: "NumberOfLinkedElements",
      value: t.numberOfLinkedElements,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "L_pnxtqR_7",
          "9cac186e9f22712ed020e152d2cdb6daa8f2bfb9194b2238c52dd57b51b11b02",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Activation Banner Shown", n, a),
      _ && q("L_pnxtqR_7", "Activation Banner Shown", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Activation Banner Shown': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Activation Banner Shown",
          n,
          "L_pnxtqR_7",
          "9cac186e9f22712ed020e152d2cdb6daa8f2bfb9194b2238c52dd57b51b11b02"
        ),
      V.logEvent("Activation Banner Shown", Object.assign({}, s)));
}
function i6(t) {
  let e = [];
  e.push({ id: "IdLc6aidYP", name: "Entity", value: t.entity }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "bMccRKRnGA",
          "62d9d67b949afb71ebf93f3b04497561d1a76ed4e0e3341e565861a9d1c9fa2c",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Activation Banner Closed", n, a),
      _ && q("bMccRKRnGA", "Activation Banner Closed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Activation Banner Closed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Activation Banner Closed",
          n,
          "bMccRKRnGA",
          "62d9d67b949afb71ebf93f3b04497561d1a76ed4e0e3341e565861a9d1c9fa2c"
        ),
      V.logEvent("Activation Banner Closed", Object.assign({}, s)));
}
function o6() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "4tmFiMN50",
          "855fd751aec6e1f237f9813ec0b9322a33f57645c728ecd77365c8e279a64f1e",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("New Tag Created", e, r),
      _ && q("4tmFiMN50", "New Tag Created", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'New Tag Created': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "New Tag Created",
          e,
          "4tmFiMN50",
          "855fd751aec6e1f237f9813ec0b9322a33f57645c728ecd77365c8e279a64f1e"
        ),
      V.logEvent("New Tag Created", Object.assign({}, a)));
}
function Vne(t) {
  let e = [];
  e.push({ id: "8m95FVUtN", name: "NewVaultSource", value: t.newVaultSource }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "-LC0Qv7mB",
          "6d9e7bdf5151bf0cfcae117b4eeb2d76f8c0ab97a5aaa41c6d5beba33cb29fa3",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("New Vault Button Pressed", n, a),
      _ && q("-LC0Qv7mB", "New Vault Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'New Vault Button Pressed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "New Vault Button Pressed",
          n,
          "-LC0Qv7mB",
          "6d9e7bdf5151bf0cfcae117b4eeb2d76f8c0ab97a5aaa41c6d5beba33cb29fa3"
        ),
      V.logEvent("New Vault Button Pressed", Object.assign({}, s)));
}
function jne() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "fgIwfsAhEw",
          "f89653a11d8f8da295105c9989732fd77300c2b5e378fd37ac4542f24b2d7d09",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Vaults Screen Opened", e, r),
      _ && q("fgIwfsAhEw", "Vaults Screen Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Vaults Screen Opened': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Vaults Screen Opened",
          e,
          "fgIwfsAhEw",
          "f89653a11d8f8da295105c9989732fd77300c2b5e378fd37ac4542f24b2d7d09"
        ),
      V.logEvent("Vaults Screen Opened", Object.assign({}, a)));
}
function zne(t) {
  let e = [];
  t.eventTeamRole !== void 0 && t.eventTeamRole !== null
    ? e.push({ id: "6LKqiSL8zD", name: "TeamRole", value: t.eventTeamRole })
    : e.push({ id: "6LKqiSL8zD", name: "TeamRole", value: null }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "sIMOzr4Kyb",
          "39d3bb00d2560f4ccc1f734dce719120faf1d0d9fd5ce26242c88749498b9b34",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Hit Multiple Vaults Promotion Page", n, a),
      _ && q("sIMOzr4Kyb", "Hit Multiple Vaults Promotion Page", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Hit Multiple Vaults Promotion Page': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Hit Multiple Vaults Promotion Page",
          n,
          "sIMOzr4Kyb",
          "39d3bb00d2560f4ccc1f734dce719120faf1d0d9fd5ce26242c88749498b9b34"
        ),
      V.logEvent("Hit Multiple Vaults Promotion Page", Object.assign({}, s)));
}
function $ne(t) {
  let e = [];
  e.push({ id: "KLiyOjVgh", name: "IsDefaultVault", value: t.isDefaultVault }),
    e.push({ id: "F-mA3Cd8f", name: "VaultID", value: t.vaultID }),
    e.push({
      id: "8j-zf64ab",
      name: "NumberOfParticipants",
      value: t.numberOfParticipants,
    }),
    e.push({
      id: "v8wlKX_3j",
      name: "HasVaultDataAccess",
      value: t.hasVaultDataAccess,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "oCQW5DmUQ",
          "72ccfecfbf286b676ebadbab323362dff56f95e882920457abdd226bf05cc997",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Edit Vault Screen Opened", n, a),
      _ && q("oCQW5DmUQ", "Edit Vault Screen Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Edit Vault Screen Opened': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Edit Vault Screen Opened",
          n,
          "oCQW5DmUQ",
          "72ccfecfbf286b676ebadbab323362dff56f95e882920457abdd226bf05cc997"
        ),
      V.logEvent("Edit Vault Screen Opened", Object.assign({}, s)));
}
function Wne(t) {
  let e = [];
  e.push({ id: "F-mA3Cd8f", name: "VaultID", value: t.vaultID }),
    e.push({
      id: "v8wlKX_3j",
      name: "HasVaultDataAccess",
      value: t.hasVaultDataAccess,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "s0zuxFYx3",
          "c7787d733f4f828d37acaf32d270606a1b692da7090387f93ba8900ac6ff4121",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Delete Vault Button Pressed", n, a),
      _ && q("s0zuxFYx3", "Delete Vault Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Delete Vault Button Pressed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Delete Vault Button Pressed",
          n,
          "s0zuxFYx3",
          "c7787d733f4f828d37acaf32d270606a1b692da7090387f93ba8900ac6ff4121"
        ),
      V.logEvent("Delete Vault Button Pressed", Object.assign({}, s)));
}
function qne() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "c1gPaqN4w5",
          "c5c7c4b8e7e940e94522a4f1d32f9396af2534009f610fecfd22474f6a25dc47",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Hosts Screen Opened", e, r),
      _ && q("c1gPaqN4w5", "Hosts Screen Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Hosts Screen Opened': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Hosts Screen Opened",
          e,
          "c1gPaqN4w5",
          "c5c7c4b8e7e940e94522a4f1d32f9396af2534009f610fecfd22474f6a25dc47"
        ),
      V.logEvent("Hosts Screen Opened", Object.assign({}, a)));
}
function Yne(t) {
  let e = [];
  e.push({
    id: "BKu5OXYC8",
    name: "VaultTabOpenedVia",
    value: t.vaultTabOpenedVia,
  }),
    e.push({ id: "B6I4Af3CH3", name: "OnScreen", value: t.onScreen }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "fAfzc0n0E",
          "5f78fa97bca19f00f68dc6620e26d60b5bbddf6a4c2a0e51265818d2f1b9a9c6",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Vault Tab Opened", n, a),
      _ && q("fAfzc0n0E", "Vault Tab Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Vault Tab Opened': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Vault Tab Opened",
          n,
          "fAfzc0n0E",
          "5f78fa97bca19f00f68dc6620e26d60b5bbddf6a4c2a0e51265818d2f1b9a9c6"
        ),
      V.logEvent("Vault Tab Opened", Object.assign({}, s)));
}
function Xne(t) {
  let e = [];
  e.push({ id: "OPNqNxEuxS", name: "SharedEntity", value: t.isSharedEntity }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "yJr1nJ_QdW",
          "62ce5e639898b5ea680302ab121a5259b57bc744c2f73025b4349bda70afc206",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Credentials Sharing Picker Pressed", n, a),
      _ && q("yJr1nJ_QdW", "Credentials Sharing Picker Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Credentials Sharing Picker Pressed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Credentials Sharing Picker Pressed",
          n,
          "yJr1nJ_QdW",
          "62ce5e639898b5ea680302ab121a5259b57bc744c2f73025b4349bda70afc206"
        ),
      V.logEvent("Credentials Sharing Picker Pressed", Object.assign({}, s)));
}
function Qne(t) {
  let e = [];
  e.push({
    id: "EAhyJvlH96",
    name: "CredentialsSharingMode",
    value: t.credentialsSharingMode,
  }),
    e.push({ id: "OPNqNxEuxS", name: "SharedEntity", value: t.isSharedEntity }),
    e.push({
      id: "VS1h0wtL5",
      name: "CredentialFormLocation",
      value: t.credentialFormLocation,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "p9R2wIF5ND",
          "254a19239bd014febe23092f9782e43accff6372ef40c896cde2a280bf6d57fb",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Add Credentials Button Pressed", n, a),
      _ && q("p9R2wIF5ND", "Add Credentials Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Add Credentials Button Pressed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Add Credentials Button Pressed",
          n,
          "p9R2wIF5ND",
          "254a19239bd014febe23092f9782e43accff6372ef40c896cde2a280bf6d57fb"
        ),
      V.logEvent("Add Credentials Button Pressed", Object.assign({}, s)));
}
function Jne(t) {
  let e = [];
  e.push({
    id: "EAhyJvlH96",
    name: "CredentialsSharingMode",
    value: t.credentialsSharingMode,
  }),
    e.push({ id: "OPNqNxEuxS", name: "SharedEntity", value: t.isSharedEntity }),
    e.push({ id: "7uK7SjClI", name: "Credentials", value: t.credentials }),
    e.push({
      id: "VS1h0wtL5",
      name: "CredentialFormLocation",
      value: t.credentialFormLocation,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "dRN7xx3-D",
          "dd149199c1476dac30d0d60a0ad0d9cb206b4535bd2f3ca8704c98d7dff9176d",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Add Credentials Option Selected", n, a),
      _ && q("dRN7xx3-D", "Add Credentials Option Selected", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Add Credentials Option Selected': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Add Credentials Option Selected",
          n,
          "dRN7xx3-D",
          "dd149199c1476dac30d0d60a0ad0d9cb206b4535bd2f3ca8704c98d7dff9176d"
        ),
      V.logEvent("Add Credentials Option Selected", Object.assign({}, s)));
}
function u6(t) {
  let e = [];
  e.push({
    id: "Lvpwz1-ZTs",
    name: "WindowsHelloAvailability",
    value: t.windowsHelloAvailability,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "RMDLXa_8vh",
          "7500d5e58482f54fdc2c8d313d33a146cd1fecd8ce71b722c34eef13aa8504e5",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Windows Hello Availability Detected", n, a),
      _ && q("RMDLXa_8vh", "Windows Hello Availability Detected", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Windows Hello Availability Detected': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Windows Hello Availability Detected",
          n,
          "RMDLXa_8vh",
          "7500d5e58482f54fdc2c8d313d33a146cd1fecd8ce71b722c34eef13aa8504e5"
        ),
      V.logEvent("Windows Hello Availability Detected", Object.assign({}, s)));
}
function Zne(t) {
  let e = [];
  e.push({
    id: "yazyYoYkq",
    name: "KeychainItemLocation",
    value: t.keychainItemLocation,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "j3qJjIuiDv",
          "8814a2582101f7db967801212e7f5cfb3dfe49473577e2f184bc17acbb99ecaa",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Generate Biometric Key Button Pressed", n, a),
      _ &&
        q("j3qJjIuiDv", "Generate Biometric Key Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Generate Biometric Key Button Pressed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Generate Biometric Key Button Pressed",
          n,
          "j3qJjIuiDv",
          "8814a2582101f7db967801212e7f5cfb3dfe49473577e2f184bc17acbb99ecaa"
        ),
      V.logEvent(
        "Generate Biometric Key Button Pressed",
        Object.assign({}, s)
      ));
}
function ese() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "jGokf7hZ6D",
          "b651d0f985a1803f8c5c79fc688c909abdd8b6443af279936e86479d3b8ed7dd",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Verify Your Email Screen Opened", e, r),
      _ && q("jGokf7hZ6D", "Verify Your Email Screen Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Verify Your Email Screen Opened': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Verify Your Email Screen Opened",
          e,
          "jGokf7hZ6D",
          "b651d0f985a1803f8c5c79fc688c909abdd8b6443af279936e86479d3b8ed7dd"
        ),
      V.logEvent("Verify Your Email Screen Opened", Object.assign({}, a)));
}
function tse() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "IsDC3WGWnG",
          "20e7da06b86a7bc297035ccb1723afd7c13b5cfb4a9f97e233431a7d16305bd2",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Verify Email Button Pressed", e, r),
      _ && q("IsDC3WGWnG", "Verify Email Button Pressed", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Verify Email Button Pressed': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Verify Email Button Pressed",
          e,
          "IsDC3WGWnG",
          "20e7da06b86a7bc297035ccb1723afd7c13b5cfb4a9f97e233431a7d16305bd2"
        ),
      V.logEvent("Verify Email Button Pressed", Object.assign({}, a)));
}
function nse() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "5dgzeil7iq",
          "a802d6143cdfc8266c38348d517b20b36ad732bb6f42100456a2caaf8a236cad",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Resend Verification Code Button Pressed", e, r),
      _ &&
        q("5dgzeil7iq", "Resend Verification Code Button Pressed", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Resend Verification Code Button Pressed': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Resend Verification Code Button Pressed",
          e,
          "5dgzeil7iq",
          "a802d6143cdfc8266c38348d517b20b36ad732bb6f42100456a2caaf8a236cad"
        ),
      V.logEvent(
        "Resend Verification Code Button Pressed",
        Object.assign({}, a)
      ));
}
function l6(t) {
  let e = [];
  e.push({
    id: "Ajk75--yP",
    name: "CommandPaletteOpenedVia",
    value: t.commandPaletteOpenedVia,
  }),
    e.push({
      id: "DG9aiUVbv",
      name: "CommandPaletteInstanceID",
      value: t.commandPaletteInstanceID,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "zG8T8H3WyY",
          "3976c5cdd4606693aeba7fc6d18fe260f5841a54a98eac4c6558db072d00b226",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Command Palette Opened", n, a),
      _ && q("zG8T8H3WyY", "Command Palette Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Command Palette Opened': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Command Palette Opened",
          n,
          "zG8T8H3WyY",
          "3976c5cdd4606693aeba7fc6d18fe260f5841a54a98eac4c6558db072d00b226"
        ),
      V.logEvent("Command Palette Opened", Object.assign({}, s)));
}
function c6(t) {
  let e = [];
  e.push({
    id: "B7HsHEvVu",
    name: "CommandPaletteItemType",
    value: t.commandPaletteItemType,
  }),
    t.position !== void 0 && t.position !== null
      ? e.push({ id: "W9DBs0X2C", name: "Position", value: t.position })
      : e.push({ id: "W9DBs0X2C", name: "Position", value: null }),
    e.push({
      id: "DG9aiUVbv",
      name: "CommandPaletteInstanceID",
      value: t.commandPaletteInstanceID,
    }),
    e.push({
      id: "rqzdOWDGD",
      name: "CommandPaletteItemSelectedVia",
      value: t.commandPaletteItemSelectedVia,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(Z2(t.position))),
      (i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "UtRYiV5TKi",
          "cb05da545373982619d7f04397cd125f3196149aff7902a28ec93177983be056",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Command Palette Item Selected", n, a),
      _ && q("UtRYiV5TKi", "Command Palette Item Selected", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Command Palette Item Selected': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Command Palette Item Selected",
          n,
          "UtRYiV5TKi",
          "cb05da545373982619d7f04397cd125f3196149aff7902a28ec93177983be056"
        ),
      V.logEvent("Command Palette Item Selected", Object.assign({}, s)));
}
function d6(t) {
  let e = [];
  e.push({
    id: "DG9aiUVbv",
    name: "CommandPaletteInstanceID",
    value: t.commandPaletteInstanceID,
  }),
    e.push({
      id: "kI9ABMGr9",
      name: "CommandPalettePreviousState",
      value: t.commandPalettePreviousState,
    }),
    e.push({
      id: "gZ6qqkx29",
      name: "CommandPaletteCurrentState",
      value: t.commandPaletteCurrentState,
    }),
    e.push({
      id: "b_qT9EvjY",
      name: "CommandPaletteStateChangedVia",
      value: t.commandPaletteStateChangedVia,
    }),
    e.push({
      id: "lrc31H17L",
      name: "IsJumpToButtonVisible",
      value: t.isJumpToButtonVisible,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "EGZ1dwswqh",
          "0835391fe0d0e9d829adfef1168e133eab5a635ba6ebc2eeb06430511757147c",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Command Palette State Changed", n, a),
      _ && q("EGZ1dwswqh", "Command Palette State Changed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Command Palette State Changed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Command Palette State Changed",
          n,
          "EGZ1dwswqh",
          "0835391fe0d0e9d829adfef1168e133eab5a635ba6ebc2eeb06430511757147c"
        ),
      V.logEvent("Command Palette State Changed", Object.assign({}, s)));
}
function sse() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "jHOr74AeUP",
          "96ccb322950704b88188bb4844b87ae6c9d61b46fdd6ca73c349f484f5624ee4",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Terminal Settings Screen Opened", e, r),
      _ && q("jHOr74AeUP", "Terminal Settings Screen Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Terminal Settings Screen Opened': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Terminal Settings Screen Opened",
          e,
          "jHOr74AeUP",
          "96ccb322950704b88188bb4844b87ae6c9d61b46fdd6ca73c349f484f5624ee4"
        ),
      V.logEvent("Terminal Settings Screen Opened", Object.assign({}, a)));
}
function rse() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "yCaC4PcusL",
          "afa97e6e6924ca2c12d20a05a930dedf4e261a86d9917b8ca9039e1e74b22230",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Shortcuts Screen Opened", e, r),
      _ && q("yCaC4PcusL", "Shortcuts Screen Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Shortcuts Screen Opened': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Shortcuts Screen Opened",
          e,
          "yCaC4PcusL",
          "afa97e6e6924ca2c12d20a05a930dedf4e261a86d9917b8ca9039e1e74b22230"
        ),
      V.logEvent("Shortcuts Screen Opened", Object.assign({}, a)));
}
function ase(t) {
  let e = [];
  e.push({
    id: "ul1-kg8SP",
    name: "CurrentKeyCombination",
    value: t.currentKeyCombination,
  }),
    e.push({
      id: "ZEgzUyJEh",
      name: "ShortcutModificationFunnelID",
      value: t.shortcutModificationFunnelID,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "f_iAzrnS1H",
          "ea2bef1c2adad4ecd72b413988bde91597ab9083ab59684a7356b606e450f26c",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Shortcut Editing Started", n, a),
      _ && q("f_iAzrnS1H", "Shortcut Editing Started", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Shortcut Editing Started': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Shortcut Editing Started",
          n,
          "f_iAzrnS1H",
          "ea2bef1c2adad4ecd72b413988bde91597ab9083ab59684a7356b606e450f26c"
        ),
      V.logEvent("Shortcut Editing Started", Object.assign({}, s)));
}
function ise() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "PPsliEp7pe",
          "036261deb739238e3bb0bcffba38c152216f80e0788b7f81e1cf0c6496145b00",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Hamburger Button Pressed", e, r),
      _ && q("PPsliEp7pe", "Hamburger Button Pressed", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Hamburger Button Pressed': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Hamburger Button Pressed",
          e,
          "PPsliEp7pe",
          "036261deb739238e3bb0bcffba38c152216f80e0788b7f81e1cf0c6496145b00"
        ),
      V.logEvent("Hamburger Button Pressed", Object.assign({}, a)));
}
function ose(t) {
  let e = [];
  e.push({
    id: "LEy8hNW_Q",
    name: "ShortcutActionTitle",
    value: t.shortcutActionTitle,
  }),
    e.push({
      id: "TfF9Xfs9Z",
      name: "PreviousKeyCombination",
      value: t.previousKeyCombination,
    }),
    e.push({
      id: "ul1-kg8SP",
      name: "CurrentKeyCombination",
      value: t.currentKeyCombination,
    }),
    e.push({
      id: "ZEgzUyJEh",
      name: "ShortcutModificationFunnelID",
      value: t.shortcutModificationFunnelID,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "SUdIfeSVhX",
          "21bdf0cd5644d0a42ba31ea8f11c6c216c7fe69c6e90ce891791b51ac269d34f",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Shortcut Changed", n, a),
      _ && q("SUdIfeSVhX", "Shortcut Changed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Shortcut Changed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Shortcut Changed",
          n,
          "SUdIfeSVhX",
          "21bdf0cd5644d0a42ba31ea8f11c6c216c7fe69c6e90ce891791b51ac269d34f"
        ),
      V.logEvent("Shortcut Changed", Object.assign({}, s)));
}
function use() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "gN7MWCbpbz",
          "715153ae6b9c9b72c63e511a25905e24e1c6eb380144d83766aef3ba7c4964a3",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Keychain Screen Opened", e, r),
      _ && q("gN7MWCbpbz", "Keychain Screen Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Keychain Screen Opened': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Keychain Screen Opened",
          e,
          "gN7MWCbpbz",
          "715153ae6b9c9b72c63e511a25905e24e1c6eb380144d83766aef3ba7c4964a3"
        ),
      V.logEvent("Keychain Screen Opened", Object.assign({}, a)));
}
function lse() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "yQu4a9AX0",
          "784b0f16aaf5ad8aa0439f5164e5af23176714e7314056a6d307f5e50e5d186d",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("SFTP Settings Screen Opened", e, r),
      _ && q("yQu4a9AX0", "SFTP Settings Screen Opened", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'SFTP Settings Screen Opened': " + s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "SFTP Settings Screen Opened",
          e,
          "yQu4a9AX0",
          "784b0f16aaf5ad8aa0439f5164e5af23176714e7314056a6d307f5e50e5d186d"
        ),
      V.logEvent("SFTP Settings Screen Opened", Object.assign({}, a)));
}
function cse() {
  let t = [];
  t.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    t.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    t.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    t.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    t.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    t.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    t.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    t.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    t.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    t.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    t.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    t.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    t.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    t.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    t.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    t.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let e = P(t),
    n = [],
    r = P(n);
  if (h !== "prod" || _) {
    let s = [];
    if (
      ((s = s.concat(le(b))),
      (s = s.concat(ce(E))),
      v ||
        W(
          h,
          "dpAXMCE27",
          "5f2c85f7d4558b0a6b4019ef12e1ef2ddd475a4df374c8b17b158508b2b65fa3",
          s.map((i) =>
            Object.assign(
              {},
              {
                tag: i.tag,
                propertyId: i.propertyId,
                additionalProperties: i.additionalProperties,
                actualType: i.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Convert to Hosts Button Pressed", e, r),
      _ && q("dpAXMCE27", "Convert to Hosts Button Pressed", s, t, n, []),
      h !== "prod" && (T === null || T))
    ) {
      if (s.length !== 0)
        throw new Error(
          "Error sending event 'Convert to Hosts Button Pressed': " +
            s[0].message
        );
    } else
      s.forEach(function (i) {
        console[$ || "error"]("[avo] " + i.message);
      });
  }
  let a = { ...e };
  (a.Hosts = a.SystemHosts),
    delete a.SystemHosts,
    (a.SharedHosts = a.SystemSharedHosts),
    delete a.SystemSharedHosts,
    (a.Groups = a.SystemGroups),
    delete a.SystemGroups,
    (a.Snippets = a.SystemSnippets),
    delete a.SystemSnippets,
    (a.SharedGroups = a.SystemSharedGroups),
    delete a.SystemSharedGroups,
    (a.Tags = a.SystemTags),
    delete a.SystemTags,
    (a.KnownHosts = a.SystemKnownHosts),
    delete a.SystemKnownHosts,
    { ...r },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Convert to Hosts Button Pressed",
          e,
          "dpAXMCE27",
          "5f2c85f7d4558b0a6b4019ef12e1ef2ddd475a4df374c8b17b158508b2b65fa3"
        ),
      V.logEvent("Convert to Hosts Button Pressed", Object.assign({}, a)));
}
function dse(t) {
  let e = [];
  e.push({
    id: "ks7IIGgN1",
    name: "TeamJoinedMembers",
    value: t.teamJoinedMembers,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "mvT-eiE1V_",
          "276dd6fd63e76c2cbf8532acf31cdf56a102328519fcdf99225af5b57a078e39",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Group Grant Vault Permissions Screen Opened", n, a),
      _ &&
        q(
          "mvT-eiE1V_",
          "Group Grant Vault Permissions Screen Opened",
          i,
          e,
          r,
          []
        ),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Group Grant Vault Permissions Screen Opened': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Group Grant Vault Permissions Screen Opened",
          n,
          "mvT-eiE1V_",
          "276dd6fd63e76c2cbf8532acf31cdf56a102328519fcdf99225af5b57a078e39"
        ),
      V.logEvent(
        "Group Grant Vault Permissions Screen Opened",
        Object.assign({}, s)
      ));
}
function pse(t) {
  let e = [];
  e.push({
    id: "ks7IIGgN1",
    name: "TeamJoinedMembers",
    value: t.teamJoinedMembers,
  }),
    e.push({
      id: "AyB3bi5jy",
      name: "MemberPosition",
      value: t.memberPosition,
    }),
    e.push({ id: "1W4Pysy66", name: "TeamMemberID", value: t.teamMemberID }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "_VqPxtnZDD",
          "95695470dd160872b8cd5e5f5e2fe94cc1b0ca4eea7eef05d58d1fdfc1cd3dc7",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Grant Vault Permissions Screen Opened", n, a),
      _ &&
        q("_VqPxtnZDD", "Grant Vault Permissions Screen Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Grant Vault Permissions Screen Opened': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Grant Vault Permissions Screen Opened",
          n,
          "_VqPxtnZDD",
          "95695470dd160872b8cd5e5f5e2fe94cc1b0ca4eea7eef05d58d1fdfc1cd3dc7"
        ),
      V.logEvent(
        "Grant Vault Permissions Screen Opened",
        Object.assign({}, s)
      ));
}
function hse(t) {
  let e = [];
  e.push({
    id: "ks7IIGgN1",
    name: "TeamJoinedMembers",
    value: t.teamJoinedMembers,
  }),
    e.push({
      id: "AyB3bi5jy",
      name: "MemberPosition",
      value: t.memberPosition,
    }),
    e.push({ id: "1W4Pysy66", name: "TeamMemberID", value: t.teamMemberID }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "rCGRUuvFtk",
          "92690b7be9318237385d567739997b77634c996567685d69fd434f2d3407c7d6",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Copy Member Permissions Button Pressed", n, a),
      _ &&
        q("rCGRUuvFtk", "Copy Member Permissions Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Copy Member Permissions Button Pressed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Copy Member Permissions Button Pressed",
          n,
          "rCGRUuvFtk",
          "92690b7be9318237385d567739997b77634c996567685d69fd434f2d3407c7d6"
        ),
      V.logEvent(
        "Copy Member Permissions Button Pressed",
        Object.assign({}, s)
      ));
}
function fse(t) {
  let e = [];
  e.push({ id: "Zxn_4C6c5", name: "IsSearched", value: t.isSearched }),
    e.push({ id: "1W4Pysy66", name: "TeamMemberID", value: t.teamMemberID }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "ZZ9zkOFUp2",
          "3ee60d8e25f6d199efff6fe9cbb954b1389ac930b50b312d77ff2e9c509aaf52",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Vault Permission Copied", n, a),
      _ && q("ZZ9zkOFUp2", "Vault Permission Copied", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Vault Permission Copied': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Vault Permission Copied",
          n,
          "ZZ9zkOFUp2",
          "3ee60d8e25f6d199efff6fe9cbb954b1389ac930b50b312d77ff2e9c509aaf52"
        ),
      V.logEvent("Vault Permission Copied", Object.assign({}, s)));
}
function mse(t) {
  let e = [];
  e.push({
    id: "nqOkGxdU4",
    name: "PermissionPickerLocation",
    value: t.permissionPickerLocation,
  }),
    e.push({
      id: "dsMjeVtPa",
      name: "VaultPermissions",
      value: t.vaultPermissions,
    }),
    e.push({ id: "1W4Pysy66", name: "TeamMemberID", value: t.teamMemberID }),
    t.vaultID !== void 0 && t.vaultID !== null
      ? e.push({ id: "F-mA3Cd8f", name: "VaultID", value: t.vaultID })
      : e.push({ id: "F-mA3Cd8f", name: "VaultID", value: null }),
    e.push({
      id: "v8wlKX_3j",
      name: "HasVaultDataAccess",
      value: t.hasVaultDataAccess,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "RxhaaomnBv",
          "de7d4046fa27f8e9db211bd6cb84bf2a6e75d0200e60ec5c420635904a969bce",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Vault Permissions Changed", n, a),
      _ && q("RxhaaomnBv", "Vault Permissions Changed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Vault Permissions Changed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Vault Permissions Changed",
          n,
          "RxhaaomnBv",
          "de7d4046fa27f8e9db211bd6cb84bf2a6e75d0200e60ec5c420635904a969bce"
        ),
      V.logEvent("Vault Permissions Changed", Object.assign({}, s)));
}
function Sse(t) {
  let e = [];
  e.push({ id: "1W4Pysy66", name: "TeamMemberID", value: t.teamMemberID }),
    e.push({
      id: "sKWBAbQjs",
      name: "NumberOfAccessibleVaults",
      value: t.numberOfAccessibleVaults,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "ZylLVPEsKV",
          "0b2713b9ad5d809692d8fea9ac699e771ec794fa7712cfee1061f81cdc51cb8c",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Access Granted", n, a),
      _ && q("ZylLVPEsKV", "Access Granted", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Access Granted': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Access Granted",
          n,
          "ZylLVPEsKV",
          "0b2713b9ad5d809692d8fea9ac699e771ec794fa7712cfee1061f81cdc51cb8c"
        ),
      V.logEvent("Access Granted", Object.assign({}, s)));
}
function yse(t) {
  let e = [];
  e.push({
    id: "ks7IIGgN1",
    name: "TeamJoinedMembers",
    value: t.teamJoinedMembers,
  }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "qCGE4TibRx",
          "090c36c6dcbb9495e7314216e71f7f4f8abe3856343857185f22266fb34b06d3",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Vault Permissions Success Screen Opened", n, a),
      _ &&
        q("qCGE4TibRx", "Vault Permissions Success Screen Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Vault Permissions Success Screen Opened': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Vault Permissions Success Screen Opened",
          n,
          "qCGE4TibRx",
          "090c36c6dcbb9495e7314216e71f7f4f8abe3856343857185f22266fb34b06d3"
        ),
      V.logEvent(
        "Vault Permissions Success Screen Opened",
        Object.assign({}, s)
      ));
}
function gse(t) {
  let e = [];
  t.vaultID !== void 0 && t.vaultID !== null
    ? e.push({ id: "F-mA3Cd8f", name: "VaultID", value: t.vaultID })
    : e.push({ id: "F-mA3Cd8f", name: "VaultID", value: null }),
    e.push({
      id: "8j-zf64ab",
      name: "NumberOfParticipants",
      value: t.numberOfParticipants,
    }),
    e.push({
      id: "v8wlKX_3j",
      name: "HasVaultDataAccess",
      value: t.hasVaultDataAccess,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "5qwuQJfUKa",
          "e338bb8413569c6ea54dc3bb90cf9acfff4af2754c2885953ca558d81d5b4747",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Save Vault Button Pressed", n, a),
      _ && q("5qwuQJfUKa", "Save Vault Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Save Vault Button Pressed': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Save Vault Button Pressed",
          n,
          "5qwuQJfUKa",
          "e338bb8413569c6ea54dc3bb90cf9acfff4af2754c2885953ca558d81d5b4747"
        ),
      V.logEvent("Save Vault Button Pressed", Object.assign({}, s)));
}
function vse(t) {
  let e = [];
  t.vaultID !== void 0 && t.vaultID !== null
    ? e.push({ id: "F-mA3Cd8f", name: "VaultID", value: t.vaultID })
    : e.push({ id: "F-mA3Cd8f", name: "VaultID", value: null }),
    e.push({
      id: "v8wlKX_3j",
      name: "HasVaultDataAccess",
      value: t.hasVaultDataAccess,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "8nZlLGlZq",
          "f14fb11bc72b7fe3f6766c40ad03547673366679b4bb682ae3a5c221b85cf7b0",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Adding Members to Vault Started", n, a),
      _ && q("8nZlLGlZq", "Adding Members to Vault Started", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Adding Members to Vault Started': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Adding Members to Vault Started",
          n,
          "8nZlLGlZq",
          "f14fb11bc72b7fe3f6766c40ad03547673366679b4bb682ae3a5c221b85cf7b0"
        ),
      V.logEvent("Adding Members to Vault Started", Object.assign({}, s)));
}
function _se(t) {
  let e = [];
  e.push({ id: "Zxn_4C6c5", name: "IsSearched", value: t.isSearched }),
    t.vaultID !== void 0 && t.vaultID !== null
      ? e.push({ id: "F-mA3Cd8f", name: "VaultID", value: t.vaultID })
      : e.push({ id: "F-mA3Cd8f", name: "VaultID", value: null }),
    e.push({ id: "1W4Pysy66", name: "TeamMemberID", value: t.teamMemberID }),
    e.push({
      id: "v8wlKX_3j",
      name: "HasVaultDataAccess",
      value: t.hasVaultDataAccess,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "6RfZBXXor",
          "0d55e2313951562c5390e36af2b0d696ba2e4147a64a3c262cfd3298384cce18",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Vault Member Added", n, a),
      _ && q("6RfZBXXor", "Vault Member Added", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Vault Member Added': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Vault Member Added",
          n,
          "6RfZBXXor",
          "0d55e2313951562c5390e36af2b0d696ba2e4147a64a3c262cfd3298384cce18"
        ),
      V.logEvent("Vault Member Added", Object.assign({}, s)));
}
function bse(t) {
  let e = [];
  t.vaultID !== void 0 && t.vaultID !== null
    ? e.push({ id: "F-mA3Cd8f", name: "VaultID", value: t.vaultID })
    : e.push({ id: "F-mA3Cd8f", name: "VaultID", value: null }),
    e.push({ id: "ljhObdcdx", name: "SourceVaultID", value: t.sourceVaultID }),
    e.push({
      id: "KLiyOjVgh",
      name: "IsDefaultVault",
      value: t.isDefaultVault,
    }),
    e.push({
      id: "8j-zf64ab",
      name: "NumberOfParticipants",
      value: t.numberOfParticipants,
    }),
    e.push({ id: "Zxn_4C6c5", name: "IsSearched", value: t.isSearched }),
    e.push({
      id: "v8wlKX_3j",
      name: "HasVaultDataAccess",
      value: t.hasVaultDataAccess,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "IeB1TK8spr",
          "688c6394c5f7336c3bcf5b01b2a394ad9d272011bb395b73fd0e5884be21d2a7",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Copy Vault Members Button Pressed", n, a),
      _ && q("IeB1TK8spr", "Copy Vault Members Button Pressed", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Copy Vault Members Button Pressed': " +
            i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Copy Vault Members Button Pressed",
          n,
          "IeB1TK8spr",
          "688c6394c5f7336c3bcf5b01b2a394ad9d272011bb395b73fd0e5884be21d2a7"
        ),
      V.logEvent("Copy Vault Members Button Pressed", Object.assign({}, s)));
}
function Ese(t) {
  let e = [];
  e.push({
    id: "v8wlKX_3j",
    name: "HasVaultDataAccess",
    value: t.hasVaultDataAccess,
  }),
    e.push({ id: "F-mA3Cd8f", name: "VaultID", value: t.vaultID }),
    e.push({ id: "24-APg5Ij", name: "NumberOfHosts", value: t.numberOfHosts }),
    t.numberOfSshKeys !== void 0 && t.numberOfSshKeys !== null
      ? e.push({
          id: "TlhhQlKf9",
          name: "NumberOfSSHKeys",
          value: t.numberOfSshKeys,
        })
      : e.push({ id: "TlhhQlKf9", name: "NumberOfSSHKeys", value: null }),
    e.push({
      id: "n7Ba_Y7I3",
      name: "NumberOfSnippets",
      value: t.numberOfSnippets,
    }),
    e.push({
      id: "OtS3q3w6a",
      name: "NumberOfIdentities",
      value: t.numberOfIdentities,
    }),
    e.push({ id: "ca4rUIhxtI", name: "Platform", value: Y }),
    e.push({ id: "XF6EVjl1BH", name: "AppSource", value: X }),
    e.push({ id: "sAf4NutJ5V", name: "Plan", value: Q }),
    e.push({ id: "7yv3R__WMN", name: "$app_version_string", value: J }),
    e.push({ id: "sOzwci8jpb", name: "CPUArchitecture", value: Z }),
    e.push({ id: "Ud7n4KShQY", name: "SystemHosts", value: ee }),
    e.push({ id: "gXsCZ6Sto_", name: "SystemSnippets", value: te }),
    e.push({ id: "hiSgGTSlw6", name: "SystemGroups", value: ne }),
    e.push({ id: "LIBqDJh-9u", name: "SystemSharedHosts", value: se }),
    e.push({ id: "JQb2bkCxVU", name: "SystemSharedGroups", value: re }),
    e.push({ id: "SCQtbfIFLe", name: "SharedSnippets", value: ae }),
    e.push({ id: "LXRkNGrwby", name: "SnippetPackages", value: b }),
    e.push({ id: "oh72Fb99pm", name: "SharedSnippetPackages", value: E }),
    e.push({ id: "lYcP_VbCz", name: "SystemTags", value: ie }),
    e.push({ id: "MxeLYHhH6", name: "NumberOfSharedVaults", value: oe }),
    e.push({ id: "4j03zXjq9u", name: "SystemKnownHosts", value: ue });
  let n = P(e),
    r = [],
    a = P(r);
  if (h !== "prod" || _) {
    let i = [];
    if (
      ((i = i.concat(le(b))),
      (i = i.concat(ce(E))),
      v ||
        W(
          h,
          "Tk0dKIM0j",
          "a3b4e43120dcb0e34fb686300b634468d01cd74589dcce2634d39dce6cba7a33",
          i.map((o) =>
            Object.assign(
              {},
              {
                tag: o.tag,
                propertyId: o.propertyId,
                additionalProperties: o.additionalProperties,
                actualType: o.actualType,
              }
            )
          ),
          "event"
        ),
      j.logEventSent("Delete Vault Screen Opened", n, a),
      _ && q("Tk0dKIM0j", "Delete Vault Screen Opened", i, e, r, []),
      h !== "prod" && (T === null || T))
    ) {
      if (i.length !== 0)
        throw new Error(
          "Error sending event 'Delete Vault Screen Opened': " + i[0].message
        );
    } else
      i.forEach(function (o) {
        console[$ || "error"]("[avo] " + o.message);
      });
  }
  let s = { ...n };
  (s.Hosts = s.SystemHosts),
    delete s.SystemHosts,
    (s.SharedHosts = s.SystemSharedHosts),
    delete s.SystemSharedHosts,
    (s.Groups = s.SystemGroups),
    delete s.SystemGroups,
    (s.Snippets = s.SystemSnippets),
    delete s.SystemSnippets,
    (s.SharedGroups = s.SystemSharedGroups),
    delete s.SystemSharedGroups,
    (s.Tags = s.SystemTags),
    delete s.SystemTags,
    (s.KnownHosts = s.SystemKnownHosts),
    delete s.SystemKnownHosts,
    { ...a },
    v ||
      (w != null &&
        w._avoFunctionTrackSchemaFromEvent(
          "Delete Vault Screen Opened",
          n,
          "Tk0dKIM0j",
          "a3b4e43120dcb0e34fb686300b634468d01cd74589dcce2634d39dce6cba7a33"
        ),
      V.logEvent("Delete Vault Screen Opened", Object.assign({}, s)));
}
const bUe = {
    AvoEnv: X2,
    initAvo: J2,
    setSystemProperties: UP,
    avoInspectorApiKey: sJ,
    KeychainItem: iJ,
    FreeToTeamAppExperiment: oJ,
    PromotionType: uJ,
    BellNotificationAction: lJ,
    URLScheme: cJ,
    AuthMethod: dJ,
    PortForwardingLinkResolution: pJ,
    ChoosePlanExperiment: hJ,
    ImportOrigin: fJ,
    ImportedIPType: mJ,
    OnboardingExperiment: SJ,
    ExpiredScreenType: yJ,
    Type: gJ,
    PortForwardingFormType: vJ,
    ConnectionOrigin: _J,
    FeatureName: bJ,
    PromoType: EJ,
    CreateSnippetOrigin: TJ,
    FirstTime: wJ,
    FreeToTrialExperiment: PJ,
    EventTeamRole: IJ,
    CloseReason: CJ,
    OnboardingAction: AJ,
    DowngradeButtonLocation: OJ,
    Action: HJ,
    Credentials: NJ,
    PresenceIconLocation: RJ,
    RequestType: kJ,
    OpenedFrom: xJ,
    NewVaultSource: LJ,
    Feature: MJ,
    CloudIntegration: DJ,
    IsSSHConfigEnabled: GJ,
    PasswordStrengthExperiment: FJ,
    Proxy: UJ,
    CommandPaletteOpenedVia: KJ,
    SaveAsHostEnabled: BJ,
    Success: VJ,
    OnScreen: jJ,
    CommandPaletteItemType: zJ,
    VaultTabOpenedVia: $J,
    EditButtonOrigin: WJ,
    HintMessage: qJ,
    HostCreationOrigin: YJ,
    ChangeToVault: XJ,
    AddKeyOption: QJ,
    MFAProviderType: JJ,
    HintLevel: ZJ,
    ExperimentName: eZ,
    ConnectionDetachOrigin: tZ,
    ExportButtonLocation: nZ,
    CredentialsSharingMode: sZ,
    FailReason: Q2,
    SelectedTools: rZ,
    CredentialsSettingsMode: aZ,
    IsExecutedInSplitView: iZ,
    RunSnippetOrigin: oZ,
    ConnectionRunState: uZ,
    Plan: lZ,
    Mosh: cZ,
    ClosingMethod: dZ,
    ShellPerformanceBoostFailureReason: pZ,
    EnvironmentVariables: hZ,
    Source: fZ,
    ReconnectActionType: mZ,
    InitiallySelectedPlatform: SZ,
    Entity: yZ,
    IsExecutedInMultipleTabs: gZ,
    HasGrantedAccess: vZ,
    LayoutType: _Z,
    SideMenuTeamTrialPromoType: bZ,
    AutocompleteType: EZ,
    IsDefaultVault: TZ,
    From: wZ,
    SessionLogSource: PZ,
    SnippetCreationSource: IZ,
    DownloadButtonLocation: CZ,
    AcquisitionChannel: AZ,
    LoginType: OZ,
    TerminalThemeSource: HZ,
    SuggestedEntity: NZ,
    WindowsHelloAvailability: RZ,
    DependencyResolution: kZ,
    Preference: xZ,
    IsTelnetConfigEnabled: LZ,
    TeamSideOnboardingStage: MZ,
    SharedTerminalPermissions: DZ,
    Backspace: GZ,
    Port: FZ,
    CreateAccountScreenType: UZ,
    IsSharedEntity: KZ,
    NewCertificateLocation: BZ,
    WindowsHelloKey: VZ,
    WelcomeSetupStep: jZ,
    Leaked: zZ,
    PromotionLocation: $Z,
    CriticalErrorType: WZ,
    Charset: qZ,
    CreateGroupOrigin: YZ,
    TeamTrialPlan: XZ,
    TeamExpiredDecision: QZ,
    SharedEntity: JZ,
    BroadcastEnabled: ZZ,
    CESurveyResult: eee,
    PremiumToTeamAppExperiment: tee,
    SessionLogsEnabled: nee,
    HasSharedData: see,
    TerminalSharingSource: ree,
    ExtensionOffer: aee,
    PersonalVaultSelected: iee,
    AppColorTheme: oee,
    ConnectionCloseOrigin: uee,
    CredentialFormLocation: lee,
    MoveEntityButtonOrigin: cee,
    Username: dee,
    IsSharedEntityOwner: pee,
    SFTPTabOpenedVia: hee,
    AppSource: fee,
    TipType: mee,
    HasInvitedMembers: See,
    ChangeVaultSource: yee,
    InputFieldType: gee,
    IOSExperimentVariant: vee,
    ImportFailReason: _ee,
    HasJoinedMembers: bee,
    CreateIdentityOrigin: Eee,
    SuggestionSource: Tee,
    IsSearched: wee,
    IsLocationTrackingEnabled: Pee,
    ParentGroup: Iee,
    SharingModeEntity: Cee,
    TerminalSearchSource: Aee,
    ChoosePlanSource: Oee,
    PreviewState: Hee,
    CloudSyncButtonOrigin: Nee,
    NewPortForwardingLocation: Ree,
    CommandPaletteStateChangedVia: kee,
    UsedSavedSnippetTargets: xee,
    Period: Lee,
    SyncKeyPasswords: Mee,
    Platform: Dee,
    FIDO2BasedKey: Gee,
    IdentityType: Fee,
    PredefinedSnippetPackageID: Uee,
    TerminalFontSelected: Kee,
    SerialSource: Bee,
    VaultPermissions: Vee,
    Snippet: jee,
    Native: zee,
    FailureReason: $ee,
    DismissForever: Wee,
    BroadcastActivatedBy: qee,
    TrialStartingFailReason: Yee,
    CurrentVault: Xee,
    ClearAll: Qee,
    TerminalFontSource: Jee,
    FIDO2WizardSource: Zee,
    ProductID: ete,
    DownloadPlatform: tte,
    CommandPaletteCurrentState: nte,
    Highlighted: ste,
    RequestedConnectionProperty: rte,
    CloseSessionsAfterRunning: ate,
    HostChain: ite,
    SnoozedFromScreen: ote,
    AgentForwarding: ute,
    ChangeVaultAction: lte,
    AssociatedWith: cte,
    CreatePortForwardingWizardStep: dte,
    HelpButtonType: pte,
    Theme: hte,
    CommandPalettePreviousState: fte,
    CrossDeviceActivationExperiment: mte,
    TerminalSidePanelToggledVia: Ste,
    NewKeyLocation: yte,
    IsJumpToButtonVisible: gte,
    SharingButtonLocation: vte,
    ConfirmAccessButtonLocation: _te,
    NewWindowOrigin: bte,
    TerminalFont: Ete,
    Auto: Tte,
    PermissionPickerLocation: wte,
    OpenedVia: Pte,
    BuyNowButtonLocation: Ite,
    BiometricKeysDecision: Cte,
    IdentitySource: Ate,
    EncryptionMigrationWizardStep: Ote,
    TrialExpiredToPremiumExperiment: Hte,
    OptionAsMeta: Nte,
    AutoReconnectEnabled: Rte,
    Instruction: kte,
    CreateTeamWizardStep: xte,
    CommandPaletteItemSelectedVia: Lte,
    AutoReconnect: Mte,
    KeywordHighlighting: Dte,
    SystemPlan: Gte,
    AddressType: Fte,
    DefaultValue: Ute,
    FileOpenOption: Kte,
    KeywordHighlightingEnabled: Bte,
    UpgradeButtonLocation: Vte,
    SessionLogs: jte,
    SEPKey: zte,
    KeySource: $te,
    SFTPSource: Wte,
    SnippetSource: qte,
    PackageOrigin: Yte,
    InviteLinkLocation: Xte,
    HasVaultDataAccess: Qte,
    AutocompleteState: Jte,
    ImportButtonLocation: Zte,
    PortForwardingType: ene,
    TryPremiumExperiment: tne,
    IsVisible: nne,
    SessionAuthMethod: sne,
    IsOwner: rne,
    MagicButtonOrigin: ane,
    ImportSource: ine,
    CommandsHistorySource: one,
    SelectedItems: une,
    FreeToPremiumExperiment: lne,
    KeychainItemLocation: cne,
    Label: dne,
    ImportedServices: pne,
    Reason: hne,
    Trial: fne,
    welcomeScreenOpened: ex,
    userLogin: tx,
    trialStarted: nx,
    trialDismissed: sx,
    connectionEstablished: rx,
    autocomplete: ax,
    appCrash: Sne,
    purchaseStarted: ix,
    choosePlanScreenOpened: ox,
    newHostButtonPressed: ux,
    newHostCreated: lx,
    teamScreenOpened: yne,
    teamPlanTabOpened: cx,
    connectionInitiated: dx,
    connectionFailed: px,
    appOpened: hx,
    syncFailed: Ay,
    userLogout: fx,
    accountDetailsScreenOpened: gne,
    downloadButtonPressed: mx,
    purchaseDismissed: Sx,
    cryptoError: yx,
    optionAsMetaChanged: pw,
    newPortForwardingRuleButtonPressed: gx,
    newPortForwardingRuleCreated: vx,
    learnMoreAboutTeamButtonPressed: _x,
    menuBannerDismissed: bx,
    autocompleteSettingChanged: Ex,
    experimentStarted: vne,
    keychainItemCreated: Tx,
    newGroupButtonPressed: wx,
    newGroupCreated: Px,
    teamPromotionDismissed: Ix,
    importButtonPressed: Cx,
    importCompleted: Ax,
    importFailed: Ox,
    onboardingImportScreenDismissed: Hx,
    teamPrivateKeyGenerated: Nx,
    personalKeySetGenerated: Rx,
    teamPrivateKeyEncrypted: kx,
    teamPrivateKeyAdopted: _ne,
    criticalErrorResolutionScreenOpened: xx,
    criticalErrorResolutionStarted: Lx,
    featureDescriptionScreenOpened: Mx,
    deepLinkHandled: Dx,
    keychainItemDeleted: Gx,
    passwordCheckedWithHibp: Fx,
    terminalSearchOpened: hw,
    terminalSearchExecuted: Ux,
    importStarted: Kx,
    createAccountScreenOpened: Bx,
    appStarted: fw,
    connectionClosed: Vx,
    shareButtonPressed: jx,
    createTeamWizardViewOpened: zx,
    newMainWindowOpened: $x,
    dailyTipPressed: bne,
    contextMenuOpened: Wx,
    helpButtonPressed: qx,
    screenLayoutChanged: Yx,
    connectionDetailsRequested: Xx,
    logoutWarningScreenOpened: Qx,
    promotionShown: Jx,
    promotionPressed: Zx,
    promotionDismissed: eL,
    newSnippetCreated: tL,
    snippetExecuted: nL,
    snippetDeleted: sL,
    newSnippetButtonPressed: rL,
    platformSetupPicked: aL,
    historyItemDeleted: iL,
    notificationReceived: mw,
    notificationListScreenOpened: oL,
    bellNotificationOpened: uL,
    encryptionMigrationWizardViewOpened: lL,
    hostDeleted: cL,
    groupDeleted: dL,
    newIdentitySetUp: pL,
    dailyTipShown: Ene,
    serverErrorScreenOpened: Tne,
    remindTeamOwnerButtonPressed: hL,
    teamTrialExpiredButtonPressed: fL,
    customerExperienceSurveyShown: mL,
    customerExperienceSurveyTaken: SL,
    hintDisplayed: yL,
    hintClosed: gL,
    snippetsPanelOpened: vL,
    switchToTeamScreenOpened: _L,
    setYourDefaultCredentialsScreenOpened: bL,
    accountSetUpCompletedScreenOpened: EL,
    newIdentityCreated: TL,
    teamSideOnboardingShown: wL,
    teamSideOnboardingPressed: PL,
    teamSideOnboardingClosed: IL,
    snippetSharingCanceled: CL,
    shareAllSnippetsShown: wne,
    multipleItemsSelected: AL,
    multipleConnectionsInitiated: OL,
    preferencesButtonPressed: HL,
    editEntityScreenOpened: NL,
    multikeyUpdated: RL,
    authorizedKeysDownloaded: kL,
    multikeyChosen: xL,
    sshKeyForMultikeyGenerated: LL,
    createMultikeyExportScriptButtonPressed: ML,
    copyAsAuthorizedKeysButtonPressed: Pne,
    mfaConfigureScreenOpened: DL,
    mfaInstallAuthyScreenOpened: GL,
    mfaConfirmPasswordScreenOpened: FL,
    mfaPhoneNumberScreenOpened: UL,
    mfaTokenScreenOpened: KL,
    entitiesDragAndDropCompleted: BL,
    entitiesDragAndDropStarted: VL,
    enterPasswordScreenOpened: jL,
    setPasswordScreenOpened: zL,
    passphraseInfoScreenOpened: $L,
    whosInTermiusScreenOpened: WL,
    presenceIconPressed: qL,
    serialConnectionPromoScreenOpened: YL,
    serialConnectionScreenOpened: XL,
    mfaChooseProviderScreenOpened: QL,
    mfaCopyCodeScreenOpened: JL,
    mfaCodeCopied: ZL,
    mfaProviderChosen: e4,
    sharedTerminalSessionStarted: t4,
    sharedTerminalSessionPermissionsChanged: n4,
    sharedTerminalSessionStopped: s4,
    sharedTerminalViewerJoined: r4,
    sharedTerminalViewerLeft: a4,
    shareTerminalButtonPressed: i4,
    sharedTerminalSessionFailed: o4,
    teamTrialExpiredScreenOpened: u4,
    teamTrialExtendedScreenOpened: l4,
    teamTrialExtensionRejectedScreenOpened: c4,
    inviteScreenOpened: d4,
    inviteButtonPressed: p4,
    contactUsButtonPressed: Ine,
    sftpFileOpened: h4,
    fileTypeAssociated: f4,
    sftpUploadFileButtonPressed: m4,
    sftpDiscardFileButtonPressed: S4,
    sftpModifiedFilesBarShown: y4,
    teamTrialFunnelStarted: g4,
    newKeyButtonPressed: v4,
    newKeyOptionSelected: _4,
    restartButtonPressed: b4,
    changelogButtonPressed: E4,
    tabContextMenuOpened: T4,
    newHardwareKeyCreated: w4,
    sessionLogsSettingChanged: Cne,
    sessionLogOpened: P4,
    commandsHistoryPanelOpened: I4,
    credentialsSharingScreenOpened: C4,
    rootGroupShared: A4,
    learnMoreAboutMultikeyButtonPressed: O4,
    multikeyPromoScreenShown: H4,
    credentialsSharingOptionChosen: N4,
    copyInvitationLinkButtonPressed: R4,
    terminalSharingVisibilityChanged: k4,
    welcomeSlideChanged: x4,
    cloudSyncActivated: L4,
    cloudCredentialsChecked: M4,
    syncNowButtonPressed: D4,
    cloudSyncCompleted: G4,
    confirmAccessButtonPressed: F4,
    notificationSnoozed: U4,
    terminalThemeChanged: K4,
    terminalFontChanged: B4,
    downloadTemplateButtonPressed: V4,
    autocompleteSettingsOpened: j4,
    teamTrialStartingFailed: z4,
    sessionLogEncodeQueueOverflowed: $4,
    sessionLogWriteQueueOverflowed: W4,
    exportKeyButtonPressed: q4,
    entitySelected: Y4,
    keyExportSucceeded: X4,
    exportKeyStopped: Q4,
    sftpScreenOpened: Ane,
    buyNowButtonPressed: J4,
    teamTrialExtensionOfferScreenOpened: Z4,
    editHostChainScreenOpened: eM,
    copyPublicKeyButtonPressed: tM,
    groupSettingsOpened: nM,
    cloudSyncFailed: sM,
    downgradeToHobbyButtonPressed: rM,
    historyDetailsScreenOpened: aM,
    snippetPackageCreated: iM,
    snippetPackageDeleted: oM,
    newSnippetPackageButtonPressed: uM,
    snippetsScreenOpened: One,
    copyDownloadLinkButtonPressed: lM,
    proTrialExtendedScreenOpened: Hne,
    proTrialExtensionOfferScreenOpened: Nne,
    extendProTrialButtonPressed: Rne,
    createPortForwardingWizardViewOpened: cM,
    portForwardingFormTypeChanged: dM,
    portForwardingScreenOpened: kne,
    logInScreenOpened: pM,
    enterpriseSsoButtonPressed: hM,
    userLoginFailed: fM,
    fido2DeviceSelected: mM,
    fido2KeygenOptionsSubmitted: SM,
    fido2PinCodeRequested: yM,
    fido2KeyGenerationConfirmed: gM,
    fido2SshKeysSelected: vM,
    splitViewTabCreated: _M,
    splitViewTabUpdated: bM,
    copyHostDetailsLinkButtonPressed: EM,
    splitViewButtonPressed: TM,
    duplicateButtonPressed: wM,
    sshKeyDraggedAndDropped: PM,
    setupCloudSyncButtonPressed: IM,
    toolbarChevronButtonPressed: CM,
    enableSharingScreenShown: AM,
    enableSharingFormSubmitted: OM,
    enableSharingFormPostponed: HM,
    enableSharingFormErrorCaught: NM,
    enableSharingFormSucceeded: RM,
    platformsSetupScreenOpened: kM,
    proPlanScreenOpened: xM,
    snippetMultiExecutionTargetsOpened: LM,
    snippetMultiExecutionStarted: MM,
    snippetMultiExecutionCompleted: DM,
    upgradeToProFunnelStarted: GM,
    selectEntityScreenOpened: FM,
    newIdentityButtonPressed: UM,
    identitySettingsScreenOpened: KM,
    welcomeSetupStarted: BM,
    welcomeSetupStepSkipped: VM,
    importSetupScreenOpened: jM,
    toolsSetupScreenOpened: zM,
    professionalToolsSelected: $M,
    keywordHighlightingSettingChanged: WM,
    keywordColorItemPressed: qM,
    requestKeywordsHighlightCustomizationButtonPressed: YM,
    advancedSettingsButtonPressed: XM,
    saveAsHostSettingChanged: QM,
    importFido2KeyButtonPressed: JM,
    inputPermissionsRequested: ZM,
    terminalSharingStatusDialogShown: eD,
    requestInputAccessPressed: tD,
    copyTheLinkButtonPressed: nD,
    collaborationContextMenuOpened: sD,
    doItLaterButtonPressed: rD,
    collaborationContextMenuItemPressed: aD,
    appearanceSetupScreenOpened: iD,
    appearancePicked: oD,
    saveHistoryCommandButtonPressed: uD,
    trialOnboardingStarted: lD,
    trialOnboardingButtonPressed: cD,
    trialOnboardingMinimized: dD,
    trialOnboardingStepCompleted: pD,
    newCertificateButtonPressed: hD,
    localTerminalShellTypeChanged: fD,
    subscriptionGracePeriodNotificationShown: mD,
    subscriptionGracePeriodNotificationSnoozed: SD,
    subscriptionExpiredScreenOpened: yD,
    teamDeactivationScreenOpened: gD,
    extendTeamTrialButtonPressed: vD,
    magicButtonPressed: _D,
    snippetEdited: bD,
    bulkDataSharingScreenOpened: ED,
    bulkSharingCompleted: TD,
    execChannelOpenFailed: wD,
    appearencePanelOpened: PD,
    resetAppearanceButtonPressed: ID,
    saveAppearanceButtonPressed: CD,
    upgradeButtonPressed: AD,
    sessionAuthMethodChanged: OD,
    broadcastInputToggled: HD,
    suggestTerminalThemeButtonPressed: ND,
    rewriteAiRequestButtonPressed: RD,
    knownHostsScreenOpened: xne,
    moveEntityButtonPressed: kD,
    dependencyScreenOpened: Lne,
    dependencyResolutionChosen: Mne,
    portForwardingLinksScreenOpened: Dne,
    portForwardingLinksResolutionChosen: Gne,
    changingVaultCompleted: xD,
    vaultFilterButtonPressed: Fne,
    vaultFilterSelected: Une,
    changingVaultButtonPressed: Kne,
    credentialsSharingOptionChanged: Bne,
    downgradedToStarterPlan: LD,
    shellTypeDetected: MD,
    closeDisconnectedTabsButtonPressed: DD,
    reconnectAllInitiated: GD,
    autoReconnectSettingChanged: Sw,
    productivityPanelOpened: FD,
    terminalSidePanelClosed: UD,
    enterEmailScreenOpened: KD,
    forgotPasswordButtonPressed: BD,
    boostShellPerformanceInitiated: VD,
    boostShellPerformanceFailed: jD,
    boostShellPerformanceSucceeded: zD,
    snippetMultiExecutionConnectionDetached: $D,
    snippetMultiExecutionCanceled: WD,
    moveRunSnippetToSplitViewPressed: qD,
    expandAllRunSnippetPreviewPressed: YD,
    collapseAllRunSnippetPreviewPressed: XD,
    snippetMultiExecutionPreviewPressed: QD,
    snippetMultiExecutionConnectionClosed: JD,
    logoutBiometricKeysWarningScreenOpened: ZD,
    newProtocolAdded: e6,
    entityAutocompleteShown: t6,
    entityAutocompleteItemPressed: n6,
    showConfigDetailsButtonPressed: s6,
    entityAutocompleteFieldFocused: r6,
    activationBannerShown: a6,
    activationBannerClosed: i6,
    newTagCreated: o6,
    newVaultButtonPressed: Vne,
    vaultsScreenOpened: jne,
    hitMultipleVaultsPromotionPage: zne,
    editVaultScreenOpened: $ne,
    deleteVaultButtonPressed: Wne,
    hostsScreenOpened: qne,
    vaultTabOpened: Yne,
    credentialsSharingPickerPressed: Xne,
    addCredentialsButtonPressed: Qne,
    addCredentialsOptionSelected: Jne,
    windowsHelloAvailabilityDetected: u6,
    generateBiometricKeyButtonPressed: Zne,
    verifyYourEmailScreenOpened: ese,
    verifyEmailButtonPressed: tse,
    resendVerificationCodeButtonPressed: nse,
    commandPaletteOpened: l6,
    commandPaletteItemSelected: c6,
    commandPaletteStateChanged: d6,
    terminalSettingsScreenOpened: sse,
    shortcutsScreenOpened: rse,
    shortcutEditingStarted: ase,
    hamburgerButtonPressed: ise,
    shortcutChanged: ose,
    keychainScreenOpened: use,
    sftpSettingsScreenOpened: lse,
    convertToHostsButtonPressed: cse,
    groupGrantVaultPermissionsScreenOpened: dse,
    grantVaultPermissionsScreenOpened: pse,
    copyMemberPermissionsButtonPressed: hse,
    vaultPermissionCopied: fse,
    vaultPermissionsChanged: mse,
    accessGranted: Sse,
    vaultPermissionsSuccessScreenOpened: yse,
    saveVaultButtonPressed: gse,
    addingMembersToVaultStarted: vse,
    vaultMemberAdded: _se,
    copyVaultMembersButtonPressed: bse,
    deleteVaultScreenOpened: Ese,
  },
  _A = Object.freeze(
    Object.defineProperty(
      {
        __proto__: null,
        AcquisitionChannel: AZ,
        Action: HJ,
        AddKeyOption: QJ,
        AddressType: Fte,
        AgentForwarding: ute,
        AppColorTheme: oee,
        AppSource: fee,
        AssociatedWith: cte,
        AuthMethod: dJ,
        Auto: Tte,
        AutoReconnect: Mte,
        AutoReconnectEnabled: Rte,
        AutocompleteState: Jte,
        AutocompleteType: EZ,
        AvoEnv: X2,
        Backspace: GZ,
        BellNotificationAction: lJ,
        BiometricKeysDecision: Cte,
        BroadcastActivatedBy: qee,
        BroadcastEnabled: ZZ,
        BuyNowButtonLocation: Ite,
        CESurveyResult: eee,
        ChangeToVault: XJ,
        ChangeVaultAction: lte,
        ChangeVaultSource: yee,
        Charset: qZ,
        ChoosePlanExperiment: hJ,
        ChoosePlanSource: Oee,
        ClearAll: Qee,
        CloseReason: CJ,
        CloseSessionsAfterRunning: ate,
        ClosingMethod: dZ,
        CloudIntegration: DJ,
        CloudSyncButtonOrigin: Nee,
        CommandPaletteCurrentState: nte,
        CommandPaletteItemSelectedVia: Lte,
        CommandPaletteItemType: zJ,
        CommandPaletteOpenedVia: KJ,
        CommandPalettePreviousState: fte,
        CommandPaletteStateChangedVia: kee,
        CommandsHistorySource: one,
        ConfirmAccessButtonLocation: _te,
        ConnectionCloseOrigin: uee,
        ConnectionDetachOrigin: tZ,
        ConnectionOrigin: _J,
        ConnectionRunState: uZ,
        CreateAccountScreenType: UZ,
        CreateGroupOrigin: YZ,
        CreateIdentityOrigin: Eee,
        CreatePortForwardingWizardStep: dte,
        CreateSnippetOrigin: TJ,
        CreateTeamWizardStep: xte,
        CredentialFormLocation: lee,
        Credentials: NJ,
        CredentialsSettingsMode: aZ,
        CredentialsSharingMode: sZ,
        CriticalErrorType: WZ,
        CrossDeviceActivationExperiment: mte,
        CurrentVault: Xee,
        DefaultValue: Ute,
        DependencyResolution: kZ,
        DismissForever: Wee,
        DowngradeButtonLocation: OJ,
        DownloadButtonLocation: CZ,
        DownloadPlatform: tte,
        EditButtonOrigin: WJ,
        EncryptionMigrationWizardStep: Ote,
        Entity: yZ,
        EnvironmentVariables: hZ,
        EventTeamRole: IJ,
        ExperimentName: eZ,
        ExpiredScreenType: yJ,
        ExportButtonLocation: nZ,
        ExtensionOffer: aee,
        FIDO2BasedKey: Gee,
        FIDO2WizardSource: Zee,
        FailReason: Q2,
        FailureReason: $ee,
        Feature: MJ,
        FeatureName: bJ,
        FileOpenOption: Kte,
        FirstTime: wJ,
        FreeToPremiumExperiment: lne,
        FreeToTeamAppExperiment: oJ,
        FreeToTrialExperiment: PJ,
        From: wZ,
        HasGrantedAccess: vZ,
        HasInvitedMembers: See,
        HasJoinedMembers: bee,
        HasSharedData: see,
        HasVaultDataAccess: Qte,
        HelpButtonType: pte,
        Highlighted: ste,
        HintLevel: ZJ,
        HintMessage: qJ,
        HostChain: ite,
        HostCreationOrigin: YJ,
        IOSExperimentVariant: vee,
        IdentitySource: Ate,
        IdentityType: Fee,
        ImportButtonLocation: Zte,
        ImportFailReason: _ee,
        ImportOrigin: fJ,
        ImportSource: ine,
        ImportedIPType: mJ,
        ImportedServices: pne,
        InitiallySelectedPlatform: SZ,
        InputFieldType: gee,
        Instruction: kte,
        InviteLinkLocation: Xte,
        IsDefaultVault: TZ,
        IsExecutedInMultipleTabs: gZ,
        IsExecutedInSplitView: iZ,
        IsJumpToButtonVisible: gte,
        IsLocationTrackingEnabled: Pee,
        IsOwner: rne,
        IsSSHConfigEnabled: GJ,
        IsSearched: wee,
        IsSharedEntity: KZ,
        IsSharedEntityOwner: pee,
        IsTelnetConfigEnabled: LZ,
        IsVisible: nne,
        KeySource: $te,
        KeychainItem: iJ,
        KeychainItemLocation: cne,
        KeywordHighlighting: Dte,
        KeywordHighlightingEnabled: Bte,
        Label: dne,
        LayoutType: _Z,
        Leaked: zZ,
        LoginType: OZ,
        MFAProviderType: JJ,
        MagicButtonOrigin: ane,
        Mosh: cZ,
        MoveEntityButtonOrigin: cee,
        Native: zee,
        NewCertificateLocation: BZ,
        NewKeyLocation: yte,
        NewPortForwardingLocation: Ree,
        NewVaultSource: LJ,
        NewWindowOrigin: bte,
        OnScreen: jJ,
        OnboardingAction: AJ,
        OnboardingExperiment: SJ,
        OpenedFrom: xJ,
        OpenedVia: Pte,
        OptionAsMeta: Nte,
        PackageOrigin: Yte,
        ParentGroup: Iee,
        PasswordStrengthExperiment: FJ,
        Period: Lee,
        PermissionPickerLocation: wte,
        PersonalVaultSelected: iee,
        Plan: lZ,
        Platform: Dee,
        Port: FZ,
        PortForwardingFormType: vJ,
        PortForwardingLinkResolution: pJ,
        PortForwardingType: ene,
        PredefinedSnippetPackageID: Uee,
        Preference: xZ,
        PremiumToTeamAppExperiment: tee,
        PresenceIconLocation: RJ,
        PreviewState: Hee,
        ProductID: ete,
        PromoType: EJ,
        PromotionLocation: $Z,
        PromotionType: uJ,
        Proxy: UJ,
        Reason: hne,
        ReconnectActionType: mZ,
        RequestType: kJ,
        RequestedConnectionProperty: rte,
        RunSnippetOrigin: oZ,
        SEPKey: zte,
        SFTPSource: Wte,
        SFTPTabOpenedVia: hee,
        SaveAsHostEnabled: BJ,
        SelectedItems: une,
        SelectedTools: rZ,
        SerialSource: Bee,
        SessionAuthMethod: sne,
        SessionLogSource: PZ,
        SessionLogs: jte,
        SessionLogsEnabled: nee,
        SharedEntity: JZ,
        SharedTerminalPermissions: DZ,
        SharingButtonLocation: vte,
        SharingModeEntity: Cee,
        ShellPerformanceBoostFailureReason: pZ,
        SideMenuTeamTrialPromoType: bZ,
        Snippet: jee,
        SnippetCreationSource: IZ,
        SnippetSource: qte,
        SnoozedFromScreen: ote,
        Source: fZ,
        Success: VJ,
        SuggestedEntity: NZ,
        SuggestionSource: Tee,
        SyncKeyPasswords: Mee,
        SystemPlan: Gte,
        TeamExpiredDecision: QZ,
        TeamSideOnboardingStage: MZ,
        TeamTrialPlan: XZ,
        TerminalFont: Ete,
        TerminalFontSelected: Kee,
        TerminalFontSource: Jee,
        TerminalSearchSource: Aee,
        TerminalSharingSource: ree,
        TerminalSidePanelToggledVia: Ste,
        TerminalThemeSource: HZ,
        Theme: hte,
        TipType: mee,
        Trial: fne,
        TrialExpiredToPremiumExperiment: Hte,
        TrialStartingFailReason: Yee,
        TryPremiumExperiment: tne,
        Type: gJ,
        URLScheme: cJ,
        UpgradeButtonLocation: Vte,
        UsedSavedSnippetTargets: xee,
        Username: dee,
        VaultPermissions: Vee,
        VaultTabOpenedVia: $J,
        WebDebuggerPosition: cUe,
        WelcomeSetupStep: jZ,
        WindowsHelloAvailability: RZ,
        WindowsHelloKey: VZ,
        accessGranted: Sse,
        accountDetailsScreenOpened: gne,
        accountSetUpCompletedScreenOpened: EL,
        activationBannerClosed: i6,
        activationBannerShown: a6,
        addCredentialsButtonPressed: Qne,
        addCredentialsOptionSelected: Jne,
        addingMembersToVaultStarted: vse,
        advancedSettingsButtonPressed: XM,
        appCrash: Sne,
        appOpened: hx,
        appStarted: fw,
        appearancePicked: oD,
        appearanceSetupScreenOpened: iD,
        appearencePanelOpened: PD,
        authorizedKeysDownloaded: kL,
        autoReconnectSettingChanged: Sw,
        autocomplete: ax,
        autocompleteSettingChanged: Ex,
        autocompleteSettingsOpened: j4,
        avoInspectorApiKey: sJ,
        bellNotificationOpened: uL,
        boostShellPerformanceFailed: jD,
        boostShellPerformanceInitiated: VD,
        boostShellPerformanceSucceeded: zD,
        broadcastInputToggled: HD,
        bulkDataSharingScreenOpened: ED,
        bulkSharingCompleted: TD,
        buyNowButtonPressed: J4,
        changelogButtonPressed: E4,
        changingVaultButtonPressed: Kne,
        changingVaultCompleted: xD,
        choosePlanScreenOpened: ox,
        closeDisconnectedTabsButtonPressed: DD,
        cloudCredentialsChecked: M4,
        cloudSyncActivated: L4,
        cloudSyncCompleted: G4,
        cloudSyncFailed: sM,
        collaborationContextMenuItemPressed: aD,
        collaborationContextMenuOpened: sD,
        collapseAllRunSnippetPreviewPressed: XD,
        commandPaletteItemSelected: c6,
        commandPaletteOpened: l6,
        commandPaletteStateChanged: d6,
        commandsHistoryPanelOpened: I4,
        confirmAccessButtonPressed: F4,
        connectionClosed: Vx,
        connectionDetailsRequested: Xx,
        connectionEstablished: rx,
        connectionFailed: px,
        connectionInitiated: dx,
        contactUsButtonPressed: Ine,
        contextMenuOpened: Wx,
        convertToHostsButtonPressed: cse,
        copyAsAuthorizedKeysButtonPressed: Pne,
        copyDownloadLinkButtonPressed: lM,
        copyHostDetailsLinkButtonPressed: EM,
        copyInvitationLinkButtonPressed: R4,
        copyMemberPermissionsButtonPressed: hse,
        copyPublicKeyButtonPressed: tM,
        copyTheLinkButtonPressed: nD,
        copyVaultMembersButtonPressed: bse,
        createAccountScreenOpened: Bx,
        createMultikeyExportScriptButtonPressed: ML,
        createPortForwardingWizardViewOpened: cM,
        createTeamWizardViewOpened: zx,
        credentialsSharingOptionChanged: Bne,
        credentialsSharingOptionChosen: N4,
        credentialsSharingPickerPressed: Xne,
        credentialsSharingScreenOpened: C4,
        criticalErrorResolutionScreenOpened: xx,
        criticalErrorResolutionStarted: Lx,
        cryptoError: yx,
        customerExperienceSurveyShown: mL,
        customerExperienceSurveyTaken: SL,
        dailyTipPressed: bne,
        dailyTipShown: Ene,
        deepLinkHandled: Dx,
        default: bUe,
        deleteVaultButtonPressed: Wne,
        deleteVaultScreenOpened: Ese,
        dependencyResolutionChosen: Mne,
        dependencyScreenOpened: Lne,
        doItLaterButtonPressed: rD,
        downgradeToHobbyButtonPressed: rM,
        downgradedToStarterPlan: LD,
        downloadButtonPressed: mx,
        downloadTemplateButtonPressed: V4,
        duplicateButtonPressed: wM,
        editEntityScreenOpened: NL,
        editHostChainScreenOpened: eM,
        editVaultScreenOpened: $ne,
        enableSharingFormErrorCaught: NM,
        enableSharingFormPostponed: HM,
        enableSharingFormSubmitted: OM,
        enableSharingFormSucceeded: RM,
        enableSharingScreenShown: AM,
        encryptionMigrationWizardViewOpened: lL,
        enterEmailScreenOpened: KD,
        enterPasswordScreenOpened: jL,
        enterpriseSsoButtonPressed: hM,
        entitiesDragAndDropCompleted: BL,
        entitiesDragAndDropStarted: VL,
        entityAutocompleteFieldFocused: r6,
        entityAutocompleteItemPressed: n6,
        entityAutocompleteShown: t6,
        entitySelected: Y4,
        execChannelOpenFailed: wD,
        expandAllRunSnippetPreviewPressed: YD,
        experimentStarted: vne,
        exportKeyButtonPressed: q4,
        exportKeyStopped: Q4,
        extendProTrialButtonPressed: Rne,
        extendTeamTrialButtonPressed: vD,
        featureDescriptionScreenOpened: Mx,
        fido2DeviceSelected: mM,
        fido2KeyGenerationConfirmed: gM,
        fido2KeygenOptionsSubmitted: SM,
        fido2PinCodeRequested: yM,
        fido2SshKeysSelected: vM,
        fileTypeAssociated: f4,
        forgotPasswordButtonPressed: BD,
        generateBiometricKeyButtonPressed: Zne,
        grantVaultPermissionsScreenOpened: pse,
        groupDeleted: dL,
        groupGrantVaultPermissionsScreenOpened: dse,
        groupSettingsOpened: nM,
        hamburgerButtonPressed: ise,
        helpButtonPressed: qx,
        hintClosed: gL,
        hintDisplayed: yL,
        historyDetailsScreenOpened: aM,
        historyItemDeleted: iL,
        hitMultipleVaultsPromotionPage: zne,
        hostDeleted: cL,
        hostsScreenOpened: qne,
        identitySettingsScreenOpened: KM,
        importButtonPressed: Cx,
        importCompleted: Ax,
        importFailed: Ox,
        importFido2KeyButtonPressed: JM,
        importSetupScreenOpened: jM,
        importStarted: Kx,
        initAvo: J2,
        inputPermissionsRequested: ZM,
        inviteButtonPressed: p4,
        inviteScreenOpened: d4,
        keyExportSucceeded: X4,
        keychainItemCreated: Tx,
        keychainItemDeleted: Gx,
        keychainScreenOpened: use,
        keywordColorItemPressed: qM,
        keywordHighlightingSettingChanged: WM,
        knownHostsScreenOpened: xne,
        learnMoreAboutMultikeyButtonPressed: O4,
        learnMoreAboutTeamButtonPressed: _x,
        localTerminalShellTypeChanged: fD,
        logInScreenOpened: pM,
        logoutBiometricKeysWarningScreenOpened: ZD,
        logoutWarningScreenOpened: Qx,
        magicButtonPressed: _D,
        menuBannerDismissed: bx,
        mfaChooseProviderScreenOpened: QL,
        mfaCodeCopied: ZL,
        mfaConfigureScreenOpened: DL,
        mfaConfirmPasswordScreenOpened: FL,
        mfaCopyCodeScreenOpened: JL,
        mfaInstallAuthyScreenOpened: GL,
        mfaPhoneNumberScreenOpened: UL,
        mfaProviderChosen: e4,
        mfaTokenScreenOpened: KL,
        moveEntityButtonPressed: kD,
        moveRunSnippetToSplitViewPressed: qD,
        multikeyChosen: xL,
        multikeyPromoScreenShown: H4,
        multikeyUpdated: RL,
        multipleConnectionsInitiated: OL,
        multipleItemsSelected: AL,
        newCertificateButtonPressed: hD,
        newGroupButtonPressed: wx,
        newGroupCreated: Px,
        newHardwareKeyCreated: w4,
        newHostButtonPressed: ux,
        newHostCreated: lx,
        newIdentityButtonPressed: UM,
        newIdentityCreated: TL,
        newIdentitySetUp: pL,
        newKeyButtonPressed: v4,
        newKeyOptionSelected: _4,
        newMainWindowOpened: $x,
        newPortForwardingRuleButtonPressed: gx,
        newPortForwardingRuleCreated: vx,
        newProtocolAdded: e6,
        newSnippetButtonPressed: rL,
        newSnippetCreated: tL,
        newSnippetPackageButtonPressed: uM,
        newTagCreated: o6,
        newVaultButtonPressed: Vne,
        notificationListScreenOpened: oL,
        notificationReceived: mw,
        notificationSnoozed: U4,
        onboardingImportScreenDismissed: Hx,
        optionAsMetaChanged: pw,
        passphraseInfoScreenOpened: $L,
        passwordCheckedWithHibp: Fx,
        personalKeySetGenerated: Rx,
        platformSetupPicked: aL,
        platformsSetupScreenOpened: kM,
        portForwardingFormTypeChanged: dM,
        portForwardingLinksResolutionChosen: Gne,
        portForwardingLinksScreenOpened: Dne,
        portForwardingScreenOpened: kne,
        preferencesButtonPressed: HL,
        presenceIconPressed: qL,
        proPlanScreenOpened: xM,
        proTrialExtendedScreenOpened: Hne,
        proTrialExtensionOfferScreenOpened: Nne,
        productivityPanelOpened: FD,
        professionalToolsSelected: $M,
        promotionDismissed: eL,
        promotionPressed: Zx,
        promotionShown: Jx,
        purchaseDismissed: Sx,
        purchaseStarted: ix,
        reconnectAllInitiated: GD,
        remindTeamOwnerButtonPressed: hL,
        requestInputAccessPressed: tD,
        requestKeywordsHighlightCustomizationButtonPressed: YM,
        resendVerificationCodeButtonPressed: nse,
        resetAppearanceButtonPressed: ID,
        restartButtonPressed: b4,
        rewriteAiRequestButtonPressed: RD,
        rootGroupShared: A4,
        saveAppearanceButtonPressed: CD,
        saveAsHostSettingChanged: QM,
        saveHistoryCommandButtonPressed: uD,
        saveVaultButtonPressed: gse,
        screenLayoutChanged: Yx,
        selectEntityScreenOpened: FM,
        serialConnectionPromoScreenOpened: YL,
        serialConnectionScreenOpened: XL,
        serverErrorScreenOpened: Tne,
        sessionAuthMethodChanged: OD,
        sessionLogEncodeQueueOverflowed: $4,
        sessionLogOpened: P4,
        sessionLogWriteQueueOverflowed: W4,
        sessionLogsSettingChanged: Cne,
        setAvoLogger: _Ue,
        setPasswordScreenOpened: zL,
        setSystemProperties: UP,
        setYourDefaultCredentialsScreenOpened: bL,
        setupCloudSyncButtonPressed: IM,
        sftpDiscardFileButtonPressed: S4,
        sftpFileOpened: h4,
        sftpModifiedFilesBarShown: y4,
        sftpScreenOpened: Ane,
        sftpSettingsScreenOpened: lse,
        sftpUploadFileButtonPressed: m4,
        shareAllSnippetsShown: wne,
        shareButtonPressed: jx,
        shareTerminalButtonPressed: i4,
        sharedTerminalSessionFailed: o4,
        sharedTerminalSessionPermissionsChanged: n4,
        sharedTerminalSessionStarted: t4,
        sharedTerminalSessionStopped: s4,
        sharedTerminalViewerJoined: r4,
        sharedTerminalViewerLeft: a4,
        shellTypeDetected: MD,
        shortcutChanged: ose,
        shortcutEditingStarted: ase,
        shortcutsScreenOpened: rse,
        showConfigDetailsButtonPressed: s6,
        snippetDeleted: sL,
        snippetEdited: bD,
        snippetExecuted: nL,
        snippetMultiExecutionCanceled: WD,
        snippetMultiExecutionCompleted: DM,
        snippetMultiExecutionConnectionClosed: JD,
        snippetMultiExecutionConnectionDetached: $D,
        snippetMultiExecutionPreviewPressed: QD,
        snippetMultiExecutionStarted: MM,
        snippetMultiExecutionTargetsOpened: LM,
        snippetPackageCreated: iM,
        snippetPackageDeleted: oM,
        snippetSharingCanceled: CL,
        snippetsPanelOpened: vL,
        snippetsScreenOpened: One,
        splitViewButtonPressed: TM,
        splitViewTabCreated: _M,
        splitViewTabUpdated: bM,
        sshKeyDraggedAndDropped: PM,
        sshKeyForMultikeyGenerated: LL,
        subscriptionExpiredScreenOpened: yD,
        subscriptionGracePeriodNotificationShown: mD,
        subscriptionGracePeriodNotificationSnoozed: SD,
        suggestTerminalThemeButtonPressed: ND,
        switchToTeamScreenOpened: _L,
        syncFailed: Ay,
        syncNowButtonPressed: D4,
        tabContextMenuOpened: T4,
        teamDeactivationScreenOpened: gD,
        teamPlanTabOpened: cx,
        teamPrivateKeyAdopted: _ne,
        teamPrivateKeyEncrypted: kx,
        teamPrivateKeyGenerated: Nx,
        teamPromotionDismissed: Ix,
        teamScreenOpened: yne,
        teamSideOnboardingClosed: IL,
        teamSideOnboardingPressed: PL,
        teamSideOnboardingShown: wL,
        teamTrialExpiredButtonPressed: fL,
        teamTrialExpiredScreenOpened: u4,
        teamTrialExtendedScreenOpened: l4,
        teamTrialExtensionOfferScreenOpened: Z4,
        teamTrialExtensionRejectedScreenOpened: c4,
        teamTrialFunnelStarted: g4,
        teamTrialStartingFailed: z4,
        terminalFontChanged: B4,
        terminalSearchExecuted: Ux,
        terminalSearchOpened: hw,
        terminalSettingsScreenOpened: sse,
        terminalSharingStatusDialogShown: eD,
        terminalSharingVisibilityChanged: k4,
        terminalSidePanelClosed: UD,
        terminalThemeChanged: K4,
        toolbarChevronButtonPressed: CM,
        toolsSetupScreenOpened: zM,
        trialDismissed: sx,
        trialOnboardingButtonPressed: cD,
        trialOnboardingMinimized: dD,
        trialOnboardingStarted: lD,
        trialOnboardingStepCompleted: pD,
        trialStarted: nx,
        upgradeButtonPressed: AD,
        upgradeToProFunnelStarted: GM,
        userLogin: tx,
        userLoginFailed: fM,
        userLogout: fx,
        vaultFilterButtonPressed: Fne,
        vaultFilterSelected: Une,
        vaultMemberAdded: _se,
        vaultPermissionCopied: fse,
        vaultPermissionsChanged: mse,
        vaultPermissionsSuccessScreenOpened: yse,
        vaultTabOpened: Yne,
        vaultsScreenOpened: jne,
        verifyEmailButtonPressed: tse,
        verifyYourEmailScreenOpened: ese,
        welcomeScreenOpened: ex,
        welcomeSetupStarted: BM,
        welcomeSetupStepSkipped: VM,
        welcomeSlideChanged: x4,
        whosInTermiusScreenOpened: WL,
        windowsHelloAvailabilityDetected: u6,
      },
      Symbol.toStringTag,
      { value: "Module" }
    )
  );
function EUe(t, e, n) {
  let r;
  return $e(t, function* ({ payload: s }) {
    si(r, { payload: s }) || ((r = { payload: s }), yield* n(), e(s));
  });
}
const bA = (t) => {
    t && window.mixpanel.set_group("Team", t);
  },
  R5 = (t) => {
    t && window.mixpanel.identify(String(t));
  },
  k5 = (t) => {
    try {
      t !== window.mixpanel.config.token &&
        window.mixpanel.set_config({ token: t });
    } catch (e) {
      tt.exception("Cannot set Mixpanel token", e);
    }
  };
function* TUe(t) {
  var l;
  window.mixpanel = Twe;
  const e = PIe(t.installSource),
    { api: n } = t;
  J2(
    {
      env: "prod",
      webDebugger: !1,
      avoLogger: {
        logDebug(c, d) {
          return console.debug(`[avo] ${d}`), !0;
        },
        logWarn(c, d) {
          return console.warn(`[avo] ${d}`), !0;
        },
        logError(c, d) {
          return console.error(`[avo] ${d}`), !0;
        },
      },
    },
    {},
    {
      mixpanel: {
        persistence: "localStorage",
        property_blacklist: ["$current_url"],
      },
    }
  ),
    window.mixpanel.people.set({ platform: AIe(t.platform) });
  try {
    const c = (l = nX().find((d) => d.name === gm)) == null ? void 0 : l.value;
    c && k5(c);
  } catch (c) {
    tt.exception("Fail to restore mixpanel token from experiments cache", c);
  }
  const r = (c) =>
      function* (...p) {
        return yield* u(), yield* Me(c, ...p);
      },
    a = (c, d, ...p) => $e(c, r(d), ...p),
    s = (c, d, p, ...m) => __e(c, d, r(p), ...m),
    i = (c, d, p, ...m) => Gj(c, d, r(p), ...m);
  yield* Gn([
    a(OUe, ({ type: c, payload: d }) => {
      var p;
      return (p = _A[HUe(c)]) == null ? void 0 : p.call(_A, d);
    }),
    a(L$, ({ payload: c }) => {
      k5(c);
    }),
    a($t.failure, ({ payload: c }) => {
      if (IUe(c)) return;
      const { status: d, reason: p } = c;
      if (p !== new x$().name) {
        if (p === new k$().name) {
          Ay({
            errorCode: d,
            failReason:
              "Backend API isn't available - can't fetch user info for sync",
          });
          return;
        }
        if (p === "NetworkError") {
          Ay({ errorCode: d, failReason: Q2.NETWORK_ERROR });
          return;
        }
        Ay({ errorCode: d, failReason: void 0 });
      }
    }),
    a(xz, ({ payload: c }) => {
      Yx({ layoutType: Ev(c.layout), onScreen: CIe(c.tab) });
    }),
    a($Q, ({ payload: c }) => {
      const { messageAction: d, auto: p, teamMemberID: m } = c,
        y = J9(d);
      y && uL({ teamMemberID: m, bellNotificationAction: y, auto: ma(p) });
    }),
    o(b5e, oL),
    a(Hz, () => {
      pw({ optionAsMeta: "Yes" });
    }),
    a(Nz, () => {
      pw({ optionAsMeta: "No" });
    }),
    a(
      Kv,
      ({
        payload: {
          period: c,
          buyNowButtonLocation: d,
          upgradeToProFunnelID: p,
        },
      }) => {
        ix({
          period: c,
          productID: void 0,
          buyNowButtonLocation: d,
          upgradeToProFunnelID: p,
        });
      }
    ),
    a(p2, ({ payload: { reason: c, upgradeToProFunnelID: d } }) => {
      Sx({
        reason: c,
        upgradeToProFunnelID: d,
        productID: "premium",
        errorCode: null,
      });
    }),
    a(_$, ({ payload: c }) => {
      tx({
        userId_: String(c.userId),
        email: c.email,
        plan: Z9(c.plan),
        authMethod: c.authMethod,
      });
    }),
    $e(qn.request, function* () {
      yield* u();
    }),
    $e(qn.success, function* ({ payload: d }) {
      const { keepSepKeys: p } = d;
      fx({
        biometricKeysDecision: (() =>
          p == null ? null : p ? "Keep" : "Delete")(),
      });
      const y = yield* Pe(N5);
      yield* u(), fw({ firstTime: "no", ...y }), yield* D(tH());
    }),
    a(N6e, ({ payload: c }) => {
      const { groups: d, hosts: p } = c;
      (d === 0 && p <= 1) || OL($C(c));
    }),
    a(LX, function* ({ payload: d }) {
      const p = yield* Pe(dw),
        m = yield* Pe(vA);
      dx(EIe({ ...d, history: p, terminalTheme: d.terminalTheme || m }));
    }),
    o(R6e, GD),
    o(k6e, DD),
    o(Rz, () => Sw({ autoReconnect: "enabled", autoReconnectEnabled: "yes" })),
    o(kz, () => Sw({ autoReconnect: "disabled", autoReconnectEnabled: "no" })),
    o(MX, Xx),
    a(w2, function* ({ payload: d }) {
      const p = yield* Pe(vA);
      rx(TIe({ ...d, terminalTheme: d.terminalTheme || p }));
    }),
    a(GX, function* ({ payload: d }) {
      const p = yield* Pe(vA);
      px(wIe({ ...d, terminalTheme: d.terminalTheme || p }));
    }),
    o(DX, Vx),
    o(x6e, wD),
    a(HFe, ({ payload: c }) =>
      MD({
        shellType: n5(c.shellType, { allowList: CMe }),
        connectionID: c.connectionID,
      })
    ),
    a(
      AX,
      ({
        payload: { email: c, from: d, authMethod: p, upgradeToProFunnelID: m },
      }) => {
        nx({
          email: c,
          from: d,
          source: e,
          authMethod: p,
          upgradeToProFunnelID: m,
          introductoryOffer: void 0,
          time: void 0,
          trialEndDate: void 0,
        });
      }
    ),
    a(a6e, () => {
      sx();
    }),
    a(OX, () => {
      ex();
    }),
    a(y6e, ({ payload: c }) => {
      Mx(c);
    }),
    o(i6e, ux),
    a(o6e, function* ({ payload: d }) {
      const { is_shared: p, group: m } = d,
        y = yield* Pe((I) => Yu(I, d));
      lx({
        isSharedEntity: ma(p || !!(m != null && m.is_shared)),
        eventTeamRole: y == null ? void 0 : y.role,
      });
    }),
    a(HX, function* ({ payload: d }) {
      const { isShared: p, hostID: m, encryptedWith: y } = d,
        I = yield* Pe((O) => Yu(O, { is_shared: p, encrypted_with: y }));
      cL({
        isSharedEntity: ma(p),
        eventTeamRole: I == null ? void 0 : I.role,
        hostID: m,
      });
    }),
    o(u6e, UM),
    a(Mg, function* ({ payload: d }) {
      const {
          isShared: p,
          encryptedWith: m,
          identitySource: y,
          identity: I,
        } = d,
        O = yield* Pe((g) => Yu(g, { is_shared: p, encrypted_with: m }));
      O &&
        pL({
          isSharedEntity: ma(p),
          eventTeamRole: O == null ? void 0 : O.role,
          identitySource: y,
          identityType: I ? HIe(I) : ["Username-only"],
        });
    }),
    a(zGe, function* ({ payload: d }) {
      const { identity: p, ...m } = d;
      let { numberOfLinkedElements: y } = d;
      if (p) {
        const I = yield* Pe((g) => Z8e(g, p)),
          O = yield* Pe((g) => e5e(g, p));
        y = I.length + O.length;
      }
      KM({ ...m, numberOfLinkedElements: y });
    }),
    o(l6e, rL),
    a(c6e, ({ payload: c }) => {
      tL({ ...c, snippets: n.store.getNumberOfSnippets() });
    }),
    a(E2, ({ payload: { numberOfRemovedSnippets: c, aianalyticsID: d } }) => {
      sL({
        snippets: n.store.getNumberOfSnippets(),
        numberOfRemovedSnippets: c,
        aianalyticsID: d,
      });
    }),
    o(d6e, bD),
    o(r3e, CL),
    a(p6e, function* ({ payload: d }) {
      const p = yield* Pe(Ea),
        m = yield* Pe(Oa);
      nL({ ...d, isSharedEntityOwner: ma(p ? m : !0) });
    }),
    o(g6e, gx),
    o(v6e, vx),
    o(r6e, cx),
    o(S6e, Ix),
    a(m6e, () => {
      _x({ premiumToTeamAppExperiment: void 0 });
    }),
    o(H3e, d4),
    o(N3e, p4),
    a(z6e, function* ({ payload: d }) {
      const p = yield* Pe(Qi);
      fL({ teamExpiredDecision: d, teamJoinedMembers: p.length });
    }),
    o(I3e, c4),
    o(C3e, ox),
    o(A3e, l4),
    o(O3e, u4),
    a(ym.request, ({ payload: c }) => {
      c.dialog === "DecryptionKeyNotFoundDialog" &&
        xx({ criticalErrorType: "DecryptionKeyNotFoundError" });
    }),
    o(_6e, Hx),
    o(E6e, Cx),
    o(b6e, Kx),
    o(w6e, Ax),
    o(T6e, Ox),
    o(NX, Nx),
    a(i3e, ({ payload: c }) => {
      HL({ preference: c });
    }),
    a(ea.success, ({ payload: c }) => {
      (c.objects || []).forEach((p) => {
        var y;
        const m = J9(p.action);
        m &&
          mw({
            bellNotificationAction: m,
            teamMemberID:
              (y = p.message_attributes) == null ? void 0 : y.user_email,
          });
      });
    }),
    o(W6e, mw),
    o(q6e, U4),
    o(Y6e, F4),
    a(us.success, ({ payload: c }) => {
      var d;
      bA((d = c.team) == null ? void 0 : d.id), R5(c.account.user_id);
    }),
    a(fl, ({ payload: c }) => {
      var d, p;
      bA((d = c.team) == null ? void 0 : d.id),
        R5((p = c.account) == null ? void 0 : p.user_id);
    }),
    o(RX, Rx),
    a(kX, ({ payload: c }) => {
      bA(c.teamId);
    }),
    a(I6e, ({ payload: c }) => {
      Lx(c);
    }),
    a(C6e, ({ payload: c }) => {
      bx({ promoType: c });
    }),
    a(P6e, ({ payload: c }) => {
      Fx(c);
    }),
    s(2e3, A6e, () => {
      Ux();
    }),
    s(1e3, tJ, ({ payload: c }) => {
      const { source: d } = c;
      hw({ terminalSearchSource: d });
    }),
    a(O6e, function* ({ payload: d }) {
      const { is_shared: p, parent_group: m, cloud_config: y } = d,
        I = yield* Pe((O) => Yu(O, d));
      Px({
        isSharedEntity: ma(p || !!(m != null && m.is_shared)),
        eventTeamRole: I == null ? void 0 : I.role,
        cloudIntegration:
          y != null && y.cloudType
            ? Ig(y == null ? void 0 : y.cloudType)
            : null,
      });
    }),
    a(xX, function* ({ payload: d }) {
      const { isShared: p, encryptedWith: m, id: y } = d,
        I = yield* Pe((O) => Yu(O, { is_shared: p, encrypted_with: m }));
      dL({
        isSharedEntity: ma(p),
        eventTeamRole: I == null ? void 0 : I.role,
        groupID: y ? String(y) : null,
      });
    }),
    o(H6e, wx),
    a(rw, function* () {
      const d = yield* Pe(N5);
      fw({ firstTime: "yes", ...d }), yield* D(tH());
    }),
    Af(rw, function* () {
      yield* i(144e5, T2, function* () {
        const m = yield* Pe(h5e),
          y = yield* Pe(d5e),
          I = yield* Pe(p5e),
          O = yield* Pe(dw),
          g = n.store,
          C = g.tagsRepository.countUniqueTags();
        hx({
          hosts: g.getNumberOfHosts(),
          groups: g.getNumberOfGroups(),
          keys: g.getNumberOfSshKeys(),
          certificates: n.store.getNumberOfSshCertificates(),
          identities: g.getNumberOfVisibleIdentities(),
          portForwardings: g.getNumberOfPortForwardingRules(),
          history: O,
          knownHosts:
            g.getNumberOfKnownHosts() +
            Object.keys(Ft.getAllKnownHosts() || {}).length,
          syncKeyPasswords: n.settings.isSynchingKeys() ? "Yes" : "No",
          optionAsMeta: m ? "Yes" : "No",
          choosePlanExperiment: void 0,
          teamOwner: void 0,
          appColorTheme: void 0,
          snippets: g.getNumberOfSnippets(),
          snippetPackages: g.getNumberOfSnippetsPackages(),
          globalTerminalTheme: y(void 0).name,
          terminalFont: OIe(I),
          tags: C,
        });
      });
    }),
    o(L6e, jx),
    a(M6e, ({ payload: c }) => {
      zx({ ...c, trial: "yes" });
    }),
    o(D6e, $x),
    o(G6e, Jx),
    o(F6e, Zx),
    o(J6e, _L),
    o(U6e, eL),
    o(XO, iL),
    o(K6e, P4),
    a(B6e, ({ payload: c }) => {
      lL({ encryptionMigrationWizardStep: c });
    }),
    a(V6e, ({ payload: c }) => {
      qx({ helpButtonType: c });
    }),
    o(j6e, hL),
    a($6e, ({ payload: c }) => {
      Dx(c);
    }),
    o(FX, mL),
    a(H$, function* ({ payload: d }) {
      const p = yield* Pe(Ea),
        m = NIe(d, !p);
      m != null && SL(m);
    }),
    a(Lp, ({ payload: c }) => {
      yL(c);
    }),
    a(X6e, ({ payload: c }) => {
      gL(c);
    }),
    o(Q6e, vL),
    o(Z6e, EL),
    o(e3e, bL),
    a(UX, ({ payload: c }) => {
      TL({ identityType: c });
    }),
    o(t3e, mx),
    a(n3e, ({ payload: c }) => {
      PL({ teamSideOnboardingStage: c });
    }),
    a(P2, ({ payload: c }) => {
      wL(e7(c));
    }),
    a(s3e, ({ payload: c }) => {
      IL(e7(c));
    }),
    o(a3e, AL),
    o(o3e, NL),
    o(u3e, kL),
    o(l3e, ML),
    o(KX, RL),
    o(BX, LL),
    o(c3e, xL),
    a(d3e, ({ payload: c }) => {
      VL($C(c));
    }),
    a(p3e, ({ payload: c }) => {
      BL($C(c));
    }),
    o(VX, DL),
    o(S3e, FL),
    o(h3e, GL),
    o(f3e, UL),
    o(m3e, KL),
    o(jX, QL),
    o(y3e, JL),
    o(g3e, ZL),
    o(v3e, e4),
    a(_3e, ({ payload: c }) => {
      WL({ usersOnline: c });
    }),
    a(b3e, ({ payload: c }) => {
      qL({ presenceIconLocation: c });
    }),
    a(E3e, ({ payload: c }) => {
      $L({ authMethod: c });
    }),
    o(T3e, i4),
    o(w3e, t4),
    o(P3e, o4),
    o(zX, s4),
    o($X, n4),
    o(R3e, Wx),
    o(FGe, wM),
    o(UGe, PM),
    o(k3e, h4),
    o(x3e, m4),
    o(L3e, S4),
    o(M3e, y4),
    o(D3e, f4),
    o(G3e, Bx),
    o(F3e, g4),
    o(U3e, v4),
    o(K3e, _4),
    o(B3e, hD),
    a(YX, ({ payload: c }) => {
      Tx({
        sepkeys: uw ? n.store.getNumberOfSepKeys() : void 0,
        windowsHelloKeys: JO ? n.store.getNumberOfWindowsHelloKeys() : void 0,
        keys: n.store.getNumberOfSshKeys(),
        identities: n.store.getNumberOfVisibleIdentities(),
        certificates: n.store.getNumberOfSshCertificates(),
        keySource: c.source,
        keychainItemLocation: c.location || x5(n.settings),
        keychainItem: c.type,
      });
    }),
    o(WX, r4),
    o(qX, a4),
    a(Ty, ({ payload: c }) => {
      Gx({
        sepkeys: uw ? n.store.getNumberOfSepKeys() : void 0,
        windowsHelloKeys: JO ? n.store.getNumberOfWindowsHelloKeys() : void 0,
        keys: n.store.getNumberOfSshKeys(),
        identities: n.store.getNumberOfVisibleIdentities(),
        certificates: n.store.getNumberOfSshCertificates(),
        keychainItemLocation: c.location || x5(n.settings),
        keychainItem: c.type,
      });
    }),
    o(QX, w4),
    a(oE.request, PUe),
    o(V3e, E4),
    o(j3e, N4),
    o(XX, C4),
    o(z3e, O4),
    o($3e, H4),
    o(W3e, A4),
    o(q3e, T4),
    o(Y3e, ax),
    o(X3e, XL),
    a(Mz, function* () {
      const d = yield* Pe(u5e);
      k4({ isVisible: ma(d) });
    }),
    o(Q3e, YL),
    o(J3e, R4),
    o(Z3e, M4),
    o(JX, L4),
    o(eGe, D4),
    o(ZX, G4),
    o(eQ, sM),
    a(tGe, ({ payload: c }) => {
      kx({ teamMemberID: c });
    }),
    o(nGe, K4),
    o(iGe, B4),
    o(sGe, PD),
    o(rGe, CD),
    o(aGe, ID),
    o(oGe, HD),
    o(uGe, ND),
    a(lUe, ({ payload: c }) => {
      c.queue === "encode" ? $4(c.data) : c.queue === "write" && W4(c.data);
    }),
    o(cGe, j4),
    o(lGe, Ex),
    o(dGe, z4),
    o(pGe, Y4),
    o(hGe, q4),
    o(fGe, Q4),
    o(mGe, X4),
    o(SGe, eM),
    o(yGe, J4),
    o($Ge, WM),
    o(WGe, YM),
    o(qGe, qM),
    o(gGe, Z4),
    o(vGe, tM),
    o(_Ge, V4),
    o(bGe, nM),
    o(EGe, aM),
    o(TGe, rM),
    o(wGe, uM),
    o(I2, iM),
    o(tQ, oM),
    o(PGe, dM),
    o(IGe, cM),
    o(CGe, hM),
    o(AGe, fM),
    o(OGe, pM),
    o(HGe, SM),
    o(NGe, yM),
    o(RGe, vM),
    o(kGe, gM),
    o(xGe, mM),
    o(LGe, _M),
    o(MGe, bM),
    o(GGe, EM),
    o(DGe, TM),
    o(KGe, IM),
    o(nQ, yx),
    o(PS.shown, AM),
    o(PS.submitted, OM),
    o(PS.postponed, HM),
    o(PS.caughtError, NM),
    o(PS.succeeded, RM),
    o(BGe, GM),
    o(VGe, xM),
    o(jGe, FM),
    o(YGe, JM),
    a(YQ, ({ payload: c }) => {
      QM({ saveAsHostEnabled: c ? "enable" : "disable" });
    }),
    o(XGe, XM),
    o(QGe, rD),
    o(JGe, tD),
    o(ZGe, ZM),
    o(eFe, eD),
    o(tFe, nD),
    o(nFe, sD),
    o(sFe, aD),
    o(rFe, BM),
    a(aFe, ({ payload: c }) => {
      VM({ welcomeSetupStep: c });
    }),
    o(iFe, zM),
    o(oFe, iD),
    a(uFe, ({ payload: c }) => {
      oD(c);
    }),
    a(lFe, ({ payload: c }) => {
      aL(c);
    }),
    o(cFe, jM),
    o(dFe, kM),
    a(pFe, ({ payload: c }) => {
      $M(c);
    }),
    o(hFe, uD),
    a(mFe, ({ payload: c }) => {
      I4(c);
    }),
    o(C2, lD),
    a(SFe, ({ payload: c }) => {
      cD(c);
    }),
    a(yFe, ({ payload: c }) => {
      lM(c);
    }),
    a(A2, ({ payload: c }) => {
      pD(c);
    }),
    o(gFe, dD),
    o(h6e, _D),
    o(f6e, RD),
    o(vFe, CM),
    a(Lz, (c) => {
      const d = c.payload || { label: CX },
        p = d.custom ? n5(d.label, { allowList: AMe }) : tX(d.label);
      fD({ shellType: p });
    }),
    o(sQ, mD),
    o(_Fe, SD),
    o(bFe, ED),
    a(EFe, ({ payload: c }) => {
      TD(c);
    }),
    o(TFe, gD),
    o(PFe, vD),
    o(wFe, yD),
    o(rQ, xD),
    o(IFe, AD),
    a(CFe, ({ payload: c }) => {
      OD({ sessionAuthMethod: wUe(c) });
    }),
    o(AFe, kD),
    o(OFe, LD),
    o(NFe, zL),
    o(RFe, jL),
    o(kFe, x4),
    o(xFe, KD),
    o(LFe, BD),
    o(MFe, UD),
    o(DFe, hw),
    o(GFe, VD),
    o(FFe, zD),
    o(UFe, jD),
    o(KFe, LM),
    o(BFe, XD),
    o(VFe, DM),
    o(jFe, qD),
    o(zFe, JD),
    o($Fe, $D),
    o(WFe, YD),
    o(qFe, QD),
    o(YFe, WD),
    o(XFe, MM),
    o(QFe, Qx),
    o(JFe, ZD),
    o(ZFe, a6),
    o(e9e, i6),
    o(t9e, r6),
    o(n9e, n6),
    o(s9e, s6),
    o(r9e, e6),
    o(a9e, t6),
    o(i9e, o6),
    o(fFe, FD),
    EUe(o9e, u6, u),
    o(u9e, l6),
    o(l9e, d6),
    o(c9e, c6),
  ]);
  function* o(c, d) {
    yield* a(c, CUe(d));
  }
  function* u() {
    const c = n.store.getHosts(),
      d = n.store.getGroups(),
      p = n.store.getSnippets(),
      m = n.store.getSnippetsPackages(),
      y = Th(c, "is_shared"),
      I = Th(d, "is_shared"),
      O = Th(p, "is_shared"),
      g = Th(m, "is_shared"),
      C = n.store.tagsRepository.countUniqueTags();
    UP({
      platform: "Desktop",
      appVersion: t.version,
      appSource: IIe(t.installSource),
      cpuarchitecture: t.arch,
      systemPlan: Z9(yield* Pe(E8e)),
      systemHosts: c.length,
      systemGroups: d.length,
      systemSnippets: p.length,
      systemSnippetPackages: m.length,
      systemSharedHosts: y.length,
      systemSharedGroups: I.length,
      systemSharedSnippets: O.length,
      systemSharedSnippetPackages: g.length,
      systemTags: C,
      systemKnownHosts: n.store.getNumberOfKnownHosts(),
      numberOfSharedVaults: NUe(yield* Pe(K8e)),
    });
  }
}
function wUe(t) {
  switch (t) {
    case "publickey":
      return "Public Key";
    case "keyboard-interactive":
      return "Keyboard Interactive";
    default:
      return "Password";
  }
}
function x5(t) {
  return t.isSynchingKeys() ? "Cloud" : "Local";
}
function* PUe({ meta: t }) {
  try {
    b4(), yield* D(oE.success(void 0, t.requestId));
  } catch {
    yield* D(oE.failure({ code: oE.failure.toString() }, t.requestId));
  }
}
const IUe = (t) => typeof t != "object" || t == null;
function CUe(t) {
  return (e) => t(e.payload);
}
const AUe = Xe.object({
    type: Xe.string().startsWith("@analytics/"),
    payload: Xe.any(),
  }),
  OUe = Iv(AUe);
function HUe(t) {
  return t.substring(11);
}
function NUe(t) {
  return t.filter((e) => !!e.id && !e.is_default).length;
}
const RUe = vi("events");
class L5 {
  constructor(e) {
    this.keyManager = e;
  }
  async getVaultRoles(e, n) {
    const r = await this.keyManager.getKeyRingStatus(e, n);
    switch (r.status) {
      case "has vaults":
        return { status: r.status, roles: r.vaults.mapValues((a) => a.role) };
      case "no vaults":
        return { status: r.status, roles: null };
      case "vaults setup incomplete":
        return r;
      default:
        return F0();
    }
  }
  async getAccessibleVaultKeyIds(e, n) {
    var a;
    const r = await this.getVaultRoles(e, n);
    return r.status === "vaults setup incomplete"
      ? r
      : {
          status: r.status,
          keyIds: new Set(((a = r.roles) == null ? void 0 : a.keys()) ?? []),
        };
  }
}
function kUe(t, e, n) {
  Ol(2, arguments);
  var r = Vz(t, e) / 1e3;
  return jz(n == null ? void 0 : n.roundingMethod)(r);
}
var xUe = function () {
  return Or.Date.now();
};
const Oy = xUe;
var LUe = "Expected a function",
  MUe = Math.max,
  DUe = Math.min;
function p6(t, e, n) {
  var r,
    a,
    s,
    i,
    o,
    u,
    l = 0,
    c = !1,
    d = !1,
    p = !0;
  if (typeof t != "function") throw new TypeError(LUe);
  (e = di(e) || 0),
    ws(n) &&
      ((c = !!n.leading),
      (d = "maxWait" in n),
      (s = d ? MUe(di(n.maxWait) || 0, e) : s),
      (p = "trailing" in n ? !!n.trailing : p));
  function m(de) {
    var U = r,
      R = a;
    return (r = a = void 0), (l = de), (i = t.apply(R, U)), i;
  }
  function y(de) {
    return (l = de), (o = setTimeout(g, e)), c ? m(de) : i;
  }
  function I(de) {
    var U = de - u,
      R = de - l,
      ge = e - U;
    return d ? DUe(ge, s - R) : ge;
  }
  function O(de) {
    var U = de - u,
      R = de - l;
    return u === void 0 || U >= e || U < 0 || (d && R >= s);
  }
  function g() {
    var de = Oy();
    if (O(de)) return C(de);
    o = setTimeout(g, I(de));
  }
  function C(de) {
    return (o = void 0), p && r ? m(de) : ((r = a = void 0), i);
  }
  function H() {
    o !== void 0 && clearTimeout(o), (l = 0), (r = u = a = o = void 0);
  }
  function B() {
    return o === void 0 ? i : C(Oy());
  }
  function he() {
    var de = Oy(),
      U = O(de);
    if (((r = arguments), (a = this), (u = de), U)) {
      if (o === void 0) return y(u);
      if (d) return clearTimeout(o), (o = setTimeout(g, e)), m(u);
    }
    return o === void 0 && (o = setTimeout(g, e)), i;
  }
  return (he.cancel = H), (he.flush = B), he;
}
var GUe = "Expected a function";
function h6(t, e, n) {
  var r = !0,
    a = !0;
  if (typeof t != "function") throw new TypeError(GUe);
  return (
    ws(n) &&
      ((r = "leading" in n ? !!n.leading : r),
      (a = "trailing" in n ? !!n.trailing : a)),
    p6(t, e, { leading: r, maxWait: e, trailing: a })
  );
}
const ss = k("UPDATE_ENTITIES"),
  xi = Ze("UPDATE_HISTORY_ENTITIES"),
  dE = Ze("SET_SNIPPET"),
  pE = Ze("DELETE_SNIPPETS"),
  FUe = k("DUPLICATE_SNIPPETS"),
  hE = Ze("MOVE_SNIPPET_TO_SNIPPETS_PACKAGE"),
  yh = Ze("GENERATE_SCRIPT"),
  aH = Ze("SET_COMMAND_EXECUTED"),
  fE = Ze("SET_SNIPPETS_PACKAGE"),
  mE = Ze("DELETE_SNIPPETS_PACKAGES"),
  Hy = Ze("SET_HARDWARE_KEYS"),
  iH = Ze("GENERATE_SEP_KEY"),
  Tse = k("CLEANUP_SEP_KEYS"),
  Ny = Ze("SET_SSHKEY"),
  gh = Ze("GENERATE_KEY"),
  oH = Ze("DELETE_SSHKEYS_AND_IDENTITIES"),
  SE = Ze("SAVE_PORT_FORWARDING_RULE"),
  yE = Ze("DELETE_PORT_FORWARDING_RULES"),
  gE = Ze("SET_IDENTITY"),
  vE = Ze("DELETE_HOSTS_AND_GROUPS"),
  Ry = Ze("SAVE_GROUP"),
  ky = Ze("SAVE_HOST_WITH_GROUP"),
  Yd = Ze("SAVE_HOST"),
  _E = Ze("DUPLICATE_HOSTS"),
  UUe = k("RESOLVE_DUPLICATES"),
  wse = k("SAVE_HOST_OS"),
  M5 = Ze("SAVE_TAG"),
  D5 = Ze("DELETE_TAG"),
  KUe = k("REPLACE_KNOWN_HOST"),
  BUe = k("ADD_KNOWN_HOST"),
  VUe = k("DELETE_KNOWN_HOSTS"),
  jUe = Ze("PUSH_HISTORY"),
  zUe = Ze("DEACTIVATE_HISTORY"),
  $Ue = Ze("DELETE_HISTORY"),
  WUe = Ze("CLEAR_ALL_INACTIVE_HISTORIES"),
  xy = Ze("CROP_HISTORY"),
  bE = Ze("SAVE_HOST_LATEST_ACTIVITY"),
  EE = Ze("DELETE_HOST_LATEST_ACTIVITY"),
  f6 = Ze("HAS_SYNCABLE_ENTITIES"),
  df = Ze("IMPORT_ENTITIES"),
  TE = Ze("MOVE_HOSTS_AND_GROUPS_TO_GROUP"),
  qUe = Ze("SHARE_ENTITIES_IN_TEAM_TRIAL_ONBOARDING"),
  wE = Ze("SAVE_HISTORY_COMMANDS"),
  PE = Ze("DELETE_HISTORY_COMMANDS"),
  pf = Ze("SYNC_GROUP_WITH_CLOUD"),
  Pse = k("SET_FAILED_GROUP_SYNC_WITH_CLOUD"),
  KP = k("REMOVE_FAILED_GROUP_SYNC_WITH_CLOUD"),
  uH = Ze("INSTANT_CLOUDS_SYNC");
class YUe {
  constructor(e, n) {
    (this.group = e), (this.store = n);
  }
  isDiffHost(e, n) {
    return !(e.address === n.address && e.label === n.label);
  }
  async resolveHosts(e = []) {
    var o;
    const n = this.store.getHosts(),
      r = [],
      a = [],
      s = [],
      i = this.store.getGroup(this.group) ?? this.group;
    for (const u of e) {
      const l = this.store.getHostByCloudId(u.cloud_instance_id, this.group);
      (l && !this.isDiffHost(u, l)) ||
        (l ? a.push(u) : r.push(u),
        await this.store.setHost(
          new Tn({
            ...l,
            ...XUe(l, i),
            group: (l == null ? void 0 : l.group) ?? this.group,
            address: u.address,
            label: u.label,
            ssh_config: (l == null ? void 0 : l.ssh_config) ?? u.ssh_config,
            cloud_instance_id: u.cloud_instance_id,
            cloud_instance_type: u.cloud_instance_type,
            os_name: u.os_name,
          })
        ));
    }
    for (const u of n) {
      const l = !!u.cloud_instance_id,
        c =
          ((o = u.group) == null ? void 0 : o.local_id) === this.group.local_id,
        d = e.some((p) => p.cloud_instance_id === u.cloud_instance_id);
      l && c && !d && (s.push(u), await this.store.deleteHost(u));
    }
    return { created: r, updated: a, deleted: s };
  }
}
function XUe(t, e) {
  const n = (t == null ? void 0 : t.is_shared) ?? e.is_shared;
  return n
    ? {
        is_shared: n,
        credentials_mode:
          (t == null ? void 0 : t.credentials_mode) ?? e.credentials_mode,
        encrypted_with:
          (t == null ? void 0 : t.encrypted_with) ?? e.encrypted_with,
      }
    : { is_shared: !1, encrypted_with: null, credentials_mode: null };
}
class Yv extends Error {
  constructor(e) {
    super(e.message),
      (this.name = "CloudSyncError"),
      (this.config = e.config),
      (this.type = e.type || "Unknown error");
  }
}
const QUe = "modulepreload",
  JUe = function (t, e) {
    return new URL(t, e).href;
  },
  G5 = {},
  vc = function (e, n, r) {
    if (!n || n.length === 0) return e();
    const a = document.getElementsByTagName("link");
    return Promise.all(
      n.map((s) => {
        if (((s = JUe(s, r)), s in G5)) return;
        G5[s] = !0;
        const i = s.endsWith(".css"),
          o = i ? '[rel="stylesheet"]' : "";
        if (!!r)
          for (let c = a.length - 1; c >= 0; c--) {
            const d = a[c];
            if (d.href === s && (!i || d.rel === "stylesheet")) return;
          }
        else if (document.querySelector(`link[href="${s}"]${o}`)) return;
        const l = document.createElement("link");
        if (
          ((l.rel = i ? "stylesheet" : QUe),
          i || ((l.as = "script"), (l.crossOrigin = "")),
          (l.href = s),
          document.head.appendChild(l),
          i)
        )
          return new Promise((c, d) => {
            l.addEventListener("load", c),
              l.addEventListener("error", () =>
                d(new Error(`Unable to preload CSS for ${s}`))
              );
          });
      })
    )
      .then(() => e())
      .catch((s) => {
        const i = new Event("vite:preloadError", { cancelable: !0 });
        if (((i.payload = s), window.dispatchEvent(i), !i.defaultPrevented))
          throw s;
      });
  },
  ZUe = (t) => {
    var e, n, r, a;
    return Ar(
      (a =
        (r =
          (n = (e = t.networkProfile) == null ? void 0 : e.networkInterfaces) ==
          null
            ? void 0
            : n[0]) == null
          ? void 0
          : r.id) == null
        ? void 0
        : a.split("/")
    );
  },
  eKe = (t) => {
    var e;
    return (e = t.id) == null ? void 0 : e.split("/")[4];
  },
  tKe = (t) => {
    var e, n;
    return Ar(
      (n =
        (e = t == null ? void 0 : t.publicIPAddress) == null ? void 0 : e.id) ==
        null
        ? void 0
        : n.split("/")
    );
  };
class nKe {
  async fetch(e) {
    try {
      const n = await this.getUserIdentity(e);
      if (!n) return { hosts: [] };
      const { SubscriptionClient: r } = await vc(
          () => import("./index-2afcfffa.js"),
          [
            "./index-2afcfffa.js",
            "./serviceClient-4a8d1836.js",
            "./v4-cf522c50.js",
            "./lroEngine-19b975bf.js",
            "./operation-21c82322.js",
          ],
          import.meta.url
        ),
        a = new r(n),
        s = await this.getSubscriptionIDs(a);
      return { hosts: await this.getVms(n, s) };
    } catch (n) {
      throw new Yv({ config: e, message: n.message, type: n.name });
    }
  }
  async getUserIdentity(e) {
    const { ClientSecretCredential: n } = await vc(
      () => import("./index-dfa53b43.js"),
      [
        "./index-dfa53b43.js",
        "./serviceClient-4a8d1836.js",
        "./v4-cf522c50.js",
      ],
      import.meta.url
    );
    return e.tenant_id && e.client_id && e.client_secret
      ? new n(e.tenant_id, e.client_id, e.client_secret)
      : null;
  }
  async getSubscriptionIDs(e) {
    const n = [];
    for await (const r of e.subscriptions.list())
      r.subscriptionId && n.push(r.subscriptionId);
    return n;
  }
  async getVms(e, n) {
    var i, o;
    const r = [],
      { ComputeManagementClient: a } = await vc(
        () => import("./index-a87be1a1.js"),
        [
          "./index-a87be1a1.js",
          "./serviceClient-4a8d1836.js",
          "./v4-cf522c50.js",
          "./lroEngine-19b975bf.js",
          "./operation-21c82322.js",
        ],
        import.meta.url
      ),
      { NetworkManagementClient: s } = await vc(
        () => import("./index-a2638086.js"),
        [
          "./index-a2638086.js",
          "./operation-21c82322.js",
          "./serviceClient-4a8d1836.js",
          "./v4-cf522c50.js",
        ],
        import.meta.url
      );
    for (const u of n) {
      const l = new a(e, u),
        c = new s(e, u),
        d = l.virtualMachines.listAll();
      for await (const p of d) {
        const m = await this.getVmConfig(p, c);
        if (m.vmPublicIpAddress) {
          const y = new Tn({
            label: p.name,
            cloud_instance_type: "azure",
            os_name:
              (o =
                (i = p == null ? void 0 : p.storageProfile) == null
                  ? void 0
                  : i.osDisk) == null
                ? void 0
                : o.osType,
            cloud_instance_id: p.id,
            ssh_config: new Xs(),
          });
          (y.address = m.vmPublicIpAddress), r.push(y);
        }
      }
    }
    return r;
  }
  async getVmConfig(e, n) {
    var c, d;
    const r = ZUe(e),
      a = eKe(e);
    if (!a || !r) return {};
    const i =
        (c = (await n.networkInterfaces.get(a, r)).ipConfigurations) == null
          ? void 0
          : c.find((p) => p.publicIPAddress != null),
      o = tKe(i);
    if (!o) return {};
    const u = await ((d = n.publicIPAddresses) == null ? void 0 : d.get(a, o));
    if (!u.ipAddress) return {};
    const l = u.ipAddress;
    return { vmResourceGroupName: a, vmNetworkName: r, vmPublicIpAddress: l };
  }
}
function m6(t) {
  for (var e = -1, n = t == null ? 0 : t.length, r = 0, a = []; ++e < n; ) {
    var s = t[e];
    s && (a[r++] = s);
  }
  return a;
}
const yw = (t) => {
    if (!t) return null;
    const e = t.toLowerCase();
    return e.includes("ubuntu")
      ? "ubuntu"
      : e.includes("red")
      ? "redhat"
      : e.includes("suse")
      ? "suse"
      : e.includes("debian")
      ? "debian"
      : e.includes("macos") || e.includes("osx")
      ? "osx"
      : e.includes("linux")
      ? "linux"
      : e.includes("cent")
      ? "centos"
      : null;
  },
  sKe = 48;
class rKe {
  async fetch(e) {
    const n = await this.getReservations(e);
    if (!n) return { hosts: [] };
    const r = { ipAddressType: e.ipAddressType };
    return {
      hosts: m6(n.map((i) => i.Instances).flat())
        .filter((i) => {
          var o;
          return (
            ((o = i == null ? void 0 : i.State) == null ? void 0 : o.Code) !==
            sKe
          );
        })
        .map((i) => this.convertToHost(i, r))
        .filter(xn),
    };
  }
  convertToHost(e, n) {
    var d, p;
    const {
        PrivateIpAddress: r,
        PublicIpAddress: a,
        InstanceId: s,
        PlatformDetails: i,
        Platform: o,
      } = e,
      u = (n == null ? void 0 : n.ipAddressType) === "public" ? a : r;
    if (!(u && s)) return null;
    const l = ["label", "name", "title"],
      c =
        (p =
          (d = e == null ? void 0 : e.Tags) == null
            ? void 0
            : d.find((m) => {
                var y;
                return l.includes(
                  ((y = m.Key) == null ? void 0 : y.toLowerCase()) ?? ""
                );
              })) == null
          ? void 0
          : p.Value;
    return new Tn({
      label: c,
      address: u,
      cloud_instance_id: s,
      cloud_instance_type: "Amazon AWS",
      ssh_config: new Xs(),
      os_name: yw(o) || yw(i),
    });
  }
  async getReservations(e) {
    try {
      const { EC2Client: n, DescribeInstancesCommand: r } = await vc(
          () => import("./index-e3a8fc09.js"),
          [
            "./index-e3a8fc09.js",
            "./resolveDefaultsModeConfig-2d3a6c4f.js",
            "./v4-cf522c50.js",
          ],
          import.meta.url
        ),
        a = new n({
          credentials: {
            accessKeyId: e.accessKeyId || "",
            secretAccessKey: e.secretAccessKey || "",
          },
          region: e.region || void 0,
        }),
        { Reservations: s } = await a.send(new r({}));
      return s;
    } catch (n) {
      throw new Yv({ config: e, message: n.message, type: n.name });
    }
  }
}
class aKe {
  async fetch(e) {
    const n = await this.getInstances(e);
    if (!n) return { hosts: [] };
    const r = { ipAddressType: e.ipAddressType };
    return {
      hosts: n
        .filter((s) => {
          var i;
          return (
            ((i = s == null ? void 0 : s.state) == null ? void 0 : i.code) !==
            48
          );
        })
        .map((s) => this.convertToHost(s, r))
        .filter(xn),
    };
  }
  convertToHost(e, n) {
    const {
        privateIpAddress: r,
        publicIpAddress: a,
        name: s,
        arn: i,
        blueprintName: o,
      } = e,
      u = (n == null ? void 0 : n.ipAddressType) === "public" ? a : r;
    return u && i
      ? new Tn({
          label: s,
          address: u,
          cloud_instance_id: i,
          cloud_instance_type: "Amazon AWS",
          ssh_config: new Xs(),
          os_name: yw(o),
        })
      : null;
  }
  async getInstances(e) {
    try {
      const { LightsailClient: n } = await vc(
          () => import("./index-66be1c68.js"),
          [
            "./index-66be1c68.js",
            "./resolveDefaultsModeConfig-2d3a6c4f.js",
            "./v4-cf522c50.js",
          ],
          import.meta.url
        ),
        r = new n({
          credentials: {
            accessKeyId: e.accessKeyId || "",
            secretAccessKey: e.secretAccessKey || "",
          },
          region: e.region || void 0,
        });
      return await this.getInstancesWithPagination({ client: r });
    } catch (n) {
      throw new Yv({ config: e, message: n.message, type: n.name });
    }
  }
  async getInstancesWithPagination({
    client: e,
    arrayOfInstances: n,
    currentPageToken: r,
  }) {
    const a = n || [],
      { GetInstancesCommand: s } = await vc(
        () => import("./index-66be1c68.js"),
        [
          "./index-66be1c68.js",
          "./resolveDefaultsModeConfig-2d3a6c4f.js",
          "./v4-cf522c50.js",
        ],
        import.meta.url
      ),
      i = new s({ pageToken: r }),
      { instances: o, nextPageToken: u } = await e.send(i);
    return (
      o != null && o.length && a.push(...o),
      u
        ? this.getInstancesWithPagination({
            client: e,
            arrayOfInstances: a,
            currentPageToken: u,
          })
        : a
    );
  }
}
class iKe {
  constructor() {
    this.implementors = { lightsail: new aKe(), ec2: new rKe() };
  }
  async fetch(e) {
    return this.implementors[e.serviceType].fetch(e);
  }
}
class oKe {
  async fetch(e) {
    const n = await this.listDroplets(e);
    return n
      ? {
          hosts: n
            .filter((a) => (a == null ? void 0 : a.status) === "active")
            .map((a) => this.convertToHost(a))
            .filter(xn),
        }
      : { hosts: [] };
  }
  convertToHost(e) {
    var u, l, c;
    const { id: n, name: r, networks: a, image: s } = e,
      o =
        ((u = [a == null ? void 0 : a.v4, a == null ? void 0 : a.v6]
          .flat()
          .find((d) => (d == null ? void 0 : d.type) === "public")) == null
          ? void 0
          : u.ip_address) ||
        ((l = a == null ? void 0 : a.v4[0]) == null ? void 0 : l.ip_address) ||
        ((c = a == null ? void 0 : a.v6[0]) == null ? void 0 : c.ip_address);
    return n && o
      ? new Tn({
          label: r,
          address: o,
          cloud_instance_id: n.toString(),
          cloud_instance_type: "DigitalOcean",
          ssh_config: new Xs(),
          os_name: yw(s.distribution),
        })
      : null;
  }
  async listDroplets(e) {
    var r, a, s, i;
    const { createApiClient: n } = await vc(
      () => import("./index-browser.min-cc776131.js").then((o) => o.i),
      [],
      import.meta.url
    );
    try {
      const o = n({ token: e.token || "" }),
        {
          data: { droplets: u },
        } = await o.droplet.listDroplets({ per_page: 200 });
      return u;
    } catch (o) {
      throw new Yv({
        config: e,
        message:
          ((a = (r = o.response) == null ? void 0 : r.data) == null
            ? void 0
            : a.message) || o.message,
        type:
          ((i = (s = o.response) == null ? void 0 : s.data) == null
            ? void 0
            : i.id) || o.name,
      });
    }
  }
}
const uKe = (t = "") =>
    t === "aws"
      ? new iKe()
      : t === "DigitalOcean"
      ? new oKe()
      : t === "azure"
      ? new nKe()
      : null,
  lKe = 10 * 1e3;
class cKe {
  constructor(e) {
    this.provider = e;
  }
  async fetch(e) {
    return this.provider.fetch(e);
  }
}
class dKe {
  constructor(e) {
    (this.sync = h6((n) => this.syncNow(n), lKe)),
      (this.syncGroup = (n) => {
        const { cloud_config: r } = n;
        return r != null ? this.cloudConfigFetch(n, r) : void 0;
      }),
      (this.sendSyncCompletedAnalyticsEvent = ({
        requestDate: n,
        numberOfImportedHosts: r,
        numberOfRemovedHosts: a,
        cloudConfig: s,
      }) => {
        if (!r && !a) return;
        const o = kUe(new Date(), n);
        this.dispatch(
          ZX({
            responseTime: o,
            numberOfImportedHosts: r,
            numberOfRemovedHosts: a,
            importedIpType: n7(s),
            importedServices: t7(s),
            cloudIntegration: Ig(s.cloudType),
          })
        );
      }),
      (this.cloudConfigFetch = async (n, r) => {
        const a = new Date();
        try {
          const s = uKe(r.cloudType);
          if (!s) throw new Error("Incorrect cloud config");
          const i = await new cKe(s).fetch(r),
            o = await new YUe(n, this.store).resolveHosts(i.hosts);
          return (
            this.sendSyncCompletedAnalyticsEvent({
              requestDate: a,
              numberOfImportedHosts: o.created.length,
              numberOfRemovedHosts: o.deleted.length,
              cloudConfig: r,
            }),
            this.dispatch(KP(n)),
            this.dispatch(
              ss({
                hosts: this.store.getHosts(!0),
                groups: this.store.getGroups(!0),
              })
            ),
            o
          );
        } catch (s) {
          return (
            s instanceof Yv ||
              tt.exception("Clouds: cannot fetch data for cloud config", s),
            this.dispatch(Pse({ group: n, errorMessage: s.message })),
            r.isFulfilled() &&
              this.dispatch(
                eQ({
                  importedIpType: n7(r),
                  importedServices: t7(r),
                  cloudIntegration: Ig(r.cloudType),
                  cloudErrorType: s.type ?? "Unknown",
                })
              ),
            null
          );
        }
      }),
      (this.store = e.store),
      (this.dispatch = e.dispatch),
      (this.settings = e.settings);
  }
  get isSyncEnabled() {
    return this.settings.getDeprecatedUserPro();
  }
  syncNow(e) {
    return this.isSyncEnabled ? Promise.all(e.map(this.syncGroup)) : null;
  }
}
var pKe = 1,
  hKe = 4;
function xl(t) {
  return Gi(t, pKe | hKe);
}
function Xv(t) {
  return t === void 0;
}
var fKe = "Expected a function";
function Lm(t) {
  if (typeof t != "function") throw new TypeError(fKe);
  return function () {
    var e = arguments;
    switch (e.length) {
      case 0:
        return !t.call(this);
      case 1:
        return !t.call(this, e[0]);
      case 2:
        return !t.call(this, e[0], e[1]);
      case 3:
        return !t.call(this, e[0], e[1], e[2]);
    }
    return !t.apply(this, e);
  };
}
function Qv(t, e, n, r) {
  if (!ws(t)) return t;
  e = ld(e, t);
  for (var a = -1, s = e.length, i = s - 1, o = t; o != null && ++a < s; ) {
    var u = Pu(e[a]),
      l = n;
    if (u === "__proto__" || u === "constructor" || u === "prototype") return t;
    if (a != i) {
      var c = o[u];
      (l = r ? r(c, u, o) : void 0),
        l === void 0 && (l = ws(c) ? c : Pl(e[a + 1]) ? [] : {});
    }
    jv(o, u, l), (o = o[u]);
  }
  return t;
}
function Ise(t, e, n) {
  for (var r = -1, a = e.length, s = {}; ++r < a; ) {
    var i = e[r],
      o = Ip(t, i);
    n(o, i) && Qv(s, ld(i, t), o);
  }
  return s;
}
function Jv(t, e) {
  if (t == null) return {};
  var n = ks(R2(t), function (r) {
    return [r];
  });
  return (
    (e = on(e)),
    Ise(t, n, function (r, a) {
      return e(r, a[0]);
    })
  );
}
function BP(t, e) {
  return Jv(t, Lm(on(e)));
}
function Zv(t) {
  switch (t) {
    case Ms.errorCodes["crypto::Error::None"]:
      return "no error";
    case Ms.errorCodes["crypto::Error::UnknownVersion"]:
      return "unknown version";
    case Ms.errorCodes["crypto::Error::UnsupportedVersion"]:
      return "unsupported version";
    case Ms.errorCodes["crypto::Error::RNCryptorVersion"]:
      return "rncryptor version";
    case Ms.errorCodes["crypto::Error::IncorrectSecretKeySize"]:
      return "incorrect secret key size";
    case Ms.errorCodes["crypto::Error::IncorrectPublicKeySize"]:
      return "incorrect public key size";
    case Ms.errorCodes["crypto::Error::IncorrectPrivateKeySize"]:
      return "incorrect private key size";
    case Ms.errorCodes["crypto::Error::IncorrectSaltSize"]:
      return "incorrect salt size";
    case Ms.errorCodes["crypto::Error::Unknown"]:
      return "unknown error";
    case Ms.errorCodes["crypto::Error::NoEngine"]:
      return "no engine";
    case Ms.errorCodes["crypto::Error::IncompleteCiphertext"]:
      return "incomplete ciphertext";
    default:
      return "unspecified error";
  }
}
var Fi = ((t) => (
  (t[(t.unknown = 0)] = "unknown"),
  (t[(t.rnCryptorOldVersion1 = 1)] = "rnCryptorOldVersion1"),
  (t[(t.rnCryptorOldVersion2 = 2)] = "rnCryptorOldVersion2"),
  (t[(t.rnCryptorCurrentVersion = 3)] = "rnCryptorCurrentVersion"),
  (t[(t.sodium = 4)] = "sodium"),
  t
))(Fi || {});
class sn extends Us {
  constructor(e, n, r) {
    super(e),
      (this.cryptorVersion = n),
      (this.parentError = r),
      (this.name = "CryptoError"),
      (this.errorContext = void 0);
  }
  toString() {
    return "";
  }
  withContext(e) {
    return (
      this.errorContext ?? (this.errorContext = []),
      this.errorContext.push(e),
      this
    );
  }
  static is(e) {
    return e instanceof sn;
  }
}
class Wf extends sn {
  constructor(e) {
    super("Crypto Error occurred in entries", 0),
      (this.name = "AggregatedCryptoError"),
      (this.errorContext = e.flatMap(
        ({ message: n, cryptorVersion: r, errorContext: a }) =>
          a ?? [
            {
              message: `context not set. ${n}`,
              kind: void 0,
              id: 0,
              local_id: 0,
              cryptorVersion: r,
              operation: "encrypt",
            },
          ]
      ));
  }
}
function Cse(t, e) {
  const n = t.getLastError();
  if (n !== Ms.errorCodes["crypto::Error::None"]) return new sn(Zv(n), e);
}
function S6(t) {
  if (t.length === 0) return 0;
  switch (t[0]) {
    case "B":
      return 4;
    case "A":
      return 3;
    default:
      return 0;
  }
}
function mKe(t) {
  if (t == null) return !1;
  const e = Buffer.from(t, "base64"),
    n = 2 + 24 + 16,
    r = 1,
    a = 1;
  return e.length >= n && S6(t) === 4 && e[r] === a;
}
var SKe = 0 / 0;
function F5(t) {
  return typeof t == "number" ? t : za(t) ? SKe : +t;
}
function VP(t, e) {
  return function (n, r) {
    var a;
    if (n === void 0 && r === void 0) return e;
    if ((n !== void 0 && (a = n), r !== void 0)) {
      if (a === void 0) return r;
      typeof n == "string" || typeof r == "string"
        ? ((n = Si(n)), (r = Si(r)))
        : ((n = F5(n)), (r = F5(r))),
        (a = t(n, r));
    }
    return a;
  };
}
var yKe = VP(function (t, e) {
  return t + e;
}, 0);
const Ase = yKe;
var gKe = "Expected a function";
function Ose(t, e) {
  if (typeof e != "function") throw new TypeError(gKe);
  return (
    (t = pn(t)),
    function () {
      if (--t < 1) return e.apply(this, arguments);
    }
  );
}
var vKe = 128;
function y6(t, e, n) {
  return (
    (e = n ? void 0 : e),
    (e = t && e == null ? t.length : e),
    Rl(t, vKe, void 0, void 0, void 0, void 0, e)
  );
}
function Ta(t, e, n) {
  if (!ws(n)) return !1;
  var r = typeof e;
  return (r == "number" ? Pa(n) && Pl(e, n.length) : r == "string" && e in n)
    ? qi(n[e], t)
    : !1;
}
function Mm(t) {
  return In(function (e, n) {
    var r = -1,
      a = n.length,
      s = a > 1 ? n[a - 1] : void 0,
      i = a > 2 ? n[2] : void 0;
    for (
      s = t.length > 3 && typeof s == "function" ? (a--, s) : void 0,
        i && Ta(n[0], n[1], i) && ((s = a < 3 ? void 0 : s), (a = 1)),
        e = Object(e);
      ++r < a;

    ) {
      var o = n[r];
      o && t(e, o, r, s);
    }
    return e;
  });
}
var _Ke = Object.prototype,
  bKe = _Ke.hasOwnProperty,
  EKe = Mm(function (t, e) {
    if (gv(e) || Pa(e)) {
      Ou(e, dr(e), t);
      return;
    }
    for (var n in e) bKe.call(e, n) && jv(t, n, e[n]);
  });
const kh = EKe;
var TKe = Mm(function (t, e) {
  Ou(e, Aa(e), t);
});
const qf = TKe;
var wKe = Mm(function (t, e, n, r) {
  Ou(e, Aa(e), t, r);
});
const Yf = wKe;
var PKe = Mm(function (t, e, n, r) {
  Ou(e, dr(e), t, r);
});
const Hse = PKe;
function g6(t, e) {
  for (var n = -1, r = e.length, a = Array(r), s = t == null; ++n < r; )
    a[n] = s ? void 0 : bv(t, e[n]);
  return a;
}
var IKe = kl(g6);
const Nse = IKe;
var CKe = "[object DOMException]",
  AKe = "[object Error]";
function jP(t) {
  if (!Bs(t)) return !1;
  var e = wa(t);
  return (
    e == AKe ||
    e == CKe ||
    (typeof t.message == "string" && typeof t.name == "string" && !ad(t))
  );
}
var OKe = In(function (t, e) {
  try {
    return yi(t, void 0, e);
  } catch (n) {
    return jP(n) ? n : new Error(n);
  }
});
const v6 = OKe;
var HKe = "Expected a function";
function _6(t, e) {
  var n;
  if (typeof e != "function") throw new TypeError(HKe);
  return (
    (t = pn(t)),
    function () {
      return (
        --t > 0 && (n = e.apply(this, arguments)), t <= 1 && (e = void 0), n
      );
    }
  );
}
var NKe = 1,
  RKe = 32,
  b6 = In(function (t, e, n) {
    var r = NKe;
    if (n.length) {
      var a = qc(n, Om(b6));
      r |= RKe;
    }
    return Rl(t, r, e, n, a);
  });
b6.placeholder = {};
const E6 = b6;
var kKe = kl(function (t, e) {
  return (
    Yi(e, function (n) {
      (n = Pu(n)), Hl(t, n, E6(t[n], t));
    }),
    t
  );
});
const Rse = kKe;
var xKe = 1,
  LKe = 2,
  MKe = 32,
  T6 = In(function (t, e, n) {
    var r = xKe | LKe;
    if (n.length) {
      var a = qc(n, Om(T6));
      r |= MKe;
    }
    return Rl(e, r, t, n, a);
  });
T6.placeholder = {};
const kse = T6;
function w6(t) {
  return Ev(zn(t).toLowerCase());
}
function P6(t, e, n, r) {
  var a = -1,
    s = t == null ? 0 : t.length;
  for (r && s && (n = t[++a]); ++a < s; ) n = e(n, t[a], a, t);
  return n;
}
function I6(t) {
  return function (e) {
    return t == null ? void 0 : t[e];
  };
}
var DKe = {
    À: "A",
    Á: "A",
    Â: "A",
    Ã: "A",
    Ä: "A",
    Å: "A",
    à: "a",
    á: "a",
    â: "a",
    ã: "a",
    ä: "a",
    å: "a",
    Ç: "C",
    ç: "c",
    Ð: "D",
    ð: "d",
    È: "E",
    É: "E",
    Ê: "E",
    Ë: "E",
    è: "e",
    é: "e",
    ê: "e",
    ë: "e",
    Ì: "I",
    Í: "I",
    Î: "I",
    Ï: "I",
    ì: "i",
    í: "i",
    î: "i",
    ï: "i",
    Ñ: "N",
    ñ: "n",
    Ò: "O",
    Ó: "O",
    Ô: "O",
    Õ: "O",
    Ö: "O",
    Ø: "O",
    ò: "o",
    ó: "o",
    ô: "o",
    õ: "o",
    ö: "o",
    ø: "o",
    Ù: "U",
    Ú: "U",
    Û: "U",
    Ü: "U",
    ù: "u",
    ú: "u",
    û: "u",
    ü: "u",
    Ý: "Y",
    ý: "y",
    ÿ: "y",
    Æ: "Ae",
    æ: "ae",
    Þ: "Th",
    þ: "th",
    ß: "ss",
    Ā: "A",
    Ă: "A",
    Ą: "A",
    ā: "a",
    ă: "a",
    ą: "a",
    Ć: "C",
    Ĉ: "C",
    Ċ: "C",
    Č: "C",
    ć: "c",
    ĉ: "c",
    ċ: "c",
    č: "c",
    Ď: "D",
    Đ: "D",
    ď: "d",
    đ: "d",
    Ē: "E",
    Ĕ: "E",
    Ė: "E",
    Ę: "E",
    Ě: "E",
    ē: "e",
    ĕ: "e",
    ė: "e",
    ę: "e",
    ě: "e",
    Ĝ: "G",
    Ğ: "G",
    Ġ: "G",
    Ģ: "G",
    ĝ: "g",
    ğ: "g",
    ġ: "g",
    ģ: "g",
    Ĥ: "H",
    Ħ: "H",
    ĥ: "h",
    ħ: "h",
    Ĩ: "I",
    Ī: "I",
    Ĭ: "I",
    Į: "I",
    İ: "I",
    ĩ: "i",
    ī: "i",
    ĭ: "i",
    į: "i",
    ı: "i",
    Ĵ: "J",
    ĵ: "j",
    Ķ: "K",
    ķ: "k",
    ĸ: "k",
    Ĺ: "L",
    Ļ: "L",
    Ľ: "L",
    Ŀ: "L",
    Ł: "L",
    ĺ: "l",
    ļ: "l",
    ľ: "l",
    ŀ: "l",
    ł: "l",
    Ń: "N",
    Ņ: "N",
    Ň: "N",
    Ŋ: "N",
    ń: "n",
    ņ: "n",
    ň: "n",
    ŋ: "n",
    Ō: "O",
    Ŏ: "O",
    Ő: "O",
    ō: "o",
    ŏ: "o",
    ő: "o",
    Ŕ: "R",
    Ŗ: "R",
    Ř: "R",
    ŕ: "r",
    ŗ: "r",
    ř: "r",
    Ś: "S",
    Ŝ: "S",
    Ş: "S",
    Š: "S",
    ś: "s",
    ŝ: "s",
    ş: "s",
    š: "s",
    Ţ: "T",
    Ť: "T",
    Ŧ: "T",
    ţ: "t",
    ť: "t",
    ŧ: "t",
    Ũ: "U",
    Ū: "U",
    Ŭ: "U",
    Ů: "U",
    Ű: "U",
    Ų: "U",
    ũ: "u",
    ū: "u",
    ŭ: "u",
    ů: "u",
    ű: "u",
    ų: "u",
    Ŵ: "W",
    ŵ: "w",
    Ŷ: "Y",
    ŷ: "y",
    Ÿ: "Y",
    Ź: "Z",
    Ż: "Z",
    Ž: "Z",
    ź: "z",
    ż: "z",
    ž: "z",
    Ĳ: "IJ",
    ĳ: "ij",
    Œ: "Oe",
    œ: "oe",
    ŉ: "'n",
    ſ: "s",
  },
  GKe = I6(DKe);
const FKe = GKe;
var UKe = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,
  KKe = "\\u0300-\\u036f",
  BKe = "\\ufe20-\\ufe2f",
  VKe = "\\u20d0-\\u20ff",
  jKe = KKe + BKe + VKe,
  zKe = "[" + jKe + "]",
  $Ke = RegExp(zKe, "g");
function C6(t) {
  return (t = zn(t)), t && t.replace(UKe, FKe).replace($Ke, "");
}
var WKe = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
function qKe(t) {
  return t.match(WKe) || [];
}
var YKe = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
function XKe(t) {
  return YKe.test(t);
}
var xse = "\\ud800-\\udfff",
  QKe = "\\u0300-\\u036f",
  JKe = "\\ufe20-\\ufe2f",
  ZKe = "\\u20d0-\\u20ff",
  eBe = QKe + JKe + ZKe,
  Lse = "\\u2700-\\u27bf",
  Mse = "a-z\\xdf-\\xf6\\xf8-\\xff",
  tBe = "\\xac\\xb1\\xd7\\xf7",
  nBe = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf",
  sBe = "\\u2000-\\u206f",
  rBe =
    " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",
  Dse = "A-Z\\xc0-\\xd6\\xd8-\\xde",
  aBe = "\\ufe0e\\ufe0f",
  Gse = tBe + nBe + sBe + rBe,
  Fse = "['’]",
  U5 = "[" + Gse + "]",
  iBe = "[" + eBe + "]",
  Use = "\\d+",
  oBe = "[" + Lse + "]",
  Kse = "[" + Mse + "]",
  Bse = "[^" + xse + Gse + Use + Lse + Mse + Dse + "]",
  uBe = "\\ud83c[\\udffb-\\udfff]",
  lBe = "(?:" + iBe + "|" + uBe + ")",
  cBe = "[^" + xse + "]",
  Vse = "(?:\\ud83c[\\udde6-\\uddff]){2}",
  jse = "[\\ud800-\\udbff][\\udc00-\\udfff]",
  vh = "[" + Dse + "]",
  dBe = "\\u200d",
  K5 = "(?:" + Kse + "|" + Bse + ")",
  pBe = "(?:" + vh + "|" + Bse + ")",
  B5 = "(?:" + Fse + "(?:d|ll|m|re|s|t|ve))?",
  V5 = "(?:" + Fse + "(?:D|LL|M|RE|S|T|VE))?",
  zse = lBe + "?",
  $se = "[" + aBe + "]?",
  hBe =
    "(?:" + dBe + "(?:" + [cBe, Vse, jse].join("|") + ")" + $se + zse + ")*",
  fBe = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",
  mBe = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])",
  SBe = $se + zse + hBe,
  yBe = "(?:" + [oBe, Vse, jse].join("|") + ")" + SBe,
  gBe = RegExp(
    [
      vh + "?" + Kse + "+" + B5 + "(?=" + [U5, vh, "$"].join("|") + ")",
      pBe + "+" + V5 + "(?=" + [U5, vh + K5, "$"].join("|") + ")",
      vh + "?" + K5 + "+" + B5,
      vh + "+" + V5,
      mBe,
      fBe,
      Use,
      yBe,
    ].join("|"),
    "g"
  );
function vBe(t) {
  return t.match(gBe) || [];
}
function A6(t, e, n) {
  return (
    (t = zn(t)),
    (e = n ? void 0 : e),
    e === void 0 ? (XKe(t) ? vBe(t) : qKe(t)) : t.match(e) || []
  );
}
var _Be = "['’]",
  bBe = RegExp(_Be, "g");
function Dm(t) {
  return function (e) {
    return P6(A6(C6(e).replace(bBe, "")), t, "");
  };
}
var EBe = Dm(function (t, e, n) {
  return (e = e.toLowerCase()), t + (n ? w6(e) : e);
});
const Wse = EBe;
function qse() {
  if (!arguments.length) return [];
  var t = arguments[0];
  return an(t) ? t : [t];
}
var TBe = Or.isFinite,
  wBe = Math.min;
function O6(t) {
  var e = Math[t];
  return function (n, r) {
    if (((n = di(n)), (r = r == null ? 0 : wBe(pn(r), 292)), r && TBe(n))) {
      var a = (zn(n) + "e").split("e"),
        s = e(a[0] + "e" + (+a[1] + r));
      return (a = (zn(s) + "e").split("e")), +(a[0] + "e" + (+a[1] - r));
    }
    return e(n);
  };
}
var PBe = O6("ceil");
const Yse = PBe;
function H6(t) {
  var e = fe(t);
  return (e.__chain__ = !0), e;
}
var IBe = Math.ceil,
  CBe = Math.max;
function Xse(t, e, n) {
  (n ? Ta(t, e, n) : e === void 0) ? (e = 1) : (e = CBe(pn(e), 0));
  var r = t == null ? 0 : t.length;
  if (!r || e < 1) return [];
  for (var a = 0, s = 0, i = Array(IBe(r / e)); a < r; )
    i[s++] = ji(t, a, (a += e));
  return i;
}
function Gp(t, e, n) {
  return (
    t === t &&
      (n !== void 0 && (t = t <= n ? t : n),
      e !== void 0 && (t = t >= e ? t : e)),
    t
  );
}
function N6(t, e, n) {
  return (
    n === void 0 && ((n = e), (e = void 0)),
    n !== void 0 && ((n = di(n)), (n = n === n ? n : 0)),
    e !== void 0 && ((e = di(e)), (e = e === e ? e : 0)),
    Gp(di(t), e, n)
  );
}
var ABe = 4;
function R6(t) {
  return Gi(t, ABe);
}
var OBe = 1,
  HBe = 4;
function Qse(t, e) {
  return (e = typeof e == "function" ? e : void 0), Gi(t, OBe | HBe, e);
}
var NBe = 4;
function Jse(t, e) {
  return (e = typeof e == "function" ? e : void 0), Gi(t, NBe, e);
}
function lH() {
  return new zi(this.value(), this.__chain__);
}
function Zse() {
  var t = arguments.length;
  if (!t) return [];
  for (var e = Array(t - 1), n = arguments[0], r = t; r--; )
    e[r - 1] = arguments[r];
  return ud(an(n) ? Ua(n) : [n], Dr(e, 1));
}
var RBe = "Expected a function";
function ere(t) {
  var e = t == null ? 0 : t.length,
    n = on;
  return (
    (t = e
      ? ks(t, function (r) {
          if (typeof r[1] != "function") throw new TypeError(RBe);
          return [n(r[0]), r[1]];
        })
      : []),
    In(function (r) {
      for (var a = -1; ++a < e; ) {
        var s = t[a];
        if (yi(s[0], this, r)) return yi(s[1], this, r);
      }
    })
  );
}
function tre(t, e, n) {
  var r = n.length;
  if (t == null) return !r;
  for (t = Object(t); r--; ) {
    var a = n[r],
      s = e[a],
      i = t[a];
    if ((i === void 0 && !(a in t)) || !s(i)) return !1;
  }
  return !0;
}
function kBe(t) {
  var e = dr(t);
  return function (n) {
    return tre(n, t, e);
  };
}
var xBe = 1;
function nre(t) {
  return kBe(Gi(t, xBe));
}
function sre(t, e) {
  return e == null || tre(t, e, dr(e));
}
var LBe = Object.prototype,
  MBe = LBe.hasOwnProperty,
  DBe = PP(function (t, e, n) {
    MBe.call(t, n) ? ++t[n] : Hl(t, n, 1);
  });
const rre = DBe;
function are(t, e) {
  var n = Am(t);
  return e == null ? n : uQ(n, e);
}
var GBe = 8;
function zP(t, e, n) {
  e = n ? void 0 : e;
  var r = Rl(t, GBe, void 0, void 0, void 0, void 0, void 0, e);
  return (r.placeholder = zP.placeholder), r;
}
zP.placeholder = {};
var FBe = 16;
function $P(t, e, n) {
  e = n ? void 0 : e;
  var r = Rl(t, FBe, void 0, void 0, void 0, void 0, void 0, e);
  return (r.placeholder = $P.placeholder), r;
}
$P.placeholder = {};
function zu(t, e) {
  return t == null || t !== t ? e : t;
}
var ire = Object.prototype,
  UBe = ire.hasOwnProperty,
  KBe = In(function (t, e) {
    t = Object(t);
    var n = -1,
      r = e.length,
      a = r > 2 ? e[2] : void 0;
    for (a && Ta(e[0], e[1], a) && (r = 1); ++n < r; )
      for (var s = e[n], i = Aa(s), o = -1, u = i.length; ++o < u; ) {
        var l = i[o],
          c = t[l];
        (c === void 0 || (qi(c, ire[l]) && !UBe.call(t, l))) && (t[l] = s[l]);
      }
    return t;
  });
const ore = KBe;
function cH(t, e, n) {
  ((n !== void 0 && !qi(t[e], n)) || (n === void 0 && !(e in t))) &&
    Hl(t, e, n);
}
function dH(t, e) {
  if (!(e === "constructor" && typeof t[e] == "function") && e != "__proto__")
    return t[e];
}
function k6(t) {
  return Ou(t, Aa(t));
}
function BBe(t, e, n, r, a, s, i) {
  var o = dH(t, n),
    u = dH(e, n),
    l = i.get(u);
  if (l) {
    cH(t, n, l);
    return;
  }
  var c = s ? s(o, u, n + "", t, e, i) : void 0,
    d = c === void 0;
  if (d) {
    var p = an(u),
      m = !p && dl(u),
      y = !p && !m && Tp(u);
    (c = u),
      p || m || y
        ? an(o)
          ? (c = o)
          : Js(o)
          ? (c = Ua(o))
          : m
          ? ((d = !1), (c = cQ(u, !0)))
          : y
          ? ((d = !1), (c = pQ(u, !0)))
          : (c = [])
        : ad(u) || Fc(u)
        ? ((c = o), Fc(o) ? (c = k6(o)) : (!ws(o) || Tu(o)) && (c = hQ(u)))
        : (d = !1);
  }
  d && (i.set(u, c), a(c, u, r, s, i), i.delete(u)), cH(t, n, c);
}
function WP(t, e, n, r, a) {
  t !== e &&
    wR(
      e,
      function (s, i) {
        if ((a || (a = new To()), ws(s))) BBe(t, e, i, n, WP, r, a);
        else {
          var o = r ? r(dH(t, i), s, i + "", t, e, a) : void 0;
          o === void 0 && (o = s), cH(t, i, o);
        }
      },
      Aa
    );
}
function ure(t, e, n, r, a, s) {
  return (
    ws(t) && ws(e) && (s.set(e, t), WP(t, e, void 0, ure, s), s.delete(e)), t
  );
}
var VBe = Mm(function (t, e, n, r) {
  WP(t, e, n, r);
});
const x6 = VBe;
var jBe = In(function (t) {
  return t.push(void 0, ure), yi(x6, void 0, t);
});
const lre = jBe;
var zBe = "Expected a function";
function cre(t, e, n) {
  if (typeof t != "function") throw new TypeError(zBe);
  return setTimeout(function () {
    t.apply(void 0, n);
  }, e);
}
var $Be = In(function (t, e) {
  return cre(t, 1, e);
});
const dre = $Be;
var WBe = In(function (t, e, n) {
  return cre(t, di(e) || 0, n);
});
const pre = WBe;
var qBe = 200;
function e_(t, e, n, r) {
  var a = -1,
    s = D0,
    i = !0,
    o = t.length,
    u = [],
    l = e.length;
  if (!o) return u;
  n && (e = ks(e, mi(n))),
    r
      ? ((s = JR), (i = !1))
      : e.length >= qBe && ((s = lg), (i = !1), (e = new np(e)));
  e: for (; ++a < o; ) {
    var c = t[a],
      d = n == null ? c : n(c);
    if (((c = r || c !== 0 ? c : 0), i && d === d)) {
      for (var p = l; p--; ) if (e[p] === d) continue e;
      u.push(c);
    } else s(e, d, r) || u.push(c);
  }
  return u;
}
var YBe = In(function (t, e) {
  return Js(t) ? e_(t, Dr(e, 1, Js, !0)) : [];
});
const L6 = YBe;
var XBe = In(function (t, e) {
  var n = Ar(e);
  return Js(n) && (n = void 0), Js(t) ? e_(t, Dr(e, 1, Js, !0), on(n)) : [];
});
const gw = XBe;
var QBe = In(function (t, e) {
  var n = Ar(e);
  return Js(n) && (n = void 0), Js(t) ? e_(t, Dr(e, 1, Js, !0), void 0, n) : [];
});
const qP = QBe;
var JBe = VP(function (t, e) {
  return t / e;
}, 1);
const hre = JBe;
function fre(t, e, n) {
  var r = t == null ? 0 : t.length;
  return r
    ? ((e = n || e === void 0 ? 1 : pn(e)), ji(t, e < 0 ? 0 : e, r))
    : [];
}
function mre(t, e, n) {
  var r = t == null ? 0 : t.length;
  return r
    ? ((e = n || e === void 0 ? 1 : pn(e)),
      (e = r - e),
      ji(t, 0, e < 0 ? 0 : e))
    : [];
}
function YP(t, e, n, r) {
  for (
    var a = t.length, s = r ? a : -1;
    (r ? s-- : ++s < a) && e(t[s], s, t);

  );
  return n ? ji(t, r ? 0 : s, r ? s + 1 : a) : ji(t, r ? s + 1 : 0, r ? a : s);
}
function Sre(t, e) {
  return t && t.length ? YP(t, on(e), !0, !0) : [];
}
function yre(t, e) {
  return t && t.length ? YP(t, on(e), !0) : [];
}
function il(t, e) {
  var n = an(t) ? Yi : od;
  return n(t, Au(e));
}
function ZBe(t, e) {
  for (var n = t == null ? 0 : t.length; n-- && e(t[n], n, t) !== !1; );
  return t;
}
var eVe = Bj(!0);
const gre = eVe;
function M6(t, e) {
  return t && gre(t, e, dr);
}
var tVe = Wj(M6, !0);
const vre = tVe;
function vw(t, e) {
  var n = an(t) ? ZBe : vre;
  return n(t, Au(e));
}
function _re(t, e, n) {
  (t = zn(t)), (e = Si(e));
  var r = t.length;
  n = n === void 0 ? r : Gp(pn(n), 0, r);
  var a = n;
  return (n -= e.length), n >= 0 && t.slice(n, a) == e;
}
function nVe(t, e) {
  return ks(e, function (n) {
    return [n, t[n]];
  });
}
function sVe(t) {
  var e = -1,
    n = Array(t.size);
  return (
    t.forEach(function (r) {
      n[++e] = [r, r];
    }),
    n
  );
}
var rVe = "[object Map]",
  aVe = "[object Set]";
function bre(t) {
  return function (e) {
    var n = Su(e);
    return n == rVe ? AR(e) : n == aVe ? sVe(e) : nVe(e, t(e));
  };
}
var iVe = bre(dr);
const _w = iVe;
var oVe = bre(Aa);
const bw = oVe;
var uVe = {
    "&": "&amp;",
    "<": "&lt;",
    ">": "&gt;",
    '"': "&quot;",
    "'": "&#39;",
  },
  lVe = I6(uVe);
const cVe = lVe;
var Ere = /[&<>"']/g,
  dVe = RegExp(Ere.source);
function D6(t) {
  return (t = zn(t)), t && dVe.test(t) ? t.replace(Ere, cVe) : t;
}
var Tre = /[\\^$.*+?()[\]{}|]/g,
  pVe = RegExp(Tre.source);
function wre(t) {
  return (t = zn(t)), t && pVe.test(t) ? t.replace(Tre, "\\$&") : t;
}
function Pre(t, e) {
  for (var n = -1, r = t == null ? 0 : t.length; ++n < r; )
    if (!e(t[n], n, t)) return !1;
  return !0;
}
function hVe(t, e) {
  var n = !0;
  return (
    od(t, function (r, a, s) {
      return (n = !!e(r, a, s)), n;
    }),
    n
  );
}
function Ire(t, e, n) {
  var r = an(t) ? Pre : hVe;
  return n && Ta(t, e, n) && (e = void 0), r(t, on(e));
}
var fVe = 4294967295;
function G6(t) {
  return t ? Gp(pn(t), 0, fVe) : 0;
}
function mVe(t, e, n, r) {
  var a = t.length;
  for (
    n = pn(n),
      n < 0 && (n = -n > a ? 0 : a + n),
      r = r === void 0 || r > a ? a : pn(r),
      r < 0 && (r += a),
      r = n > r ? 0 : G6(r);
    n < r;

  )
    t[n++] = e;
  return t;
}
function Cre(t, e, n, r) {
  var a = t == null ? 0 : t.length;
  return a
    ? (n && typeof n != "number" && Ta(t, e, n) && ((n = 0), (r = a)),
      mVe(t, e, n, r))
    : [];
}
function Are(t) {
  return function (e, n, r) {
    var a = Object(e);
    if (!Pa(e)) {
      var s = on(n);
      (e = dr(e)),
        (n = function (o) {
          return s(a[o], o, a);
        });
    }
    var i = t(e, n, r);
    return i > -1 ? a[s ? e[i] : i] : void 0;
  };
}
var SVe = Math.max;
function F6(t, e, n) {
  var r = t == null ? 0 : t.length;
  if (!r) return -1;
  var a = n == null ? 0 : pn(n);
  return a < 0 && (a = SVe(r + a, 0)), M0(t, on(e), a);
}
var yVe = Are(F6);
const Xf = yVe;
function Ore(t, e, n) {
  var r;
  return (
    n(t, function (a, s, i) {
      if (e(a, s, i)) return (r = s), !1;
    }),
    r
  );
}
function Hre(t, e) {
  return Ore(t, on(e), wu);
}
var gVe = Math.max,
  vVe = Math.min;
function U6(t, e, n) {
  var r = t == null ? 0 : t.length;
  if (!r) return -1;
  var a = r - 1;
  return (
    n !== void 0 && ((a = pn(n)), (a = n < 0 ? gVe(r + a, 0) : vVe(a, r - 1))),
    M0(t, on(e), a, !0)
  );
}
var _Ve = Are(U6);
const Nre = _Ve;
function Rre(t, e) {
  return Ore(t, on(e), M6);
}
function Ew(t) {
  return t && t.length ? t[0] : void 0;
}
function kre(t, e) {
  var n = -1,
    r = Pa(t) ? Array(t.length) : [];
  return (
    od(t, function (a, s, i) {
      r[++n] = e(a, s, i);
    }),
    r
  );
}
function Gm(t, e) {
  var n = an(t) ? ks : kre;
  return n(t, on(e));
}
function xre(t, e) {
  return Dr(Gm(t, e), 1);
}
var bVe = 1 / 0;
function Lre(t, e) {
  return Dr(Gm(t, e), bVe);
}
function Mre(t, e, n) {
  return (n = n === void 0 ? 1 : pn(n)), Dr(Gm(t, e), n);
}
var EVe = 1 / 0;
function Dre(t) {
  var e = t == null ? 0 : t.length;
  return e ? Dr(t, EVe) : [];
}
function Gre(t, e) {
  var n = t == null ? 0 : t.length;
  return n ? ((e = e === void 0 ? 1 : pn(e)), Dr(t, e)) : [];
}
var TVe = 512;
function Fre(t) {
  return Rl(t, TVe);
}
var wVe = O6("floor");
const Ure = wVe;
var PVe = "Expected a function",
  IVe = 8,
  CVe = 32,
  AVe = 128,
  OVe = 256;
function Kre(t) {
  return kl(function (e) {
    var n = e.length,
      r = n,
      a = zi.prototype.thru;
    for (t && e.reverse(); r--; ) {
      var s = e[r];
      if (typeof s != "function") throw new TypeError(PVe);
      if (a && !i && iE(s) == "wrapper") var i = new zi([], !0);
    }
    for (r = i ? r : n; ++r < n; ) {
      s = e[r];
      var o = iE(s),
        u = o == "wrapper" ? S2(s) : void 0;
      u &&
      YO(u[0]) &&
      u[1] == (AVe | IVe | CVe | OVe) &&
      !u[4].length &&
      u[9] == 1
        ? (i = i[iE(u[0])].apply(i, u[3]))
        : (i = s.length == 1 && YO(s) ? i[o]() : i.thru(s));
    }
    return function () {
      var l = arguments,
        c = l[0];
      if (i && l.length == 1 && an(c)) return i.plant(c).value();
      for (var d = 0, p = n ? e[d].apply(this, l) : c; ++d < n; )
        p = e[d].call(this, p);
      return p;
    };
  });
}
var HVe = Kre();
const Bre = HVe;
var NVe = Kre(!0);
const Vre = NVe;
function jre(t, e) {
  return t == null ? t : wR(t, Au(e), Aa);
}
function zre(t, e) {
  return t == null ? t : gre(t, Au(e), Aa);
}
function K6(t, e) {
  return t && wu(t, Au(e));
}
function $re(t, e) {
  return t && M6(t, Au(e));
}
function Wre(t) {
  for (var e = -1, n = t == null ? 0 : t.length, r = {}; ++e < n; ) {
    var a = t[e];
    r[a[0]] = a[1];
  }
  return r;
}
function XP(t, e) {
  return id(e, function (n) {
    return Tu(t[n]);
  });
}
function qre(t) {
  return t == null ? [] : XP(t, dr(t));
}
function Yre(t) {
  return t == null ? [] : XP(t, Aa(t));
}
function QP(t) {
  return function (e, n) {
    return (
      (typeof e == "string" && typeof n == "string") ||
        ((e = di(e)), (n = di(n))),
      t(e, n)
    );
  };
}
var RVe = QP(W2);
const Xre = RVe;
var kVe = QP(function (t, e) {
  return t >= e;
});
const Qre = kVe;
var xVe = Object.prototype,
  LVe = xVe.hasOwnProperty;
function MVe(t, e) {
  return t != null && LVe.call(t, e);
}
function B6(t, e) {
  return t != null && nz(t, e, MVe);
}
var DVe = Math.max,
  GVe = Math.min;
function FVe(t, e, n) {
  return t >= GVe(e, n) && t < DVe(e, n);
}
function Jre(t, e, n) {
  return (
    (e = uu(e)),
    n === void 0 ? ((n = e), (e = 0)) : (n = uu(n)),
    (t = di(t)),
    FVe(t, e, n)
  );
}
var UVe = "[object String]";
function Fm(t) {
  return typeof t == "string" || (!an(t) && Bs(t) && wa(t) == UVe);
}
function V6(t, e) {
  return ks(e, function (n) {
    return t[n];
  });
}
function Fp(t) {
  return t == null ? [] : V6(t, dr(t));
}
var KVe = Math.max;
function Zre(t, e, n, r) {
  (t = Pa(t) ? t : Fp(t)), (n = n && !r ? pn(n) : 0);
  var a = t.length;
  return (
    n < 0 && (n = KVe(a + n, 0)),
    Fm(t) ? n <= a && t.indexOf(e, n) > -1 : !!a && mm(t, e, n) > -1
  );
}
var BVe = Math.max;
function eae(t, e, n) {
  var r = t == null ? 0 : t.length;
  if (!r) return -1;
  var a = n == null ? 0 : pn(n);
  return a < 0 && (a = BVe(r + a, 0)), mm(t, e, a);
}
function tae(t) {
  var e = t == null ? 0 : t.length;
  return e ? ji(t, 0, -1) : [];
}
var VVe = Math.min;
function j6(t, e, n) {
  for (
    var r = n ? JR : D0,
      a = t[0].length,
      s = t.length,
      i = s,
      o = Array(s),
      u = 1 / 0,
      l = [];
    i--;

  ) {
    var c = t[i];
    i && e && (c = ks(c, mi(e))),
      (u = VVe(c.length, u)),
      (o[i] =
        !n && (e || (a >= 120 && c.length >= 120)) ? new np(i && c) : void 0);
  }
  c = t[0];
  var d = -1,
    p = o[0];
  e: for (; ++d < a && l.length < u; ) {
    var m = c[d],
      y = e ? e(m) : m;
    if (((m = n || m !== 0 ? m : 0), !(p ? lg(p, y) : r(l, y, n)))) {
      for (i = s; --i; ) {
        var I = o[i];
        if (!(I ? lg(I, y) : r(t[i], y, n))) continue e;
      }
      p && p.push(y), l.push(m);
    }
  }
  return l;
}
function z6(t) {
  return Js(t) ? t : [];
}
var jVe = In(function (t) {
  var e = ks(t, z6);
  return e.length && e[0] === t[0] ? j6(e) : [];
});
const Tw = jVe;
var zVe = In(function (t) {
  var e = Ar(t),
    n = ks(t, z6);
  return (
    e === Ar(n) ? (e = void 0) : n.pop(),
    n.length && n[0] === t[0] ? j6(n, on(e)) : []
  );
});
const $6 = zVe;
var $Ve = In(function (t) {
  var e = Ar(t),
    n = ks(t, z6);
  return (
    (e = typeof e == "function" ? e : void 0),
    e && n.pop(),
    n.length && n[0] === t[0] ? j6(n, void 0, e) : []
  );
});
const nae = $Ve;
function WVe(t, e, n, r) {
  return (
    wu(t, function (a, s, i) {
      e(r, n(a), s, i);
    }),
    r
  );
}
function sae(t, e) {
  return function (n, r) {
    return WVe(n, t, e(r), {});
  };
}
var qVe = Object.prototype,
  YVe = qVe.toString,
  XVe = sae(function (t, e, n) {
    e != null && typeof e.toString != "function" && (e = YVe.call(e)),
      (t[e] = n);
  }, yP(Ys));
const rae = XVe;
var aae = Object.prototype,
  QVe = aae.hasOwnProperty,
  JVe = aae.toString,
  ZVe = sae(function (t, e, n) {
    e != null && typeof e.toString != "function" && (e = JVe.call(e)),
      QVe.call(t, e) ? t[e].push(n) : (t[e] = [n]);
  }, on);
const iae = ZVe;
function t_(t, e, n) {
  (e = ld(e, t)), (t = yQ(t, e));
  var r = t == null ? t : t[Pu(Ar(e))];
  return r == null ? void 0 : yi(r, t, n);
}
var eje = In(t_);
const oae = eje;
var tje = In(function (t, e, n) {
  var r = -1,
    a = typeof e == "function",
    s = Pa(t) ? Array(t.length) : [];
  return (
    od(t, function (i) {
      s[++r] = a ? yi(e, i, n) : t_(i, e, n);
    }),
    s
  );
});
const uae = tje;
var nje = "[object ArrayBuffer]";
function sje(t) {
  return Bs(t) && wa(t) == nje;
}
var j5 = Vi && Vi.isArrayBuffer,
  rje = j5 ? mi(j5) : sje;
const lae = rje;
var aje = "[object Boolean]";
function cae(t) {
  return t === !0 || t === !1 || (Bs(t) && wa(t) == aje);
}
var ije = "[object Date]";
function oje(t) {
  return Bs(t) && wa(t) == ije;
}
var z5 = Vi && Vi.isDate,
  uje = z5 ? mi(z5) : oje;
const dae = uje;
function pae(t) {
  return Bs(t) && t.nodeType === 1 && !ad(t);
}
var lje = "[object Map]",
  cje = "[object Set]",
  dje = Object.prototype,
  pje = dje.hasOwnProperty;
function Zu(t) {
  if (t == null) return !0;
  if (
    Pa(t) &&
    (an(t) ||
      typeof t == "string" ||
      typeof t.splice == "function" ||
      dl(t) ||
      Tp(t) ||
      Fc(t))
  )
    return !t.length;
  var e = Su(t);
  if (e == lje || e == cje) return !t.size;
  if (gv(t)) return !IR(t).length;
  for (var n in t) if (pje.call(t, n)) return !1;
  return !0;
}
function hae(t, e, n) {
  n = typeof n == "function" ? n : void 0;
  var r = n ? n(t, e) : void 0;
  return r === void 0 ? vv(t, e, void 0, n) : !!r;
}
var hje = Or.isFinite;
function fae(t) {
  return typeof t == "number" && hje(t);
}
function W6(t) {
  return typeof t == "number" && t == pn(t);
}
function mae(t, e) {
  return t === e || HR(t, e, NR(e));
}
function Sae(t, e, n) {
  return (n = typeof n == "function" ? n : void 0), HR(t, e, NR(e), n);
}
var fje = "[object Number]";
function Oc(t) {
  return typeof t == "number" || (Bs(t) && wa(t) == fje);
}
function yae(t) {
  return Oc(t) && t != +t;
}
var mje = jb ? Tu : pm;
const Sje = mje;
var yje = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.";
function gae(t) {
  if (Sje(t)) throw new Error(yje);
  return Yj(t);
}
function vae(t) {
  return t == null;
}
function q6(t) {
  return t === null;
}
var gje = "[object RegExp]";
function vje(t) {
  return Bs(t) && wa(t) == gje;
}
var $5 = Vi && Vi.isRegExp,
  _je = $5 ? mi($5) : vje;
const JP = _je;
var W5 = 9007199254740991;
function _ae(t) {
  return W6(t) && t >= -W5 && t <= W5;
}
var bje = "[object WeakMap]";
function bae(t) {
  return Bs(t) && Su(t) == bje;
}
var Eje = "[object WeakSet]";
function Eae(t) {
  return Bs(t) && wa(t) == Eje;
}
var Tje = 1;
function Tae(t) {
  return on(typeof t == "function" ? t : Gi(t, Tje));
}
var wje = Array.prototype,
  Pje = wje.join;
function wae(t, e) {
  return t == null ? "" : Pje.call(t, e);
}
var Ije = Dm(function (t, e, n) {
  return t + (n ? "-" : "") + e.toLowerCase();
});
const Pae = Ije;
var Cje = PP(function (t, e, n) {
  Hl(t, n, e);
});
const Iae = Cje;
function Aje(t, e, n) {
  for (var r = n + 1; r--; ) if (t[r] === e) return r;
  return r;
}
var Oje = Math.max,
  Hje = Math.min;
function Cae(t, e, n) {
  var r = t == null ? 0 : t.length;
  if (!r) return -1;
  var a = r;
  return (
    n !== void 0 && ((a = pn(n)), (a = a < 0 ? Oje(r + a, 0) : Hje(a, r - 1))),
    e === e ? Aje(t, e, a) : M0(t, Bz, a, !0)
  );
}
var Nje = Dm(function (t, e, n) {
  return t + (n ? " " : "") + e.toLowerCase();
});
const Aae = Nje;
var Rje = cz("toLowerCase");
const Oae = Rje;
function Y6(t, e) {
  return t < e;
}
var kje = QP(Y6);
const Hae = kje;
var xje = QP(function (t, e) {
  return t <= e;
});
const Nae = xje;
function X6(t, e) {
  var n = {};
  return (
    (e = on(e)),
    wu(t, function (r, a, s) {
      Hl(n, e(r, a, s), r);
    }),
    n
  );
}
var Lje = 1;
function Rae(t) {
  return ez(Gi(t, Lje));
}
var Mje = 1;
function kae(t, e) {
  return sz(t, Gi(e, Mje));
}
function xae(t) {
  return t && t.length ? GP(t, Ys, W2) : void 0;
}
var Dje = 0 / 0;
function Lae(t, e) {
  var n = t == null ? 0 : t.length;
  return n ? q2(t, e) / n : Dje;
}
function Mae(t) {
  return Lae(t, Ys);
}
function Dae(t, e) {
  return Lae(t, on(e));
}
var Gje = Mm(function (t, e, n) {
  WP(t, e, n);
});
const Yr = Gje;
var Fje = In(function (t, e) {
  return function (n) {
    return t_(n, t, e);
  };
});
const Gae = Fje;
var Uje = In(function (t, e) {
  return function (n) {
    return t_(t, n, e);
  };
});
const Fae = Uje;
function Uae(t) {
  return t && t.length ? GP(t, Ys, Y6) : void 0;
}
function Kae(t, e) {
  return t && t.length ? GP(t, on(e), Y6) : void 0;
}
function Q6(t, e, n) {
  var r = dr(e),
    a = XP(e, r),
    s = !(ws(n) && "chain" in n) || !!n.chain,
    i = Tu(t);
  return (
    Yi(a, function (o) {
      var u = e[o];
      (t[o] = u),
        i &&
          (t.prototype[o] = function () {
            var l = this.__chain__;
            if (s || l) {
              var c = t(this.__wrapped__),
                d = (c.__actions__ = Ua(this.__actions__));
              return (
                d.push({ func: u, args: arguments, thisArg: t }),
                (c.__chain__ = l),
                c
              );
            }
            return u.apply(t, ud([this.value()], arguments));
          });
    }),
    t
  );
}
var Kje = VP(function (t, e) {
  return t * e;
}, 1);
const Bae = Kje;
function Bje(t) {
  for (var e, n = []; !(e = t.next()).done; ) n.push(e.value);
  return n;
}
var Vje = "[object Map]",
  jje = "[object Set]",
  EA = sa ? sa.iterator : void 0;
function J6(t) {
  if (!t) return [];
  if (Pa(t)) return Fm(t) ? Ho(t) : Ua(t);
  if (EA && t[EA]) return Bje(t[EA]());
  var e = Su(t),
    n = e == Vje ? AR : e == jje ? O0 : Fp;
  return n(t);
}
function pH() {
  this.__values__ === void 0 && (this.__values__ = J6(this.value()));
  var t = this.__index__ >= this.__values__.length,
    e = t ? void 0 : this.__values__[this.__index__++];
  return { done: t, value: e };
}
function Vae(t, e) {
  var n = t.length;
  if (n) return (e += e < 0 ? n : 0), Pl(e, n) ? t[e] : void 0;
}
function jae(t, e) {
  return t && t.length ? Vae(t, pn(e)) : void 0;
}
function zae(t) {
  return (
    (t = pn(t)),
    In(function (e) {
      return Vae(e, t);
    })
  );
}
function $ae(t) {
  return _6(2, t);
}
function zje(t, e) {
  var n = t.length;
  for (t.sort(e); n--; ) t[n] = t[n].value;
  return t;
}
function Wae(t, e) {
  if (t !== e) {
    var n = t !== void 0,
      r = t === null,
      a = t === t,
      s = za(t),
      i = e !== void 0,
      o = e === null,
      u = e === e,
      l = za(e);
    if (
      (!o && !l && !s && t > e) ||
      (s && i && u && !o && !l) ||
      (r && i && u) ||
      (!n && u) ||
      !a
    )
      return 1;
    if (
      (!r && !s && !l && t < e) ||
      (l && n && a && !r && !s) ||
      (o && n && a) ||
      (!i && a) ||
      !u
    )
      return -1;
  }
  return 0;
}
function $je(t, e, n) {
  for (
    var r = -1, a = t.criteria, s = e.criteria, i = a.length, o = n.length;
    ++r < i;

  ) {
    var u = Wae(a[r], s[r]);
    if (u) {
      if (r >= o) return u;
      var l = n[r];
      return u * (l == "desc" ? -1 : 1);
    }
  }
  return t.index - e.index;
}
function qae(t, e, n) {
  e.length
    ? (e = ks(e, function (s) {
        return an(s)
          ? function (i) {
              return Ip(i, s.length === 1 ? s[0] : s);
            }
          : s;
      }))
    : (e = [Ys]);
  var r = -1;
  e = ks(e, mi(on));
  var a = kre(t, function (s, i, o) {
    var u = ks(e, function (l) {
      return l(s);
    });
    return { criteria: u, index: ++r, value: s };
  });
  return zje(a, function (s, i) {
    return $je(s, i, n);
  });
}
function ZP(t, e, n, r) {
  return t == null
    ? []
    : (an(e) || (e = e == null ? [] : [e]),
      (n = r ? void 0 : n),
      an(n) || (n = n == null ? [] : [n]),
      qae(t, e, n));
}
function Z6(t) {
  return kl(function (e) {
    return (
      (e = ks(e, mi(on))),
      In(function (n) {
        var r = this;
        return t(e, function (a) {
          return yi(a, r, n);
        });
      })
    );
  });
}
var Wje = Z6(ks);
const Yae = Wje;
var qje = In;
const Yje = qje;
var Xje = Math.min,
  Qje = Yje(function (t, e) {
    e = e.length == 1 && an(e[0]) ? ks(e[0], mi(on)) : ks(Dr(e, 1), mi(on));
    var n = e.length;
    return In(function (r) {
      for (var a = -1, s = Xje(r.length, n); ++a < s; )
        r[a] = e[a].call(this, r[a]);
      return yi(t, this, r);
    });
  });
const Xae = Qje;
var Jje = Z6(Pre);
const Qae = Jje;
var Zje = Z6(CR);
const Jae = Zje;
var eze = 9007199254740991,
  tze = Math.floor;
function hH(t, e) {
  var n = "";
  if (!t || e < 1 || e > eze) return n;
  do e % 2 && (n += t), (e = tze(e / 2)), e && (t += t);
  while (e);
  return n;
}
var nze = kR("length");
const sze = nze;
var Zae = "\\ud800-\\udfff",
  rze = "\\u0300-\\u036f",
  aze = "\\ufe20-\\ufe2f",
  ize = "\\u20d0-\\u20ff",
  oze = rze + aze + ize,
  uze = "\\ufe0e\\ufe0f",
  lze = "[" + Zae + "]",
  fH = "[" + oze + "]",
  mH = "\\ud83c[\\udffb-\\udfff]",
  cze = "(?:" + fH + "|" + mH + ")",
  eie = "[^" + Zae + "]",
  tie = "(?:\\ud83c[\\udde6-\\uddff]){2}",
  nie = "[\\ud800-\\udbff][\\udc00-\\udfff]",
  dze = "\\u200d",
  sie = cze + "?",
  rie = "[" + uze + "]?",
  pze =
    "(?:" + dze + "(?:" + [eie, tie, nie].join("|") + ")" + rie + sie + ")*",
  hze = rie + sie + pze,
  fze = "(?:" + [eie + fH + "?", fH, tie, nie, lze].join("|") + ")",
  q5 = RegExp(mH + "(?=" + mH + ")|" + fze + hze, "g");
function mze(t) {
  for (var e = (q5.lastIndex = 0); q5.test(t); ) ++e;
  return e;
}
function Um(t) {
  return hm(t) ? mze(t) : sze(t);
}
var Sze = Math.ceil;
function ww(t, e) {
  e = e === void 0 ? " " : Si(e);
  var n = e.length;
  if (n < 2) return n ? hH(e, t) : e;
  var r = hH(e, Sze(t / Um(e)));
  return hm(e) ? cd(Ho(r), 0, t).join("") : r.slice(0, t);
}
var yze = Math.ceil,
  gze = Math.floor;
function aie(t, e, n) {
  (t = zn(t)), (e = pn(e));
  var r = e ? Um(t) : 0;
  if (!e || r >= e) return t;
  var a = (e - r) / 2;
  return ww(gze(a), n) + t + ww(yze(a), n);
}
function iie(t, e, n) {
  (t = zn(t)), (e = pn(e));
  var r = e ? Um(t) : 0;
  return e && r < e ? t + ww(e - r, n) : t;
}
function oie(t, e, n) {
  (t = zn(t)), (e = pn(e));
  var r = e ? Um(t) : 0;
  return e && r < e ? ww(e - r, n) + t : t;
}
var vze = /^\s+/,
  _ze = Or.parseInt;
function uie(t, e, n) {
  return (
    n || e == null ? (e = 0) : e && (e = +e),
    _ze(zn(t).replace(vze, ""), e || 0)
  );
}
var bze = 64,
  e3 = In(function (t, e) {
    var n = qc(e, Om(e3));
    return Rl(t, bze, void 0, e, n);
  });
e3.placeholder = {};
const lie = e3;
var Eze = PP(
  function (t, e, n) {
    t[n ? 0 : 1].push(e);
  },
  function () {
    return [[], []];
  }
);
const Go = Eze;
function Tze(t, e) {
  return Ise(t, e, function (n, r) {
    return N0(t, r);
  });
}
var wze = kl(function (t, e) {
  return t == null ? {} : Tze(t, e);
});
const Ug = wze;
function SH(t) {
  for (var e, n = this; n instanceof gP; ) {
    var r = yX(n);
    (r.__index__ = 0),
      (r.__values__ = void 0),
      e ? (a.__wrapped__ = r) : (e = r);
    var a = r;
    n = n.__wrapped__;
  }
  return (a.__wrapped__ = t), e;
}
function cie(t) {
  return function (e) {
    return t == null ? void 0 : Ip(t, e);
  };
}
function Pze(t, e, n, r) {
  for (var a = n - 1, s = t.length; ++a < s; ) if (r(t[a], e)) return a;
  return -1;
}
var Ize = Array.prototype,
  Y5 = Ize.splice;
function t3(t, e, n, r) {
  var a = r ? Pze : mm,
    s = -1,
    i = e.length,
    o = t;
  for (t === e && (e = Ua(e)), n && (o = ks(t, mi(n))); ++s < i; )
    for (var u = 0, l = e[s], c = n ? n(l) : l; (u = a(o, c, u, r)) > -1; )
      o !== t && Y5.call(o, u, 1), Y5.call(t, u, 1);
  return t;
}
function n3(t, e) {
  return t && t.length && e && e.length ? t3(t, e) : t;
}
var Cze = In(n3);
const die = Cze;
function pie(t, e, n) {
  return t && t.length && e && e.length ? t3(t, e, on(n)) : t;
}
function hie(t, e, n) {
  return t && t.length && e && e.length ? t3(t, e, void 0, n) : t;
}
var Aze = Array.prototype,
  Oze = Aze.splice;
function fie(t, e) {
  for (var n = t ? e.length : 0, r = n - 1; n--; ) {
    var a = e[n];
    if (n == r || a !== s) {
      var s = a;
      Pl(a) ? Oze.call(t, a, 1) : M2(t, a);
    }
  }
  return t;
}
var Hze = kl(function (t, e) {
  var n = t == null ? 0 : t.length,
    r = g6(t, e);
  return (
    fie(
      t,
      ks(e, function (a) {
        return Pl(a, n) ? +a : a;
      }).sort(Wae)
    ),
    r
  );
});
const mie = Hze;
var Nze = Math.floor,
  Rze = Math.random;
function s3(t, e) {
  return t + Nze(Rze() * (e - t + 1));
}
var kze = parseFloat,
  xze = Math.min,
  Lze = Math.random;
function Sie(t, e, n) {
  if (
    (n && typeof n != "boolean" && Ta(t, e, n) && (e = n = void 0),
    n === void 0 &&
      (typeof e == "boolean"
        ? ((n = e), (e = void 0))
        : typeof t == "boolean" && ((n = t), (t = void 0))),
    t === void 0 && e === void 0
      ? ((t = 0), (e = 1))
      : ((t = uu(t)), e === void 0 ? ((e = t), (t = 0)) : (e = uu(e))),
    t > e)
  ) {
    var r = t;
    (t = e), (e = r);
  }
  if (n || t % 1 || e % 1) {
    var a = Lze();
    return xze(t + a * (e - t + kze("1e-" + ((a + "").length - 1))), e);
  }
  return s3(t, e);
}
var Mze = Math.ceil,
  Dze = Math.max;
function Gze(t, e, n, r) {
  for (var a = -1, s = Dze(Mze((e - t) / (n || 1)), 0), i = Array(s); s--; )
    (i[r ? s : ++a] = t), (t += n);
  return i;
}
function yie(t) {
  return function (e, n, r) {
    return (
      r && typeof r != "number" && Ta(e, n, r) && (n = r = void 0),
      (e = uu(e)),
      n === void 0 ? ((n = e), (e = 0)) : (n = uu(n)),
      (r = r === void 0 ? (e < n ? 1 : -1) : uu(r)),
      Gze(e, n, r, t)
    );
  };
}
var Fze = yie();
const gie = Fze;
var Uze = yie(!0);
const vie = Uze;
var Kze = 256,
  Bze = kl(function (t, e) {
    return Rl(t, Kze, void 0, void 0, void 0, e);
  });
const _ie = Bze;
function bie(t, e, n, r, a) {
  return (
    a(t, function (s, i, o) {
      n = r ? ((r = !1), s) : e(n, s, i, o);
    }),
    n
  );
}
function Eie(t, e, n) {
  var r = an(t) ? P6 : bie,
    a = arguments.length < 3;
  return r(t, on(e), n, a, od);
}
function Vze(t, e, n, r) {
  var a = t == null ? 0 : t.length;
  for (r && a && (n = t[--a]); a--; ) n = e(n, t[a], a, t);
  return n;
}
function Tie(t, e, n) {
  var r = an(t) ? Vze : bie,
    a = arguments.length < 3;
  return r(t, on(e), n, a, vre);
}
function wie(t, e) {
  var n = an(t) ? id : qj;
  return n(t, Lm(on(e)));
}
function Xu(t, e) {
  var n = [];
  if (!(t && t.length)) return n;
  var r = -1,
    a = [],
    s = t.length;
  for (e = on(e); ++r < s; ) {
    var i = t[r];
    e(i, r, t) && (n.push(i), a.push(r));
  }
  return fie(t, a), n;
}
function Pie(t, e, n) {
  return (n ? Ta(t, e, n) : e === void 0) ? (e = 1) : (e = pn(e)), hH(zn(t), e);
}
function Iie() {
  var t = arguments,
    e = zn(t[0]);
  return t.length < 3 ? e : e.replace(t[1], t[2]);
}
var jze = "Expected a function";
function Cie(t, e) {
  if (typeof t != "function") throw new TypeError(jze);
  return (e = e === void 0 ? e : pn(e)), In(t, e);
}
function Aie(t, e, n) {
  e = ld(e, t);
  var r = -1,
    a = e.length;
  for (a || ((a = 1), (t = void 0)); ++r < a; ) {
    var s = t == null ? void 0 : t[Pu(e[r])];
    s === void 0 && ((r = a), (s = n)), (t = Tu(s) ? s.call(t) : s);
  }
  return t;
}
var zze = Array.prototype,
  $ze = zze.reverse;
function Pw(t) {
  return t == null ? t : $ze.call(t);
}
var Wze = O6("round");
const Oie = Wze;
function Hie(t) {
  var e = t.length;
  return e ? t[s3(0, e - 1)] : void 0;
}
function qze(t) {
  return Hie(Fp(t));
}
function Nie(t) {
  var e = an(t) ? Hie : qze;
  return e(t);
}
function eI(t, e) {
  var n = -1,
    r = t.length,
    a = r - 1;
  for (e = e === void 0 ? r : e; ++n < e; ) {
    var s = s3(n, a),
      i = t[s];
    (t[s] = t[n]), (t[n] = i);
  }
  return (t.length = e), t;
}
function Yze(t, e) {
  return eI(Ua(t), Gp(e, 0, t.length));
}
function Xze(t, e) {
  var n = Fp(t);
  return eI(n, Gp(e, 0, n.length));
}
function Rie(t, e, n) {
  (n ? Ta(t, e, n) : e === void 0) ? (e = 1) : (e = pn(e));
  var r = an(t) ? Yze : Xze;
  return r(t, e);
}
function Kg(t, e, n) {
  return t == null ? t : Qv(t, e, n);
}
function kie(t, e, n, r) {
  return (
    (r = typeof r == "function" ? r : void 0), t == null ? t : Qv(t, e, n, r)
  );
}
function Qze(t) {
  return eI(Ua(t));
}
function Jze(t) {
  return eI(Fp(t));
}
function xie(t) {
  var e = an(t) ? Qze : Jze;
  return e(t);
}
var Zze = "[object Map]",
  e$e = "[object Set]";
function Lie(t) {
  if (t == null) return 0;
  if (Pa(t)) return Fm(t) ? Um(t) : t.length;
  var e = Su(t);
  return e == Zze || e == e$e ? t.size : IR(t).length;
}
function Mie(t, e, n) {
  var r = t == null ? 0 : t.length;
  return r
    ? (n && typeof n != "number" && Ta(t, e, n)
        ? ((e = 0), (n = r))
        : ((e = e == null ? 0 : pn(e)), (n = n === void 0 ? r : pn(n))),
      ji(t, e, n))
    : [];
}
var t$e = Dm(function (t, e, n) {
  return t + (n ? "_" : "") + e.toLowerCase();
});
const r3 = t$e;
function n$e(t, e) {
  var n;
  return (
    od(t, function (r, a, s) {
      return (n = e(r, a, s)), !n;
    }),
    !!n
  );
}
function Die(t, e, n) {
  var r = an(t) ? CR : n$e;
  return n && Ta(t, e, n) && (e = void 0), r(t, on(e));
}
var s$e = In(function (t, e) {
  if (t == null) return [];
  var n = e.length;
  return (
    n > 1 && Ta(t, e[0], e[1])
      ? (e = [])
      : n > 2 && Ta(e[0], e[1], e[2]) && (e = [e[0]]),
    qae(t, Dr(e, 1), [])
  );
});
const tI = s$e;
var r$e = 4294967295,
  a$e = r$e - 1,
  i$e = Math.floor,
  o$e = Math.min;
function a3(t, e, n, r) {
  var a = 0,
    s = t == null ? 0 : t.length;
  if (s === 0) return 0;
  e = n(e);
  for (var i = e !== e, o = e === null, u = za(e), l = e === void 0; a < s; ) {
    var c = i$e((a + s) / 2),
      d = n(t[c]),
      p = d !== void 0,
      m = d === null,
      y = d === d,
      I = za(d);
    if (i) var O = r || y;
    else
      l
        ? (O = y && (r || p))
        : o
        ? (O = y && p && (r || !m))
        : u
        ? (O = y && p && !m && (r || !I))
        : m || I
        ? (O = !1)
        : (O = r ? d <= e : d < e);
    O ? (a = c + 1) : (s = c);
  }
  return o$e(s, a$e);
}
var u$e = 4294967295,
  l$e = u$e >>> 1;
function nI(t, e, n) {
  var r = 0,
    a = t == null ? r : t.length;
  if (typeof e == "number" && e === e && a <= l$e) {
    for (; r < a; ) {
      var s = (r + a) >>> 1,
        i = t[s];
      i !== null && !za(i) && (n ? i <= e : i < e) ? (r = s + 1) : (a = s);
    }
    return a;
  }
  return a3(t, e, Ys, n);
}
function Gie(t, e) {
  return nI(t, e);
}
function Fie(t, e, n) {
  return a3(t, e, on(n));
}
function Uie(t, e) {
  var n = t == null ? 0 : t.length;
  if (n) {
    var r = nI(t, e);
    if (r < n && qi(t[r], e)) return r;
  }
  return -1;
}
function Kie(t, e) {
  return nI(t, e, !0);
}
function Bie(t, e, n) {
  return a3(t, e, on(n), !0);
}
function Vie(t, e) {
  var n = t == null ? 0 : t.length;
  if (n) {
    var r = nI(t, e, !0) - 1;
    if (qi(t[r], e)) return r;
  }
  return -1;
}
function jie(t, e) {
  for (var n = -1, r = t.length, a = 0, s = []; ++n < r; ) {
    var i = t[n],
      o = e ? e(i) : i;
    if (!n || !qi(o, u)) {
      var u = o;
      s[a++] = i === 0 ? 0 : i;
    }
  }
  return s;
}
function zie(t) {
  return t && t.length ? jie(t) : [];
}
function i3(t, e) {
  return t && t.length ? jie(t, on(e)) : [];
}
var c$e = 4294967295;
function $ie(t, e, n) {
  return (
    n && typeof n != "number" && Ta(t, e, n) && (e = n = void 0),
    (n = n === void 0 ? c$e : n >>> 0),
    n
      ? ((t = zn(t)),
        t &&
        (typeof e == "string" || (e != null && !JP(e))) &&
        ((e = Si(e)), !e && hm(t))
          ? cd(Ho(t), 0, n)
          : t.split(e, n))
      : []
  );
}
var d$e = "Expected a function",
  p$e = Math.max;
function Wie(t, e) {
  if (typeof t != "function") throw new TypeError(d$e);
  return (
    (e = e == null ? 0 : p$e(pn(e), 0)),
    In(function (n) {
      var r = n[e],
        a = cd(n, 0, e);
      return r && ud(a, r), yi(t, this, a);
    })
  );
}
var h$e = Dm(function (t, e, n) {
  return t + (n ? " " : "") + Ev(e);
});
const qie = h$e;
function Yie(t, e, n) {
  return (
    (t = zn(t)),
    (n = n == null ? 0 : Gp(pn(n), 0, t.length)),
    (e = Si(e)),
    t.slice(n, n + e.length) == e
  );
}
function Xie() {
  return {};
}
function Qie() {
  return "";
}
function Bg() {
  return !0;
}
var f$e = VP(function (t, e) {
  return t - e;
}, 0);
const Jie = f$e;
function o3(t) {
  return t && t.length ? q2(t, Ys) : 0;
}
function Zie(t) {
  var e = t == null ? 0 : t.length;
  return e ? ji(t, 1, e) : [];
}
function u3(t, e, n) {
  return t && t.length
    ? ((e = n || e === void 0 ? 1 : pn(e)), ji(t, 0, e < 0 ? 0 : e))
    : [];
}
function eoe(t, e, n) {
  var r = t == null ? 0 : t.length;
  return r
    ? ((e = n || e === void 0 ? 1 : pn(e)),
      (e = r - e),
      ji(t, e < 0 ? 0 : e, r))
    : [];
}
function toe(t, e) {
  return t && t.length ? YP(t, on(e), !1, !0) : [];
}
function noe(t, e) {
  return t && t.length ? YP(t, on(e)) : [];
}
function soe(t, e) {
  return e(t), t;
}
var roe = Object.prototype,
  m$e = roe.hasOwnProperty;
function X5(t, e, n, r) {
  return t === void 0 || (qi(t, roe[n]) && !m$e.call(r, n)) ? e : t;
}
var S$e = {
  "\\": "\\",
  "'": "'",
  "\n": "n",
  "\r": "r",
  "\u2028": "u2028",
  "\u2029": "u2029",
};
function y$e(t) {
  return "\\" + S$e[t];
}
var g$e = /<%=([\s\S]+?)%>/g;
const aoe = g$e;
var v$e = /<%-([\s\S]+?)%>/g;
const _$e = v$e;
var b$e = /<%([\s\S]+?)%>/g;
const E$e = b$e;
var T$e = {
  escape: _$e,
  evaluate: E$e,
  interpolate: aoe,
  variable: "",
  imports: { _: { escape: D6 } },
};
const Iw = T$e;
var w$e = "Invalid `variable` option passed into `_.template`",
  P$e = /\b__p \+= '';/g,
  I$e = /\b(__p \+=) '' \+/g,
  C$e = /(__e\(.*?\)|\b__t\)) \+\n'';/g,
  A$e = /[()=,{}\[\]\/\s]/,
  O$e = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,
  ob = /($^)/,
  H$e = /['\n\r\u2028\u2029\\]/g,
  N$e = Object.prototype,
  Q5 = N$e.hasOwnProperty;
function ioe(t, e, n) {
  var r = Iw.imports._.templateSettings || Iw;
  n && Ta(t, e, n) && (e = void 0), (t = zn(t)), (e = Yf({}, e, r, X5));
  var a = Yf({}, e.imports, r.imports, X5),
    s = dr(a),
    i = V6(a, s),
    o,
    u,
    l = 0,
    c = e.interpolate || ob,
    d = "__p += '",
    p = RegExp(
      (e.escape || ob).source +
        "|" +
        c.source +
        "|" +
        (c === aoe ? O$e : ob).source +
        "|" +
        (e.evaluate || ob).source +
        "|$",
      "g"
    ),
    m = Q5.call(e, "sourceURL")
      ? "//# sourceURL=" +
        (e.sourceURL + "").replace(/\s/g, " ") +
        `
`
      : "";
  t.replace(p, function (O, g, C, H, B, he) {
    return (
      C || (C = H),
      (d += t.slice(l, he).replace(H$e, y$e)),
      g &&
        ((o = !0),
        (d +=
          `' +
__e(` +
          g +
          `) +
'`)),
      B &&
        ((u = !0),
        (d +=
          `';
` +
          B +
          `;
__p += '`)),
      C &&
        (d +=
          `' +
((__t = (` +
          C +
          `)) == null ? '' : __t) +
'`),
      (l = he + O.length),
      O
    );
  }),
    (d += `';
`);
  var y = Q5.call(e, "variable") && e.variable;
  if (!y)
    d =
      `with (obj) {
` +
      d +
      `
}
`;
  else if (A$e.test(y)) throw new Error(w$e);
  (d = (u ? d.replace(P$e, "") : d).replace(I$e, "$1").replace(C$e, "$1;")),
    (d =
      "function(" +
      (y || "obj") +
      `) {
` +
      (y
        ? ""
        : `obj || (obj = {});
`) +
      "var __t, __p = ''" +
      (o ? ", __e = _.escape" : "") +
      (u
        ? `, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
`
        : `;
`) +
      d +
      `return __p
}`);
  var I = v6(function () {
    return Function(s, m + "return " + d).apply(void 0, i);
  });
  if (((I.source = d), jP(I))) throw I;
  return I;
}
function Km(t, e) {
  return e(t);
}
var R$e = 9007199254740991,
  TA = 4294967295,
  k$e = Math.min;
function ooe(t, e) {
  if (((t = pn(t)), t < 1 || t > R$e)) return [];
  var n = TA,
    r = k$e(t, TA);
  (e = Au(e)), (t -= TA);
  for (var a = PR(r, e); ++n < t; ) e(n);
  return a;
}
function yH() {
  return this;
}
function uoe(t, e) {
  var n = t;
  return (
    n instanceof Rn && (n = n.value()),
    P6(
      e,
      function (r, a) {
        return a.func.apply(a.thisArg, ud([r], a.args));
      },
      n
    )
  );
}
function Ud() {
  return uoe(this.__wrapped__, this.__actions__);
}
function loe(t) {
  return zn(t).toLowerCase();
}
function coe(t) {
  return an(t) ? ks(t, Pu) : za(t) ? [t] : Ua(tz(zn(t)));
}
var J5 = 9007199254740991;
function doe(t) {
  return t ? Gp(pn(t), -J5, J5) : t === 0 ? t : 0;
}
function poe(t) {
  return zn(t).toUpperCase();
}
function hoe(t, e, n) {
  var r = an(t),
    a = r || dl(t) || Tp(t);
  if (((e = on(e)), n == null)) {
    var s = t && t.constructor;
    a
      ? (n = r ? new s() : [])
      : ws(t)
      ? (n = Tu(s) ? Am(g0(t)) : {})
      : (n = {});
  }
  return (
    (a ? Yi : wu)(t, function (i, o, u) {
      return e(n, i, o, u);
    }),
    n
  );
}
function foe(t, e) {
  for (var n = t.length; n-- && mm(e, t[n], 0) > -1; );
  return n;
}
function moe(t, e) {
  for (var n = -1, r = t.length; ++n < r && mm(e, t[n], 0) > -1; );
  return n;
}
function Soe(t, e, n) {
  if (((t = zn(t)), t && (n || e === void 0))) return EX(t);
  if (!t || !(e = Si(e))) return t;
  var r = Ho(t),
    a = Ho(e),
    s = moe(r, a),
    i = foe(r, a) + 1;
  return cd(r, s, i).join("");
}
function yoe(t, e, n) {
  if (((t = zn(t)), t && (n || e === void 0))) return t.slice(0, bX(t) + 1);
  if (!t || !(e = Si(e))) return t;
  var r = Ho(t),
    a = foe(r, Ho(e)) + 1;
  return cd(r, 0, a).join("");
}
var x$e = /^\s+/;
function goe(t, e, n) {
  if (((t = zn(t)), t && (n || e === void 0))) return t.replace(x$e, "");
  if (!t || !(e = Si(e))) return t;
  var r = Ho(t),
    a = moe(r, Ho(e));
  return cd(r, a).join("");
}
var L$e = 30,
  M$e = "...",
  D$e = /\w*$/;
function voe(t, e) {
  var n = L$e,
    r = M$e;
  if (ws(e)) {
    var a = "separator" in e ? e.separator : a;
    (n = "length" in e ? pn(e.length) : n),
      (r = "omission" in e ? Si(e.omission) : r);
  }
  t = zn(t);
  var s = t.length;
  if (hm(t)) {
    var i = Ho(t);
    s = i.length;
  }
  if (n >= s) return t;
  var o = n - Um(r);
  if (o < 1) return r;
  var u = i ? cd(i, 0, o).join("") : t.slice(0, o);
  if (a === void 0) return u + r;
  if ((i && (o += u.length - o), JP(a))) {
    if (t.slice(o).search(a)) {
      var l,
        c = u;
      for (
        a.global || (a = RegExp(a.source, zn(D$e.exec(a)) + "g")),
          a.lastIndex = 0;
        (l = a.exec(c));

      )
        var d = l.index;
      u = u.slice(0, d === void 0 ? o : d);
    }
  } else if (t.indexOf(Si(a), o) != o) {
    var p = u.lastIndexOf(a);
    p > -1 && (u = u.slice(0, p));
  }
  return u + r;
}
function _oe(t) {
  return y6(t, 1);
}
var G$e = {
    "&amp;": "&",
    "&lt;": "<",
    "&gt;": ">",
    "&quot;": '"',
    "&#39;": "'",
  },
  F$e = I6(G$e);
const U$e = F$e;
var boe = /&(?:amp|lt|gt|quot|#39);/g,
  K$e = RegExp(boe.source);
function Eoe(t) {
  return (t = zn(t)), t && K$e.test(t) ? t.replace(boe, U$e) : t;
}
var B$e = In(function (t) {
  var e = Ar(t);
  return Js(e) && (e = void 0), zc(Dr(t, 1, Js, !0), on(e));
});
const Toe = B$e;
var V$e = In(function (t) {
  var e = Ar(t);
  return (
    (e = typeof e == "function" ? e : void 0), zc(Dr(t, 1, Js, !0), void 0, e)
  );
});
const woe = V$e;
function n_(t, e) {
  return t && t.length ? zc(t, on(e)) : [];
}
var j$e = 0;
function xd(t) {
  var e = ++j$e;
  return zn(t) + e;
}
function Poe(t, e) {
  return t == null ? !0 : M2(t, e);
}
var z$e = Math.max;
function sI(t) {
  if (!(t && t.length)) return [];
  var e = 0;
  return (
    (t = id(t, function (n) {
      if (Js(n)) return (e = z$e(n.length, e)), !0;
    })),
    PR(e, function (n) {
      return ks(t, kR(n));
    })
  );
}
function l3(t, e) {
  if (!(t && t.length)) return [];
  var n = sI(t);
  return e == null
    ? n
    : ks(n, function (r) {
        return yi(e, void 0, r);
      });
}
function Ioe(t, e, n, r) {
  return Qv(t, e, n(Ip(t, e)), r);
}
function Coe(t, e, n) {
  return t == null ? t : Ioe(t, e, Au(n));
}
function Aoe(t, e, n, r) {
  return (
    (r = typeof r == "function" ? r : void 0),
    t == null ? t : Ioe(t, e, Au(n), r)
  );
}
var $$e = Dm(function (t, e, n) {
  return t + (n ? " " : "") + e.toUpperCase();
});
const Ooe = $$e;
function Hoe(t) {
  return t == null ? [] : V6(t, Aa(t));
}
var W$e = In(function (t, e) {
  return Js(t) ? e_(t, e) : [];
});
const Vg = W$e;
var q$e = kl(function (t) {
  var e = t.length,
    n = e ? t[0] : 0,
    r = this.__wrapped__,
    a = function (s) {
      return g6(s, t);
    };
  return e > 1 || this.__actions__.length || !(r instanceof Rn) || !Pl(n)
    ? this.thru(a)
    : ((r = r.slice(n, +n + (e ? 1 : 0))),
      r.__actions__.push({ func: Km, args: [a], thisArg: void 0 }),
      new zi(r, this.__chain__).thru(function (s) {
        return e && !s.length && s.push(void 0), s;
      }));
});
const Noe = q$e;
function Roe() {
  return H6(this);
}
function koe() {
  var t = this.__wrapped__;
  if (t instanceof Rn) {
    var e = t;
    return (
      this.__actions__.length && (e = new Rn(this)),
      (e = e.reverse()),
      e.__actions__.push({ func: Km, args: [Pw], thisArg: void 0 }),
      new zi(e, this.__chain__)
    );
  }
  return this.thru(Pw);
}
function c3(t, e, n) {
  var r = t.length;
  if (r < 2) return r ? zc(t[0]) : [];
  for (var a = -1, s = Array(r); ++a < r; )
    for (var i = t[a], o = -1; ++o < r; )
      o != a && (s[a] = e_(s[a] || i, t[o], e, n));
  return zc(Dr(s, 1), e, n);
}
var Y$e = In(function (t) {
  return c3(id(t, Js));
});
const xoe = Y$e;
var X$e = In(function (t) {
  var e = Ar(t);
  return Js(e) && (e = void 0), c3(id(t, Js), on(e));
});
const Loe = X$e;
var Q$e = In(function (t) {
  var e = Ar(t);
  return (e = typeof e == "function" ? e : void 0), c3(id(t, Js), void 0, e);
});
const Moe = Q$e;
var J$e = In(sI);
const Doe = J$e;
function Goe(t, e, n) {
  for (var r = -1, a = t.length, s = e.length, i = {}; ++r < a; ) {
    var o = r < s ? e[r] : void 0;
    n(i, t[r], o);
  }
  return i;
}
function Foe(t, e) {
  return Goe(t || [], e || [], jv);
}
function Uoe(t, e) {
  return Goe(t || [], e || [], Qv);
}
var Z$e = In(function (t) {
  var e = t.length,
    n = e > 1 ? t[e - 1] : void 0;
  return (n = typeof n == "function" ? (t.pop(), n) : void 0), l3(t, n);
});
const Koe = Z$e,
  Lt = {
    chunk: Xse,
    compact: m6,
    concat: Zse,
    difference: L6,
    differenceBy: gw,
    differenceWith: qP,
    drop: fre,
    dropRight: mre,
    dropRightWhile: Sre,
    dropWhile: yre,
    fill: Cre,
    findIndex: F6,
    findLastIndex: U6,
    first: Ew,
    flatten: IP,
    flattenDeep: Dre,
    flattenDepth: Gre,
    fromPairs: Wre,
    head: Ew,
    indexOf: eae,
    initial: tae,
    intersection: Tw,
    intersectionBy: $6,
    intersectionWith: nae,
    join: wae,
    last: Ar,
    lastIndexOf: Cae,
    nth: jae,
    pull: die,
    pullAll: n3,
    pullAllBy: pie,
    pullAllWith: hie,
    pullAt: mie,
    remove: Xu,
    reverse: Pw,
    slice: Mie,
    sortedIndex: Gie,
    sortedIndexBy: Fie,
    sortedIndexOf: Uie,
    sortedLastIndex: Kie,
    sortedLastIndexBy: Bie,
    sortedLastIndexOf: Vie,
    sortedUniq: zie,
    sortedUniqBy: i3,
    tail: Zie,
    take: u3,
    takeRight: eoe,
    takeRightWhile: toe,
    takeWhile: noe,
    union: N2,
    unionBy: Toe,
    unionWith: woe,
    uniq: xf,
    uniqBy: n_,
    uniqWith: H2,
    unzip: sI,
    unzipWith: l3,
    without: Vg,
    xor: xoe,
    xorBy: Loe,
    xorWith: Moe,
    zip: Doe,
    zipObject: Foe,
    zipObjectDeep: Uoe,
    zipWith: Koe,
  },
  rs = {
    countBy: rre,
    each: il,
    eachRight: vw,
    every: Ire,
    filter: Th,
    find: Xf,
    findLast: Nre,
    flatMap: xre,
    flatMapDeep: Lre,
    flatMapDepth: Mre,
    forEach: il,
    forEachRight: vw,
    groupBy: Vv,
    includes: Zre,
    invokeMap: uae,
    keyBy: Iae,
    map: Gm,
    orderBy: ZP,
    partition: Go,
    reduce: Eie,
    reduceRight: Tie,
    reject: wie,
    sample: Nie,
    sampleSize: Rie,
    shuffle: xie,
    size: Lie,
    some: Die,
    sortBy: tI,
  },
  eWe = { now: Oy },
  tr = {
    after: Ose,
    ary: y6,
    before: _6,
    bind: E6,
    bindKey: kse,
    curry: zP,
    curryRight: $P,
    debounce: p6,
    defer: dre,
    delay: pre,
    flip: Fre,
    memoize: _v,
    negate: Lm,
    once: $ae,
    overArgs: Xae,
    partial: g2,
    partialRight: lie,
    rearg: _ie,
    rest: Cie,
    spread: Wie,
    throttle: h6,
    unary: _oe,
    wrap: v2,
  },
  jt = {
    castArray: qse,
    clone: R6,
    cloneDeep: xl,
    cloneDeepWith: Qse,
    cloneWith: Jse,
    conformsTo: sre,
    eq: qi,
    gt: Xre,
    gte: Qre,
    isArguments: Fc,
    isArray: an,
    isArrayBuffer: lae,
    isArrayLike: Pa,
    isArrayLikeObject: Js,
    isBoolean: cae,
    isBuffer: dl,
    isDate: dae,
    isElement: pae,
    isEmpty: Zu,
    isEqual: si,
    isEqualWith: hae,
    isError: jP,
    isFinite: fae,
    isFunction: Tu,
    isInteger: W6,
    isLength: yv,
    isMap: x2,
    isMatch: mae,
    isMatchWith: Sae,
    isNaN: yae,
    isNative: gae,
    isNil: vae,
    isNull: q6,
    isNumber: Oc,
    isObject: ws,
    isObjectLike: Bs,
    isPlainObject: ad,
    isRegExp: JP,
    isSafeInteger: _ae,
    isSet: L2,
    isString: Fm,
    isSymbol: za,
    isTypedArray: Tp,
    isUndefined: Xv,
    isWeakMap: bae,
    isWeakSet: Eae,
    lt: Hae,
    lte: Nae,
    toArray: J6,
    toFinite: uu,
    toInteger: pn,
    toLength: G6,
    toNumber: di,
    toPlainObject: k6,
    toSafeInteger: doe,
    toString: zn,
  },
  Ha = {
    add: Ase,
    ceil: Yse,
    divide: hre,
    floor: Ure,
    max: xae,
    maxBy: FP,
    mean: Mae,
    meanBy: Dae,
    min: Uae,
    minBy: Kae,
    multiply: Bae,
    round: Oie,
    subtract: Jie,
    sum: o3,
    sumBy: Y2,
  },
  d3 = { clamp: N6, inRange: Jre, random: Sie },
  nn = {
    assign: kh,
    assignIn: qf,
    assignInWith: Yf,
    assignWith: Hse,
    at: Nse,
    create: are,
    defaults: ore,
    defaultsDeep: lre,
    entries: _w,
    entriesIn: bw,
    extend: qf,
    extendWith: Yf,
    findKey: Hre,
    findLastKey: Rre,
    forIn: jre,
    forInRight: zre,
    forOwn: K6,
    forOwnRight: $re,
    functions: qre,
    functionsIn: Yre,
    get: bv,
    has: B6,
    hasIn: N0,
    invert: rae,
    invertBy: iae,
    invoke: oae,
    keys: dr,
    keysIn: Aa,
    mapKeys: X6,
    mapValues: Nl,
    merge: Yr,
    mergeWith: x6,
    omit: zv,
    omitBy: BP,
    pick: Ug,
    pickBy: Jv,
    result: Aie,
    set: Kg,
    setWith: kie,
    toPairs: _w,
    toPairsIn: bw,
    transform: hoe,
    unset: Poe,
    update: Coe,
    updateWith: Aoe,
    values: Fp,
    valuesIn: Hoe,
  },
  Hu = {
    at: Noe,
    chain: H6,
    commit: lH,
    lodash: fe,
    next: pH,
    plant: SH,
    reverse: koe,
    tap: soe,
    thru: Km,
    toIterator: yH,
    toJSON: Ud,
    value: Ud,
    valueOf: Ud,
    wrapperChain: Roe,
  },
  $n = {
    camelCase: Wse,
    capitalize: w6,
    deburr: C6,
    endsWith: _re,
    escape: D6,
    escapeRegExp: wre,
    kebabCase: Pae,
    lowerCase: Aae,
    lowerFirst: Oae,
    pad: aie,
    padEnd: iie,
    padStart: oie,
    parseInt: uie,
    repeat: Pie,
    replace: Iie,
    snakeCase: r3,
    split: $ie,
    startCase: qie,
    startsWith: Yie,
    template: ioe,
    templateSettings: Iw,
    toLower: loe,
    toUpper: poe,
    trim: Soe,
    trimEnd: yoe,
    trimStart: goe,
    truncate: voe,
    unescape: Eoe,
    upperCase: Ooe,
    upperFirst: Ev,
    words: A6,
  },
  Xn = {
    attempt: v6,
    bindAll: Rse,
    cond: ere,
    conforms: nre,
    constant: yP,
    defaultTo: zu,
    flow: Bre,
    flowRight: Vre,
    identity: Ys,
    iteratee: Tae,
    matches: Rae,
    matchesProperty: kae,
    method: Gae,
    methodOf: Fae,
    mixin: Q6,
    noop: Cf,
    nthArg: zae,
    over: Yae,
    overEvery: Qae,
    overSome: Jae,
    property: xR,
    propertyOf: cie,
    range: gie,
    rangeRight: vie,
    stubArray: H0,
    stubFalse: pm,
    stubObject: Xie,
    stubString: Qie,
    stubTrue: Bg,
    times: ooe,
    toPath: coe,
    uniqueId: xd,
  };
function tWe() {
  var t = new Rn(this.__wrapped__);
  return (
    (t.__actions__ = Ua(this.__actions__)),
    (t.__dir__ = this.__dir__),
    (t.__filtered__ = this.__filtered__),
    (t.__iteratees__ = Ua(this.__iteratees__)),
    (t.__takeCount__ = this.__takeCount__),
    (t.__views__ = Ua(this.__views__)),
    t
  );
}
function nWe() {
  if (this.__filtered__) {
    var t = new Rn(this);
    (t.__dir__ = -1), (t.__filtered__ = !0);
  } else (t = this.clone()), (t.__dir__ *= -1);
  return t;
}
var sWe = Math.max,
  rWe = Math.min;
function aWe(t, e, n) {
  for (var r = -1, a = n.length; ++r < a; ) {
    var s = n[r],
      i = s.size;
    switch (s.type) {
      case "drop":
        t += i;
        break;
      case "dropRight":
        e -= i;
        break;
      case "take":
        e = rWe(e, t + i);
        break;
      case "takeRight":
        t = sWe(t, e - i);
        break;
    }
  }
  return { start: t, end: e };
}
var iWe = 1,
  oWe = 2,
  uWe = Math.min;
function lWe() {
  var t = this.__wrapped__.value(),
    e = this.__dir__,
    n = an(t),
    r = e < 0,
    a = n ? t.length : 0,
    s = aWe(0, a, this.__views__),
    i = s.start,
    o = s.end,
    u = o - i,
    l = r ? o : i - 1,
    c = this.__iteratees__,
    d = c.length,
    p = 0,
    m = uWe(u, this.__takeCount__);
  if (!n || (!r && a == u && m == u)) return uoe(t, this.__actions__);
  var y = [];
  e: for (; u-- && p < m; ) {
    l += e;
    for (var I = -1, O = t[l]; ++I < d; ) {
      var g = c[I],
        C = g.iteratee,
        H = g.type,
        B = C(O);
      if (H == oWe) O = B;
      else if (!B) {
        if (H == iWe) continue e;
        break e;
      }
    }
    y[p++] = O;
  }
  return y;
}
/**
 * @license
 * Lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="es" -o ./`
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */ var cWe = "4.17.21",
  dWe = 2,
  pWe = 1,
  hWe = 3,
  Boe = 4294967295,
  fWe = Array.prototype,
  mWe = Object.prototype,
  Voe = mWe.hasOwnProperty,
  Z5 = sa ? sa.iterator : void 0,
  SWe = Math.max,
  eU = Math.min,
  p3 = (function (t) {
    return function (e, n, r) {
      if (r == null) {
        var a = ws(n),
          s = a && dr(n),
          i = s && s.length && XP(n, s);
        (i ? i.length : a) || ((r = n), (n = e), (e = this));
      }
      return t(e, n, r);
    };
  })(Q6);
fe.after = tr.after;
fe.ary = tr.ary;
fe.assign = nn.assign;
fe.assignIn = nn.assignIn;
fe.assignInWith = nn.assignInWith;
fe.assignWith = nn.assignWith;
fe.at = nn.at;
fe.before = tr.before;
fe.bind = tr.bind;
fe.bindAll = Xn.bindAll;
fe.bindKey = tr.bindKey;
fe.castArray = jt.castArray;
fe.chain = Hu.chain;
fe.chunk = Lt.chunk;
fe.compact = Lt.compact;
fe.concat = Lt.concat;
fe.cond = Xn.cond;
fe.conforms = Xn.conforms;
fe.constant = Xn.constant;
fe.countBy = rs.countBy;
fe.create = nn.create;
fe.curry = tr.curry;
fe.curryRight = tr.curryRight;
fe.debounce = tr.debounce;
fe.defaults = nn.defaults;
fe.defaultsDeep = nn.defaultsDeep;
fe.defer = tr.defer;
fe.delay = tr.delay;
fe.difference = Lt.difference;
fe.differenceBy = Lt.differenceBy;
fe.differenceWith = Lt.differenceWith;
fe.drop = Lt.drop;
fe.dropRight = Lt.dropRight;
fe.dropRightWhile = Lt.dropRightWhile;
fe.dropWhile = Lt.dropWhile;
fe.fill = Lt.fill;
fe.filter = rs.filter;
fe.flatMap = rs.flatMap;
fe.flatMapDeep = rs.flatMapDeep;
fe.flatMapDepth = rs.flatMapDepth;
fe.flatten = Lt.flatten;
fe.flattenDeep = Lt.flattenDeep;
fe.flattenDepth = Lt.flattenDepth;
fe.flip = tr.flip;
fe.flow = Xn.flow;
fe.flowRight = Xn.flowRight;
fe.fromPairs = Lt.fromPairs;
fe.functions = nn.functions;
fe.functionsIn = nn.functionsIn;
fe.groupBy = rs.groupBy;
fe.initial = Lt.initial;
fe.intersection = Lt.intersection;
fe.intersectionBy = Lt.intersectionBy;
fe.intersectionWith = Lt.intersectionWith;
fe.invert = nn.invert;
fe.invertBy = nn.invertBy;
fe.invokeMap = rs.invokeMap;
fe.iteratee = Xn.iteratee;
fe.keyBy = rs.keyBy;
fe.keys = dr;
fe.keysIn = nn.keysIn;
fe.map = rs.map;
fe.mapKeys = nn.mapKeys;
fe.mapValues = nn.mapValues;
fe.matches = Xn.matches;
fe.matchesProperty = Xn.matchesProperty;
fe.memoize = tr.memoize;
fe.merge = nn.merge;
fe.mergeWith = nn.mergeWith;
fe.method = Xn.method;
fe.methodOf = Xn.methodOf;
fe.mixin = p3;
fe.negate = Lm;
fe.nthArg = Xn.nthArg;
fe.omit = nn.omit;
fe.omitBy = nn.omitBy;
fe.once = tr.once;
fe.orderBy = rs.orderBy;
fe.over = Xn.over;
fe.overArgs = tr.overArgs;
fe.overEvery = Xn.overEvery;
fe.overSome = Xn.overSome;
fe.partial = tr.partial;
fe.partialRight = tr.partialRight;
fe.partition = rs.partition;
fe.pick = nn.pick;
fe.pickBy = nn.pickBy;
fe.property = Xn.property;
fe.propertyOf = Xn.propertyOf;
fe.pull = Lt.pull;
fe.pullAll = Lt.pullAll;
fe.pullAllBy = Lt.pullAllBy;
fe.pullAllWith = Lt.pullAllWith;
fe.pullAt = Lt.pullAt;
fe.range = Xn.range;
fe.rangeRight = Xn.rangeRight;
fe.rearg = tr.rearg;
fe.reject = rs.reject;
fe.remove = Lt.remove;
fe.rest = tr.rest;
fe.reverse = Lt.reverse;
fe.sampleSize = rs.sampleSize;
fe.set = nn.set;
fe.setWith = nn.setWith;
fe.shuffle = rs.shuffle;
fe.slice = Lt.slice;
fe.sortBy = rs.sortBy;
fe.sortedUniq = Lt.sortedUniq;
fe.sortedUniqBy = Lt.sortedUniqBy;
fe.split = $n.split;
fe.spread = tr.spread;
fe.tail = Lt.tail;
fe.take = Lt.take;
fe.takeRight = Lt.takeRight;
fe.takeRightWhile = Lt.takeRightWhile;
fe.takeWhile = Lt.takeWhile;
fe.tap = Hu.tap;
fe.throttle = tr.throttle;
fe.thru = Km;
fe.toArray = jt.toArray;
fe.toPairs = nn.toPairs;
fe.toPairsIn = nn.toPairsIn;
fe.toPath = Xn.toPath;
fe.toPlainObject = jt.toPlainObject;
fe.transform = nn.transform;
fe.unary = tr.unary;
fe.union = Lt.union;
fe.unionBy = Lt.unionBy;
fe.unionWith = Lt.unionWith;
fe.uniq = Lt.uniq;
fe.uniqBy = Lt.uniqBy;
fe.uniqWith = Lt.uniqWith;
fe.unset = nn.unset;
fe.unzip = Lt.unzip;
fe.unzipWith = Lt.unzipWith;
fe.update = nn.update;
fe.updateWith = nn.updateWith;
fe.values = nn.values;
fe.valuesIn = nn.valuesIn;
fe.without = Lt.without;
fe.words = $n.words;
fe.wrap = tr.wrap;
fe.xor = Lt.xor;
fe.xorBy = Lt.xorBy;
fe.xorWith = Lt.xorWith;
fe.zip = Lt.zip;
fe.zipObject = Lt.zipObject;
fe.zipObjectDeep = Lt.zipObjectDeep;
fe.zipWith = Lt.zipWith;
fe.entries = nn.toPairs;
fe.entriesIn = nn.toPairsIn;
fe.extend = nn.assignIn;
fe.extendWith = nn.assignInWith;
p3(fe, fe);
fe.add = Ha.add;
fe.attempt = Xn.attempt;
fe.camelCase = $n.camelCase;
fe.capitalize = $n.capitalize;
fe.ceil = Ha.ceil;
fe.clamp = d3.clamp;
fe.clone = jt.clone;
fe.cloneDeep = jt.cloneDeep;
fe.cloneDeepWith = jt.cloneDeepWith;
fe.cloneWith = jt.cloneWith;
fe.conformsTo = jt.conformsTo;
fe.deburr = $n.deburr;
fe.defaultTo = Xn.defaultTo;
fe.divide = Ha.divide;
fe.endsWith = $n.endsWith;
fe.eq = jt.eq;
fe.escape = $n.escape;
fe.escapeRegExp = $n.escapeRegExp;
fe.every = rs.every;
fe.find = rs.find;
fe.findIndex = Lt.findIndex;
fe.findKey = nn.findKey;
fe.findLast = rs.findLast;
fe.findLastIndex = Lt.findLastIndex;
fe.findLastKey = nn.findLastKey;
fe.floor = Ha.floor;
fe.forEach = rs.forEach;
fe.forEachRight = rs.forEachRight;
fe.forIn = nn.forIn;
fe.forInRight = nn.forInRight;
fe.forOwn = nn.forOwn;
fe.forOwnRight = nn.forOwnRight;
fe.get = nn.get;
fe.gt = jt.gt;
fe.gte = jt.gte;
fe.has = nn.has;
fe.hasIn = nn.hasIn;
fe.head = Lt.head;
fe.identity = Ys;
fe.includes = rs.includes;
fe.indexOf = Lt.indexOf;
fe.inRange = d3.inRange;
fe.invoke = nn.invoke;
fe.isArguments = jt.isArguments;
fe.isArray = an;
fe.isArrayBuffer = jt.isArrayBuffer;
fe.isArrayLike = jt.isArrayLike;
fe.isArrayLikeObject = jt.isArrayLikeObject;
fe.isBoolean = jt.isBoolean;
fe.isBuffer = jt.isBuffer;
fe.isDate = jt.isDate;
fe.isElement = jt.isElement;
fe.isEmpty = jt.isEmpty;
fe.isEqual = jt.isEqual;
fe.isEqualWith = jt.isEqualWith;
fe.isError = jt.isError;
fe.isFinite = jt.isFinite;
fe.isFunction = jt.isFunction;
fe.isInteger = jt.isInteger;
fe.isLength = jt.isLength;
fe.isMap = jt.isMap;
fe.isMatch = jt.isMatch;
fe.isMatchWith = jt.isMatchWith;
fe.isNaN = jt.isNaN;
fe.isNative = jt.isNative;
fe.isNil = jt.isNil;
fe.isNull = jt.isNull;
fe.isNumber = jt.isNumber;
fe.isObject = ws;
fe.isObjectLike = jt.isObjectLike;
fe.isPlainObject = jt.isPlainObject;
fe.isRegExp = jt.isRegExp;
fe.isSafeInteger = jt.isSafeInteger;
fe.isSet = jt.isSet;
fe.isString = jt.isString;
fe.isSymbol = jt.isSymbol;
fe.isTypedArray = jt.isTypedArray;
fe.isUndefined = jt.isUndefined;
fe.isWeakMap = jt.isWeakMap;
fe.isWeakSet = jt.isWeakSet;
fe.join = Lt.join;
fe.kebabCase = $n.kebabCase;
fe.last = Ar;
fe.lastIndexOf = Lt.lastIndexOf;
fe.lowerCase = $n.lowerCase;
fe.lowerFirst = $n.lowerFirst;
fe.lt = jt.lt;
fe.lte = jt.lte;
fe.max = Ha.max;
fe.maxBy = Ha.maxBy;
fe.mean = Ha.mean;
fe.meanBy = Ha.meanBy;
fe.min = Ha.min;
fe.minBy = Ha.minBy;
fe.stubArray = Xn.stubArray;
fe.stubFalse = Xn.stubFalse;
fe.stubObject = Xn.stubObject;
fe.stubString = Xn.stubString;
fe.stubTrue = Xn.stubTrue;
fe.multiply = Ha.multiply;
fe.nth = Lt.nth;
fe.noop = Xn.noop;
fe.now = eWe.now;
fe.pad = $n.pad;
fe.padEnd = $n.padEnd;
fe.padStart = $n.padStart;
fe.parseInt = $n.parseInt;
fe.random = d3.random;
fe.reduce = rs.reduce;
fe.reduceRight = rs.reduceRight;
fe.repeat = $n.repeat;
fe.replace = $n.replace;
fe.result = nn.result;
fe.round = Ha.round;
fe.sample = rs.sample;
fe.size = rs.size;
fe.snakeCase = $n.snakeCase;
fe.some = rs.some;
fe.sortedIndex = Lt.sortedIndex;
fe.sortedIndexBy = Lt.sortedIndexBy;
fe.sortedIndexOf = Lt.sortedIndexOf;
fe.sortedLastIndex = Lt.sortedLastIndex;
fe.sortedLastIndexBy = Lt.sortedLastIndexBy;
fe.sortedLastIndexOf = Lt.sortedLastIndexOf;
fe.startCase = $n.startCase;
fe.startsWith = $n.startsWith;
fe.subtract = Ha.subtract;
fe.sum = Ha.sum;
fe.sumBy = Ha.sumBy;
fe.template = $n.template;
fe.times = Xn.times;
fe.toFinite = jt.toFinite;
fe.toInteger = pn;
fe.toLength = jt.toLength;
fe.toLower = $n.toLower;
fe.toNumber = jt.toNumber;
fe.toSafeInteger = jt.toSafeInteger;
fe.toString = jt.toString;
fe.toUpper = $n.toUpper;
fe.trim = $n.trim;
fe.trimEnd = $n.trimEnd;
fe.trimStart = $n.trimStart;
fe.truncate = $n.truncate;
fe.unescape = $n.unescape;
fe.uniqueId = Xn.uniqueId;
fe.upperCase = $n.upperCase;
fe.upperFirst = $n.upperFirst;
fe.each = rs.forEach;
fe.eachRight = rs.forEachRight;
fe.first = Lt.head;
p3(
  fe,
  (function () {
    var t = {};
    return (
      wu(fe, function (e, n) {
        Voe.call(fe.prototype, n) || (t[n] = e);
      }),
      t
    );
  })(),
  { chain: !1 }
);
fe.VERSION = cWe;
(fe.templateSettings = $n.templateSettings).imports._ = fe;
Yi(
  ["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"],
  function (t) {
    fe[t].placeholder = fe;
  }
);
Yi(["drop", "take"], function (t, e) {
  (Rn.prototype[t] = function (n) {
    n = n === void 0 ? 1 : SWe(pn(n), 0);
    var r = this.__filtered__ && !e ? new Rn(this) : this.clone();
    return (
      r.__filtered__
        ? (r.__takeCount__ = eU(n, r.__takeCount__))
        : r.__views__.push({
            size: eU(n, Boe),
            type: t + (r.__dir__ < 0 ? "Right" : ""),
          }),
      r
    );
  }),
    (Rn.prototype[t + "Right"] = function (n) {
      return this.reverse()[t](n).reverse();
    });
});
Yi(["filter", "map", "takeWhile"], function (t, e) {
  var n = e + 1,
    r = n == pWe || n == hWe;
  Rn.prototype[t] = function (a) {
    var s = this.clone();
    return (
      s.__iteratees__.push({ iteratee: on(a), type: n }),
      (s.__filtered__ = s.__filtered__ || r),
      s
    );
  };
});
Yi(["head", "last"], function (t, e) {
  var n = "take" + (e ? "Right" : "");
  Rn.prototype[t] = function () {
    return this[n](1).value()[0];
  };
});
Yi(["initial", "tail"], function (t, e) {
  var n = "drop" + (e ? "" : "Right");
  Rn.prototype[t] = function () {
    return this.__filtered__ ? new Rn(this) : this[n](1);
  };
});
Rn.prototype.compact = function () {
  return this.filter(Ys);
};
Rn.prototype.find = function (t) {
  return this.filter(t).head();
};
Rn.prototype.findLast = function (t) {
  return this.reverse().find(t);
};
Rn.prototype.invokeMap = In(function (t, e) {
  return typeof t == "function"
    ? new Rn(this)
    : this.map(function (n) {
        return t_(n, t, e);
      });
});
Rn.prototype.reject = function (t) {
  return this.filter(Lm(on(t)));
};
Rn.prototype.slice = function (t, e) {
  t = pn(t);
  var n = this;
  return n.__filtered__ && (t > 0 || e < 0)
    ? new Rn(n)
    : (t < 0 ? (n = n.takeRight(-t)) : t && (n = n.drop(t)),
      e !== void 0 &&
        ((e = pn(e)), (n = e < 0 ? n.dropRight(-e) : n.take(e - t))),
      n);
};
Rn.prototype.takeRightWhile = function (t) {
  return this.reverse().takeWhile(t).reverse();
};
Rn.prototype.toArray = function () {
  return this.take(Boe);
};
wu(Rn.prototype, function (t, e) {
  var n = /^(?:filter|find|map|reject)|While$/.test(e),
    r = /^(?:head|last)$/.test(e),
    a = fe[r ? "take" + (e == "last" ? "Right" : "") : e],
    s = r || /^find/.test(e);
  a &&
    (fe.prototype[e] = function () {
      var i = this.__wrapped__,
        o = r ? [1] : arguments,
        u = i instanceof Rn,
        l = o[0],
        c = u || an(i),
        d = function (g) {
          var C = a.apply(fe, ud([g], o));
          return r && p ? C[0] : C;
        };
      c && n && typeof l == "function" && l.length != 1 && (u = c = !1);
      var p = this.__chain__,
        m = !!this.__actions__.length,
        y = s && !p,
        I = u && !m;
      if (!s && c) {
        i = I ? i : new Rn(this);
        var O = t.apply(i, o);
        return (
          O.__actions__.push({ func: Km, args: [d], thisArg: void 0 }),
          new zi(O, p)
        );
      }
      return y && I
        ? t.apply(this, o)
        : ((O = this.thru(d)), y ? (r ? O.value()[0] : O.value()) : O);
    });
});
Yi(["pop", "push", "shift", "sort", "splice", "unshift"], function (t) {
  var e = fWe[t],
    n = /^(?:push|sort|unshift)$/.test(t) ? "tap" : "thru",
    r = /^(?:pop|shift)$/.test(t);
  fe.prototype[t] = function () {
    var a = arguments;
    if (r && !this.__chain__) {
      var s = this.value();
      return e.apply(an(s) ? s : [], a);
    }
    return this[n](function (i) {
      return e.apply(an(i) ? i : [], a);
    });
  };
});
wu(Rn.prototype, function (t, e) {
  var n = fe[e];
  if (n) {
    var r = n.name + "";
    Voe.call(lf, r) || (lf[r] = []), lf[r].push({ name: e, func: n });
  }
});
lf[vP(void 0, dWe).name] = [{ name: "wrapper", func: void 0 }];
Rn.prototype.clone = tWe;
Rn.prototype.reverse = nWe;
Rn.prototype.value = lWe;
fe.prototype.at = Hu.at;
fe.prototype.chain = Hu.wrapperChain;
fe.prototype.commit = Hu.commit;
fe.prototype.next = Hu.next;
fe.prototype.plant = Hu.plant;
fe.prototype.reverse = Hu.reverse;
fe.prototype.toJSON = fe.prototype.valueOf = fe.prototype.value = Hu.value;
fe.prototype.first = fe.prototype.head;
Z5 && (fe.prototype[Z5] = Hu.toIterator);
/**
 * @license
 * Lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="es" -o ./`
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */ const yWe = Object.freeze(
    Object.defineProperty(
      {
        __proto__: null,
        add: Ase,
        after: Ose,
        ary: y6,
        assign: kh,
        assignIn: qf,
        assignInWith: Yf,
        assignWith: Hse,
        at: Nse,
        attempt: v6,
        before: _6,
        bind: E6,
        bindAll: Rse,
        bindKey: kse,
        camelCase: Wse,
        capitalize: w6,
        castArray: qse,
        ceil: Yse,
        chain: H6,
        chunk: Xse,
        clamp: N6,
        clone: R6,
        cloneDeep: xl,
        cloneDeepWith: Qse,
        cloneWith: Jse,
        commit: lH,
        compact: m6,
        concat: Zse,
        cond: ere,
        conforms: nre,
        conformsTo: sre,
        constant: yP,
        countBy: rre,
        create: are,
        curry: zP,
        curryRight: $P,
        debounce: p6,
        deburr: C6,
        default: fe,
        defaultTo: zu,
        defaults: ore,
        defaultsDeep: lre,
        defer: dre,
        delay: pre,
        difference: L6,
        differenceBy: gw,
        differenceWith: qP,
        divide: hre,
        drop: fre,
        dropRight: mre,
        dropRightWhile: Sre,
        dropWhile: yre,
        each: il,
        eachRight: vw,
        endsWith: _re,
        entries: _w,
        entriesIn: bw,
        eq: qi,
        escape: D6,
        escapeRegExp: wre,
        every: Ire,
        extend: qf,
        extendWith: Yf,
        fill: Cre,
        filter: Th,
        find: Xf,
        findIndex: F6,
        findKey: Hre,
        findLast: Nre,
        findLastIndex: U6,
        findLastKey: Rre,
        first: Ew,
        flatMap: xre,
        flatMapDeep: Lre,
        flatMapDepth: Mre,
        flatten: IP,
        flattenDeep: Dre,
        flattenDepth: Gre,
        flip: Fre,
        floor: Ure,
        flow: Bre,
        flowRight: Vre,
        forEach: il,
        forEachRight: vw,
        forIn: jre,
        forInRight: zre,
        forOwn: K6,
        forOwnRight: $re,
        fromPairs: Wre,
        functions: qre,
        functionsIn: Yre,
        get: bv,
        groupBy: Vv,
        gt: Xre,
        gte: Qre,
        has: B6,
        hasIn: N0,
        head: Ew,
        identity: Ys,
        inRange: Jre,
        includes: Zre,
        indexOf: eae,
        initial: tae,
        intersection: Tw,
        intersectionBy: $6,
        intersectionWith: nae,
        invert: rae,
        invertBy: iae,
        invoke: oae,
        invokeMap: uae,
        isArguments: Fc,
        isArray: an,
        isArrayBuffer: lae,
        isArrayLike: Pa,
        isArrayLikeObject: Js,
        isBoolean: cae,
        isBuffer: dl,
        isDate: dae,
        isElement: pae,
        isEmpty: Zu,
        isEqual: si,
        isEqualWith: hae,
        isError: jP,
        isFinite: fae,
        isFunction: Tu,
        isInteger: W6,
        isLength: yv,
        isMap: x2,
        isMatch: mae,
        isMatchWith: Sae,
        isNaN: yae,
        isNative: gae,
        isNil: vae,
        isNull: q6,
        isNumber: Oc,
        isObject: ws,
        isObjectLike: Bs,
        isPlainObject: ad,
        isRegExp: JP,
        isSafeInteger: _ae,
        isSet: L2,
        isString: Fm,
        isSymbol: za,
        isTypedArray: Tp,
        isUndefined: Xv,
        isWeakMap: bae,
        isWeakSet: Eae,
        iteratee: Tae,
        join: wae,
        kebabCase: Pae,
        keyBy: Iae,
        keys: dr,
        keysIn: Aa,
        last: Ar,
        lastIndexOf: Cae,
        lodash: fe,
        lowerCase: Aae,
        lowerFirst: Oae,
        lt: Hae,
        lte: Nae,
        map: Gm,
        mapKeys: X6,
        mapValues: Nl,
        matches: Rae,
        matchesProperty: kae,
        max: xae,
        maxBy: FP,
        mean: Mae,
        meanBy: Dae,
        memoize: _v,
        merge: Yr,
        mergeWith: x6,
        method: Gae,
        methodOf: Fae,
        min: Uae,
        minBy: Kae,
        mixin: Q6,
        multiply: Bae,
        negate: Lm,
        next: pH,
        noop: Cf,
        now: Oy,
        nth: jae,
        nthArg: zae,
        omit: zv,
        omitBy: BP,
        once: $ae,
        orderBy: ZP,
        over: Yae,
        overArgs: Xae,
        overEvery: Qae,
        overSome: Jae,
        pad: aie,
        padEnd: iie,
        padStart: oie,
        parseInt: uie,
        partial: g2,
        partialRight: lie,
        partition: Go,
        pick: Ug,
        pickBy: Jv,
        plant: SH,
        property: xR,
        propertyOf: cie,
        pull: die,
        pullAll: n3,
        pullAllBy: pie,
        pullAllWith: hie,
        pullAt: mie,
        random: Sie,
        range: gie,
        rangeRight: vie,
        rearg: _ie,
        reduce: Eie,
        reduceRight: Tie,
        reject: wie,
        remove: Xu,
        repeat: Pie,
        replace: Iie,
        rest: Cie,
        result: Aie,
        reverse: Pw,
        round: Oie,
        sample: Nie,
        sampleSize: Rie,
        set: Kg,
        setWith: kie,
        shuffle: xie,
        size: Lie,
        slice: Mie,
        snakeCase: r3,
        some: Die,
        sortBy: tI,
        sortedIndex: Gie,
        sortedIndexBy: Fie,
        sortedIndexOf: Uie,
        sortedLastIndex: Kie,
        sortedLastIndexBy: Bie,
        sortedLastIndexOf: Vie,
        sortedUniq: zie,
        sortedUniqBy: i3,
        split: $ie,
        spread: Wie,
        startCase: qie,
        startsWith: Yie,
        stubArray: H0,
        stubFalse: pm,
        stubObject: Xie,
        stubString: Qie,
        stubTrue: Bg,
        subtract: Jie,
        sum: o3,
        sumBy: Y2,
        tail: Zie,
        take: u3,
        takeRight: eoe,
        takeRightWhile: toe,
        takeWhile: noe,
        tap: soe,
        template: ioe,
        templateSettings: Iw,
        throttle: h6,
        thru: Km,
        times: ooe,
        toArray: J6,
        toFinite: uu,
        toInteger: pn,
        toIterator: yH,
        toJSON: Ud,
        toLength: G6,
        toLower: loe,
        toNumber: di,
        toPairs: _w,
        toPairsIn: bw,
        toPath: coe,
        toPlainObject: k6,
        toSafeInteger: doe,
        toString: zn,
        toUpper: poe,
        transform: hoe,
        trim: Soe,
        trimEnd: yoe,
        trimStart: goe,
        truncate: voe,
        unary: _oe,
        unescape: Eoe,
        union: N2,
        unionBy: Toe,
        unionWith: woe,
        uniq: xf,
        uniqBy: n_,
        uniqWith: H2,
        uniqueId: xd,
        unset: Poe,
        unzip: sI,
        unzipWith: l3,
        update: Coe,
        updateWith: Aoe,
        upperCase: Ooe,
        upperFirst: Ev,
        value: Ud,
        valueOf: Ud,
        values: Fp,
        valuesIn: Hoe,
        without: Vg,
        words: A6,
        wrap: v2,
        wrapperAt: Noe,
        wrapperChain: Roe,
        wrapperCommit: lH,
        wrapperLodash: fe,
        wrapperNext: pH,
        wrapperPlant: SH,
        wrapperReverse: koe,
        wrapperToIterator: yH,
        wrapperValue: Ud,
        xor: xoe,
        xorBy: Loe,
        xorWith: Moe,
        zip: Doe,
        zipObject: Foe,
        zipObjectDeep: Uoe,
        zipWith: Koe,
      },
      Symbol.toStringTag,
      { value: "Module" }
    )
  ),
  joe = {};
function Vn(t) {
  throw t;
}
function tU(t, e, n) {
  e.length !== 4 && Vn(new Oe.exception.invalid("invalid aes block size"));
  var r = t.a[n],
    a = e[0] ^ r[0],
    s = e[n ? 3 : 1] ^ r[1],
    i = e[2] ^ r[2];
  e = e[n ? 1 : 3] ^ r[3];
  var o,
    u,
    l,
    c,
    d = r.length / 4 - 2,
    p = 4,
    m = [0, 0, 0, 0];
  (o = t.m[n]), (t = o[0]);
  var y = o[1],
    I = o[2],
    O = o[3],
    g = o[4];
  for (c = 0; d > c; c++)
    (o =
      t[a >>> 24] ^ y[(s >> 16) & 255] ^ I[(i >> 8) & 255] ^ O[255 & e] ^ r[p]),
      (u =
        t[s >>> 24] ^
        y[(i >> 16) & 255] ^
        I[(e >> 8) & 255] ^
        O[255 & a] ^
        r[p + 1]),
      (l =
        t[i >>> 24] ^
        y[(e >> 16) & 255] ^
        I[(a >> 8) & 255] ^
        O[255 & s] ^
        r[p + 2]),
      (e =
        t[e >>> 24] ^
        y[(a >> 16) & 255] ^
        I[(s >> 8) & 255] ^
        O[255 & i] ^
        r[p + 3]),
      (p += 4),
      (a = o),
      (s = u),
      (i = l);
  for (c = 0; 4 > c; c++)
    (m[n ? 3 & -c : c] =
      (g[a >>> 24] << 24) ^
      (g[(s >> 16) & 255] << 16) ^
      (g[(i >> 8) & 255] << 8) ^
      g[255 & e] ^
      r[p++]),
      (o = a),
      (a = s),
      (s = i),
      (i = e),
      (e = o);
  return m;
}
function nU(t, e) {
  var n,
    r = Oe.random.B[t],
    a = [];
  for (n in r) r.hasOwnProperty(n) && a.push(r[n]);
  for (n = 0; n < a.length; n++) a[n](e);
}
function sU(t) {
  (t.a = gH(t).concat(gH(t))), (t.C = new Oe.cipher.aes(t.a));
}
function gH(t) {
  for (var e = 0; 4 > e && ((t.i[e] = (t.i[e] + 1) | 0), !t.i[e]); e++);
  return t.C.encrypt(t.i);
}
var $r = void 0,
  $l = !1,
  Oe = {
    cipher: {},
    hash: {},
    keyexchange: {},
    mode: {},
    misc: {},
    codec: {},
    exception: {
      corrupt: function (t) {
        (this.toString = function () {
          return "CORRUPT: " + this.message;
        }),
          (this.message = t);
      },
      invalid: function (t) {
        (this.toString = function () {
          return "INVALID: " + this.message;
        }),
          (this.message = t);
      },
      bug: function (t) {
        (this.toString = function () {
          return "BUG: " + this.message;
        }),
          (this.message = t);
      },
      notReady: function (t) {
        (this.toString = function () {
          return "NOT READY: " + this.message;
        }),
          (this.message = t);
      },
    },
  };
typeof module < "u" && module.exports && (module.exports = Oe),
  (Oe.cipher.aes = function (t) {
    this.m[0][0][0] || this.G();
    var e,
      n,
      r,
      a,
      s = this.m[0][4],
      i = this.m[1];
    e = t.length;
    var o = 1;
    for (
      e !== 4 &&
        e !== 6 &&
        e !== 8 &&
        Vn(new Oe.exception.invalid("invalid aes key size")),
        this.a = [(r = t.slice(0)), (a = [])],
        t = e;
      4 * e + 28 > t;
      t++
    )
      (n = r[t - 1]),
        (t % e === 0 || (e === 8 && t % e === 4)) &&
          ((n =
            (s[n >>> 24] << 24) ^
            (s[(n >> 16) & 255] << 16) ^
            (s[(n >> 8) & 255] << 8) ^
            s[255 & n]),
          t % e === 0 &&
            ((n = (n << 8) ^ (n >>> 24) ^ (o << 24)),
            (o = (o << 1) ^ (283 * (o >> 7))))),
        (r[t] = r[t - e] ^ n);
    for (e = 0; t; e++, t--)
      (n = r[3 & e ? t : t - 4]),
        (a[e] =
          4 >= t || 4 > e
            ? n
            : i[0][s[n >>> 24]] ^
              i[1][s[(n >> 16) & 255]] ^
              i[2][s[(n >> 8) & 255]] ^
              i[3][s[255 & n]]);
  }),
  (Oe.cipher.aes.prototype = {
    encrypt: function (t) {
      return tU(this, t, 0);
    },
    decrypt: function (t) {
      return tU(this, t, 1);
    },
    m: [
      [[], [], [], [], []],
      [[], [], [], [], []],
    ],
    G: function () {
      var t,
        e,
        n,
        r,
        a,
        s,
        i,
        o = this.m[0],
        u = this.m[1],
        l = o[4],
        c = u[4],
        d = [],
        p = [];
      for (t = 0; 256 > t; t++) p[(d[t] = (t << 1) ^ (283 * (t >> 7))) ^ t] = t;
      for (e = n = 0; !l[e]; e ^= r || 1, n = p[n] || 1)
        for (
          s = n ^ (n << 1) ^ (n << 2) ^ (n << 3) ^ (n << 4),
            s = (s >> 8) ^ (255 & s) ^ 99,
            l[e] = s,
            c[s] = e,
            a = d[(t = d[(r = d[e])])],
            i = (16843009 * a) ^ (65537 * t) ^ (257 * r) ^ (16843008 * e),
            a = (257 * d[s]) ^ (16843008 * s),
            t = 0;
          4 > t;
          t++
        )
          (o[t][e] = a = (a << 24) ^ (a >>> 8)),
            (u[t][s] = i = (i << 24) ^ (i >>> 8));
      for (t = 0; 5 > t; t++) (o[t] = o[t].slice(0)), (u[t] = u[t].slice(0));
    },
  }),
  (Oe.bitArray = {
    bitSlice: function (t, e, n) {
      return (
        (t = Oe.bitArray.P(t.slice(e / 32), 32 - (31 & e)).slice(1)),
        n === $r ? t : Oe.bitArray.clamp(t, n - e)
      );
    },
    extract: function (t, e, n) {
      var r = Math.floor((-e - n) & 31);
      return (
        (-32 & ((e + n - 1) ^ e)
          ? (t[(e / 32) | 0] << (32 - r)) ^ (t[(e / 32 + 1) | 0] >>> r)
          : t[(e / 32) | 0] >>> r) &
        ((1 << n) - 1)
      );
    },
    concat: function (t, e) {
      if (t.length === 0 || e.length === 0) return t.concat(e);
      var n = t[t.length - 1],
        r = Oe.bitArray.getPartial(n);
      return r === 32
        ? t.concat(e)
        : Oe.bitArray.P(e, r, 0 | n, t.slice(0, t.length - 1));
    },
    bitLength: function (t) {
      var e = t.length;
      return e === 0 ? 0 : 32 * (e - 1) + Oe.bitArray.getPartial(t[e - 1]);
    },
    clamp: function (t, e) {
      if (32 * t.length < e) return t;
      t = t.slice(0, Math.ceil(e / 32));
      var n = t.length;
      return (
        (e &= 31),
        n > 0 &&
          e &&
          (t[n - 1] = Oe.bitArray.partial(
            e,
            t[n - 1] & (2147483648 >> (e - 1)),
            1
          )),
        t
      );
    },
    partial: function (t, e, n) {
      return t === 32 ? e : (n ? 0 | e : e << (32 - t)) + 1099511627776 * t;
    },
    getPartial: function (t) {
      return Math.round(t / 1099511627776) || 32;
    },
    equal: function (t, e) {
      if (Oe.bitArray.bitLength(t) !== Oe.bitArray.bitLength(e)) return $l;
      var n,
        r = 0;
      for (n = 0; n < t.length; n++) r |= t[n] ^ e[n];
      return r === 0;
    },
    P: function (t, e, n, r) {
      var a;
      for (a = 0, r === $r && (r = []); e >= 32; e -= 32) r.push(n), (n = 0);
      if (e === 0) return r.concat(t);
      for (a = 0; a < t.length; a++)
        r.push(n | (t[a] >>> e)), (n = t[a] << (32 - e));
      return (
        (a = t.length ? t[t.length - 1] : 0),
        (t = Oe.bitArray.getPartial(a)),
        r.push(Oe.bitArray.partial((e + t) & 31, e + t > 32 ? n : r.pop(), 1)),
        r
      );
    },
    g: function (t, e) {
      return [t[0] ^ e[0], t[1] ^ e[1], t[2] ^ e[2], t[3] ^ e[3]];
    },
  }),
  (Oe.codec.utf8String = {
    fromBits: function (t) {
      var e,
        n,
        r = "",
        a = Oe.bitArray.bitLength(t);
      for (e = 0; a / 8 > e; e++)
        !(3 & e) && (n = t[e / 4]),
          (r += String.fromCharCode(n >>> 24)),
          (n <<= 8);
      return decodeURIComponent(escape(r));
    },
    toBits: function (t) {
      t = unescape(encodeURIComponent(t));
      var e,
        n = [],
        r = 0;
      for (e = 0; e < t.length; e++)
        (r = (r << 8) | t.charCodeAt(e)), (3 & e) === 3 && (n.push(r), (r = 0));
      return 3 & e && n.push(Oe.bitArray.partial(8 * (3 & e), r)), n;
    },
  }),
  (Oe.codec.hex = {
    fromBits: function (t) {
      var e,
        n = "";
      for (e = 0; e < t.length; e++)
        n += ((0 | t[e]) + 0xf00000000000).toString(16).substr(4);
      return n.substr(0, Oe.bitArray.bitLength(t) / 4);
    },
    toBits: function (t) {
      var e,
        n,
        r = [];
      for (
        t = t.replace(/\s|0x/g, ""), n = t.length, t += "00000000", e = 0;
        e < t.length;
        e += 8
      )
        r.push(0 ^ parseInt(t.substr(e, 8), 16));
      return Oe.bitArray.clamp(r, 4 * n);
    },
  }),
  (Oe.codec.base64 = {
    K: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
    fromBits: function (t, e, n) {
      var r = "",
        a = 0,
        s = Oe.codec.base64.K,
        i = 0,
        o = Oe.bitArray.bitLength(t);
      for (n && (s = s.substr(0, 62) + "-_"), n = 0; 6 * r.length < o; )
        (r += s.charAt((i ^ (t[n] >>> a)) >>> 26)),
          6 > a
            ? ((i = t[n] << (6 - a)), (a += 26), n++)
            : ((i <<= 6), (a -= 6));
      for (; 3 & r.length && !e; ) r += "=";
      return r;
    },
    toBits: function (t, e) {
      t = t.replace(/\s|=/g, "");
      var n,
        r,
        a = [],
        s = 0,
        i = Oe.codec.base64.K,
        o = 0;
      for (e && (i = i.substr(0, 62) + "-_"), n = 0; n < t.length; n++)
        (r = i.indexOf(t.charAt(n))),
          0 > r && Vn(new Oe.exception.invalid("this isn't base64!")),
          s > 26
            ? ((s -= 26), a.push(o ^ (r >>> s)), (o = r << (32 - s)))
            : ((s += 6), (o ^= r << (32 - s)));
      return 56 & s && a.push(Oe.bitArray.partial(56 & s, o, 1)), a;
    },
  }),
  (Oe.codec.base64url = {
    fromBits: function (t) {
      return Oe.codec.base64.fromBits(t, 1, 1);
    },
    toBits: function (t) {
      return Oe.codec.base64.toBits(t, 1);
    },
  }),
  (Oe.hash.sha256 = function (t) {
    this.a[0] || this.G(),
      t
        ? ((this.d = t.d.slice(0)), (this.c = t.c.slice(0)), (this.b = t.b))
        : this.reset();
  }),
  (Oe.hash.sha256.hash = function (t) {
    return new Oe.hash.sha256().update(t).finalize();
  }),
  (Oe.hash.sha256.prototype = {
    blockSize: 512,
    reset: function () {
      return (this.d = this.s.slice(0)), (this.c = []), (this.b = 0), this;
    },
    update: function (t) {
      typeof t == "string" && (t = Oe.codec.utf8String.toBits(t));
      var e,
        n = (this.c = Oe.bitArray.concat(this.c, t));
      for (
        e = this.b,
          t = this.b = e + Oe.bitArray.bitLength(t),
          e = (512 + e) & -512;
        t >= e;
        e += 512
      )
        this.o(n.splice(0, 16));
      return this;
    },
    finalize: function () {
      var t,
        n = this.c,
        e = this.d,
        n = Oe.bitArray.concat(n, [Oe.bitArray.partial(1, 1)]);
      for (t = n.length + 2; 15 & t; t++) n.push(0);
      for (
        n.push(Math.floor(this.b / 4294967296)), n.push(0 | this.b);
        n.length;

      )
        this.o(n.splice(0, 16));
      return this.reset(), e;
    },
    s: [],
    a: [],
    G: function () {
      function t(a) {
        return (4294967296 * (a - Math.floor(a))) | 0;
      }
      var e,
        n = 0,
        r = 2;
      e: for (; 64 > n; r++) {
        for (e = 2; r >= e * e; e++) if (r % e === 0) continue e;
        8 > n && (this.s[n] = t(Math.pow(r, 0.5))),
          (this.a[n] = t(Math.pow(r, 1 / 3))),
          n++;
      }
    },
    o: function (t) {
      var e,
        n,
        r = t.slice(0),
        a = this.d,
        s = this.a,
        i = a[0],
        o = a[1],
        u = a[2],
        l = a[3],
        c = a[4],
        d = a[5],
        p = a[6],
        m = a[7];
      for (t = 0; 64 > t; t++)
        16 > t
          ? (e = r[t])
          : ((e = r[(t + 1) & 15]),
            (n = r[(t + 14) & 15]),
            (e = r[15 & t] =
              (((e >>> 7) ^ (e >>> 18) ^ (e >>> 3) ^ (e << 25) ^ (e << 14)) +
                ((n >>> 17) ^ (n >>> 19) ^ (n >>> 10) ^ (n << 15) ^ (n << 13)) +
                r[15 & t] +
                r[(t + 9) & 15]) |
              0)),
          (e =
            e +
            m +
            ((c >>> 6) ^
              (c >>> 11) ^
              (c >>> 25) ^
              (c << 26) ^
              (c << 21) ^
              (c << 7)) +
            (p ^ (c & (d ^ p))) +
            s[t]),
          (m = p),
          (p = d),
          (d = c),
          (c = (l + e) | 0),
          (l = u),
          (u = o),
          (o = i),
          (i =
            (e +
              ((o & u) ^ (l & (o ^ u))) +
              ((o >>> 2) ^
                (o >>> 13) ^
                (o >>> 22) ^
                (o << 30) ^
                (o << 19) ^
                (o << 10))) |
            0);
      (a[0] = (a[0] + i) | 0),
        (a[1] = (a[1] + o) | 0),
        (a[2] = (a[2] + u) | 0),
        (a[3] = (a[3] + l) | 0),
        (a[4] = (a[4] + c) | 0),
        (a[5] = (a[5] + d) | 0),
        (a[6] = (a[6] + p) | 0),
        (a[7] = (a[7] + m) | 0);
    },
  }),
  (Oe.hash.sha1 = function (t) {
    t
      ? ((this.d = t.d.slice(0)), (this.c = t.c.slice(0)), (this.b = t.b))
      : this.reset();
  }),
  (Oe.hash.sha1.hash = function (t) {
    return new Oe.hash.sha1().update(t).finalize();
  }),
  (Oe.hash.sha1.prototype = {
    blockSize: 512,
    reset: function () {
      return (this.d = this.s.slice(0)), (this.c = []), (this.b = 0), this;
    },
    update: function (t) {
      typeof t == "string" && (t = Oe.codec.utf8String.toBits(t));
      var e,
        n = (this.c = Oe.bitArray.concat(this.c, t));
      for (
        e = this.b,
          t = this.b = e + Oe.bitArray.bitLength(t),
          e = (this.blockSize + e) & -this.blockSize;
        t >= e;
        e += this.blockSize
      )
        this.o(n.splice(0, 16));
      return this;
    },
    finalize: function () {
      var t,
        n = this.c,
        e = this.d,
        n = Oe.bitArray.concat(n, [Oe.bitArray.partial(1, 1)]);
      for (t = n.length + 2; 15 & t; t++) n.push(0);
      for (
        n.push(Math.floor(this.b / 4294967296)), n.push(0 | this.b);
        n.length;

      )
        this.o(n.splice(0, 16));
      return this.reset(), e;
    },
    s: [1732584193, 4023233417, 2562383102, 271733878, 3285377520],
    a: [1518500249, 1859775393, 2400959708, 3395469782],
    o: function (t) {
      var e,
        n,
        r,
        a,
        s,
        i,
        o = t.slice(0),
        u = this.d;
      for (
        n = u[0], r = u[1], a = u[2], s = u[3], i = u[4], t = 0;
        79 >= t;
        t++
      )
        t >= 16 &&
          (o[t] =
            ((o[t - 3] ^ o[t - 8] ^ o[t - 14] ^ o[t - 16]) << 1) |
            ((o[t - 3] ^ o[t - 8] ^ o[t - 14] ^ o[t - 16]) >>> 31)),
          (e =
            19 >= t
              ? (r & a) | (~r & s)
              : 39 >= t
              ? r ^ a ^ s
              : 59 >= t
              ? (r & a) | (r & s) | (a & s)
              : 79 >= t
              ? r ^ a ^ s
              : $r),
          (e =
            (((n << 5) | (n >>> 27)) +
              e +
              i +
              o[t] +
              this.a[Math.floor(t / 20)]) |
            0),
          (i = s),
          (s = a),
          (a = (r << 30) | (r >>> 2)),
          (r = n),
          (n = e);
      (u[0] = (u[0] + n) | 0),
        (u[1] = (u[1] + r) | 0),
        (u[2] = (u[2] + a) | 0),
        (u[3] = (u[3] + s) | 0),
        (u[4] = (u[4] + i) | 0);
    },
  }),
  (Oe.mode.ccm = {
    name: "ccm",
    encrypt: function (t, e, n, r, a) {
      var s,
        i = e.slice(0),
        o = Oe.bitArray,
        u = o.bitLength(n) / 8,
        l = o.bitLength(i) / 8;
      for (
        a = a || 64,
          r = r || [],
          7 > u &&
            Vn(new Oe.exception.invalid("ccm: iv must be at least 7 bytes")),
          s = 2;
        4 > s && l >>> (8 * s);
        s++
      );
      return (
        15 - u > s && (s = 15 - u),
        (n = o.clamp(n, 8 * (15 - s))),
        (e = Oe.mode.ccm.M(t, e, n, r, a, s)),
        (i = Oe.mode.ccm.p(t, i, n, e, a, s)),
        o.concat(i.data, i.tag)
      );
    },
    decrypt: function (t, e, n, r, a) {
      (a = a || 64), (r = r || []);
      var s = Oe.bitArray,
        i = s.bitLength(n) / 8,
        l = s.bitLength(e),
        o = s.clamp(e, l - a),
        u = s.bitSlice(e, l - a),
        l = (l - a) / 8;
      for (
        7 > i &&
          Vn(new Oe.exception.invalid("ccm: iv must be at least 7 bytes")),
          e = 2;
        4 > e && l >>> (8 * e);
        e++
      );
      return (
        15 - i > e && (e = 15 - i),
        (n = s.clamp(n, 8 * (15 - e))),
        (o = Oe.mode.ccm.p(t, o, n, u, a, e)),
        (t = Oe.mode.ccm.M(t, o.data, n, r, a, e)),
        s.equal(o.tag, t) ||
          Vn(new Oe.exception.corrupt("ccm: tag doesn't match")),
        o.data
      );
    },
    M: function (t, e, n, r, a, s) {
      var i = [],
        o = Oe.bitArray,
        u = o.g;
      if (
        ((a /= 8),
        (a % 2 || 4 > a || a > 16) &&
          Vn(new Oe.exception.invalid("ccm: invalid tag length")),
        (4294967295 < r.length || 4294967295 < e.length) &&
          Vn(new Oe.exception.bug("ccm: can't deal with 4GiB or more data")),
        (s = [o.partial(8, (r.length ? 64 : 0) | ((a - 2) << 2) | (s - 1))]),
        (s = o.concat(s, n)),
        (s[3] |= o.bitLength(e) / 8),
        (s = t.encrypt(s)),
        r.length)
      )
        for (
          n = o.bitLength(r) / 8,
            65279 >= n
              ? (i = [o.partial(16, n)])
              : 4294967295 >= n && (i = o.concat([o.partial(16, 65534)], [n])),
            i = o.concat(i, r),
            r = 0;
          r < i.length;
          r += 4
        )
          s = t.encrypt(u(s, i.slice(r, r + 4).concat([0, 0, 0])));
      for (r = 0; r < e.length; r += 4)
        s = t.encrypt(u(s, e.slice(r, r + 4).concat([0, 0, 0])));
      return o.clamp(s, 8 * a);
    },
    p: function (t, e, n, r, a, s) {
      var i,
        o = Oe.bitArray;
      i = o.g;
      var u = e.length,
        l = o.bitLength(e);
      if (
        ((n = o
          .concat([o.partial(8, s - 1)], n)
          .concat([0, 0, 0])
          .slice(0, 4)),
        (r = o.bitSlice(i(r, t.encrypt(n)), 0, a)),
        !u)
      )
        return { tag: r, data: [] };
      for (i = 0; u > i; i += 4)
        n[3]++,
          (a = t.encrypt(n)),
          (e[i] ^= a[0]),
          (e[i + 1] ^= a[1]),
          (e[i + 2] ^= a[2]),
          (e[i + 3] ^= a[3]);
      return { tag: r, data: o.clamp(e, l) };
    },
  }),
  Oe.beware === $r && (Oe.beware = {}),
  (Oe.beware[
    "CBC mode is dangerous because it doesn't protect message integrity."
  ] = function () {
    Oe.mode.cbc = {
      name: "cbc",
      encrypt: function (t, e, n, r) {
        r &&
          r.length &&
          Vn(new Oe.exception.invalid("cbc can't authenticate data")),
          Oe.bitArray.bitLength(n) !== 128 &&
            Vn(new Oe.exception.invalid("cbc iv must be 128 bits"));
        var a = Oe.bitArray,
          s = a.g,
          i = a.bitLength(e),
          o = 0,
          u = [];
        for (
          7 & i &&
            Vn(
              new Oe.exception.invalid(
                "pkcs#5 padding only works for multiples of a byte"
              )
            ),
            r = 0;
          i >= o + 128;
          r += 4, o += 128
        )
          (n = t.encrypt(s(n, e.slice(r, r + 4)))),
            u.splice(r, 0, n[0], n[1], n[2], n[3]);
        return (
          (i = 16843009 * (16 - ((i >> 3) & 15))),
          (n = t.encrypt(s(n, a.concat(e, [i, i, i, i]).slice(r, r + 4)))),
          u.splice(r, 0, n[0], n[1], n[2], n[3]),
          u
        );
      },
      decrypt: function (t, e, n, r) {
        r &&
          r.length &&
          Vn(new Oe.exception.invalid("cbc can't authenticate data")),
          Oe.bitArray.bitLength(n) !== 128 &&
            Vn(new Oe.exception.invalid("cbc iv must be 128 bits")),
          (127 & Oe.bitArray.bitLength(e) || !e.length) &&
            Vn(
              new Oe.exception.corrupt(
                "cbc ciphertext must be a positive multiple of the block size"
              )
            );
        var a,
          s = Oe.bitArray,
          i = s.g,
          o = [];
        for (r = 0; r < e.length; r += 4)
          (a = e.slice(r, r + 4)),
            (n = i(n, t.decrypt(a))),
            o.splice(r, 0, n[0], n[1], n[2], n[3]),
            (n = a);
        return (
          (a = 255 & o[r - 1]),
          (a == 0 || a > 16) &&
            Vn(new Oe.exception.corrupt("pkcs#5 padding corrupt")),
          (n = 16843009 * a),
          s.equal(
            s.bitSlice([n, n, n, n], 0, 8 * a),
            s.bitSlice(o, 32 * o.length - 8 * a, 32 * o.length)
          ) || Vn(new Oe.exception.corrupt("pkcs#5 padding corrupt")),
          s.bitSlice(o, 0, 32 * o.length - 8 * a)
        );
      },
    };
  }),
  (Oe.mode.ocb2 = {
    name: "ocb2",
    encrypt: function (t, e, n, r, a, s) {
      Oe.bitArray.bitLength(n) !== 128 &&
        Vn(new Oe.exception.invalid("ocb iv must be 128 bits"));
      var i,
        o = Oe.mode.ocb2.I,
        u = Oe.bitArray,
        l = u.g,
        c = [0, 0, 0, 0];
      n = o(t.encrypt(n));
      var d,
        p = [];
      for (r = r || [], a = a || 64, i = 0; i + 4 < e.length; i += 4)
        (d = e.slice(i, i + 4)),
          (c = l(c, d)),
          (p = p.concat(l(n, t.encrypt(l(n, d))))),
          (n = o(n));
      return (
        (d = e.slice(i)),
        (e = u.bitLength(d)),
        (i = t.encrypt(l(n, [0, 0, 0, e]))),
        (d = u.clamp(l(d.concat([0, 0, 0]), i), e)),
        (c = l(c, l(d.concat([0, 0, 0]), i))),
        (c = t.encrypt(l(c, l(n, o(n))))),
        r.length && (c = l(c, s ? r : Oe.mode.ocb2.pmac(t, r))),
        p.concat(u.concat(d, u.clamp(c, a)))
      );
    },
    decrypt: function (t, e, n, r, a, s) {
      Oe.bitArray.bitLength(n) !== 128 &&
        Vn(new Oe.exception.invalid("ocb iv must be 128 bits")),
        (a = a || 64);
      var i,
        o,
        u = Oe.mode.ocb2.I,
        l = Oe.bitArray,
        c = l.g,
        d = [0, 0, 0, 0],
        p = u(t.encrypt(n)),
        m = Oe.bitArray.bitLength(e) - a,
        y = [];
      for (r = r || [], n = 0; m / 32 > n + 4; n += 4)
        (i = c(p, t.decrypt(c(p, e.slice(n, n + 4))))),
          (d = c(d, i)),
          (y = y.concat(i)),
          (p = u(p));
      return (
        (o = m - 32 * n),
        (i = t.encrypt(c(p, [0, 0, 0, o]))),
        (i = c(i, l.clamp(e.slice(n), o).concat([0, 0, 0]))),
        (d = c(d, i)),
        (d = t.encrypt(c(d, c(p, u(p))))),
        r.length && (d = c(d, s ? r : Oe.mode.ocb2.pmac(t, r))),
        l.equal(l.clamp(d, a), l.bitSlice(e, m)) ||
          Vn(new Oe.exception.corrupt("ocb: tag doesn't match")),
        y.concat(l.clamp(i, o))
      );
    },
    pmac: function (t, e) {
      var n,
        r = Oe.mode.ocb2.I,
        a = Oe.bitArray,
        s = a.g,
        i = [0, 0, 0, 0],
        o = t.encrypt([0, 0, 0, 0]),
        o = s(o, r(r(o)));
      for (n = 0; n + 4 < e.length; n += 4)
        (o = r(o)), (i = s(i, t.encrypt(s(o, e.slice(n, n + 4)))));
      return (
        (n = e.slice(n)),
        128 > a.bitLength(n) &&
          ((o = s(o, r(o))), (n = a.concat(n, [-2147483648, 0, 0, 0]))),
        (i = s(i, n)),
        t.encrypt(s(r(s(o, r(o))), i))
      );
    },
    I: function (t) {
      return [
        (t[0] << 1) ^ (t[1] >>> 31),
        (t[1] << 1) ^ (t[2] >>> 31),
        (t[2] << 1) ^ (t[3] >>> 31),
        (t[3] << 1) ^ (135 * (t[0] >>> 31)),
      ];
    },
  }),
  (Oe.mode.gcm = {
    name: "gcm",
    encrypt: function (t, e, n, r, a) {
      var s = e.slice(0);
      return (
        (e = Oe.bitArray),
        (r = r || []),
        (t = Oe.mode.gcm.p(!0, t, s, r, n, a || 128)),
        e.concat(t.data, t.tag)
      );
    },
    decrypt: function (t, e, n, r, a) {
      var s = e.slice(0),
        i = Oe.bitArray,
        o = i.bitLength(s);
      return (
        (a = a || 128),
        (r = r || []),
        o >= a
          ? ((e = i.bitSlice(s, o - a)), (s = i.bitSlice(s, 0, o - a)))
          : ((e = s), (s = [])),
        (t = Oe.mode.gcm.p($l, t, s, r, n, a)),
        i.equal(t.tag, e) ||
          Vn(new Oe.exception.corrupt("gcm: tag doesn't match")),
        t.data
      );
    },
    V: function (t, e) {
      var n,
        r,
        a,
        s,
        i,
        o = Oe.bitArray.g;
      for (a = [0, 0, 0, 0], s = e.slice(0), n = 0; 128 > n; n++) {
        for (
          (r = (t[Math.floor(n / 32)] & (1 << (31 - (n % 32)))) !== 0) &&
            (a = o(a, s)),
            i = (1 & s[3]) !== 0,
            r = 3;
          r > 0;
          r--
        )
          s[r] = (s[r] >>> 1) | ((1 & s[r - 1]) << 31);
        (s[0] >>>= 1), i && (s[0] ^= -520093696);
      }
      return a;
    },
    j: function (t, e, n) {
      var r,
        a = n.length;
      for (e = e.slice(0), r = 0; a > r; r += 4)
        (e[0] ^= 4294967295 & n[r]),
          (e[1] ^= 4294967295 & n[r + 1]),
          (e[2] ^= 4294967295 & n[r + 2]),
          (e[3] ^= 4294967295 & n[r + 3]),
          (e = Oe.mode.gcm.V(e, t));
      return e;
    },
    p: function (t, e, n, r, a, s) {
      var i,
        o,
        u,
        l,
        c,
        d,
        p,
        m,
        y = Oe.bitArray;
      for (
        d = n.length,
          p = y.bitLength(n),
          m = y.bitLength(r),
          o = y.bitLength(a),
          i = e.encrypt([0, 0, 0, 0]),
          o === 96
            ? ((a = a.slice(0)), (a = y.concat(a, [1])))
            : ((a = Oe.mode.gcm.j(i, [0, 0, 0, 0], a)),
              (a = Oe.mode.gcm.j(i, a, [
                0,
                0,
                Math.floor(o / 4294967296),
                4294967295 & o,
              ]))),
          o = Oe.mode.gcm.j(i, [0, 0, 0, 0], r),
          c = a.slice(0),
          r = o.slice(0),
          t || (r = Oe.mode.gcm.j(i, o, n)),
          l = 0;
        d > l;
        l += 4
      )
        c[3]++,
          (u = e.encrypt(c)),
          (n[l] ^= u[0]),
          (n[l + 1] ^= u[1]),
          (n[l + 2] ^= u[2]),
          (n[l + 3] ^= u[3]);
      return (
        (n = y.clamp(n, p)),
        t && (r = Oe.mode.gcm.j(i, o, n)),
        (t = [
          Math.floor(m / 4294967296),
          4294967295 & m,
          Math.floor(p / 4294967296),
          4294967295 & p,
        ]),
        (r = Oe.mode.gcm.j(i, r, t)),
        (u = e.encrypt(a)),
        (r[0] ^= u[0]),
        (r[1] ^= u[1]),
        (r[2] ^= u[2]),
        (r[3] ^= u[3]),
        { tag: y.bitSlice(r, 0, s), data: n }
      );
    },
  }),
  (Oe.misc.hmac = function (t, e) {
    this.N = e = e || Oe.hash.sha256;
    var n,
      r = [[], []],
      a = e.prototype.blockSize / 32;
    for (
      this.q = [new e(), new e()], t.length > a && (t = e.hash(t)), n = 0;
      a > n;
      n++
    )
      (r[0][n] = 909522486 ^ t[n]), (r[1][n] = 1549556828 ^ t[n]);
    this.q[0].update(r[0]), this.q[1].update(r[1]);
  }),
  (Oe.misc.hmac.prototype.encrypt = Oe.misc.hmac.prototype.mac =
    function (t) {
      return (
        (t = new this.N(this.q[0]).update(t).finalize()),
        new this.N(this.q[1]).update(t).finalize()
      );
    }),
  (Oe.misc.pbkdf2 = function (t, e, n, r, a) {
    (n = n || 1e3),
      (0 > r || 0 > n) && Vn(Oe.exception.invalid("invalid params to pbkdf2")),
      typeof t == "string" && (t = Oe.codec.utf8String.toBits(t)),
      (a = a || Oe.misc.hmac),
      (t = new a(t));
    var s,
      i,
      o,
      u,
      l = [],
      c = Oe.bitArray;
    for (u = 1; 32 * l.length < (r || 1); u++) {
      for (a = s = t.encrypt(c.concat(e, [u])), i = 1; n > i; i++)
        for (s = t.encrypt(s), o = 0; o < s.length; o++) a[o] ^= s[o];
      l = l.concat(a);
    }
    return r && (l = c.clamp(l, r)), l;
  }),
  (Oe.prng = function (t) {
    (this.e = [new Oe.hash.sha256()]),
      (this.k = [0]),
      (this.H = 0),
      (this.w = {}),
      (this.F = 0),
      (this.L = {}),
      (this.O = this.f = this.l = this.U = 0),
      (this.a = [0, 0, 0, 0, 0, 0, 0, 0]),
      (this.i = [0, 0, 0, 0]),
      (this.C = $r),
      (this.D = t),
      (this.r = $l),
      (this.B = { progress: {}, seeded: {} }),
      (this.n = this.T = 0),
      (this.z = 1),
      (this.A = 2),
      (this.R = 65536),
      (this.J = [0, 48, 64, 96, 128, 192, 256, 384, 512, 768, 1024]),
      (this.S = 3e4),
      (this.Q = 80);
  }),
  (Oe.prng.prototype = {
    randomWords: function (t, e) {
      var n,
        r = [];
      n = this.isReady(e);
      var a;
      if (
        (n === this.n &&
          Vn(new Oe.exception.notReady("generator isn't seeded")),
        n & this.A)
      ) {
        (n = !(n & this.z)), (a = []);
        var s,
          i = 0;
        for (this.O = a[0] = new Date().valueOf() + this.S, s = 0; 16 > s; s++)
          a.push((4294967296 * Math.random()) | 0);
        for (
          s = 0;
          s < this.e.length &&
          ((a = a.concat(this.e[s].finalize())),
          (i += this.k[s]),
          (this.k[s] = 0),
          !(!n && this.H & (1 << s)));
          s++
        );
        for (
          this.H >= 1 << this.e.length &&
            (this.e.push(new Oe.hash.sha256()), this.k.push(0)),
            this.f -= i,
            i > this.l && (this.l = i),
            this.H++,
            this.a = Oe.hash.sha256.hash(this.a.concat(a)),
            this.C = new Oe.cipher.aes(this.a),
            n = 0;
          4 > n && ((this.i[n] = (this.i[n] + 1) | 0), !this.i[n]);
          n++
        );
      }
      for (n = 0; t > n; n += 4)
        (n + 1) % this.R === 0 && sU(this),
          (a = gH(this)),
          r.push(a[0], a[1], a[2], a[3]);
      return sU(this), r.slice(0, t);
    },
    setDefaultParanoia: function (t) {
      this.D = t;
    },
    addEntropy: function (t, e, n) {
      n = n || "user";
      var r,
        a,
        s = new Date().valueOf(),
        i = this.w[n],
        o = this.isReady(),
        u = 0;
      switch (
        ((r = this.L[n]),
        r === $r && (r = this.L[n] = this.U++),
        i === $r && (i = this.w[n] = 0),
        (this.w[n] = (this.w[n] + 1) % this.e.length),
        typeof t)
      ) {
        case "number":
          e === $r && (e = 1),
            this.e[i].update([r, this.F++, 1, e, s, 1, 0 | t]);
          break;
        case "object":
          if (
            ((n = Object.prototype.toString.call(t)),
            n === "[object Uint32Array]")
          ) {
            for (a = [], n = 0; n < t.length; n++) a.push(t[n]);
            t = a;
          } else
            for (
              n !== "[object Array]" && (u = 1), n = 0;
              n < t.length && !u;
              n++
            )
              typeof t[n] != "number" && (u = 1);
          if (!u) {
            if (e === $r)
              for (n = e = 0; n < t.length; n++)
                for (a = t[n]; a > 0; ) e++, (a >>>= 1);
            this.e[i].update([r, this.F++, 2, e, s, t.length].concat(t));
          }
          break;
        case "string":
          e === $r && (e = t.length),
            this.e[i].update([r, this.F++, 3, e, s, t.length]),
            this.e[i].update(t);
          break;
        default:
          u = 1;
      }
      u &&
        Vn(
          new Oe.exception.bug(
            "random: addEntropy only supports number, array of numbers or string"
          )
        ),
        (this.k[i] += e),
        (this.f += e),
        o === this.n &&
          (this.isReady() !== this.n && nU("seeded", Math.max(this.l, this.f)),
          nU("progress", this.getProgress()));
    },
    isReady: function (t) {
      return (
        (t = this.J[t !== $r ? t : this.D]),
        this.l && this.l >= t
          ? this.k[0] > this.Q && new Date().valueOf() > this.O
            ? this.A | this.z
            : this.z
          : this.f >= t
          ? this.A | this.n
          : this.n
      );
    },
    getProgress: function (t) {
      return (
        (t = this.J[t || this.D]), this.l >= t || this.f > t ? 1 : this.f / t
      );
    },
    startCollectors: function () {
      this.r ||
        (window.addEventListener
          ? (window.addEventListener("load", this.t, $l),
            window.addEventListener("mousemove", this.u, $l))
          : document.attachEvent
          ? (document.attachEvent("onload", this.t),
            document.attachEvent("onmousemove", this.u))
          : Vn(new Oe.exception.bug("can't attach event")),
        (this.r = !0));
    },
    stopCollectors: function () {
      this.r &&
        (window.removeEventListener
          ? (window.removeEventListener("load", this.t, $l),
            window.removeEventListener("mousemove", this.u, $l))
          : window.detachEvent &&
            (window.detachEvent("onload", this.t),
            window.detachEvent("onmousemove", this.u)),
        (this.r = $l));
    },
    addEventListener: function (t, e) {
      this.B[t][this.T++] = e;
    },
    removeEventListener: function (t, e) {
      var n,
        r,
        a = this.B[t],
        s = [];
      for (r in a) a.hasOwnProperty(r) && a[r] === e && s.push(r);
      for (n = 0; n < s.length; n++) (r = s[n]), delete a[r];
    },
    u: function (t) {
      Oe.random.addEntropy(
        [
          t.x || t.clientX || t.offsetX || 0,
          t.y || t.clientY || t.offsetY || 0,
        ],
        2,
        "mouse"
      );
    },
    t: function () {
      Oe.random.addEntropy(new Date().valueOf(), 2, "loadtime");
    },
  }),
  (Oe.random = new Oe.prng(6));
try {
  var rU = new Uint32Array(32);
  crypto.getRandomValues(rU),
    Oe.random.addEntropy(rU, 1024, "crypto['getRandomValues']");
} catch {}
(Oe.json = {
  defaults: {
    v: 1,
    iter: 1e3,
    ks: 128,
    ts: 64,
    mode: "ccm",
    adata: "",
    cipher: "aes",
  },
  encrypt: function (t, e, n, r) {
    (n = n || {}), (r = r || {});
    var a,
      s = Oe.json,
      i = s.h({ iv: Oe.random.randomWords(4, 0) }, s.defaults);
    return (
      s.h(i, n),
      (n = i.adata),
      typeof i.salt == "string" && (i.salt = Oe.codec.base64.toBits(i.salt)),
      typeof i.iv == "string" && (i.iv = Oe.codec.base64.toBits(i.iv)),
      (!Oe.mode[i.mode] ||
        !Oe.cipher[i.cipher] ||
        (typeof t == "string" && 100 >= i.iter) ||
        (i.ts !== 64 && i.ts !== 96 && i.ts !== 128) ||
        (i.ks !== 128 && i.ks !== 192 && i.ks !== 256) ||
        2 > i.iv.length ||
        4 < i.iv.length) &&
        Vn(new Oe.exception.invalid("json encrypt: invalid parameters")),
      typeof t == "string"
        ? ((a = Oe.misc.cachedPbkdf2(t, i)),
          (t = a.key.slice(0, i.ks / 32)),
          (i.salt = a.salt))
        : Oe.ecc &&
          t instanceof Oe.ecc.elGamal.publicKey &&
          ((a = t.kem()), (i.kemtag = a.tag), (t = a.key.slice(0, i.ks / 32))),
      typeof e == "string" && (e = Oe.codec.utf8String.toBits(e)),
      typeof n == "string" && (n = Oe.codec.utf8String.toBits(n)),
      (a = new Oe.cipher[i.cipher](t)),
      s.h(r, i),
      (r.key = t),
      (i.ct = Oe.mode[i.mode].encrypt(a, e, i.iv, n, i.ts)),
      s.encode(i)
    );
  },
  decrypt: function (t, e, n, r) {
    (n = n || {}), (r = r || {});
    var a = Oe.json;
    e = a.h(a.h(a.h({}, a.defaults), a.decode(e)), n, !0);
    var s;
    return (
      (n = e.adata),
      typeof e.salt == "string" && (e.salt = Oe.codec.base64.toBits(e.salt)),
      typeof e.iv == "string" && (e.iv = Oe.codec.base64.toBits(e.iv)),
      (!Oe.mode[e.mode] ||
        !Oe.cipher[e.cipher] ||
        (typeof t == "string" && 100 >= e.iter) ||
        (e.ts !== 64 && e.ts !== 96 && e.ts !== 128) ||
        (e.ks !== 128 && e.ks !== 192 && e.ks !== 256) ||
        !e.iv ||
        2 > e.iv.length ||
        4 < e.iv.length) &&
        Vn(new Oe.exception.invalid("json decrypt: invalid parameters")),
      typeof t == "string"
        ? ((s = Oe.misc.cachedPbkdf2(t, e)),
          (t = s.key.slice(0, e.ks / 32)),
          (e.salt = s.salt))
        : Oe.ecc &&
          t instanceof Oe.ecc.elGamal.secretKey &&
          (t = t.unkem(Oe.codec.base64.toBits(e.kemtag)).slice(0, e.ks / 32)),
      typeof n == "string" && (n = Oe.codec.utf8String.toBits(n)),
      (s = new Oe.cipher[e.cipher](t)),
      (n = Oe.mode[e.mode].decrypt(s, e.ct, e.iv, n, e.ts)),
      a.h(r, e),
      (r.key = t),
      Oe.codec.utf8String.fromBits(n)
    );
  },
  encode: function (t) {
    var e,
      n = "{",
      r = "";
    for (e in t)
      if (t.hasOwnProperty(e))
        switch (
          (e.match(/^[a-z0-9]+$/i) ||
            Vn(new Oe.exception.invalid("json encode: invalid property name")),
          (n += r + '"' + e + '":'),
          (r = ","),
          typeof t[e])
        ) {
          case "number":
          case "boolean":
            n += t[e];
            break;
          case "string":
            n += '"' + escape(t[e]) + '"';
            break;
          case "object":
            n += '"' + Oe.codec.base64.fromBits(t[e], 0) + '"';
            break;
          default:
            Vn(new Oe.exception.bug("json encode: unsupported type"));
        }
    return n + "}";
  },
  decode: function (t) {
    (t = t.replace(/\s/g, "")),
      t.match(/^\{.*\}$/) ||
        Vn(new Oe.exception.invalid("json decode: this isn't json!")),
      (t = t.replace(/^\{|\}$/g, "").split(/,/));
    var e,
      n,
      r = {};
    for (e = 0; e < t.length; e++)
      (n = t[e].match(
        /^(?:(["']?)([a-z][a-z0-9]*)\1):(?:(\d+)|"([a-z0-9+\/%*_.@=\-]*)")$/i
      )) || Vn(new Oe.exception.invalid("json decode: this isn't json!")),
        (r[n[2]] = n[3]
          ? parseInt(n[3], 10)
          : n[2].match(/^(ct|salt|iv)$/)
          ? Oe.codec.base64.toBits(n[4])
          : unescape(n[4]));
    return r;
  },
  h: function (t, e, n) {
    if ((t === $r && (t = {}), e === $r)) return t;
    for (var r in e)
      e.hasOwnProperty(r) &&
        (n &&
          t[r] !== $r &&
          t[r] !== e[r] &&
          Vn(new Oe.exception.invalid("required parameter overridden")),
        (t[r] = e[r]));
    return t;
  },
  Y: function (t, e) {
    var n,
      r = {};
    for (n in t) t.hasOwnProperty(n) && t[n] !== e[n] && (r[n] = t[n]);
    return r;
  },
  X: function (t, e) {
    var n,
      r = {};
    for (n = 0; n < e.length; n++) t[e[n]] !== $r && (r[e[n]] = t[e[n]]);
    return r;
  },
}),
  (Oe.encrypt = Oe.json.encrypt),
  (Oe.decrypt = Oe.json.decrypt),
  (Oe.misc.W = {}),
  (Oe.misc.cachedPbkdf2 = function (t, e) {
    var n,
      r = Oe.misc.W;
    return (
      (e = e || {}),
      (n = e.iter || 1e3),
      (r = r[t] = r[t] || {}),
      (n = r[n] =
        r[n] || {
          firstSalt:
            e.salt && e.salt.length
              ? e.salt.slice(0)
              : Oe.random.randomWords(2, 0),
        }),
      (r = e.salt === $r ? n.firstSalt : e.salt),
      (n[r] = n[r] || Oe.misc.pbkdf2(t, r, e.iter)),
      { key: n[r].slice(0), salt: r.slice(0) }
    );
  }),
  (function (t, e) {
    typeof define == "function" && define.amd
      ? define(["lodash"], function (n) {
          return (t.RNCryptor = e(n));
        })
      : typeof exports == "object"
      ? (module.exports = e(require("lodash")))
      : (t.RNCryptor = e(fe));
  })(joe, function (t) {
    var e,
      n,
      r,
      a = function (i, o) {
        function u() {
          this.constructor = i;
        }
        for (var l in o) s.call(o, l) && (i[l] = o[l]);
        return (
          (u.prototype = o.prototype),
          (i.prototype = new u()),
          (i.__super__ = o.prototype),
          i
        );
      },
      s = {}.hasOwnProperty;
    return (
      (r = {
        stringToBase64: function (i) {
          return Oe.codec.base64.fromBits(Oe.codec.utf8String.toBits(i));
        },
        base64ToString: function (i) {
          return Oe.codec.utf8String.fromBits(Oe.codec.base64.toBits(i));
        },
        generateHMACSHA256: function (i, o) {
          var u, l, c, d;
          return (
            (l = Oe.codec.hex.toBits(i)),
            (c = Oe.codec.hex.toBits(o)),
            (u = new Oe.misc.hmac(l)),
            (d = u.encrypt(c)),
            Oe.codec.hex.fromBits(d)
          );
        },
        generatePBKDF2WithSHA1: function (i, o, u, l) {
          var c, d, p;
          return (
            l == null && (l = 256),
            (c = function (m) {
              var y;
              (y = new Oe.misc.hmac(m, Oe.hash.sha1)),
                (this.encrypt = function () {
                  return y.encrypt.apply(y, arguments);
                });
            }),
            (p = Oe.codec.hex.toBits(o)),
            (d = Oe.misc.pbkdf2(i, p, u, l, c)),
            Oe.codec.hex.fromBits(d)
          );
        },
        getRandomHex: function (i) {
          return Oe.codec.hex.fromBits(Oe.random.randomWords((i / 8) * 2));
        },
        hexTobin: function (i) {
          var o, u;
          for (u = "", o = 0; o < i.length; )
            (u += String.fromCharCode(parseInt(i.substr(o, 2), 16))), (o += 2);
          return u;
        },
        stringToHex: function (i) {
          return Oe.codec.hex.fromBits(Oe.codec.utf8String.toBits(i));
        },
        hexToString: function (i) {
          return Oe.codec.utf8String.fromBits(Oe.codec.hex.toBits(i));
        },
        hexToBase64: function (i) {
          return Oe.codec.base64.fromBits(Oe.codec.hex.toBits(i));
        },
        base64ToHex: function (i) {
          return Oe.codec.hex.fromBits(Oe.codec.base64.toBits(i));
        },
        binToHex: function (i) {
          return this.base64ToHex(this.btoa(i));
        },
        chr: function (i) {
          return String.fromCharCode(i);
        },
        btoa: function (i) {
          return btoa(i);
        },
        atob: function (i) {
          return atob(i);
        },
        trim: function (i) {
          return i
            .replace(/(?:(?:^|\n)\s+|\s+(?:$|\n))/g, "")
            .replace(/\s+/g, " ");
        },
        cleanString: function (i) {
          return this.trim(i)
            .replace(/\s+/g, "")
            .replace(/(\r\n|\n|\r)/g, "");
        },
        extend: function () {
          return t.assignIn.apply(t, arguments);
        },
        sjcl: Oe,
      }),
      (e = (function (i) {
        function o(u, l) {
          (l = l ? JSON.stringify(l) : ""),
            (this.name = "RNCryptor error!"),
            (this.message =
              (u || "") +
              `
` +
              l);
        }
        return a(o, i), o;
      })(Error)),
      (n = {
        PBKDF_ITERATIONS: 1e4,
        ENCRYPTION_SALT: null,
        KEY: null,
        PASSWORD: null,
        PBKDF2_SIZE: 32,
        HMAC_SALT_LENGTH: 8,
        ENCRYPTION_SALT_LENGTH: 8,
        IV_LENGTH: 16,
        VERSION_LENGTH: 1,
        OPTIONS_LENGTH: 1,
        AES_MODE: "cbc",
        HMAC_SALT: null,
      }),
      (function () {
        function i(o) {
          var u, l, c, d;
          for (
            o = r.extend({}, n, o),
              Oe.beware[
                "CBC mode is dangerous because it doesn't protect message integrity."
              ](),
              o.HMAC_KEY ||
                typeof o.PASSWORD != "string" ||
                (o.HMAC_KEY = r.generatePBKDF2WithSHA1(
                  o.PASSWORD,
                  o.HMAC_SALT,
                  o.PBKDF_ITERATIONS
                )),
              o.KEY ||
                typeof o.PASSWORD != "string" ||
                (o.KEY = r.generatePBKDF2WithSHA1(
                  o.PASSWORD,
                  o.ENCRYPTION_SALT,
                  o.PBKDF_ITERATIONS
                )),
              o.options = r.chr(1),
              o.version = r.chr(2),
              this.settings = r.extend({}, n, o),
              d = ["KEY", "HMAC_KEY", "HMAC_SALT", "ENCRYPTION_SALT"],
              u = 0,
              l = d.length;
            l > u;
            u++
          )
            if (((c = d[u]), !this.settings[c]))
              throw new e(c + " is not defined");
          this.decrypt = t.memoize(
            t.bind(this.decrypt, this),
            (function (p) {
              return function (m) {
                return m + p.settings.KEY + p.settings.HMAC_KEY;
              };
            })(this)
          );
        }
        return (
          (i.helpers = r),
          (i.CryptoError = e),
          (i.prototype.encrypt = function (o) {
            var u, l, c, d, p, m, y, I, O, g, C, H, B, he, de, U, R;
            (R = this.settings.version),
              (de = this.settings.options),
              (m = r.hexTobin(this.settings.ENCRYPTION_SALT)),
              (y = r.hexTobin(this.settings.HMAC_SALT)),
              (C = r.getRandomHex(this.settings.IV_LENGTH)),
              (H = Oe.codec.hex.toBits(this.settings.KEY)),
              (g = Oe.codec.hex.toBits(C)),
              (O = r.hexTobin(C)),
              (B = Oe.codec.utf8String.toBits(o)),
              (U = new Oe.cipher.aes(H));
            try {
              Oe.beware[
                "CBC mode is dangerous because it doesn't protect message integrity."
              ](),
                (l = Oe.mode[this.settings.AES_MODE].encrypt(U, B, g));
            } catch (ge) {
              throw ((u = ge), new e(u.message, this.settings));
            }
            return (
              (d = Oe.codec.hex.fromBits(l)),
              (c = r.hexTobin(d)),
              (he = R + de + m + y + O + c),
              (I = r.generateHMACSHA256(
                this.settings.HMAC_KEY,
                r.binToHex(he)
              )),
              (p = he + r.hexTobin(I)),
              r.btoa(p)
            );
          }),
          (i.prototype._extractData = function (o) {
            var u, l, c, d, p, m, y, I, O, g, C, H, B, he, de, U;
            return (
              (U = 0),
              (H = this.settings.OPTIONS_LENGTH + U),
              (he = H + U + this.settings.OPTIONS_LENGTH),
              (I = he + this.settings.ENCRYPTION_SALT_LENGTH),
              (g = I + this.settings.HMAC_SALT_LENGTH),
              (c = g + this.settings.IV_LENGTH),
              (l = o.length - (c + this.settings.PBKDF2_SIZE)),
              (m = o.length - this.settings.PBKDF2_SIZE),
              (de = o.substr(U, this.settings.VERSION_LENGTH)),
              (C = o.substr(H, this.settings.OPTIONS_LENGTH)),
              (B = o.substr(he, this.settings.ENCRYPTION_SALT_LENGTH)),
              (y = o.substr(I, this.settings.HMAC_SALT_LENGTH)),
              (O = o.substr(g, this.settings.IV_LENGTH)),
              (u = o.substr(c, l)),
              (p = o.substr(m)),
              (d = de + C + B + y + O + u),
              {
                hmac: r.binToHex(p),
                encryptionSalt: r.binToHex(B),
                ivHex: r.binToHex(O),
                dataWithoutHMACinHex: r.binToHex(d),
                cipher: u,
              }
            );
          }),
          (i.prototype.decrypt = function (o) {
            var u, l, c, d, p, m, y, I, O;
            if (
              ((l = r.atob(r.cleanString(o))),
              (m = this._extractData(l)),
              (p = r.generateHMACSHA256(
                this.settings.HMAC_KEY,
                m.dataWithoutHMACinHex
              )),
              p !== m.hmac)
            )
              throw new e("HMAC " + p + " mismatch", m);
            (I = Oe.codec.hex.toBits(this.settings.KEY)),
              (y = Oe.codec.hex.toBits(m.ivHex)),
              (u = Oe.codec.base64.toBits(r.btoa(m.cipher))),
              (O = new Oe.cipher.aes(I));
            try {
              Oe.beware[
                "CBC mode is dangerous because it doesn't protect message integrity."
              ](),
                (c = Oe.mode[this.settings.AES_MODE].decrypt(O, u, y));
            } catch (g) {
              throw ((d = g), new e(d.message));
            }
            return Oe.codec.utf8String.fromBits(c);
          }),
          i
        );
      })()
    );
  });
const ol = joe.RNCryptor,
  Kd = {
    hmac_salt: "ES38/f3lTo8=",
    salt: "I49Mqe9ORsk=",
    password: "",
    hmac_key:
      "c2592201a988bedfb7b909915e94bd51e532e7162bc272c2dc688abca1544799",
    key: "29cebb18f20090de7ba31d11e8afe82703fde64cddf733370d3f18aecab739ee",
  };
class hf {
  constructor() {
    (this.rnCryptor = ol), (this.cryptor = null);
  }
  getCryptor() {
    return this.cryptor;
  }
  decrypt(e) {
    let n;
    if (typeof e != "string") return e;
    if (e.length === 0) return "";
    const r = this.getCryptor();
    try {
      n = r.decrypt(e);
    } catch (a) {
      if (a.name === "RNCryptor error!")
        switch (S6(e)) {
          case 4:
            return new sn(
              "RNCryptor has tried to decrypt a Sodium encrypted message",
              Fi.sodium,
              a
            );
          case 3:
            return new sn(
              "RNCryptor decryption has failed",
              Fi.rnCryptorCurrentVersion,
              a
            );
          default:
            return new sn(
              "RNCryptor has got a ciphertext with an unknown version",
              Fi.unknown,
              a
            );
        }
      return new sn("RNCryptor decryption unknown error", a);
    }
    return n;
  }
  encrypt(e) {
    let n;
    if (typeof e != "string") return e;
    try {
      n = this.getCryptor().encrypt(e);
    } catch (r) {
      return r.name === "RNCryptor error!"
        ? new sn("RNCryptor encryption has failed", r)
        : new sn("RNCryptor encryption unknown error", r);
    }
    return n;
  }
  getSettings() {
    return BP(xl(this.cryptor.settings), Xv);
  }
  static generateHash(e) {
    const n = ol.helpers.sjcl.hash.sha256.hash(e);
    return ol.helpers.sjcl.codec.hex.fromBits(n);
  }
}
class zoe extends hf {
  constructor(e = Kd.salt, n = Kd.hmac_salt, r = Kd.password) {
    super();
    const a = {
      ENCRYPTION_SALT: ol.helpers.base64ToHex(e),
      HMAC_SALT: ol.helpers.base64ToHex(n),
      PASSWORD: r,
    };
    this.cryptor = new ol(a);
  }
}
class $oe extends hf {
  constructor(e = Kd.salt, n = Kd.hmac_salt, r = Kd.key, a = Kd.hmac_key) {
    super();
    const s = {
      ENCRYPTION_SALT: ol.helpers.base64ToHex(e),
      HMAC_SALT: ol.helpers.base64ToHex(n),
      HMAC_KEY: a,
      KEY: r,
    };
    this.cryptor = new ol(s);
  }
}
class vH {
  constructor(e) {
    this.cryptoSystem = new $oe(
      e.salts.encryption,
      e.salts.hmac,
      e.encryptionKey,
      e.hmacKey
    );
  }
  decrypt(e) {
    return this.cryptoSystem.decrypt(e);
  }
  encrypt(e) {
    return this.cryptoSystem.encrypt(e);
  }
}
function _H(t, e) {
  const r = new zoe(e.encryption, e.hmac, t).getSettings();
  return { encryptionKey: r.KEY, hmacKey: r.HMAC_KEY, salts: e };
}
const Woe = k("START_CENTRIFUGE");
class aU extends Error {
  constructor() {
    super(...arguments), (this.name = "LocalCryptoSystemError");
  }
}
class gWe {
  constructor(e, n) {
    (this.rnCryptor = e), (this.sodiumCryptor = n);
  }
  encrypt(e) {
    var n;
    return (
      tt.exception("MigrationCryptor must not encrypt anything", new Error()),
      e == null
        ? e
        : (n = this.sodiumCryptor.encrypt(e)) == null
        ? void 0
        : n.toString()
    );
  }
  decrypt(e) {
    var r, a;
    return e == null
      ? e
      : S6(e) === 4
      ? (r = this.sodiumCryptor.decrypt(e)) == null
        ? void 0
        : r.toString()
      : (a = this.rnCryptor.decrypt(e)) == null
      ? void 0
      : a.toString();
  }
}
class vWe {
  encrypt() {
    return "";
  }
  decrypt() {
    return "";
  }
}
const _We = ["encryptedTeamKey", "ownerPublicKey", "privateKey"],
  iU = ["encryptionKey", "hmacKey", "encryptionSalt", "hmacSalt"],
  oU = ["publicKey", "privateKey", "personalKey"],
  bH = [
    "encryptionKey",
    "hmacKey",
    "encryptionSalt",
    "hmacSalt",
    "apiKey",
    "publicKey",
    "privateKey",
    "personalKey",
    "encryptedTeamKey",
    "ownerPublicKey",
    "centrifugeJWTToken",
    "centrifugeClientID",
  ];
class bWe {
  constructor() {
    (this.cache = new Map()), (this.localCryptoSystem = new vWe());
  }
  setLocalCryptoSystem(e) {
    this.localCryptoSystem = e;
  }
  passwordRememberStatus() {
    const e = (i) => this.getPersistedCredential(i) != null;
    return ["apiKey", ...iU].every(e)
      ? [...oU].every(e)
        ? "remembered"
        : "remembered-without-sharing"
      : "not-remembered";
  }
  deleteAllCredentials() {
    bH.forEach((e) => {
      this.removeCredential(e, !0);
    });
  }
  deleteAllPersistedCredentials() {
    bH.forEach((e) => {
      this.removeCredential(e, !1);
    });
  }
  deleteTeamCredentials() {
    _We.forEach((e) => {
      this.removeCredential(e, !0);
    });
  }
  setKeySet(e) {
    this.setAccountsSet(e);
  }
  getKeySet() {
    return this.getAccountsSet(oU);
  }
  setRNCryptorSet(e) {
    this.setAccountsSet(e);
  }
  getRNCryptorSet() {
    return this.getAccountsSet(iU);
  }
  resetTeamKeySet() {
    this.removeCredential("encryptedTeamKey", !0),
      this.removeCredential("ownerPublicKey", !0);
  }
  getApiKey() {
    return this.getCredential("apiKey");
  }
  setApiKey(e) {
    this.setCredential("apiKey", e);
  }
  getSalts() {
    const e = this.getCredential("encryptionSalt"),
      n = this.getCredential("hmacSalt");
    return e == null || n == null ? null : { encryption: e, hmac: n };
  }
  getKeyPair() {
    const e = this.getCredential("privateKey"),
      n = this.getCredential("publicKey");
    return e == null || n == null ? null : { privateKey: e, publicKey: n };
  }
  setKeyPair(e) {
    this.setCredential("privateKey", e.privateKey),
      this.setCredential("publicKey", e.publicKey);
  }
  getPersonalV3Credentials() {
    const e = this.getRNCryptorSet();
    return e == null
      ? null
      : {
          encryptionKey: e.encryptionKey,
          hmacKey: e.hmacKey,
          salts: { encryption: e.encryptionSalt, hmac: e.hmacSalt },
        };
  }
  setPersonalV3Credentials(e) {
    this.setRNCryptorSet({
      encryptionKey: e.encryptionKey,
      hmacKey: e.hmacKey,
      encryptionSalt: e.salts.encryption,
      hmacSalt: e.salts.hmac,
    });
  }
  getPersonalV4Credentials() {
    const e = this.getKeySet();
    return e == null ? null : { key: e.personalKey };
  }
  setPersonalV4Credentials(e) {
    this.setCredential("personalKey", e.key);
  }
  getCentrifugeJWTToken() {
    const e = this.getCredential("centrifugeJWTToken"),
      n = this.getCredential("centrifugeClientID");
    return e == null || n == null ? null : { token: e, clientID: n };
  }
  setCentrifugeJWTToken({ token: e, clientID: n }) {
    this.setCredential("centrifugeJWTToken", e),
      this.setCredential("centrifugeClientID", n);
  }
  getCredential(e) {
    let n = this.cache.get(e);
    return (
      n == null &&
        ((n = this.getPersistedCredential(e)),
        n != null && this.cache.set(e, n)),
      n
    );
  }
  getPersistedCredential(e) {
    var n;
    return (n = this.localCryptoSystem.decrypt(Ft.getCredential(e))) == null
      ? void 0
      : n.toString();
  }
  setCredential(e, n) {
    var a;
    const r =
      (a = this.localCryptoSystem.encrypt(n)) == null ? void 0 : a.toString();
    Ft.setCredential(e, zu(r, null)), this.cache.set(e, n);
  }
  removeCredential(e, n) {
    n && this.cache.delete(e), Ft.removeCredential(e);
  }
  getAccountsSet(e) {
    const n = {};
    return (
      e.forEach((r) => {
        n[r] = this.getCredential(r);
      }),
      Object.values(n).some((r) => !r) ? null : n
    );
  }
  setAccountsSet(e) {
    K6(e, (n, r) => {
      EWe(r) && this.setCredential(r, n);
    });
  }
}
const EWe = (t) => bH.includes(t),
  s_ = (t, e, { debug: n, charset: r }) => {
    const a = t.encrypt(Buffer.from(e, r));
    if (a) return a.toString("base64");
    const s = Zv(t.getLastError()),
      i = `${n} encryption has failed with error: ${s}`;
    return new sn(i, Fi.sodium);
  },
  r_ = (t, e, { debug: n, charset: r }) => {
    const a = t.decrypt(Buffer.from(e, "base64"));
    if (a) return a.toString(r);
    const s = Zv(t.getLastError()),
      i = `${n} decryption has failed with error: ${s}`;
    return new sn(i, Fi.sodium);
  };
class TWe {
  constructor(e) {
    this.cryptoSystem = Ms.systems.FromEncryptionKey(
      Buffer.from(e.key, "base64")
    );
  }
  decrypt(e) {
    return e == null
      ? null
      : r_(this.cryptoSystem, e, { debug: "Sodium Personal" });
  }
  encrypt(e) {
    return e == null
      ? null
      : s_(this.cryptoSystem, e, { debug: "Sodium Personal" });
  }
}
class qoe {
  constructor(e) {
    (this.cryptoSystem = Ms.systems.ForMemberWithOwnerKey(
      Buffer.from(e.keyPair.ownerPublicKey, "base64"),
      Buffer.from(e.keyPair.privateKey, "base64"),
      Buffer.from(e.encryptedKey, "base64")
    )),
      (this.initializationError = Cse(this.cryptoSystem, Fi.sodium));
  }
  decrypt(e) {
    return e == null
      ? null
      : r_(this.cryptoSystem, e, { debug: "Sodium Team Member" });
  }
  encrypt(e) {
    return e == null
      ? null
      : s_(this.cryptoSystem, e, { debug: "Sodium Team Member" });
  }
}
class fp {
  constructor(e) {
    (this.cryptoSystem = Ms.systems.ForOwner(
      {
        privateKey: Buffer.from(e.keyPair.privateKey, "base64"),
        publicKey: Buffer.from(e.keyPair.publicKey, "base64"),
      },
      Buffer.from(e.encryptedKey, "base64")
    )),
      (this.initializationError = Cse(this.cryptoSystem, Fi.sodium));
  }
  decrypt(e) {
    return e == null
      ? null
      : r_(this.cryptoSystem, e, { debug: "Sodium Team Owner" });
  }
  encrypt(e) {
    return e == null
      ? null
      : s_(this.cryptoSystem, e, { debug: "Sodium Team Owner" });
  }
  exchangeSecret(e) {
    const n = this.cryptoSystem.exchangeSecret(Buffer.from(e, "base64"));
    if (n == null) {
      const r = Zv(this.cryptoSystem.getLastError()),
        a = new Error(`Exchange secret has failed with error: ${r}`);
      throw (tt.exception(a.message, a), a);
    }
    return n.toString("base64");
  }
  exchangeSecretSafe(e) {
    return Ci.wrap(() => this.exchangeSecret(e));
  }
}
function xa(t) {
  const [e, n] = Go(t, wWe);
  return { ok: e.map((r) => r.val), err: n.map((r) => r.val) };
}
function wWe(t) {
  return t.ok;
}
const Yoe = k("MISSING_PERSONAL_CREDENTIALS");
function PWe() {
  return Ms.utils.generateEncryptionKey().toString("base64");
}
class EH {
  constructor(e) {
    this.cryptoSystem = Ms.systems.FromKeyPair({
      publicKey: Buffer.from(e.publicKey, "base64"),
      privateKey: Buffer.from(e.privateKey, "base64"),
    });
  }
  decrypt(e) {
    return r_(this.cryptoSystem, e, { debug: "Key Pair", charset: "base64" });
  }
  encrypt(e, n = "base64") {
    return s_(this.cryptoSystem, e, { debug: "Key Pair", charset: n });
  }
}
function Cw(t) {
  return new EH(t).encrypt(PWe());
}
function IWe() {
  const t = Ms.utils.generateKeyPair();
  return {
    publicKey: t.publicKey.toString("base64"),
    privateKey: t.privateKey.toString("base64"),
  };
}
class TH {
  constructor(e) {
    this.cryptoSystem = Ms.systems.FromPassword(
      Buffer.from(e.password),
      Buffer.concat([
        Buffer.from(e.encryptionSalt, "base64"),
        Buffer.from(e.hmacSalt, "base64"),
      ])
    );
  }
  decrypt(e) {
    return r_(this.cryptoSystem, e, { debug: "Password", charset: "base64" });
  }
  decryptKeyPair(e) {
    const n = this.decrypt(e.encryptedPrivateKey);
    return sn.is(n) ? n : { privateKey: n, publicKey: e.publicKey };
  }
  encrypt(e, n = "base64") {
    return s_(this.cryptoSystem, e, { debug: "Password", charset: n });
  }
  encryptKeyPair(e) {
    const n = this.encrypt(e.privateKey);
    return sn.is(n) ? n : { encryptedPrivateKey: n, publicKey: e.publicKey };
  }
}
class CWe {
  constructor(e, n, r = () => {}) {
    (this.api = e), (this.credentialsStorage = n), (this.dispatch = r);
  }
  async retrievePersonalKey() {
    const e = this.credentialsStorage.getPersonalV4Credentials(),
      n = this.credentialsStorage.getKeyPair();
    if (n == null || e == null) return;
    const r = await this.api.getKeyPair();
    if (r.id == null) return;
    if (r.public_key !== n.publicKey) {
      tt.exception(
        "Stored key pair does not match with the remote one",
        new Error()
      );
      return;
    }
    const a = new EH(n).decrypt(r.encrypted_personal_key);
    if (!(typeof a == "string" && a === e.key)) {
      tt.exception(
        "Stored personal key does not match with the remote one",
        new Error()
      );
      return;
    }
    return { key: a };
  }
  async retrieveKeyPair() {
    const e = this.credentialsStorage.getKeyPair();
    if (e == null) return Nn(new Us("Key pair is not stored"));
    try {
      const n = await this.api.getKeyPair();
      return n.id == null
        ? Nn(new Us("Key pair is not stored on the server"))
        : n.public_key !== e.publicKey
        ? (tt.exception(
            "Stored key pair does not match with the remote one",
            new Error()
          ),
          Nn(new Us("Stored key pair does not match with the remote one")))
        : Ga(e);
    } catch (n) {
      return Nn(n);
    }
  }
  async getOrCreateKeyPair(e, n) {
    const r = await this.retrieveKeyPair();
    if (r.ok) return r.val;
    const a = n ?? (await this.generate(e));
    return this.persist(e, a);
  }
  persist(e, n) {
    const r = new TH(e).decryptKeyPair({
      encryptedPrivateKey: n.encrypted_private_key,
      publicKey: n.public_key,
    });
    if (sn.is(r))
      throw (
        (tt.exception("Try to store incorrect decryption KeyPair", new Error()),
        r)
      );
    const a = new EH(r).decrypt(n.encrypted_personal_key);
    if (sn.is(a))
      throw (
        (tt.exception(
          "Try to store incorrect decryption personal encryption key",
          new Error()
        ),
        a)
      );
    return (
      this.credentialsStorage.setKeyPair(r),
      this.credentialsStorage.setPersonalV4Credentials({ key: a }),
      r
    );
  }
  async reencrypt(e, n = !1) {
    const r = await this.retrieveKeyPair();
    if (r.err)
      return n
        ? { encrypted_private_key: "", public_key: "" }
        : uU(e, this.dispatch);
    const a = new TH(e).encryptKeyPair(r.val);
    if (sn.is(a)) return a;
    const { encryptedPrivateKey: s, publicKey: i } = a;
    return { encrypted_private_key: s, public_key: i };
  }
  async generate(e) {
    const n = uU(e, this.dispatch);
    if (sn.is(n)) throw n;
    try {
      return await this.api.setKeyPair(n);
    } catch (r) {
      if (r.status === 400) return this.api.getKeyPair();
      throw r;
    }
  }
}
function uU(t, e) {
  const n = IWe(),
    r = Cw(n);
  if (sn.is(r)) return r;
  e(RX());
  const a = new TH(t).encryptKeyPair(n);
  return sn.is(a)
    ? a
    : {
        public_key: a.publicKey,
        encrypted_private_key: a.encryptedPrivateKey,
        encrypted_personal_key: r,
      };
}
async function AWe(t, e) {
  var a;
  const n = (a = e.getDefault()) == null ? void 0 : a.credentials;
  return (n == null ? void 0 : n.type) !== "owner"
    ? Nn(new Us("Cryptor type cannot issue keys to default team vault"))
    : new fp(n).exchangeSecretSafe(t.public_key);
}
async function OWe(t, e, n) {
  const r = n == null ? void 0 : n.filter((s) => s.name !== "");
  if (!r) return xa([]);
  const a = r.map((s) => {
    const { role: i, name: o } = s,
      u = Cw(t);
    return sn.is(u)
      ? Nn(u)
      : i == null
      ? Ga({ name: o, owner: { encrypted_key: u } })
      : new fp({ type: "owner", keyPair: t, encryptedKey: u })
          .exchangeSecretSafe(e.public_key)
          .map((c) => ({
            name: o,
            owner: { encrypted_key: u },
            member: { role: i, encrypted_key: c },
          }));
  });
  return xa(a);
}
async function HWe(t, e, n) {
  if (!n) return xa([]);
  const r = new Map(Array.from(e.values()).map((s) => [s.vaultId, s])),
    a = n.map((s) => {
      var l;
      const i = (l = r.get(s.id)) == null ? void 0 : l.credentials,
        { role: o } = s;
      return i == null
        ? Nn(new Us(`No encryption key for vault_id ${s.id}`))
        : (rn(i.type === "owner"),
          new fp(i)
            .exchangeSecretSafe(t.public_key)
            .map((c) => ({ id: s.id, encrypted_key: c, role: o })));
    });
  return xa(a);
}
const NWe = (t) => {
  const [e, n] = Go(t, sn.is);
  return e.length > 0 ? new Wf(e) : new AggregateError(n);
};
class h3 {
  constructor(e = []) {
    this.impl = new Map(e);
  }
  has(e) {
    return this.impl.has(e);
  }
  hasDefault() {
    return this.has(wA);
  }
  get(e) {
    return this.impl.get(e);
  }
  getDefault() {
    return this.get(wA);
  }
  set(e, n) {
    return this.impl.set(e, n), this;
  }
  setDefault(e) {
    return this.set(wA, e);
  }
  markAsDefault(e) {
    const n = this.impl.get(e);
    return n != null && this.setDefault(n), this;
  }
  mapValues(e) {
    const n = Array.from(this.impl.entries()).map(([r, a]) => [r, e(a)]);
    return new h3(n);
  }
  keys() {
    return this.impl.keys();
  }
  values() {
    return this.impl.values();
  }
}
function RWe(t = []) {
  return new h3(t);
}
const wA = null,
  kWe = -1;
class xWe {
  constructor(e, n = () => {}) {
    (this.api = e), (this.dispatch = n);
  }
  async obtainAllVaultsCredentials(e, n, r) {
    const a = await this.downloadVaultCredentials(n);
    let s = a.getDefault();
    return (
      s == null &&
        r.createDefaultTeamVaultKeyIfMissing &&
        (s = {
          role: "Owner",
          credentials: await this.createDefaultTeamVaultCredentials(e, n),
          vaultId: kWe,
        }),
      s != null && a.setDefault(s),
      a
    );
  }
  async grantAccessToVaults(
    e,
    { ownerId: n, memberId: r, defaultVault: a, vaults: s, newVaults: i }
  ) {
    const o = Ci.wrapAsync(() =>
        this.obtainAllVaultsCredentials(n, e, {
          createDefaultTeamVaultKeyIfMissing: !0,
        })
      ),
      u = Ci.wrapAsync(() => this.api.getMemberPublicKey(r)),
      [l, c] = await Promise.all([o, u]);
    if (l.err) return l;
    if (c.err) return c;
    const [d] = c.unwrap().objects;
    if (d == null) return Nn(new Us("Member doesn't have public key"));
    if (d.has_team_key)
      return Nn(new Us("Member does have a team key already"));
    const p = await AWe(d, l.unwrap());
    if (p.err) return p;
    const { ok: m, err: y } = await HWe(d, l.unwrap(), s);
    if (y.length > 0)
      return Nn(
        new AggregateError(y, "No encryption key for some of the vaults")
      );
    const { ok: I, err: O } = await OWe(e, d, i);
    return O.length > 0
      ? Nn(NWe(O))
      : Ci.wrapAsync(() =>
          this.api.grantAccessToVaults({
            user_id: r,
            default_vault: {
              role: a == null ? void 0 : a.role,
              encrypted_key: p.unwrap(),
            },
            vaults: m ?? [],
            ...Sa(i != null, { new_vaults: I }),
          })
        );
  }
  async createDefaultTeamVaultCredentials(e, n) {
    const r = Cw(n);
    if (sn.is(r)) throw r;
    this.dispatch(NX());
    try {
      const a = await this.api.uploadTeamEncryptionKey({
        encrypted_for: e,
        encrypted_key: r,
      });
      return Ly(a, n);
    } catch (a) {
      if (!(a.status === 400)) throw a;
      const o = (await this.api.getVaultKeys()).find((u) => u.is_default);
      return (
        rn(o),
        Ly(
          {
            original_key: o.original_key,
            encrypted_with: { public_key: o.encrypted_with.public_key },
            encrypted_key: o.encrypted_key,
          },
          n
        )
      );
    }
  }
  async downloadVaultCredentials(e) {
    const n = await this.api.getVaultKeys(),
      r = n.find((i) => i.is_default),
      a = (r == null ? void 0 : r.role) === "Owner",
      s = RWe(
        n.map((i) => [
          i.original_key,
          {
            role: i.role,
            vaultId: i.vault,
            credentials: LWe(i, e, { forceOwnerCredentials: a }),
          },
        ])
      );
    return (
      (r == null ? void 0 : r.original_key) != null &&
        s.markAsDefault(r.original_key),
      s
    );
  }
  async getVaultMemberKeys({ cryptor: e, members: n }) {
    const r = await Ci.wrapAsync(() => this.api.getPublicTeamKeys());
    if (r.err) return xa([r]);
    const a = $6(r.val.objects, n, "user_id"),
      s = new Map(n.map((o) => [o.user_id, o.role])),
      i = a.map(({ public_key: o, user_id: u }) =>
        Ci.wrap(() => e.exchangeSecret(o)).map((l) => ({
          encrypted_for: u,
          encrypted_key: l,
          role: s.get(u) ?? "Editor",
        }))
      );
    return xa(i).err.length > 0
      ? xa([Nn(new Us("Failed to encrypt keys"))])
      : xa(i);
  }
  async createNewVaultKey(e, n, r) {
    const a = Cw(e);
    if (sn.is(a)) return xa([Nn(a)]);
    const s = new fp({ keyPair: e, type: "owner", encryptedKey: a }),
      i = r.some((o) => o.user_id === n);
    return this.getVaultMemberKeys({
      cryptor: s,
      members: i ? r : [...r, { user_id: n, role: "Owner" }],
    });
  }
  async issueVaultKey(e, n, r, a) {
    const s = await Ci.wrapAsync(() =>
      this.obtainAllVaultsCredentials(n, e, {
        createDefaultTeamVaultKeyIfMissing: !0,
      })
    );
    if (s.err) return xa([s]);
    const i = Array.from(s.val.values()).find((u) => u.vaultId === r);
    if (!i) return xa([Nn(new Us("Missing vault key"))]);
    if (i.credentials.type !== "owner")
      return xa([Nn(new Us("No access to vault modifications"))]);
    const o = new fp(i.credentials);
    return this.getVaultMemberKeys({ cryptor: o, members: a });
  }
}
function LWe(t, e, n) {
  return n.forceOwnerCredentials
    ? Ly(t, e)
    : t.is_default
    ? t.role === "Owner"
      ? Ly(t, e)
      : lU(t, e)
    : t.role !== "Member"
    ? Ly(t, e)
    : lU(t, e);
}
function Ly(t, e) {
  return {
    type: "owner",
    keyPair: {
      privateKey: e.privateKey,
      publicKey: t.encrypted_with.public_key,
    },
    encryptedKey: t.encrypted_key,
  };
}
function lU(t, e) {
  return {
    type: "member",
    keyPair: {
      privateKey: e.privateKey,
      ownerPublicKey: t.encrypted_with.public_key,
    },
    encryptedKey: t.encrypted_key,
  };
}
class cU extends Error {
  constructor() {
    super("Required personal credentials are not found"),
      (this.name = "MissingPersonalCredentials"),
      (this.status = -102);
  }
}
class dU extends Error {
  constructor() {
    super("Required rncryptor credentials are not found"),
      (this.name = "MissingRNCryptorCredentials"),
      (this.status = -101);
  }
}
class Xoe {
  constructor(e, n, r) {
    (this.legacyPersonal = e), (this.personal = n), (this.vaults = r);
  }
  encryptV3(e, n) {
    return this.resolveCryptor({
      config: n,
      schema: "v3",
      purpose: "encrypt",
    }).encrypt(e);
  }
  encryptV5(e, n) {
    return this.resolveCryptor({
      config: n,
      schema: "v5",
      purpose: "encrypt",
    }).encrypt(e);
  }
  decryptV3(e, n) {
    return this.resolveCryptor({
      config: n,
      schema: "v3",
      purpose: "decrypt",
    }).decrypt(e);
  }
  decryptV5(e, n) {
    return this.resolveCryptor({
      config: n,
      schema: "v5",
      purpose: "decrypt",
    }).decrypt(e);
  }
  resolveCryptor(e) {
    var o;
    const { config: n, schema: r, purpose: a } = e,
      s = r.slice(1);
    if (MWe(n)) {
      const u = r === "v5" ? this.personal : this.legacyPersonal;
      if (u == null)
        throw new sn(
          `A non-migrated individual user has tried to ${a} data with encryption schema ${s}`,
          Fi.sodium
        );
      return u;
    }
    const i = (o = this.vaults) == null ? void 0 : o.get(n.encrypted_with);
    if (i == null)
      throw new sn(
        `An individual user has tried to ${a} team data (encryption schema: ${s})`,
        Fi.sodium
      );
    return i;
  }
}
function MWe(t) {
  return !t.is_shared && t.encrypted_with == null;
}
class pU extends Error {}
class DWe {
  constructor(e, n, r = () => {}) {
    (this.api = e),
      (this.credentialsStorage = n),
      (this.dispatch = r),
      (this.keyRingRepository = new xWe(this.api, this.dispatch)),
      (this.keyPairRepository = new CWe(
        this.api,
        this.credentialsStorage,
        this.dispatch
      ));
  }
  rnCryptorForMigration() {
    const e = this.retrieveRequiredPersonalV3Credentials();
    return new vH(e);
  }
  async getKeyRingStatus(e, n) {
    if (n == null) return { status: "no vaults" };
    const r = await this.keyPairRepository.retrieveKeyPair();
    if (r.err)
      return {
        status: "vaults setup incomplete",
        reason: new pU(
          "Team account doesn't have a key pair (sharing is disabled)"
        ),
      };
    try {
      return {
        status: "has vaults",
        vaults: (
          await this.keyRingRepository.obtainAllVaultsCredentials(e, r.val, {
            createDefaultTeamVaultKeyIfMissing: n.canManageTeam,
          })
        ).mapValues((s) => ({ role: s.role })),
      };
    } catch (a) {
      return { status: "vaults setup incomplete", reason: a };
    }
  }
  async syncCryptor(e, n, r) {
    const a = await this.retrieveRequiredCredentials(e, n, r),
      s = a.personalV4 != null ? new TWe(a.personalV4) : null,
      i = a.vaults ? a.vaults.mapValues((o) => GWe(o.credentials)) : null;
    return new Xoe(new vH(a.personalV3), s, i);
  }
  async createTeamCryptor(e, n) {
    var s;
    const r = await this.retrieveRequiredTeamCredentials(e, n),
      a =
        (s = r == null ? void 0 : r.getDefault()) == null
          ? void 0
          : s.credentials;
    if (a) return a.type === "owner" ? new fp(a) : new qoe(a);
  }
  async ensureUserHasAllRequiredCredentials(e, n, r, a) {
    this.ensureUserHasAllRequiredV3Credentials(n);
    const s = await this.keyPairRepository.getOrCreateKeyPair(n, r);
    a != null &&
      (await this.keyRingRepository.obtainAllVaultsCredentials(e, s, {
        createDefaultTeamVaultKeyIfMissing: a.canManageTeam,
      }));
  }
  async retrieveRequiredCredentials(e, n, r) {
    try {
      const [a, s, i] = await Promise.all([
        this.retrieveRequiredPersonalV3Credentials(),
        this.retrieveRequiredPersonalV4Credentials(n),
        this.retrieveRequiredTeamCredentials(e, r),
      ]);
      return { personalV3: a, personalV4: s, vaults: i };
    } catch (a) {
      throw (
        (a instanceof dU
          ? tt.exception(a.message, a)
          : a instanceof cU && (tt.info(a.message), this.dispatch(Yoe())),
        a)
      );
    }
  }
  retrieveRequiredPersonalV3Credentials() {
    const e = this.credentialsStorage.getPersonalV3Credentials();
    if (e == null) throw new dU();
    return e;
  }
  async retrieveRequiredPersonalV4Credentials(e) {
    if (e !== "v5") return null;
    const n = await this.keyPairRepository.retrievePersonalKey();
    if (n == null) throw new cU();
    return n;
  }
  async retrieveRequiredTeamCredentials(e, n) {
    if (n == null) return null;
    const r = await this.keyPairRepository.retrieveKeyPair();
    if (r.err)
      throw new pU(
        "Team account doesn't have a key pair (sharing is probably disabled)"
      );
    return this.keyRingRepository.obtainAllVaultsCredentials(e, r.val, {
      createDefaultTeamVaultKeyIfMissing: n.canManageTeam,
    });
  }
  ensureUserHasAllRequiredV3Credentials(e) {
    this.credentialsStorage.getPersonalV3Credentials() == null &&
      this.credentialsStorage.setPersonalV3Credentials(
        _H(e.password, { encryption: e.encryptionSalt, hmac: e.hmacSalt })
      );
  }
  async reencryptPersonalPrivateKey(e, n = !1) {
    const r = await this.keyPairRepository.reencrypt(e, n);
    if (sn.is(r)) throw r;
    return r;
  }
  async convertUserAccountToTeamType(e, n) {
    const r = await this.keyPairRepository.retrieveKeyPair();
    r.err ||
      (await this.keyRingRepository.obtainAllVaultsCredentials(e, r.val, {
        createDefaultTeamVaultKeyIfMissing: n,
      }));
  }
  changePassword(e, n) {
    this.credentialsStorage.setPersonalV3Credentials(
      _H(e.password, { encryption: e.encryptionSalt, hmac: e.hmacSalt })
    ),
      n != null && this.keyPairRepository.persist(e, n);
  }
  async grantAccessToVaults(e) {
    const n = await this.keyPairRepository.retrieveKeyPair();
    return n.err
      ? (tt.exception(
          "Team Owner doesn't have a key pair for granting access to vaults",
          new Error()
        ),
        n)
      : this.keyRingRepository.grantAccessToVaults(n.val, e);
  }
  async obtainNewVaultKeys(e, n) {
    const r = await this.keyPairRepository.retrieveKeyPair();
    return r.err
      ? (tt.exception(
          "Team Owner doesn't have a key pair for granting access to vaults",
          new Error()
        ),
        xa([r]))
      : this.keyRingRepository.createNewVaultKey(r.val, e, n);
  }
  async obtainIssuedVaultKeys({
    teamOwnerId: e,
    vaultId: n,
    newVaultMembers: r,
  }) {
    const a = await this.keyPairRepository.retrieveKeyPair();
    return a.err
      ? (tt.exception(
          "Team Owner doesn't have a key pair for granting access to vaults",
          new Error()
        ),
        xa([a]))
      : this.keyRingRepository.issueVaultKey(a.val, e, n, r);
  }
}
function GWe(t) {
  return t.type === "owner" ? new fp(t) : new qoe(t);
}
Ms.init();
class PA {
  constructor(e) {
    this.cryptoSystem = Ms.systems.FromEncryptionKey(Buffer.from(e, "base64"));
  }
  static generateEncryptionKey() {
    return Ms.utils.generateEncryptionKey().toString("base64");
  }
  encrypt(e) {
    if (e == null) return e;
    const n = this.cryptoSystem.encrypt(Buffer.from(e));
    return n == null
      ? (this.captureCryptoError("encrypt"), "")
      : n.toString("base64");
  }
  decrypt(e) {
    if (e == null) return e;
    const n = this.cryptoSystem.decrypt(Buffer.from(e, "base64"));
    return n == null ? (this.captureCryptoError("decrypt"), "") : n.toString();
  }
  captureCryptoError(e) {
    const n = Zv(this.cryptoSystem.getLastError());
    tt.exception(
      `LocalCryptoSystem.${e} has failed with error: ${n}`,
      new Error()
    );
  }
}
class FWe extends Us {
  constructor() {
    super(...arguments), (this.name = "UnsupportedKeyTarError");
  }
}
class Qoe extends Us {
  constructor() {
    super(...arguments), (this.name = "KeychainIsNotAvailable");
  }
}
class UWe extends Us {
  constructor() {
    super(...arguments), (this.name = "IncorrectCredentials");
  }
}
class KWe extends Us {
  constructor() {
    super(...arguments), (this.name = "UserCancelledOperation");
  }
}
function BWe(t) {
  const { message: e } = t;
  switch (e) {
    case "The name org.freedesktop.secrets was not provided by any .service files":
      return new Qoe(e);
    case "The user name or passphrase you entered is not correct.":
      return new UWe(e);
    case "User cancelled the operation.":
      return new KWe(e);
    default:
      return new FWe(e);
  }
}
const ub = async (t) => {
  const e = new Error();
  try {
    return await t();
  } catch (n) {
    const r = BWe(n);
    throw ((r.stack = e.stack), r);
  }
};
class hU {
  constructor(e, n) {
    (this.service = e), (this.impl = n);
  }
  getPassword(e) {
    return ub(() => this.impl.getPassword(this.service, e));
  }
  setPassword(e, n) {
    return ub(() => this.impl.setPassword(this.service, e, n));
  }
  deletePassword(e) {
    return ub(() => this.impl.deletePassword(this.service, e));
  }
  findCredentials() {
    return ub(() => this.impl.findCredentials(this.service));
  }
}
const lb = { secureData: "secureData", keytar: "keytar" };
class VWe {
  addMigration(e) {
    const n = this.getMigrationsAll();
    n.includes(e) || (n.push(e), Ft.setMigrationLog(n));
  }
  getMigrationsAll() {
    return Ft.getMigrationLog() || [];
  }
  hasMigration(e) {
    return this.getMigrationsAll().includes(e);
  }
  addSecureDataMigration() {
    this.addMigration(lb.secureData);
  }
  hasSecureDataMigration() {
    return this.hasMigration(lb.secureData);
  }
  addKeytarMigration() {
    this.addMigration(lb.keytar);
  }
  hasKeytarMigration() {
    return this.hasMigration(lb.keytar);
  }
}
const cb = new VWe(),
  jWe = new Map();
function Ll(t) {
  jWe.set(new t().name, t);
}
Ll(Error);
Ll(TypeError);
Ll(RangeError);
Ll(ReferenceError);
class Aw extends Error {
  constructor() {
    super(...arguments), (this.name = "UserIsNotMigratedError");
  }
}
Ll(Aw);
var Ow = { exports: {} };
/*!
 * Platform.js <https://mths.be/platform>
 * Copyright 2014-2018 Benjamin Tan <https://bnjmnt4n.now.sh/>
 * Copyright 2011-2013 John-David Dalton <http://allyoucanleet.com/>
 * Available under MIT license <https://mths.be/mit>
 */ Ow.exports;
(function (t, e) {
  (function () {
    var n = { function: !0, object: !0 },
      r = (n[typeof window] && window) || this,
      a = e,
      s = t && !t.nodeType && t,
      i = a && s && typeof sl == "object" && sl;
    i && (i.global === i || i.window === i || i.self === i) && (r = i);
    var o = Math.pow(2, 53) - 1,
      u = /\bOpera/,
      l = Object.prototype,
      c = l.hasOwnProperty,
      d = l.toString;
    function p(R) {
      return (R = String(R)), R.charAt(0).toUpperCase() + R.slice(1);
    }
    function m(R, ge, ve) {
      var we = {
        "10.0": "10",
        6.4: "10 Technical Preview",
        6.3: "8.1",
        6.2: "8",
        6.1: "Server 2008 R2 / 7",
        "6.0": "Server 2008 / Vista",
        5.2: "Server 2003 / XP 64-bit",
        5.1: "XP",
        5.01: "2000 SP1",
        "5.0": "2000",
        "4.0": "NT",
        "4.90": "ME",
      };
      return (
        ge &&
          ve &&
          /^Win/i.test(R) &&
          !/^Windows Phone /i.test(R) &&
          (we = we[/[\d.]+$/.exec(R)]) &&
          (R = "Windows " + we),
        (R = String(R)),
        ge && ve && (R = R.replace(RegExp(ge, "i"), ve)),
        (R = I(
          R.replace(/ ce$/i, " CE")
            .replace(/\bhpw/i, "web")
            .replace(/\bMacintosh\b/, "Mac OS")
            .replace(/_PowerPC\b/i, " OS")
            .replace(/\b(OS X) [^ \d]+/i, "$1")
            .replace(/\bMac (OS X)\b/, "$1")
            .replace(/\/(\d)/, " $1")
            .replace(/_/g, ".")
            .replace(/(?: BePC|[ .]*fc[ \d.]+)$/i, "")
            .replace(/\bx86\.64\b/gi, "x86_64")
            .replace(/\b(Windows Phone) OS\b/, "$1")
            .replace(/\b(Chrome OS \w+) [\d.]+\b/, "$1")
            .split(" on ")[0]
        )),
        R
      );
    }
    function y(R, ge) {
      var ve = -1,
        we = R ? R.length : 0;
      if (typeof we == "number" && we > -1 && we <= o)
        for (; ++ve < we; ) ge(R[ve], ve, R);
      else O(R, ge);
    }
    function I(R) {
      return (R = he(R)), /^(?:webOS|i(?:OS|P))/.test(R) ? R : p(R);
    }
    function O(R, ge) {
      for (var ve in R) c.call(R, ve) && ge(R[ve], ve, R);
    }
    function g(R) {
      return R == null ? p(R) : d.call(R).slice(8, -1);
    }
    function C(R, ge) {
      var ve = R != null ? typeof R[ge] : "number";
      return (
        !/^(?:boolean|number|string|undefined)$/.test(ve) &&
        (ve == "object" ? !!R[ge] : !0)
      );
    }
    function H(R) {
      return String(R).replace(/([ -])(?!$)/g, "$1?");
    }
    function B(R, ge) {
      var ve = null;
      return (
        y(R, function (we, Te) {
          ve = ge(ve, we, Te, R);
        }),
        ve
      );
    }
    function he(R) {
      return String(R).replace(/^ +| +$/g, "");
    }
    function de(R) {
      var ge = r,
        ve = R && typeof R == "object" && g(R) != "String";
      ve && ((ge = R), (R = null));
      var we = ge.navigator || {},
        Te = we.userAgent || "";
      R || (R = Te);
      var Ce = ve
          ? !!we.likeChrome
          : /\bChrome\b/.test(R) && !/internal|\n/i.test(d.toString()),
        Ee = "Object",
        x = ve ? Ee : "ScriptBridgingProxyObject",
        F = ve ? Ee : "Environment",
        Se = ve && ge.java ? "JavaPackage" : g(ge.java),
        ye = ve ? Ee : "RuntimeObject",
        Ae = /\bJava/.test(Se) && ge.java,
        De = Ae && g(ge.environment) == F,
        lt = Ae ? "a" : "α",
        nt = Ae ? "b" : "β",
        L = ge.document || {},
        M = ge.operamini || ge.opera,
        me = u.test((me = ve && M ? M["[[Class]]"] : g(M))) ? me : (M = null),
        K,
        Ge = R,
        Ke = [],
        Re = null,
        it = R == Te,
        Qe = it && M && typeof M.version == "function" && M.version(),
        ct,
        ot = Dt([
          { label: "EdgeHTML", pattern: "Edge" },
          "Trident",
          { label: "WebKit", pattern: "AppleWebKit" },
          "iCab",
          "Presto",
          "NetFront",
          "Tasman",
          "KHTML",
          "Gecko",
        ]),
        rt = Xt([
          "Adobe AIR",
          "Arora",
          "Avant Browser",
          "Breach",
          "Camino",
          "Electron",
          "Epiphany",
          "Fennec",
          "Flock",
          "Galeon",
          "GreenBrowser",
          "iCab",
          "Iceweasel",
          "K-Meleon",
          "Konqueror",
          "Lunascape",
          "Maxthon",
          { label: "Microsoft Edge", pattern: "Edge" },
          "Midori",
          "Nook Browser",
          "PaleMoon",
          "PhantomJS",
          "Raven",
          "Rekonq",
          "RockMelt",
          { label: "Samsung Internet", pattern: "SamsungBrowser" },
          "SeaMonkey",
          { label: "Silk", pattern: "(?:Cloud9|Silk-Accelerated)" },
          "Sleipnir",
          "SlimBrowser",
          { label: "SRWare Iron", pattern: "Iron" },
          "Sunrise",
          "Swiftfox",
          "Waterfox",
          "WebPositive",
          "Opera Mini",
          { label: "Opera Mini", pattern: "OPiOS" },
          "Opera",
          { label: "Opera", pattern: "OPR" },
          "Chrome",
          { label: "Chrome Mobile", pattern: "(?:CriOS|CrMo)" },
          { label: "Firefox", pattern: "(?:Firefox|Minefield)" },
          { label: "Firefox for iOS", pattern: "FxiOS" },
          { label: "IE", pattern: "IEMobile" },
          { label: "IE", pattern: "MSIE" },
          "Safari",
        ]),
        gt = bt([
          { label: "BlackBerry", pattern: "BB10" },
          "BlackBerry",
          { label: "Galaxy S", pattern: "GT-I9000" },
          { label: "Galaxy S2", pattern: "GT-I9100" },
          { label: "Galaxy S3", pattern: "GT-I9300" },
          { label: "Galaxy S4", pattern: "GT-I9500" },
          { label: "Galaxy S5", pattern: "SM-G900" },
          { label: "Galaxy S6", pattern: "SM-G920" },
          { label: "Galaxy S6 Edge", pattern: "SM-G925" },
          { label: "Galaxy S7", pattern: "SM-G930" },
          { label: "Galaxy S7 Edge", pattern: "SM-G935" },
          "Google TV",
          "Lumia",
          "iPad",
          "iPod",
          "iPhone",
          "Kindle",
          { label: "Kindle Fire", pattern: "(?:Cloud9|Silk-Accelerated)" },
          "Nexus",
          "Nook",
          "PlayBook",
          "PlayStation Vita",
          "PlayStation",
          "TouchPad",
          "Transformer",
          { label: "Wii U", pattern: "WiiU" },
          "Wii",
          "Xbox One",
          { label: "Xbox 360", pattern: "Xbox" },
          "Xoom",
        ]),
        Mt = pt({
          Apple: { iPad: 1, iPhone: 1, iPod: 1 },
          Archos: {},
          Amazon: { Kindle: 1, "Kindle Fire": 1 },
          Asus: { Transformer: 1 },
          "Barnes & Noble": { Nook: 1 },
          BlackBerry: { PlayBook: 1 },
          Google: { "Google TV": 1, Nexus: 1 },
          HP: { TouchPad: 1 },
          HTC: {},
          LG: {},
          Microsoft: { Xbox: 1, "Xbox One": 1 },
          Motorola: { Xoom: 1 },
          Nintendo: { "Wii U": 1, Wii: 1 },
          Nokia: { Lumia: 1 },
          Samsung: {
            "Galaxy S": 1,
            "Galaxy S2": 1,
            "Galaxy S3": 1,
            "Galaxy S4": 1,
          },
          Sony: { PlayStation: 1, "PlayStation Vita": 1 },
        }),
        at = It([
          "Windows Phone",
          "Android",
          "CentOS",
          { label: "Chrome OS", pattern: "CrOS" },
          "Debian",
          "Fedora",
          "FreeBSD",
          "Gentoo",
          "Haiku",
          "Kubuntu",
          "Linux Mint",
          "OpenBSD",
          "Red Hat",
          "SuSE",
          "Ubuntu",
          "Xubuntu",
          "Cygwin",
          "Symbian OS",
          "hpwOS",
          "webOS ",
          "webOS",
          "Tablet OS",
          "Tizen",
          "Linux",
          "Mac OS X",
          "Macintosh",
          "Mac",
          "Windows 98;",
          "Windows ",
        ]);
      function Dt(Qt) {
        return B(Qt, function (Bt, Ut) {
          return (
            Bt ||
            (RegExp("\\b" + (Ut.pattern || H(Ut)) + "\\b", "i").exec(R) &&
              (Ut.label || Ut))
          );
        });
      }
      function pt(Qt) {
        return B(Qt, function (Bt, Ut, as) {
          return (
            Bt ||
            ((Ut[gt] ||
              Ut[/^[a-z]+(?: +[a-z]+\b)*/i.exec(gt)] ||
              RegExp("\\b" + H(as) + "(?:\\b|\\w*\\d)", "i").exec(R)) &&
              as)
          );
        });
      }
      function Xt(Qt) {
        return B(Qt, function (Bt, Ut) {
          return (
            Bt ||
            (RegExp("\\b" + (Ut.pattern || H(Ut)) + "\\b", "i").exec(R) &&
              (Ut.label || Ut))
          );
        });
      }
      function It(Qt) {
        return B(Qt, function (Bt, Ut) {
          var as = Ut.pattern || H(Ut);
          return (
            !Bt &&
              (Bt = RegExp("\\b" + as + "(?:/[\\d.]+|[ \\w.]*)", "i").exec(
                R
              )) &&
              (Bt = m(Bt, as, Ut.label || Ut)),
            Bt
          );
        });
      }
      function bt(Qt) {
        return B(Qt, function (Bt, Ut) {
          var as = Ut.pattern || H(Ut);
          return (
            !Bt &&
              (Bt =
                RegExp("\\b" + as + " *\\d+[.\\w_]*", "i").exec(R) ||
                RegExp("\\b" + as + " *\\w+-[\\w]*", "i").exec(R) ||
                RegExp(
                  "\\b" + as + "(?:; *(?:[a-z]+[_-])?[a-z]+\\d+|[^ ();-]*)",
                  "i"
                ).exec(R)) &&
              ((Bt = String(
                Ut.label && !RegExp(as, "i").test(Ut.label) ? Ut.label : Bt
              ).split("/"))[1] &&
                !/[\d.]+/.test(Bt[0]) &&
                (Bt[0] += " " + Bt[1]),
              (Ut = Ut.label || Ut),
              (Bt = I(
                Bt[0]
                  .replace(RegExp(as, "i"), Ut)
                  .replace(RegExp("; *(?:" + Ut + "[_-])?", "i"), " ")
                  .replace(RegExp("(" + Ut + ")[-_.]?(\\w)", "i"), "$1 $2")
              ))),
            Bt
          );
        });
      }
      function yt(Qt) {
        return B(Qt, function (Bt, Ut) {
          return (
            Bt ||
            (RegExp(
              Ut + "(?:-[\\d.]+/|(?: for [\\w-]+)?[ /-])([\\d.]+[^ ();/_-]*)",
              "i"
            ).exec(R) || 0)[1] ||
            null
          );
        });
      }
      function tn() {
        return this.description || "";
      }
      if (
        (ot && (ot = [ot]),
        Mt && !gt && (gt = bt([Mt])),
        (K = /\bGoogle TV\b/.exec(gt)) && (gt = K[0]),
        /\bSimulator\b/i.test(R) && (gt = (gt ? gt + " " : "") + "Simulator"),
        rt == "Opera Mini" &&
          /\bOPiOS\b/.test(R) &&
          Ke.push("running in Turbo/Uncompressed mode"),
        rt == "IE" && /\blike iPhone OS\b/.test(R)
          ? ((K = de(R.replace(/like iPhone OS/, ""))),
            (Mt = K.manufacturer),
            (gt = K.product))
          : /^iP/.test(gt)
          ? (rt || (rt = "Safari"),
            (at =
              "iOS" +
              ((K = / OS ([\d_]+)/i.exec(R))
                ? " " + K[1].replace(/_/g, ".")
                : "")))
          : rt == "Konqueror" && !/buntu/i.test(at)
          ? (at = "Kubuntu")
          : (Mt &&
              Mt != "Google" &&
              ((/Chrome/.test(rt) && !/\bMobile Safari\b/i.test(R)) ||
                /\bVita\b/.test(gt))) ||
            (/\bAndroid\b/.test(at) &&
              /^Chrome/.test(rt) &&
              /\bVersion\//i.test(R))
          ? ((rt = "Android Browser"),
            (at = /\bAndroid\b/.test(at) ? at : "Android"))
          : rt == "Silk"
          ? (/\bMobi/i.test(R) ||
              ((at = "Android"), Ke.unshift("desktop mode")),
            /Accelerated *= *true/i.test(R) && Ke.unshift("accelerated"))
          : rt == "PaleMoon" && (K = /\bFirefox\/([\d.]+)\b/.exec(R))
          ? Ke.push("identifying as Firefox " + K[1])
          : rt == "Firefox" && (K = /\b(Mobile|Tablet|TV)\b/i.exec(R))
          ? (at || (at = "Firefox OS"), gt || (gt = K[1]))
          : !rt ||
            (K = !/\bMinefield\b/i.test(R) && /\b(?:Firefox|Safari)\b/.exec(rt))
          ? (rt &&
              !gt &&
              /[\/,]|^[^(]+?\)/.test(R.slice(R.indexOf(K + "/") + 8)) &&
              (rt = null),
            (K = gt || Mt || at) &&
              (gt ||
                Mt ||
                /\b(?:Android|Symbian OS|Tablet OS|webOS)\b/.test(at)) &&
              (rt =
                /[a-z]+(?: Hat)?/i.exec(/\bAndroid\b/.test(at) ? at : K) +
                " Browser"))
          : rt == "Electron" &&
            (K = (/\bChrome\/([\d.]+)\b/.exec(R) || 0)[1]) &&
            Ke.push("Chromium " + K),
        Qe ||
          (Qe = yt([
            "(?:Cloud9|CriOS|CrMo|Edge|FxiOS|IEMobile|Iron|Opera ?Mini|OPiOS|OPR|Raven|SamsungBrowser|Silk(?!/[\\d.]+$))",
            "Version",
            H(rt),
            "(?:Firefox|Minefield|NetFront)",
          ])),
        (K =
          (ot == "iCab" && parseFloat(Qe) > 3 && "WebKit") ||
          (/\bOpera\b/.test(rt) && (/\bOPR\b/.test(R) ? "Blink" : "Presto")) ||
          (/\b(?:Midori|Nook|Safari)\b/i.test(R) &&
            !/^(?:Trident|EdgeHTML)$/.test(ot) &&
            "WebKit") ||
          (!ot &&
            /\bMSIE\b/i.test(R) &&
            (at == "Mac OS" ? "Tasman" : "Trident")) ||
          (ot == "WebKit" &&
            /\bPlayStation\b(?! Vita\b)/i.test(rt) &&
            "NetFront")) && (ot = [K]),
        rt == "IE" && (K = (/; *(?:XBLWP|ZuneWP)(\d+)/i.exec(R) || 0)[1])
          ? ((rt += " Mobile"),
            (at = "Windows Phone " + (/\+$/.test(K) ? K : K + ".x")),
            Ke.unshift("desktop mode"))
          : /\bWPDesktop\b/i.test(R)
          ? ((rt = "IE Mobile"),
            (at = "Windows Phone 8.x"),
            Ke.unshift("desktop mode"),
            Qe || (Qe = (/\brv:([\d.]+)/.exec(R) || 0)[1]))
          : rt != "IE" &&
            ot == "Trident" &&
            (K = /\brv:([\d.]+)/.exec(R)) &&
            (rt && Ke.push("identifying as " + rt + (Qe ? " " + Qe : "")),
            (rt = "IE"),
            (Qe = K[1])),
        it)
      ) {
        if (C(ge, "global"))
          if (
            (Ae &&
              ((K = Ae.lang.System),
              (Ge = K.getProperty("os.arch")),
              (at =
                at ||
                K.getProperty("os.name") + " " + K.getProperty("os.version"))),
            De)
          ) {
            try {
              (Qe = ge.require("ringo/engine").version.join(".")),
                (rt = "RingoJS");
            } catch {
              (K = ge.system) &&
                K.global.system == ge.system &&
                ((rt = "Narwhal"), at || (at = K[0].os || null));
            }
            rt || (rt = "Rhino");
          } else
            typeof ge.process == "object" &&
              !ge.process.browser &&
              (K = ge.process) &&
              (typeof K.versions == "object" &&
                (typeof K.versions.electron == "string"
                  ? (Ke.push("Node " + K.versions.node),
                    (rt = "Electron"),
                    (Qe = K.versions.electron))
                  : typeof K.versions.nw == "string" &&
                    (Ke.push("Chromium " + Qe, "Node " + K.versions.node),
                    (rt = "NW.js"),
                    (Qe = K.versions.nw))),
              rt ||
                ((rt = "Node.js"),
                (Ge = K.arch),
                (at = K.platform),
                (Qe = /[\d.]+/.exec(K.version)),
                (Qe = Qe ? Qe[0] : null)));
        else
          g((K = ge.runtime)) == x
            ? ((rt = "Adobe AIR"), (at = K.flash.system.Capabilities.os))
            : g((K = ge.phantom)) == ye
            ? ((rt = "PhantomJS"),
              (Qe =
                (K = K.version || null) &&
                K.major + "." + K.minor + "." + K.patch))
            : typeof L.documentMode == "number" &&
              (K = /\bTrident\/(\d+)/i.exec(R))
            ? ((Qe = [Qe, L.documentMode]),
              (K = +K[1] + 4) != Qe[1] &&
                (Ke.push("IE " + Qe[1] + " mode"),
                ot && (ot[1] = ""),
                (Qe[1] = K)),
              (Qe = rt == "IE" ? String(Qe[1].toFixed(1)) : Qe[0]))
            : typeof L.documentMode == "number" &&
              /^(?:Chrome|Firefox)\b/.test(rt) &&
              (Ke.push("masking as " + rt + " " + Qe),
              (rt = "IE"),
              (Qe = "11.0"),
              (ot = ["Trident"]),
              (at = "Windows"));
        at = at && I(at);
      }
      if (
        (Qe &&
          (K =
            /(?:[ab]|dp|pre|[ab]\d+pre)(?:\d+\+?)?$/i.exec(Qe) ||
            /(?:alpha|beta)(?: ?\d)?/i.exec(
              R + ";" + (it && we.appMinorVersion)
            ) ||
            (/\bMinefield\b/i.test(R) && "a")) &&
          ((Re = /b/i.test(K) ? "beta" : "alpha"),
          (Qe =
            Qe.replace(RegExp(K + "\\+?$"), "") +
            (Re == "beta" ? nt : lt) +
            (/\d+\+?/.exec(K) || ""))),
        rt == "Fennec" ||
          (rt == "Firefox" && /\b(?:Android|Firefox OS)\b/.test(at)))
      )
        rt = "Firefox Mobile";
      else if (rt == "Maxthon" && Qe) Qe = Qe.replace(/\.[\d.]+/, ".x");
      else if (/\bXbox\b/i.test(gt))
        gt == "Xbox 360" && (at = null),
          gt == "Xbox 360" &&
            /\bIEMobile\b/.test(R) &&
            Ke.unshift("mobile mode");
      else if (
        (/^(?:Chrome|IE|Opera)$/.test(rt) ||
          (rt && !gt && !/Browser|Mobi/.test(rt))) &&
        (at == "Windows CE" || /Mobi/i.test(R))
      )
        rt += " Mobile";
      else if (rt == "IE" && it)
        try {
          ge.external === null && Ke.unshift("platform preview");
        } catch {
          Ke.unshift("embedded");
        }
      else
        (/\bBlackBerry\b/.test(gt) || /\bBB10\b/.test(R)) &&
        (K =
          (RegExp(gt.replace(/ +/g, " *") + "/([.\\d]+)", "i").exec(R) ||
            0)[1] || Qe)
          ? ((K = [K, /BB10/.test(R)]),
            (at =
              (K[1] ? ((gt = null), (Mt = "BlackBerry")) : "Device Software") +
              " " +
              K[0]),
            (Qe = null))
          : this != O &&
            gt != "Wii" &&
            ((it && M) ||
              (/Opera/.test(rt) && /\b(?:MSIE|Firefox)\b/i.test(R)) ||
              (rt == "Firefox" && /\bOS X (?:\d+\.){2,}/.test(at)) ||
              (rt == "IE" &&
                ((at && !/^Win/.test(at) && Qe > 5.5) ||
                  (/\bWindows XP\b/.test(at) && Qe > 8) ||
                  (Qe == 8 && !/\bTrident\b/.test(R))))) &&
            !u.test((K = de.call(O, R.replace(u, "") + ";"))) &&
            K.name &&
            ((K = "ing as " + K.name + ((K = K.version) ? " " + K : "")),
            u.test(rt)
              ? (/\bIE\b/.test(K) && at == "Mac OS" && (at = null),
                (K = "identify" + K))
              : ((K = "mask" + K),
                me
                  ? (rt = I(me.replace(/([a-z])([A-Z])/g, "$1 $2")))
                  : (rt = "Opera"),
                /\bIE\b/.test(K) && (at = null),
                it || (Qe = null)),
            (ot = ["Presto"]),
            Ke.push(K));
      (K = (/\bAppleWebKit\/([\d.]+\+?)/i.exec(R) || 0)[1]) &&
        ((K = [parseFloat(K.replace(/\.(\d)$/, ".0$1")), K]),
        rt == "Safari" && K[1].slice(-1) == "+"
          ? ((rt = "WebKit Nightly"), (Re = "alpha"), (Qe = K[1].slice(0, -1)))
          : (Qe == K[1] ||
              Qe == (K[2] = (/\bSafari\/([\d.]+\+?)/i.exec(R) || 0)[1])) &&
            (Qe = null),
        (K[1] = (/\bChrome\/([\d.]+)/i.exec(R) || 0)[1]),
        K[0] == 537.36 &&
          K[2] == 537.36 &&
          parseFloat(K[1]) >= 28 &&
          ot == "WebKit" &&
          (ot = ["Blink"]),
        !it || (!Ce && !K[1])
          ? (ot && (ot[1] = "like Safari"),
            (K =
              ((K = K[0]),
              K < 400
                ? 1
                : K < 500
                ? 2
                : K < 526
                ? 3
                : K < 533
                ? 4
                : K < 534
                ? "4+"
                : K < 535
                ? 5
                : K < 537
                ? 6
                : K < 538
                ? 7
                : K < 601
                ? 8
                : "8")))
          : (ot && (ot[1] = "like Chrome"),
            (K =
              K[1] ||
              ((K = K[0]),
              K < 530
                ? 1
                : K < 532
                ? 2
                : K < 532.05
                ? 3
                : K < 533
                ? 4
                : K < 534.03
                ? 5
                : K < 534.07
                ? 6
                : K < 534.1
                ? 7
                : K < 534.13
                ? 8
                : K < 534.16
                ? 9
                : K < 534.24
                ? 10
                : K < 534.3
                ? 11
                : K < 535.01
                ? 12
                : K < 535.02
                ? "13+"
                : K < 535.07
                ? 15
                : K < 535.11
                ? 16
                : K < 535.19
                ? 17
                : K < 536.05
                ? 18
                : K < 536.1
                ? 19
                : K < 537.01
                ? 20
                : K < 537.11
                ? "21+"
                : K < 537.13
                ? 23
                : K < 537.18
                ? 24
                : K < 537.24
                ? 25
                : K < 537.36
                ? 26
                : ot != "Blink"
                ? "27"
                : "28"))),
        ot &&
          (ot[1] +=
            " " +
            (K += typeof K == "number" ? ".x" : /[.+]/.test(K) ? "" : "+")),
        rt == "Safari" && (!Qe || parseInt(Qe) > 45) && (Qe = K)),
        rt == "Opera" && (K = /\bzbov|zvav$/.exec(at))
          ? ((rt += " "),
            Ke.unshift("desktop mode"),
            K == "zvav" ? ((rt += "Mini"), (Qe = null)) : (rt += "Mobile"),
            (at = at.replace(RegExp(" *" + K + "$"), "")))
          : rt == "Safari" &&
            /\bChrome\b/.exec(ot && ot[1]) &&
            (Ke.unshift("desktop mode"),
            (rt = "Chrome Mobile"),
            (Qe = null),
            /\bOS X\b/.test(at)
              ? ((Mt = "Apple"), (at = "iOS 4.3+"))
              : (at = null)),
        Qe &&
          Qe.indexOf((K = /[\d.]+$/.exec(at))) == 0 &&
          R.indexOf("/" + K + "-") > -1 &&
          (at = he(at.replace(K, ""))),
        ot &&
          !/\b(?:Avant|Nook)\b/.test(rt) &&
          (/Browser|Lunascape|Maxthon/.test(rt) ||
            (rt != "Safari" && /^iOS/.test(at) && /\bSafari\b/.test(ot[1])) ||
            (/^(?:Adobe|Arora|Breach|Midori|Opera|Phantom|Rekonq|Rock|Samsung Internet|Sleipnir|Web)/.test(
              rt
            ) &&
              ot[1])) &&
          (K = ot[ot.length - 1]) &&
          Ke.push(K),
        Ke.length && (Ke = ["(" + Ke.join("; ") + ")"]),
        Mt && gt && gt.indexOf(Mt) < 0 && Ke.push("on " + Mt),
        gt && Ke.push((/^on /.test(Ke[Ke.length - 1]) ? "" : "on ") + gt),
        at &&
          ((K = / ([\d.+]+)$/.exec(at)),
          (ct = K && at.charAt(at.length - K[0].length - 1) == "/"),
          (at = {
            architecture: 32,
            family: K && !ct ? at.replace(K[0], "") : at,
            version: K ? K[1] : null,
            toString: function () {
              var Qt = this.version;
              return (
                this.family +
                (Qt && !ct ? " " + Qt : "") +
                (this.architecture == 64 ? " 64-bit" : "")
              );
            },
          })),
        (K = /\b(?:AMD|IA|Win|WOW|x86_|x)64\b/i.exec(Ge)) &&
        !/\bi686\b/i.test(Ge)
          ? (at &&
              ((at.architecture = 64),
              (at.family = at.family.replace(RegExp(" *" + K), ""))),
            rt &&
              (/\bWOW64\b/i.test(R) ||
                (it &&
                  /\w(?:86|32)$/.test(we.cpuClass || we.platform) &&
                  !/\bWin64; x64\b/i.test(R))) &&
              Ke.unshift("32-bit"))
          : at &&
            /^OS X/.test(at.family) &&
            rt == "Chrome" &&
            parseFloat(Qe) >= 39 &&
            (at.architecture = 64),
        R || (R = null);
      var Ct = {};
      return (
        (Ct.description = R),
        (Ct.layout = ot && ot[0]),
        (Ct.manufacturer = Mt),
        (Ct.name = rt),
        (Ct.prerelease = Re),
        (Ct.product = gt),
        (Ct.ua = R),
        (Ct.version = rt && Qe),
        (Ct.os = at || {
          architecture: null,
          family: null,
          version: null,
          toString: function () {
            return "null";
          },
        }),
        (Ct.parse = de),
        (Ct.toString = tn),
        Ct.version && Ke.unshift(Qe),
        Ct.name && Ke.unshift(rt),
        at &&
          rt &&
          !(at == String(at).split(" ")[0] && (at == rt.split(" ")[0] || gt)) &&
          Ke.push(gt ? "(" + at + ")" : "on " + at),
        Ke.length && (Ct.description = Ke.join(" ")),
        Ct
      );
    }
    var U = de();
    a && s
      ? O(U, function (R, ge) {
          a[ge] = R;
        })
      : (r.platform = U);
  }).call(sl);
})(Ow, Ow.exports);
var zWe = Ow.exports;
const $We = Lo(zWe);
class WWe {
  constructor() {
    (this.token = this._getDeviceToken()),
      (this.os = $We.os.toString()),
      (this.appVersion = rT.getVersion());
    try {
      this.name = rR.hostname();
    } catch {
      this.name = "Unknown device";
    }
  }
  _getDeviceToken() {
    const e = localStorage.getItem("deviceToken");
    if (e) return e;
    const n = Sm();
    return localStorage.setItem("deviceToken", n), n;
  }
  toJSON() {
    return {
      token: this.token,
      app_version: this.appVersion,
      os_version: this.os,
      name: this.name,
      sub_name: "",
      mobile_type: "Desktop",
    };
  }
}
const Yc = new WWe();
function qWe(t) {
  return !!t.team && !t.team.is_owner;
}
function Joe(t) {
  return t.account.has_sso;
}
class YWe {
  constructor(e, n, r, a, s, i = () => {}) {
    (this.api = e),
      (this.gRPCApi = n),
      (this.settings = r),
      (this.credentialsStorage = a),
      (this.syncKeyManager = s),
      (this.dispatch = i);
  }
  async signUpFree({
    email: e,
    password: n,
    recaptcha: r,
    emailVerificationCode: a,
  }) {
    await this.gRPCApi.signUp({
      email: e,
      password: n,
      recaptcha: r,
      email_verification_code: a,
      do_not_grant_trial_access: !0,
    });
  }
  async trialSignup({
    email: e,
    password: n,
    recaptcha: r,
    emailVerificationCode: a,
  }) {
    await this.gRPCApi.signUp({
      email: e,
      password: n,
      recaptcha: r,
      email_verification_code: a,
    });
  }
  async trialSignupViaSso(e, n) {
    await this.gRPCApi.signUp({ email: "", password: n, firebase_token: e });
  }
  async getSecurityToken(e, n) {
    if (n === "v5")
      try {
        return await this.gRPCApi.getSecurityToken(e, this.api.api_token);
      } catch (r) {
        if (!(r instanceof Aw)) throw r;
      }
    return this.api.getSecurityToken({ password: hf.generateHash(e) });
  }
  async validatePassword(e, n) {
    const { userId: r, password: a } = e;
    try {
      await this.getSecurityToken(a, n);
    } catch (u) {
      if (u.status !== 487) throw u;
    }
    const s = this.credentialsStorage.getSalts();
    if (!s) throw new Error("Could not find salts for remembered user");
    const { isOwner: i } = this.settings.getDeprecatedUserTeamStatus(),
      o = await this.api.getKeyPair();
    return this.syncKeyManager.ensureUserHasAllRequiredCredentials(
      r,
      { password: a, encryptionSalt: s.encryption, hmacSalt: s.hmac },
      o.id == null ? null : o,
      i != null ? { canManageTeam: i } : null
    );
  }
  async login({
    username: e,
    password: n,
    firebaseToken: r,
    authyToken: a,
    accessToken: s,
  }) {
    const i = r != null ? "" : e;
    try {
      const u = await this.gRPCApi.login({
        email: i,
        device: Yc.toJSON(),
        password: n,
        authy_token: a,
        firebase_token: r,
        domain_sso_token: s,
      });
      return this.updateApiCredentials(u.credentials.token), u;
    } catch (u) {
      if (!(u instanceof Aw)) throw u;
    }
    const o = await this.api.login({
      email: i,
      firebase_token: r,
      authy_token: a,
      password: hf.generateHash(n),
      device: Yc.toJSON(),
    });
    return this.updateApiCredentials(o.credentials.token), o;
  }
  async afterLogin({
    username: e,
    password: n,
    rememberPassword: r,
    isReLogin: a,
    response: s,
    authMethod: i,
  }) {
    var d, p;
    this.credentialsStorage.deleteAllCredentials();
    const o = s.bulk_account,
      u = (d = o.team) == null ? void 0 : d.is_owner;
    await this.setUserProfile(o),
      this.dispatch(
        _$({
          userId: o.account.user_id,
          email: e,
          plan: o.account.plan_type,
          isReLogin: a,
          authMethod: i,
        })
      );
    const l = (p = o.team) == null ? void 0 : p.id;
    l && this.dispatch(kX({ userId: e, teamId: l }));
    const { user_id: c } = o.account;
    return (
      rn(c),
      await this.syncKeyManager.ensureUserHasAllRequiredCredentials(
        c,
        {
          password: n,
          encryptionSalt: s.credentials.salt,
          hmacSalt: s.credentials.hmac_salt,
        },
        s.credentials.personal_keyset,
        u != null ? { canManageTeam: u } : null
      ),
      r
        ? this.credentialsStorage.setApiKey(s.credentials.token)
        : this.credentialsStorage.deleteAllPersistedCredentials(),
      await this.settings.setDeprecatedUserStr(e),
      await this.settings.setDeprecatedUserId(o.account.user_id),
      this.settings.setDeprecatedAuthorizedFeatures(Gg(o)),
      this.settings.setDeprecatedTeamPermissions(lw(o)),
      this.settings.setDeprecatedTeamInfo(CQ(o)),
      await this.settings.setDeprecatedUserHasSso(Joe(o)),
      { user: o }
    );
  }
  async changeUsername(e, n, r) {
    const a = { email: e, security_token: n, otp_token: r };
    await this.api.changeEmail(a),
      await this.settings.setDeprecatedUserStr(a.email);
  }
  removeUserData() {
    this.credentialsStorage.deleteAllCredentials(),
      Ft.removeDeprecatedLocalhost();
  }
  async logout() {
    this.removeUserData(),
      this.settings.setDeprecatedAuthorizedFeatures({}),
      await this.settings.setDeprecatedUserStr(null),
      await this.settings.setDeprecatedUserId(null),
      this.resetApiCredentials();
  }
  async getDataFromNewPassword(e, n = !1) {
    const r = await this.api.regenerateSpecs(),
      a = new zoe(r.salt, r.hmac_salt, e),
      s = await this.syncKeyManager.reencryptPersonalPrivateKey(
        { password: e, encryptionSalt: r.salt, hmacSalt: r.hmac_salt },
        n
      );
    return {
      ...r,
      new_password: hf.generateHash(e),
      rnCryptor: a,
      personal_keyset: s,
    };
  }
  async changePassword(e, n) {
    const r = await this.api.changePassword(e);
    return this.applyNewPassword({
      newPassword: n,
      token: r.token,
      salt: r.salt,
      hmac_salt: r.hmac_salt,
    });
  }
  async changePasswordWithSecurityToken(e, n) {
    const { token: r, cryptospec: a } =
      await this.api.changePasswordWithSecurityToken(e);
    return this.applyNewPassword({
      newPassword: n,
      token: r,
      salt: a.salt,
      hmac_salt: a.hmac_salt,
    });
  }
  async recoverAccount(e, n) {
    const r = await this.api.accountRecovery(e);
    return (
      this.applyNewPassword(
        {
          newPassword: n,
          token: r.token,
          salt: r.salt,
          hmac_salt: r.hmac_salt,
        },
        r.personal_keyset
      ),
      { terminalObjects: r.terminal_objects }
    );
  }
  applyNewPassword({ newPassword: e, token: n, salt: r, hmac_salt: a }, s) {
    this.updateApiCredentials(n);
    const i =
      this.credentialsStorage.passwordRememberStatus() !== "not-remembered";
    this.syncKeyManager.changePassword(
      { encryptionSalt: r, hmacSalt: a, password: e },
      s
    ),
      i
        ? this.credentialsStorage.setApiKey(n)
        : this.credentialsStorage.deleteAllPersistedCredentials();
  }
  updateApiCredentials(e) {
    e != null && this.api.updateApiToken(e);
  }
  resetApiCredentials() {
    this.api.updateApiToken("loggedOut");
  }
  get authorized() {
    return this.api.api_token !== "" && this.api.api_token !== "loggedOut";
  }
  async updateUserProfile() {
    var e = await this.api.bulkAccount();
    e.account.pro_mode = true;
    e.account.need_to_update_subscription = false;
    e.account.current_period = {
      from: "2022-01-01T00:00:00",
      until: "2099-01-01T00:00:00",
    };
    e.account.plan_type = "Premium";
    e.account.user_type = "Premium";
    e.student = null;
    e.trial = null;
    e.account.authorized_features.show_trial_section = false;
    e.account.authorized_features.show_subscription_section = true;
    e.account.authorized_features.show_github_account_section = false;
    e.account.expired_screen_type = null;
    e.personal_subscription = {
      now: new Date().toISOString().slice(0, -5),
      status: "SUCCESS",
      platform: "stripe",
      current_period: {
        from: "2022-01-01T00:00:00",
        until: "2099-01-01T00:00:00",
      },
      revokable: true,
      refunded: false,
      cancelable: true,
      reactivatable: false,
      currency: "usd",
      created_at: "2022-01-01T00:00:00",
      updated_at: new Date().toISOString().slice(0, -5),
      valid_until: "2099-01-01T00:00:00",
      auto_renew: true,
      price: 12.0,
      verbose_plan_name: "Termius Pro Monthly",
      plan_type: "SINGLE",
      is_expired: false,
    };
    e.access_objects = [
      {
        period: {
          start: "2022-01-01T00:00:00",
          end: "2099-01-01T00:00:00",
        },
        title: "Pro",
      },
    ];
    return await this.setUserProfile(e), e;
  }
  async setUserProfile(e) {
    var a;
    const n = this.settings.getDeprecatedUser(),
      r =
        ((a = e.account.feature_toggles) == null
          ? void 0
          : a.encryption_schema) ?? "v3";
    Ft.setDeprecatedEncryptionSchema(r),
      n &&
        (n.set({ pro_mode: e.account.pro_mode }),
        n.set({ two_factor_auth: e.account.two_factor_auth }),
        n.set({ authorizedFeatures: Gg(e) }),
        e.account.team && e.team != null
          ? n.set({
              is_team: !0,
              is_owner: e.team.is_owner,
              teamPermissions: lw(e),
            })
          : n.set({ is_team: !1, is_owner: null, teamPermissions: [] }),
        await n.save({}, { wait: !0, do_not_encrypt: !0 })),
      this.dispatch(fl(e));
  }
}
class db extends Error {
  constructor() {
    super(...arguments),
      (this.name = "NoUsernameAvailable"),
      (this.status = -3);
  }
}
class wH {
  constructor(e, n, r, a = 1) {
    (this.session = new eIe.ClientSession()),
      this.session.configure({
        identifier: e,
        password: n,
        salt: r,
        version: a,
      });
  }
  generateVerifier() {
    return this.session.generateVerifier();
  }
}
function XWe() {
  const t = !!localStorage.getItem("isKeepaliveInSecondsMigrated"),
    e = Ft.getKeepAliveInterval();
  if (!t) {
    if (e) {
      const n = Math.round(Number(e) / 1e3);
      Ft.setKeepAliveInterval(n.toString());
    }
    localStorage.setItem("isKeepaliveInSecondsMigrated", "true");
  }
}
function QWe() {
  const t = !!localStorage.getItem("team_setup_closed"),
    e = !!localStorage.getItem("closed_side_menu_promotions");
  t && localStorage.removeItem("team_setup_closed"),
    e && localStorage.removeItem("closed_side_menu_promotions");
}
var Zoe = { exports: {} };
(function (t, e) {
  (function () {
    function n(r) {
      r = r || {};
      var a = r.desc ? -1 : 1,
        s = -a,
        i = /^0/,
        o = /\s+/g,
        u = /^\s+|\s+$/g,
        l = /[^\x00-\x80]/,
        c = /^0x[0-9a-f]+$/i,
        d =
          /(0x[\da-fA-F]+|(^[\+\-]?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?(?=\D|\s|$))|\d+)/g,
        p =
          /(^([\w ]+,?[\w ]+)?[\w ]+,?[\w ]+\d+:\d+(:\d+)?[\w ]?|^\d{1,4}[\/\-]\d{1,4}[\/\-]\d{1,4}|^\w+, \w+ \d+, \d{4})/,
        m = r.insensitive
          ? function (g) {
              return y("" + g).replace(u, "");
            }
          : function (g) {
              return ("" + g).replace(u, "");
            };
      function y(g) {
        return g.toLocaleLowerCase ? g.toLocaleLowerCase() : g.toLowerCase();
      }
      function I(g) {
        return g
          .replace(d, "\0$1\0")
          .replace(/\0$/, "")
          .replace(/^\0/, "")
          .split("\0");
      }
      function O(g, C) {
        return (
          ((!g.match(i) || C === 1) && parseFloat(g)) ||
          g.replace(o, " ").replace(u, "") ||
          0
        );
      }
      return function (g, C) {
        var H = m(g),
          B = m(C);
        if (!H && !B) return 0;
        if (!H && B) return s;
        if (H && !B) return a;
        var he = I(H),
          de = I(B),
          U = parseInt(H.match(c), 16) || (he.length !== 1 && Date.parse(H)),
          R =
            parseInt(B.match(c), 16) ||
            (U && B.match(p) && Date.parse(B)) ||
            null;
        if (R) {
          if (U < R) return s;
          if (U > R) return a;
        }
        for (
          var ge = he.length, ve = de.length, we = 0, Te = Math.max(ge, ve);
          we < Te;
          we++
        ) {
          var Ce = O(he[we] || "", ge),
            Ee = O(de[we] || "", ve);
          if (isNaN(Ce) !== isNaN(Ee)) return isNaN(Ce) ? a : s;
          if (l.test(Ce + Ee) && Ce.localeCompare) {
            var x = Ce.localeCompare(Ee);
            if (x > 0) return a;
            if (x < 0) return s;
            if (we === Te - 1) return 0;
            continue;
          }
          if (Ce < Ee) return s;
          if (Ce > Ee) return a;
        }
        return 0;
      };
    }
    t.exports = n;
  })();
})(Zoe);
var JWe = Zoe.exports;
const ZWe = Lo(JWe),
  eqe = (t) =>
    tI(t, [
      (e) => new Date(e.updated_at ?? ""),
      (e) => e.local_id ?? Number.MAX_SAFE_INTEGER,
    ]);
ZWe({ insensitive: !0 });
function f3(t, e) {
  const n = [],
    r = new Set(),
    a = tue(t);
  eue(a, n, r, e), n.unshift(t);
  const s = n.reverse(),
    i = n_(s, "local_id");
  return tqe(i, t);
}
function eue(t, e, n, r) {
  if (!t) return;
  [...t.hosts_chain].reverse().forEach((s) => {
    const i = r.getHost(s);
    if (!i) throw new Error("There is a host chain with not existed host");
    e.push(i), n.has(i.local_id || -1) || nqe(i, e, n, r);
  });
}
function tqe(t, e) {
  const n = t.findIndex((r) => r.local_id === e.local_id);
  return n === -1 ? t : t.slice(0, n + 1);
}
function nqe(t, e, n, r) {
  n.add(t.local_id || -1);
  const a = tue(t);
  eue(a, e, n, r);
}
function tue(t) {
  return t.getMergedSshConfig().host_chain;
}
class sqe {
  constructor(e, n) {
    (this.persistentAdapter = e),
      (this.repositories = n),
      (this.dbToEntity = (r) => {
        if (!r.command) return this.convertDeprecatedDBHistoryToHistory(r);
        const {
            id: a,
            local_id: s,
            command: i,
            timestamp: o,
            active: u,
            session_log_data: l,
          } = r,
          {
            port: c,
            title: d,
            host: p,
            user_name: m,
            connection_type: y,
            error_message: I,
            session_log_data: O,
          } = i,
          g = o ? Pc(o).getTime() : r.connected_at;
        return new hp({
          id: a,
          local_id: s,
          port: c,
          password: this.mergeHistoryPassword(r),
          address: p,
          errorMsg: I || "",
          username: m,
          label: d,
          protocol: y,
          active: u,
          connected_at: g,
          updated_at: r.updated_at,
          created_at: r.created_at,
          session_log_data: l || O,
          host: this.mergeHistoryHost(r),
        });
      }),
      (this.convertDeprecatedDBHistoryToHistory = (r) => {
        var o, u;
        const a = this.persistentAdapter.findHost(r.host),
          s = this.persistentAdapter.findSnippet(r.startup_snippet),
          i = this.persistentAdapter.findSshKey(r.ssh_key);
        return new hp({
          ...r,
          host: new Tn({
            ...a,
            ssh_config: new Xs({
              ...(a == null ? void 0 : a.ssh_config),
              startup_snippet: s,
              identity: new xr({
                ...((u =
                  (o = a == null ? void 0 : a.ssh_config) == null
                    ? void 0
                    : o.identity) == null
                  ? void 0
                  : u.prepareForDuplicate()),
                ssh_key: i,
                is_visible: !1,
              }),
            }),
          }),
        });
      }),
      (this.mergeHistoryIdentity = (r) => {
        var i;
        const a = this.mergeHistoryPassword(r),
          s = this.mergeHistorySshKey(r);
        return new xr({
          ...r.identity,
          ...Sa(a != null, { password: a }),
          ...Sa(s != null, { ssh_key: s }),
          username: (i = r.command) == null ? void 0 : i.user_name,
          is_visible: !!r.identity,
        });
      }),
      (this.mergeHistorySshKey = (r) => {
        var a;
        if (r.ssh_key != null) {
          const s = this.persistentAdapter.findSshKey(r.ssh_key);
          if (s != null) return s;
        }
        if (r.identity != null) {
          const s = this.persistentAdapter.findIdentity(r.identity);
          if ((s == null ? void 0 : s.ssh_key) != null)
            return s == null ? void 0 : s.ssh_key;
        }
        if (r.host != null) {
          const s = this.persistentAdapter.findHost(r.host);
          if (s != null) {
            const i =
                ((a = r.command) == null ? void 0 : a.connection_type) ===
                "telnet"
                  ? s.getMergedTelnetConfig()
                  : s.getMergedSshConfig(),
              { ssh_key: o } = i.identity;
            if (o != null) return o;
          }
        }
        return null;
      }),
      (this.mergeHistoryPassword = (r) => {
        var a, s;
        if (r.identity != null) {
          const i = this.persistentAdapter.findIdentity(r.identity);
          if ((i == null ? void 0 : i.password) != null)
            return i == null ? void 0 : i.password;
        }
        if (r.host != null) {
          const i = this.persistentAdapter.findHost(r.host);
          if (i != null) {
            const o =
                ((a = r.command) == null ? void 0 : a.connection_type) ===
                "telnet"
                  ? i.getMergedTelnetConfig()
                  : i.getMergedSshConfig(),
              { password: u } = o.identity;
            if (u != null) return u;
          }
        }
        return (s = r.command) == null ? void 0 : s.password;
      }),
      (this.mergeHistoryHost = (r) => {
        const a = this.persistentAdapter.findHost(r.host);
        if (a != null) {
          const H = f3(a, {
            getHost: (B) => this.persistentAdapter.findHost(B),
          });
          return a.clone({ connectionPath: H });
        }
        const { command: s } = r;
        if (s == null) return new Tn();
        const {
            port: i,
            title: o,
            host: u,
            charset: l,
            use_mosh: c,
            color_scheme: d,
            env_variables: p,
            startup_command: m,
            connection_type: y,
            mosh_server_command: I,
            host_os_name: O,
          } = s,
          g = m ? new qa({ script: m }) : null,
          C =
            y === "telnet"
              ? {
                  telnet_config: new up({
                    identity: this.mergeHistoryIdentity(r),
                    port: i,
                    charset: l || null,
                    color_scheme: d,
                  }),
                }
              : {
                  ssh_config: new Xs({
                    identity: this.mergeHistoryIdentity(r),
                    port: i,
                    charset: l || null,
                    use_mosh: c,
                    env_variables: Xs.parseEnvVariables(p),
                    color_scheme: d,
                    startup_snippet: g,
                    mosh_server_command: I,
                  }),
                };
        return new Tn({ ...r.host, ...C, address: u, label: o, os_name: O });
      }),
      (this.getDBHistorySshKeyId = (r) => {
        if (r.host == null) return null;
        const a = new Tn(r.host),
          s =
            r.protocol === "telnet"
              ? a.getMergedTelnetConfig()
              : a.getMergedSshConfig();
        return this.repositories.sshKey.getAsRepositoryID(
          s == null ? void 0 : s.identity.ssh_key
        );
      }),
      (this.getDBHistoryIdentityId = (r) => {
        var i;
        if (r.host == null) return null;
        const a = new Tn(r.host),
          s =
            r.protocol === "telnet"
              ? a.getMergedTelnetConfig()
              : a.getMergedSshConfig();
        return ((i = s == null ? void 0 : s.identity) == null
          ? void 0
          : i.is_visible) == null
          ? null
          : this.repositories.identity.getAsRepositoryID(s.identity);
      }),
      (this.getHistoryHostConfig = ({ host: r, protocol: a }) =>
        r == null
          ? new Xs()
          : a === "telnet"
          ? new Tn(r).getMergedTelnetConfig()
          : new Tn(r).getMergedSshConfig()),
      (this.getDBHistoryHostId = (r) =>
        this.repositories.host.getAsRepositoryID(r.host));
  }
  entityToDB(e) {
    var d, p, m, y, I, O, g, C;
    const { active: n, connected_at: r } = e,
      a = this.getHistoryHostConfig(e),
      s = Xs.stringifyEnvVariables(
        (p = (d = e.host) == null ? void 0 : d.ssh_config) == null
          ? void 0
          : p.env_variables
      ),
      i = !!(
        (y = (m = e.host) == null ? void 0 : m.ssh_config) != null && y.use_mosh
      ),
      o = lc(new Date(r)),
      u = this.getDBHistoryHostId(e),
      l = this.getDBHistorySshKeyId(e),
      c = this.getDBHistoryIdentityId(e);
    return {
      id: e.id,
      local_id: e.local_id,
      connected_at: r,
      updated_at: e.updated_at,
      created_at: e.created_at,
      timestamp: o,
      active: n,
      ...Sa(e.session_log_data != null, {
        session_log_data: e.session_log_data,
      }),
      host: u,
      ssh_key: l,
      identity: c,
      command: {
        connection_type: e.protocol,
        charset: a.charset || "",
        error_message: e.errorMsg,
        host: e.address,
        port: e.port,
        startup_command: (I = a.startup_snippet) == null ? void 0 : I.script,
        title: e.label,
        use_mosh: i,
        user_name: e.username,
        color_scheme: a.color_scheme || "",
        env_variables: s,
        mosh_server_command:
          (i &&
            ((g = (O = e.host) == null ? void 0 : O.ssh_config) == null
              ? void 0
              : g.mosh_server_command)) ||
          void 0,
        version_code: 1,
        host_os_name: ((C = e.host) == null ? void 0 : C.os_name) || "",
        ...Sa((u == null ? void 0 : u.id) != null, {
          host_id: u == null ? void 0 : u.id,
        }),
        ...Sa((l == null ? void 0 : l.id) != null, {
          key_id: l == null ? void 0 : l.id,
        }),
        ...Sa((c == null ? void 0 : c.id) != null, {
          visible_identity_id: c == null ? void 0 : c.id,
        }),
        ...Sa(e.session_log_data != null, {
          session_log_data: e.session_log_data,
        }),
      },
    };
  }
}
function rqe(t, e, n) {
  return t.reduce(
    (r, a) => {
      const s = r.elements.findIndex((i) => e(i.element, a));
      return (
        s === -1
          ? r.elements.push({ element: a, size: 1 })
          : r.elements[s].size < n
          ? (r.elements[s].size += 1)
          : r.elementsOutside.push(a),
        r
      );
    },
    { elements: [], elementsOutside: [] }
  ).elementsOutside;
}
const Qu = "SYNCHRONIZED",
  jg = "UPDATE_FAILED",
  Ri = "CREATE_FAILED",
  ga = "DELETE_FAILED";
function aqe({ host: t, connected_at: e }, { host: n, connected_at: r }) {
  return iqe(t, n) || lqe(e, r);
}
function iqe(t, e) {
  return t != null && e != null
    ? oqe(t, e) ?? uqe(t, e)
    : +(t != null) - +(e != null);
}
function oqe(t, e) {
  if (t.id != null && e.id != null) return t.id - e.id;
}
function uqe(t, e) {
  return t.local_id != null && e.local_id != null
    ? t.local_id - e.local_id
    : +(t.local_id != null) - +(e.local_id != null);
}
function lqe(t, e) {
  return e - t;
}
const cqe = ["address", "username", "label", "password"];
class dqe {
  constructor() {
    (this.cryptor = null),
      (this.encrypt = (n) => {
        rn(this.cryptor);
        const r = JSON.stringify(n.command),
          a = this.cryptor.encrypt(r);
        if (typeof a != "string" || a === "")
          throw new Error("Can not encrypt DB history item");
        return {
          ...n,
          command: a,
          ...Sa(n.session_log_data != null, {
            session_log_data: this.modifySessionLogData(
              "encrypt",
              n.session_log_data
            ),
          }),
        };
      }),
      (this.decrypt = (n) => {
        const { command: r, ...a } = n;
        if (!r)
          return {
            ...this.decryptDeprecatedCryptoFields(a),
            ...Sa(a.session_log_data != null, {
              session_log_data: this.modifySessionLogData(
                "decrypt",
                a.session_log_data
              ),
            }),
          };
        rn(this.cryptor);
        const s = this.cryptor.decrypt(r);
        if (typeof s != "string" || s === "")
          return (
            tt.info(`Failed to decrypt history, the command is ${fqe(s)}`), null
          );
        const i = JSON.parse(s);
        return {
          ...a,
          command: i,
          ...Sa(a.session_log_data != null, {
            session_log_data: this.modifySessionLogData(
              "decrypt",
              a.session_log_data
            ),
          }),
        };
      });
    const e = new Ns("activities", { autoOpen: !1, cache: "disabled" });
    e.version(0.2).stores({
      activities: "++local_id, &local_id, &id, status, connected_at",
    }),
      (this.db = e),
      (this.histories = this.db.table("activities"));
  }
  async init() {
    await this.db.open(), await this.deactivateAll();
  }
  get length() {
    return this.histories.count();
  }
  setCryptor(e) {
    this.cryptor = e;
  }
  deleteDb() {
    this.db.delete();
  }
  async add(e) {
    const n = this.encrypt(e);
    return await this.histories.add({ ...IA(n), status: Ri });
  }
  async bulkAdd(e) {
    const n = e.map(this.encrypt);
    return this.histories.bulkAdd(n.map((r) => ({ ...IA(r), status: Ri })));
  }
  async getAll() {
    return (
      await this.histories
        .where("status")
        .notEqual(ga)
        .filter((n) => !n.active)
        .reverse()
        .sortBy("connected_at", Ys)
    )
      .map(this.decrypt)
      .filter(xn);
  }
  async getSessionLogsOfActiveHistory() {
    return (
      await this.histories
        .where("status")
        .notEqual(ga)
        .filter((n) => n.active)
        .reverse()
        .sortBy("connected_at", Ys)
    )
      .map((n) => {
        const r = this.decrypt(n);
        return r != null ? CA(r) : null;
      })
      .filter(xn);
  }
  async delete(e) {
    await this.bulkDelete([e]);
  }
  async bulkDelete(e) {
    const n = e.filter(Oc);
    await this.histories
      .where("local_id")
      .anyOf(n)
      .filter((r) => r.status === Ri)
      .delete(),
      await this.histories
        .where("local_id")
        .anyOf(n)
        .filter((r) => r.status === Qu)
        .modify({ status: ga });
  }
  filterBasedOn(e, n) {
    return this.histories.filter((r) => {
      var a;
      return ((a = r[e]) == null ? void 0 : a.local_id) === n.local_id;
    });
  }
  async deleteAllBasedOn(e, n) {
    const r = await this.filterBasedOn(e, n).toArray();
    return this.bulkDelete(r.filter((a) => !a.active).map((a) => a.local_id));
  }
  async clearAll() {
    return this.histories.clear();
  }
  async deleteAll() {
    return (
      await this.histories
        .where("status")
        .equals(Ri)
        .filter((e) => !e.active)
        .delete(),
      this.histories.where("status").equals(Qu).modify({ status: ga })
    );
  }
  async deactivateAll() {
    return this.histories.filter((e) => e.active).modify({ active: !1 });
  }
  async getOverLimited(e = 100) {
    return (
      await this.histories
        .orderBy("connected_at")
        .reverse()
        .filter((r) => !r.active && r.status !== ga)
        .offset(e)
        .toArray(Ys)
    )
      .map(this.decrypt)
      .filter(xn);
  }
  async update(e) {
    if (e.local_id == null) return Promise.resolve();
    const n = this.encrypt(e);
    return this.histories.update(e.local_id, n);
  }
  async getUnsynced() {
    const n = await this.histories
        .where("status")
        .equals(Ri)
        .filter((a) => !a.active)
        .limit(100)
        .toArray(Ys),
      r = await this.histories.where("status").equals(ga).toArray(Ys);
    return {
      created: n.map(this.decrypt).filter(xn),
      deleted: r.map(this.decrypt).filter(xn),
    };
  }
  async gotSynced(e) {
    const { deleted: n, created: r } = e;
    await this.histories.bulkDelete(n.map((a) => a.local_id).filter(Oc)),
      await this.histories.bulkPut(
        r.map((a) => ({ ...this.encrypt(a), status: Qu }))
      );
  }
  async updateSynced(e) {
    const n = await this.histories
        .where("status")
        .equals(Qu)
        .filter((i) => !i.active)
        .toArray(),
      r = gw(n, e, "id"),
      a = gw(e, n, "id");
    await this.histories.bulkDelete(r.map((i) => i.local_id).filter(Oc));
    const s = a.map(this.encrypt);
    return this.histories.bulkAdd(s.map((i) => ({ ...IA(i), status: Qu })));
  }
  modifySessionLogData(e, n) {
    if ((rn(this.cryptor), n == null)) return n;
    const { name: r, secretKey: a } = n;
    if (a == null) return n;
    const s = this.cryptor[e](r),
      i = this.cryptor[e](a);
    return typeof s != "string" ||
      s === "" ||
      (typeof i != "string" && i != null) ||
      i === ""
      ? null
      : { name: s, secretKey: i };
  }
  decryptDeprecatedCryptoFields(e) {
    rn(this.cryptor);
    const { cryptor: n } = this,
      r = Ug(e, cqe),
      a = Nl(r, (s) => n.decrypt(s));
    return { ...e, ...a };
  }
  async cleanup(e, n) {
    const r = (c) => {
        var d, p;
        return n == null || ((d = c.device) == null ? void 0 : d.id) == null
          ? !0
          : ((p = c.device) == null ? void 0 : p.id) === n;
      },
      a = (await this.getAll()).filter(r).filter(CA).sort(aqe),
      s = rqe(a, hqe, e),
      i = await this.getSessionLogsOfActiveHistory();
    if (s.length === 0) return { toSkip: i, toRemove: [] };
    const [o, u] = Go(s, (c) => !c.command);
    await this.histories.bulkPut(u.map((c) => this.encrypt(pqe(c))));
    const l = o.map((c) => c.local_id);
    return (
      await this.histories
        .where("local_id")
        .anyOf(l)
        .modify({ session_log_data: null }),
      { toSkip: i, toRemove: s.map(CA) }
    );
  }
}
function IA(t) {
  const e = { ...t };
  return delete e.local_id, e;
}
function pqe(t) {
  return {
    ...t,
    session_log_data: null,
    ...Sa(t.command != null, {
      command: { ...t.command, session_log_data: null },
    }),
  };
}
function CA(t) {
  var e;
  return (
    t.session_log_data ||
    ((e = t.command) == null ? void 0 : e.session_log_data)
  );
}
function hqe({ host: t }, { host: e }) {
  const n = t == null && e == null,
    r = t != null && e != null,
    a =
      (t == null ? void 0 : t.id) != null &&
      t.id === (e == null ? void 0 : e.id),
    s =
      (t == null ? void 0 : t.local_id) != null &&
      t.local_id === (e == null ? void 0 : e.local_id);
  return n || (r && (a || s));
}
function fqe(t) {
  return q6(t)
    ? "null"
    : Xv(t)
    ? "undefined"
    : t === ""
    ? "empty-string"
    : t instanceof sn
    ? "CryptoError"
    : "Unexpected type";
}
function mqe() {
  let t = Iye;
  if (
    ((process.type === "renderer" || !t) && (t = vi("@electron/remote").app),
    ls.mas())
  )
    return "App Store";
  if (ls.windowsStore()) return "Windows Store";
  if (ls.linux()) {
    const e = t.getPath("exe");
    return e.startsWith("/snap/")
      ? "Snapcraft"
      : e.startsWith("/opt/")
      ? "Debian Package"
      : "Custom Linux Distribution";
  }
  return "Website";
}
const nue = mqe(),
  m3 = ls.sandbox() || nue === "Snapcraft";
ls.linux();
class Sqe {
  constructor(e, n) {
    (this.existingKeysByContent = e), (this.persistAdapter = n);
  }
  async importEntities(e, n, r = []) {
    var o;
    r.push(await this.importHostEntities(e.hosts, n, e.tags));
    for (const u of e.groups) {
      const l = new Fs({ label: u.label, parent_group: n });
      await this.persistAdapter.saveGroup(l),
        await this.importEntities(
          {
            groups: u.groups,
            hosts: u.hosts,
            snippets: [],
            tags: e.tags,
            knownHosts: [],
            keyPaths: [],
          },
          l,
          r
        );
    }
    for (const u of e.snippets)
      await this.persistAdapter.saveSnippet(new qa(u));
    for (const u of e.knownHosts)
      await this.persistAdapter.saveKnownHost(new gl(u));
    if ((o = e.keyPaths) != null && o.length)
      for (const u of e.keyPaths) {
        const l = rue(u.path),
          c = await sue(l);
        if (c) {
          const d =
            this.existingKeysByContent.get(c.trim()) ??
            new Ia({ label: zf.basename(u.path), private_key: c });
          await this.persistAdapter.saveSshKey(d);
        }
      }
    let a = 0,
      s = 0,
      i = 0;
    for (const u of r)
      (s += u.numberOfKeys),
        (a += u.numberOfPFRules),
        (i += u.numberOfIgnoredKeys);
    return { numberOfKeys: s, numberOfPFRules: a, numberOfIgnoredKeys: i };
  }
  async importHostEntities(e, n, r) {
    const {
      savedHosts: a,
      keys: s,
      labelIndexMap: i,
      numberOfIgnoredKeys: o,
    } = await this.saveHostsAndKeysFromHostEntities(e, n, r);
    return {
      numberOfPFRules: await this.saveRulesAndHostChainsFromHostEntities(
        e,
        a,
        i
      ),
      numberOfKeys: s.size,
      numberOfIgnoredKeys: o,
    };
  }
  async saveHostsAndKeysFromHostEntities(e, n, r) {
    var c, d;
    const a = (p) => {
        var m, y;
        return (m = p.password) != null && m.decryptionAlgorithm
          ? null
          : (y = p.password) == null
          ? void 0
          : y.value;
      },
      s = new Map();
    let i = 0;
    const o = [],
      u = new Map(),
      l = new Map();
    for (const p of e) {
      let m = new xr({ ...p.identity, password: a(p.identity) });
      if (m.is_visible && m.label) {
        const I = l.get(m.label);
        I != null ? (m = I) : l.set(m.label, m);
      }
      const y = new Tn({ label: p.label, address: p.address });
      (y.ssh_config = await this.convertSshConfig(
        p.sshConfig,
        m,
        p.identityFile,
        s
      )),
        p.identityFile != null &&
          ((d = (c = y.ssh_config) == null ? void 0 : c.identity) == null
            ? void 0
            : d.ssh_key) == null &&
          (i += 1),
        (y.telnet_config = this.convertTelnetConfig(p.telnetConfig, m));
      for (const I of p.tags ?? [])
        r != null && r.find((O) => I === O) && y.tags.push(I);
      y.group = n;
      try {
        m.is_visible && (await this.persistAdapter.saveIdentity(m)),
          await this.persistAdapter.saveHost(y),
          o.push(y),
          u.set(y.label || y.address, o.length - 1);
      } catch {}
    }
    return { savedHosts: o, keys: s, numberOfIgnoredKeys: i, labelIndexMap: u };
  }
  async saveRulesAndHostChainsFromHostEntities(e, n, r) {
    let a = 0;
    for (const s of e) {
      const { pfRules: i } = s,
        { hostChain: o } = s,
        u = r.get(s.label || s.address);
      if (u != null) {
        const l = n[u];
        for (const c of i)
          try {
            const d = new Xi({ ...c, host: l });
            await this.persistAdapter.savePortForwardingRule(d), (a += 1);
          } catch {}
        if (o.length) {
          const c = [];
          for (const d of o) {
            const p = r.get(d);
            p !== void 0 && c.push(n[p]);
          }
          if (l.ssh_config) {
            const d = new Ap({ hosts_chain: c });
            try {
              await this.persistAdapter.saveHostChain(d, l.ssh_config);
            } catch {}
          }
        }
      }
    }
    return a;
  }
  async convertSshConfig(e, n, r, a) {
    if (e == null) return;
    const s = await yqe(r, a, this.existingKeysByContent);
    s &&
      (s.local_id == null && (await this.persistAdapter.saveSshKey(s)),
      (n.ssh_key = s));
    const i = new Xs(e);
    return (n.username || n.ssh_key) && (i.identity = n), i;
  }
  convertTelnetConfig(e, n) {
    if (e == null) return;
    const r = new up(e);
    return (n.username || n.password) && (r.identity = n), r;
  }
}
const yqe = async (t, e, n) => {
  if (!t) return;
  const r = rue(t.path),
    a = e.get(r);
  if (a) return a;
  let { content: s } = t;
  if ((s || (s = await sue(r)), !s)) return;
  const i =
    n.get(s.trim()) ?? new Ia({ label: zf.basename(t.path), private_key: s });
  return e.set(r, i), i;
};
async function sue(t) {
  if (!m3)
    try {
      return (await Ql.readFile(t)).toString("utf-8");
    } catch {
      return;
    }
}
function rue(t) {
  return zf.normalize(t.replace(/^~/, rR.homedir()));
}
async function aue(t) {
  try {
    const { hosts: e, groups: n } = await gqe(t);
    await vqe({ store: t, hosts: e, groups: n });
  } catch (e) {
    throw (tt.exception("Init credentials mode migration has failed", e), e);
  }
}
async function gqe(t) {
  const e = t.getGroups(),
    n = t.getHosts(),
    r = e.filter((o) => o.is_shared && !o.parent_group),
    a = n.filter((o) => o.is_shared && !o.group && o.credentials_mode == null),
    s = new Map(),
    i = new Map();
  return (
    a.forEach((o) => o.local_id && i.set(o.local_id, mU(o))),
    r.forEach((o) => {
      const u = mU(o),
        { children_groups: l, children_hosts: c } = t.getGroupTreeRecursively(
          o,
          e,
          n
        );
      fU(l, u, s), fU(c, u, i);
    }),
    { hosts: i, groups: s }
  );
}
function fU(t, e, n) {
  t.filter((r) => r.credentials_mode == null).forEach(
    (r) => r.local_id && n.set(r.local_id, e)
  );
}
function mU(t) {
  const e = t.sharing_mode ?? "no_credentials_sharing";
  return {
    is_shared: !0,
    credentials_mode: t.credentials_mode ?? e,
    encrypted_with: t.encrypted_with,
  };
}
async function vqe({ store: t, groups: e, hosts: n }) {
  n.size + e.size !== 0 &&
    (await Promise.all([
      t.collections.groups.migrateToCredentialsMode(e),
      t.collections.hosts.migrateToCredentialsMode(n),
    ]));
}
const _qe = (t) => {
    const e = /^\d+$/.test(t),
      n = Number.parseInt(t, 10);
    return e && n >= 0 && n < 2 ** 16;
  },
  ff = { wait: !0 };
function S3() {
  return Promise.resolve();
}
function bqe(t) {
  return t();
}
function y3(t) {
  return Promise.all(t.map(bqe));
}
function Eqe(t) {
  return t.id != null ? { id: t.id } : { local_id: t.local_id };
}
function Tqe(t, e) {
  return t.id == null && e.id != null;
}
function My(t) {
  return t != null ? t.attributes : null;
}
function iue(t) {
  return Object.keys(t).length !== 0;
}
async function wqe(t, e) {
  for (const n of t) {
    const r = n.map((a) => {
      const s = {};
      for (const [i, o] of Object.entries(a.relationsInBulk)) {
        const u = e[o.collection],
          l = a.get(i);
        let c = null;
        if ((l && u && ((c = u.findWhere(Eqe(l))), (c = My(c))), c))
          l && Tqe(l, c) && (s[i] = { ...l, id: c.id });
        else {
          if (o.required) return () => a.destroy(ff);
          l && (s[i] = null);
        }
      }
      return iue(s) ? () => a.save(s, ff) : S3;
    });
    await y3(r);
  }
}
function Pqe(t) {
  return typeof t == "number";
}
function SU(t) {
  return typeof t == "number"
    ? { id: t }
    : { local_id: Number.parseInt(t.split("/")[1], 10) };
}
function yU(t, e) {
  return !Pqe(t) && e.id != null;
}
async function Iqe(t, e, n) {
  const r = t.map((a) => {
    const s = My(a),
      i = s.ssh_config,
      o = e.findWhere(SU(i)),
      u = My(o);
    if (!u) return () => a.destroy(ff);
    const l = {};
    yU(i, u) && (l.ssh_config = u.id);
    const { hosts_chain: c } = s;
    if (c && c.length !== 0) {
      const d = c
        .map((p) => {
          const m = n.findWhere(SU(p)),
            y = My(m);
          return y ? (yU(p, y) ? y.id : p) : null;
        })
        .filter(Boolean);
      if (d.length === 0) return () => a.destroy(ff);
      si(c, d) || (l.hosts_chain = d);
    }
    return iue(l) ? () => a.save(l, ff) : S3;
  });
  await y3(r);
}
async function Cqe(t) {
  const e = t.map((n) => {
    const r = My(n),
      a = u$(r.type);
    return _qe(r.port) ? S3 : () => n.save({ port: a }, ff);
  });
  await y3(e);
}
const PH = { do_not_encrypt: !1 },
  g3 = { wait: !0 };
class ar {
  constructor(e) {
    this.collection = e;
  }
  get length() {
    return this.collection.length;
  }
  countOf(e) {
    return this.collection.filter((n) => e(n.attributes)).length;
  }
  getModel(e) {
    return e && this.collection.findById(e);
  }
  getAll(e = !1) {
    return tt.withEncryptionLogin("local", this.collection.dbName, () =>
      this.collection.toJSON({ ...PH, with_local_updated_at: e })
    );
  }
  get(e) {
    return tt.withEncryptionLogin("local", this.collection.dbName, () =>
      this.modelToJson(this.getModel(e))
    );
  }
  modelToJson(e) {
    return e == null ? null : e.toJSON(PH);
  }
  last() {
    const { length: e } = this.collection,
      n = e !== 0 ? this.collection.at(e - 1) : null;
    return tt.withEncryptionLogin("local", this.collection.dbName, () =>
      this.modelToJson(n)
    );
  }
  getAsRepositoryID(e) {
    const n = this.getModel(e);
    return n ? { local_id: n.get("local_id"), id: n.get("id") } : null;
  }
  async set(e, n) {
    const r = this.getModel(e) || this.collection.add({});
    if (!r) throw new Error("Cannot get or create the data");
    tt.withEncryptionLogin("local", this.collection.dbName, () => r.set(n)),
      await r.saveAll(),
      (e.local_id = r.get("local_id")),
      (e.id = r.get("id"));
  }
  async bulkSetUnsyncable(e) {
    const n = new this.collection.model(),
      r = e.map((a) => {
        const s = n.encryptDataForDatabase(a, this.collection.cryptor);
        return (s.status = Ri), s;
      });
    return this.collection.runTransaction((a) => a.bulkPut(r, { allKeys: !0 }));
  }
  async delete(e) {
    const n = this.getModel(e);
    return n ? n.destroy(g3) : null;
  }
  async deleteAllInArray(e) {
    const [n, r] = Go(e, (o) => !o.hasRemoteId()),
      a = gU(n),
      s = new Set(gU(r)),
      i = (o) => s.has(o.local_id);
    await this.collection.runTransaction(async (o) => {
      await o.bulkDelete(a), await o.filter(i).modify({ status: ga });
    });
  }
  async unsetAllInArray(e, n) {
    return Promise.all(e.map((r) => (r.set(n, null), r.saveAll())));
  }
  async clear() {
    await this.collection.runTransaction((e) => e.clear());
  }
  filterBasedOn(e, ...n) {
    const r = new Set(n.map((a) => a.local_id));
    return this.collection.filter((a) => {
      const s = a.get(e);
      return s && r.has(s.local_id);
    });
  }
  async unsetDependencyBasedOn(e, ...n) {
    const r = this.filterBasedOn(e, ...n);
    return this.unsetAllInArray(r, e);
  }
  async deleteAllBasedOn(e, ...n) {
    const r = this.filterBasedOn(e, ...n);
    return this.deleteAllInArray(r);
  }
  async deleteAllWithProperty(e, ...n) {
    const r = this.filterWithProperty(e, ...n);
    return this.deleteAllInArray(r);
  }
  filterWithProperty(e, ...n) {
    const r = new Set(n);
    return this.collection.filter((a) => {
      const s = a.get(e);
      return s != null && r.has(s);
    });
  }
  async deleteMany(e) {
    const n = e.map((r) => this.getModel(r)).filter(xn);
    return this.deleteAllInArray(n);
  }
}
function gU(t) {
  return t.map((e) => e.attributes[e.idAttribute]);
}
class Aqe extends ar {
  async save(e) {
    await this.set(e, {
      certificate: e.certificate,
      label: e.label,
      ssh_key: e.ssh_key_id,
      is_shared: e.is_shared,
      encrypted_with: e.encrypted_with,
    });
  }
}
class AA extends ar {
  findByGroup(e) {
    var n, r;
    return (r =
      (n = this.collection.find((a) => {
        var s;
        return ((s = a.get("group")) == null ? void 0 : s.local_id) === e;
      })) == null
        ? void 0
        : n.toJSON) == null
      ? void 0
      : r.call(n, { do_not_encrypt: !1 });
  }
}
class Oqe {
  constructor(e, n) {
    (this.lookup = n),
      (this.repositories = {
        aws: new AA(e.aws),
        digitalOcean: new AA(e.digitalOcean),
        azure: new AA(e.azure),
      });
  }
  findByGroup(e) {
    return (
      this.getAwsConfigByGroup(e) ??
      this.getDigitalOceanConfigByGroup(e) ??
      this.getAzureConfigByGroup(e) ??
      null
    );
  }
  async saveForGroup(e, n) {
    e instanceof sf && (await this.setAwsConfig(e, n)),
      e instanceof py && (await this.setDigitalOceanConfig(e, n)),
      e instanceof dy && (await this.setAzureConfig(e, n));
  }
  async deleteByGroup(e) {
    const n = e.cloud_config;
    (n == null ? void 0 : n.cloudType) === "aws" &&
      (await this.deleteAwsConfig(n)),
      (n == null ? void 0 : n.cloudType) === "DigitalOcean" &&
        (await this.deleteDigitalOceanConfig(n)),
      (n == null ? void 0 : n.cloudType) === "azure" &&
        (await this.deleteAzureConfig(n));
  }
  async cleanAllForGroup(e) {
    await this.repositories.aws.deleteAllBasedOn("group", e),
      await this.repositories.digitalOcean.deleteAllBasedOn("group", e),
      await this.repositories.azure.deleteAllBasedOn("group", e);
  }
  async removeIfReplaced(e, n) {
    e && Hqe(e, n) && (await this.deleteCloudConfig(e));
  }
  get length() {
    return o3(Gm(this.repositories, (e) => e.length));
  }
  async deleteCloudConfig(e) {
    e instanceof sf && (await this.deleteAwsConfig(e)),
      e instanceof py && (await this.deleteDigitalOceanConfig(e)),
      e instanceof dy && (await this.deleteAzureConfig(e));
  }
  getAwsConfigByGroup(e) {
    const n = this.repositories.aws.findByGroup(e.local_id);
    return n != null && n.local_id ? new sf({ ...n, group: e }) : null;
  }
  async setAwsConfig(e, n) {
    return this.repositories.aws.set(e, {
      group: this.lookup.getGroupRepositoryID(n),
      accessKeyId: e.accessKeyId,
      secretAccessKey: e.secretAccessKey,
      region: e.region,
      ipAddressType: e.ipAddressType,
      serviceType: e.serviceType,
    });
  }
  deleteAwsConfig(e) {
    return this.repositories.aws.delete(e);
  }
  getDigitalOceanConfigByGroup(e) {
    const n = this.repositories.digitalOcean.findByGroup(e.local_id);
    return n != null && n.local_id ? new py({ ...n, group: e }) : null;
  }
  async setDigitalOceanConfig(e, n) {
    return this.repositories.digitalOcean.set(e, {
      group: this.lookup.getGroupRepositoryID(n),
      token: e.token,
    });
  }
  deleteDigitalOceanConfig(e) {
    return this.repositories.digitalOcean.delete(e);
  }
  getAzureConfigByGroup(e) {
    const n = this.repositories.azure.findByGroup(e.local_id);
    return n != null && n.local_id ? new dy({ ...n, group: e }) : null;
  }
  async setAzureConfig(e, n) {
    return this.repositories.azure.set(e, {
      group: this.lookup.getGroupRepositoryID(n),
      tenant_id: e.tenant_id,
      client_id: e.client_id,
      client_secret: e.client_secret,
    });
  }
  deleteAzureConfig(e) {
    return this.repositories.azure.delete(e);
  }
}
function Hqe(t, e) {
  return t.cloudType !== (e == null ? void 0 : e.cloudType) || Nqe(t, e);
}
function Nqe(t, e) {
  return !e || e.local_id !== t.local_id;
}
class pb extends ar {
  constructor(e, n) {
    super(n), (this.configKey = e);
  }
  findByConfig(e) {
    const n = e == null ? void 0 : e.local_id;
    if (n == null) return;
    const r = this.collection.find(
      (a) => a.get(this.configKey) && a.get(this.configKey).local_id === n
    );
    return r == null ? void 0 : r.toJSON();
  }
  async deleteByConfig(...e) {
    await this.deleteAllBasedOn(this.configKey, ...e);
  }
  async deleteByIdentity(...e) {
    await this.deleteAllBasedOn("identity", ...e);
  }
  getEntitiesAffectedByIdentityTransitionPredicate(e, n, r) {
    const a = new Set(n.map((s) => s.local_id));
    return (s) => {
      var i;
      return (
        ((i = s.get("identity")) == null ? void 0 : i.local_id) ===
          e.local_id &&
        !a.has(s.get(this.configKey)) &&
        !Es(
          {
            is_shared: s.get("is_shared"),
            encrypted_with: s.get("encrypted_with"),
          },
          r
        )
      );
    };
  }
  async unlinkIdentities(e, n, r) {
    const a = this.collection
      .filter(this.getEntitiesAffectedByIdentityTransitionPredicate(e, n, r))
      .map((s) => this.modelToJson(s));
    return this.deleteMany(a);
  }
  filterByIdentity(e, n) {
    const r = new Set(n.map((s) => s.local_id)),
      { configKey: a } = this;
    return this.collection.filter((s) => {
      var i;
      return (
        ((i = s.get("identity")) == null ? void 0 : i.local_id) ===
          e.local_id && !r.has(s.get(a).local_id)
      );
    });
  }
}
class Rqe extends ar {
  constructor(e, n) {
    super(e), (this.repositories = n);
  }
  async save(e) {
    await this.set(e, {
      label: e.label,
      is_shared: e.is_shared,
      encrypted_with: e.encrypted_with,
      parent_group: this.getAsRepositoryID(e.parent_group),
      ssh_config: this.repositories.sshConfig.getAsRepositoryID(e.ssh_config),
      telnet_config: this.repositories.telnetConfig.getAsRepositoryID(
        e.telnet_config
      ),
      sharing_mode: e.sharing_mode,
      credentials_mode: e.credentials_mode,
    });
  }
}
class kqe extends ar {
  constructor(e, n) {
    super(e), (this.repositories = n);
  }
  inGroup(e, n) {
    const r = new Set(n.map((s) => s.local_id));
    return this.collection.some((s) => {
      var i;
      return (
        ((i = s.get("group")) == null ? void 0 : i.local_id) === e.local_id &&
        !r.has(s.get("local_id"))
      );
    });
  }
  filterByLocalIdSet(e) {
    return this.collection
      .filter((n) => e.has(n.get("local_id")))
      .map((n) => this.modelToJson(n));
  }
  async save(e) {
    await this.set(e, {
      address: e.address,
      backspace: e.backspace,
      group: this.repositories.group.getAsRepositoryID(e.group),
      icon: e.icon,
      interaction_date: e.interaction_date,
      label: e.label,
      os_name: e.os_name,
      ssh_config: this.repositories.sshConfig.getAsRepositoryID(e.ssh_config),
      telnet_config: this.repositories.telnetConfig.getAsRepositoryID(
        e.telnet_config
      ),
      is_shared: e.is_shared,
      encrypted_with: e.encrypted_with,
      ip_version: e.ip_version,
      cloud_instance_id: e.cloud_instance_id,
      cloud_instance_type: e.cloud_instance_type,
      credentials_mode: e.credentials_mode,
    });
  }
}
class xqe extends ar {
  constructor(e, n) {
    super(e), (this.repositories = n);
  }
  async save(e) {
    await this.set(e, {
      host: this.repositories.host.getAsRepositoryID(e.host),
      latest_used_identity: this.repositories.identity.getAsRepositoryID(
        e.latest_used_identity
      ),
      latest_used_protocol: e.latest_used_protocol,
    });
  }
}
class Lqe extends ar {
  getBySshConfig(e) {
    const n = this.collection.findWhere({ ssh_config: e });
    return n ? n.toJSON(PH) : null;
  }
  isUsedInChain(e, n, r) {
    return this.collection.some(vU(e, n, r));
  }
  async unlinkHosts(e, n, r) {
    const a = Hw(e);
    return Promise.all(
      this.collection.filter(vU(e, n, r)).map(this.deleteHostFromChain(a))
    );
  }
  async deleteHostFromChains(...e) {
    return Promise.all(this.collection.map(this.deleteHostFromChain(...e)));
  }
  deleteHostFromChain(...e) {
    return async (n) => {
      const r = n.get("hosts_chain") || [],
        a = r.filter((s) => !e.includes(s));
      return a.length === 0
        ? this.delete(n.toJSON())
        : a.length !== r.length
        ? n.save({ hosts_chain: a }, { wait: !0, do_not_encrypt: !0 })
        : null;
    };
  }
  async saveChain(e) {
    const n = e.hosts_chain.map(Hw),
      { sshConfig: r } = e;
    if (r.local_id == null)
      throw new Us("Cannot save without stored ssh config");
    const a = r.id || `sshconfig_set/${r.local_id}`;
    return this.set(e, {
      hosts_chain: n,
      is_shared: !!e.is_shared,
      encrypted_with: e.encrypted_with,
      ssh_config: a,
    });
  }
}
function Hw(t) {
  if (t.id) return t.id;
  if (t.local_id == null)
    throw new Error("Cannot add a host without local_id to hostchain");
  return `host_set/${t.local_id}`;
}
function vU(t, e, n) {
  const r = Hw(t),
    a = new Set(
      e.flatMap((s) =>
        s.id != null
          ? [s.id, `sshconfig_set/${s.local_id}`]
          : [`sshconfig_set/${s.local_id}`]
      )
    );
  return (s) => {
    const o = (s.get("hosts_chain") ?? []).includes(r),
      u = s.get("ssh_config"),
      l = !a.has(u);
    return (
      o &&
      l &&
      !Es(
        {
          is_shared: s.get("is_shared"),
          encrypted_with: s.get("encrypted_with"),
        },
        n
      )
    );
  };
}
class Mqe extends ar {
  constructor(e) {
    super(e), (this.collection = e);
  }
  isUsedInSnippet(e, n, r) {
    return this.collection.some(
      this.getEntitiesAffectedByHostTransition(e, n, r)
    );
  }
  async unlinkHosts(e, n, r) {
    await this.deleteMany(
      this.collection
        .filter(this.getEntitiesAffectedByHostTransition(e, n, r))
        .map((a) => this.modelToJson(a))
    );
  }
  getTargetHostsBySnippet(e, n) {
    const r = e.local_id ? this.collection.findBySnippet(e.local_id) : [];
    return n_(
      r
        .map((a) => {
          const s = a.get("host"),
            i = {
              local_id: s == null ? void 0 : s.local_id,
              id: s == null ? void 0 : s.id,
            },
            o = n.get(i);
          if (o)
            return new Cv({
              local_id: o.local_id,
              id: o.id,
              address: o.address,
              label: o.label,
              os_name: o.os_name,
              is_shared: o.is_shared,
              encrypted_with: o.encrypted_with,
            });
        })
        .filter(xn),
      "local_id"
    );
  }
  async saveForSnippet(e) {
    const n = e.local_id ? this.collection.findBySnippet(e.local_id) : [],
      r = e.targetHosts ?? [],
      a = n.filter(
        (u) => !r.find((l) => l.local_id === u.get("host").local_id)
      ),
      [s, i] = Go(
        r,
        (u) => !n.find((l) => l.get("host").local_id === u.local_id)
      );
    await this.deleteMany(
      a.map((u) => ({ local_id: u.get("local_id"), id: u.get("id") }))
    ),
      await Promise.all(
        s.map((u) =>
          this.set(
            {},
            {
              host: { local_id: u.local_id, id: u.id },
              snippet: { local_id: e.local_id, id: e.id },
              is_shared: e.is_shared,
              encrypted_with: e.encrypted_with,
            }
          )
        )
      );
    const o = n.filter(
      (u) =>
        !Es(
          {
            is_shared: u.get("is_shared"),
            encrypted_with: u.get("encrypted_with") ?? null,
          },
          e
        ) && i.find((l) => l.local_id === u.get("host").local_id)
    );
    await Promise.all(
      o.map((u) =>
        this.set(
          { local_id: u.get("local_id") },
          { is_shared: e.is_shared, encrypted_with: e.encrypted_with }
        )
      )
    );
  }
  getEntitiesAffectedByHostTransition(e, n, r) {
    const a = new Set(n.map((s) => s.local_id));
    return (s) =>
      s.get("host").local_id === e.local_id &&
      !a.has(s.get("snippet").local_id) &&
      !Es(
        {
          is_shared: s.get("is_shared"),
          encrypted_with: s.get("encrypted_with") ?? null,
        },
        r
      );
  }
}
class Dqe extends ar {
  constructor(e, n) {
    super(e), (this.repositories = n);
  }
  getEntitiesAffectedBySshKeyTransitionPredicate(e, n, r) {
    const a = new Set(n.map((s) => s.local_id));
    return (s) => {
      var i;
      return (
        ((i = s.get("ssh_key")) == null ? void 0 : i.local_id) === e.local_id &&
        !a.has(s.get("local_id")) &&
        !Es(
          {
            is_shared: s.get("is_shared"),
            encrypted_with: s.get("encrypted_with"),
          },
          r
        )
      );
    };
  }
  isUsed(e, n, r) {
    return this.collection.some(
      this.getEntitiesAffectedBySshKeyTransitionPredicate(e, n, r)
    );
  }
  async unlinkSshKeys(e, n, r) {
    const a = this.collection.filter(
      this.getEntitiesAffectedBySshKeyTransitionPredicate(e, n, r)
    );
    return this.unsetAllInArray(a, "ssh_key");
  }
  async save(e) {
    await this.set(e, {
      is_visible: e.is_visible,
      label: e.label,
      password: e.password || "",
      ssh_key: this.repositories.sshKey.getAsRepositoryID(e.ssh_key),
      hardware_key: e.is_shared
        ? void 0
        : this.repositories.hardwareKey.getAsRepositoryID(e.hardware_key),
      username: e.username || "",
      is_shared: e.is_shared,
      encrypted_with: e.encrypted_with,
    });
  }
}
class Gqe {
  constructor() {
    const e = new Ns("inAppMessages", { autoOpen: !1, cache: "disabled" });
    e
      .version(1)
      .stores({ inAppMessages: "++local_id, &local_id, &id, created_at" }),
      (this.db = e),
      (this.inAppMessages = e.table("inAppMessages"));
  }
  async init() {
    await this.db.open();
  }
  async set(e) {
    const n = await this.inAppMessages.put(e);
    return { ...e, local_id: n };
  }
  async getAll() {
    return this.inAppMessages.orderBy("created_at").reverse().toArray();
  }
  async delete(e) {
    await this.inAppMessages.bulkDelete(e);
  }
  deleteAll() {
    return this.inAppMessages.clear();
  }
}
class Fqe extends ar {
  async save(e) {
    await this.set(e, {
      marker: e.marker,
      hostnames: e.hostnames,
      key: e.key,
      comment: e.comment,
      is_shared: e.is_shared,
      encrypted_with: e.encrypted_with,
    });
  }
}
class Uqe {
  constructor() {
    const e = new Ns("personalDeviceKeyPair", {
      autoOpen: !1,
      cache: "disabled",
    });
    e.version(1).stores({ personalDeviceKeyPair: "++local_id, &local_id" }),
      (this.db = e),
      (this.personalDeviceKeyPair = e.table("personalDeviceKeyPair"));
  }
  async init() {
    await this.db.open();
  }
  async set(e) {
    const n = await this.personalDeviceKeyPair.put(e);
    return { ...e, local_id: n };
  }
  async getAll() {
    return this.personalDeviceKeyPair.toArray();
  }
  async delete(e) {
    await this.personalDeviceKeyPair.bulkDelete(e);
  }
  deleteAll() {
    return this.personalDeviceKeyPair.clear();
  }
}
class Kqe extends ar {
  constructor(e, n) {
    super(e), (this.repositories = n);
  }
  getEntitiesAffectedByHostTransitionPredicate(e, n, r) {
    const a = new Set(n.map((s) => s.local_id));
    return (s) =>
      s.get("host").local_id === e.local_id &&
      !a.has(s.get("local_id")) &&
      !Es(
        {
          is_shared: s.get("is_shared"),
          encrypted_with: s.get("encrypted_with"),
        },
        r
      );
  }
  isHostUsed(e, n, r) {
    return this.collection.some(
      this.getEntitiesAffectedByHostTransitionPredicate(e, n, r)
    );
  }
  async save(e) {
    await this.set(e, {
      bound_address: e.bound_address,
      host: this.repositories.host.getAsRepositoryID(e.host),
      hostname: e.hostname,
      label: e.label,
      local_port: e.local_port,
      pf_type: e.pf_type,
      remote_port: e.remote_port,
      is_shared: e.is_shared,
      encrypted_with: e.encrypted_with,
    });
  }
}
class Bqe extends ar {
  constructor(e, n) {
    super(e), (this.repositories = n);
  }
  getEntitiesAffectedByIdentityTransitionPredicate(e, n, r) {
    const a = new Set(n.map((s) => s.local_id));
    return (s) => {
      var i;
      return (
        ((i = s.get("identity")) == null ? void 0 : i.local_id) ===
          e.local_id &&
        !a.has(s.get("local_id")) &&
        !Es(
          {
            is_shared: s.get("is_shared"),
            encrypted_with: s.get("encrypted_with"),
          },
          r
        )
      );
    };
  }
  usesIdentity(e, n, r) {
    return this.collection.some(
      this.getEntitiesAffectedByIdentityTransitionPredicate(e, n, r)
    );
  }
  async unlinkIdentities(e, n, r) {
    const a = this.collection.filter(
      this.getEntitiesAffectedByIdentityTransitionPredicate(e, n, r)
    );
    return this.unsetAllInArray(a, "identity");
  }
  async save(e) {
    return this.set(e, {
      hostname: e.hostname,
      identity: this.repositories.identity.getAsRepositoryID(e.identity),
      port: e.port,
      type: e.type,
      is_shared: e.is_shared,
      encrypted_with: e.encrypted_with,
    });
  }
}
class Vqe extends ar {
  constructor(e, n) {
    super(e), (this.repositories = n);
  }
  async save(e) {
    await this.set(e, {
      auto_close: e.auto_close,
      label: e.label,
      script: e.script,
      is_shared: e.is_shared,
      encrypted_with: e.encrypted_with,
      aianalyticsID: e.aianalyticsID,
      package: this.repositories.snippetPackage.getAsRepositoryID(e.package),
    }),
      await this.repositories.hostSnippets.saveForSnippet(e);
  }
}
class oue extends ar {
  getEntitiesAffectedBySnippetTransitionPredicate(e, n, r) {
    const a = new Set(n.map((s) => s.local_id));
    return (s) => {
      var i;
      return (
        ((i = s.get("startup_snippet")) == null ? void 0 : i.local_id) ===
          e.local_id &&
        !a.has(s.get("local_id")) &&
        !Es(
          {
            is_shared: s.get("is_shared"),
            encrypted_with: s.get("encrypted_with"),
          },
          r
        )
      );
    };
  }
  isSnippetUsed(e, n, r) {
    return this.collection.some(
      this.getEntitiesAffectedBySnippetTransitionPredicate(e, n, r)
    );
  }
  async unlinkSnippets(e, n, r) {
    const a = this.collection.filter(
      this.getEntitiesAffectedBySnippetTransitionPredicate(e, n, r)
    );
    return this.unsetAllInArray(a, "startup_snippet");
  }
}
class jqe extends oue {
  constructor(e, n) {
    super(e), (this.repositories = n);
  }
  async save(e) {
    await this.set(e, {
      agent_forwarding: e.agent_forwarding,
      charset: e.charset,
      color_scheme: e.color_scheme,
      cursor_blink: e.cursor_blink,
      env_variables: Xs.stringifyEnvVariables(e.env_variables),
      font_size: e.font_size,
      identity: this.repositories.identity.getAsRepositoryID(e.identity),
      is_forward_ports: e.is_forward_ports,
      keep_alive_packages: e.keep_alive_packages,
      mosh_server_command: e.mosh_server_command,
      port: e.port,
      proxycommand: this.repositories.proxy.getAsRepositoryID(e.proxy),
      startup_snippet: this.repositories.snippet.getAsRepositoryID(
        e.startup_snippet
      ),
      strict_host_key_check: e.strict_host_key_check,
      timeout: e.timeout,
      use_mosh: e.use_mosh,
      use_ssh_key: e.use_ssh_key,
      is_shared: e.is_shared,
      encrypted_with: e.encrypted_with,
    });
  }
}
class zqe extends ar {
  async save(e) {
    await this.set(e, {
      label: e.label,
      passphrase: e.passphrase,
      private_key: e.private_key,
      public_key: e.public_key,
      is_shared: e.is_shared,
      encrypted_with: e.encrypted_with,
    });
  }
}
class $qe extends ar {
  getUniqueTags(e) {
    const n = this.getAll(!0).map((a) => ({ label: a.label, canEdit: e(a) })),
      r = ZP(n, ["label", "canEdit"], ["asc", "desc"]);
    return i3(r, "label");
  }
  countUniqueTags() {
    return new Set(this.getAll(!0).map((n) => n.label)).size;
  }
  async upsertBy(e, n) {
    const a = this.getAll()
      .filter((s) => s.label === e.previousValue)
      .filter(n);
    if (a.length === 0) {
      await this.set({}, { label: e.newValue });
      return;
    }
    await Promise.all(a.map((s) => this.set(s, { label: e.newValue })));
  }
  async deleteBy(e, n) {
    const a = this.getAll()
      .filter((s) => s.label === e)
      .filter(n);
    await Promise.all(a.map((s) => this.delete(s)));
  }
  async getOrCreateTag(e, n) {
    const r = this.findByLabelInVault(e, n);
    if (r != null) return { local_id: r.get("local_id"), id: r.get("id") };
    const a = {};
    return (
      await this.set(a, {
        label: e,
        is_shared: n.is_shared,
        encrypted_with: n.encrypted_with,
      }),
      a
    );
  }
  queryByLabel(e) {
    return this.collection.filter((n) => n.get("label") === e);
  }
  findByLabelInVault(e, n) {
    return this.collection.find((r) => r.get("label") === e && Wqe(r, n));
  }
}
function Wqe(t, e) {
  return (
    !!e.is_shared == !!t.get("is_shared") &&
    e.encrypted_with === (t.get("encrypted_with") ?? null)
  );
}
class qqe extends ar {
  constructor(e, n) {
    super(e), (this.repositories = n), (this.collection = e);
  }
  async getOrCreateRelation(e, n) {
    const { local_id: r } = n;
    rn(r != null);
    let a = this.collection.findByHostAndTag(e.local_id, n.local_id);
    a == null &&
      ((a = this.collection.add({
        host: { local_id: e.local_id, id: e.id },
        tag: { local_id: n.local_id, id: n.id },
        is_shared: e.is_shared,
        encrypted_with: e.encrypted_with,
      })),
      await a.saveAll());
  }
  async saveForHost(e) {
    const n = this.getRemovedTagsToRemoveFromHost(e);
    await this.removeTagsForHost(e, n);
    for (const r of xf(e.tags)) {
      const a = await this.repositories.tag.getOrCreateTag(r, e);
      await this.getOrCreateRelation(e, a);
    }
  }
  getTagsByHost(e) {
    const r = (e.local_id ? this.collection.findByHost(e.local_id) : [])
      .filter((a) => a.get("tag"))
      .map((a) => {
        const s = a.get("tag"),
          i = { local_id: s.local_id, id: s.id },
          o = i ? this.repositories.tag.get(i) : void 0;
        return o == null ? void 0 : o.label;
      })
      .filter(xn);
    return xf(r);
  }
  clearTagsOfHost(e, n) {
    return Promise.all(
      e.map(async (r) => {
        const a = this.collection.findByHostAndTag(
          n.local_id,
          r.get("local_id")
        );
        a && (await a.destroy());
      })
    );
  }
  getRemovedTagsToRemoveFromHost(e) {
    const n = this.getTagsByHost(e),
      { tags: r } = e;
    return qP(n, r);
  }
  async removeTagsForHost(e, n) {
    return (
      await this.cleanTags(e, (r) => !Es(r, e)),
      Promise.all(
        n.map((r) => {
          const a = this.repositories.tag.queryByLabel(r);
          return this.clearTagsOfHost(a, e);
        })
      )
    );
  }
  async cleanTags(e, n) {
    const r = this.collection.findByHost(e.local_id).filter((a) =>
      n({
        is_shared: a.get("is_shared"),
        encrypted_with: a.get("encrypted_with") ?? null,
      })
    );
    await Promise.all(r.map((a) => a.destroy()));
  }
}
class Yqe {
  constructor() {
    (this.encrypt = (n) => {
      const r = this.cryptor.encrypt(n.email);
      if (typeof r != "string")
        throw new Error("Can not encrypt DB team invite item");
      return { ...n, email: r };
    }),
      (this.decrypt = (n) => {
        const r = this.cryptor.decrypt(n.email);
        if (typeof r != "string")
          throw new Error("Can not decrypt DB team invite item");
        return { ...n, email: r };
      });
    const e = new Ns("teamInvites", { autoOpen: !1, cache: "disabled" });
    e.version(1).stores({ teamInvites: "id" }),
      (this.db = e),
      (this.teamInvites = e.table("teamInvites"));
  }
  async init() {
    await this.db.open();
  }
  setCryptor(e) {
    this.cryptor = e;
  }
  async set(e) {
    const n = await this.teamInvites.put(this.encrypt(e));
    return { ...e, local_id: n };
  }
  async getAll() {
    return (await this.teamInvites.toArray()).map(this.decrypt);
  }
  async delete(e) {
    await this.teamInvites.bulkDelete(e);
  }
  deleteAll() {
    return this.teamInvites.clear();
  }
}
class Xqe {
  constructor() {
    const e = new Ns("teamMemberAvatars", { autoOpen: !1, cache: "disabled" });
    e.version(1).stores({ teamMemberAvatars: "id" }),
      (this.db = e),
      (this.teamMemberAvatars = e.table("teamMemberAvatars"));
  }
  async init() {
    await this.db.open();
  }
  async set(e) {
    const n = await this.teamMemberAvatars.put(e);
    return { ...e, local_id: n };
  }
  async getAll() {
    return this.teamMemberAvatars.toArray();
  }
  async delete(e) {
    await this.teamMemberAvatars.bulkDelete(e);
  }
  deleteAll() {
    return this.teamMemberAvatars.clear();
  }
}
class Qqe {
  constructor() {
    (this.encrypt = (n) => {
      const r = this.cryptor.encrypt(n.email);
      if (typeof r != "string")
        throw new Error("Can not encrypt DB team member item");
      return { ...n, email: r };
    }),
      (this.decrypt = (n) => {
        const r = this.cryptor.decrypt(n.email);
        if (typeof r != "string")
          throw new Error("Can not decrypt DB team member item");
        return { ...n, email: r };
      });
    const e = new Ns("teamMembers", { autoOpen: !1, cache: "disabled" });
    e.version(1).stores({ teamMembers: "id" }),
      (this.db = e),
      (this.teamMembers = e.table("teamMembers"));
  }
  async init() {
    await this.db.open();
  }
  setCryptor(e) {
    this.cryptor = e;
  }
  async set(e) {
    const n = await this.teamMembers.put(this.encrypt(e));
    return { ...e, local_id: n };
  }
  async getAll() {
    return (await this.teamMembers.toArray()).map(this.decrypt);
  }
  async delete(e) {
    await this.teamMembers.bulkDelete(e);
  }
  deleteAll() {
    return this.teamMembers.clear();
  }
}
class Jqe extends oue {
  constructor(e, n) {
    super(e), (this.repositories = n);
  }
  async save(e) {
    await this.set(e, {
      charset: e.charset,
      color_scheme: e.color_scheme,
      cursor_blink: e.cursor_blink,
      font_size: e.font_size,
      identity: this.repositories.identity.getAsRepositoryID(e.identity),
      keep_alive_packages: e.keep_alive_packages,
      port: e.port,
      startup_snippet: this.repositories.snippet.getAsRepositoryID(
        e.startup_snippet
      ),
      timeout: e.timeout,
      is_shared: e.is_shared,
      encrypted_with: e.encrypted_with,
    });
  }
}
class Zqe {
  async cleanSessionLogs() {}
  async validateSessionLogFileExists() {}
}
class eYe {
  constructor(e) {
    this.logsDirectory = e;
  }
  async getFilesOverLimit(e = 100) {
    const n = await Ql.readdir(this.logsDirectory);
    if (n.length < e) return [];
    const r = await Promise.all(
      n.map(async (a) => ({
        name: a,
        time: (await Ql.stat(QS(this.logsDirectory, a))).mtime.getTime(),
      }))
    );
    return tI(r, (a) => a.time)
      .reverse()
      .slice(e)
      .map((a) => a.name);
  }
  async cleanSessionLogs({ toRemove: e, toSkip: n }, r = 100) {
    try {
      const a = await Ql.readdir(this.logsDirectory);
      await Promise.allSettled(
        a
          .filter((i) => e.has(i))
          .map((i) => Ql.unlink(QS(this.logsDirectory, i)))
      );
      const s = await this.getFilesOverLimit(r);
      await Promise.allSettled(
        s
          .filter((i) => !n.has(i))
          .map((i) => Ql.unlink(QS(this.logsDirectory, i)))
      );
    } catch (a) {
      tt.exception("Reading session logs directory has failed", a);
    }
  }
  async validateSessionLogFileExists(e) {
    await Ql.access(QS(this.logsDirectory, e));
  }
}
async function _U(t) {
  const e = [];
  for (const n of t) {
    const r = await n();
    r && e.push(r);
  }
  return e;
}
var uue = {};
const tYe = Fj(yWe);
(function (t) {
  (function (e, n) {
    {
      var r = tYe;
      n(e, t, r);
    }
  })(sl, function (e, n, r, a) {
    var s = e.Backbone,
      i = [],
      o = i.slice;
    (n.VERSION = "1.1.2"),
      (n.$ = a),
      (n.noConflict = function () {
        return (e.Backbone = s), this;
      }),
      (n.emulateHTTP = !1),
      (n.emulateJSON = !1);
    var u = (n.Events = {
        on: function (L, M, me) {
          if (!c(this, "on", L, [M, me]) || !M) return this;
          this._events || (this._events = {});
          var K = this._events[L] || (this._events[L] = []);
          return K.push({ callback: M, context: me, ctx: me || this }), this;
        },
        once: function (L, M, me) {
          if (!c(this, "once", L, [M, me]) || !M) return this;
          var K = this,
            Ge = r.once(function () {
              K.off(L, Ge), M.apply(this, arguments);
            });
          return (Ge._callback = M), this.on(L, Ge, me);
        },
        off: function (L, M, me) {
          var K, Ge, Ke, Re, it, Qe, ct, ot;
          if (!this._events || !c(this, "off", L, [M, me])) return this;
          if (!L && !M && !me) return (this._events = void 0), this;
          for (
            Re = L ? [L] : r.keys(this._events), it = 0, Qe = Re.length;
            it < Qe;
            it++
          )
            if (((L = Re[it]), (Ke = this._events[L]))) {
              if (((this._events[L] = K = []), M || me))
                for (ct = 0, ot = Ke.length; ct < ot; ct++)
                  (Ge = Ke[ct]),
                    ((M && M !== Ge.callback && M !== Ge.callback._callback) ||
                      (me && me !== Ge.context)) &&
                      K.push(Ge);
              K.length || delete this._events[L];
            }
          return this;
        },
        trigger: function (L) {
          if (!this._events) return this;
          var M = o.call(arguments, 1);
          if (!c(this, "trigger", L, M)) return this;
          var me = this._events[L],
            K = this._events.all;
          return me && d(me, M), K && d(K, arguments), this;
        },
        stopListening: function (L, M, me) {
          var K = this._listeningTo;
          if (!K) return this;
          var Ge = !M && !me;
          !me && typeof M == "object" && (me = this),
            L && ((K = {})[L._listenId] = L);
          for (var Ke in K)
            (L = K[Ke]),
              L.off(M, me, this),
              (Ge || r.isEmpty(L._events)) && delete this._listeningTo[Ke];
          return this;
        },
      }),
      l = /\s+/,
      c = function (L, M, me, K) {
        if (!me) return !0;
        if (typeof me == "object") {
          for (var Ge in me) L[M].apply(L, [Ge, me[Ge]].concat(K));
          return !1;
        }
        if (l.test(me)) {
          for (var Ke = me.split(l), Re = 0, it = Ke.length; Re < it; Re++)
            L[M].apply(L, [Ke[Re]].concat(K));
          return !1;
        }
        return !0;
      },
      d = function (L, M) {
        var me,
          K = -1,
          Ge = L.length,
          Ke = M[0],
          Re = M[1],
          it = M[2];
        switch (M.length) {
          case 0:
            for (; ++K < Ge; ) (me = L[K]).callback.call(me.ctx);
            return;
          case 1:
            for (; ++K < Ge; ) (me = L[K]).callback.call(me.ctx, Ke);
            return;
          case 2:
            for (; ++K < Ge; ) (me = L[K]).callback.call(me.ctx, Ke, Re);
            return;
          case 3:
            for (; ++K < Ge; ) (me = L[K]).callback.call(me.ctx, Ke, Re, it);
            return;
          default:
            for (; ++K < Ge; ) (me = L[K]).callback.apply(me.ctx, M);
            return;
        }
      },
      p = { listenTo: "on", listenToOnce: "once" };
    r.each(p, function (L, M) {
      u[M] = function (me, K, Ge) {
        var Ke = this._listeningTo || (this._listeningTo = {}),
          Re = me._listenId || (me._listenId = r.uniqueId("l"));
        return (
          (Ke[Re] = me),
          !Ge && typeof K == "object" && (Ge = this),
          me[L](K, Ge, this),
          this
        );
      };
    }),
      (u.bind = u.on),
      (u.unbind = u.off),
      r.extend(n, u);
    var m = (n.Model = function (L, M) {
      var me = L || {};
      M || (M = {}),
        (this.cid = r.uniqueId("c")),
        (this.attributes = {}),
        M.collection && (this.collection = M.collection),
        M.parse && (me = this.parse(me, M) || {}),
        (me = r.defaults({}, me, r.result(this, "defaults"))),
        this.set(me, M),
        (this.changed = {}),
        this.initialize.apply(this, arguments);
    });
    r.extend(m.prototype, u, {
      changed: null,
      validationError: null,
      idAttribute: "id",
      initialize: function () {},
      toJSON: function (L) {
        return r.clone(this.attributes);
      },
      sync: function () {
        return n.sync.apply(this, arguments);
      },
      get: function (L) {
        return this.attributes[L];
      },
      escape: function (L) {
        return r.escape(this.get(L));
      },
      has: function (L) {
        return this.get(L) != null;
      },
      set: function (L, M, me) {
        var K, Ge, Ke, Re, it, Qe, ct, ot;
        if (L == null) return this;
        if (
          (typeof L == "object" ? ((Ge = L), (me = M)) : ((Ge = {})[L] = M),
          me || (me = {}),
          !this._validate(Ge, me))
        )
          return !1;
        (Ke = me.unset),
          (it = me.silent),
          (Re = []),
          (Qe = this._changing),
          (this._changing = !0),
          Qe ||
            ((this._previousAttributes = r.clone(this.attributes)),
            (this.changed = {})),
          (ot = this.attributes),
          (ct = this._previousAttributes),
          this.idAttribute in Ge && (this.id = Ge[this.idAttribute]);
        for (K in Ge)
          (M = Ge[K]),
            r.isEqual(ot[K], M) || Re.push(K),
            r.isEqual(ct[K], M)
              ? delete this.changed[K]
              : (this.changed[K] = M),
            Ke ? delete ot[K] : (ot[K] = M);
        if (!it) {
          Re.length && (this._pending = me);
          for (var rt = 0, gt = Re.length; rt < gt; rt++)
            this.trigger("change:" + Re[rt], this, ot[Re[rt]], me);
        }
        if (Qe) return this;
        if (!it)
          for (; this._pending; )
            (me = this._pending),
              (this._pending = !1),
              this.trigger("change", this, me);
        return (this._pending = !1), (this._changing = !1), this;
      },
      unset: function (L, M) {
        return this.set(L, void 0, r.extend({}, M, { unset: !0 }));
      },
      clear: function (L) {
        var M = {};
        for (var me in this.attributes) M[me] = void 0;
        return this.set(M, r.extend({}, L, { unset: !0 }));
      },
      hasChanged: function (L) {
        return L == null ? !r.isEmpty(this.changed) : r.has(this.changed, L);
      },
      changedAttributes: function (L) {
        if (!L) return this.hasChanged() ? r.clone(this.changed) : !1;
        var M,
          me = !1,
          K = this._changing ? this._previousAttributes : this.attributes;
        for (var Ge in L)
          r.isEqual(K[Ge], (M = L[Ge])) || ((me || (me = {}))[Ge] = M);
        return me;
      },
      previous: function (L) {
        return L == null || !this._previousAttributes
          ? null
          : this._previousAttributes[L];
      },
      previousAttributes: function () {
        return r.clone(this._previousAttributes);
      },
      fetch: function (L) {
        (L = L ? r.clone(L) : {}), L.parse === void 0 && (L.parse = !0);
        var M = this,
          me = L.success;
        return (
          (L.success = function (K) {
            if (!M.set(M.parse(K, L), L)) return !1;
            me && me(M, K, L), M.trigger("sync", M, K, L);
          }),
          nt(this, L),
          this.sync("read", this, L)
        );
      },
      save: function (L, M, me) {
        var K,
          Ge,
          Ke,
          Re = this.attributes;
        if (
          (L == null || typeof L == "object"
            ? ((K = L), (me = M))
            : ((K = {})[L] = M),
          (me = r.extend({ validate: !0 }, me)),
          K && !me.wait)
        ) {
          if (!this.set(K, me)) return !1;
        } else if (!this._validate(K, me)) return !1;
        K && me.wait && (this.attributes = r.extend({}, Re, K)),
          me.parse === void 0 && (me.parse = !0);
        var it = this,
          Qe = me.success;
        return (
          (me.success = function (ct) {
            it.attributes = Re;
            var ot = it.parse(ct, me);
            if (
              (me.wait && (ot = r.extend(K || {}, ot)),
              r.isObject(ot) && !it.set(ot, me))
            )
              return !1;
            Qe && Qe(it, ct, me), it.trigger("sync", it, ct, me);
          }),
          nt(this, me),
          (Ge = this.isNew() ? "create" : me.patch ? "patch" : "update"),
          Ge === "patch" && (me.attrs = K),
          (Ke = this.sync(Ge, this, me)),
          K && me.wait && (this.attributes = Re),
          Ke
        );
      },
      destroy: function (L) {
        L = L ? r.clone(L) : {};
        var M = this,
          me = L.success,
          K = function () {
            M.trigger("destroy", M, M.collection, L);
          };
        if (
          ((L.success = function (Ke) {
            (L.wait || M.isNew()) && K(),
              me && me(M, Ke, L),
              M.isNew() || M.trigger("sync", M, Ke, L);
          }),
          this.isNew())
        )
          return L.success(), !1;
        nt(this, L);
        var Ge = this.sync("delete", this, L);
        return L.wait || K(), Ge;
      },
      url: function () {
        var L =
          r.result(this, "urlRoot") || r.result(this.collection, "url") || lt();
        return this.isNew()
          ? L
          : L.replace(/([^\/])$/, "$1/") + encodeURIComponent(this.id);
      },
      parse: function (L, M) {
        return L;
      },
      clone: function () {
        return new this.constructor(this.attributes);
      },
      isNew: function () {
        return !this.has(this.idAttribute);
      },
      isValid: function (L) {
        return this._validate({}, r.extend(L || {}, { validate: !0 }));
      },
      _validate: function (L, M) {
        if (!M.validate || !this.validate) return !0;
        L = r.extend({}, this.attributes, L);
        var me = (this.validationError = this.validate(L, M) || null);
        return me
          ? (this.trigger(
              "invalid",
              this,
              me,
              r.extend(M, { validationError: me })
            ),
            !1)
          : !0;
      },
    });
    var y = ["keys", "values", "pairs", "invert", "pick", "omit"];
    r.each(y, function (L) {
      m.prototype[L] = function () {
        var M = o.call(arguments);
        return M.unshift(this.attributes), r[L].apply(r, M);
      };
    });
    var I = (n.Collection = function (L, M) {
        M || (M = {}),
          M.model && (this.model = M.model),
          M.comparator !== void 0 && (this.comparator = M.comparator),
          this._reset(),
          this.initialize.apply(this, arguments),
          L && this.reset(L, r.extend({ silent: !0 }, M));
      }),
      O = { add: !0, remove: !0, merge: !0 },
      g = { add: !0, remove: !1 };
    r.extend(I.prototype, u, {
      model: m,
      initialize: function () {},
      toJSON: function (L) {
        return this.map(function (M) {
          return M.toJSON(L);
        });
      },
      sync: function () {
        return n.sync.apply(this, arguments);
      },
      add: function (L, M) {
        return this.set(L, r.extend({ merge: !1 }, M, g));
      },
      remove: function (L, M) {
        var me = !r.isArray(L);
        (L = me ? [L] : r.clone(L)), M || (M = {});
        var K, Ge, Ke, Re;
        for (K = 0, Ge = L.length; K < Ge; K++)
          (Re = L[K] = this.get(L[K])),
            Re &&
              (delete this._byId[Re.id],
              delete this._byId[Re.cid],
              (Ke = this.indexOf(Re)),
              this.models.splice(Ke, 1),
              this.length--,
              M.silent || ((M.index = Ke), Re.trigger("remove", Re, this, M)),
              this._removeReference(Re, M));
        return me ? L[0] : L;
      },
      set: function (L, M) {
        (M = r.defaults({}, M, O)), M.parse && (L = this.parse(L, M));
        var me = !r.isArray(L);
        L = me ? (L ? [L] : []) : r.clone(L);
        var K,
          Ge,
          Ke,
          Re,
          it,
          Qe,
          ct,
          ot = M.at,
          rt = this.model,
          gt = this.comparator && ot == null && M.sort !== !1,
          Mt = r.isString(this.comparator) ? this.comparator : null,
          at = [],
          Dt = [],
          pt = {},
          Xt = M.add,
          It = M.merge,
          bt = M.remove,
          yt = !gt && Xt && bt ? [] : !1;
        for (K = 0, Ge = L.length; K < Ge; K++) {
          if (
            ((it = L[K] || {}),
            it instanceof m
              ? (Ke = Re = it)
              : (Ke = it[rt.prototype.idAttribute || "id"]),
            (Qe = this.get(Ke)))
          )
            bt && (pt[Qe.cid] = !0),
              It &&
                ((it = it === Re ? Re.attributes : it),
                M.parse && (it = Qe.parse(it, M)),
                Qe.set(it, M),
                gt && !ct && Qe.hasChanged(Mt) && (ct = !0)),
              (L[K] = Qe);
          else if (Xt) {
            if (((Re = L[K] = this._prepareModel(it, M)), !Re)) continue;
            at.push(Re), this._addReference(Re, M);
          }
          (Re = Qe || Re),
            yt && (Re.isNew() || !pt[Re.id]) && yt.push(Re),
            (pt[Re.id] = !0);
        }
        if (bt) {
          for (K = 0, Ge = this.length; K < Ge; ++K)
            pt[(Re = this.models[K]).cid] || Dt.push(Re);
          Dt.length && this.remove(Dt, M);
        }
        if (at.length || (yt && yt.length))
          if ((gt && (ct = !0), (this.length += at.length), ot != null))
            for (K = 0, Ge = at.length; K < Ge; K++)
              this.models.splice(ot + K, 0, at[K]);
          else {
            yt && (this.models.length = 0);
            var tn = yt || at;
            for (K = 0, Ge = tn.length; K < Ge; K++) this.models.push(tn[K]);
          }
        if ((ct && this.sort({ silent: !0 }), !M.silent)) {
          for (K = 0, Ge = at.length; K < Ge; K++)
            (Re = at[K]).trigger("add", Re, this, M);
          (ct || (yt && yt.length)) && this.trigger("sort", this, M);
        }
        return me ? L[0] : L;
      },
      reset: function (L, M) {
        M || (M = {});
        for (var me = 0, K = this.models.length; me < K; me++)
          this._removeReference(this.models[me], M);
        return (
          (M.previousModels = this.models),
          this._reset(),
          (L = this.add(L, r.extend({ silent: !0 }, M))),
          M.silent || this.trigger("reset", this, M),
          L
        );
      },
      push: function (L, M) {
        return this.add(L, r.extend({ at: this.length }, M));
      },
      pop: function (L) {
        var M = this.at(this.length - 1);
        return this.remove(M, L), M;
      },
      unshift: function (L, M) {
        return this.add(L, r.extend({ at: 0 }, M));
      },
      shift: function (L) {
        var M = this.at(0);
        return this.remove(M, L), M;
      },
      slice: function () {
        return o.apply(this.models, arguments);
      },
      get: function (L) {
        if (L != null)
          return this._byId[L] || this._byId[L.id] || this._byId[L.cid];
      },
      at: function (L) {
        return this.models[L];
      },
      where: function (L, M) {
        return r.isEmpty(L)
          ? M
            ? void 0
            : []
          : this[M ? "find" : "filter"](function (me) {
              for (var K in L) if (L[K] !== me.get(K)) return !1;
              return !0;
            });
      },
      findWhere: function (L) {
        return this.where(L, !0);
      },
      sort: function (L) {
        if (!this.comparator)
          throw new Error("Cannot sort a set without a comparator");
        return (
          L || (L = {}),
          r.isString(this.comparator) || this.comparator.length === 1
            ? (this.models = this.sortBy(this.comparator, this))
            : this.models.sort(r.bind(this.comparator, this)),
          L.silent || this.trigger("sort", this, L),
          this
        );
      },
      pluck: function (L) {
        return r.invoke(this.models, "get", L);
      },
      fetch: function (L) {
        (L = L ? r.clone(L) : {}), L.parse === void 0 && (L.parse = !0);
        var M = L.success,
          me = this;
        return (
          (L.success = function (K) {
            var Ge = L.reset ? "reset" : "set";
            me[Ge](K, L), M && M(me, K, L), me.trigger("sync", me, K, L);
          }),
          nt(this, L),
          this.sync("read", this, L)
        );
      },
      create: function (L, M) {
        if (((M = M ? r.clone(M) : {}), !(L = this._prepareModel(L, M))))
          return !1;
        M.wait || this.add(L, M);
        var me = this,
          K = M.success;
        return (
          (M.success = function (Ge, Ke) {
            M.wait && me.add(Ge, M), K && K(Ge, Ke, M);
          }),
          L.save(null, M),
          L
        );
      },
      parse: function (L, M) {
        return L;
      },
      clone: function () {
        return new this.constructor(this.models);
      },
      _reset: function () {
        (this.length = 0), (this.models = []), (this._byId = {});
      },
      _prepareModel: function (L, M) {
        if (L instanceof m) return L;
        (M = M ? r.clone(M) : {}), (M.collection = this);
        var me = new this.model(L, M);
        return me.validationError
          ? (this.trigger("invalid", this, me.validationError, M), !1)
          : me;
      },
      _addReference: function (L, M) {
        (this._byId[L.cid] = L),
          L.id != null && (this._byId[L.id] = L),
          L.collection || (L.collection = this),
          L.on("all", this._onModelEvent, this);
      },
      _removeReference: function (L, M) {
        this === L.collection && delete L.collection,
          L.off("all", this._onModelEvent, this);
      },
      _onModelEvent: function (L, M, me, K) {
        ((L === "add" || L === "remove") && me !== this) ||
          (L === "destroy" && this.remove(M, K),
          M &&
            L === "change:" + M.idAttribute &&
            (delete this._byId[M.previous(M.idAttribute)],
            M.id != null && (this._byId[M.id] = M)),
          this.trigger.apply(this, arguments));
      },
    });
    var C = [
      "forEach",
      "each",
      "map",
      "collect",
      "reduce",
      "foldl",
      "inject",
      "reduceRight",
      "foldr",
      "find",
      "detect",
      "filter",
      "select",
      "reject",
      "every",
      "all",
      "some",
      "any",
      "include",
      "contains",
      "invoke",
      "max",
      "min",
      "toArray",
      "size",
      "first",
      "head",
      "take",
      "initial",
      "rest",
      "tail",
      "drop",
      "last",
      "without",
      "difference",
      "indexOf",
      "shuffle",
      "lastIndexOf",
      "isEmpty",
      "chain",
      "sample",
    ];
    r.each(C, function (L) {
      I.prototype[L] = function () {
        var M = o.call(arguments);
        return M.unshift(this.models), r[L].apply(r, M);
      };
    });
    var H = ["groupBy", "countBy", "sortBy", "indexBy"];
    r.each(H, function (L) {
      I.prototype[L] = function (M, me) {
        var K = r.isFunction(M)
          ? M
          : function (Ge) {
              return Ge.get(M);
            };
        return r[L](this.models, K, me);
      };
    });
    var B = (n.View = function (L) {
        (this.cid = r.uniqueId("view")),
          L || (L = {}),
          r.extend(this, r.pick(L, de)),
          this._ensureElement(),
          this.initialize.apply(this, arguments),
          this.delegateEvents();
      }),
      he = /^(\S+)\s*(.*)$/,
      de = [
        "model",
        "collection",
        "el",
        "id",
        "attributes",
        "className",
        "tagName",
        "events",
      ];
    r.extend(B.prototype, u, {
      tagName: "div",
      $: function (L) {
        return this.$el.find(L);
      },
      initialize: function () {},
      render: function () {
        return this;
      },
      remove: function () {
        return this.$el.remove(), this.stopListening(), this;
      },
      setElement: function (L, M) {
        return (
          this.$el && this.undelegateEvents(),
          (this.$el = L instanceof n.$ ? L : n.$(L)),
          (this.el = this.$el[0]),
          M !== !1 && this.delegateEvents(),
          this
        );
      },
      delegateEvents: function (L) {
        if (!(L || (L = r.result(this, "events")))) return this;
        this.undelegateEvents();
        for (var M in L) {
          var me = L[M];
          if ((r.isFunction(me) || (me = this[L[M]]), !!me)) {
            var K = M.match(he),
              Ge = K[1],
              Ke = K[2];
            (me = r.bind(me, this)),
              (Ge += ".delegateEvents" + this.cid),
              Ke === "" ? this.$el.on(Ge, me) : this.$el.on(Ge, Ke, me);
          }
        }
        return this;
      },
      undelegateEvents: function () {
        return this.$el.off(".delegateEvents" + this.cid), this;
      },
      _ensureElement: function () {
        if (this.el) this.setElement(r.result(this, "el"), !1);
        else {
          var L = r.extend({}, r.result(this, "attributes"));
          this.id && (L.id = r.result(this, "id")),
            this.className && (L.class = r.result(this, "className"));
          var M = n.$("<" + r.result(this, "tagName") + ">").attr(L);
          this.setElement(M, !1);
        }
      },
    }),
      (n.sync = function (L, M, me) {
        var K = R[L];
        r.defaults(me || (me = {}), {
          emulateHTTP: n.emulateHTTP,
          emulateJSON: n.emulateJSON,
        });
        var Ge = { type: K, dataType: "json" };
        if (
          (me.url || (Ge.url = r.result(M, "url") || lt()),
          me.data == null &&
            M &&
            (L === "create" || L === "update" || L === "patch") &&
            ((Ge.contentType = "application/json"),
            (Ge.data = JSON.stringify(me.attrs || M.toJSON(me)))),
          me.emulateJSON &&
            ((Ge.contentType = "application/x-www-form-urlencoded"),
            (Ge.data = Ge.data ? { model: Ge.data } : {})),
          me.emulateHTTP && (K === "PUT" || K === "DELETE" || K === "PATCH"))
        ) {
          (Ge.type = "POST"), me.emulateJSON && (Ge.data._method = K);
          var Ke = me.beforeSend;
          me.beforeSend = function (it) {
            if ((it.setRequestHeader("X-HTTP-Method-Override", K), Ke))
              return Ke.apply(this, arguments);
          };
        }
        Ge.type !== "GET" && !me.emulateJSON && (Ge.processData = !1),
          Ge.type === "PATCH" &&
            U &&
            (Ge.xhr = function () {
              return new ActiveXObject("Microsoft.XMLHTTP");
            });
        var Re = (me.xhr = n.ajax(r.extend(Ge, me)));
        return M.trigger("request", M, Re, me), Re;
      });
    var U =
        typeof window < "u" &&
        !!window.ActiveXObject &&
        !(window.XMLHttpRequest && new XMLHttpRequest().dispatchEvent),
      R = {
        create: "POST",
        update: "PUT",
        patch: "PATCH",
        delete: "DELETE",
        read: "GET",
      };
    n.ajax = function () {
      return n.$.ajax.apply(n.$, arguments);
    };
    var ge = (n.Router = function (L) {
        L || (L = {}),
          L.routes && (this.routes = L.routes),
          this._bindRoutes(),
          this.initialize.apply(this, arguments);
      }),
      ve = /\((.*?)\)/g,
      we = /(\(\?)?:\w+/g,
      Te = /\*\w+/g,
      Ce = /[\-{}\[\]+?.,\\\^$|#\s]/g;
    r.extend(ge.prototype, u, {
      initialize: function () {},
      route: function (L, M, me) {
        r.isRegExp(L) || (L = this._routeToRegExp(L)),
          r.isFunction(M) && ((me = M), (M = "")),
          me || (me = this[M]);
        var K = this;
        return (
          n.history.route(L, function (Ge) {
            var Ke = K._extractParameters(L, Ge);
            K.execute(me, Ke),
              K.trigger.apply(K, ["route:" + M].concat(Ke)),
              K.trigger("route", M, Ke),
              n.history.trigger("route", K, M, Ke);
          }),
          this
        );
      },
      execute: function (L, M) {
        L && L.apply(this, M);
      },
      navigate: function (L, M) {
        return n.history.navigate(L, M), this;
      },
      _bindRoutes: function () {
        if (this.routes) {
          this.routes = r.result(this, "routes");
          for (var L, M = r.keys(this.routes); (L = M.pop()) != null; )
            this.route(L, this.routes[L]);
        }
      },
      _routeToRegExp: function (L) {
        return (
          (L = L.replace(Ce, "\\$&")
            .replace(ve, "(?:$1)?")
            .replace(we, function (M, me) {
              return me ? M : "([^/?]+)";
            })
            .replace(Te, "([^?]*?)")),
          new RegExp("^" + L + "(?:\\?([\\s\\S]*))?$")
        );
      },
      _extractParameters: function (L, M) {
        var me = L.exec(M).slice(1);
        return r.map(me, function (K, Ge) {
          return Ge === me.length - 1
            ? K || null
            : K
            ? decodeURIComponent(K)
            : null;
        });
      },
    });
    var Ee = (n.History = function () {
        (this.handlers = []),
          r.bindAll(this, "checkUrl"),
          typeof window < "u" &&
            ((this.location = window.location),
            (this.history = window.history));
      }),
      x = /^[#\/]|\s+$/g,
      F = /^\/+|\/+$/g,
      Se = /msie [\w.]+/,
      ye = /\/$/,
      Ae = /#.*$/;
    (Ee.started = !1),
      r.extend(Ee.prototype, u, {
        interval: 50,
        atRoot: function () {
          return this.location.pathname.replace(/[^\/]$/, "$&/") === this.root;
        },
        getHash: function (L) {
          var M = (L || this).location.href.match(/#(.*)$/);
          return M ? M[1] : "";
        },
        getFragment: function (L, M) {
          if (L == null)
            if (this._hasPushState || !this._wantsHashChange || M) {
              L = decodeURI(this.location.pathname + this.location.search);
              var me = this.root.replace(ye, "");
              L.indexOf(me) || (L = L.slice(me.length));
            } else L = this.getHash();
          return L.replace(x, "");
        },
        start: function (L) {
          if (Ee.started)
            throw new Error("Backbone.history has already been started");
          (Ee.started = !0),
            (this.options = r.extend({ root: "/" }, this.options, L)),
            (this.root = this.options.root),
            (this._wantsHashChange = this.options.hashChange !== !1),
            (this._wantsPushState = !!this.options.pushState),
            (this._hasPushState = !!(
              this.options.pushState &&
              this.history &&
              this.history.pushState
            ));
          var M = this.getFragment(),
            me = document.documentMode,
            K = Se.exec(navigator.userAgent.toLowerCase()) && (!me || me <= 7);
          if (
            ((this.root = ("/" + this.root + "/").replace(F, "/")),
            K && this._wantsHashChange)
          ) {
            var Ge = n.$('<iframe src="javascript:0" tabindex="-1">');
            (this.iframe = Ge.hide().appendTo("body")[0].contentWindow),
              this.navigate(M);
          }
          this._hasPushState
            ? n.$(window).on("popstate", this.checkUrl)
            : this._wantsHashChange && "onhashchange" in window && !K
            ? n.$(window).on("hashchange", this.checkUrl)
            : this._wantsHashChange &&
              (this._checkUrlInterval = setInterval(
                this.checkUrl,
                this.interval
              )),
            (this.fragment = M);
          var Ke = this.location;
          if (this._wantsHashChange && this._wantsPushState) {
            if (!this._hasPushState && !this.atRoot())
              return (
                (this.fragment = this.getFragment(null, !0)),
                this.location.replace(this.root + "#" + this.fragment),
                !0
              );
            this._hasPushState &&
              this.atRoot() &&
              Ke.hash &&
              ((this.fragment = this.getHash().replace(x, "")),
              this.history.replaceState(
                {},
                document.title,
                this.root + this.fragment
              ));
          }
          if (!this.options.silent) return this.loadUrl();
        },
        stop: function () {
          n
            .$(window)
            .off("popstate", this.checkUrl)
            .off("hashchange", this.checkUrl),
            this._checkUrlInterval && clearInterval(this._checkUrlInterval),
            (Ee.started = !1);
        },
        route: function (L, M) {
          this.handlers.unshift({ route: L, callback: M });
        },
        checkUrl: function (L) {
          var M = this.getFragment();
          if (
            (M === this.fragment &&
              this.iframe &&
              (M = this.getFragment(this.getHash(this.iframe))),
            M === this.fragment)
          )
            return !1;
          this.iframe && this.navigate(M), this.loadUrl();
        },
        loadUrl: function (L) {
          return (
            (L = this.fragment = this.getFragment(L)),
            r.any(this.handlers, function (M) {
              if (M.route.test(L)) return M.callback(L), !0;
            })
          );
        },
        navigate: function (L, M) {
          if (!Ee.started) return !1;
          (!M || M === !0) && (M = { trigger: !!M });
          var me = this.root + (L = this.getFragment(L || ""));
          if (((L = L.replace(Ae, "")), this.fragment !== L)) {
            if (
              ((this.fragment = L),
              L === "" && me !== "/" && (me = me.slice(0, -1)),
              this._hasPushState)
            )
              this.history[M.replace ? "replaceState" : "pushState"](
                {},
                document.title,
                me
              );
            else if (this._wantsHashChange)
              this._updateHash(this.location, L, M.replace),
                this.iframe &&
                  L !== this.getFragment(this.getHash(this.iframe)) &&
                  (M.replace || this.iframe.document.open().close(),
                  this._updateHash(this.iframe.location, L, M.replace));
            else return this.location.assign(me);
            if (M.trigger) return this.loadUrl(L);
          }
        },
        _updateHash: function (L, M, me) {
          if (me) {
            var K = L.href.replace(/(javascript:|#).*$/, "");
            L.replace(K + "#" + M);
          } else L.hash = "#" + M;
        },
      }),
      (n.history = new Ee());
    var De = function (L, M) {
      var me = this,
        K;
      L && r.has(L, "constructor")
        ? (K = L.constructor)
        : (K = function () {
            return me.apply(this, arguments);
          }),
        r.extend(K, me, M);
      var Ge = function () {
        this.constructor = K;
      };
      return (
        (Ge.prototype = me.prototype),
        (K.prototype = new Ge()),
        L && r.extend(K.prototype, L),
        (K.__super__ = me.prototype),
        K
      );
    };
    m.extend = I.extend = ge.extend = B.extend = Ee.extend = De;
    var lt = function () {
        throw new Error('A "url" property or function must be specified');
      },
      nt = function (L, M) {
        var me = M.error;
        M.error = function (K) {
          me && me(L, K, M), L.trigger("error", L, K, M);
        };
      };
    return n;
  });
})(uue);
const rI = Lo(uue);
class nYe extends Us {
  constructor() {
    super(...arguments), (this.name = "IndexedDBError");
  }
}
/**
 * @license
 * Backbone IndexedDB Adapter
 * Copyright (c) 2013-2014 Vincent Mac
 * Copyright (c) 2020 Termius Corporation.
 *
 * Available under MIT license <https://raw.github.com/vincentmac/backbone-idb/master/LICENSE>
 */ function bU() {}
function sYe(t) {
  return t instanceof Error
    ? t
    : t.target.error ?? new Error("unknown indexeddb error");
}
function rYe(t) {
  const e = new nYe(t.message);
  return (e.name = t.name), (e.stack = t.stack), e;
}
class lue {
  constructor({ storeName: e, dbVersion: n, indexes: r }) {
    (this.withStatus = r.split(",").includes("status")),
      (this.db = new Ns(e, { cache: "disabled" })),
      this.db.version(n / 10).stores({ [e]: r }),
      (this.store = this.db.table(e)),
      (this.keyPath = "local_id");
  }
  async open() {
    try {
      return this.db.open();
    } catch (e) {
      throw rYe(sYe(e));
    }
  }
  async create(e) {
    e.set("status", Ri);
    const n = e.attributes,
      r = await this.store.put(n);
    return (n[this.keyPath] = r), n;
  }
  async update(e) {
    e.hasRemoteId() && e.set("status", jg);
    const n = e.attributes,
      r = await this.store.put(n);
    return (n[this.keyPath] = r), n;
  }
  async read(e) {
    return this.store.get(e.id);
  }
  async getAll() {
    return this.withStatus
      ? this.store.filter(({ status: e }) => e !== ga).toArray()
      : this.getAllPersisted();
  }
  async getAllPersisted() {
    return this.store.toArray();
  }
  async destroy(e) {
    const n = e.attributes;
    return e.hasRemoteId()
      ? (e.set("status", ga), this.store.put(n))
      : this.hardDestroy(e);
  }
  async hardDestroy(e) {
    const n = e.attributes;
    return this.store.delete(n[e.idAttribute]);
  }
  async saveAll(e) {
    return this.store.bulkPut(e);
  }
  async getWithStatus(e) {
    return this.store.filter((n) => n.status === e).toArray();
  }
  async removeBatch(e) {
    return this.store.bulkDelete(e);
  }
  async clear() {
    return this.store.clear();
  }
}
rI.sync = async function (e, n, r) {
  const a = r.success || bU,
    s = r.success || bU;
  try {
    const i = await aYe(e, n);
    return a(i), i;
  } catch (i) {
    throw (s(i), i);
  }
};
async function aYe(t, e) {
  const n = e.indexedDB ?? e.collection.indexedDB;
  switch (t) {
    case "read":
      return e.id !== void 0 ? n.read(e) : n.getAll();
    case "create":
      return e.id ? n.update(e) : n.create(e);
    case "update":
      return e.id ? n.update(e) : n.create(e);
    case "delete":
      return e.isHardDestroyed
        ? n.hardDestroy(e)
        : e.id
        ? n.destroy(e)
        : void 0;
    default:
      return;
  }
}
class iYe {
  constructor(e) {
    this.data = e;
  }
}
class pr extends rI.Collection {
  constructor() {
    super(...arguments), (this._cryptor = null);
  }
  get useInResetPassword() {
    return !0;
  }
  get useInDeactivateTeam() {
    return !0;
  }
  get dbVersion() {
    return 1;
  }
  get cryptor() {
    return rn(this._cryptor), this._cryptor;
  }
  save() {
    return this.length === 0
      ? Promise.resolve()
      : this.indexedDB.saveAll(this.toJSON());
  }
  async removeUnsyncedDeleteFailedData() {
    await this._removeDeleteFailedData((e) => !e.hasOwnProperty("id"));
  }
  async removeDeleteFailedData(e) {
    await this._removeDeleteFailedData((n) => e.includes(n.id));
  }
  async _removeDeleteFailedData(e) {
    const n = await this._getDelayedData(ga);
    await this.removeGarbage(e ? n.filter(e) : n);
  }
  async getDelayedData() {
    const e = this._getDelayedData(ga),
      n = this._getDelayedData(Ri),
      r = this._getDelayedData(jg),
      a = await Promise.all([e, n, r]);
    return IP(a);
  }
  _getDelayedData(e) {
    return this.indexedDB.getWithStatus(e);
  }
  get(e) {
    return (
      (this._byId = {}),
      il(this.models, (n) => {
        (this._byId[n.cid] = n), n.id && (this._byId[n.id] = n);
      }),
      super.get(e)
    );
  }
  async initializeStorage() {
    (this.indexedDB = new lue({
      storeName: this.dbName,
      dbVersion: this.dbVersion,
      indexes: "++local_id,&local_id,&id,status",
    })),
      await this.indexedDB.open();
  }
  reCrypt(e) {
    const n = tt.withEncryptionLogin("migration", this.dbName, () =>
      this.map((r) => r.getReEncrypted(e, !0))
    );
    return this.set(n, { merge: !0, do_not_encrypt: !0 });
  }
  setCryptor(e, n = !1) {
    this._cryptor && n === !0 && this.reCrypt(e), (this._cryptor = e);
  }
  markAsUpdateFailed(e) {
    return (
      this.each((n) => {
        const r = n.get("status"),
          a = n.get("is_shared"),
          s = e.vaultKeyIds.has(n.get("encrypted_with") ?? null);
        r === Qu && (!a || s) && n.set("status", jg);
      }),
      this.save()
    );
  }
  prepareForSync(e, n) {
    return e;
  }
  async saveSyncData(e, n, r, a) {
    const { cryptor: s } = this;
    if (!s) return;
    const i = await this.indexedDB.getAllPersisted();
    il(e.data, (o) => {
      let u = Xf(i, { id: o.id });
      u == null && (u = Xf(i, { local_id: o.local_id }));
      let l = u != null ? new this.model(u, { collection: this }) : null;
      const d = new this.model().encryptDataForDatabase(o, s);
      (d.status = Qu),
        delete d.local_id,
        (l
          ? this.shouldSyncModel(l, { syncKeysAndIdentities: a })
          : this.shouldSyncRaw(d, { syncKeysAndIdentities: a })) &&
          (l != null && l.saveSyncResponse(d),
          (l = this.add(l ?? d, { do_not_encrypt: !0, merge: !0 })),
          l.updateRelationsData(d, r));
    }),
      await this.removeExistingLocalDataGottenInDeleteSets(n),
      await this.removeDeleteFailedData(n),
      await this.save(),
      await this.fetch({ do_not_encrypt: !0 });
  }
  collectGarbage() {
    return Promise.resolve();
  }
  async removeExistingLocalDataGottenInDeleteSets(e = []) {
    const n = this.filter((a) => {
      const s = a.get(a.remoteIdAttribute);
      return e.includes(s);
    });
    this.remove(n);
    const r = n.map((a) => a.toJSON());
    await this.removeGarbage(r);
  }
  removeGarbage(e) {
    if (e.length === 0) return Promise.resolve();
    const n = this.indexedDB.keyPath,
      r = e.map((a) => a[n]).filter(Boolean);
    return this.indexedDB.removeBatch(r);
  }
  findByLocalId(e) {
    return this.findWhere({ local_id: e });
  }
  findByRemoteId(e) {
    return this.findWhere({ id: e });
  }
  findById(e) {
    if (!e) return null;
    const { id: n, local_id: r } = e;
    if (n != null) {
      const a = this.findByRemoteId(n);
      if (a != null) return a;
    }
    if (r != null) {
      const a = this.findByLocalId(r);
      if (a != null) return a;
    }
    return null;
  }
  hasUnsyncedEntities() {
    return this.models.some((e) => e.get("status") !== Qu);
  }
  async clearData() {
    await this.indexedDB.clear(), this.reset();
  }
  async buildPushData(e, n) {
    const r = await this.getDelayedData(),
      a = [],
      s = [],
      i = [];
    return (
      tt.withEncryptionLogin("sync", this.dbName, () => {
        r.forEach((o) => {
          const u = this.findById(o);
          if (
            u &&
            this.shouldSyncModel(u, e) &&
            u.isShouldBeInPostBulkRequestData()
          ) {
            const l = u.buildPushData(e, n);
            if (sn.is(l)) {
              i.push(l);
              return;
            }
            a.push(l);
            return;
          }
          !u && this.shouldSyncRaw(o, e) && s.push(o.id);
        });
      }),
      i.length !== 0 ? new Wf(i) : { updatedEntities: a, deletedEntities: s }
    );
  }
  async makeAllEntitiesPersonal() {
    return this.modifySome((e) => e.is_shared, {
      is_shared: !1,
      encrypted_with: null,
    });
  }
  shouldSyncRaw(e, n) {
    return !0;
  }
  shouldSyncModel(e, n) {
    return this.shouldSyncRaw(e.toJSON(), n);
  }
  async modifySome(e, n) {
    return this.some((r) => e(r.toJSON()))
      ? this.runTransaction((r) => r.filter(e).modify(n))
      : 0;
  }
  async runTransaction(e) {
    const { db: n } = this.indexedDB,
      r = await n.transaction("rw", n.table(this.dbName), (a) =>
        e(a.table(this.dbName))
      );
    return await this.fetch({ reset: !0, do_not_encrypt: !0 }), r;
  }
}
class Bm extends pr {
  get nameOfSetInSync() {
    throw new Error(`Unsyncable collection ${this.dbName} is used in bulk`);
  }
  get useInResetPassword() {
    return !1;
  }
  get useInDeactivateTeam() {
    return !1;
  }
  async resaveCollection() {
    await this.save(), await this.fetch({ do_not_encrypt: !0 });
  }
  shouldSyncRaw(e, n) {
    return !1;
  }
}
const oYe = async (t, e, n, r) => {
    const a = e.map((i) => {
        const o = t.prepareForSync(i, r);
        return new t.model().decryptDataFromBackend(o, n);
      }),
      s = a.filter(sn.is);
    return s.length !== 0 ? new Wf(s) : new iYe(a);
  },
  uYe = { wait: !0 },
  Vm = (t) => t.destroy(uYe),
  jm = (t) => t.get("status") !== ga,
  Xc = (t, e, n) => {
    const r = t.get(e);
    if ((r == null ? void 0 : r.local_id) == null) return !1;
    const a = n.get(r.local_id);
    return a != null && a.get("status") !== ga;
  },
  lYe = (t, e, n, r) => {
    const a = t.get(e);
    if (!(Oc(a) || Fm(a))) return !1;
    const i = Oc(a)
        ? { id: a }
        : { local_id: Number.parseInt(a.split(`${n}/`)[1], 10) },
      o = r.findById(i);
    return o != null && o.get("status") !== ga;
  },
  en = {
    GROUPS: "group_set",
    HOSTS: "host_set",
    PF_RULES: "pfrule_set",
    SNIPPETS_PACKAGES: "package_set",
    PORT_KNOCKINGS: "portknocking_set",
    SNIPPETS: "snippet_set",
    SSH_CONFIGS: "sshconfig_set",
    TELNET_CONFIGS: "telnetconfig_set",
    IDENTITIES: "identity_set",
    SSH_KEYS: "sshkeycrypt_set",
    TAGHOSTS: "taghost_set",
    TAGS: "tag_set",
    KNOWN_HOSTS: "knownhost_set",
    HOST_CHAINS: "hostchain_set",
    HOST_SNIPPETS: "hostsnippet_set",
    PROXIES: "proxycommand_set",
    SSH_CONFIG_IDENTITY: "sshconfigidentity_set",
    SSH_CONFIG_IDENTITY_SHARED: "sharedsshconfigidentity_set",
    TELNET_CONFIG_IDENTITY: "telnetconfigidentity_set",
    TELNET_CONFIG_IDENTITY_SHARED: "sharedtelnetconfigidentity_set",
    MULTI_KEY: "multikey_set",
    SSH_CERTIFICATES: "sshcertificate_set",
  },
  IS = "delete_sets",
  cYe = "/";
var IE = ((t) => (
  (t[(t.apiV2 = 0)] = "apiV2"),
  (t[(t.apiV3 = 1)] = "apiV3"),
  (t[(t.sharing = 2)] = "sharing"),
  (t[(t.multiKey = 3)] = "multiKey"),
  (t[(t.sshCertificates = 4)] = "sshCertificates"),
  (t[(t.last = 4)] = "last"),
  t
))(IE || {});
class dYe {
  constructor(e, n) {
    this.repositories = n;
    const r = [
      e.known_hosts,
      e.ssh_keys,
      e.identities,
      e.snippets_packages,
      e.snippets,
      e.proxies,
      e.ssh_configs,
      e.telnet_configs,
      e.groups,
      e.hosts,
      e.tags,
      e.taghosts,
      e.host_snippets,
      e.pf_rules,
      e.port_knockings,
      e.host_chains,
      e.ssh_config_identities,
      e.ssh_config_identities_shared,
      e.telnet_config_identities,
      e.telnet_config_identities_shared,
      e.multi_keys,
      e.ssh_certificates,
    ];
    this.collections = { all: e, syncable: r };
  }
  get managedCollections() {
    return this.collections.syncable;
  }
  hasSyncableEntities() {
    return this.collections.syncable.some((e) => e.length !== 0);
  }
  hasDataToSync() {
    return this.collections.syncable.some((e) => e.hasUnsyncedEntities());
  }
  async clear() {
    hYe(this.collections.syncable);
  }
  async generateSyncRequest(e) {
    const n = { [IS]: {} },
      r = [];
    if (
      (await Promise.all(
        this.collections.syncable.map(async (a) => {
          const s = await a.buildPushData(e, this.collections.all);
          if (sn.is(s)) {
            r.push(s);
            return;
          }
          const { updatedEntities: i, deletedEntities: o } = s;
          (n[a.nameOfSetInSync] = i), (n[IS][a.nameOfSetInSync] = o);
        })
      ),
      r.length !== 0)
    ) {
      const a = new Wf(r);
      throw (tt.exception("sync encrypt failed", a), a);
    }
    for (const a of this.collections.syncable)
      (n[a.nameOfSetInSync] || []).length === 0 && delete n[a.nameOfSetInSync],
        (n[IS][a.nameOfSetInSync] || []).length === 0 &&
          delete n[IS][a.nameOfSetInSync];
    return Object.keys(n).length === 1 && Object.keys(n[IS]).length === 0
      ? null
      : n;
  }
  async saveSyncResponse(e, n, r) {
    if (e == null) return null;
    const a = this.collections.syncable.filter(
        (l) => e[l.nameOfSetInSync] ?? []
      ),
      s = a.map((l) => async () => {
        const c = l.nameOfSetInSync,
          d = await tt.withEncryptionLogin("sync.decrypt", l.dbName, () =>
            oYe(l, (e == null ? void 0 : e[c]) ?? [], n, r)
          );
        return [c, d];
      }),
      i = await _U(s);
    if (!EU(i)) {
      const l = TU(i);
      throw (tt.exception("sync decrypt failed", l), l);
    }
    const o = new Map(i),
      u = a.map((l) => {
        const c = l.nameOfSetInSync,
          p = ((e == null ? void 0 : e.delete_sets) ??
            (e == null ? void 0 : e.deleted_sets) ??
            {})[c],
          m = o.get(c);
        return (
          rn(m != null),
          () =>
            tt.withEncryptionLogin("sync.save", l.dbName, () =>
              l.saveSyncData(m, p || [], this.collections.all, r)
            )
        );
      });
    return _U([...this.getRemoveRelationsCallbacks(e), ...u]);
  }
  markAllAsUpdateFailed(e) {
    return this.markCollectionsAsUpdateFailed(this.collections.syncable, e);
  }
  markSyncKeyEntitiesAsUpdateFailed(e) {
    const n = this.collections.all;
    return this.markCollectionsAsUpdateFailed(
      [n.telnet_configs, n.ssh_configs, n.proxies, n.identities, n.ssh_keys],
      e
    );
  }
  async moveNewViewOnlyEntitiesToRoot(e) {
    const n = this.collections.all;
    n.groups.forEach(r("parent_group", n.groups)),
      await n.groups.save(),
      n.hosts.forEach(r("group", n.groups)),
      await n.hosts.save(),
      n.snippets.forEach(r("package", n.snippets_packages)),
      await n.snippets.save();
    function r(a, s) {
      return (i) => {
        var I, O;
        const o = !!i.get("is_shared"),
          u = i.get("encrypted_with") ?? null,
          l = (I = e.vaultRoles) == null ? void 0 : I.get(u),
          c = ZO(l) && !kP(l),
          d = i.get("status") === Ri,
          p = i.get(a),
          m = d && p != null && o && c,
          y =
            p != null
              ? ((O = s.get(p.local_id)) == null ? void 0 : O.get("status")) !==
                Ri
              : !0;
        m && y && i.set(a, null);
      };
    }
  }
  async deleteNewEntitiesWithoutViewAccess(e) {
    await Promise.all(
      this.collections.syncable.map((r) =>
        Promise.all(r.filter(n).map((a) => a.hardDestroy(g3)))
      )
    );
    function n(r) {
      var u;
      const a = r.get("encrypted_with") ?? null,
        s = r.get("status") === Ri,
        i = !!r.get("is_shared"),
        o = !ZO((u = e.vaultRoles) == null ? void 0 : u.get(a));
      return s && i && o;
    }
  }
  getReEncryptedData(e, n) {
    const r = [];
    return (
      this.collections.syncable
        .filter((a) => a.useInResetPassword)
        .forEach((a) => {
          tt.withEncryptionLogin("change password", a.dbName, () => {
            a.forEach((s) => {
              !s.get("is_shared") &&
                a.shouldSyncModel(s, { syncKeysAndIdentities: n }) &&
                r.push(s.getForChangePassword(e));
            });
          });
        }),
      r
    );
  }
  async removeNotSyncedDeleteFailed() {
    const e = this.collections.all;
    try {
      const n = [];
      for (const r of Object.keys(e))
        n.push(e[r].removeUnsyncedDeleteFailedData());
      await Promise.all(n);
    } catch (n) {
      tt.exception("Cannot remove unsynced deleted data", n);
    }
  }
  generateDataForTeamDowngrade(e, n, r) {
    const a = [];
    for (const s of Object.values(this.collections.all)) {
      const i = new s.model(),
        o = s.useInDeactivateTeam ? s.nameOfSetInSync : null,
        l = ((o !== "multikey_set" && o != null ? e[o] : null) ?? []).map(
          (d) => {
            let p;
            if (n === "decrypt")
              p = i.decryptDataFromBackend({ ...d, is_shared: !0 }, r.cryptor);
            else {
              const m = i.encryptDataForBackend({ ...d, is_shared: !1 }, r);
              p = s.prepareForSync(m, r.syncKeysAndIdentities);
            }
            if (p instanceof sn) return p;
            if (n === "encrypt")
              for (const [m, y] of Object.entries(d))
                m in i.relationsInBulk && pYe(y) && (p[m] = y.id);
            return p;
          }
        ),
        c = l.filter(sn.is);
      o != null && a.push([o, c.length === 0 ? l : new Wf(c)]);
    }
    if (!EU(a)) {
      const s = TU(a);
      throw (tt.exception("sync decrypt failed", s), s);
    }
    return Object.fromEntries(a);
  }
  markCollectionsAsUpdateFailed(e, n) {
    return Promise.all(e.map((r) => r.markAsUpdateFailed(n)));
  }
  getRemoveRelationsCallbacks(e) {
    if (e == null) return [];
    const { hosts: n, identities: r, groups: a } = this.collections.all,
      s = e.delete_sets || e.deleted_sets || {};
    return [
      ...this.removeDeletedHostsRelations(s[n.nameOfSetInSync]),
      ...this.removeDeletedIdentitiesRelations(s[r.nameOfSetInSync]),
      ...this.removeDeletedGroupsRelations(s[a.nameOfSetInSync]),
    ];
  }
  removeDeletedHostsRelations(e = []) {
    return e.map((n) => async () => {
      const r = this.repositories.host.get({ local_id: null, id: n });
      r &&
        (await this.repositories.hostLatestActivity.deleteAllBasedOn(
          "host",
          r
        ));
    });
  }
  removeDeletedGroupsRelations(e = []) {
    return e.map((n) => async () => {
      const r = this.repositories.group.get({ local_id: null, id: n });
      r && (await this.repositories.cloudConfig.cleanAllForGroup(r));
    });
  }
  removeDeletedIdentitiesRelations(e = []) {
    return e.map((n) => async () => {
      const r = this.repositories.identity.get({ local_id: null, id: n });
      r != null &&
        (await this.repositories.hostLatestActivity.unsetDependencyBasedOn(
          "latest_used_identity",
          r
        ));
    });
  }
}
const EU = (t) => !t.some(([e, n]) => sn.is(n)),
  TU = (t) => {
    const e = t.map(([n, r]) => r).filter(sn.is);
    return new Wf(e);
  },
  pYe = (t) => t != null && typeof t == "object" && t.hasOwnProperty("id");
async function hYe(t) {
  await Promise.all(t.map((e) => e.clearData()));
}
class fYe {
  constructor(e, n = new Zqe()) {
    (this.sessionLogCleaner = n),
      (this.convertGroup = (r, a) => {
        const s = new Fs(r);
        return (
          (s.parent_group = this._getGroup(s.parent_group, a)),
          (s.ssh_config = this.getSshConfig(s.ssh_config)),
          (s.telnet_config = this.getTelnetConfig(s.telnet_config)),
          (s.cloud_config = this.cloudConfigRepository.findByGroup(s)),
          new Fs(s)
        );
      }),
      (this.convertHost = (r, a) => {
        const s = new Tn(r),
          i = {
            forceOriginalData: a.forceOriginalData,
            visitedLocalIds: a.visitedGroupLocalIds,
          };
        return (
          (s.group = this._getGroup(s.group, i)),
          (s.ssh_config = this.getSshConfig(s.ssh_config)),
          (s.telnet_config = this.getTelnetConfig(s.telnet_config)),
          (s.tags = this.tagHostsRepository.getTagsByHost(s)),
          new Tn(s)
        );
      }),
      (this.convertIdentity = (r) => (
        (r.ssh_key = this.getSshKey(r.ssh_key)),
        (r.hardware_key = this.getHardwareKey(r.hardware_key)),
        new xr(r)
      )),
      (this.convertPortForwardingRule = (r) => (
        (r.host = this.getHost(r.host)), r.host ? new Xi(r) : null
      )),
      (this.convertSnippet = (r) => (
        (r.package = this.getSnippetsPackage(r.package)),
        (r.targetHosts = this.hostSnippetsRepository.getTargetHostsBySnippet(
          r,
          this.hostsRepository
        )),
        new qa(r)
      )),
      (this.convertHistoryCommand = (r) => new aw(r)),
      (this.convertHostChain = (r) => {
        const { hosts_chain: a, ssh_config: s, ...i } = r,
          o = a
            .map((u) => {
              const l = wU(u),
                c = this.hostsRepository.get(l);
              return c ? new Cv(c) : null;
            })
            .filter(xn);
        return new hy({ ...i, hosts_chain: o, sshConfig: wU(s) });
      }),
      (this.convertSshConfig = (r) => (
        (r.identity = this.resolveSshConfigIdentity(r)),
        (r.proxy = this.getProxy(r.proxycommand)),
        (r.startup_snippet = this.getSnippet(r.startup_snippet)),
        (r.host_chain = this.getHostChain(r)),
        (r.env_variables = Xs.parseEnvVariables(r.env_variables)),
        (r.charset = r.charset || null),
        new Xs(r)
      )),
      (this.convertTelnetConfig = (r) => (
        (r.identity = this.resolveTelnetConfigIdentity(r)),
        (r.startup_snippet = this.getSnippet(r.startup_snippet)),
        (r.charset = r.charset || null),
        new up(r)
      )),
      (this.convertKnownHost = (r) => new gl(r)),
      (this.convertSshCertificate = (r) =>
        new NT({ ...r, ssh_key_id: r.ssh_key })),
      (this.convertSshKey = (r) => {
        const a = eqe(
          this.sshCertificatesRepository
            .filterBasedOn("ssh_key", r)
            .map((s) => this.getSshCertificate(s.toJSON()))
            .filter(xn)
        );
        return new Ia({ ...r, certificates: a });
      }),
      (this.convertToSyncHistory = (r) => {
        const {
          local_id: a,
          command: s,
          timestamp: i,
          ...o
        } = this.convertToDBHistory(this.convertToHistory(r));
        return a == null || s == null || i == null
          ? null
          : { ...o, local_id: a, command: s, timestamp: i, status: r.status };
      }),
      (this.convertToHistory = (r) =>
        this.makeHistoryConverter().dbToEntity(r)),
      (this.convertToDBHistory = (r) =>
        this.makeHistoryConverter().entityToDB(r)),
      (this.makeHistoryConverter = () =>
        new sqe(
          {
            findHost: (r) => this.getHost(r),
            findSnippet: (r) => this.getSnippet(r),
            findSshKey: (r) => this.getSshKey(r),
            findIdentity: (r) => this.getIdentity(r),
          },
          {
            sshKey: this.sshKeysRepository,
            identity: this.identitiesRepository,
            host: this.hostsRepository,
          }
        )),
      (this.convertHardwareKey = (r) => new Cp(r)),
      (this.convertSnippetsPackage = (r) => {
        const a = new Mo(r);
        return (
          (a.snippets_count = this.snippetsRepository.filterBasedOn(
            "package",
            a
          ).length),
          a
        );
      }),
      (this.convertHostLatestActivity = (r) => (
        (r.host = this.getHost(r.host)),
        (r.latest_used_identity = this.getIdentity(r.latest_used_identity)),
        new O2(r)
      )),
      (this.convertProxy = (r) =>
        new ek({ ...r, identity: this.getIdentity(r.identity) })),
      (this.collections = e),
      (this.hostChainsRepository = new Lqe(e.host_chains)),
      (this.sshKeysRepository = new zqe(e.ssh_keys)),
      (this.hardwareKeyRepository = new ar(e.hardware_keys)),
      (this.identitiesRepository = new Dqe(e.identities, {
        sshKey: this.sshKeysRepository,
        hardwareKey: this.hardwareKeyRepository,
      })),
      (this.knownHostsRepository = new Fqe(e.known_hosts)),
      (this.snippetsPackagesRepository = new ar(e.snippets_packages)),
      (this.hostSnippetsRepository = new Mqe(e.host_snippets)),
      (this.snippetsRepository = new Vqe(e.snippets, {
        snippetPackage: this.snippetsPackagesRepository,
        hostSnippets: this.hostSnippetsRepository,
      })),
      (this.proxiesRepository = new Bqe(e.proxies, {
        identity: this.identitiesRepository,
      })),
      (this.sshConfigsRepository = new jqe(e.ssh_configs, {
        identity: this.identitiesRepository,
        proxy: this.proxiesRepository,
        snippet: this.snippetsRepository,
      })),
      (this.tagsRepository = new $qe(e.tags)),
      (this.tagHostsRepository = new qqe(e.taghosts, {
        tag: this.tagsRepository,
      })),
      (this.telnetConfigsRepository = new Jqe(e.telnet_configs, {
        identity: this.identitiesRepository,
        snippet: this.snippetsRepository,
      })),
      (this.groupsRepository = new Rqe(e.groups, {
        sshConfig: this.sshConfigsRepository,
        telnetConfig: this.telnetConfigsRepository,
      })),
      (this.hostsRepository = new kqe(e.hosts, {
        group: this.groupsRepository,
        sshConfig: this.sshConfigsRepository,
        telnetConfig: this.telnetConfigsRepository,
      })),
      (this.pfRulesRepository = new Kqe(e.pf_rules, {
        host: this.hostsRepository,
      })),
      (this.historyRepository = new dqe()),
      (this.inAppMessageRepository = new Gqe()),
      (this.sshConfigIdentitiesRepository = new pb(
        "ssh_config",
        e.ssh_config_identities
      )),
      (this.sharedSshConfigIdentitiesRepository = new pb(
        "ssh_config",
        e.ssh_config_identities_shared
      )),
      (this.telnetConfigIdentitiesRepository = new pb(
        "telnet_config",
        e.telnet_config_identities
      )),
      (this.sharedTelnetConfigIdentitiesRepository = new pb(
        "telnet_config",
        e.telnet_config_identities_shared
      )),
      (this.personalDeviceKeyPairRepository = new Uqe()),
      (this.multiKeyRepository = new ar(e.multi_keys)),
      (this.cloudConfigRepository = new Oqe(
        {
          aws: e.aws_configs,
          digitalOcean: e.digital_ocean_configs,
          azure: e.azure_configs,
        },
        {
          getGroupRepositoryID: (r) =>
            this.groupsRepository.getAsRepositoryID(r),
        }
      )),
      (this.sshCertificatesRepository = new Aqe(e.ssh_certificates)),
      (this.teamMemberAvatarRepository = new Xqe()),
      (this.teamMemberRepository = new Qqe()),
      (this.teamInviteRepository = new Yqe()),
      (this.historyCommandsRepository = new ar(e.history_commands)),
      (this.hostLatestActivitiesRepository = new xqe(e.host_latest_activities, {
        host: this.hostsRepository,
        identity: this.identitiesRepository,
      })),
      (this.syncApiDataManager = new dYe(this.collections, {
        host: this.hostsRepository,
        group: this.groupsRepository,
        identity: this.identitiesRepository,
        hostLatestActivity: this.hostLatestActivitiesRepository,
        cloudConfig: this.cloudConfigRepository,
      })),
      (this.localCollections = [
        e.host_latest_activities,
        e.aws_configs,
        e.hardware_keys,
        e.digital_ocean_configs,
        e.azure_configs,
        e.history_commands,
      ]),
      (this.cs = this.syncApiDataManager.managedCollections.concat(
        this.localCollections
      ));
  }
  async init() {
    await this.migrateCollections(void 0),
      await Promise.all(this.cs.map((e) => e.initializeStorage())),
      await this.historyRepository.init(),
      await this.inAppMessageRepository.init(),
      await this.personalDeviceKeyPairRepository.init(),
      await this.teamMemberAvatarRepository.init(),
      await this.teamMemberRepository.init(),
      await this.teamInviteRepository.init(),
      await this.migrateCollectionsAfterInit();
  }
  async initWithCryptor(e) {
    await this.migrateCollections(e),
      await Promise.all(
        this.cs.map(async (n) => {
          await n.initializeStorage(), n.setCryptor(e);
          const r = { do_not_encrypt: !0 };
          await n.fetch(r);
        })
      ),
      tt.info("init store success"),
      await this.historyRepository.init(),
      await this.historyRepository.setCryptor(e),
      await this.inAppMessageRepository.init(),
      await this.personalDeviceKeyPairRepository.init(),
      await this.teamMemberAvatarRepository.init(),
      await this.teamMemberRepository.init(),
      this.teamMemberRepository.setCryptor(e),
      await this.teamInviteRepository.init(),
      this.teamInviteRepository.setCryptor(e),
      await this.historyRepository.deactivateAll(),
      await this.cleanUpHistory(),
      await this.migrateCollectionsAfterInit();
  }
  async migrateCollections(e) {
    try {
      await Promise.all([
        this.collections.telnet_configs.migrate(),
        this.collections.ssh_configs.migrate(),
        this.collections.aws_configs.migrate(),
        this.collections.snippets_packages.migrate(e),
      ]);
    } catch (n) {
      throw (tt.exception("Store migrations have failed", n), n);
    }
  }
  async migrateCollectionsAfterInit() {
    await aue(this);
  }
  async collectGarbage() {
    await this.collections.taghosts.collectGarbage(),
      await this.collections.pf_rules.collectGarbage(),
      await this.collections.host_chains.collectGarbage(),
      await this.collections.host_snippets.collectGarbage(),
      await this.collections.ssh_certificates.collectGarbage(),
      await this.collections.ssh_config_identities.collectGarbage(),
      await this.collections.ssh_config_identities_shared.collectGarbage(),
      await this.collections.telnet_config_identities.collectGarbage(),
      await this.collections.telnet_config_identities_shared.collectGarbage();
  }
  async repairCollections() {
    const e = this.collections,
      n = [
        e.identities,
        e.proxies,
        e.ssh_configs,
        e.telnet_configs,
        e.groups,
        e.hosts,
        e.taghosts,
        e.host_snippets,
        e.pf_rules,
        e.port_knockings,
        e.ssh_config_identities,
        e.ssh_config_identities_shared,
        e.telnet_config_identities,
        e.telnet_config_identities_shared,
      ];
    await wqe(n, e),
      await Iqe(e.host_chains, e.ssh_configs, e.hosts),
      await Cqe(e.proxies);
  }
  async gotSyncData(...e) {
    return this.syncApiDataManager.saveSyncResponse(...e);
  }
  async buildPushData(...e) {
    return this.syncApiDataManager.generateSyncRequest(...e);
  }
  markAllSyncableCollectionsAsUpdateFailed(...e) {
    return this.syncApiDataManager.markAllAsUpdateFailed(...e);
  }
  markSyncKeyCollectionsAsUpdateFailed(...e) {
    return this.syncApiDataManager.markSyncKeyEntitiesAsUpdateFailed(...e);
  }
  hasSyncableEntities() {
    return this.syncApiDataManager.hasSyncableEntities();
  }
  hasUnsyncedEntities() {
    return this.syncApiDataManager.hasDataToSync();
  }
  async removeUnsyncedDeleteFailedData() {
    return this.syncApiDataManager.removeNotSyncedDeleteFailed();
  }
  async tryFixCollectionsAfterPermissionDowngrade(e) {
    await this.syncApiDataManager.deleteNewEntitiesWithoutViewAccess(e),
      await this.syncApiDataManager.moveNewViewOnlyEntitiesToRoot(e);
  }
  prepareSharedEntitiesForDowngrade(...e) {
    return this.syncApiDataManager.generateDataForTeamDowngrade(...e);
  }
  async clearSyncable() {
    return this.syncApiDataManager.clear();
  }
  getReEncryptedData(...e) {
    return this.syncApiDataManager.getReEncryptedData(...e);
  }
  async updateCryptor(e, n) {
    for (const r of this.cs) r.setCryptor(e, n);
    n && (await this.saveAll()),
      this.historyRepository.setCryptor(e),
      this.teamMemberRepository.setCryptor(e),
      this.teamInviteRepository.setCryptor(e);
  }
  async resaveUnsyncable() {
    await Promise.all(this.localCollections.map((e) => e.resaveCollection()));
  }
  async removeSharedLocalData() {
    const { collections: e } = this;
    try {
      await Promise.all(
        Object.values(e).map((n) => n.makeAllEntitiesPersonal())
      );
    } catch (n) {
      tt.exception("Cannot remove shared local data", n);
    }
  }
  async hardDeleteSharedData() {
    const e = (r) => r.get("is_shared"),
      n = (r) => r.hardDestroy(g3);
    await Promise.all(this.cs.map((r) => Promise.all(r.filter(e).map(n))));
  }
  async clearAll() {
    await Promise.all(this.cs.map((e) => e.clearData()));
    try {
      await this.clearAllDBHistories(),
        await this.inAppMessageRepository.deleteAll(),
        await this.personalDeviceKeyPairRepository.deleteAll(),
        await this.teamMemberAvatarRepository.deleteAll(),
        await this.teamMemberRepository.deleteAll(),
        await this.teamInviteRepository.deleteAll();
    } catch {}
  }
  saveAll() {
    return Promise.all(this.cs.map((e) => e.save()));
  }
  getNumberOfGroups() {
    return this.groupsRepository.length;
  }
  getGroups(e = !1) {
    return this.groupsRepository.getAll(e).map((n) =>
      this.convertGroup(n, {
        forceOriginalData: !1,
        visitedLocalIds: new Set(),
      })
    );
  }
  getGroup(e, n = !1) {
    return this._getGroup(e, {
      forceOriginalData: n,
      visitedLocalIds: new Set(),
    });
  }
  _getGroup(e, n) {
    const r = this.groupsRepository.get(e);
    return n.visitedLocalIds.has(r == null ? void 0 : r.local_id) ||
      (r == null ? void 0 : r.local_id) == null
      ? null
      : (n.visitedLocalIds.add(e.local_id), this.convertGroup(r, n));
  }
  async setGroup(e) {
    const { ssh_config: n, telnet_config: r, cloud_config: a } = e,
      s = this.getGroup(e);
    s && (await this.maybeRemoveOldConfigs(s, e)),
      n &&
        (Object.assign(n, Zo(e)),
        await this.setSshConfig(n, e.credentials_mode ?? null)),
      r &&
        (Object.assign(r, Zo(e)),
        await this.setTelnetConfig(r, e.credentials_mode ?? null)),
      await this.groupsRepository.save(e);
    const i = this.getGroup(e);
    a && i && (await this.cloudConfigRepository.saveForGroup(a, i));
  }
  async deleteGroup(e) {
    const { children_groups: n, children_hosts: r } =
      this.getGroupTreeRecursively(e);
    await this.deleteHosts(r),
      await Promise.all(n.map((a) => this._deleteGroup(a)));
  }
  async _deleteGroup(e) {
    const { ssh_config: n, telnet_config: r, cloud_config: a } = e;
    return (
      n && (await this.deleteSshConfig(n)),
      r && (await this.deleteTelnetConfig(r)),
      a && (await this.cloudConfigRepository.deleteByGroup(e)),
      this.groupsRepository.delete(e)
    );
  }
  getChildrenGroupsAndHostsForSharing(e) {
    const n = this.getGroupTreeRecursively(e);
    return (
      n.children_groups.forEach((r) => {
        r.ssh_config && this._fixupSshConfigForSharing(r.ssh_config),
          r.telnet_config && this._fixupTelnetConfigForSharing(r.telnet_config);
      }),
      n.children_hosts.forEach((r) => {
        r.ssh_config && this._fixupSshConfigForSharing(r.ssh_config),
          r.telnet_config && this._fixupTelnetConfigForSharing(r.telnet_config);
      }),
      n
    );
  }
  getGroupTreeRecursively(e, n = this.getGroups(), r = this.getHosts()) {
    const a = [...EP(e, n)];
    a.reverse();
    const s = [...TP(a, r)];
    return { children_groups: a, children_hosts: s };
  }
  _fixupSshConfigForSharing(e) {
    var r, a;
    const n =
      ((r = this.sharedSshConfigIdentitiesRepository.findByConfig(e)) == null
        ? void 0
        : r.identity) ||
      ((a = this.sshConfigIdentitiesRepository.findByConfig(e)) == null
        ? void 0
        : a.identity);
    e.identity = this.getIdentity(n);
  }
  _fixupTelnetConfigForSharing(e) {
    var r, a;
    const n =
      ((r = this.sharedTelnetConfigIdentitiesRepository.findByConfig(e)) == null
        ? void 0
        : r.identity) ||
      ((a = this.telnetConfigIdentitiesRepository.findByConfig(e)) == null
        ? void 0
        : a.identity);
    e.identity = this.getIdentity(n);
  }
  getNumberOfHosts() {
    return this.hostsRepository.length;
  }
  getHosts(e = !1) {
    return this.hostsRepository.getAll(e).map((n) =>
      this.convertHost(n, {
        forceOriginalData: !1,
        visitedGroupLocalIds: new Set(),
      })
    );
  }
  getHost(e, n = !1) {
    return this._getHost(e, {
      forceOriginalData: n,
      visitedGroupLocalIds: new Set(),
    });
  }
  _getHost(e, n) {
    const r = this.hostsRepository.get(e);
    return r ? this.convertHost(r, n) : null;
  }
  getHostByCloudId(e, n) {
    if (!e || !n) return null;
    const { children_hosts: r } = this.getGroupTreeRecursively(n);
    return r.find((a) => a.cloud_instance_id === e);
  }
  async maybeRemoveOldSshConfigIdentity(e, n) {
    e.local_id &&
      (n.identity ||
        (await this.sshConfigIdentitiesRepository.deleteByConfig(e),
        await this.sharedSshConfigIdentitiesRepository.deleteByConfig(e)),
      n.is_shared ||
        (await this.sharedSshConfigIdentitiesRepository.deleteByConfig(e)));
  }
  async setSshConfigIdentity(e, n, r) {
    if (!(n != null && n.identity)) return;
    const a = {
      ssh_config: this.sshConfigsRepository.getAsRepositoryID(n),
      identity: this.identitiesRepository.getAsRepositoryID(n.identity),
      is_shared: !1,
      encrypted_with: null,
    };
    if (n.is_shared && r === "credentials_sharing") {
      const s = this.sharedSshConfigIdentitiesRepository.findByConfig(e),
        i = { is_shared: !0, encrypted_with: n.encrypted_with };
      await this.sharedSshConfigIdentitiesRepository.set(s ?? hb(), {
        ...a,
        ...i,
      }),
        await this.sshConfigIdentitiesRepository.deleteByConfig(n);
    } else {
      const s = this.sshConfigIdentitiesRepository.findByConfig(e);
      await this.sshConfigIdentitiesRepository.set(s ?? hb(), a),
        await this.sharedSshConfigIdentitiesRepository.deleteByConfig(n);
    }
  }
  async maybeRemoveOldTelnetConfigIdentity(e, n) {
    e.local_id &&
      (n.identity ||
        (await this.telnetConfigIdentitiesRepository.deleteByConfig(e),
        await this.sharedTelnetConfigIdentitiesRepository.deleteByConfig(e)),
      n.is_shared ||
        (await this.sharedTelnetConfigIdentitiesRepository.deleteByConfig(e)));
  }
  async setTelnetConfigIdentity(e, n, r) {
    if (!(n != null && n.identity)) return;
    const a = {
      telnet_config: this.telnetConfigsRepository.getAsRepositoryID(n),
      identity: this.identitiesRepository.getAsRepositoryID(n.identity),
      is_shared: !1,
      encrypted_with: null,
    };
    if (n.is_shared && r === "credentials_sharing") {
      const s = this.sharedTelnetConfigIdentitiesRepository.findByConfig(e);
      await this.sharedTelnetConfigIdentitiesRepository.set(s ?? hb(), {
        ...a,
        is_shared: !0,
        encrypted_with: n.encrypted_with,
      }),
        await this.telnetConfigIdentitiesRepository.deleteByConfig(n);
    } else {
      const s = this.telnetConfigIdentitiesRepository.findByConfig(e);
      await this.telnetConfigIdentitiesRepository.set(s ?? hb(), a),
        await this.sharedTelnetConfigIdentitiesRepository.deleteByConfig(n);
    }
  }
  async setHost(e) {
    const { ssh_config: n, telnet_config: r } = e,
      a = this.getHost(e);
    return (
      a && (await this.maybeRemoveOldConfigs(a, e)),
      n &&
        (Object.assign(n, Zo(e)),
        await this.setSshConfig(n, e.credentials_mode ?? null)),
      r &&
        (Object.assign(r, Zo(e)),
        await this.setTelnetConfig(r, e.credentials_mode ?? null)),
      await this.hostsRepository.save(e),
      this.tagHostsRepository.saveForHost(e)
    );
  }
  async deleteHosts(e) {
    await Promise.all([
      this.tagHostsRepository.deleteAllBasedOn("host", ...e),
      this.hostSnippetsRepository.deleteAllBasedOn("host", ...e),
      this.pfRulesRepository.deleteAllBasedOn("host", ...e),
      this.hostLatestActivitiesRepository.deleteAllBasedOn("host", ...e),
      this.hostChainsRepository.deleteHostFromChains(...e.map(Hw)),
    ]);
    const n = e.map((a) => a.ssh_config).filter(xn);
    await this.deleteSshConfig(...n);
    const r = e.map((a) => a.telnet_config).filter(xn);
    await this.deleteTelnetConfig(...r),
      await this.hostsRepository.deleteMany(e);
  }
  async deleteHost(e) {
    await this.deleteHosts([e]);
  }
  getNumberOfVisibleIdentities() {
    return this.identitiesRepository.countOf((e) => e.is_visible);
  }
  getVisibleIdentities(e = !1) {
    return this.identitiesRepository
      .getAll(e)
      .filter((n) => n.is_visible === !0)
      .map(this.convertIdentity);
  }
  getAllIdentities() {
    return this.identitiesRepository.getAll().map(this.convertIdentity);
  }
  getIdentity(e) {
    const n = this.identitiesRepository.get(e);
    return n ? this.convertIdentity(n) : null;
  }
  async setIdentity(e) {
    return this.identitiesRepository.save(e);
  }
  async recreateIdentityAndReplaceInLinks(e) {
    if (!!!this.getIdentity(e)) return null;
    const r = [
        ...this.hostsRepository.getAll(),
        ...this.groupsRepository.getAll(),
      ].map((u) => ({
        ssh_config: u.ssh_config,
        telnet_config: u.telnet_config,
        credentials_mode: u.credentials_mode,
      })),
      a = this.getSshConfigs().filter((u) => {
        var l;
        return ((l = u.identity) == null ? void 0 : l.local_id) === e.local_id;
      }),
      s = this.getTelnetConfigs().filter((u) => {
        var l;
        return ((l = u.identity) == null ? void 0 : l.local_id) === e.local_id;
      }),
      i = this.proxiesRepository
        .filterBasedOn("identity", e)
        .map((u) => this.getProxy(u.toJSON()))
        .filter(xn),
      o = e.clone().prepareForDuplicate();
    e.is_visible || (await this.unsetIdentityRelations(e)),
      await Promise.all([this.setIdentity(o), this.deleteIdentity(e)]);
    for (const u of a) {
      const l = r.find((c) => {
        var d;
        return (
          ((d = c.ssh_config) == null ? void 0 : d.local_id) === u.local_id
        );
      });
      l != null &&
        (await this.setSshConfig(u.clone({ identity: o }), l.credentials_mode));
    }
    for (const u of s) {
      const l = r.find((c) => {
        var d;
        return (
          ((d = c.telnet_config) == null ? void 0 : d.local_id) === u.local_id
        );
      });
      l != null &&
        (await this.setTelnetConfig(
          u.clone({ identity: o }),
          l.credentials_mode
        ));
    }
    for (const u of i) await this.setProxy(u.clone({ identity: o }));
    return o;
  }
  async unsetIdentityRelations(...e) {
    await Promise.all([
      this.sshConfigsRepository.unsetDependencyBasedOn("identity", ...e),
      this.telnetConfigsRepository.unsetDependencyBasedOn("identity", ...e),
      this.proxiesRepository.unsetDependencyBasedOn("identity", ...e),
      this.hostLatestActivitiesRepository.unsetDependencyBasedOn(
        "latest_used_identity",
        ...e
      ),
    ]);
    const n = e.filter((r) => r.local_id);
    await Promise.all([
      this.sshConfigIdentitiesRepository.deleteByIdentity(...n),
      this.telnetConfigIdentitiesRepository.deleteByIdentity(...n),
      this.sharedSshConfigIdentitiesRepository.deleteByIdentity(...n),
      this.sharedTelnetConfigIdentitiesRepository.deleteByIdentity(...n),
    ]);
  }
  async deleteIdentity(...e) {
    const n = e.filter((r) => r.is_visible);
    await this.unsetIdentityRelations(...n),
      await this.identitiesRepository.deleteMany(e);
  }
  getNumberOfPortForwardingRules() {
    return this.pfRulesRepository.length;
  }
  getPortForwardingRules(e = !1) {
    return this.pfRulesRepository
      .getAll(e)
      .map(this.convertPortForwardingRule)
      .filter(xn);
  }
  getPortForwardingRule(e) {
    const n = this.pfRulesRepository.get(e);
    return n ? this.convertPortForwardingRule(n) : null;
  }
  async setPortForwardingRule(e) {
    return this.pfRulesRepository.save(e);
  }
  async deletePortForwardingRule(e) {
    return this.pfRulesRepository.delete(e);
  }
  getNumberOfSnippets() {
    return this.snippetsRepository.length;
  }
  getSnippets(e = !1) {
    return this.snippetsRepository.getAll(e).map(this.convertSnippet);
  }
  getSnippet(e) {
    const n = this.snippetsRepository.get(e);
    return n ? this.convertSnippet(n) : null;
  }
  async setSnippet(e) {
    return this.snippetsRepository.save(e);
  }
  async deleteSnippet(e) {
    return (
      await this.sshConfigsRepository.unsetDependencyBasedOn(
        "startup_snippet",
        e
      ),
      await this.telnetConfigsRepository.unsetDependencyBasedOn(
        "startup_snippet",
        e
      ),
      await this.hostSnippetsRepository.deleteAllBasedOn("snippet", e),
      this.snippetsRepository.delete(e)
    );
  }
  getNumberOfHistoryCommands() {
    return this.historyCommandsRepository.length;
  }
  getHistoryCommands(e = !1) {
    return this.historyCommandsRepository
      .getAll(e)
      .map(this.convertHistoryCommand);
  }
  async setHistoryCommands(e) {
    await this.historyCommandsRepository.bulkSetUnsyncable(
      e.map((n) => ({
        local_id: n.local_id,
        script: n.script,
        rating: n.rating,
      }))
    );
  }
  async deleteHistoryCommands() {
    return this.historyCommandsRepository.clear();
  }
  getHostChain(e) {
    const n = e.id || `sshconfig_set/${e.local_id || 0}`,
      r = this.hostChainsRepository.getBySshConfig(n);
    return r ? this.convertHostChain(r) : null;
  }
  fetchHostChain(e) {
    const n = this.hostChainsRepository.get(e);
    return n ? this.convertHostChain(n) : null;
  }
  resolveSshConfigIdentity(e) {
    var s, i;
    const n = this.lookupLinkedEntityBySshConfig(e),
      a =
        (n == null ? void 0 : n.is_shared) &&
        (n == null ? void 0 : n.credentials_mode) === "credentials_sharing"
          ? (s = this.sharedSshConfigIdentitiesRepository.findByConfig(e)) ==
            null
            ? void 0
            : s.identity
          : (i = this.sshConfigIdentitiesRepository.findByConfig(e)) == null
          ? void 0
          : i.identity;
    return this.getIdentity(a);
  }
  lookupLinkedEntityBySshConfig(e) {
    var r, a;
    const n =
      (r = this.collections.hosts.findBySshConfig(e)) == null
        ? void 0
        : r.toJSON();
    return (
      n ??
      ((a = this.collections.groups.findBySshConfig(e)) == null
        ? void 0
        : a.toJSON())
    );
  }
  resolveTelnetConfigIdentity(e) {
    var s, i;
    const n = this.lookupLinkedEntityByTelnetConfig(e),
      a =
        (n == null ? void 0 : n.is_shared) &&
        (n == null ? void 0 : n.credentials_mode) === "credentials_sharing"
          ? (s = this.sharedTelnetConfigIdentitiesRepository.findByConfig(e)) ==
            null
            ? void 0
            : s.identity
          : (i = this.telnetConfigIdentitiesRepository.findByConfig(e)) == null
          ? void 0
          : i.identity;
    return this.getIdentity(a);
  }
  lookupLinkedEntityByTelnetConfig(e) {
    var r, a;
    const n =
      (r = this.collections.hosts.findByTelnetConfig(e)) == null
        ? void 0
        : r.toJSON();
    return (
      n ??
      ((a = this.collections.groups.findByTelnetConfig(e)) == null
        ? void 0
        : a.toJSON())
    );
  }
  getSshConfigs() {
    return this.sshConfigsRepository.getAll().map(this.convertSshConfig);
  }
  getSshConfig(e) {
    const n = this.sshConfigsRepository.get(e);
    return n ? this.convertSshConfig(n) : null;
  }
  async setSshConfig(e, n) {
    const { identity: r, proxy: a, host_chain: s } = e,
      i = this.getSshConfig(e);
    if (i) {
      await this.maybeRemoveOldSshConfigIdentity(i, e),
        await this.maybeRemoveOldInvisibleIdentity(i, e);
      const o = i.proxy;
      o && OA(o, a) && (await this.deleteProxy(o));
      const u = i.host_chain;
      u &&
        (s
          ? (s.local_id = u.local_id)
          : await this.hostChainsRepository.delete(u));
    }
    a && (Object.assign(a, Zo(e)), await this.setProxy(a)),
      r &&
        !r.is_visible &&
        (n && (r.is_shared = n === "credentials_sharing"),
        (r.encrypted_with = r.is_shared ? e.encrypted_with : null),
        await this.setIdentity(r)),
      Xs.areSame(i, e) || (await this.sshConfigsRepository.save(e)),
      await this.setSshConfigIdentity(i, e, n),
      s &&
        (Object.assign(s, Zo(e)),
        await this.hostChainsRepository.saveChain(
          new hy({ ...s, sshConfig: e })
        ));
  }
  async deleteSshConfig(...e) {
    const n = e.some((i) => i.local_id == null);
    rn(!n);
    const r = e.map((i) => i.id || `sshconfig_set/${i.local_id}`);
    await this.hostChainsRepository.deleteAllWithProperty("ssh_config", ...r),
      await this.sshConfigIdentitiesRepository.deleteByConfig(...e),
      await this.sharedSshConfigIdentitiesRepository.deleteByConfig(...e);
    const a = e
      .map((i) => i.identity)
      .filter((i) => i && !i.is_visible)
      .filter(xn);
    await this.deleteIdentity(...a);
    const s = e.map((i) => i.proxy).filter(xn);
    await this.deleteProxy(...s), await this.sshConfigsRepository.deleteMany(e);
  }
  getTelnetConfigs() {
    return this.telnetConfigsRepository.getAll().map(this.convertTelnetConfig);
  }
  getTelnetConfig(e) {
    const n = this.telnetConfigsRepository.get(e);
    return n ? this.convertTelnetConfig(n) : null;
  }
  async setTelnetConfig(e, n) {
    const { identity: r } = e,
      a = this.getTelnetConfig(e);
    a &&
      (await this.maybeRemoveOldTelnetConfigIdentity(a, e),
      await this.maybeRemoveOldInvisibleIdentity(a, e)),
      r &&
        !r.is_visible &&
        (n && (r.is_shared = n === "credentials_sharing"),
        (r.encrypted_with = r.is_shared ? e.encrypted_with : null),
        await this.setIdentity(r)),
      up.areSame(a, e) || (await this.telnetConfigsRepository.save(e)),
      await this.setTelnetConfigIdentity(a, e, n);
  }
  async deleteTelnetConfig(...e) {
    const n = e.filter((a) => a.local_id);
    await this.telnetConfigIdentitiesRepository.deleteByConfig(...n),
      await this.sharedTelnetConfigIdentitiesRepository.deleteByConfig(...n);
    const r = e
      .map((a) => a.identity)
      .filter((a) => a && !a.is_visible)
      .filter(xn);
    await this.deleteIdentity(...r),
      await this.telnetConfigsRepository.deleteMany(e);
  }
  getNumberOfKnownHosts() {
    return this.knownHostsRepository.length;
  }
  getKnownHosts(e = !1) {
    return this.knownHostsRepository.getAll(e).map(this.convertKnownHost);
  }
  async setKnownHost(e) {
    return this.knownHostsRepository.save(e);
  }
  async deleteKnownHost(e) {
    return this.knownHostsRepository.delete(e);
  }
  getNumberOfSshCertificates() {
    return this.sshCertificatesRepository.length;
  }
  getSshCertificates(e = !1) {
    return this.sshCertificatesRepository
      .getAll(e)
      .map(this.convertSshCertificate);
  }
  getSshCertificate(e) {
    const n = this.sshCertificatesRepository.get(e);
    return n ? this.convertSshCertificate(n) : null;
  }
  async setSshCertificate(e) {
    return this.sshCertificatesRepository.save(e);
  }
  getNumberOfSshKeys() {
    return this.sshKeysRepository.length;
  }
  getSshKeys(e = !1) {
    return this.sshKeysRepository.getAll(e).map(this.convertSshKey);
  }
  getSshKey(e) {
    const n = this.sshKeysRepository.get(e);
    return n ? this.convertSshKey(n) : null;
  }
  async setSshKey(e) {
    const { certificates: n } = e,
      a = this.sshCertificatesRepository
        .filterBasedOn("ssh_key", e)
        .map((i) => this.getSshCertificate(i.toJSON()))
        .filter(xn)
        .filter((i) => !n.some((o) => o.local_id === i.local_id));
    await this.sshKeysRepository.save(e);
    const s = this.sshKeysRepository.getAsRepositoryID(e);
    await Promise.all(
      n.map((i) =>
        this.setSshCertificate(
          new NT({
            ...i,
            ssh_key_id: s,
            is_shared: e.is_shared,
            encrypted_with: e.encrypted_with,
          })
        )
      )
    ),
      await this.sshCertificatesRepository.deleteMany(a);
  }
  async recreateSshKeyAndReplaceInLink(e) {
    if (!!!this.getSshKey(e)) return null;
    const r = this.identitiesRepository
        .filterBasedOn("ssh_key", e)
        .map((s) => this.getIdentity(s.toJSON()))
        .filter(xn),
      a = e.clone();
    return (
      a.prepareForDuplicate(),
      await Promise.all([this.setSshKey(a), this.deleteSshKey(e)]),
      await Promise.all(
        r.map((s) => this.setIdentity(s.clone({ ssh_key: a })))
      ),
      a
    );
  }
  async deleteSshKey(e) {
    return (
      await this.identitiesRepository.unsetDependencyBasedOn("ssh_key", e),
      await this.sshCertificatesRepository.deleteAllBasedOn("ssh_key", e),
      this.sshKeysRepository.delete(e)
    );
  }
  getTags(...e) {
    return this.tagsRepository.getUniqueTags(...e);
  }
  async updateTag(...e) {
    return this.tagsRepository.upsertBy(...e);
  }
  async deleteTag(...e) {
    return this.tagsRepository.deleteBy(...e);
  }
  getNumberOfHistories() {
    return this.historyRepository.length;
  }
  convertSessionLogListToSet(e) {
    return new Set(e.flatMap((n) => (n != null ? [n.name] : [])));
  }
  async cleanUpHistory(e) {
    const { toRemove: r, toSkip: a } = await this.historyRepository.cleanup(
      5,
      e
    );
    return this.sessionLogCleaner.cleanSessionLogs({
      toRemove: this.convertSessionLogListToSet(r),
      toSkip: this.convertSessionLogListToSet(a),
    });
  }
  async cleanUpAllSessionLogs() {
    const e = await this.historyRepository.getSessionLogsOfActiveHistory();
    return this.sessionLogCleaner.cleanSessionLogs(
      { toRemove: new Set(), toSkip: this.convertSessionLogListToSet(e) },
      0
    );
  }
  async validateSessionLogFileExists(e) {
    return this.sessionLogCleaner.validateSessionLogFileExists(e);
  }
  async setHistory(e) {
    const n = await this.historyRepository.add(this.convertToDBHistory(e));
    return new hp({ ...e, local_id: n });
  }
  async getDBHistories() {
    return (await this.historyRepository.getAll())
      .map(this.convertToSyncHistory)
      .filter(xn);
  }
  async getUnsyncedDBHistories() {
    const { created: e, deleted: n } =
      await this.historyRepository.getUnsynced();
    return {
      created: e.map(this.convertToSyncHistory).filter(xn),
      deleted: n.map(this.convertToSyncHistory).filter(xn),
    };
  }
  async getHistoryEntities() {
    return (await this.historyRepository.getAll()).map(this.convertToHistory);
  }
  async getOverLimitedHistoryEntities() {
    return (await this.historyRepository.getOverLimited()).map(
      this.convertToHistory
    );
  }
  async bulkAddHistoryEntities(e) {
    return this.historyRepository.bulkAdd(e.map(this.convertToDBHistory));
  }
  async updateHistoryEntity(e) {
    return this.historyRepository.update(this.convertToDBHistory(e));
  }
  async deleteHistoryEntity(e) {
    await this.historyRepository.delete(e.local_id);
    const n = await this.historyRepository.getSessionLogsOfActiveHistory();
    return this.sessionLogCleaner.cleanSessionLogs({
      toRemove: this.convertSessionLogListToSet([e.session_log_data]),
      toSkip: this.convertSessionLogListToSet(n),
    });
  }
  async bulkDeleteHistoryEntities(e) {
    const n = e.map((r) => r.local_id);
    return this.historyRepository.bulkDelete(n);
  }
  async gotSyncedDBHistories(...e) {
    return this.historyRepository.gotSynced(...e);
  }
  async updateSyncedDBHistories(...e) {
    return this.historyRepository.updateSynced(...e);
  }
  async clearAllDBHistories() {
    return (
      await this.historyRepository.clearAll(), this.cleanUpAllSessionLogs()
    );
  }
  async clearAllInactiveHistories() {
    return this.historyRepository.deleteAll();
  }
  async setInAppMessage(e) {
    return this.inAppMessageRepository.set(e);
  }
  async getAllInAppMessages() {
    return this.inAppMessageRepository.getAll();
  }
  async deleteInAppMessage(e) {
    await this.inAppMessageRepository.delete(e);
  }
  async resetPersonalDeviceKeyPair(e) {
    return (
      await this.personalDeviceKeyPairRepository.deleteAll(),
      this.personalDeviceKeyPairRepository.set(e)
    );
  }
  async getAllPersonalDeviceKeyPair() {
    return this.personalDeviceKeyPairRepository.getAll();
  }
  getAllHardwareKeys(e = !1) {
    return this.hardwareKeyRepository.getAll(e).map(this.convertHardwareKey);
  }
  getHardwareKey(e) {
    const n = this.hardwareKeyRepository.get(e);
    return n ? this.convertHardwareKey(n) : null;
  }
  getAllSepKeys(e = !1) {
    return this.getAllHardwareKeys(e);
  }
  async setHardwareKey(e) {
    return this.hardwareKeyRepository.set(e, {
      label: e.label,
      public_key: e.public_key,
      storage: e.storage,
      credentialId: e.credentialId,
    });
  }
  getNumberOfSepKeys() {
    return this.hardwareKeyRepository.countOf((e) => e.storage === G0);
  }
  getNumberOfWindowsHelloKeys() {
    return this.hardwareKeyRepository.countOf((e) => e.storage === Yz);
  }
  async deleteHardwareKeys(e) {
    return (
      await this.identitiesRepository.unsetDependencyBasedOn(
        "hardware_key",
        ...e
      ),
      this.hardwareKeyRepository.deleteMany(e)
    );
  }
  async setTeamMultiKey(e) {
    return this.multiKeyRepository.set(e, { username: e.username });
  }
  getAllTeamMultiKey(e = !1) {
    return this.multiKeyRepository.getAll(e).map((n) => new S9e(n));
  }
  getNumberOfSnippetsPackages() {
    return this.snippetsPackagesRepository.length;
  }
  getSnippetsPackage(e) {
    const n = this.snippetsPackagesRepository.get(e);
    return n ? this.convertSnippetsPackage(n) : null;
  }
  getSnippetsPackages(e = !1) {
    return this.snippetsPackagesRepository
      .getAll(e)
      .map(this.convertSnippetsPackage);
  }
  async setSnippetsPackage(e) {
    return this.snippetsPackagesRepository.set(e, {
      label: e.label,
      is_shared: e.is_shared,
      encrypted_with: e.encrypted_with,
      analytics_id: e.analytics_id,
    });
  }
  async deleteSnippetsPackage(e) {
    return (
      await this.snippetsRepository.unsetDependencyBasedOn(
        "snippets_package",
        e
      ),
      this.snippetsPackagesRepository.delete(e)
    );
  }
  getChildrenSnippets(e) {
    return this.snippetsRepository.filterBasedOn("package", e).map((n) => {
      var r;
      return this.convertSnippet(
        (r = n.toJSON) == null ? void 0 : r.call(n, { do_not_encrypt: !1 })
      );
    });
  }
  async setTeamMemberAvatar(e) {
    return this.teamMemberAvatarRepository.set(e);
  }
  async getAllTeamMemberAvatars() {
    return this.teamMemberAvatarRepository.getAll();
  }
  async setTeamMember(e) {
    return this.teamMemberRepository.set(e);
  }
  async getAllTeamMembers() {
    return this.teamMemberRepository.getAll();
  }
  async setTeamInvite(e) {
    return this.teamInviteRepository.set(e);
  }
  async getAllTeamInvites() {
    return this.teamInviteRepository.getAll();
  }
  getHostLatestActivities(e = !1) {
    return this.hostLatestActivitiesRepository
      .getAll(e)
      .map(this.convertHostLatestActivity);
  }
  async setHostLatestActivity(e) {
    return this.hostLatestActivitiesRepository.save(e);
  }
  async deleteHostLatestActivity(e) {
    return this.hostLatestActivitiesRepository.delete(e);
  }
  getProxies() {
    return this.proxiesRepository.getAll().map(this.convertProxy);
  }
  getProxy(e) {
    const n = this.proxiesRepository.get(e);
    return n ? this.convertProxy(n) : null;
  }
  async setProxy(e) {
    const { identity: n } = e,
      r = this.getProxy(e);
    r && (await this.maybeRemoveOldInvisibleIdentity(r, e)),
      n &&
        !n.is_visible &&
        (Object.assign(n, Zo(e)), await this.setIdentity(n)),
      await this.proxiesRepository.save(e);
  }
  async deleteProxy(...e) {
    const n = e
      .map(({ identity: r }) => r)
      .filter((r) => r && !r.is_visible)
      .filter(xn);
    await this.deleteIdentity(...n), await this.proxiesRepository.deleteMany(e);
  }
  async maybeRemoveOldConfigs(e, n) {
    const r = e.ssh_config,
      a = n.ssh_config;
    r && OA(r, a) && (await this.deleteSshConfig(r));
    const s = e.telnet_config,
      i = n.telnet_config;
    s && OA(s, i) && (await this.deleteTelnetConfig(s)),
      e instanceof Fs &&
        n instanceof Fs &&
        (await this.cloudConfigRepository.removeIfReplaced(
          e.cloud_config,
          n.cloud_config
        ));
  }
  async maybeRemoveOldInvisibleIdentity(e, n) {
    const r = e.identity,
      a = n.identity;
    r && mYe(r, a) && (await this.deleteIdentity(r));
  }
  async resolveDuplicates() {
    const e = this.getHosts(),
      n = y9e(e);
    if (n.length !== 0) {
      const r = new Fs({ label: "Potential duplicates" });
      await this.setGroup(r);
      for (const a of n) (a.group = r), await this.setHost(a);
    }
  }
  async importEntities(e, n, r = []) {
    const a = new Map(
        this.getSshKeys()
          .filter((l) => !l.is_shared)
          .map((l) => [l.private_key.trim(), l])
      ),
      s = [],
      i = (l) => (s.push(l), l);
    return {
      ...(await new Sqe(a, {
        saveIdentity: (l) => this.setIdentity(i(l)),
        saveHost: (l) => this.setHost(i(l)),
        saveSshKey: (l) => this.setSshKey(i(l)),
        savePortForwardingRule: (l) => this.setPortForwardingRule(i(l)),
        saveHostChain: (l, c) =>
          this.hostChainsRepository.saveChain(new hy({ ...l, sshConfig: c })),
        saveGroup: (l) => this.setGroup(i(l)),
        saveSnippet: (l) => this.setSnippet(i(l)),
        saveKnownHost: (l) => this.setKnownHost(i(l)),
      }).importEntities(e, n, r)),
      entities: s,
    };
  }
}
const hb = () => ({ id: null, local_id: null });
function wU(t) {
  return typeof t == "number"
    ? { local_id: null, id: t }
    : { local_id: Number(t.split("/").pop()), id: null };
}
function OA(t, e) {
  return !e || e.local_id !== t.local_id;
}
function mYe(t, e) {
  return !t.is_visible && (!e || e.is_visible || e.local_id !== t.local_id);
}
function SYe(t, e) {
  return new Promise((n) => t.once(e, n));
}
function cue(t) {
  return SYe(t, "sync");
}
class PU {
  constructor(e) {
    this.syncOptions = e;
  }
  encrypt(e) {
    const { version: n, shareConfig: r } = IU(this.syncOptions);
    return n === "v5"
      ? this.syncOptions.cryptor.encryptV5(e, r)
      : this.syncOptions.cryptor.encryptV3(e, r);
  }
  decrypt(e) {
    const { shareConfig: n, version: r } = IU(this.syncOptions);
    return r === "v5"
      ? this.syncOptions.cryptor.decryptV5(e, n)
      : this.syncOptions.cryptor.decryptV3(e, n);
  }
}
const IU = (t) => {
  const { personalEncryptionSchema: e } = t;
  return { shareConfig: { is_shared: !1, encrypted_with: null }, version: e };
};
class yYe {
  constructor(e) {
    this.api = e;
  }
  async clear() {
    return this.api.clearHistory();
  }
  async pull(e, n = 10, r = 0) {
    const a = await this.api.getHistory({ offset: r, limit: n });
    return {
      histories: this.decrypt(e, a.objects).map(this.convertToDBHistory),
      meta: a.meta,
    };
  }
  encryptForSync(e, n) {
    return this.encrypt(e, n.map(this.convertToRemoteHistory));
  }
  async sync(e, n) {
    const { created: r, deleted: a } = n,
      s = this.encryptForSync(e, r),
      i = a.map((d) => d.id),
      o = await this.api.syncHistory({ objects: s, deleted: i }),
      u = a.filter((d) => d.id && o.deleted.includes(d.id));
    return {
      created: this.decrypt(e, o.objects).map(this.convertToDBHistory),
      deleted: u,
    };
  }
  convertToRemoteHistory(e) {
    var n;
    return {
      id: e.id,
      success: !e.command.error_message,
      local_id: e.local_id,
      timestamp: e.timestamp,
      command: e.command,
      updated_at: e.updated_at,
      created_at: e.created_at,
      device: (n = e.device) == null ? void 0 : n.id,
      set_name: "historyconnection_set",
    };
  }
  convertToDBHistory(e) {
    return {
      ...e,
      ...Sa(e.command.host_id != null, { host: { id: e.command.host_id } }),
      ...Sa(e.command.key_id != null, { ssh_key: { id: e.command.key_id } }),
      ...Sa(e.command.visible_identity_id != null, {
        identity: { id: e.command.visible_identity_id },
      }),
      connected_at: Pc(e.timestamp).getTime(),
      active: !1,
    };
  }
  encrypt(e, n) {
    const r = new PU(e);
    return n.map((a) => {
      const s = JSON.stringify(a.command),
        i = r.encrypt(s);
      if (typeof i != "string")
        throw new Error("Can not encrypt remote history item");
      return { ...a, command: i };
    });
  }
  decrypt(e, n) {
    const r = new PU(e);
    return n.map((a) => {
      const s = r.decrypt(a.command);
      if (typeof s != "string")
        throw new Error("Can not decrypt remote history item");
      const i = JSON.parse(s);
      return { ...a, command: i };
    });
  }
}
class gYe extends Us {
  constructor() {
    super(...arguments), (this.name = "DiscardSync");
  }
}
class vYe extends Us {
  constructor(e) {
    super(`Sync was aborted due to reason: ${e ?? "unknown"}`),
      (this.name = "SyncAbortError");
  }
}
class _Ye {
  constructor(e, n, r, a) {
    (this.abortController = null),
      (this.api = e),
      (this.settings = n),
      (this.store = r),
      (this.history = new yYe(this.api)),
      (this.keyManager = a);
  }
  abort(e) {
    var n;
    (n = this.abortController) == null || n.abort(e);
  }
  get abortSignal() {
    if ((rn(this.abortController != null), this.abortController.signal.aborted))
      throw new vYe(this.abortController.signal.reason);
    return this.abortController.signal;
  }
  newSyncStarted() {
    var e;
    (e = this.abortController) == null || e.abort(),
      (this.abortController = new AbortController());
  }
  async isSharingPossible(e) {
    const { isOwner: n } = this.settings.getDeprecatedUserTeamStatus();
    return n == null
      ? !0
      : (await this.keyManager.getKeyRingStatus(e, { canManageTeam: n }))
          .status !== "vaults setup incomplete";
  }
  async syncHistory(e, n) {
    const r = await this.getVaultRoles(e);
    if (
      !(
        r.status === "legacy bulk account" ||
        r.status === "vaults setup incomplete"
      )
    )
      return this._syncHistory(
        await this.buildSyncOptions(
          e,
          r.status === "has vaults" ? r.roles : null
        ),
        n
      );
  }
  async pullHistory(e, n) {
    const r = await this.getVaultRoles(e);
    if (
      (rn(r.status !== "legacy bulk account"),
      r.status === "vaults setup incomplete")
    )
      throw r.reason;
    return this._pullHistory(
      await this.buildSyncOptions(
        e,
        r.status === "has vaults" ? r.roles : null
      ),
      n
    );
  }
  async _syncHistory(e, n) {
    return await this._pushHistory(e), this._pullHistory(e, n);
  }
  async _pushHistory(e) {
    const { created: n, deleted: r } =
      await this.store.getUnsyncedDBHistories();
    if (n.length + r.length > 0) {
      const a = await this.history.sync(e, { created: n, deleted: r });
      await this.store.gotSyncedDBHistories(a);
    }
  }
  async _pullHistory(e, n) {
    const { histories: r, meta: a } = await this.history.pull(e, n);
    return await this.store.updateSyncedDBHistories(r), a;
  }
  async clearHistory() {
    return this.history.clear();
  }
  async getReEncryptedHistoryData(e) {
    const n = await this.store.getDBHistories();
    return this.history
      .encryptForSync(e, n)
      .map((r) => {
        const { id: a, ...s } = r;
        return a == null ? null : { ...s, id: a };
      })
      .filter(xn);
  }
  async sync(e, n) {
    this.newSyncStarted();
    const r = e.account.user_id,
      { team: a } = e;
    if (r == null) return;
    const i = await this.keyManager.getKeyRingStatus(r, CU(a));
    if (i.status === "vaults setup incomplete") return;
    const o = this.settings.isSynchingKeys(),
      u = await this.syncUserSettings(this.api, n),
      l = u != null ? { settingsChanges: u } : void 0,
      c = i.status === "has vaults" ? i.vaults.mapValues((I) => I.role) : null,
      d = await this.buildSyncOptions(e, c);
    if (this.settings.getDeprecatedLastSync() == null)
      return (
        await this.firstSync(d), Ft.setDeprecatedLastSyncVersion(IE.last), l
      );
    const m = Ft.getDeprecatedLastSyncVersion(),
      y = !m || m < IE.last;
    return (
      o === !1 &&
        d.syncKeysAndIdentities === !0 &&
        (await this.store.markSyncKeyCollectionsAsUpdateFailed({
          vaultKeyIds: new Set((c == null ? void 0 : c.keys()) ?? []),
        })),
      y
        ? (await this.syncWithNewSyncVersion(d),
          Ft.setDeprecatedLastSyncVersion(IE.last))
        : await this.syncUnsafe(d),
      l
    );
  }
  async fullSync(e, n) {
    if (await this.isSharingPossible(e))
      return this.newSyncStarted(), this.syncUnsafe(n);
  }
  async syncUnsafe(e) {
    try {
      const n = await this.push(e);
      return await this.gotBulkData(n, e), n;
    } catch (n) {
      if (n.status !== 400) throw n;
      let r = await this.pull();
      return (
        await this.gotBulkData(r, e),
        await this.store.repairCollections(),
        (r = await this.push(e)),
        await this.gotBulkData(r, e),
        r
      );
    }
  }
  async syncWithNewSyncVersion(e) {
    await this.syncUnsafe(e);
    const n = await this.pull();
    return await this.gotBulkData(n, e), n;
  }
  async firstSync(e) {
    const n = await this.pull();
    return (
      this.store.resaveUnsyncable(),
      await this.gotBulkData(n, e),
      await this.syncUnsafe(e),
      n
    );
  }
  async pull(e) {
    return this.api.getDataSync(e, this.abortSignal);
  }
  async push(e) {
    try {
      await this.store.tryFixCollectionsAfterPermissionDowngrade({
        vaultRoles: e.vaultRoles,
      });
    } catch (s) {
      tt.exception(
        "Cannot fix collections after team member permission downgrade",
        s
      );
    }
    await this.store.collectGarbage();
    const n = await this.store.buildPushData(e),
      r = new Date(this.settings.getDeprecatedLastSync() || 0),
      a = lc(r);
    return n != null
      ? this.apiSync({ ...n, last_synced: a }, e)
      : this.pull({ lastSynced: a });
  }
  async gotBulkData(e, n) {
    if (
      (await this.store.gotSyncData(e, n.cryptor, n.syncKeysAndIdentities)) ==
      null
    )
      throw new gYe();
    const a = e.now ? Pc(e.now).valueOf() : Date.now();
    return this.settings.setDeprecatedLastSync(a), cue(this.settings);
  }
  async apiSync(e, n) {
    return n.useWebSocketSync
      ? this.api.wsSync(e, this.abortSignal)
      : this.api.sync(e, this.abortSignal);
  }
  async buildSyncOptions(e, n) {
    var o;
    const r = e.account.user_id,
      { team: a } = e;
    rn(r);
    const s = U2(e),
      i = await this.keyManager.syncCryptor(
        r,
        s,
        a != null ? { canManageTeam: a.is_owner } : null
      );
    return {
      personalEncryptionSchema: s,
      cryptor: i,
      syncKeysAndIdentities: this.settings.isSynchingKeys(),
      teamEncryptionSchema: RP(e),
      vaultRoles: n,
      useWebSocketSync: !!(
        (o = e.account.authorized_features) != null && o.websocket_sync
      ),
    };
  }
  async getVaultRoles(e) {
    const n = e.account.user_id,
      { team: r } = e;
    if (n == null) return { status: "legacy bulk account" };
    const s = await this.keyManager.getKeyRingStatus(n, CU(r));
    return s.status === "vaults setup incomplete"
      ? s
      : s.status === "no vaults"
      ? { status: s.status }
      : { status: s.status, roles: s.vaults.mapValues((i) => i.role) };
  }
  async pushUserSettings(e, n) {
    const r = this.settings.getSettings().toJSON(),
      a = await e.updateSettings({ ...r, ...n });
    return await this.settings.setSettings(a), a;
  }
  async reloadUserSettings(e) {
    const n = await e.getSettings();
    return await this.settings.setSettings(n), n;
  }
  async syncUserSettings(e, n) {
    let r = await e.getSettings();
    const a = this.settings.getSettings().toJSON(),
      s = Pc(r.updated_at),
      i = qz(a.updated_at, Pc) ?? new Date(0);
    if (
      (i >= s && n != null && (r = await e.updateSettings({ ...a, ...n })),
      i < s || n != null)
    )
      return await this.settings.setSettings(r), r;
  }
}
function CU(t) {
  return t == null ? null : { canManageTeam: t.is_owner };
}
const Id = "localKey";
class bYe extends RUe {
  constructor(e, n, r, a, s = () => {}, i = void 0) {
    super(),
      (this.systemHasKeychain = !1),
      (this.api = e),
      (this.gRPCApi = n),
      (this.settings = a),
      (this.dispatch = s);
    const { name: o } = zf.parse(rT.getPath("exe"));
    (this.keytar = new hU(ls.mas() ? `${o} (MAS)` : o, x1("@termius/keytar"))),
      (this.credentialsStorage = new bWe()),
      (this.syncKeyManager = new DWe(this.api, this.credentialsStorage, s)),
      (this.store = new fYe(r, i)),
      (this.synchronization = new _Ye(
        this.api,
        this.settings,
        this.store,
        this.syncKeyManager
      )),
      (this.cloudsController = new dKe({
        store: this.store,
        dispatch: this.dispatch,
        settings: this.settings,
      })),
      (this.auth = new YWe(
        this.api,
        this.gRPCApi,
        this.settings,
        this.credentialsStorage,
        this.syncKeyManager,
        s
      )),
      (this.event_names = {
        BLOCK_ACCESS: "BLOCK_ACCESS",
        UNAUTHORIZED_401: "UNAUTHORIZED_401",
        FORBIDDEN_403: "FORBIDDEN_403",
      }),
      this.api.on(Zh.UNAUTHORIZED, () => {
        this.auth.authorized && this.emit(this.event_names.UNAUTHORIZED_401);
      }),
      this.api.on(Zh.FORBIDDEN, () =>
        this.emit(this.event_names.FORBIDDEN_403)
      ),
      this.api.on(Zh.BLOCK_ACCESS, () =>
        this.emit(this.event_names.BLOCK_ACCESS)
      );
  }
  async getVaultRoles(...e) {
    return new L5(this.syncKeyManager).getVaultRoles(...e);
  }
  async getAccessibleVaultKeyIds(...e) {
    return new L5(this.syncKeyManager).getAccessibleVaultKeyIds(...e);
  }
  async init() {
    await this.initLocalCryptoSystem(),
      this.credentialsStorage.setLocalCryptoSystem(this.localCryptoSystem),
      cb.hasSecureDataMigration() || (await this.migrateSecureData()),
      !cb.hasKeytarMigration() &&
        this.systemHasKeychain &&
        (await this.migrateKeychain()),
      XWe(),
      await this.store.removeUnsyncedDeleteFailedData(),
      this.settings.getDeprecatedUserTeamStatus().isTeam === !1 &&
        (await this.store.removeSharedLocalData());
  }
  async initLocalCryptoSystem() {
    if (
      (await this.tryToInitLocalCryptoSystem(),
      this.localCryptoSystem != null && Ft.getLocalKeyIsReady())
    )
      tt.info("init store with localCryptoSystem"),
        await this.store.initWithCryptor(this.localCryptoSystem);
    else {
      tt.info("init store with RNCryptor");
      const e = new $oe();
      await this.store.initWithCryptor(e),
        this.localCryptoSystem == null &&
          (await this.generateLocalCryptoSystem()),
        this.settings.getDeprecatedUserStr() ||
          (await this.tryToMigrateToLocalCryptoSystem(e));
    }
  }
  async tryToInitLocalCryptoSystem() {
    const e = await this.getLocalKey();
    if (e) this.localCryptoSystem = new PA(e);
    else if (Ft.getLocalKeyIsReady())
      throw (
        (tt.exception("LocalCryptoSystem's key is missing", new Error()),
        new aU("Can't read localKey on init"))
      );
  }
  async generateLocalCryptoSystem() {
    const e = PA.generateEncryptionKey();
    await this.setLocalKey(e);
    const n = await this.getLocalKey();
    if (n) this.localCryptoSystem = new PA(n);
    else
      throw (
        (tt.exception("Cannot verify the LocalCryptoSystem's key", new Error()),
        new aU("localKey !== confirmedLocalKey"))
      );
  }
  async tryToMigrateToLocalCryptoSystem(e) {
    if (!Ft.getLocalKeyIsReady()) {
      if (!this.localCryptoSystem) {
        tt.exception(
          "Cannot start migration because a local crypto system is unavailable",
          new Error()
        );
        return;
      }
      tt.info("Beginning a local crypto system migration");
      const n = new gWe(e, this.localCryptoSystem);
      this.migrateLocalHost(n),
        await this.store.updateCryptor(n),
        await this.store.updateCryptor(this.localCryptoSystem, !0),
        Ft.setLocalKeyIsReady(),
        tt.info("Finished a local crypto system migration");
    }
  }
  migrateLocalHost(e) {
    const n = Ft.getDeprecatedLocalhost();
    if (n) {
      const r = e;
      (n.username = r.decrypt(n.username)),
        (n.password = r.decrypt(n.password)),
        Ft.setDeprecatedLocalhost({
          ...n,
          username: this.localCryptoSystem.encrypt(n.username),
          password: this.localCryptoSystem.encrypt(n.password),
        });
    }
  }
  async resetUserData() {
    try {
      this.auth.removeUserData(), await this.clearDB();
    } catch (e) {
      tt.exception("Cannot reset user data", e);
    }
  }
  async sync(e, n) {
    if (this.auth.authorized) {
      if (await this.shouldRequestPasswordToEnableSharing(e)) {
        this.dispatch(AU());
        return;
      }
      return this.synchronization.sync(e, n);
    }
  }
  async syncAllData(e, n) {
    const r = e.account.user_id,
      a = e.team ? { canManageTeam: e.team.is_owner } : null;
    if (!this.auth.authorized || r == null) return;
    const s = await this.getAccessibleVaultKeyIds(r, a);
    if (s.status !== "vaults setup incomplete") {
      if (
        (await this.store.markAllSyncableCollectionsAsUpdateFailed({
          vaultKeyIds: s.keyIds,
        }),
        await this.shouldRequestPasswordToEnableSharing(e))
      ) {
        this.dispatch(AU());
        return;
      }
      return this.synchronization.sync(e, n);
    }
  }
  async setSynchronizeKeySetting(e) {
    await this.settings.setSettings({ synchronize_key: e });
  }
  async signedIn(e, n) {
    const r = this.syncKeyManager.rnCryptorForMigration();
    await this.tryToMigrateToLocalCryptoSystem(r),
      this.dispatch(Op()),
      e &&
        (T8e(e) && this.dispatch(ea.request()),
        await this.tryNotifyTeamKeyAdoption(e)),
      n || this.dispatch($t.request("does-not-block-ui")),
      this.dispatch(Woe());
  }
  async tryNotifyTeamKeyAdoption(e) {
    var r;
    if (
      ((r = e.team) == null ? void 0 : r.is_owner) !== !1 ||
      e.account.user_id == null
    )
      return;
    const n = await this.syncKeyManager.createTeamCryptor(e.account.user_id, {
      canManageTeam: !1,
    });
    n != null &&
      n.initializationError == null &&
      this.dispatch(Rh("teamPrivateKeyAdopted"));
  }
  async tryToRestoreUser(e) {
    if ((tt.info("Restoring the user"), !this.settings.getDeprecatedUserStr()))
      return (
        tt.info("Restored a free user"), { isRestored: !0, isFreeUser: !0 }
      );
    const r = this.credentialsStorage.passwordRememberStatus();
    if (r === "not-remembered")
      return (
        tt.info("User is not remembered, skip restoring"),
        { isRestored: !1, isFreeUser: !1 }
      );
    r === "remembered-without-sharing" && e != null
      ? (tt.info("Restored a remembered user with disabled sharing"),
        this.dispatch(ZS(await this.synchronization.isSharingPossible(e))))
      : tt.info("Restored a remembered user");
    const a = this.credentialsStorage.getApiKey();
    return (
      this.auth.updateApiCredentials(a), { isRestored: !0, isFreeUser: !1 }
    );
  }
  async convertUserAccountToTeamType({ userId: e }) {
    if (!this.auth.authorized) return;
    const { isOwner: n } = this.settings.getDeprecatedUserTeamStatus();
    if (n == null) {
      tt.exception(
        "Cannot convert user to a team type because 'isOwner' is 'null'",
        new Error()
      );
      return;
    }
    await this.syncKeyManager.convertUserAccountToTeamType(e, n);
  }
  async tryFixSharingSetup(e, n, r) {
    if ((tt.info("User tries to enable sharing"), !this.auth.authorized))
      return;
    await this.auth.validatePassword({ userId: e, password: n }, r);
    const a = this.syncKeyManager.rnCryptorForMigration();
    await this.tryToMigrateToLocalCryptoSystem(a),
      this.dispatch(ZS(await this.synchronization.isSharingPossible(e))),
      this.dispatch($t.request("does-not-block-ui"));
  }
  async login({ rememberPassword: e = !1, isReLogin: n = !1, ...r }) {
    return (
      tt.info("User logs in"),
      this.auth.login({ rememberPassword: e, isReLogin: n, ...r })
    );
  }
  async afterLogin({
    username: e,
    password: n,
    rememberPassword: r = !1,
    authyToken: a,
    isReLogin: s = !1,
    response: i,
    shouldSkipSyncAfterSignIn: o,
    authMethod: u,
  }) {
    try {
      const { user: l } = await this.auth.afterLogin({
        username: e,
        password: n,
        rememberPassword: r,
        authyToken: a,
        isReLogin: s,
        authMethod: u,
        response: i,
      });
      await this.signedIn(l, o);
      const { user_id: c } = i.bulk_account.account;
      return (
        this.dispatch(ZS(await this.synchronization.isSharingPossible(c))),
        tt.info("Signed in a logged in user"),
        l.account.pro_mode
      );
    } catch (l) {
      throw (
        (tt.info("User has failed to login"),
        this.auth.resetApiCredentials(),
        l)
      );
    }
  }
  async logout() {
    try {
      this.synchronization.abort("logout"),
        this.api.logout().catch((e) => {
          if (!(e instanceof _r)) throw e;
        }),
        await this.clearUserData();
    } catch (e) {
      tt.exception("Cannot logout the user", e);
    }
  }
  async clearUserData() {
    await this.auth.logout(),
      await this.clearDB(),
      this.auth.resetApiCredentials();
  }
  async clearDB() {
    await this.store.clearAll(),
      await this.settings.clearData(),
      await this.settings.generateData(),
      this.auth.resetApiCredentials();
  }
  async changeUsername(e, n, r) {
    const { token: a } = await this.getSecurityToken(n);
    await this.auth.changeUsername(e, a, r),
      await this.auth.updateUserProfile();
  }
  async deleteAccount(e, n) {
    const { token: r } = await this.getSecurityToken(e);
    await this.api.deleteAccount({ security_token: r, otp_token: n });
  }
  async changePassword(e) {
    if (!this.auth.authorized) throw new db();
    const { userId: n, oldPassword: r, newPassword: a, authyToken: s } = e,
      i = this.settings.isSynchingKeys(),
      { isOwner: o } = this.settings.getDeprecatedUserTeamStatus(),
      u = await this.getVaultRoles(n, o != null ? { canManageTeam: o } : null);
    rn(u.status !== "vaults setup incomplete");
    const l = "v3",
      c = await this.syncKeyManager.syncCryptor(
        n,
        l,
        o != null ? { canManageTeam: o } : null
      );
    await this.synchronization.fullSync(n, {
      syncKeysAndIdentities: i,
      personalEncryptionSchema: l,
      teamEncryptionSchema: null,
      cryptor: c,
      vaultRoles: u.roles,
      useWebSocketSync: !1,
    });
    const d = await this.api.bulkAccount(),
      p = RP(d),
      m = {
        syncKeysAndIdentities: i,
        personalEncryptionSchema: l,
        teamEncryptionSchema: p,
        vaultRoles: u.roles,
      };
    await this.synchronization.syncHistory(d, 0);
    const { rnCryptor: y, ...I } = await this.auth.getDataFromNewPassword(a),
      O = new Xoe(
        new vH(_H(a, { encryption: I.salt, hmac: I.hmac_salt })),
        null,
        null
      ),
      g = await this.synchronization.getReEncryptedHistoryData({
        ...m,
        cryptor: O,
        useWebSocketSync: !1,
      }),
      C = {
        ...I,
        old_password: hf.generateHash(r),
        objects: [...this.store.getReEncryptedData(y, i), ...g],
      };
    s && (C.authy_token = s), await this.auth.changePassword(C, a);
  }
  async getSrpSpecs(e) {
    const { salt: n, identifier: r } = await this.api.generateSRPSalt();
    return {
      verifier: new wH(r, e, Buffer.from(n, "base64")).generateVerifier(),
      srp_salt: n,
    };
  }
  async changePasswordWithSecurityToken(e, n, r) {
    const { token: a } = await this.getSecurityToken(e),
      s = await this.api.regenerateSpecs(),
      i = await this.syncKeyManager.reencryptPersonalPrivateKey({
        password: n,
        encryptionSalt: s.salt,
        hmacSalt: s.hmac_salt,
      }),
      { srp_salt: o, verifier: u } = await this.getSrpSpecs(n),
      l = {
        verifier: u,
        srp_salt: o,
        personal_keyset: i,
        cryptospec: { salt: s.salt, hmac_salt: s.hmac_salt },
        security_token: a,
      };
    r && (l.otp_token = r),
      await this.auth.changePasswordWithSecurityToken(l, n);
  }
  async recoverAccount(e) {
    if (!this.auth.authorized) throw new db();
    const { verificationCode: n, newPassword: r, authyToken: a } = e,
      { id: s } = await this.api.getUserProfile(),
      i = this.settings.isSynchingKeys(),
      { isOwner: o } = this.settings.getDeprecatedUserTeamStatus(),
      u = await this.getVaultRoles(s, o != null ? { canManageTeam: o } : null);
    rn(u.status !== "vaults setup incomplete");
    const l = "v3",
      c = await this.syncKeyManager.syncCryptor(
        s,
        l,
        o != null ? { canManageTeam: o } : null
      ),
      d = {
        syncKeysAndIdentities: i,
        personalEncryptionSchema: l,
        teamEncryptionSchema: null,
        cryptor: c,
        vaultRoles: u.roles,
        useWebSocketSync: !1,
      };
    await this.synchronization.fullSync(s, d);
    const { rnCryptor: p, ...m } = await this.auth.getDataFromNewPassword(
        r,
        !0
      ),
      y = {
        ...m,
        security_token: n,
        objects: this.store.getReEncryptedData(p, i),
      };
    a && (y.otp_token = a);
    const { terminalObjects: I } = await this.auth.recoverAccount(y, r);
    this.dispatch(ZS(await this.synchronization.isSharingPossible(s)));
    const O = await this.syncKeyManager.syncCryptor(
      s,
      l,
      o != null ? { canManageTeam: o } : null
    );
    await this.synchronization.gotBulkData(I, {
      syncKeysAndIdentities: d.syncKeysAndIdentities,
      cryptor: O,
    });
  }
  otpRegisterProviderAuthy(e) {
    return this.api.registerUserAuthy({ cellphone: e });
  }
  otpRegisterProviderTotp() {
    return this.api.otpRegisterProviderTotp();
  }
  getLocalhost() {
    const e = Ft.getDeprecatedLocalhost();
    return e
      ? ((e.username = this.localCryptoSystem.decrypt(e.username) ?? ""),
        (e.password = this.localCryptoSystem.decrypt(e.password) ?? ""),
        Tn.fromLocalhost(e))
      : null;
  }
  setLocalhost(e) {
    Ft.setDeprecatedLocalhost({
      ...e,
      username: this.localCryptoSystem.encrypt(e.username),
      password: this.localCryptoSystem.encrypt(e.password),
    });
  }
  removeLocalhost() {
    Ft.removeDeprecatedLocalhost();
  }
  signUpFree(e) {
    return this.auth.signUpFree(e);
  }
  trialSignup(e) {
    return this.auth.trialSignup(e);
  }
  trialSignupViaSso(e, n) {
    return this.auth.trialSignupViaSso(e, n);
  }
  createTeamTrial(e, n) {
    return this.api.createTeamTrial({ team_name: e, invites: n });
  }
  inviteTeamMember(e, n) {
    return this.api.inviteTeamMember({ email: e, role: n });
  }
  getTeamSeatsList(e = 0, n = 50) {
    return this.api.getTeamSeatsList({ offset: e, limit: n });
  }
  getTeamMembersList(e = 0, n = 50) {
    return this.api.getTeamMembersList({ offset: e, limit: n });
  }
  getTeamInvitesList(e = 0, n = 50) {
    return this.api.getTeamInvitesList({ offset: e, limit: n });
  }
  getTeamMembersStaleEncryptionList(e = 0, n = 30) {
    return this.api.getTeamMembersStaleEncryptionList({ offset: e, limit: n });
  }
  getStaleEncryptionDevicesList(e = 0, n = 50) {
    return this.api.getStaleEncryptionDevicesList({ offset: e, limit: n });
  }
  getMembersVaults() {
    return this.api.getMembersVaults();
  }
  async getProductboardToken() {
    const { productboard_jwt: e } = await this.api.getProductBoardToken();
    return e;
  }
  async getOnlySharedEntities(e, n, r) {
    if (!this.auth.authorized) throw new db();
    const a = await this.api.getDataForTeamTrialDeactivation(),
      s = this.settings.isSynchingKeys(),
      { isOwner: i } = this.settings.getDeprecatedUserTeamStatus(),
      o = await this.getVaultRoles(e, i != null ? { canManageTeam: i } : null);
    rn(o.status !== "vaults setup incomplete");
    const u = await this.syncKeyManager.syncCryptor(
      e,
      n,
      i != null ? { canManageTeam: i } : null
    );
    return this.store.prepareSharedEntitiesForDowngrade(a, "decrypt", {
      cryptor: u,
      personalEncryptionSchema: n,
      teamEncryptionSchema: r,
      syncKeysAndIdentities: s,
      vaultRoles: o.roles,
      useWebSocketSync: !1,
    });
  }
  async deactivateTeamTrial(e, n, r) {
    if (!this.auth.authorized) throw new db();
    const a = await this.getOnlySharedEntities(e, n, r),
      s = this.settings.isSynchingKeys(),
      { isOwner: i } = this.settings.getDeprecatedUserTeamStatus(),
      o = await this.getVaultRoles(e, i != null ? { canManageTeam: i } : null);
    rn(o.status !== "vaults setup incomplete");
    const l = {
        cryptor: await this.syncKeyManager.syncCryptor(
          e,
          n,
          i != null ? { canManageTeam: i } : null
        ),
        personalEncryptionSchema: n,
        teamEncryptionSchema: r,
        syncKeysAndIdentities: s,
        vaultRoles: o.roles,
        useWebSocketSync: !1,
      },
      c = {
        terminal_objects: this.store.prepareSharedEntitiesForDowngrade(
          a,
          "encrypt",
          l
        ),
      };
    return this.api.deactivateTeamTrial(c);
  }
  async getLocalKey() {
    if (!this.systemHasKeychain) return Ft.getLocalKey();
    try {
      return await this.keytar.getPassword(Id);
    } catch (e) {
      throw (tt.exception("Cannot get a localKey from keychain", e), e);
    }
  }
  async setLocalKey(e) {
    if (!this.systemHasKeychain) {
      Ft.setLocalKey(e), Ft.setLocalKeyVault("localStorage");
      return;
    }
    try {
      await this.keytar.setPassword(Id, e), Ft.setLocalKeyVault("keychain");
    } catch (n) {
      throw (tt.exception("Cannot set a localKey in keychain", n), n);
    }
  }
  async testSystemKeychain() {
    try {
      await this.keytar.getPassword(Id), (this.systemHasKeychain = !0);
    } catch (e) {
      e instanceof Qoe ||
        tt.exception("Keychain is not available for an unexpected reason", e);
    }
  }
  async migrateSecureData() {
    try {
      const e = this.settings.getDeprecatedUserData();
      if (e != null) {
        const {
          api_key: n,
          encryption_key: r,
          encryption_salt: a,
          hmac_key: s,
          hmac_salt: i,
        } = e;
        this.credentialsStorage.setRNCryptorSet({
          encryptionKey: r,
          hmacKey: s,
          encryptionSalt: a,
          hmacSalt: i,
        }),
          this.credentialsStorage.setApiKey(n),
          await this.settings.setUserData(null);
      }
    } catch (e) {
      tt.exception(
        "Cannot migrate credentials from IndexedDB to Local Crypto System",
        e
      );
      return;
    }
    cb.addSecureDataMigration();
  }
  async migrateKeychain() {
    try {
      const n = (
        await this.keytar.findCredentials().catch((r) => {
          throw (
            (tt.exception("Cannot get a list of secure data from keychain", r),
            r)
          );
        })
      )
        .filter((r) => r.account !== "localKey")
        .map((r) => this.keytar.deletePassword(r.account));
      await Promise.all(n).catch((r) => {
        throw (tt.exception("Cannot remove secure data from keychain", r), r);
      });
    } catch {
      return;
    }
    cb.addKeytarMigration();
  }
  async migrateKeychainFromWebsiteToMAS() {
    if (
      ls.mas() &&
      Ft.getLocalKeyIsReady() &&
      this.systemHasKeychain &&
      !(await this.keytar.getPassword(Id))
    ) {
      const e = Ft.getLocalKey();
      if (e)
        try {
          await this.keytar.setPassword(Id, e);
        } catch (n) {
          tt.exception(
            "Cannot migrate local key from local storage to keychain for MAS",
            n
          );
        }
      else {
        const { name: n } = zf.parse(rT.getPath("exe")),
          r = new hU(n, x1("@termius/keytar"));
        try {
          const a = await r.getPassword(Id);
          a && (await this.keytar.setPassword(Id, a));
        } catch (a) {
          tt.exception("Cannot migrate keychain from website to MAS", a);
        }
      }
    }
  }
  getInAppMessages(e = 0, n = 50) {
    return this.api.getInAppMessages({ offset: e, limit: n });
  }
  async migrateToNewCrypto(e, n, r) {
    const a = await this.sync(e, r);
    return await this.clearHistory(), await this.api.migrateToSRP(n), a;
  }
  generateSrpSalt() {
    return this.api.generateSRPSalt();
  }
  async pullHistory({ user: e, limit: n }) {
    return this.synchronization.pullHistory(e, n);
  }
  async syncHistory({ user: e, limit: n }) {
    return this.synchronization.syncHistory(e, n);
  }
  async clearHistory() {
    return this.synchronization.clearHistory();
  }
  async skipTrialOnboardingInviteStep(e, n) {
    return this.api.skipTrialOnboardingInviteStep({ data: e, id: n });
  }
  async getSecurityToken(e) {
    const n = await this.auth.updateUserProfile(),
      { encryption_schema: r } = HP(n);
    return this.auth.getSecurityToken(e, r);
  }
  sendFeedback(e) {
    return this.api.sendAppFeedback(e);
  }
  async shouldRequestPasswordToEnableSharing(e) {
    const { user_id: n } = e.account;
    return n == null ? !0 : !(await this.synchronization.isSharingPossible(n));
  }
  async getAllVaults() {
    return this.api.getVaults({ background: "sync" });
  }
  async createVault(e) {
    const { vaultName: n, teamOwnerId: r, newVaultMembers: a } = e,
      s = await this.syncKeyManager.obtainNewVaultKeys(r, a);
    if (s.err.length > 0) return Nn(s.err[0]);
    const i = { name: n, create_participant_keys: s.ok };
    return Ci.wrapAsync(() => this.api.createVault({ vault: i }));
  }
  async updateVault(e) {
    const {
        vaultId: n,
        vaultName: r,
        teamOwnerId: a,
        newVaultMembers: s,
        originalVaultMembers: i,
      } = e,
      o = F9e(i, s, a);
    if (o.err) return Nn(Error("Failed to build members diff"));
    const u = o.val,
      l = u.updatedMembers.map((m) => ({ id: m.id, role: m.role })),
      c = u.deletedMembers.map((m) => ({ id: m.id })),
      d =
        u.addedMembers.length > 0
          ? await this.syncKeyManager.obtainIssuedVaultKeys({
              teamOwnerId: a,
              vaultId: n,
              newVaultMembers: u.addedMembers,
            })
          : { ok: [], err: [] };
    if (d.err.length > 0) return Nn(d.err[0]);
    const p = {
      name: r,
      change_participants: l,
      create_participant_keys: d.ok,
    };
    return (
      c.length > 0 && (p.delete_participants = c),
      Ci.wrapAsync(() => this.api.updateVault(n, { vault: p }))
    );
  }
  async deleteVault(e) {
    return Ci.wrapAsync(() => this.api.deleteVault(e));
  }
}
function AU() {
  return ym.request({
    dialog: "EnableSharingDialog",
    target: "all-windows",
    props: {},
  });
}
class cs extends rI.Model {
  constructor() {
    super(...arguments),
      (this.local_updated_at = null),
      (this.isHardDestroyed = null);
  }
  get version() {
    return 1;
  }
  get commonFields() {
    return ["id", "local_id", "updated_at", "is_shared", "encrypted_with"];
  }
  get idAttribute() {
    return "local_id";
  }
  get remoteIdAttribute() {
    return "id";
  }
  get cryptoFields() {
    return [];
  }
  get sodiumCryptoFields() {
    return [];
  }
  get plainFields() {
    return [];
  }
  get localOnlyFields() {
    const e = ["status"];
    return this.get("id") !== void 0 && e.push("local_id"), e;
  }
  get relationsInBulk() {
    return {};
  }
  hasRemoteId() {
    return !!this.get("id");
  }
  isDelayed() {
    return [ga, jg, Ri].includes(this.get("status"));
  }
  isCryptoField(e) {
    return this.cryptoFields.includes(e);
  }
  isSodiumCryptoField(e) {
    return this.sodiumCryptoFields.includes(e);
  }
  isPlainField(e) {
    return this.plainFields.includes(e);
  }
  getReEncrypted(e, n) {
    const r = this.toJSON({ do_not_encrypt: !1 }, n);
    if (r.is_shared) return this.toJSON({ do_not_encrypt: !0 }, n);
    const a = {};
    for (const [s, i] of Object.entries(r))
      a[s] =
        (i == null || typeof i == "string") && this.isCryptoField(s)
          ? e.encrypt(i)
          : R6(i);
    return a;
  }
  getForChangePassword(e) {
    const n = this.getReEncrypted(e);
    return (
      delete n.local_id,
      delete n.status,
      il(this.relationsInBulk, (r, a) => {
        n[a] && delete n[a].local_id;
      }),
      (n.set_name = this.collection.nameOfSetInSync),
      n
    );
  }
  get(e, n = !1) {
    const r = super.get(e);
    if (
      r &&
      (this.isCryptoField(e) ||
        (this.isSodiumCryptoField(e) && mKe(r)) ||
        e === "content")
    ) {
      const a = this.collection.cryptor.decrypt(r, n);
      return this.deserializeFieldAfterDecryption(e, a);
    }
    return r;
  }
  set(e, n, r) {
    let a = {},
      s = r;
    if (
      (typeof e == "object" ? ((a = e), (s = n)) : (a[e] = n),
      (s != null && !s.do_not_encrypt) || s == null)
    )
      for (const i of Object.keys(a || {}))
        a[i] = this.transformValueDuringSet(i, a[i]);
    return (this.local_updated_at = new Date()), super.set(a, s);
  }
  saveSyncResponse(e) {
    this.set(e, { do_not_encrypt: !0 });
  }
  transformValueDuringSet(e, n) {
    return n != null &&
      (this.isCryptoField(e) || this.isSodiumCryptoField(e) || e === "content")
      ? this.collection.cryptor.encrypt(
          this.serializeFieldBeforeEncryption(e, n)
        )
      : n;
  }
  unset(e, n) {
    const r = qf(n || {}, { do_not_encrypt: !0 });
    return super.unset(e, r);
  }
  clear(e) {
    const n = qf(e || {}, { do_not_encrypt: !0 });
    return super.clear(n);
  }
  toJSON(e, n) {
    let r = super.toJSON(e);
    r = BP(xl(r), Xv);
    try {
      if (e != null && e.do_not_encrypt != null && e.do_not_encrypt === !1)
        for (const a of Object.keys(r)) r[a] = this.get(a, n);
    } catch {}
    return (
      e != null &&
        e.with_local_updated_at &&
        (r.local_updated_at = this.local_updated_at),
      r
    );
  }
  updateRelationsData(e, n) {
    return (
      il(this.relationsInBulk, (r, a) => {
        if (e[a] != null) {
          const s = n[r.collection].findByRemoteId(e[a].id);
          s && (e[a].local_id = s.get("local_id"));
        }
      }),
      this.set(e, { do_not_encrypt: !0 })
    );
  }
  generateIdForSync(e, n) {
    if (n.id != null) return n.id;
    if (n.local_id != null) return `${e}${cYe}${n.local_id}`;
    throw new Error(`Unexpected ids in json ${JSON.stringify(n)}`);
  }
  getRelationsDataForSync(e) {
    const n = {};
    return (
      il(this.relationsInBulk, (r, a) => {
        let s = null;
        const i = this.get(a);
        i != null && (s = e[r.collection].findByLocalId(i.local_id)),
          s != null
            ? (n[a] = this.generateIdForSync(r.set_name, {
                id: s.get("id"),
                local_id: s.get("local_id"),
              }))
            : (n[a] = null);
      }),
      n
    );
  }
  isShouldBeInPostBulkRequestData() {
    return !0;
  }
  buildPushData(e, n) {
    const r = this.toJSON({ do_not_encrypt: !1 });
    this.localOnlyFields.forEach((s) => {
      s in r && delete r[s];
    });
    const a = this.encryptDataForBackend(r, e);
    return sn.is(a) ? a : { ...a, ...this.getRelationsDataForSync(n) };
  }
  decryptDataFromBackend(e, n) {
    return e.content != null
      ? this._decryptV5DataFromBackend(e, n)
      : this._decryptV3DataFromBackend(e, n);
  }
  _decryptV5DataFromBackend(e, n) {
    const r = e;
    try {
      const a = n.decryptV5(r.content, {
        is_shared: !!r.is_shared,
        encrypted_with: r.encrypted_with ?? null,
      });
      if (a == null || a === "")
        return new sn("empty decrypt", Fi.sodium).withContext({
          kind: this.entityName,
          id: e == null ? void 0 : e.id,
          local_id: e == null ? void 0 : e.local_id,
          message: "empty decrypt",
          operation: "decrypt",
        });
      if (typeof a != "string")
        return a.withContext({
          kind: this.entityName,
          id: e == null ? void 0 : e.id,
          local_id: e == null ? void 0 : e.local_id,
          message: a.message,
          operation: "decrypt",
        });
      const s = JSON.parse(a);
      for (const i of Object.keys(s))
        (this.isCryptoField(i) ||
          this.isSodiumCryptoField(i) ||
          this.isPlainField(i)) &&
          (r[i] = s[i]);
      return (r.content = s), r;
    } catch (a) {
      return (
        tt.exception(
          `Cannot proccess a V5 entity from '${this.entityName}'`,
          a
        ),
        delete r.content,
        r
      );
    }
  }
  _decryptV3DataFromBackend(e, n) {
    const r = e;
    try {
      for (const a in r)
        if (this.isCryptoField(a)) {
          const s = n.decryptV3(r[a], {
            is_shared: !!r.is_shared,
            encrypted_with: r.encrypted_with ?? null,
          });
          r[a] = s == null ? void 0 : s.toString();
        }
    } catch (a) {
      tt.exception(`Cannot proccess a V3 entity from '${this.entityName}'`, a);
    }
    return r;
  }
  encryptDataForBackend(e, n) {
    const {
        cryptor: r,
        personalEncryptionSchema: a,
        teamEncryptionSchema: s,
        vaultRoles: i,
      } = n,
      o = k8e(e, i),
      u =
        o.encrypted_with != null
          ? { encrypted_with: o.encrypted_with, is_shared: void 0 }
          : o;
    if ((o.is_shared ? s : a) === "v5") {
      const c = e.content ?? {},
        d = JSON.stringify({
          version: this.version,
          ...c,
          ...Ug(e, [
            ...this.cryptoFields,
            ...this.sodiumCryptoFields,
            ...this.plainFields,
          ]),
        }),
        p = r.encryptV5(d, o);
      return typeof p != "string"
        ? p ??
            new sn("content is empty", Fi.sodium).withContext({
              kind: this.entityName,
              id: e == null ? void 0 : e.id,
              local_id: e == null ? void 0 : e.local_id,
              message: "content is empty",
              operation: "encrypt",
            })
        : { ...Ug(e, this.commonFields), ...u, content: p };
    } else {
      const c = zv(e, ["content"]);
      for (const d of Object.keys(c))
        if (this.isCryptoField(d)) {
          const p = r.encryptV3(c[d], o);
          if (sn.is(p))
            return p.withContext({
              kind: this.entityName,
              id: e == null ? void 0 : e.id,
              local_id: e == null ? void 0 : e.local_id,
              message: p.message,
              operation: "encrypt",
            });
          c[d] = p;
        }
      return Object.assign(c, u), c;
    }
  }
  encryptDataForDatabase(e, n) {
    const r = e;
    for (const a of Object.keys(r))
      (this.isCryptoField(a) ||
        this.isSodiumCryptoField(a) ||
        a === "content") &&
        (r[a] = n.encrypt(this.serializeFieldBeforeEncryption(a, r[a])));
    return r;
  }
  serializeFieldBeforeEncryption(e, n) {
    return e === "content" && n != null ? JSON.stringify(n) : n;
  }
  deserializeFieldAfterDecryption(e, n) {
    return e === "content" && typeof n == "string" ? this.parseContent(n) : n;
  }
  parseContent(e) {
    try {
      return JSON.parse(e);
    } catch {
      return;
    }
  }
  hardDestroy(e) {
    return (this.isHardDestroyed = !0), this.destroy(e);
  }
  async saveAll() {
    return this.save(null, { do_not_encrypt: !0 }), cue(this);
  }
}
class EYe extends cs {
  get entityName() {}
  isShouldBeInPostBulkRequestData() {
    return !1;
  }
  get cryptoFields() {
    return ["accessKeyId", "secretAccessKey", "region"];
  }
  get plainFields() {
    return ["ipAddressType"];
  }
}
class TYe extends Bm {
  constructor() {
    super(...arguments), (this.model = EYe);
  }
  get dbName() {
    return "aws_configs";
  }
  get dbVersion() {
    return 2;
  }
  get useInResetPassword() {
    return !1;
  }
  async migrate() {
    const e = new Ns(this.dbName);
    e.version(0.1).stores({ aws_configs: "++local_id,&local_id,&id,status" }),
      e
        .version(0.2)
        .stores({ aws_configs: "++local_id,&local_id,&id,status" })
        .upgrade((n) =>
          n
            .table(this.dbName)
            .toCollection()
            .modify((r) => {
              r.serviceType || (r.serviceType = "ec2");
            })
        ),
      await e.open(),
      e.close();
  }
}
const wYe = new TYe();
class PYe extends cs {
  get entityName() {}
  isShouldBeInPostBulkRequestData() {
    return !1;
  }
  get cryptoFields() {
    return ["client_id", "tenant_id", "client_secret"];
  }
  get plainFields() {
    return [];
  }
}
class IYe extends Bm {
  constructor() {
    super(...arguments), (this.model = PYe);
  }
  get dbName() {
    return "azure_configs";
  }
  get dbVersion() {
    return 3;
  }
  get useInResetPassword() {
    return !1;
  }
}
const CYe = new IYe();
class AYe extends cs {
  get entityName() {}
  get relationsInBulk() {
    return {
      ssh_config: {
        required: !0,
        set_name: en.SSH_CONFIGS,
        collection: "ssh_configs",
      },
      identity: {
        required: !0,
        set_name: en.IDENTITIES,
        collection: "identities",
      },
    };
  }
}
class OYe extends cs {
  get entityName() {}
  get relationsInBulk() {
    return {
      telnet_config: {
        required: !0,
        set_name: en.TELNET_CONFIGS,
        collection: "telnet_configs",
      },
      identity: {
        required: !0,
        set_name: en.IDENTITIES,
        collection: "identities",
      },
    };
  }
}
class HYe extends cs {
  get entityName() {
    return "Identity";
  }
  get cryptoFields() {
    return ["label", "password", "username"];
  }
  get plainFields() {
    return ["is_visible"];
  }
  get relationsInBulk() {
    return {
      ssh_key: { required: !1, set_name: en.SSH_KEYS, collection: "ssh_keys" },
    };
  }
  get localOnlyFields() {
    return [...super.localOnlyFields, "hardware_key"];
  }
}
class NYe extends pr {
  constructor() {
    super(...arguments), (this.model = HYe);
  }
  get dbName() {
    return "ssh_identities";
  }
  get nameOfSetInSync() {
    return en.IDENTITIES;
  }
  shouldSyncRaw(e, n) {
    return n.syncKeysAndIdentities ? !0 : !!e.is_shared;
  }
}
const due = new NYe();
class RYe extends cs {
  get entityName() {
    return "SSHConfig";
  }
  get cryptoFields() {
    return ["env_variables"];
  }
  get sodiumCryptoFields() {
    return ["mosh_server_command"];
  }
  get plainFields() {
    return ["agent_forwarding", "charset", "color_scheme", "port", "use_mosh"];
  }
  get relationsInBulk() {
    return {
      identity: {
        required: !1,
        set_name: en.IDENTITIES,
        collection: "identities",
      },
      startup_snippet: {
        required: !1,
        set_name: en.SNIPPETS,
        collection: "snippets",
      },
      proxycommand: {
        required: !1,
        set_name: en.PROXIES,
        collection: "proxies",
      },
    };
  }
  buildPushData(e, n) {
    const r = super.buildPushData(e, n);
    return sn.is(r) || delete r.identity, r;
  }
}
async function pue(t, e, n) {
  const r = new Ns(t);
  r.version(0.1).stores({ [t]: "++local_id,&local_id,&id,status" }),
    r
      .version(0.2)
      .stores({ [t]: "++local_id,&local_id,&id,status" })
      .upgrade((a) =>
        a
          .table(t)
          .filter((s) => !s.identity)
          .delete()
      ),
    r
      .version(0.3)
      .stores({ [t]: "++local_id,&local_id,&id,status" })
      .upgrade(async (a) => {
        const s = await a.table(t).orderBy("id").toArray(),
          i = new Set(s.map((o) => o.id));
        await a
          .table(t)
          .filter((o) => i.has(o.remote_id))
          .delete(),
          await a
            .table(t)
            .filter((o) => !!o.remote_id)
            .modify((o) => {
              o.id || (o.id = o.remote_id), delete o.remote_id;
            });
      }),
    r
      .version(0.4)
      .stores({ [t]: "++local_id,&local_id,&id,status" })
      .upgrade((a) =>
        a
          .table(t)
          .filter((s) => !!s.config)
          .modify((s) => {
            s[e] || (s[e] = s.config), delete s.config;
          })
      ),
    r.on("populate", (a) => {
      a.table(t).bulkPut(
        n
          .filter((s) => !!s.identity)
          .map((s) => ({
            updated_at: s.updated_at,
            id: s.id,
            [e]: { local_id: s.local_id, id: s.id },
            identity: s.identity,
            is_shared: !1,
            status: s.status,
          }))
      );
    }),
    await r.open(),
    r.close();
}
class kYe extends pr {
  constructor() {
    super(...arguments), (this.model = RYe);
  }
  get dbName() {
    return "ssh_configs";
  }
  get dbVersion() {
    return 2;
  }
  get useInResetPassword() {
    return !1;
  }
  get nameOfSetInSync() {
    return en.SSH_CONFIGS;
  }
  async migrate() {
    const e = new Ns(this.dbName);
    e.version(0.1).stores({ ssh_configs: "++local_id,&local_id,&id,status" }),
      e
        .version(0.2)
        .stores({ ssh_configs: "++local_id,&local_id,&id,status" })
        .upgrade((r) =>
          r
            .table(this.dbName)
            .toCollection()
            .modify((a) => {
              (a.identity = a.ssh_identity), delete a.ssh_identity;
            })
        );
    const n = await e.table(this.dbName).toArray();
    e.close(), await pue("ssh_config_identities", "ssh_config", n);
  }
  prepareForSync(e, n) {
    var a;
    const r = e;
    return (
      !n &&
        !((a = r == null ? void 0 : r.identity) != null && a.is_shared) &&
        delete r.identity,
      r
    );
  }
}
const a_ = new kYe();
class xYe extends cs {
  get entityName() {
    return "TelnetConfig";
  }
  get plainFields() {
    return ["charset", "color_scheme", "port"];
  }
  get relationsInBulk() {
    return {
      identity: {
        required: !1,
        set_name: en.IDENTITIES,
        collection: "identities",
      },
      startup_snippet: {
        required: !1,
        set_name: en.SNIPPETS,
        collection: "snippets",
      },
    };
  }
  buildPushData(e, n) {
    const r = super.buildPushData(e, n);
    return sn.is(r) || delete r.identity, r;
  }
}
class LYe extends pr {
  constructor() {
    super(...arguments), (this.model = xYe);
  }
  get dbName() {
    return "telnet_configs";
  }
  get useInResetPassword() {
    return !1;
  }
  get nameOfSetInSync() {
    return en.TELNET_CONFIGS;
  }
  async migrate() {
    const e = new Ns(this.dbName);
    e.version(0.1).stores({
      telnet_configs: "++local_id,&local_id,&id,status",
    });
    const n = await e.table(this.dbName).toArray();
    e.close(), await pue("telnet_config_identities", "telnet_config", n);
  }
  prepareForSync(e, n) {
    var a;
    const r = e;
    return (
      !n &&
        !((a = r == null ? void 0 : r.identity) != null && a.is_shared) &&
        delete r.identity,
      r
    );
  }
}
const hue = new LYe();
class fue extends pr {
  get dbVersion() {
    return 4;
  }
  get useInResetPassword() {
    return !1;
  }
  get useInDeactivateTeam() {
    return !1;
  }
  async collectConfigIdentityGarbage(e, n) {
    const r = this.filter(
      (a) => jm(a) && !(Xc(a, e, n) && Xc(a, "identity", due))
    );
    await Promise.all(r.map(Vm));
  }
}
class mue extends fue {
  constructor() {
    super(...arguments), (this.model = AYe);
  }
  async collectGarbage() {
    await this.collectConfigIdentityGarbage("ssh_config", a_);
  }
}
class MYe extends mue {
  constructor() {
    super(...arguments),
      (this.dbName = "ssh_config_identities"),
      (this.nameOfSetInSync = en.SSH_CONFIG_IDENTITY);
  }
}
const DYe = new MYe();
class GYe extends mue {
  constructor() {
    super(...arguments),
      (this.dbName = "ssh_config_identities_shared"),
      (this.nameOfSetInSync = en.SSH_CONFIG_IDENTITY_SHARED);
  }
}
const FYe = new GYe();
class Sue extends fue {
  constructor() {
    super(...arguments), (this.model = OYe);
  }
  async collectGarbage() {
    await this.collectConfigIdentityGarbage("telnet_config", hue);
  }
}
class UYe extends Sue {
  constructor() {
    super(...arguments),
      (this.dbName = "telnet_config_identities"),
      (this.nameOfSetInSync = en.TELNET_CONFIG_IDENTITY);
  }
}
const KYe = new UYe();
class BYe extends Sue {
  constructor() {
    super(...arguments),
      (this.dbName = "telnet_config_identities_shared"),
      (this.nameOfSetInSync = en.TELNET_CONFIG_IDENTITY_SHARED);
  }
}
const VYe = new BYe();
class jYe extends cs {
  get entityName() {}
  isShouldBeInPostBulkRequestData() {
    return !1;
  }
  get cryptoFields() {
    return ["token"];
  }
  get plainFields() {
    return [];
  }
}
class zYe extends Bm {
  constructor() {
    super(...arguments), (this.model = jYe);
  }
  get dbName() {
    return "digital_ocean_configs";
  }
  get dbVersion() {
    return 1;
  }
  get useInResetPassword() {
    return !1;
  }
}
const $Ye = new zYe();
function yue(t) {
  return (e) => {
    const n = t.get(e.local_id);
    if (n == null) return;
    (e.is_shared = n.is_shared), (e.credentials_mode = n.credentials_mode);
    const { status: r } = e;
    e.status = r === Qu ? jg : r;
  };
}
function gue(t, e) {
  return e.is_shared && e.credentials_mode == null
    ? t.get("credentials_mode")
    : e.credentials_mode;
}
class WYe extends cs {
  get entityName() {
    return "Group";
  }
  get cryptoFields() {
    return ["label"];
  }
  get commonFields() {
    return [...super.commonFields, "sharing_mode", "credentials_mode"];
  }
  get relationsInBulk() {
    return {
      parent_group: { required: !1, set_name: en.GROUPS, collection: "groups" },
      ssh_config: {
        required: !1,
        set_name: en.SSH_CONFIGS,
        collection: "ssh_configs",
      },
      telnet_config: {
        required: !1,
        set_name: en.TELNET_CONFIGS,
        collection: "telnet_configs",
      },
    };
  }
  getReEncrypted(e, n) {
    const r = super.getReEncrypted(e, n);
    if (r.ssh_config) {
      const a = a_.findById(r.ssh_config);
      a && (r.ssh_config = a.getReEncrypted(e, n));
    }
    return r;
  }
  saveSyncResponse(e) {
    const n = { ...e, credentials_mode: gue(this, e) };
    super.saveSyncResponse(n);
  }
}
class qYe extends pr {
  constructor() {
    super(...arguments), (this.model = WYe);
  }
  get dbName() {
    return "groups";
  }
  get nameOfSetInSync() {
    return en.GROUPS;
  }
  async saveSyncData(e, n, r, a) {
    await super.saveSyncData(e, n, r, a);
    for (const s of e.data) {
      const i = this.findByRemoteId(s.id);
      i == null || i.updateRelationsData(s, r);
    }
    await this.save(), await this.fetch({ do_not_encrypt: !0 });
  }
  async migrateToCredentialsMode(e) {
    return this.modifySome((n) => e.has(n.local_id), yue(e));
  }
  findBySshConfig(e) {
    return this.find((n) => {
      var r;
      return (
        ((r = n.get("ssh_config")) == null ? void 0 : r.local_id) === e.local_id
      );
    });
  }
  findByTelnetConfig(e) {
    return this.find((n) => {
      var r;
      return (
        ((r = n.get("telnet_config")) == null ? void 0 : r.local_id) ===
        e.local_id
      );
    });
  }
}
const YYe = new qYe();
class XYe extends cs {
  get entityName() {}
  isShouldBeInPostBulkRequestData() {
    return !1;
  }
  get cryptoFields() {
    return ["label", "public_key", "storage"];
  }
}
class QYe extends Bm {
  constructor() {
    super(...arguments), (this.model = XYe);
  }
  get dbName() {
    return "hardware_keys";
  }
  get dbVersion() {
    return 1;
  }
  get useInResetPassword() {
    return !1;
  }
}
const JYe = new QYe();
class ZYe extends cs {
  get entityName() {
    return "Connection";
  }
  get cryptoFields() {
    return ["script"];
  }
}
class eXe extends Bm {
  constructor() {
    super(...arguments), (this.model = ZYe);
  }
  get dbName() {
    return "history_commands";
  }
  get dbVersion() {
    return 1;
  }
  get useInResetPassword() {
    return !1;
  }
}
const tXe = new eXe();
class nXe extends cs {
  get entityName() {}
  get commonFields() {
    return ["ssh_config", "hosts_chain"].concat(super.commonFields);
  }
}
class sXe extends pr {
  constructor() {
    super(...arguments), (this.model = nXe);
  }
  get dbName() {
    return "host_chains";
  }
  get nameOfSetInSync() {
    return en.HOST_CHAINS;
  }
  get useInResetPassword() {
    return !1;
  }
  get useInDeactivateTeam() {
    return !1;
  }
  async collectGarbage() {
    const e = this.filter((n) => jm(n) && !aXe(n));
    await Promise.all(e.map(Vm));
  }
}
const rXe = new sXe();
function aXe(t) {
  return lYe(t, "ssh_config", "sshconfig_set", a_);
}
class iXe extends cs {
  get entityName() {}
  isShouldBeInPostBulkRequestData() {
    return !1;
  }
}
class oXe extends Bm {
  constructor() {
    super(...arguments), (this.model = iXe);
  }
  get dbName() {
    return "host_latest_activities";
  }
}
const uXe = new oXe();
class lXe extends cs {
  get entityName() {}
  get relationsInBulk() {
    return {
      host: { required: !0, set_name: en.HOSTS, collection: "hosts" },
      snippet: { required: !0, set_name: en.SNIPPETS, collection: "snippets" },
    };
  }
}
class cXe extends cs {
  get entityName() {
    return "Host";
  }
  get cryptoFields() {
    return ["address", "label", "cloud_instance_id", "cloud_instance_type"];
  }
  get plainFields() {
    return ["backspace", "interaction_date", "ip_version", "os_name"];
  }
  get relationsInBulk() {
    return {
      group: { required: !1, set_name: en.GROUPS, collection: "groups" },
      ssh_config: {
        required: !1,
        set_name: en.SSH_CONFIGS,
        collection: "ssh_configs",
      },
      telnet_config: {
        required: !1,
        set_name: en.TELNET_CONFIGS,
        collection: "telnet_configs",
      },
    };
  }
  get commonFields() {
    return [...super.commonFields, "credentials_mode"];
  }
  getReEncrypted(e, n) {
    const r = super.getReEncrypted(e, n);
    if (r.ssh_config) {
      const a = a_.findById(r.ssh_config);
      a && (r.ssh_config = a.getReEncrypted(e, n));
    }
    return r;
  }
  saveSyncResponse(e) {
    const n = { ...e, credentials_mode: gue(this, e) };
    super.saveSyncResponse(n);
  }
}
class dXe extends pr {
  constructor() {
    super(...arguments), (this.model = cXe);
  }
  get dbName() {
    return "hosts";
  }
  get nameOfSetInSync() {
    return en.HOSTS;
  }
  async migrateToCredentialsMode(e) {
    return this.modifySome((n) => e.has(n.local_id), yue(e));
  }
  findBySshConfig(e) {
    return this.find((n) => {
      var r;
      return (
        ((r = n.get("ssh_config")) == null ? void 0 : r.local_id) === e.local_id
      );
    });
  }
  findByTelnetConfig(e) {
    return this.find((n) => {
      var r;
      return (
        ((r = n.get("telnet_config")) == null ? void 0 : r.local_id) ===
        e.local_id
      );
    });
  }
}
const aI = new dXe();
class pXe extends cs {
  get entityName() {
    return "Snippet";
  }
  get cryptoFields() {
    return ["label", "script"];
  }
  get relationsInBulk() {
    return {
      package: {
        required: !1,
        set_name: en.SNIPPETS_PACKAGES,
        collection: "snippets_packages",
      },
    };
  }
  get plainFields() {
    return ["auto_close"];
  }
}
class hXe extends pr {
  constructor() {
    super(...arguments), (this.model = pXe);
  }
  get dbName() {
    return "snippets";
  }
  get nameOfSetInSync() {
    return en.SNIPPETS;
  }
}
const vue = new hXe();
class fXe extends pr {
  constructor() {
    super(...arguments), (this.model = lXe);
  }
  get dbName() {
    return "host_snippets";
  }
  get useInResetPassword() {
    return !1;
  }
  get useInDeactivateTeam() {
    return !1;
  }
  get nameOfSetInSync() {
    return en.HOST_SNIPPETS;
  }
  async collectGarbage() {
    const e = this.filter(
      (n) => jm(n) && !(Xc(n, "host", aI) && Xc(n, "snippet", vue))
    );
    await Promise.all(e.map(Vm));
  }
  findBySnippet(e) {
    return this.filter((n) => {
      var r;
      return ((r = n.get("snippet")) == null ? void 0 : r.local_id) === e;
    });
  }
}
const mXe = new fXe();
class SXe extends cs {
  get entityName() {
    return "PrivateKey";
  }
  get cryptoFields() {
    return ["label", "passphrase", "private_key", "public_key"];
  }
}
class yXe extends pr {
  constructor() {
    super(...arguments), (this.model = SXe);
  }
  get dbName() {
    return "keys";
  }
  get nameOfSetInSync() {
    return en.SSH_KEYS;
  }
  shouldSyncRaw(e, n) {
    return n.syncKeysAndIdentities ? !0 : !!e.is_shared;
  }
}
const _ue = new yXe();
class gXe extends cs {
  get entityName() {
    return "KnownHost";
  }
  get cryptoFields() {
    return ["hostnames", "key"];
  }
}
class vXe extends pr {
  constructor() {
    super(...arguments), (this.model = gXe);
  }
  get dbName() {
    return "known_hosts";
  }
  get nameOfSetInSync() {
    return en.KNOWN_HOSTS;
  }
}
const _Xe = new vXe();
class bXe extends cs {
  get entityName() {
    return "MultiKey";
  }
  get cryptoFields() {
    return ["username"];
  }
}
class EXe extends pr {
  constructor() {
    super(...arguments), (this.model = bXe);
  }
  get dbName() {
    return "multi_keys";
  }
  get nameOfSetInSync() {
    return en.MULTI_KEY;
  }
}
const TXe = new EXe();
class wXe extends cs {
  get entityName() {
    return "PortForwardingRule";
  }
  get cryptoFields() {
    return ["hostname"];
  }
  get sodiumCryptoFields() {
    return ["label"];
  }
  get plainFields() {
    return ["bound_address", "local_port", "pf_type", "remote_port"];
  }
  get relationsInBulk() {
    return { host: { required: !0, set_name: en.HOSTS, collection: "hosts" } };
  }
}
class PXe extends pr {
  constructor() {
    super(...arguments), (this.model = wXe);
  }
  get dbName() {
    return "pf_rules";
  }
  get nameOfSetInSync() {
    return en.PF_RULES;
  }
  async collectGarbage() {
    const e = this.filter((n) => jm(n) && !Xc(n, "host", aI));
    await Promise.all(e.map(Vm));
  }
}
const IXe = new PXe();
class CXe extends cs {
  get entityName() {
    return "PortKnockingRule";
  }
  get cryptoFields() {
    return ["knocking", "label"];
  }
  get relationsInBulk() {
    return { host: { required: !1, set_name: en.HOSTS, collection: "hosts" } };
  }
}
class AXe extends pr {
  constructor() {
    super(...arguments), (this.model = CXe);
  }
  get dbName() {
    return "port_knockings";
  }
  get nameOfSetInSync() {
    return en.PORT_KNOCKINGS;
  }
}
const OXe = new AXe();
let HXe = class extends cs {
  get entityName() {
    return "Proxy";
  }
  get cryptoFields() {
    return ["hostname"];
  }
  get plainFields() {
    return ["port", "type"];
  }
  get relationsInBulk() {
    return {
      identity: {
        required: !1,
        set_name: en.IDENTITIES,
        collection: "identities",
      },
    };
  }
  buildPushData(e, n) {
    const r = super.buildPushData(e, n);
    return (
      sn.is(r) ||
        (!e.syncKeysAndIdentities && !r.is_shared && delete r.identity),
      r
    );
  }
};
class NXe extends pr {
  constructor() {
    super(...arguments), (this.model = HXe);
  }
  get dbName() {
    return "proxies";
  }
  get nameOfSetInSync() {
    return en.PROXIES;
  }
  prepareForSync(e, n) {
    const r = e;
    return !n && !(r != null && r.is_shared) && delete r.identity, r;
  }
}
const RXe = new NXe();
class kXe extends cs {
  get entityName() {
    return "SnippetPackage";
  }
  get cryptoFields() {
    return ["label"];
  }
}
class xXe extends pr {
  constructor() {
    super(...arguments), (this.model = kXe);
  }
  get dbName() {
    return "snippets_packages";
  }
  get dbVersion() {
    return 2;
  }
  get nameOfSetInSync() {
    return en.SNIPPETS_PACKAGES;
  }
  async migrate(e) {
    const n = this.dbName,
      r = new Ns(n);
    r.version(0.1).stores({ [n]: "++local_id,&local_id,&id,status" }),
      r
        .version(0.2)
        .stores({ [n]: "++local_id,&local_id,&id,status" })
        .upgrade((a) =>
          a
            .table(n)
            .filter((s) => {
              if (s.analytics_id !== "Network Engineer") return !1;
              const i = e == null ? void 0 : e.decrypt(s.label);
              return typeof i == "string" && i.includes("DevOps");
            })
            .modify((s) => {
              s.analytics_id = "DevOps";
            })
        ),
      await r.open(),
      r.close();
  }
}
const LXe = new xXe();
class MXe extends cs {
  get entityName() {}
  get cryptoFields() {
    return ["certificate", "label"];
  }
  get relationsInBulk() {
    return {
      ssh_key: { required: !0, set_name: en.SSH_KEYS, collection: "ssh_keys" },
    };
  }
}
class DXe extends pr {
  constructor() {
    super(...arguments), (this.model = MXe);
  }
  get dbName() {
    return "ssh_certificates";
  }
  get nameOfSetInSync() {
    return en.SSH_CERTIFICATES;
  }
  shouldSyncRaw(e, n) {
    return n.syncKeysAndIdentities ? !0 : !!e.is_shared;
  }
  async collectGarbage() {
    const e = this.filter((n) => jm(n) && !Xc(n, "ssh_key", _ue));
    await Promise.all(e.map(Vm));
  }
}
const GXe = new DXe();
class FXe extends cs {
  get entityName() {}
  get relationsInBulk() {
    return {
      host: { required: !0, set_name: en.HOSTS, collection: "hosts" },
      tag: { required: !0, set_name: en.TAGS, collection: "tags" },
    };
  }
}
class UXe extends cs {
  get entityName() {
    return "Tag";
  }
  get cryptoFields() {
    return ["label"];
  }
}
class KXe extends pr {
  constructor() {
    super(...arguments), (this.model = UXe);
  }
  get dbName() {
    return "tags";
  }
  get nameOfSetInSync() {
    return en.TAGS;
  }
}
const bue = new KXe();
class BXe extends pr {
  constructor() {
    super(...arguments), (this.model = FXe);
  }
  get dbName() {
    return "tag_hosts";
  }
  get useInResetPassword() {
    return !1;
  }
  get useInDeactivateTeam() {
    return !1;
  }
  get nameOfSetInSync() {
    return en.TAGHOSTS;
  }
  findByHostAndTag(e, n) {
    return this.find(
      (r) =>
        r.get("tag") &&
        r.get("host") &&
        r.get("host").local_id === e &&
        r.get("tag").local_id === n
    );
  }
  async collectGarbage() {
    const e = this.filter(
      (n) => jm(n) && !(Xc(n, "tag", bue) && Xc(n, "host", aI))
    );
    await Promise.all(e.map(Vm));
  }
  findByHost(e) {
    return this.filter((n) => n.get("host") && n.get("host").local_id === e);
  }
  findByTag(e) {
    return this.filter((n) => n.get("tag") && n.get("tag").local_id === e);
  }
}
const VXe = new BXe(),
  jXe = {
    ssh_configs: a_,
    telnet_configs: hue,
    groups: YYe,
    hosts: aI,
    ssh_keys: _ue,
    taghosts: VXe,
    identities: due,
    tags: bue,
    snippets_packages: LXe,
    snippets: vue,
    pf_rules: IXe,
    port_knockings: OXe,
    known_hosts: _Xe,
    host_snippets: mXe,
    host_chains: rXe,
    proxies: RXe,
    host_latest_activities: uXe,
    ssh_config_identities: DYe,
    ssh_config_identities_shared: FYe,
    telnet_config_identities: KYe,
    telnet_config_identities_shared: VYe,
    multi_keys: TXe,
    aws_configs: wYe,
    hardware_keys: JYe,
    digital_ocean_configs: $Ye,
    azure_configs: CYe,
    ssh_certificates: GXe,
    history_commands: tXe,
  };
function Eue(t = {}) {
  const { forceProd: e = !1 } = t;
  return "https://api.termius.com";
}
const jr = {
    UNKNOWN: 0,
    INVALID_ARGUMENT: 1,
    UNAUTHENTICATED: 2,
    OTP_TOKEN_REQUIRED: 3,
    THROTTLED: 4,
    DELETION_IS_SCHEDULED: 5,
    APP_OUTDATED: 6,
    NOT_MIGRATED: 7,
    INVALID_PROOF: 8,
    INVALID_PUBLIC_DATA: 9,
    OTP_TOKEN_ERROR: 10,
    INACTIVE_TRIAL: 11,
    LOGIN_APPROVE_REQUIRED: 12,
  },
  zXe = {
    UNKNOWN_MOBILE_TYPE: 0,
    IPHONE: 1,
    GOOGLE: 2,
    DESKTOP: 3,
    ACCOUNTMANAGEMENT: 4,
  };
class li extends Error {
  constructor() {
    super(...arguments), (this.name = "InternalGRPCError");
  }
}
Ll(li);
const Tue = (t, e) => Nl(X6(t, e), (n) => (ad(n) ? Tue(n, e) : n)),
  ei = {
    SIGNUP_UNKNOWN: 0,
    SIGNUP_INVALID_RECAPTCHA: 1,
    SIGNUP_INVALID_SSO_TOKEN: 2,
    SIGNUP_USER_ALREADY_EXISTS: 3,
    SIGNUP_INTEGRITY_CHECK_FAILED: 4,
    SIGNUP_EMAIL_VERIFICATION_FAILED: 5,
  };
class lu extends Error {
  constructor() {
    super(...arguments), (this.name = "GRPCResponseError");
  }
  static fromResponseError({ code: e, message: n, details: r }) {
    const a = this.convertGRPCErrorMessageToRest(e, n || r || ""),
      s = new lu(a);
    return (s.status = this.convertGRPCErrorCodeToRestStatus(e)), s;
  }
  static fromSignUpResponseError({ code: e, message: n, details: r }) {
    const a = this.convertGRPCSignUpErrorMessageToRest(e, n || r || ""),
      s = new lu(a);
    return (s.status = this.convertGRPCSignUpErrorCodeToRestStatus(e)), s;
  }
  static convertGRPCErrorCodeToRestStatus(e) {
    switch (e) {
      case jr.INVALID_ARGUMENT:
        return 400;
      case jr.OTP_TOKEN_REQUIRED:
      case jr.OTP_TOKEN_ERROR:
        return 487;
      case jr.DELETION_IS_SCHEDULED:
        return 488;
      case jr.APP_OUTDATED:
        return 490;
      case jr.INVALID_PROOF:
      case jr.INACTIVE_TRIAL:
        return 401;
      case jr.UNAUTHENTICATED:
        return 408;
      case jr.THROTTLED:
        return 429;
      case jr.LOGIN_APPROVE_REQUIRED:
        return 403;
      default:
        return 0;
    }
  }
  static convertGRPCSignUpErrorCodeToRestStatus(e) {
    switch (e) {
      case ei.SIGNUP_UNKNOWN:
      case ei.SIGNUP_INVALID_RECAPTCHA:
      case ei.SIGNUP_INVALID_SSO_TOKEN:
      case ei.SIGNUP_USER_ALREADY_EXISTS:
      case ei.SIGNUP_INTEGRITY_CHECK_FAILED:
      case ei.SIGNUP_EMAIL_VERIFICATION_FAILED:
        return 400;
      default:
        return 0;
    }
  }
  static convertGRPCErrorMessageToRest(e, n) {
    return [
      jr.UNKNOWN,
      jr.INVALID_ARGUMENT,
      jr.NOT_MIGRATED,
      jr.INVALID_PUBLIC_DATA,
    ].includes(e)
      ? "Something went wrong, try again."
      : n;
  }
  static convertGRPCSignUpErrorMessageToRest(e, n) {
    switch (e) {
      case ei.SIGNUP_INVALID_RECAPTCHA:
        return "Invalid reCAPTCHA";
      case ei.SIGNUP_INVALID_SSO_TOKEN:
        return "Invalid SSO token";
      case ei.SIGNUP_USER_ALREADY_EXISTS:
        return "User already exists";
      case ei.SIGNUP_INTEGRITY_CHECK_FAILED:
        return "Integrity check failed";
      case ei.SIGNUP_EMAIL_VERIFICATION_FAILED:
        return "Email verification failed";
      case ei.SIGNUP_UNKNOWN:
      default:
        return n;
    }
  }
}
Ll(lu);
class $Xe {
  constructor() {
    (this.generateVerifier = ({ identifier: e, password: n, salt: r }) => {
      const a = new wH(e, n, Buffer.from(r, "base64"));
      return (this.srpClient = a), { verifier: a.generateVerifier() };
    }),
      (this.generateClientProof = ({
        identifier: e,
        password: n,
        salt: r,
        publicData: a,
      }) => {
        const s = new wH(e, n, Buffer.from(r, "base64"));
        if (
          ((this.srpClient = s),
          s.generateVerifier(),
          !s.session.agreeServerPublicValue(a))
        )
          throw new Error("Server public value is invalid");
        const i = s.session.getPublicValue(),
          o = s.session.generateProof();
        return { public_data: i, proof: o };
      }),
      (this.mapErrorResponseToAppError = (e) =>
        e.code === jr.NOT_MIGRATED
          ? new Aw()
          : Object.keys(ei).includes(e.key ?? "")
          ? lu.fromSignUpResponseError(e)
          : lu.fromResponseError(e)),
      (this.mapStreamErrorToAppError = (e) =>
        e.code === 8
          ? lu.fromResponseError({
              code: jr.THROTTLED,
              message: e.details || e.message || "",
            })
          : new li(e.details)),
      (this.checkServerProof = (e) => {
        var n;
        if (!((n = this.srpClient) != null && n.session.validateServerProof(e)))
          throw new li("Server proof is invalid");
        return !0;
      }),
      (this.srpClient = null);
  }
}
const Eu = Object.create(null);
Eu.open = "0";
Eu.close = "1";
Eu.ping = "2";
Eu.pong = "3";
Eu.message = "4";
Eu.upgrade = "5";
Eu.noop = "6";
const CE = Object.create(null);
Object.keys(Eu).forEach((t) => {
  CE[Eu[t]] = t;
});
const WXe = { type: "error", data: "parser error" },
  qXe =
    typeof Blob == "function" ||
    (typeof Blob < "u" &&
      Object.prototype.toString.call(Blob) === "[object BlobConstructor]"),
  YXe = typeof ArrayBuffer == "function",
  XXe = (t) =>
    typeof ArrayBuffer.isView == "function"
      ? ArrayBuffer.isView(t)
      : t && t.buffer instanceof ArrayBuffer,
  wue = ({ type: t, data: e }, n, r) =>
    qXe && e instanceof Blob
      ? n
        ? r(e)
        : OU(e, r)
      : YXe && (e instanceof ArrayBuffer || XXe(e))
      ? n
        ? r(e)
        : OU(new Blob([e]), r)
      : r(Eu[t] + (e || "")),
  OU = (t, e) => {
    const n = new FileReader();
    return (
      (n.onload = function () {
        const r = n.result.split(",")[1];
        e("b" + (r || ""));
      }),
      n.readAsDataURL(t)
    );
  },
  HU = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
  ey = typeof Uint8Array > "u" ? [] : new Uint8Array(256);
for (let t = 0; t < HU.length; t++) ey[HU.charCodeAt(t)] = t;
const QXe = (t) => {
    let e = t.length * 0.75,
      n = t.length,
      r,
      a = 0,
      s,
      i,
      o,
      u;
    t[t.length - 1] === "=" && (e--, t[t.length - 2] === "=" && e--);
    const l = new ArrayBuffer(e),
      c = new Uint8Array(l);
    for (r = 0; r < n; r += 4)
      (s = ey[t.charCodeAt(r)]),
        (i = ey[t.charCodeAt(r + 1)]),
        (o = ey[t.charCodeAt(r + 2)]),
        (u = ey[t.charCodeAt(r + 3)]),
        (c[a++] = (s << 2) | (i >> 4)),
        (c[a++] = ((i & 15) << 4) | (o >> 2)),
        (c[a++] = ((o & 3) << 6) | (u & 63));
    return l;
  },
  JXe = typeof ArrayBuffer == "function",
  Pue = (t, e) => {
    if (typeof t != "string") return { type: "message", data: Iue(t, e) };
    const n = t.charAt(0);
    return n === "b"
      ? { type: "message", data: ZXe(t.substring(1), e) }
      : CE[n]
      ? t.length > 1
        ? { type: CE[n], data: t.substring(1) }
        : { type: CE[n] }
      : WXe;
  },
  ZXe = (t, e) => {
    if (JXe) {
      const n = QXe(t);
      return Iue(n, e);
    } else return { base64: !0, data: t };
  },
  Iue = (t, e) => {
    switch (e) {
      case "blob":
        return t instanceof ArrayBuffer ? new Blob([t]) : t;
      case "arraybuffer":
      default:
        return t;
    }
  },
  Cue = String.fromCharCode(30),
  eQe = (t, e) => {
    const n = t.length,
      r = new Array(n);
    let a = 0;
    t.forEach((s, i) => {
      wue(s, !1, (o) => {
        (r[i] = o), ++a === n && e(r.join(Cue));
      });
    });
  },
  tQe = (t, e) => {
    const n = t.split(Cue),
      r = [];
    for (let a = 0; a < n.length; a++) {
      const s = Pue(n[a], e);
      if ((r.push(s), s.type === "error")) break;
    }
    return r;
  },
  Aue = 4;
function cr(t) {
  if (t) return nQe(t);
}
function nQe(t) {
  for (var e in cr.prototype) t[e] = cr.prototype[e];
  return t;
}
cr.prototype.on = cr.prototype.addEventListener = function (t, e) {
  return (
    (this._callbacks = this._callbacks || {}),
    (this._callbacks["$" + t] = this._callbacks["$" + t] || []).push(e),
    this
  );
};
cr.prototype.once = function (t, e) {
  function n() {
    this.off(t, n), e.apply(this, arguments);
  }
  return (n.fn = e), this.on(t, n), this;
};
cr.prototype.off =
  cr.prototype.removeListener =
  cr.prototype.removeAllListeners =
  cr.prototype.removeEventListener =
    function (t, e) {
      if (((this._callbacks = this._callbacks || {}), arguments.length == 0))
        return (this._callbacks = {}), this;
      var n = this._callbacks["$" + t];
      if (!n) return this;
      if (arguments.length == 1) return delete this._callbacks["$" + t], this;
      for (var r, a = 0; a < n.length; a++)
        if (((r = n[a]), r === e || r.fn === e)) {
          n.splice(a, 1);
          break;
        }
      return n.length === 0 && delete this._callbacks["$" + t], this;
    };
cr.prototype.emit = function (t) {
  this._callbacks = this._callbacks || {};
  for (
    var e = new Array(arguments.length - 1),
      n = this._callbacks["$" + t],
      r = 1;
    r < arguments.length;
    r++
  )
    e[r - 1] = arguments[r];
  if (n) {
    n = n.slice(0);
    for (var r = 0, a = n.length; r < a; ++r) n[r].apply(this, e);
  }
  return this;
};
cr.prototype.emitReserved = cr.prototype.emit;
cr.prototype.listeners = function (t) {
  return (
    (this._callbacks = this._callbacks || {}), this._callbacks["$" + t] || []
  );
};
cr.prototype.hasListeners = function (t) {
  return !!this.listeners(t).length;
};
const Ai = (() =>
  typeof self < "u"
    ? self
    : typeof window < "u"
    ? window
    : Function("return this")())();
function Oue(t, ...e) {
  return e.reduce((n, r) => (t.hasOwnProperty(r) && (n[r] = t[r]), n), {});
}
const sQe = Ai.setTimeout,
  rQe = Ai.clearTimeout;
function iI(t, e) {
  e.useNativeTimers
    ? ((t.setTimeoutFn = sQe.bind(Ai)), (t.clearTimeoutFn = rQe.bind(Ai)))
    : ((t.setTimeoutFn = Ai.setTimeout.bind(Ai)),
      (t.clearTimeoutFn = Ai.clearTimeout.bind(Ai)));
}
const aQe = 1.33;
function iQe(t) {
  return typeof t == "string"
    ? oQe(t)
    : Math.ceil((t.byteLength || t.size) * aQe);
}
function oQe(t) {
  let e = 0,
    n = 0;
  for (let r = 0, a = t.length; r < a; r++)
    (e = t.charCodeAt(r)),
      e < 128
        ? (n += 1)
        : e < 2048
        ? (n += 2)
        : e < 55296 || e >= 57344
        ? (n += 3)
        : (r++, (n += 4));
  return n;
}
class uQe extends Error {
  constructor(e, n, r) {
    super(e),
      (this.description = n),
      (this.context = r),
      (this.type = "TransportError");
  }
}
class Hue extends cr {
  constructor(e) {
    super(),
      (this.writable = !1),
      iI(this, e),
      (this.opts = e),
      (this.query = e.query),
      (this.socket = e.socket);
  }
  onError(e, n, r) {
    return super.emitReserved("error", new uQe(e, n, r)), this;
  }
  open() {
    return (this.readyState = "opening"), this.doOpen(), this;
  }
  close() {
    return (
      (this.readyState === "opening" || this.readyState === "open") &&
        (this.doClose(), this.onClose()),
      this
    );
  }
  send(e) {
    this.readyState === "open" && this.write(e);
  }
  onOpen() {
    (this.readyState = "open"),
      (this.writable = !0),
      super.emitReserved("open");
  }
  onData(e) {
    const n = Pue(e, this.socket.binaryType);
    this.onPacket(n);
  }
  onPacket(e) {
    super.emitReserved("packet", e);
  }
  onClose(e) {
    (this.readyState = "closed"), super.emitReserved("close", e);
  }
  pause(e) {}
}
const Nue =
    "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_".split(
      ""
    ),
  IH = 64,
  lQe = {};
let NU = 0,
  fb = 0,
  RU;
function kU(t) {
  let e = "";
  do (e = Nue[t % IH] + e), (t = Math.floor(t / IH));
  while (t > 0);
  return e;
}
function Rue() {
  const t = kU(+new Date());
  return t !== RU ? ((NU = 0), (RU = t)) : t + "." + kU(NU++);
}
for (; fb < IH; fb++) lQe[Nue[fb]] = fb;
function kue(t) {
  let e = "";
  for (let n in t)
    t.hasOwnProperty(n) &&
      (e.length && (e += "&"),
      (e += encodeURIComponent(n) + "=" + encodeURIComponent(t[n])));
  return e;
}
function cQe(t) {
  let e = {},
    n = t.split("&");
  for (let r = 0, a = n.length; r < a; r++) {
    let s = n[r].split("=");
    e[decodeURIComponent(s[0])] = decodeURIComponent(s[1]);
  }
  return e;
}
let xue = !1;
try {
  xue =
    typeof XMLHttpRequest < "u" && "withCredentials" in new XMLHttpRequest();
} catch {}
const dQe = xue;
function Lue(t) {
  const e = t.xdomain;
  try {
    if (typeof XMLHttpRequest < "u" && (!e || dQe)) return new XMLHttpRequest();
  } catch {}
  if (!e)
    try {
      return new Ai[["Active"].concat("Object").join("X")]("Microsoft.XMLHTTP");
    } catch {}
}
function pQe() {}
const hQe = (function () {
  return new Lue({ xdomain: !1 }).responseType != null;
})();
class fQe extends Hue {
  constructor(e) {
    if ((super(e), (this.polling = !1), typeof location < "u")) {
      const r = location.protocol === "https:";
      let a = location.port;
      a || (a = r ? "443" : "80"),
        (this.xd =
          (typeof location < "u" && e.hostname !== location.hostname) ||
          a !== e.port),
        (this.xs = e.secure !== r);
    }
    const n = e && e.forceBase64;
    this.supportsBinary = hQe && !n;
  }
  get name() {
    return "polling";
  }
  doOpen() {
    this.poll();
  }
  pause(e) {
    this.readyState = "pausing";
    const n = () => {
      (this.readyState = "paused"), e();
    };
    if (this.polling || !this.writable) {
      let r = 0;
      this.polling &&
        (r++,
        this.once("pollComplete", function () {
          --r || n();
        })),
        this.writable ||
          (r++,
          this.once("drain", function () {
            --r || n();
          }));
    } else n();
  }
  poll() {
    (this.polling = !0), this.doPoll(), this.emitReserved("poll");
  }
  onData(e) {
    const n = (r) => {
      if (
        (this.readyState === "opening" && r.type === "open" && this.onOpen(),
        r.type === "close")
      )
        return (
          this.onClose({ description: "transport closed by the server" }), !1
        );
      this.onPacket(r);
    };
    tQe(e, this.socket.binaryType).forEach(n),
      this.readyState !== "closed" &&
        ((this.polling = !1),
        this.emitReserved("pollComplete"),
        this.readyState === "open" && this.poll());
  }
  doClose() {
    const e = () => {
      this.write([{ type: "close" }]);
    };
    this.readyState === "open" ? e() : this.once("open", e);
  }
  write(e) {
    (this.writable = !1),
      eQe(e, (n) => {
        this.doWrite(n, () => {
          (this.writable = !0), this.emitReserved("drain");
        });
      });
  }
  uri() {
    let e = this.query || {};
    const n = this.opts.secure ? "https" : "http";
    let r = "";
    this.opts.timestampRequests !== !1 && (e[this.opts.timestampParam] = Rue()),
      !this.supportsBinary && !e.sid && (e.b64 = 1),
      this.opts.port &&
        ((n === "https" && Number(this.opts.port) !== 443) ||
          (n === "http" && Number(this.opts.port) !== 80)) &&
        (r = ":" + this.opts.port);
    const a = kue(e),
      s = this.opts.hostname.indexOf(":") !== -1;
    return (
      n +
      "://" +
      (s ? "[" + this.opts.hostname + "]" : this.opts.hostname) +
      r +
      this.opts.path +
      (a.length ? "?" + a : "")
    );
  }
  request(e = {}) {
    return (
      Object.assign(e, { xd: this.xd, xs: this.xs }, this.opts),
      new mf(this.uri(), e)
    );
  }
  doWrite(e, n) {
    const r = this.request({ method: "POST", data: e });
    r.on("success", n),
      r.on("error", (a, s) => {
        this.onError("xhr post error", a, s);
      });
  }
  doPoll() {
    const e = this.request();
    e.on("data", this.onData.bind(this)),
      e.on("error", (n, r) => {
        this.onError("xhr poll error", n, r);
      }),
      (this.pollXhr = e);
  }
}
let mf = class AE extends cr {
  constructor(e, n) {
    super(),
      iI(this, n),
      (this.opts = n),
      (this.method = n.method || "GET"),
      (this.uri = e),
      (this.async = n.async !== !1),
      (this.data = n.data !== void 0 ? n.data : null),
      this.create();
  }
  create() {
    const e = Oue(
      this.opts,
      "agent",
      "pfx",
      "key",
      "passphrase",
      "cert",
      "ca",
      "ciphers",
      "rejectUnauthorized",
      "autoUnref"
    );
    (e.xdomain = !!this.opts.xd), (e.xscheme = !!this.opts.xs);
    const n = (this.xhr = new Lue(e));
    try {
      n.open(this.method, this.uri, this.async);
      try {
        if (this.opts.extraHeaders) {
          n.setDisableHeaderCheck && n.setDisableHeaderCheck(!0);
          for (let r in this.opts.extraHeaders)
            this.opts.extraHeaders.hasOwnProperty(r) &&
              n.setRequestHeader(r, this.opts.extraHeaders[r]);
        }
      } catch {}
      if (this.method === "POST")
        try {
          n.setRequestHeader("Content-type", "text/plain;charset=UTF-8");
        } catch {}
      try {
        n.setRequestHeader("Accept", "*/*");
      } catch {}
      "withCredentials" in n && (n.withCredentials = this.opts.withCredentials),
        this.opts.requestTimeout && (n.timeout = this.opts.requestTimeout),
        (n.onreadystatechange = () => {
          n.readyState === 4 &&
            (n.status === 200 || n.status === 1223
              ? this.onLoad()
              : this.setTimeoutFn(() => {
                  this.onError(typeof n.status == "number" ? n.status : 0);
                }, 0));
        }),
        n.send(this.data);
    } catch (r) {
      this.setTimeoutFn(() => {
        this.onError(r);
      }, 0);
      return;
    }
    typeof document < "u" &&
      ((this.index = AE.requestsCount++), (AE.requests[this.index] = this));
  }
  onError(e) {
    this.emitReserved("error", e, this.xhr), this.cleanup(!0);
  }
  cleanup(e) {
    if (!(typeof this.xhr > "u" || this.xhr === null)) {
      if (((this.xhr.onreadystatechange = pQe), e))
        try {
          this.xhr.abort();
        } catch {}
      typeof document < "u" && delete AE.requests[this.index],
        (this.xhr = null);
    }
  }
  onLoad() {
    const e = this.xhr.responseText;
    e !== null &&
      (this.emitReserved("data", e),
      this.emitReserved("success"),
      this.cleanup());
  }
  abort() {
    this.cleanup();
  }
};
mf.requestsCount = 0;
mf.requests = {};
if (typeof document < "u") {
  if (typeof attachEvent == "function") attachEvent("onunload", xU);
  else if (typeof addEventListener == "function") {
    const t = "onpagehide" in Ai ? "pagehide" : "unload";
    addEventListener(t, xU, !1);
  }
}
function xU() {
  for (let t in mf.requests)
    mf.requests.hasOwnProperty(t) && mf.requests[t].abort();
}
const Mue = (() =>
    typeof Promise == "function" && typeof Promise.resolve == "function"
      ? (e) => Promise.resolve().then(e)
      : (e, n) => n(e, 0))(),
  mb = Ai.WebSocket || Ai.MozWebSocket,
  LU = !0,
  mQe = "arraybuffer",
  MU =
    typeof navigator < "u" &&
    typeof navigator.product == "string" &&
    navigator.product.toLowerCase() === "reactnative";
class SQe extends Hue {
  constructor(e) {
    super(e), (this.supportsBinary = !e.forceBase64);
  }
  get name() {
    return "websocket";
  }
  doOpen() {
    if (!this.check()) return;
    const e = this.uri(),
      n = this.opts.protocols,
      r = MU
        ? {}
        : Oue(
            this.opts,
            "agent",
            "perMessageDeflate",
            "pfx",
            "key",
            "passphrase",
            "cert",
            "ca",
            "ciphers",
            "rejectUnauthorized",
            "localAddress",
            "protocolVersion",
            "origin",
            "maxPayload",
            "family",
            "checkServerIdentity"
          );
    this.opts.extraHeaders && (r.headers = this.opts.extraHeaders);
    try {
      this.ws = LU && !MU ? (n ? new mb(e, n) : new mb(e)) : new mb(e, n, r);
    } catch (a) {
      return this.emitReserved("error", a);
    }
    (this.ws.binaryType = this.socket.binaryType || mQe),
      this.addEventListeners();
  }
  addEventListeners() {
    (this.ws.onopen = () => {
      this.opts.autoUnref && this.ws._socket.unref(), this.onOpen();
    }),
      (this.ws.onclose = (e) =>
        this.onClose({
          description: "websocket connection closed",
          context: e,
        })),
      (this.ws.onmessage = (e) => this.onData(e.data)),
      (this.ws.onerror = (e) => this.onError("websocket error", e));
  }
  write(e) {
    this.writable = !1;
    for (let n = 0; n < e.length; n++) {
      const r = e[n],
        a = n === e.length - 1;
      wue(r, this.supportsBinary, (s) => {
        const i = {};
        try {
          LU && this.ws.send(s);
        } catch {}
        a &&
          Mue(() => {
            (this.writable = !0), this.emitReserved("drain");
          }, this.setTimeoutFn);
      });
    }
  }
  doClose() {
    typeof this.ws < "u" && (this.ws.close(), (this.ws = null));
  }
  uri() {
    let e = this.query || {};
    const n = this.opts.secure ? "wss" : "ws";
    let r = "";
    this.opts.port &&
      ((n === "wss" && Number(this.opts.port) !== 443) ||
        (n === "ws" && Number(this.opts.port) !== 80)) &&
      (r = ":" + this.opts.port),
      this.opts.timestampRequests && (e[this.opts.timestampParam] = Rue()),
      this.supportsBinary || (e.b64 = 1);
    const a = kue(e),
      s = this.opts.hostname.indexOf(":") !== -1;
    return (
      n +
      "://" +
      (s ? "[" + this.opts.hostname + "]" : this.opts.hostname) +
      r +
      this.opts.path +
      (a.length ? "?" + a : "")
    );
  }
  check() {
    return !!mb;
  }
}
const yQe = { websocket: SQe, polling: fQe },
  gQe =
    /^(?:(?![^:@\/?#]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@\/?#]*)(?::([^:@\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/,
  vQe = [
    "source",
    "protocol",
    "authority",
    "userInfo",
    "user",
    "password",
    "host",
    "port",
    "relative",
    "path",
    "directory",
    "file",
    "query",
    "anchor",
  ];
function CH(t) {
  const e = t,
    n = t.indexOf("["),
    r = t.indexOf("]");
  n != -1 &&
    r != -1 &&
    (t =
      t.substring(0, n) +
      t.substring(n, r).replace(/:/g, ";") +
      t.substring(r, t.length));
  let a = gQe.exec(t || ""),
    s = {},
    i = 14;
  for (; i--; ) s[vQe[i]] = a[i] || "";
  return (
    n != -1 &&
      r != -1 &&
      ((s.source = e),
      (s.host = s.host.substring(1, s.host.length - 1).replace(/;/g, ":")),
      (s.authority = s.authority
        .replace("[", "")
        .replace("]", "")
        .replace(/;/g, ":")),
      (s.ipv6uri = !0)),
    (s.pathNames = _Qe(s, s.path)),
    (s.queryKey = bQe(s, s.query)),
    s
  );
}
function _Qe(t, e) {
  const n = /\/{2,9}/g,
    r = e.replace(n, "/").split("/");
  return (
    (e.slice(0, 1) == "/" || e.length === 0) && r.splice(0, 1),
    e.slice(-1) == "/" && r.splice(r.length - 1, 1),
    r
  );
}
function bQe(t, e) {
  const n = {};
  return (
    e.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function (r, a, s) {
      a && (n[a] = s);
    }),
    n
  );
}
let Due = class _h extends cr {
  constructor(e, n = {}) {
    super(),
      (this.writeBuffer = []),
      e && typeof e == "object" && ((n = e), (e = null)),
      e
        ? ((e = CH(e)),
          (n.hostname = e.host),
          (n.secure = e.protocol === "https" || e.protocol === "wss"),
          (n.port = e.port),
          e.query && (n.query = e.query))
        : n.host && (n.hostname = CH(n.host).host),
      iI(this, n),
      (this.secure =
        n.secure != null
          ? n.secure
          : typeof location < "u" && location.protocol === "https:"),
      n.hostname && !n.port && (n.port = this.secure ? "443" : "80"),
      (this.hostname =
        n.hostname ||
        (typeof location < "u" ? location.hostname : "localhost")),
      (this.port =
        n.port ||
        (typeof location < "u" && location.port
          ? location.port
          : this.secure
          ? "443"
          : "80")),
      (this.transports = n.transports || ["polling", "websocket"]),
      (this.writeBuffer = []),
      (this.prevBufferLen = 0),
      (this.opts = Object.assign(
        {
          path: "/engine.io",
          agent: !1,
          withCredentials: !1,
          upgrade: !0,
          timestampParam: "t",
          rememberUpgrade: !1,
          addTrailingSlash: !0,
          rejectUnauthorized: !0,
          perMessageDeflate: { threshold: 1024 },
          transportOptions: {},
          closeOnBeforeunload: !0,
        },
        n
      )),
      (this.opts.path =
        this.opts.path.replace(/\/$/, "") +
        (this.opts.addTrailingSlash ? "/" : "")),
      typeof this.opts.query == "string" &&
        (this.opts.query = cQe(this.opts.query)),
      (this.id = null),
      (this.upgrades = null),
      (this.pingInterval = null),
      (this.pingTimeout = null),
      (this.pingTimeoutTimer = null),
      typeof addEventListener == "function" &&
        (this.opts.closeOnBeforeunload &&
          ((this.beforeunloadEventListener = () => {
            this.transport &&
              (this.transport.removeAllListeners(), this.transport.close());
          }),
          addEventListener("beforeunload", this.beforeunloadEventListener, !1)),
        this.hostname !== "localhost" &&
          ((this.offlineEventListener = () => {
            this.onClose("transport close", {
              description: "network connection lost",
            });
          }),
          addEventListener("offline", this.offlineEventListener, !1))),
      this.open();
  }
  createTransport(e) {
    const n = Object.assign({}, this.opts.query);
    (n.EIO = Aue), (n.transport = e), this.id && (n.sid = this.id);
    const r = Object.assign({}, this.opts.transportOptions[e], this.opts, {
      query: n,
      socket: this,
      hostname: this.hostname,
      secure: this.secure,
      port: this.port,
    });
    return new yQe[e](r);
  }
  open() {
    let e;
    if (
      this.opts.rememberUpgrade &&
      _h.priorWebsocketSuccess &&
      this.transports.indexOf("websocket") !== -1
    )
      e = "websocket";
    else if (this.transports.length === 0) {
      this.setTimeoutFn(() => {
        this.emitReserved("error", "No transports available");
      }, 0);
      return;
    } else e = this.transports[0];
    this.readyState = "opening";
    try {
      e = this.createTransport(e);
    } catch {
      this.transports.shift(), this.open();
      return;
    }
    e.open(), this.setTransport(e);
  }
  setTransport(e) {
    this.transport && this.transport.removeAllListeners(),
      (this.transport = e),
      e
        .on("drain", this.onDrain.bind(this))
        .on("packet", this.onPacket.bind(this))
        .on("error", this.onError.bind(this))
        .on("close", (n) => this.onClose("transport close", n));
  }
  probe(e) {
    let n = this.createTransport(e),
      r = !1;
    _h.priorWebsocketSuccess = !1;
    const a = () => {
      r ||
        (n.send([{ type: "ping", data: "probe" }]),
        n.once("packet", (d) => {
          if (!r)
            if (d.type === "pong" && d.data === "probe") {
              if (
                ((this.upgrading = !0), this.emitReserved("upgrading", n), !n)
              )
                return;
              (_h.priorWebsocketSuccess = n.name === "websocket"),
                this.transport.pause(() => {
                  r ||
                    (this.readyState !== "closed" &&
                      (c(),
                      this.setTransport(n),
                      n.send([{ type: "upgrade" }]),
                      this.emitReserved("upgrade", n),
                      (n = null),
                      (this.upgrading = !1),
                      this.flush()));
                });
            } else {
              const p = new Error("probe error");
              (p.transport = n.name), this.emitReserved("upgradeError", p);
            }
        }));
    };
    function s() {
      r || ((r = !0), c(), n.close(), (n = null));
    }
    const i = (d) => {
      const p = new Error("probe error: " + d);
      (p.transport = n.name), s(), this.emitReserved("upgradeError", p);
    };
    function o() {
      i("transport closed");
    }
    function u() {
      i("socket closed");
    }
    function l(d) {
      n && d.name !== n.name && s();
    }
    const c = () => {
      n.removeListener("open", a),
        n.removeListener("error", i),
        n.removeListener("close", o),
        this.off("close", u),
        this.off("upgrading", l);
    };
    n.once("open", a),
      n.once("error", i),
      n.once("close", o),
      this.once("close", u),
      this.once("upgrading", l),
      n.open();
  }
  onOpen() {
    if (
      ((this.readyState = "open"),
      (_h.priorWebsocketSuccess = this.transport.name === "websocket"),
      this.emitReserved("open"),
      this.flush(),
      this.readyState === "open" && this.opts.upgrade)
    ) {
      let e = 0;
      const n = this.upgrades.length;
      for (; e < n; e++) this.probe(this.upgrades[e]);
    }
  }
  onPacket(e) {
    if (
      this.readyState === "opening" ||
      this.readyState === "open" ||
      this.readyState === "closing"
    )
      switch (
        (this.emitReserved("packet", e), this.emitReserved("heartbeat"), e.type)
      ) {
        case "open":
          this.onHandshake(JSON.parse(e.data));
          break;
        case "ping":
          this.resetPingTimeout(),
            this.sendPacket("pong"),
            this.emitReserved("ping"),
            this.emitReserved("pong");
          break;
        case "error":
          const n = new Error("server error");
          (n.code = e.data), this.onError(n);
          break;
        case "message":
          this.emitReserved("data", e.data),
            this.emitReserved("message", e.data);
          break;
      }
  }
  onHandshake(e) {
    this.emitReserved("handshake", e),
      (this.id = e.sid),
      (this.transport.query.sid = e.sid),
      (this.upgrades = this.filterUpgrades(e.upgrades)),
      (this.pingInterval = e.pingInterval),
      (this.pingTimeout = e.pingTimeout),
      (this.maxPayload = e.maxPayload),
      this.onOpen(),
      this.readyState !== "closed" && this.resetPingTimeout();
  }
  resetPingTimeout() {
    this.clearTimeoutFn(this.pingTimeoutTimer),
      (this.pingTimeoutTimer = this.setTimeoutFn(() => {
        this.onClose("ping timeout");
      }, this.pingInterval + this.pingTimeout)),
      this.opts.autoUnref && this.pingTimeoutTimer.unref();
  }
  onDrain() {
    this.writeBuffer.splice(0, this.prevBufferLen),
      (this.prevBufferLen = 0),
      this.writeBuffer.length === 0 ? this.emitReserved("drain") : this.flush();
  }
  flush() {
    if (
      this.readyState !== "closed" &&
      this.transport.writable &&
      !this.upgrading &&
      this.writeBuffer.length
    ) {
      const e = this.getWritablePackets();
      this.transport.send(e),
        (this.prevBufferLen = e.length),
        this.emitReserved("flush");
    }
  }
  getWritablePackets() {
    if (
      !(
        this.maxPayload &&
        this.transport.name === "polling" &&
        this.writeBuffer.length > 1
      )
    )
      return this.writeBuffer;
    let n = 1;
    for (let r = 0; r < this.writeBuffer.length; r++) {
      const a = this.writeBuffer[r].data;
      if ((a && (n += iQe(a)), r > 0 && n > this.maxPayload))
        return this.writeBuffer.slice(0, r);
      n += 2;
    }
    return this.writeBuffer;
  }
  write(e, n, r) {
    return this.sendPacket("message", e, n, r), this;
  }
  send(e, n, r) {
    return this.sendPacket("message", e, n, r), this;
  }
  sendPacket(e, n, r, a) {
    if (
      (typeof n == "function" && ((a = n), (n = void 0)),
      typeof r == "function" && ((a = r), (r = null)),
      this.readyState === "closing" || this.readyState === "closed")
    )
      return;
    (r = r || {}), (r.compress = r.compress !== !1);
    const s = { type: e, data: n, options: r };
    this.emitReserved("packetCreate", s),
      this.writeBuffer.push(s),
      a && this.once("flush", a),
      this.flush();
  }
  close() {
    const e = () => {
        this.onClose("forced close"), this.transport.close();
      },
      n = () => {
        this.off("upgrade", n), this.off("upgradeError", n), e();
      },
      r = () => {
        this.once("upgrade", n), this.once("upgradeError", n);
      };
    return (
      (this.readyState === "opening" || this.readyState === "open") &&
        ((this.readyState = "closing"),
        this.writeBuffer.length
          ? this.once("drain", () => {
              this.upgrading ? r() : e();
            })
          : this.upgrading
          ? r()
          : e()),
      this
    );
  }
  onError(e) {
    (_h.priorWebsocketSuccess = !1),
      this.emitReserved("error", e),
      this.onClose("transport error", e);
  }
  onClose(e, n) {
    (this.readyState === "opening" ||
      this.readyState === "open" ||
      this.readyState === "closing") &&
      (this.clearTimeoutFn(this.pingTimeoutTimer),
      this.transport.removeAllListeners("close"),
      this.transport.close(),
      this.transport.removeAllListeners(),
      typeof removeEventListener == "function" &&
        (removeEventListener(
          "beforeunload",
          this.beforeunloadEventListener,
          !1
        ),
        removeEventListener("offline", this.offlineEventListener, !1)),
      (this.readyState = "closed"),
      (this.id = null),
      this.emitReserved("close", e, n),
      (this.writeBuffer = []),
      (this.prevBufferLen = 0));
  }
  filterUpgrades(e) {
    const n = [];
    let r = 0;
    const a = e.length;
    for (; r < a; r++) ~this.transports.indexOf(e[r]) && n.push(e[r]);
    return n;
  }
};
Due.protocol = Aue;
function EQe(t, e = "", n) {
  let r = t;
  (n = n || (typeof location < "u" && location)),
    t == null && (t = n.protocol + "//" + n.host),
    typeof t == "string" &&
      (t.charAt(0) === "/" &&
        (t.charAt(1) === "/" ? (t = n.protocol + t) : (t = n.host + t)),
      /^(https?|wss?):\/\//.test(t) ||
        (typeof n < "u" ? (t = n.protocol + "//" + t) : (t = "https://" + t)),
      (r = CH(t))),
    r.port ||
      (/^(http|ws)$/.test(r.protocol)
        ? (r.port = "80")
        : /^(http|ws)s$/.test(r.protocol) && (r.port = "443")),
    (r.path = r.path || "/");
  const s = r.host.indexOf(":") !== -1 ? "[" + r.host + "]" : r.host;
  return (
    (r.id = r.protocol + "://" + s + ":" + r.port + e),
    (r.href =
      r.protocol + "://" + s + (n && n.port === r.port ? "" : ":" + r.port)),
    r
  );
}
const TQe = typeof ArrayBuffer == "function",
  wQe = (t) =>
    typeof ArrayBuffer.isView == "function"
      ? ArrayBuffer.isView(t)
      : t.buffer instanceof ArrayBuffer,
  Gue = Object.prototype.toString,
  PQe =
    typeof Blob == "function" ||
    (typeof Blob < "u" && Gue.call(Blob) === "[object BlobConstructor]"),
  IQe =
    typeof File == "function" ||
    (typeof File < "u" && Gue.call(File) === "[object FileConstructor]");
function v3(t) {
  return (
    (TQe && (t instanceof ArrayBuffer || wQe(t))) ||
    (PQe && t instanceof Blob) ||
    (IQe && t instanceof File)
  );
}
function OE(t, e) {
  if (!t || typeof t != "object") return !1;
  if (Array.isArray(t)) {
    for (let n = 0, r = t.length; n < r; n++) if (OE(t[n])) return !0;
    return !1;
  }
  if (v3(t)) return !0;
  if (t.toJSON && typeof t.toJSON == "function" && arguments.length === 1)
    return OE(t.toJSON(), !0);
  for (const n in t)
    if (Object.prototype.hasOwnProperty.call(t, n) && OE(t[n])) return !0;
  return !1;
}
function CQe(t) {
  const e = [],
    n = t.data,
    r = t;
  return (
    (r.data = AH(n, e)), (r.attachments = e.length), { packet: r, buffers: e }
  );
}
function AH(t, e) {
  if (!t) return t;
  if (v3(t)) {
    const n = { _placeholder: !0, num: e.length };
    return e.push(t), n;
  } else if (Array.isArray(t)) {
    const n = new Array(t.length);
    for (let r = 0; r < t.length; r++) n[r] = AH(t[r], e);
    return n;
  } else if (typeof t == "object" && !(t instanceof Date)) {
    const n = {};
    for (const r in t)
      Object.prototype.hasOwnProperty.call(t, r) && (n[r] = AH(t[r], e));
    return n;
  }
  return t;
}
function AQe(t, e) {
  return (t.data = OH(t.data, e)), delete t.attachments, t;
}
function OH(t, e) {
  if (!t) return t;
  if (t && t._placeholder === !0) {
    if (typeof t.num == "number" && t.num >= 0 && t.num < e.length)
      return e[t.num];
    throw new Error("illegal attachments");
  } else if (Array.isArray(t))
    for (let n = 0; n < t.length; n++) t[n] = OH(t[n], e);
  else if (typeof t == "object")
    for (const n in t)
      Object.prototype.hasOwnProperty.call(t, n) && (t[n] = OH(t[n], e));
  return t;
}
const OQe = [
    "connect",
    "connect_error",
    "disconnect",
    "disconnecting",
    "newListener",
    "removeListener",
  ],
  HQe = 5;
var Ln;
(function (t) {
  (t[(t.CONNECT = 0)] = "CONNECT"),
    (t[(t.DISCONNECT = 1)] = "DISCONNECT"),
    (t[(t.EVENT = 2)] = "EVENT"),
    (t[(t.ACK = 3)] = "ACK"),
    (t[(t.CONNECT_ERROR = 4)] = "CONNECT_ERROR"),
    (t[(t.BINARY_EVENT = 5)] = "BINARY_EVENT"),
    (t[(t.BINARY_ACK = 6)] = "BINARY_ACK");
})(Ln || (Ln = {}));
class NQe {
  constructor(e) {
    this.replacer = e;
  }
  encode(e) {
    return (e.type === Ln.EVENT || e.type === Ln.ACK) && OE(e)
      ? this.encodeAsBinary({
          type: e.type === Ln.EVENT ? Ln.BINARY_EVENT : Ln.BINARY_ACK,
          nsp: e.nsp,
          data: e.data,
          id: e.id,
        })
      : [this.encodeAsString(e)];
  }
  encodeAsString(e) {
    let n = "" + e.type;
    return (
      (e.type === Ln.BINARY_EVENT || e.type === Ln.BINARY_ACK) &&
        (n += e.attachments + "-"),
      e.nsp && e.nsp !== "/" && (n += e.nsp + ","),
      e.id != null && (n += e.id),
      e.data != null && (n += JSON.stringify(e.data, this.replacer)),
      n
    );
  }
  encodeAsBinary(e) {
    const n = CQe(e),
      r = this.encodeAsString(n.packet),
      a = n.buffers;
    return a.unshift(r), a;
  }
}
function DU(t) {
  return Object.prototype.toString.call(t) === "[object Object]";
}
class _3 extends cr {
  constructor(e) {
    super(), (this.reviver = e);
  }
  add(e) {
    let n;
    if (typeof e == "string") {
      if (this.reconstructor)
        throw new Error("got plaintext data when reconstructing a packet");
      n = this.decodeString(e);
      const r = n.type === Ln.BINARY_EVENT;
      r || n.type === Ln.BINARY_ACK
        ? ((n.type = r ? Ln.EVENT : Ln.ACK),
          (this.reconstructor = new RQe(n)),
          n.attachments === 0 && super.emitReserved("decoded", n))
        : super.emitReserved("decoded", n);
    } else if (v3(e) || e.base64)
      if (this.reconstructor)
        (n = this.reconstructor.takeBinaryData(e)),
          n && ((this.reconstructor = null), super.emitReserved("decoded", n));
      else throw new Error("got binary data when not reconstructing a packet");
    else throw new Error("Unknown type: " + e);
  }
  decodeString(e) {
    let n = 0;
    const r = { type: Number(e.charAt(0)) };
    if (Ln[r.type] === void 0) throw new Error("unknown packet type " + r.type);
    if (r.type === Ln.BINARY_EVENT || r.type === Ln.BINARY_ACK) {
      const s = n + 1;
      for (; e.charAt(++n) !== "-" && n != e.length; );
      const i = e.substring(s, n);
      if (i != Number(i) || e.charAt(n) !== "-")
        throw new Error("Illegal attachments");
      r.attachments = Number(i);
    }
    if (e.charAt(n + 1) === "/") {
      const s = n + 1;
      for (; ++n && !(e.charAt(n) === "," || n === e.length); );
      r.nsp = e.substring(s, n);
    } else r.nsp = "/";
    const a = e.charAt(n + 1);
    if (a !== "" && Number(a) == a) {
      const s = n + 1;
      for (; ++n; ) {
        const i = e.charAt(n);
        if (i == null || Number(i) != i) {
          --n;
          break;
        }
        if (n === e.length) break;
      }
      r.id = Number(e.substring(s, n + 1));
    }
    if (e.charAt(++n)) {
      const s = this.tryParse(e.substr(n));
      if (_3.isPayloadValid(r.type, s)) r.data = s;
      else throw new Error("invalid payload");
    }
    return r;
  }
  tryParse(e) {
    try {
      return JSON.parse(e, this.reviver);
    } catch {
      return !1;
    }
  }
  static isPayloadValid(e, n) {
    switch (e) {
      case Ln.CONNECT:
        return DU(n);
      case Ln.DISCONNECT:
        return n === void 0;
      case Ln.CONNECT_ERROR:
        return typeof n == "string" || DU(n);
      case Ln.EVENT:
      case Ln.BINARY_EVENT:
        return (
          Array.isArray(n) &&
          (typeof n[0] == "number" ||
            (typeof n[0] == "string" && OQe.indexOf(n[0]) === -1))
        );
      case Ln.ACK:
      case Ln.BINARY_ACK:
        return Array.isArray(n);
    }
  }
  destroy() {
    this.reconstructor &&
      (this.reconstructor.finishedReconstruction(),
      (this.reconstructor = null));
  }
}
class RQe {
  constructor(e) {
    (this.packet = e), (this.buffers = []), (this.reconPack = e);
  }
  takeBinaryData(e) {
    if (
      (this.buffers.push(e), this.buffers.length === this.reconPack.attachments)
    ) {
      const n = AQe(this.reconPack, this.buffers);
      return this.finishedReconstruction(), n;
    }
    return null;
  }
  finishedReconstruction() {
    (this.reconPack = null), (this.buffers = []);
  }
}
const kQe = Object.freeze(
  Object.defineProperty(
    {
      __proto__: null,
      Decoder: _3,
      Encoder: NQe,
      get PacketType() {
        return Ln;
      },
      protocol: HQe,
    },
    Symbol.toStringTag,
    { value: "Module" }
  )
);
function ho(t, e, n) {
  return (
    t.on(e, n),
    function () {
      t.off(e, n);
    }
  );
}
const xQe = Object.freeze({
  connect: 1,
  connect_error: 1,
  disconnect: 1,
  disconnecting: 1,
  newListener: 1,
  removeListener: 1,
});
class Fue extends cr {
  constructor(e, n, r) {
    super(),
      (this.connected = !1),
      (this.recovered = !1),
      (this.receiveBuffer = []),
      (this.sendBuffer = []),
      (this._queue = []),
      (this._queueSeq = 0),
      (this.ids = 0),
      (this.acks = {}),
      (this.flags = {}),
      (this.io = e),
      (this.nsp = n),
      r && r.auth && (this.auth = r.auth),
      (this._opts = Object.assign({}, r)),
      this.io._autoConnect && this.open();
  }
  get disconnected() {
    return !this.connected;
  }
  subEvents() {
    if (this.subs) return;
    const e = this.io;
    this.subs = [
      ho(e, "open", this.onopen.bind(this)),
      ho(e, "packet", this.onpacket.bind(this)),
      ho(e, "error", this.onerror.bind(this)),
      ho(e, "close", this.onclose.bind(this)),
    ];
  }
  get active() {
    return !!this.subs;
  }
  connect() {
    return this.connected
      ? this
      : (this.subEvents(),
        this.io._reconnecting || this.io.open(),
        this.io._readyState === "open" && this.onopen(),
        this);
  }
  open() {
    return this.connect();
  }
  send(...e) {
    return e.unshift("message"), this.emit.apply(this, e), this;
  }
  emit(e, ...n) {
    if (xQe.hasOwnProperty(e))
      throw new Error('"' + e.toString() + '" is a reserved event name');
    if (
      (n.unshift(e),
      this._opts.retries && !this.flags.fromQueue && !this.flags.volatile)
    )
      return this._addToQueue(n), this;
    const r = { type: Ln.EVENT, data: n };
    if (
      ((r.options = {}),
      (r.options.compress = this.flags.compress !== !1),
      typeof n[n.length - 1] == "function")
    ) {
      const i = this.ids++,
        o = n.pop();
      this._registerAckCallback(i, o), (r.id = i);
    }
    const a =
      this.io.engine &&
      this.io.engine.transport &&
      this.io.engine.transport.writable;
    return (
      (this.flags.volatile && (!a || !this.connected)) ||
        (this.connected
          ? (this.notifyOutgoingListeners(r), this.packet(r))
          : this.sendBuffer.push(r)),
      (this.flags = {}),
      this
    );
  }
  _registerAckCallback(e, n) {
    var r;
    const a =
      (r = this.flags.timeout) !== null && r !== void 0
        ? r
        : this._opts.ackTimeout;
    if (a === void 0) {
      this.acks[e] = n;
      return;
    }
    const s = this.io.setTimeoutFn(() => {
      delete this.acks[e];
      for (let i = 0; i < this.sendBuffer.length; i++)
        this.sendBuffer[i].id === e && this.sendBuffer.splice(i, 1);
      n.call(this, new Error("operation has timed out"));
    }, a);
    this.acks[e] = (...i) => {
      this.io.clearTimeoutFn(s), n.apply(this, [null, ...i]);
    };
  }
  emitWithAck(e, ...n) {
    const r = this.flags.timeout !== void 0 || this._opts.ackTimeout !== void 0;
    return new Promise((a, s) => {
      n.push((i, o) => (r ? (i ? s(i) : a(o)) : a(i))), this.emit(e, ...n);
    });
  }
  _addToQueue(e) {
    let n;
    typeof e[e.length - 1] == "function" && (n = e.pop());
    const r = {
      id: this._queueSeq++,
      tryCount: 0,
      pending: !1,
      args: e,
      flags: Object.assign({ fromQueue: !0 }, this.flags),
    };
    e.push((a, ...s) =>
      r !== this._queue[0]
        ? void 0
        : (a !== null
            ? r.tryCount > this._opts.retries &&
              (this._queue.shift(), n && n(a))
            : (this._queue.shift(), n && n(null, ...s)),
          (r.pending = !1),
          this._drainQueue())
    ),
      this._queue.push(r),
      this._drainQueue();
  }
  _drainQueue(e = !1) {
    if (!this.connected || this._queue.length === 0) return;
    const n = this._queue[0];
    (n.pending && !e) ||
      ((n.pending = !0),
      n.tryCount++,
      (this.flags = n.flags),
      this.emit.apply(this, n.args));
  }
  packet(e) {
    (e.nsp = this.nsp), this.io._packet(e);
  }
  onopen() {
    typeof this.auth == "function"
      ? this.auth((e) => {
          this._sendConnectPacket(e);
        })
      : this._sendConnectPacket(this.auth);
  }
  _sendConnectPacket(e) {
    this.packet({
      type: Ln.CONNECT,
      data: this._pid
        ? Object.assign({ pid: this._pid, offset: this._lastOffset }, e)
        : e,
    });
  }
  onerror(e) {
    this.connected || this.emitReserved("connect_error", e);
  }
  onclose(e, n) {
    (this.connected = !1),
      delete this.id,
      this.emitReserved("disconnect", e, n);
  }
  onpacket(e) {
    if (e.nsp === this.nsp)
      switch (e.type) {
        case Ln.CONNECT:
          e.data && e.data.sid
            ? this.onconnect(e.data.sid, e.data.pid)
            : this.emitReserved(
                "connect_error",
                new Error(
                  "It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)"
                )
              );
          break;
        case Ln.EVENT:
        case Ln.BINARY_EVENT:
          this.onevent(e);
          break;
        case Ln.ACK:
        case Ln.BINARY_ACK:
          this.onack(e);
          break;
        case Ln.DISCONNECT:
          this.ondisconnect();
          break;
        case Ln.CONNECT_ERROR:
          this.destroy();
          const r = new Error(e.data.message);
          (r.data = e.data.data), this.emitReserved("connect_error", r);
          break;
      }
  }
  onevent(e) {
    const n = e.data || [];
    e.id != null && n.push(this.ack(e.id)),
      this.connected
        ? this.emitEvent(n)
        : this.receiveBuffer.push(Object.freeze(n));
  }
  emitEvent(e) {
    if (this._anyListeners && this._anyListeners.length) {
      const n = this._anyListeners.slice();
      for (const r of n) r.apply(this, e);
    }
    super.emit.apply(this, e),
      this._pid &&
        e.length &&
        typeof e[e.length - 1] == "string" &&
        (this._lastOffset = e[e.length - 1]);
  }
  ack(e) {
    const n = this;
    let r = !1;
    return function (...a) {
      r || ((r = !0), n.packet({ type: Ln.ACK, id: e, data: a }));
    };
  }
  onack(e) {
    const n = this.acks[e.id];
    typeof n == "function" && (n.apply(this, e.data), delete this.acks[e.id]);
  }
  onconnect(e, n) {
    (this.id = e),
      (this.recovered = n && this._pid === n),
      (this._pid = n),
      (this.connected = !0),
      this.emitBuffered(),
      this.emitReserved("connect"),
      this._drainQueue(!0);
  }
  emitBuffered() {
    this.receiveBuffer.forEach((e) => this.emitEvent(e)),
      (this.receiveBuffer = []),
      this.sendBuffer.forEach((e) => {
        this.notifyOutgoingListeners(e), this.packet(e);
      }),
      (this.sendBuffer = []);
  }
  ondisconnect() {
    this.destroy(), this.onclose("io server disconnect");
  }
  destroy() {
    this.subs && (this.subs.forEach((e) => e()), (this.subs = void 0)),
      this.io._destroy(this);
  }
  disconnect() {
    return (
      this.connected && this.packet({ type: Ln.DISCONNECT }),
      this.destroy(),
      this.connected && this.onclose("io client disconnect"),
      this
    );
  }
  close() {
    return this.disconnect();
  }
  compress(e) {
    return (this.flags.compress = e), this;
  }
  get volatile() {
    return (this.flags.volatile = !0), this;
  }
  timeout(e) {
    return (this.flags.timeout = e), this;
  }
  onAny(e) {
    return (
      (this._anyListeners = this._anyListeners || []),
      this._anyListeners.push(e),
      this
    );
  }
  prependAny(e) {
    return (
      (this._anyListeners = this._anyListeners || []),
      this._anyListeners.unshift(e),
      this
    );
  }
  offAny(e) {
    if (!this._anyListeners) return this;
    if (e) {
      const n = this._anyListeners;
      for (let r = 0; r < n.length; r++)
        if (e === n[r]) return n.splice(r, 1), this;
    } else this._anyListeners = [];
    return this;
  }
  listenersAny() {
    return this._anyListeners || [];
  }
  onAnyOutgoing(e) {
    return (
      (this._anyOutgoingListeners = this._anyOutgoingListeners || []),
      this._anyOutgoingListeners.push(e),
      this
    );
  }
  prependAnyOutgoing(e) {
    return (
      (this._anyOutgoingListeners = this._anyOutgoingListeners || []),
      this._anyOutgoingListeners.unshift(e),
      this
    );
  }
  offAnyOutgoing(e) {
    if (!this._anyOutgoingListeners) return this;
    if (e) {
      const n = this._anyOutgoingListeners;
      for (let r = 0; r < n.length; r++)
        if (e === n[r]) return n.splice(r, 1), this;
    } else this._anyOutgoingListeners = [];
    return this;
  }
  listenersAnyOutgoing() {
    return this._anyOutgoingListeners || [];
  }
  notifyOutgoingListeners(e) {
    if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {
      const n = this._anyOutgoingListeners.slice();
      for (const r of n) r.apply(this, e.data);
    }
  }
}
function zm(t) {
  (t = t || {}),
    (this.ms = t.min || 100),
    (this.max = t.max || 1e4),
    (this.factor = t.factor || 2),
    (this.jitter = t.jitter > 0 && t.jitter <= 1 ? t.jitter : 0),
    (this.attempts = 0);
}
zm.prototype.duration = function () {
  var t = this.ms * Math.pow(this.factor, this.attempts++);
  if (this.jitter) {
    var e = Math.random(),
      n = Math.floor(e * this.jitter * t);
    t = Math.floor(e * 10) & 1 ? t + n : t - n;
  }
  return Math.min(t, this.max) | 0;
};
zm.prototype.reset = function () {
  this.attempts = 0;
};
zm.prototype.setMin = function (t) {
  this.ms = t;
};
zm.prototype.setMax = function (t) {
  this.max = t;
};
zm.prototype.setJitter = function (t) {
  this.jitter = t;
};
class HH extends cr {
  constructor(e, n) {
    var r;
    super(),
      (this.nsps = {}),
      (this.subs = []),
      e && typeof e == "object" && ((n = e), (e = void 0)),
      (n = n || {}),
      (n.path = n.path || "/socket.io"),
      (this.opts = n),
      iI(this, n),
      this.reconnection(n.reconnection !== !1),
      this.reconnectionAttempts(n.reconnectionAttempts || 1 / 0),
      this.reconnectionDelay(n.reconnectionDelay || 1e3),
      this.reconnectionDelayMax(n.reconnectionDelayMax || 5e3),
      this.randomizationFactor(
        (r = n.randomizationFactor) !== null && r !== void 0 ? r : 0.5
      ),
      (this.backoff = new zm({
        min: this.reconnectionDelay(),
        max: this.reconnectionDelayMax(),
        jitter: this.randomizationFactor(),
      })),
      this.timeout(n.timeout == null ? 2e4 : n.timeout),
      (this._readyState = "closed"),
      (this.uri = e);
    const a = n.parser || kQe;
    (this.encoder = new a.Encoder()),
      (this.decoder = new a.Decoder()),
      (this._autoConnect = n.autoConnect !== !1),
      this._autoConnect && this.open();
  }
  reconnection(e) {
    return arguments.length
      ? ((this._reconnection = !!e), this)
      : this._reconnection;
  }
  reconnectionAttempts(e) {
    return e === void 0
      ? this._reconnectionAttempts
      : ((this._reconnectionAttempts = e), this);
  }
  reconnectionDelay(e) {
    var n;
    return e === void 0
      ? this._reconnectionDelay
      : ((this._reconnectionDelay = e),
        (n = this.backoff) === null || n === void 0 || n.setMin(e),
        this);
  }
  randomizationFactor(e) {
    var n;
    return e === void 0
      ? this._randomizationFactor
      : ((this._randomizationFactor = e),
        (n = this.backoff) === null || n === void 0 || n.setJitter(e),
        this);
  }
  reconnectionDelayMax(e) {
    var n;
    return e === void 0
      ? this._reconnectionDelayMax
      : ((this._reconnectionDelayMax = e),
        (n = this.backoff) === null || n === void 0 || n.setMax(e),
        this);
  }
  timeout(e) {
    return arguments.length ? ((this._timeout = e), this) : this._timeout;
  }
  maybeReconnectOnOpen() {
    !this._reconnecting &&
      this._reconnection &&
      this.backoff.attempts === 0 &&
      this.reconnect();
  }
  open(e) {
    if (~this._readyState.indexOf("open")) return this;
    this.engine = new Due(this.uri, this.opts);
    const n = this.engine,
      r = this;
    (this._readyState = "opening"), (this.skipReconnect = !1);
    const a = ho(n, "open", function () {
        r.onopen(), e && e();
      }),
      s = ho(n, "error", (i) => {
        r.cleanup(),
          (r._readyState = "closed"),
          this.emitReserved("error", i),
          e ? e(i) : r.maybeReconnectOnOpen();
      });
    if (this._timeout !== !1) {
      const i = this._timeout;
      i === 0 && a();
      const o = this.setTimeoutFn(() => {
        a(), n.close(), n.emit("error", new Error("timeout"));
      }, i);
      this.opts.autoUnref && o.unref(),
        this.subs.push(function () {
          clearTimeout(o);
        });
    }
    return this.subs.push(a), this.subs.push(s), this;
  }
  connect(e) {
    return this.open(e);
  }
  onopen() {
    this.cleanup(), (this._readyState = "open"), this.emitReserved("open");
    const e = this.engine;
    this.subs.push(
      ho(e, "ping", this.onping.bind(this)),
      ho(e, "data", this.ondata.bind(this)),
      ho(e, "error", this.onerror.bind(this)),
      ho(e, "close", this.onclose.bind(this)),
      ho(this.decoder, "decoded", this.ondecoded.bind(this))
    );
  }
  onping() {
    this.emitReserved("ping");
  }
  ondata(e) {
    try {
      this.decoder.add(e);
    } catch (n) {
      this.onclose("parse error", n);
    }
  }
  ondecoded(e) {
    Mue(() => {
      this.emitReserved("packet", e);
    }, this.setTimeoutFn);
  }
  onerror(e) {
    this.emitReserved("error", e);
  }
  socket(e, n) {
    let r = this.nsps[e];
    return (
      r
        ? this._autoConnect && !r.active && r.connect()
        : ((r = new Fue(this, e, n)), (this.nsps[e] = r)),
      r
    );
  }
  _destroy(e) {
    const n = Object.keys(this.nsps);
    for (const r of n) if (this.nsps[r].active) return;
    this._close();
  }
  _packet(e) {
    const n = this.encoder.encode(e);
    for (let r = 0; r < n.length; r++) this.engine.write(n[r], e.options);
  }
  cleanup() {
    this.subs.forEach((e) => e()),
      (this.subs.length = 0),
      this.decoder.destroy();
  }
  _close() {
    (this.skipReconnect = !0),
      (this._reconnecting = !1),
      this.onclose("forced close"),
      this.engine && this.engine.close();
  }
  disconnect() {
    return this._close();
  }
  onclose(e, n) {
    this.cleanup(),
      this.backoff.reset(),
      (this._readyState = "closed"),
      this.emitReserved("close", e, n),
      this._reconnection && !this.skipReconnect && this.reconnect();
  }
  reconnect() {
    if (this._reconnecting || this.skipReconnect) return this;
    const e = this;
    if (this.backoff.attempts >= this._reconnectionAttempts)
      this.backoff.reset(),
        this.emitReserved("reconnect_failed"),
        (this._reconnecting = !1);
    else {
      const n = this.backoff.duration();
      this._reconnecting = !0;
      const r = this.setTimeoutFn(() => {
        e.skipReconnect ||
          (this.emitReserved("reconnect_attempt", e.backoff.attempts),
          !e.skipReconnect &&
            e.open((a) => {
              a
                ? ((e._reconnecting = !1),
                  e.reconnect(),
                  this.emitReserved("reconnect_error", a))
                : e.onreconnect();
            }));
      }, n);
      this.opts.autoUnref && r.unref(),
        this.subs.push(function () {
          clearTimeout(r);
        });
    }
  }
  onreconnect() {
    const e = this.backoff.attempts;
    (this._reconnecting = !1),
      this.backoff.reset(),
      this.emitReserved("reconnect", e);
  }
}
const CS = {};
function HE(t, e) {
  typeof t == "object" && ((e = t), (t = void 0)), (e = e || {});
  const n = EQe(t, e.path || "/socket.io"),
    r = n.source,
    a = n.id,
    s = n.path,
    i = CS[a] && s in CS[a].nsps,
    o = e.forceNew || e["force new connection"] || e.multiplex === !1 || i;
  let u;
  return (
    o ? (u = new HH(r, e)) : (CS[a] || (CS[a] = new HH(r, e)), (u = CS[a])),
    n.query && !e.query && (e.query = n.queryKey),
    u.socket(n.path, e)
  );
}
Object.assign(HE, { Manager: HH, Socket: Fue, io: HE, connect: HE });
const LQe = Eue(),
  MQe = LQe.replace("https://", "wss://"),
  GU = 2 * 60 * 1e3;
class DQe {
  constructor(e) {
    (this.createClient = () => {
      const n = HE(`${MQe}/${this.namespace}`, {
        transports: ["websocket"],
        reconnection: !1,
        multiplex: !1,
        path: "/socket.io/grpc-proxy",
        timeout: GU,
      });
      return n.io.timeout(GU), n;
    }),
      (this.namespace = e);
  }
}
async function b3(t, e) {
  const n = new $Xe(),
    a = new DQe(t).createClient();
  try {
    return await Promise.race([
      e(a, n),
      AS(a, "error").catch((s) => {
        throw new li(HA(s));
      }),
      AS(a, "proxy-error").catch((s) => {
        throw new li(HA(s));
      }),
      GQe(a.io).catch((s) => {
        throw new li(HA(s));
      }),
      AS(a, "grpc-error-response").catch((s) => {
        throw n.mapErrorResponseToAppError(s);
      }),
      AS(a, "grpc-stream-error").catch((s) => {
        throw n.mapStreamErrorToAppError(s);
      }),
      AS(a, "disconnect").catch(() => {
        throw new li("Connection was closed too soon.");
      }),
    ]);
  } finally {
    a.close();
  }
}
function ul(t, e) {
  return new Promise((n) => {
    t.once(e, n);
  });
}
function AS(t, e) {
  return new Promise((n, r) => {
    t.once(e, r);
  });
}
function GQe(t) {
  return new Promise((e, n) => {
    t.once("error", n);
  });
}
function HA(t) {
  return typeof t == "object" && t instanceof Error
    ? t.message
    : "Unknown error caught";
}
const FQe = async (t) =>
    b3("login_v2", async (e, n) => {
      await ul(e, "connect");
      const {
        email: r,
        password: a,
        authy_token: s,
        device: i,
        firebase_token: o,
        domain_sso_token: u,
      } = t;
      e.emit("initialRequest", {
        otp_token: s,
        email: r,
        domain_sso_token: u,
        device: { ...i, sub_name: "", mobile_type: zXe.DESKTOP },
        firebase_token: o,
      });
      const l = await ul(e, "initialResponse"),
        c = n.generateClientProof({ ...l, password: a });
      e.emit("finalRequest", c);
      const d = await ul(e, "finalResponse");
      try {
        return await KQe(d, n);
      } catch (p) {
        throw (
          (p instanceof li
            ? tt.exception(p.message, p)
            : tt.exception("Cannot handle final gRPC login response", p),
          p)
        );
      }
    }),
  UQe = (t) => t.replace(/List$/, ""),
  KQe = async (t, e) => {
    const n = Tue(t, (o, u) => r3(UQe(u))),
      { proof: r, credentials: a, bulk_account: s, device: i } = n;
    return (
      await e.checkServerProof(r),
      (a.token = await BQe(e, t.sessionSalt, a.token)),
      { credentials: a, bulk_account: s, device: i }
    );
  };
function BQe(t, e, n) {
  var i;
  const r =
    (i = t.srpClient) == null
      ? void 0
      : i.session.getSaltedSecretKey(Buffer.from(e, "base64"));
  if (!r) throw new li("Cannot get encryptionKey from session salt");
  const s = Ms.systems.FromEncryptionKey(r).decrypt(Buffer.from(n, "base64"));
  if (!s) throw new li("Cannot decrypt api token");
  return s.toString();
}
const VQe = async (t, e) =>
    b3("security-token", async (n, r) => {
      await ul(n, "connect"), n.emit("initialRequest", { token: e });
      const a = await ul(n, "initialResponse"),
        s = r.generateClientProof({ ...a, password: t });
      n.emit("finalRequest", s);
      const i = await ul(n, "finalResponse");
      try {
        return jQe(i, r);
      } catch (o) {
        throw (
          (o instanceof li
            ? tt.exception(o.message, o)
            : tt.exception(
                "Cannot handle final gRPC security-token response",
                o
              ),
          o)
        );
      }
    }),
  jQe = (t, e) => {
    const { proof: n, token: r } = t;
    return e.checkServerProof(n), r;
  },
  zQe = async ({ password: t, ...e }) =>
    b3("signup", async (n, r) => {
      await ul(n, "connect"), n.emit("initialRequest", e);
      const a = await ul(n, "initialResponse"),
        s = r.generateVerifier({ ...a, password: t });
      return n.emit("finalRequest", s), ul(n, "finalResponse");
    });
class $Qe {
  constructor(e = async () => !1) {
    this.isSSLVerificationFailedCallback = e;
  }
  async handleError(e) {
    try {
      return await e;
    } catch (n) {
      throw (await this.isSSLVerificationFailedCallback()) ? new Sv() : n;
    }
  }
  async signUp(e) {
    return this.handleError(zQe(e));
  }
  async login(e) {
    return this.handleError(FQe(e));
  }
  async getSecurityToken(e, n) {
    return { token: await this.handleError(VQe(e, n)) };
  }
}
class WQe extends cs {
  get entityName() {}
}
class qQe extends rI.Collection {
  constructor() {
    super(...arguments), (this.indexedDB = null), (this.model = WQe);
  }
  async initializeStorage() {
    (this.indexedDB = new lue({
      storeName: "settings",
      dbVersion: 1,
      indexes: "local_id,&local_id",
    })),
      await this.indexedDB.open(),
      await this.fetch({ do_not_encrypt: !0 }),
      (await this.getOrCreateDefaultSettings()) &&
        (await this.fetch({ do_not_encrypt: !0 }));
  }
  async generateData() {
    await this.getOrCreateDefaultSettings();
  }
  getDeprecatedUser() {
    return this.get("user");
  }
  getDeprecatedUserStr() {
    return this.getDeprecatedUser().get("username_str");
  }
  setDeprecatedUserStr(e) {
    return this.getDeprecatedUser().save({ username_str: e }, { wait: !0 });
  }
  getDeprecatedUserHasSso() {
    return this.getDeprecatedUser().get("has_sso");
  }
  setDeprecatedUserHasSso(e) {
    return this.getDeprecatedUser().save({ has_sso: e }, { wait: !0 });
  }
  getDeprecatedUserId() {
    return this.getDeprecatedUser().get("user_id");
  }
  setDeprecatedUserId(e) {
    return this.getDeprecatedUser().save({ user_id: e }, { wait: !0 });
  }
  getDeprecatedUserPro() {
    return zu(this.getDeprecatedUser().get("pro_mode"), !1);
  }
  setDeprecatedAuthorizedFeatures(e) {
    return this.getDeprecatedUser().save(
      { authorizedFeatures: e },
      { wait: !0 }
    );
  }
  getDeprecatedAuthorizedFeatures() {
    return zu(this.getDeprecatedUser().get("authorizedFeatures"), {});
  }
  setDeprecatedTeamPermissions(e) {
    return this.getDeprecatedUser().save({ teamPermissions: e }, { wait: !0 });
  }
  getDeprecatedTeamPermissions() {
    return zu(this.getDeprecatedUser().get("teamPermissions"), []);
  }
  setDeprecatedTeamInfo(e) {
    return this.getDeprecatedUser().save({ teamInfo: e }, { wait: !0 });
  }
  getDeprecatedTeamInfo() {
    return zu(this.getDeprecatedUser().get("teamInfo"), {});
  }
  getDeprecatedLastSync() {
    var e;
    return (e = this.get("last_sync")) == null ? void 0 : e.get("date");
  }
  setDeprecatedLastSync(e) {
    var n;
    (n = this.get("last_sync")) == null || n.save({ date: e }, { wait: !0 });
  }
  getDeprecatedUserData() {
    return this.getDeprecatedUser().get("secure_data");
  }
  getDeprecatedUserTeamStatus() {
    const e = this.getDeprecatedUser();
    if (!e)
      return {
        isTeam: null,
        isOwner: null,
        teamOwnerEmail: "",
        teamOwnerId: -1,
      };
    const n = zu(e.get("is_team"), null),
      r = zu(e.get("is_owner"), null),
      a = this.getDeprecatedTeamInfo();
    return {
      isTeam: n,
      isOwner: r,
      teamOwnerEmail: a.owner,
      teamOwnerId: a.owner_id,
    };
  }
  setUserData(e) {
    return this.getDeprecatedUser().save({ secure_data: e }, { wait: !0 });
  }
  getSettings() {
    return this.get("user_settings");
  }
  setSettings(e) {
    return this.getSettings().save(e, { wait: !0 });
  }
  isSynchingKeys() {
    return this.getSettings().get("synchronize_key") === !0;
  }
  async clearData() {
    var e;
    await ((e = this.indexedDB) == null ? void 0 : e.clear()), this.reset();
  }
  async getOrCreateDefaultSettings() {
    var n;
    let e = !1;
    return (
      this.get("user") ||
        (this.add({
          local_id: "user",
          username: "",
          password: "",
          user_id: null,
          authorizedFeatures: {},
          teamPermissions: [],
        }),
        (e = !0)),
      this.get("last_sync") || (this.add({ local_id: "last_sync" }), (e = !0)),
      this.get("user_settings") ||
        (this.add({ local_id: "user_settings" }), (e = !0)),
      e &&
        (await ((n = this.indexedDB) == null
          ? void 0
          : n.saveAll(this.toJSON()))),
      e
    );
  }
}
function NH(t, e, ...n) {
  return S$(t, ym, e);
}
function cu(t, ...e) {
  return ln(ym, t);
}
const YQe = ["ResizeObserver loop limit exceeded"];
function XQe() {
  window.addEventListener("error", (t) => {
    const { error: e, message: n } = t;
    YQe.includes(n) || tt.exception("Unhandled Error", e);
  }),
    window.addEventListener("unhandledrejection", (t) => {
      const { reason: e } = t;
      tt.isIgnorableError(e) || tt.exception("Unhandled Promise Rejection", e);
    });
}
function* QQe() {
  yield* Gn([$e(fl, FU), $e(us.success, FU)]);
}
function JQe(t, { sagaStack: e }) {
  ZY(t) || tt.exception(`Unhandled saga error ${eJe(t.stack, e)}`, t);
}
function* FU() {
  const t = yield* Pe(_i),
    e = yield* Pe(Do),
    n = {};
  t != null && (n.id = `${t}`),
    e != null && e !== "" && (n.email = e),
    tt.setUser(Object.keys(n).length !== 0 ? n : null);
}
const ZQe = /\s/;
function eJe(t, e) {
  var s;
  const n =
      (t == null ? void 0 : t.trimStart().split(ZQe)[0]) ?? "UnknownError",
    r = "    created by ",
    a =
      ((s = e
        .split(
          `
`
        )
        .find((i) => i.startsWith(r))) == null
        ? void 0
        : s.replace(r, "")) ?? "an unknown saga";
  return `${n} inside of ${a}`;
}
const tJe = Ze("GET_SSL_VERIFICATION_STATUS");
function nJe(t) {
  return t.app.userDataPath;
}
function Uue(t) {
  return t.app.version;
}
const oI = k("lifecycle/REHYDRATE"),
  Sb = Ze("lifecycle/INIT_DATA_BASE"),
  E3 = "/hosts",
  sJe = "/terminals/",
  NA = E3,
  rJe = Ze("SHOW_ONBOARDING");
Ze("SHOW_ONBOARDING_IN_WINDOW");
const aJe = k("RECOVER_FROM_DECRYPTION_ERROR");
Kt("OPEN_HOST_FORM");
k("OPEN_LOCAL_TERMINAL");
Kt("OPEN_CONNECTION_IN_SFTP");
Ze("OPEN_TEAM_TRIAL_FLOW");
const iJe = Kt("SET_NAVIGATION_PATH"),
  Nw = k("FAN_OUT_NAVIGATION_PATH");
Kt("OPEN_TAB");
k("OPEN_VAULTS_TAB");
k("OPEN_SFTP_TAB");
k("OPEN_SETTINGS");
k("NAVIGATE_SETTINGS");
const RH = k("TOGGLE_UI_BLOCK");
k("MAYBE_OPEN_SERIAL_CONNECTION");
k("OPEN_SERIAL_CONNECTION");
k("@MULTI_KEY/OPEN_KEYCHAIN_AND_EDIT_MULTIKEY_FORM");
const oJe = Ze("SHOW_PRIMARY_WINDOW_FOR_AN_ACTION");
function uJe(t) {
  return QS(typeof t == "string" ? t : t.getPath("userData"), "session-logs");
}
function UU(t, e) {
  return new Promise((n) => {
    t.run(function* () {
      n(yield* Zs(e));
    });
  });
}
const lJe = 1;
function cJe(t) {
  return (e) => (n) => (r) => {
    var a;
    return n(
      ((a = r.meta) == null ? void 0 : a.scope) === "local"
        ? r
        : Yr({ meta: { windowId: t } }, r)
    );
  };
}
function T3(t) {
  const e = t.getDeprecatedUserStr() ?? "",
    n = t.getDeprecatedUserId() ?? null,
    r = e ? t.getDeprecatedUserPro() : !1,
    a = t.getDeprecatedUserHasSso() ?? !1,
    s = t.getDeprecatedAuthorizedFeatures(),
    i = t.getDeprecatedTeamPermissions(),
    {
      isTeam: o,
      isOwner: u,
      teamOwnerEmail: l,
      teamOwnerId: c,
    } = t.getDeprecatedUserTeamStatus();
  return fl({
    username: e,
    account: { user_id: n, pro_mode: r, authorized_features: s, has_sso: a },
    ...(o
      ? { team: { team_permissions: i, is_owner: !!u, owner_id: c, owner: l } }
      : {}),
  });
}
function KU(t) {
  if (t == null) return "is not there";
  const e = Buffer.from(t, "base64");
  return e.length === 32
    ? "is valid"
    : `is not valid. string size: ${t.length}, buffer size: ${e.length}`;
}
function dJe(t, e, n, r) {
  const a = {
    key: KU(t),
    source: r ? "keychain" : "localStorage",
    is_ready: e.toString(),
  };
  return r && n != null && (a.local_storage_key = KU(n)), a;
}
var w3 = {},
  P3 = {};
P3.__esModule = !0;
var pJe =
  typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
    ? function (t) {
        return typeof t;
      }
    : function (t) {
        return t &&
          typeof Symbol == "function" &&
          t.constructor === Symbol &&
          t !== Symbol.prototype
          ? "symbol"
          : typeof t;
      };
P3.default = mJe;
function RA() {}
var hJe = { getItem: RA, setItem: RA, removeItem: RA };
function fJe(t) {
  if (
    (typeof self > "u" ? "undefined" : pJe(self)) !== "object" ||
    !(t in self)
  )
    return !1;
  try {
    var e = self[t],
      n = "redux-persist " + t + " test";
    e.setItem(n, "test"), e.getItem(n), e.removeItem(n);
  } catch {
    return !1;
  }
  return !0;
}
function mJe(t) {
  var e = t + "Storage";
  return fJe(e) ? self[e] : hJe;
}
w3.__esModule = !0;
w3.default = vJe;
var SJe = P3,
  yJe = gJe(SJe);
function gJe(t) {
  return t && t.__esModule ? t : { default: t };
}
function vJe(t) {
  var e = (0, yJe.default)(t);
  return {
    getItem: function (r) {
      return new Promise(function (a, s) {
        a(e.getItem(r));
      });
    },
    setItem: function (r, a) {
      return new Promise(function (s, i) {
        s(e.setItem(r, a));
      });
    },
    removeItem: function (r) {
      return new Promise(function (a, s) {
        a(e.removeItem(r));
      });
    },
  };
}
var _Je = w3,
  bJe = EJe(_Je);
function EJe(t) {
  return t && t.__esModule ? t : { default: t };
}
var TJe = (0, bJe.default)("local");
const wJe = Wn((t, e) => {
  t.customerExperience ?? (t.customerExperience = xl(O$()));
  const n = e();
  if (n == null) return;
  const { lastReview: r, dismissDate: a, dismissCount: s = 0 } = n;
  (t.customerExperience.dismissCount = s),
    r != null &&
      (t.customerExperience.interactionData = {
        action: "rated-in-legacy-app-version",
        interactedAt: new Date(r.date),
        appVersion: r.appVersion,
      }),
    a != null &&
      (r == null || a > r.date) &&
      (t.customerExperience.interactionData = {
        action: "dismissed",
        interactedAt: new Date(a),
      });
});
function PJe() {
  return rE("non_team_users_survey");
}
const IJe = Ep(
  ({ interactionData: t, initWasPerformed: e, dismissCount: n }) => ({
    interactionData: CJe(t),
    initWasPerformed: e,
    dismissCount: n,
  }),
  ({ interactionData: t, ...e }) => ({
    ...xl(O$()),
    ...e,
    interactionData: AJe(t),
  }),
  { whitelist: ["customerExperience"] }
);
function CJe(t) {
  return t == null ? t : { ...t, interactedAt: t.interactedAt.toISOString() };
}
function AJe(t) {
  return t == null ? t : { ...t, interactedAt: new Date(t.interactedAt) };
}
const OJe = Yn(
    {
      [Pse.toString()]: (t, { payload: e }) => {
        if (!e.group.local_id) return t;
        const n = new Map(t.failedSyncGroups);
        return (
          n.set(e.group.local_id, e.errorMessage),
          { ...t, failedSyncGroups: Array.from(n.entries()) }
        );
      },
      [KP.toString()]: (t, { payload: e }) => {
        if (!e.local_id) return t;
        const n = new Map(t.failedSyncGroups);
        return (
          n.delete(e.local_id),
          { ...t, failedSyncGroups: Array.from(n.entries()) }
        );
      },
    },
    { failedSyncGroups: [] }
  ),
  HJe = {
    identityBanners: { empty: { ssh: "not defined", telnet: "not defined" } },
  },
  { reducer: NJe, actions: K_t } = ua({
    name: "identityPromo",
    initialState: HJe,
    reducers: {
      updateIdentityBanner(t, { payload: e }) {
        const { bannerOpenState: n, configType: r, configLocalId: a } = e,
          s = a ?? "empty";
        t.identityBanners[s] == null &&
          (t.identityBanners[s] = {
            ssh: "not defined",
            telnet: "not defined",
          }),
          (t.identityBanners[s][r] = n);
      },
    },
  }),
  Kue = {
    "1984 dark": 3141,
    "1984 light": 652,
    "atom one dark": 5161,
    "atom one light": 988,
    aubergine: 540,
    basic: 7296,
    "catppuccin latte": 1002,
    "catppuccin mocha": 3231,
    "dia de muertos": 483,
    diwali: 1103,
    dracula: 11398,
    grass: 932,
    "gruvbox dark": 1702,
    "gruvbox light": 558,
    halloween: 1339,
    homebrew: 17633,
    "man page": 997,
    manhattan: 1727,
    "material dark": 2448,
    "material light": 568,
    monokai: 14319,
    movember: 552,
    "nord dark": 8192,
    "nord light": 1248,
    novel: 2108,
    ocean: 1126,
    "peach fresh": 284,
    "plastic world": 142,
    pro: 21739,
    "red sands": 554,
    "romania day": 330,
    "romania night": 1451,
    "silver aerogel": 255,
    "solarized dark": 3948,
    "solarized light": 1440,
    "termius dark": 1 / 0,
    "termius light": 13931,
    "tokyo day": 632,
    "tokyo night": 5858,
    "winter day": 899,
    "winter night": 3195,
    "ayu dark": 2770,
    "ayu light": 596,
    cyberpunk: 1269,
    "cyberpunk scarlet": 1834,
    cobalt2: 2787,
    "octocat dark": 2648,
    "octocat light": 488,
    "rosé pine": 866,
    "rosé pine moon": 503,
    "rosé pine dawn": 260,
    "night owl": "new",
    "light owl": "new",
    aura: "new",
  },
  { reducer: RJe, actions: B_t } = ua({
    name: "terminalTheme",
    initialState: { themeUsages: Kue },
    reducers: {
      increaseThemeUsageNumber(t, { payload: e }) {
        const n = t.themeUsages[e];
        typeof n == "number" && (t.themeUsages[e] = n + 1);
      },
    },
  }),
  kA = (t, e, n) => {
    const r = new Map(t),
      a = r.get(e);
    return a ? (r.set(e, Yr({}, a, n)), [...r]) : t;
  },
  kJe = Yn(
    {
      [K0.toString()]: (t, { payload: e }) => {
        const { dialogData: n, requestMeta: r } = e,
          { dialog: a, props: s, target: i, options: o } = n,
          u = new Map(t);
        return (
          u.set(r.requestId, {
            name: a,
            state: "opening",
            props: s,
            requestMeta: r,
            target: i,
            options: o,
          }),
          [...u]
        );
      },
      [lCe.toString()]: (t, { payload: { requestId: e, props: n } }) =>
        kA(t, e, { props: n }),
      [R$.toString()]: (t, { payload: e }) => kA(t, e, { state: "closing" }),
      [cCe.toString()]: (t, { payload: e }) => kA(t, e, { state: "opened" }),
      [Hp.toString()]: (t, { payload: e }) => {
        const n = new Map(t);
        return n.delete(e), [...n];
      },
    },
    []
  ),
  xJe = { treatments: {} },
  LJe = Yn(
    { [B0.toString()]: (t, { payload: e }) => ({ ...t, treatments: e }) },
    xJe
  ),
  du = Ze("ASSEMBLE_AUTOCOMPLETE_SUGGESTIONS"),
  NE = Ze("LINK_IDENTITY"),
  RE = Ze("UNLINK_IDENTITY"),
  MJe = Yn(
    {
      [du.success.toString()]: (t, { payload: e }) => ({
        ...t,
        suggestions: e,
      }),
      [qn.success.toString()]: () => ({
        suggestions: { ssh: [], telnet: [], proxy: [] },
      }),
    },
    { suggestions: { ssh: [], telnet: [], proxy: [] } }
  ),
  Qc = k("UPDATE_PRESENCE_EFFECT"),
  kH = k("SET_ACTIVE_TEAMMATES_FOR_PRESENCE_EFFECT"),
  I3 = k("JOIN_PRESENCE_EFFECT_CHANNEL"),
  C3 = k("LEAVE_PRESENCE_EFFECT_CHANNEL"),
  uI = k("DOWNLOAD_AVATARS"),
  Bue = k("UPDATE_AVATARS"),
  Xd = Ze("INIT_PRESENCE_EFFECT"),
  Vue = k("SHOW_PRESENCE_EFFECT"),
  BU = [],
  DJe = Yn(
    {
      [Qc.toString()]: (t, { payload: e }) => [...e],
      [qn.success.toString()]: () => BU,
    },
    BU
  ),
  OS = {
    proTrialOnboarding: {
      userShouldSeeProTrialOnboarding: !1,
      proTrialSuccessAnimationFinished: !1,
      proTrialCompletedStepsOrder: [
        "add_hosts",
        "connect_to_host",
        "add_second_device",
        "invite_members",
      ],
    },
    teamOwnerOnboarding: {
      userShouldSeeTeamOnboarding: !1,
      teamEntryAnimationFinished: !1,
      teamSuccessAnimationFinished: !1,
      userClosedTeamOnboarding: !1,
      upgradeNowButtonHasActiveMode: !1,
    },
    onboardingAttributes: [],
  },
  { reducer: GJe, actions: FJe } = ua({
    name: "onboardings",
    initialState: OS,
    reducers: {
      setProTrialSuccessAnimationFinished(t) {
        (t.proTrialOnboarding.userShouldSeeProTrialOnboarding = !1),
          (t.proTrialOnboarding.proTrialSuccessAnimationFinished = !0);
      },
      setUserShouldSeeProTrialOnboarding(t, { payload: e }) {
        t.proTrialOnboarding.userShouldSeeProTrialOnboarding = e;
      },
      setOnboardingAttributes(t, { payload: e }) {
        t.onboardingAttributes = e;
      },
      setProTrialCompletedStepsOrder(t, { payload: e }) {
        t.proTrialOnboarding.proTrialCompletedStepsOrder = e;
      },
      setUserHasNoTeam(t) {
        var r;
        const e =
            (r = t.onboardingAttributes) == null
              ? void 0
              : r.find((a) => a.type === "personal"),
          n =
            e == null
              ? void 0
              : e.steps.find((a) => a.codename === "invite_members");
        n && (n.value = !0);
      },
      setUserClosedTeamOnboarding(t, { payload: e }) {
        t.teamOwnerOnboarding.userClosedTeamOnboarding = e;
      },
      setUserShouldSeeTeamOnboarding(t, { payload: e }) {
        t.teamOwnerOnboarding.userShouldSeeTeamOnboarding = e;
      },
      setTeamSuccessAnimationFinished(t, { payload: e }) {
        t.teamOwnerOnboarding.teamSuccessAnimationFinished = e;
      },
      setTeamEntryAnimationFinished(t, { payload: e }) {
        t.teamOwnerOnboarding.teamEntryAnimationFinished = e;
      },
      setUpgradeNowButtonHasActiveMode(t, { payload: e }) {
        t.teamOwnerOnboarding.upgradeNowButtonHasActiveMode = e;
      },
      setTeamOnboardingFlagsToInitialState(t) {
        t.teamOwnerOnboarding = OS.teamOwnerOnboarding;
      },
    },
    extraReducers: (t) => {
      t.addCase(qn.success, (e) => {
        (e.proTrialOnboarding = OS.proTrialOnboarding),
          (e.teamOwnerOnboarding = OS.teamOwnerOnboarding),
          (e.onboardingAttributes = OS.onboardingAttributes);
      });
    },
  }),
  {
    setProTrialCompletedStepsOrder: jue,
    setOnboardingAttributes: kE,
    setProTrialSuccessAnimationFinished: UJe,
    setUserHasNoTeam: zue,
    setUserShouldSeeProTrialOnboarding: Sf,
    setUserClosedTeamOnboarding: KJe,
    setUserShouldSeeTeamOnboarding: Qf,
    setTeamSuccessAnimationFinished: A3,
    setUpgradeNowButtonHasActiveMode: lI,
    setTeamEntryAnimationFinished: BJe,
    setTeamOnboardingFlagsToInitialState: VJe,
  } = FJe,
  $ue = k("ONBOARDING_UPDATED"),
  jJe = Ze("SKIP_PRO_TRIAL_ONBOARDING_INVITE_STEP"),
  Wue = k("UPDATE_ONBOARDING_IF_TEAM_WAS_DELETED"),
  zJe = k("SET_TRIAL_TO_PREMIUM_DISMISS_TIMESTAMP");
k("SET_MULTIKEY_DISMISS_TIMESTAMP");
const $Je = k("HIDE_SHELL_ASSIST_HINT"),
  WJe = k("HIDE_BROADCAST_PROMPT"),
  qJe = null,
  YJe = Yn({ [zJe.toString()]: (t, { payload: e }) => e }, qJe),
  XJe = Yn({ [eJ.toString()]: (t) => !1 }, !0),
  QJe = Yn({ [$Je.toString()]: (t) => !0 }, !1),
  JJe = ta(!0, (t) => {
    t.addCase(WJe, pm);
  }),
  ZJe = {
    trialToPremiumDismissTimestamp: YJe,
    shouldShowDirectoriesAutocompleteDescription: XJe,
    hideOpenAITooltipReducer: QJe,
    shouldShowBroadcastPrompt: JJe,
  },
  eZe = bp(ZJe),
  md = k("PUBLISH_TO_CENTRIFUGE_REALTIME_COLLABORATION_CHANNEL"),
  que = k("SHARE_REALTIME_COLLABORATION_STATE"),
  Yue = k("TEAM_TERMINAL_SESSION_STARTED"),
  O3 = k("TEAM_TERMINAL_SESSION_FINISHED"),
  H3 = k("JOIN_TEAM_TERMINAL_SESSION"),
  N3 = k("LEAVE_TEAM_TERMINAL_SESSION"),
  R3 = k("TEAM_TERMINAL_SESSION_PARAMS_CHANGED"),
  Xue = k("USER_LEFT_REALTIME_COLLABORATION"),
  tZe = k("TEAM_TERMINAL_SESSION_SHARING_REQUEST"),
  Que = k("TEAM_TERMINAL_SESSION_SHARING_RESPONSE"),
  nZe = k("REQUEST_TEAM_TERMINAL_SESSION_INPUT_ACCESS"),
  Jue = k("CLEAR_TEAM_TERMINAL_SESSION_SHARING_REQUEST"),
  k3 = k("START_REALTIME_COLLABORATION"),
  x3 = k("STOP_REALTIME_COLLABORATION");
function Zue(t) {
  return {
    [k3.toString()]: () => t(),
    [x3.toString()]: () => t(),
    [qn.success.toString()]: () => t(),
  };
}
const VU = () => ({ map: new Map() }),
  sZe = Yn(
    {
      [md.toString()]: Wn((t, { payload: e }) => {
        if (e.type === "TEAM_TERMINAL_SESSION_SHARING_REQUEST") {
          const { hostId: n, id: r } = e.payload;
          t.map.set(r, { hostId: n, status: "progress" });
        }
      }),
      [Jue.toString()]: Wn((t, { payload: e }) => {
        t.map.delete(e);
      }),
      ...Zue(VU),
    },
    VU()
  ),
  jU = () => ({ map: new Map() }),
  rZe = Yn(
    {
      [que.toString()]: Wn((t, { payload: e }) => {
        e.forEach((n) => t.map.set(n.id, n));
      }),
      [Yue.toString()]: Wn((t, { payload: e }) => {
        const {
          userId: n,
          hostId: r,
          connectionId: a,
          connectionParams: s,
          ownerDeviceToken: i,
          windowId: o,
        } = e;
        t.map.set(a, {
          id: a,
          owner: n,
          ownerDeviceToken: i,
          windowId: o,
          viewers: [],
          hostId: r,
          params: s,
        });
      }),
      [O3.toString()]: Wn((t, { payload: e }) => {
        t.map.delete(e);
      }),
      [H3.toString()]: Wn((t, { payload: e }) => {
        const { userId: n, connectionId: r, totalViewersCount: a } = e,
          s = t.map.get(r);
        s &&
          (s.viewers.indexOf(n) === -1 && s.viewers.push(n),
          (s.params.totalViewersCount = a));
      }),
      [N3.toString()]: Wn((t, { payload: e }) => {
        const { userId: n, connectionId: r, totalViewersCount: a } = e,
          s = t.map.get(r);
        s && ((s.viewers = Vg(s.viewers, n)), (s.params.totalViewersCount = a));
      }),
      [R3.toString()]: Wn((t, { payload: e }) => {
        const { connectionId: n, connectionParams: r } = e,
          a = t.map.get(n);
        a && (a.params = { ...a.params, ...r });
      }),
      [Xue.toString()]: Wn((t, { payload: e }) => {
        t.map.forEach((n, r) => {
          n.owner === e
            ? t.map.delete(r)
            : t.map.set(r, { ...n, viewers: Vg(n.viewers, e) });
        });
      }),
      ...Zue(jU),
    },
    jU()
  ),
  aZe = bp({ connections: rZe, connectionRequests: sZe }),
  ele = k("TOGGLE_SIDE_PANEL"),
  tle = k("SET_SIDE_PANEL_SHORTCUT_HINT_WAS_SHOWN"),
  iZe = k("SET_TOP_THREE_PROMO_CLOSED"),
  oZe = k("SET_AUTO_START_SHARING"),
  uZe = k("SET_SIDE_PANEL_TAB"),
  lZe = k("WINDOW_CREATED"),
  i_ = k("WINDOW_DESTROYED");
k("WINDOW_TITLE_CHANGED");
const cZe = Ze("REQUEST_PRIMARY_WINDOW_FOR_AN_ACTION");
function zU(t, e, n) {
  const r = [...t.windows];
  let a = r.findIndex(([u]) => u === e);
  a === -1 &&
    (r.push([e, { visible: t.visible, screen: t.screen }]), (a = r.length - 1));
  const [s, i] = r[a],
    o = n(i);
  return (r[a] = [s, o]), { ...t, windows: r, ...o };
}
const dZe = Yn(
    {
      [ele.toString()]: (t, { payload: { windowId: e } }) => ({
        ...zU(t, e, (n) => ({ ...n, visible: !n.visible })),
        interacted: !0,
      }),
      [uZe.toString()]: (t, { payload: { screen: e, windowId: n } }) => ({
        ...zU(t, n, (r) => ({ ...r, screen: e })),
      }),
      [lZe.toString()]: (t, { payload: e }) => ({
        ...t,
        windows: [...t.windows, [e, { visible: t.visible, screen: t.screen }]],
      }),
      [i_.toString()]: (t, { payload: e }) => ({
        ...t,
        windows: t.windows.filter(([n]) => n !== e),
      }),
      [tle.toString()]: (t) => ({ ...t, hintWasShown: !0 }),
      [iZe.toString()]: (t) => ({ ...t, topThreePromoClosed: !0 }),
      [oZe.toString()]: (t, { payload: { autostart: e } }) => ({
        ...t,
        startSharing: e,
      }),
    },
    {
      interacted: !1,
      hintWasShown: !1,
      visible: !0,
      windows: [],
      screen: "theme",
      topThreePromoClosed: !1,
      startSharing: !1,
    }
  ),
  pZe = k("SAVE_FILE_TYPE_APP_ASSOCIATION"),
  hZe = k("DELETE_FILE_TYPE_APP_ASSOCIATION"),
  fZe = k("SET_SFTP_SHOW_HIDDEN_FILES"),
  mZe = k("SET_SFTP_SORTING"),
  SZe = k("SUGGEST_TO_SAVE_FILE_TYPE_ASSOCIATIONS"),
  $U = { sorting: { sortBy: null, sortDirection: "ASC" } },
  yZe = {
    showHiddenFiles: !1,
    left: $U,
    right: $U,
    fileTypeAppAssociations: [],
  },
  gZe = Yn(
    {
      [pZe.toString()]: (t, { payload: e }) => ({
        ...t,
        fileTypeAppAssociations: [
          ...t.fileTypeAppAssociations.filter((n) => n.type !== e.type),
          e,
        ],
      }),
      [hZe.toString()]: (t, { payload: e }) => ({
        ...t,
        fileTypeAppAssociations: t.fileTypeAppAssociations.filter(
          (n) => n.type !== e.type
        ),
      }),
      [fZe.toString()]: (t, { payload: e }) => ({ ...t, showHiddenFiles: e }),
      [mZe.toString()]: (t, { payload: e }) => ({
        ...t,
        [e.containerId]: { sorting: e.sorting },
      }),
      [qn.success.toString()]: (t) => ({ ...t, fileTypeAppAssociations: [] }),
    },
    yZe
  ),
  { reducer: vZe, actions: V_t } = ua({
    name: "app",
    reducers: {
      initAppRuntimeInfo(t, { payload: e }) {
        return e;
      },
    },
    initialState: { userDataPath: "", version: "" },
  }),
  {
    reducer: _Ze,
    actions: bZe,
    getInitialState: EZe,
    name: TZe,
  } = ua({
    name: "appUpdate",
    reducers: {
      exchangeVersions(t, { payload: e }) {
        (t.previouslySeenVersion = t.persisted.lastSeenVersion),
          (t.persisted.lastSeenVersion = e);
      },
    },
    initialState: {
      previouslySeenVersion: void 0,
      persisted: { lastSeenVersion: void 0 },
    },
  }),
  { exchangeVersions: WU } = bZe,
  wZe = Ep(
    ({ persisted: t }) => t,
    (t) => ({ ...EZe(), persisted: t }),
    { whitelist: [TZe] }
  ),
  PZe = { commandPaletteInstanceID: "", isJumpToButtonVisible: "no" },
  {
    reducer: IZe,
    actions: { toggleJumpToButtonState: j_t, setCommandPaletteInstanceID: z_t },
  } = ua({
    name: "commandPalette",
    initialState: PZe,
    reducers: {
      toggleJumpToButtonState: {
        reducer: (t, { payload: e }) => {
          t.isJumpToButtonVisible = e;
        },
        prepare: (t) => ({ payload: t, meta: { scope: "local" } }),
      },
      setCommandPaletteInstanceID: {
        reducer: (t, { payload: e }) => {
          t.commandPaletteInstanceID = e;
        },
        prepare: (t) => ({ payload: t, meta: { scope: "local" } }),
      },
    },
  });
Kt("TRACK_COMMAND_PALETTE_ANALYTICS_SAGA");
Kt("TRACK_COMMAND_PALETTE_SELECT_ITEM_SAGA");
Kt("TRACK_COMMAND_PALETTE_JUMP_TO_BUTTON_STATE_SAGA");
const CZe = { isOpen: !1 },
  {
    reducer: AZe,
    actions: { toggleCommandPalette: $_t },
  } = ua({
    name: "commandPalette",
    initialState: CZe,
    reducers: {
      toggleCommandPalette: {
        reducer: (t, { payload: { filter: e, isOpen: n } }) => {
          (t.filter = e), (t.isOpen = n);
        },
        prepare: (t) => ({ payload: t, meta: { scope: "local" } }),
      },
    },
    extraReducers: (t) => {
      t.addCase(qn.success, (e) => {
        (e.filter = void 0), (e.isOpen = !1);
      });
    },
  });
Kt("TOGGLE_COMMAND_PALETTE_SAGA");
Kt("COMMAND_PALETTE_OPEN_TAB");
const OZe = { saveCredentials: !0 },
  { actions: W_t, reducer: HZe } = ua({
    name: "connectionFlow",
    initialState: OZe,
    reducers: {
      changeSaveCredentials: (t, { payload: e }) => {
        t.saveCredentials = e;
      },
    },
  }),
  NZe = { objects: [], localMessages: [], meta: { dot_type: null } },
  RZe = (t, e) => {
    let n = !0;
    const r = t.localMessages.map((a) => (a.id === e.id ? ((n = !1), e) : a));
    return n ? [...t.localMessages, e] : r;
  },
  kZe = Yn(
    {
      [DP.toString()]: (t, { payload: e }) => ({
        ...t,
        localMessages: RZe(t, e),
      }),
      [v5e.toString()]: (t, { payload: e }) => {
        const n = t.localMessages.filter((r) => r.id !== e);
        return { ...t, localMessages: n };
      },
      [zQ.toString()]: (t) => {
        const e = t.localMessages.map((n) => ({ ...n, is_seen: !0 }));
        return { ...t, localMessages: e };
      },
      [jQ.toString()]: (t, { payload: e }) => {
        const n = t.localMessages.map((r) =>
          r.id === e ? { ...r, is_seen: !0 } : r
        );
        return { ...t, localMessages: n };
      },
      [qd.success.toString()]: (t, { payload: e }) => ({ ...t, ...e }),
      [ea.success.toString()]: (t, { payload: e }) => ({ ...t, ...e }),
      [al.success.toString()]: (t, { payload: e }) => ({ ...t, objects: e }),
    },
    NZe
  ),
  xZe = ta({ hydrated: !1 }, (t) => {
    t.addCase(oI, () => ({ hydrated: !0 }));
  }),
  Dy = Ze("@MULTI_KEY/GET_AUTHORIZED_KEYS"),
  L3 = k("@MULTI_KEY/HYDRATE"),
  xE = Ze("@MULTI_KEY/UPDATE_USERNAME"),
  LZe = k("@MULTI_KEY/SET_FORM_OPEN"),
  MZe = k("@MULTI_KEY/EXPORT_SNIPPET_WAS_CREATED"),
  DZe = k("@MULTI_KEY/EXPORT_SNIPPET_WAS_UPDATED"),
  qU = {
    personalDeviceKeyPair: null,
    authorizedKeys: [],
    teamMultiKeyFormOpen: !1,
  },
  GZe = ta(qU, (t) => {
    t.addCase(qn.success, () => qU),
      t.addCase(L3, (e, { payload: n }) => {
        e.personalDeviceKeyPair = n;
      }),
      t.addCase(Dy.success, (e, { payload: n }) => {
        e.authorizedKeys = n;
      }),
      t.addCase(LZe, (e, { payload: n }) => {
        e.teamMultiKeyFormOpen = n;
      });
  }),
  { reducer: FZe, actions: q_t } = ua({
    name: "nativeTheme",
    reducers: {
      setNativeTheme(t, e) {
        return e.payload;
      },
    },
    initialState: { shouldUseDarkColors: !1 },
  }),
  UZe = [Zr, rf, v$, I$, w$, E$, Ju],
  KZe = (t) => ({ ...t, blockUiReferenceCount: t.blockUiReferenceCount + 1 }),
  YU = (t) => ({ ...t, blockUiReferenceCount: t.blockUiReferenceCount - 1 }),
  BZe = Yn(
    {
      [iJe.toString()]: (t, { payload: e }) => ({
        ...t,
        localPath: e,
        homePath: xA(e) ? e : t.homePath,
      }),
      [Nw.toString()]: (t, { payload: e }) => ({
        ...t,
        global: sr(t.global, (n) => {
          const r = n.find((a) => a.windowId === e.windowId);
          r == null
            ? n.push({ ...e, homePath: xA(e.path) ? e.path : NA })
            : ((r.path = e.path),
              (r.homePath = xA(e.path) ? e.path : r.homePath));
        }),
      }),
      [RH.toString()]: (t) => ({ ...t, forceUnblockUi: !t.forceUnblockUi }),
      ...VZe(),
    },
    {
      localPath: NA,
      homePath: NA,
      global: [],
      blockUiReferenceCount: 0,
      forceUnblockUi: !1,
    }
  );
function VZe() {
  const t = {};
  for (const { request: e, success: n, failure: r } of UZe)
    (t[e.toString()] = KZe), (t[n.toString()] = YU), (t[r.toString()] = YU);
  return t;
}
const xA = (t) => !(t.includes("terminals") || t.includes("sftp")),
  jZe = Yn(
    {
      [YQ.toString()]: sr((t, { payload: e }) => {
        t.saveAsHost = e;
      }),
    },
    { saveAsHost: !0 }
  ),
  zZe = k("SET_SAVE_TOGGLE_FOR_RUN_SNIPPET"),
  $Ze = ta(!0, (t) => {
    t.addCase(zZe, (e, n) => n.payload);
  }),
  WZe = { saveToggle: $Ze },
  qZe = bp(WZe),
  { reducer: YZe, actions: XZe } = ua({
    name: "shortcuts",
    reducers: {
      updateShortcutsScheme(t, { payload: e }) {
        return e ?? null;
      },
    },
    initialState: null,
  }),
  { updateShortcutsScheme: QZe } = XZe,
  nle = Kt("@SNACK/ADD_LOCAL_SNACK_NOTIFICATION"),
  Nu = k("@SNACK/ADD_SNACK_NOTIFICATION"),
  JZe = k("@SNACK/REMOVE_SNACK_NOTIFICATION"),
  ZZe = k("@SNACK/UPDATE_SNACK_NOTIFICATION"),
  eet = [],
  tet = Yn(
    {
      [nle.toString()]: (t, { payload: e }) => [...t, e],
      [Nu.toString()]: (t, { payload: e }) => [...t, e],
      [JZe.toString()]: (t, { payload: e }) => [...t.filter((n) => n.id !== e)],
      [ZZe.toString()]: (t, { payload: e }) => [
        ...t.filter((n) => n.id !== e.id),
        e,
      ],
      [qn.success.toString()]: () => [],
    },
    eet
  ),
  net = {
    connectionsAmount: 0,
    firstLaunchDate: Date.now(),
    firstInteractionDate: Date.now(),
    lastInteractionDate: Date.now(),
    sessionTabs: {},
  },
  set = ta(net, (t) => {
    t.addCase(E5e, (e) => {
      e.connectionsAmount += 1;
    }),
      t.addCase(T5e, (e, { payload: n }) => {
        e.firstLaunchDate = n;
      }),
      t.addCase(tH, (e) => {
        (e.sessionTabs = {}),
          (e.firstInteractionDate = Date.now()),
          (e.lastInteractionDate = Date.now());
      }),
      t.addCase(w5e, (e, { payload: n }) => {
        const { windowId: r, openedTabs: a } = n,
          s = e.sessionTabs[r];
        s
          ? (e.sessionTabs[r] = {
              totalTerminalTabs: s.totalTerminalTabs + 1,
              maxTerminalTabs: Math.max(a, s.maxTerminalTabs),
            })
          : (e.sessionTabs[r] = { totalTerminalTabs: a, maxTerminalTabs: a });
      }),
      t.addCase(P5e, (e) => {
        e.lastInteractionDate = Date.now();
      });
  }),
  ret = ta(
    {
      lastSyncDate: null,
      syncKeysAndIdentities: !1,
      inProcess: "no",
      isSharingPossible: !0,
    },
    (t) => {
      t.addCase(JQ, (e, { payload: n }) => ({ ...e, ...n }))
        .addCase($t.request, (e, { payload: n }) => {
          e.inProcess = n;
        })
        .addCase($t.success, (e, { payload: n }) => ({
          ...e,
          ...n,
          inProcess: "no",
        }))
        .addCase($t.failure, (e) => {
          e.inProcess = "no";
        })
        .addCase(ZQ, (e, { payload: n }) => {
          e.syncKeysAndIdentities = n;
        })
        .addCase(qn.success, (e) => {
          e.lastSyncDate = null;
        })
        .addCase(ZS, (e, { payload: n }) => {
          e.isSharingPossible = n;
        });
    }
  ),
  aet = { tags: [] },
  { actions: iet, reducer: oet } = ua({
    name: "filters/tags",
    initialState: aet,
    reducers: {
      refreshTags: (t, e) => {
        t.tags = e.payload;
      },
    },
  }),
  { refreshTags: Ru } = iet,
  XU = { terminalReconnectQueue: [], timer: 0 },
  uet = ta(XU, (t) =>
    t
      .addCase(O5e, (e, { payload: n }) => {
        e.terminalReconnectQueue.push(n);
      })
      .addCase(H5e, (e, { payload: n }) => {
        Xu(e.terminalReconnectQueue, (r) => r.id === n.id);
      })
      .addCase(N5e, (e) => {
        e.timer = Math.min(e.timer + 3e4, 6e4);
      })
      .addCase(R5e, (e) => {
        e.timer = XU.timer;
      })
  );
var sle = { exports: {} },
  kn = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var o_ = Symbol.for("react.element"),
  cet = Symbol.for("react.portal"),
  det = Symbol.for("react.fragment"),
  pet = Symbol.for("react.strict_mode"),
  het = Symbol.for("react.profiler"),
  fet = Symbol.for("react.provider"),
  met = Symbol.for("react.context"),
  yet = Symbol.for("react.forward_ref"),
  get = Symbol.for("react.suspense"),
  vet = Symbol.for("react.memo"),
  _et = Symbol.for("react.lazy"),
  QU = Symbol.iterator;
function bet(t) {
  return t === null || typeof t != "object"
    ? null
    : ((t = (QU && t[QU]) || t["@@iterator"]),
      typeof t == "function" ? t : null);
}
var rle = {
    isMounted: function () {
      return !1;
    },
    enqueueForceUpdate: function () {},
    enqueueReplaceState: function () {},
    enqueueSetState: function () {},
  },
  ale = Object.assign,
  ile = {};
function $m(t, e, n) {
  (this.props = t),
    (this.context = e),
    (this.refs = ile),
    (this.updater = n || rle);
}
$m.prototype.isReactComponent = {};
$m.prototype.setState = function (t, e) {
  if (typeof t != "object" && typeof t != "function" && t != null)
    throw Error(
      "setState(...): takes an object of state variables to update or a function which returns an object of state variables."
    );
  this.updater.enqueueSetState(this, t, e, "setState");
};
$m.prototype.forceUpdate = function (t) {
  this.updater.enqueueForceUpdate(this, t, "forceUpdate");
};
function ole() {}
ole.prototype = $m.prototype;
function M3(t, e, n) {
  (this.props = t),
    (this.context = e),
    (this.refs = ile),
    (this.updater = n || rle);
}
var D3 = (M3.prototype = new ole());
D3.constructor = M3;
ale(D3, $m.prototype);
D3.isPureReactComponent = !0;
var JU = Array.isArray,
  ule = Object.prototype.hasOwnProperty,
  G3 = { current: null },
  lle = { key: !0, ref: !0, __self: !0, __source: !0 };
function cle(t, e, n) {
  var r,
    a = {},
    s = null,
    i = null;
  if (e != null)
    for (r in (e.ref !== void 0 && (i = e.ref),
    e.key !== void 0 && (s = "" + e.key),
    e))
      ule.call(e, r) && !lle.hasOwnProperty(r) && (a[r] = e[r]);
  var o = arguments.length - 2;
  if (o === 1) a.children = n;
  else if (1 < o) {
    for (var u = Array(o), l = 0; l < o; l++) u[l] = arguments[l + 2];
    a.children = u;
  }
  if (t && t.defaultProps)
    for (r in ((o = t.defaultProps), o)) a[r] === void 0 && (a[r] = o[r]);
  return {
    $$typeof: o_,
    type: t,
    key: s,
    ref: i,
    props: a,
    _owner: G3.current,
  };
}
function Eet(t, e) {
  return {
    $$typeof: o_,
    type: t.type,
    key: e,
    ref: t.ref,
    props: t.props,
    _owner: t._owner,
  };
}
function F3(t) {
  return typeof t == "object" && t !== null && t.$$typeof === o_;
}
function Tet(t) {
  var e = { "=": "=0", ":": "=2" };
  return (
    "$" +
    t.replace(/[=:]/g, function (n) {
      return e[n];
    })
  );
}
var ZU = /\/+/g;
function LA(t, e) {
  return typeof t == "object" && t !== null && t.key != null
    ? Tet("" + t.key)
    : e.toString(36);
}
function LE(t, e, n, r, a) {
  var s = typeof t;
  (s === "undefined" || s === "boolean") && (t = null);
  var i = !1;
  if (t === null) i = !0;
  else
    switch (s) {
      case "string":
      case "number":
        i = !0;
        break;
      case "object":
        switch (t.$$typeof) {
          case o_:
          case cet:
            i = !0;
        }
    }
  if (i)
    return (
      (i = t),
      (a = a(i)),
      (t = r === "" ? "." + LA(i, 0) : r),
      JU(a)
        ? ((n = ""),
          t != null && (n = t.replace(ZU, "$&/") + "/"),
          LE(a, e, n, "", function (l) {
            return l;
          }))
        : a != null &&
          (F3(a) &&
            (a = Eet(
              a,
              n +
                (!a.key || (i && i.key === a.key)
                  ? ""
                  : ("" + a.key).replace(ZU, "$&/") + "/") +
                t
            )),
          e.push(a)),
      1
    );
  if (((i = 0), (r = r === "" ? "." : r + ":"), JU(t)))
    for (var o = 0; o < t.length; o++) {
      s = t[o];
      var u = r + LA(s, o);
      i += LE(s, e, n, u, a);
    }
  else if (((u = bet(t)), typeof u == "function"))
    for (t = u.call(t), o = 0; !(s = t.next()).done; )
      (s = s.value), (u = r + LA(s, o++)), (i += LE(s, e, n, u, a));
  else if (s === "object")
    throw (
      ((e = String(t)),
      Error(
        "Objects are not valid as a React child (found: " +
          (e === "[object Object]"
            ? "object with keys {" + Object.keys(t).join(", ") + "}"
            : e) +
          "). If you meant to render a collection of children, use an array instead."
      ))
    );
  return i;
}
function yb(t, e, n) {
  if (t == null) return t;
  var r = [],
    a = 0;
  return (
    LE(t, r, "", "", function (s) {
      return e.call(n, s, a++);
    }),
    r
  );
}
function wet(t) {
  if (t._status === -1) {
    var e = t._result;
    (e = e()),
      e.then(
        function (n) {
          (t._status === 0 || t._status === -1) &&
            ((t._status = 1), (t._result = n));
        },
        function (n) {
          (t._status === 0 || t._status === -1) &&
            ((t._status = 2), (t._result = n));
        }
      ),
      t._status === -1 && ((t._status = 0), (t._result = e));
  }
  if (t._status === 1) return t._result.default;
  throw t._result;
}
var Na = { current: null },
  ME = { transition: null },
  Pet = {
    ReactCurrentDispatcher: Na,
    ReactCurrentBatchConfig: ME,
    ReactCurrentOwner: G3,
  };
kn.Children = {
  map: yb,
  forEach: function (t, e, n) {
    yb(
      t,
      function () {
        e.apply(this, arguments);
      },
      n
    );
  },
  count: function (t) {
    var e = 0;
    return (
      yb(t, function () {
        e++;
      }),
      e
    );
  },
  toArray: function (t) {
    return (
      yb(t, function (e) {
        return e;
      }) || []
    );
  },
  only: function (t) {
    if (!F3(t))
      throw Error(
        "React.Children.only expected to receive a single React element child."
      );
    return t;
  },
};
kn.Component = $m;
kn.Fragment = det;
kn.Profiler = het;
kn.PureComponent = M3;
kn.StrictMode = pet;
kn.Suspense = get;
kn.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Pet;
kn.cloneElement = function (t, e, n) {
  if (t == null)
    throw Error(
      "React.cloneElement(...): The argument must be a React element, but you passed " +
        t +
        "."
    );
  var r = ale({}, t.props),
    a = t.key,
    s = t.ref,
    i = t._owner;
  if (e != null) {
    if (
      (e.ref !== void 0 && ((s = e.ref), (i = G3.current)),
      e.key !== void 0 && (a = "" + e.key),
      t.type && t.type.defaultProps)
    )
      var o = t.type.defaultProps;
    for (u in e)
      ule.call(e, u) &&
        !lle.hasOwnProperty(u) &&
        (r[u] = e[u] === void 0 && o !== void 0 ? o[u] : e[u]);
  }
  var u = arguments.length - 2;
  if (u === 1) r.children = n;
  else if (1 < u) {
    o = Array(u);
    for (var l = 0; l < u; l++) o[l] = arguments[l + 2];
    r.children = o;
  }
  return { $$typeof: o_, type: t.type, key: a, ref: s, props: r, _owner: i };
};
kn.createContext = function (t) {
  return (
    (t = {
      $$typeof: met,
      _currentValue: t,
      _currentValue2: t,
      _threadCount: 0,
      Provider: null,
      Consumer: null,
      _defaultValue: null,
      _globalName: null,
    }),
    (t.Provider = { $$typeof: fet, _context: t }),
    (t.Consumer = t)
  );
};
kn.createElement = cle;
kn.createFactory = function (t) {
  var e = cle.bind(null, t);
  return (e.type = t), e;
};
kn.createRef = function () {
  return { current: null };
};
kn.forwardRef = function (t) {
  return { $$typeof: yet, render: t };
};
kn.isValidElement = F3;
kn.lazy = function (t) {
  return { $$typeof: _et, _payload: { _status: -1, _result: t }, _init: wet };
};
kn.memo = function (t, e) {
  return { $$typeof: vet, type: t, compare: e === void 0 ? null : e };
};
kn.startTransition = function (t) {
  var e = ME.transition;
  ME.transition = {};
  try {
    t();
  } finally {
    ME.transition = e;
  }
};
kn.unstable_act = function () {
  throw Error("act(...) is not supported in production builds of React.");
};
kn.useCallback = function (t, e) {
  return Na.current.useCallback(t, e);
};
kn.useContext = function (t) {
  return Na.current.useContext(t);
};
kn.useDebugValue = function () {};
kn.useDeferredValue = function (t) {
  return Na.current.useDeferredValue(t);
};
kn.useEffect = function (t, e) {
  return Na.current.useEffect(t, e);
};
kn.useId = function () {
  return Na.current.useId();
};
kn.useImperativeHandle = function (t, e, n) {
  return Na.current.useImperativeHandle(t, e, n);
};
kn.useInsertionEffect = function (t, e) {
  return Na.current.useInsertionEffect(t, e);
};
kn.useLayoutEffect = function (t, e) {
  return Na.current.useLayoutEffect(t, e);
};
kn.useMemo = function (t, e) {
  return Na.current.useMemo(t, e);
};
kn.useReducer = function (t, e, n) {
  return Na.current.useReducer(t, e, n);
};
kn.useRef = function (t) {
  return Na.current.useRef(t);
};
kn.useState = function (t) {
  return Na.current.useState(t);
};
kn.useSyncExternalStore = function (t, e, n) {
  return Na.current.useSyncExternalStore(t, e, n);
};
kn.useTransition = function () {
  return Na.current.useTransition();
};
kn.version = "18.2.0";
sle.exports = kn;
var dle = sle.exports,
  eo = {},
  ple = { exports: {} },
  hle = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ (function (t) {
  function e(ye, Ae) {
    var De = ye.length;
    ye.push(Ae);
    e: for (; 0 < De; ) {
      var lt = (De - 1) >>> 1,
        nt = ye[lt];
      if (0 < a(nt, Ae)) (ye[lt] = Ae), (ye[De] = nt), (De = lt);
      else break e;
    }
  }
  function n(ye) {
    return ye.length === 0 ? null : ye[0];
  }
  function r(ye) {
    if (ye.length === 0) return null;
    var Ae = ye[0],
      De = ye.pop();
    if (De !== Ae) {
      ye[0] = De;
      e: for (var lt = 0, nt = ye.length, L = nt >>> 1; lt < L; ) {
        var M = 2 * (lt + 1) - 1,
          me = ye[M],
          K = M + 1,
          Ge = ye[K];
        if (0 > a(me, De))
          K < nt && 0 > a(Ge, me)
            ? ((ye[lt] = Ge), (ye[K] = De), (lt = K))
            : ((ye[lt] = me), (ye[M] = De), (lt = M));
        else if (K < nt && 0 > a(Ge, De)) (ye[lt] = Ge), (ye[K] = De), (lt = K);
        else break e;
      }
    }
    return Ae;
  }
  function a(ye, Ae) {
    var De = ye.sortIndex - Ae.sortIndex;
    return De !== 0 ? De : ye.id - Ae.id;
  }
  if (typeof performance == "object" && typeof performance.now == "function") {
    var s = performance;
    t.unstable_now = function () {
      return s.now();
    };
  } else {
    var i = Date,
      o = i.now();
    t.unstable_now = function () {
      return i.now() - o;
    };
  }
  var u = [],
    l = [],
    c = 1,
    d = null,
    p = 3,
    m = !1,
    y = !1,
    I = !1,
    O = typeof setTimeout == "function" ? setTimeout : null,
    g = typeof clearTimeout == "function" ? clearTimeout : null,
    C = typeof setImmediate < "u" ? setImmediate : null;
  typeof navigator < "u" &&
    navigator.scheduling !== void 0 &&
    navigator.scheduling.isInputPending !== void 0 &&
    navigator.scheduling.isInputPending.bind(navigator.scheduling);
  function H(ye) {
    for (var Ae = n(l); Ae !== null; ) {
      if (Ae.callback === null) r(l);
      else if (Ae.startTime <= ye)
        r(l), (Ae.sortIndex = Ae.expirationTime), e(u, Ae);
      else break;
      Ae = n(l);
    }
  }
  function B(ye) {
    if (((I = !1), H(ye), !y))
      if (n(u) !== null) (y = !0), F(he);
      else {
        var Ae = n(l);
        Ae !== null && Se(B, Ae.startTime - ye);
      }
  }
  function he(ye, Ae) {
    (y = !1), I && ((I = !1), g(R), (R = -1)), (m = !0);
    var De = p;
    try {
      for (
        H(Ae), d = n(u);
        d !== null && (!(d.expirationTime > Ae) || (ye && !we()));

      ) {
        var lt = d.callback;
        if (typeof lt == "function") {
          (d.callback = null), (p = d.priorityLevel);
          var nt = lt(d.expirationTime <= Ae);
          (Ae = t.unstable_now()),
            typeof nt == "function" ? (d.callback = nt) : d === n(u) && r(u),
            H(Ae);
        } else r(u);
        d = n(u);
      }
      if (d !== null) var L = !0;
      else {
        var M = n(l);
        M !== null && Se(B, M.startTime - Ae), (L = !1);
      }
      return L;
    } finally {
      (d = null), (p = De), (m = !1);
    }
  }
  var de = !1,
    U = null,
    R = -1,
    ge = 5,
    ve = -1;
  function we() {
    return !(t.unstable_now() - ve < ge);
  }
  function Te() {
    if (U !== null) {
      var ye = t.unstable_now();
      ve = ye;
      var Ae = !0;
      try {
        Ae = U(!0, ye);
      } finally {
        Ae ? Ce() : ((de = !1), (U = null));
      }
    } else de = !1;
  }
  var Ce;
  if (typeof C == "function")
    Ce = function () {
      C(Te);
    };
  else if (typeof MessageChannel < "u") {
    var Ee = new MessageChannel(),
      x = Ee.port2;
    (Ee.port1.onmessage = Te),
      (Ce = function () {
        x.postMessage(null);
      });
  } else
    Ce = function () {
      O(Te, 0);
    };
  function F(ye) {
    (U = ye), de || ((de = !0), Ce());
  }
  function Se(ye, Ae) {
    R = O(function () {
      ye(t.unstable_now());
    }, Ae);
  }
  (t.unstable_IdlePriority = 5),
    (t.unstable_ImmediatePriority = 1),
    (t.unstable_LowPriority = 4),
    (t.unstable_NormalPriority = 3),
    (t.unstable_Profiling = null),
    (t.unstable_UserBlockingPriority = 2),
    (t.unstable_cancelCallback = function (ye) {
      ye.callback = null;
    }),
    (t.unstable_continueExecution = function () {
      y || m || ((y = !0), F(he));
    }),
    (t.unstable_forceFrameRate = function (ye) {
      0 > ye || 125 < ye
        ? console.error(
            "forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"
          )
        : (ge = 0 < ye ? Math.floor(1e3 / ye) : 5);
    }),
    (t.unstable_getCurrentPriorityLevel = function () {
      return p;
    }),
    (t.unstable_getFirstCallbackNode = function () {
      return n(u);
    }),
    (t.unstable_next = function (ye) {
      switch (p) {
        case 1:
        case 2:
        case 3:
          var Ae = 3;
          break;
        default:
          Ae = p;
      }
      var De = p;
      p = Ae;
      try {
        return ye();
      } finally {
        p = De;
      }
    }),
    (t.unstable_pauseExecution = function () {}),
    (t.unstable_requestPaint = function () {}),
    (t.unstable_runWithPriority = function (ye, Ae) {
      switch (ye) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
        default:
          ye = 3;
      }
      var De = p;
      p = ye;
      try {
        return Ae();
      } finally {
        p = De;
      }
    }),
    (t.unstable_scheduleCallback = function (ye, Ae, De) {
      var lt = t.unstable_now();
      switch (
        (typeof De == "object" && De !== null
          ? ((De = De.delay),
            (De = typeof De == "number" && 0 < De ? lt + De : lt))
          : (De = lt),
        ye)
      ) {
        case 1:
          var nt = -1;
          break;
        case 2:
          nt = 250;
          break;
        case 5:
          nt = 1073741823;
          break;
        case 4:
          nt = 1e4;
          break;
        default:
          nt = 5e3;
      }
      return (
        (nt = De + nt),
        (ye = {
          id: c++,
          callback: Ae,
          priorityLevel: ye,
          startTime: De,
          expirationTime: nt,
          sortIndex: -1,
        }),
        De > lt
          ? ((ye.sortIndex = De),
            e(l, ye),
            n(u) === null &&
              ye === n(l) &&
              (I ? (g(R), (R = -1)) : (I = !0), Se(B, De - lt)))
          : ((ye.sortIndex = nt), e(u, ye), y || m || ((y = !0), F(he))),
        ye
      );
    }),
    (t.unstable_shouldYield = we),
    (t.unstable_wrapCallback = function (ye) {
      var Ae = p;
      return function () {
        var De = p;
        p = Ae;
        try {
          return ye.apply(this, arguments);
        } finally {
          p = De;
        }
      };
    });
})(hle);
ple.exports = hle;
var Iet = ple.exports;
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var fle = dle,
  gi = Iet;
function ht(t) {
  for (
    var e = "https://reactjs.org/docs/error-decoder.html?invariant=" + t, n = 1;
    n < arguments.length;
    n++
  )
    e += "&args[]=" + encodeURIComponent(arguments[n]);
  return (
    "Minified React error #" +
    t +
    "; visit " +
    e +
    " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
  );
}
var mle = new Set(),
  zg = {};
function Up(t, e) {
  Jf(t, e), Jf(t + "Capture", e);
}
function Jf(t, e) {
  for (zg[t] = e, t = 0; t < e.length; t++) mle.add(e[t]);
}
var vl = !(
    typeof window > "u" ||
    typeof window.document > "u" ||
    typeof window.document.createElement > "u"
  ),
  xH = Object.prototype.hasOwnProperty,
  Cet =
    /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
  eK = {},
  tK = {};
function Aet(t) {
  return xH.call(tK, t)
    ? !0
    : xH.call(eK, t)
    ? !1
    : Cet.test(t)
    ? (tK[t] = !0)
    : ((eK[t] = !0), !1);
}
function Oet(t, e, n, r) {
  if (n !== null && n.type === 0) return !1;
  switch (typeof e) {
    case "function":
    case "symbol":
      return !0;
    case "boolean":
      return r
        ? !1
        : n !== null
        ? !n.acceptsBooleans
        : ((t = t.toLowerCase().slice(0, 5)), t !== "data-" && t !== "aria-");
    default:
      return !1;
  }
}
function Het(t, e, n, r) {
  if (e === null || typeof e > "u" || Oet(t, e, n, r)) return !0;
  if (r) return !1;
  if (n !== null)
    switch (n.type) {
      case 3:
        return !e;
      case 4:
        return e === !1;
      case 5:
        return isNaN(e);
      case 6:
        return isNaN(e) || 1 > e;
    }
  return !1;
}
function Ra(t, e, n, r, a, s, i) {
  (this.acceptsBooleans = e === 2 || e === 3 || e === 4),
    (this.attributeName = r),
    (this.attributeNamespace = a),
    (this.mustUseProperty = n),
    (this.propertyName = t),
    (this.type = e),
    (this.sanitizeURL = s),
    (this.removeEmptyString = i);
}
var Mr = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style"
  .split(" ")
  .forEach(function (t) {
    Mr[t] = new Ra(t, 0, !1, t, null, !1, !1);
  });
[
  ["acceptCharset", "accept-charset"],
  ["className", "class"],
  ["htmlFor", "for"],
  ["httpEquiv", "http-equiv"],
].forEach(function (t) {
  var e = t[0];
  Mr[e] = new Ra(e, 1, !1, t[1], null, !1, !1);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function (t) {
  Mr[t] = new Ra(t, 2, !1, t.toLowerCase(), null, !1, !1);
});
[
  "autoReverse",
  "externalResourcesRequired",
  "focusable",
  "preserveAlpha",
].forEach(function (t) {
  Mr[t] = new Ra(t, 2, !1, t, null, !1, !1);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope"
  .split(" ")
  .forEach(function (t) {
    Mr[t] = new Ra(t, 3, !1, t.toLowerCase(), null, !1, !1);
  });
["checked", "multiple", "muted", "selected"].forEach(function (t) {
  Mr[t] = new Ra(t, 3, !0, t, null, !1, !1);
});
["capture", "download"].forEach(function (t) {
  Mr[t] = new Ra(t, 4, !1, t, null, !1, !1);
});
["cols", "rows", "size", "span"].forEach(function (t) {
  Mr[t] = new Ra(t, 6, !1, t, null, !1, !1);
});
["rowSpan", "start"].forEach(function (t) {
  Mr[t] = new Ra(t, 5, !1, t.toLowerCase(), null, !1, !1);
});
var U3 = /[\-:]([a-z])/g;
function K3(t) {
  return t[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height"
  .split(" ")
  .forEach(function (t) {
    var e = t.replace(U3, K3);
    Mr[e] = new Ra(e, 1, !1, t, null, !1, !1);
  });
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type"
  .split(" ")
  .forEach(function (t) {
    var e = t.replace(U3, K3);
    Mr[e] = new Ra(e, 1, !1, t, "http://www.w3.org/1999/xlink", !1, !1);
  });
["xml:base", "xml:lang", "xml:space"].forEach(function (t) {
  var e = t.replace(U3, K3);
  Mr[e] = new Ra(e, 1, !1, t, "http://www.w3.org/XML/1998/namespace", !1, !1);
});
["tabIndex", "crossOrigin"].forEach(function (t) {
  Mr[t] = new Ra(t, 1, !1, t.toLowerCase(), null, !1, !1);
});
Mr.xlinkHref = new Ra(
  "xlinkHref",
  1,
  !1,
  "xlink:href",
  "http://www.w3.org/1999/xlink",
  !0,
  !1
);
["src", "href", "action", "formAction"].forEach(function (t) {
  Mr[t] = new Ra(t, 1, !1, t.toLowerCase(), null, !0, !0);
});
function B3(t, e, n, r) {
  var a = Mr.hasOwnProperty(e) ? Mr[e] : null;
  (a !== null
    ? a.type !== 0
    : r ||
      !(2 < e.length) ||
      (e[0] !== "o" && e[0] !== "O") ||
      (e[1] !== "n" && e[1] !== "N")) &&
    (Het(e, n, a, r) && (n = null),
    r || a === null
      ? Aet(e) &&
        (n === null ? t.removeAttribute(e) : t.setAttribute(e, "" + n))
      : a.mustUseProperty
      ? (t[a.propertyName] = n === null ? (a.type === 3 ? !1 : "") : n)
      : ((e = a.attributeName),
        (r = a.attributeNamespace),
        n === null
          ? t.removeAttribute(e)
          : ((a = a.type),
            (n = a === 3 || (a === 4 && n === !0) ? "" : "" + n),
            r ? t.setAttributeNS(r, e, n) : t.setAttribute(e, n))));
}
var Ml = fle.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
  gb = Symbol.for("react.element"),
  xh = Symbol.for("react.portal"),
  Lh = Symbol.for("react.fragment"),
  V3 = Symbol.for("react.strict_mode"),
  LH = Symbol.for("react.profiler"),
  Sle = Symbol.for("react.provider"),
  yle = Symbol.for("react.context"),
  j3 = Symbol.for("react.forward_ref"),
  MH = Symbol.for("react.suspense"),
  DH = Symbol.for("react.suspense_list"),
  z3 = Symbol.for("react.memo"),
  rc = Symbol.for("react.lazy"),
  gle = Symbol.for("react.offscreen"),
  nK = Symbol.iterator;
function HS(t) {
  return t === null || typeof t != "object"
    ? null
    : ((t = (nK && t[nK]) || t["@@iterator"]),
      typeof t == "function" ? t : null);
}
var Vs = Object.assign,
  MA;
function ty(t) {
  if (MA === void 0)
    try {
      throw Error();
    } catch (n) {
      var e = n.stack.trim().match(/\n( *(at )?)/);
      MA = (e && e[1]) || "";
    }
  return (
    `
` +
    MA +
    t
  );
}
var DA = !1;
function GA(t, e) {
  if (!t || DA) return "";
  DA = !0;
  var n = Error.prepareStackTrace;
  Error.prepareStackTrace = void 0;
  try {
    if (e)
      if (
        ((e = function () {
          throw Error();
        }),
        Object.defineProperty(e.prototype, "props", {
          set: function () {
            throw Error();
          },
        }),
        typeof Reflect == "object" && Reflect.construct)
      ) {
        try {
          Reflect.construct(e, []);
        } catch (l) {
          var r = l;
        }
        Reflect.construct(t, [], e);
      } else {
        try {
          e.call();
        } catch (l) {
          r = l;
        }
        t.call(e.prototype);
      }
    else {
      try {
        throw Error();
      } catch (l) {
        r = l;
      }
      t();
    }
  } catch (l) {
    if (l && r && typeof l.stack == "string") {
      for (
        var a = l.stack.split(`
`),
          s = r.stack.split(`
`),
          i = a.length - 1,
          o = s.length - 1;
        1 <= i && 0 <= o && a[i] !== s[o];

      )
        o--;
      for (; 1 <= i && 0 <= o; i--, o--)
        if (a[i] !== s[o]) {
          if (i !== 1 || o !== 1)
            do
              if ((i--, o--, 0 > o || a[i] !== s[o])) {
                var u =
                  `
` + a[i].replace(" at new ", " at ");
                return (
                  t.displayName &&
                    u.includes("<anonymous>") &&
                    (u = u.replace("<anonymous>", t.displayName)),
                  u
                );
              }
            while (1 <= i && 0 <= o);
          break;
        }
    }
  } finally {
    (DA = !1), (Error.prepareStackTrace = n);
  }
  return (t = t ? t.displayName || t.name : "") ? ty(t) : "";
}
function Net(t) {
  switch (t.tag) {
    case 5:
      return ty(t.type);
    case 16:
      return ty("Lazy");
    case 13:
      return ty("Suspense");
    case 19:
      return ty("SuspenseList");
    case 0:
    case 2:
    case 15:
      return (t = GA(t.type, !1)), t;
    case 11:
      return (t = GA(t.type.render, !1)), t;
    case 1:
      return (t = GA(t.type, !0)), t;
    default:
      return "";
  }
}
function GH(t) {
  if (t == null) return null;
  if (typeof t == "function") return t.displayName || t.name || null;
  if (typeof t == "string") return t;
  switch (t) {
    case Lh:
      return "Fragment";
    case xh:
      return "Portal";
    case LH:
      return "Profiler";
    case V3:
      return "StrictMode";
    case MH:
      return "Suspense";
    case DH:
      return "SuspenseList";
  }
  if (typeof t == "object")
    switch (t.$$typeof) {
      case yle:
        return (t.displayName || "Context") + ".Consumer";
      case Sle:
        return (t._context.displayName || "Context") + ".Provider";
      case j3:
        var e = t.render;
        return (
          (t = t.displayName),
          t ||
            ((t = e.displayName || e.name || ""),
            (t = t !== "" ? "ForwardRef(" + t + ")" : "ForwardRef")),
          t
        );
      case z3:
        return (
          (e = t.displayName || null), e !== null ? e : GH(t.type) || "Memo"
        );
      case rc:
        (e = t._payload), (t = t._init);
        try {
          return GH(t(e));
        } catch {}
    }
  return null;
}
function Ret(t) {
  var e = t.type;
  switch (t.tag) {
    case 24:
      return "Cache";
    case 9:
      return (e.displayName || "Context") + ".Consumer";
    case 10:
      return (e._context.displayName || "Context") + ".Provider";
    case 18:
      return "DehydratedFragment";
    case 11:
      return (
        (t = e.render),
        (t = t.displayName || t.name || ""),
        e.displayName || (t !== "" ? "ForwardRef(" + t + ")" : "ForwardRef")
      );
    case 7:
      return "Fragment";
    case 5:
      return e;
    case 4:
      return "Portal";
    case 3:
      return "Root";
    case 6:
      return "Text";
    case 16:
      return GH(e);
    case 8:
      return e === V3 ? "StrictMode" : "Mode";
    case 22:
      return "Offscreen";
    case 12:
      return "Profiler";
    case 21:
      return "Scope";
    case 13:
      return "Suspense";
    case 19:
      return "SuspenseList";
    case 25:
      return "TracingMarker";
    case 1:
    case 0:
    case 17:
    case 2:
    case 14:
    case 15:
      if (typeof e == "function") return e.displayName || e.name || null;
      if (typeof e == "string") return e;
  }
  return null;
}
function Jc(t) {
  switch (typeof t) {
    case "boolean":
    case "number":
    case "string":
    case "undefined":
      return t;
    case "object":
      return t;
    default:
      return "";
  }
}
function vle(t) {
  var e = t.type;
  return (
    (t = t.nodeName) &&
    t.toLowerCase() === "input" &&
    (e === "checkbox" || e === "radio")
  );
}
function ket(t) {
  var e = vle(t) ? "checked" : "value",
    n = Object.getOwnPropertyDescriptor(t.constructor.prototype, e),
    r = "" + t[e];
  if (
    !t.hasOwnProperty(e) &&
    typeof n < "u" &&
    typeof n.get == "function" &&
    typeof n.set == "function"
  ) {
    var a = n.get,
      s = n.set;
    return (
      Object.defineProperty(t, e, {
        configurable: !0,
        get: function () {
          return a.call(this);
        },
        set: function (i) {
          (r = "" + i), s.call(this, i);
        },
      }),
      Object.defineProperty(t, e, { enumerable: n.enumerable }),
      {
        getValue: function () {
          return r;
        },
        setValue: function (i) {
          r = "" + i;
        },
        stopTracking: function () {
          (t._valueTracker = null), delete t[e];
        },
      }
    );
  }
}
function vb(t) {
  t._valueTracker || (t._valueTracker = ket(t));
}
function _le(t) {
  if (!t) return !1;
  var e = t._valueTracker;
  if (!e) return !0;
  var n = e.getValue(),
    r = "";
  return (
    t && (r = vle(t) ? (t.checked ? "true" : "false") : t.value),
    (t = r),
    t !== n ? (e.setValue(t), !0) : !1
  );
}
function Rw(t) {
  if (((t = t || (typeof document < "u" ? document : void 0)), typeof t > "u"))
    return null;
  try {
    return t.activeElement || t.body;
  } catch {
    return t.body;
  }
}
function FH(t, e) {
  var n = e.checked;
  return Vs({}, e, {
    defaultChecked: void 0,
    defaultValue: void 0,
    value: void 0,
    checked: n ?? t._wrapperState.initialChecked,
  });
}
function sK(t, e) {
  var n = e.defaultValue == null ? "" : e.defaultValue,
    r = e.checked != null ? e.checked : e.defaultChecked;
  (n = Jc(e.value != null ? e.value : n)),
    (t._wrapperState = {
      initialChecked: r,
      initialValue: n,
      controlled:
        e.type === "checkbox" || e.type === "radio"
          ? e.checked != null
          : e.value != null,
    });
}
function ble(t, e) {
  (e = e.checked), e != null && B3(t, "checked", e, !1);
}
function UH(t, e) {
  ble(t, e);
  var n = Jc(e.value),
    r = e.type;
  if (n != null)
    r === "number"
      ? ((n === 0 && t.value === "") || t.value != n) && (t.value = "" + n)
      : t.value !== "" + n && (t.value = "" + n);
  else if (r === "submit" || r === "reset") {
    t.removeAttribute("value");
    return;
  }
  e.hasOwnProperty("value")
    ? KH(t, e.type, n)
    : e.hasOwnProperty("defaultValue") && KH(t, e.type, Jc(e.defaultValue)),
    e.checked == null &&
      e.defaultChecked != null &&
      (t.defaultChecked = !!e.defaultChecked);
}
function rK(t, e, n) {
  if (e.hasOwnProperty("value") || e.hasOwnProperty("defaultValue")) {
    var r = e.type;
    if (
      !(
        (r !== "submit" && r !== "reset") ||
        (e.value !== void 0 && e.value !== null)
      )
    )
      return;
    (e = "" + t._wrapperState.initialValue),
      n || e === t.value || (t.value = e),
      (t.defaultValue = e);
  }
  (n = t.name),
    n !== "" && (t.name = ""),
    (t.defaultChecked = !!t._wrapperState.initialChecked),
    n !== "" && (t.name = n);
}
function KH(t, e, n) {
  (e !== "number" || Rw(t.ownerDocument) !== t) &&
    (n == null
      ? (t.defaultValue = "" + t._wrapperState.initialValue)
      : t.defaultValue !== "" + n && (t.defaultValue = "" + n));
}
var ny = Array.isArray;
function yf(t, e, n, r) {
  if (((t = t.options), e)) {
    e = {};
    for (var a = 0; a < n.length; a++) e["$" + n[a]] = !0;
    for (n = 0; n < t.length; n++)
      (a = e.hasOwnProperty("$" + t[n].value)),
        t[n].selected !== a && (t[n].selected = a),
        a && r && (t[n].defaultSelected = !0);
  } else {
    for (n = "" + Jc(n), e = null, a = 0; a < t.length; a++) {
      if (t[a].value === n) {
        (t[a].selected = !0), r && (t[a].defaultSelected = !0);
        return;
      }
      e !== null || t[a].disabled || (e = t[a]);
    }
    e !== null && (e.selected = !0);
  }
}
function BH(t, e) {
  if (e.dangerouslySetInnerHTML != null) throw Error(ht(91));
  return Vs({}, e, {
    value: void 0,
    defaultValue: void 0,
    children: "" + t._wrapperState.initialValue,
  });
}
function aK(t, e) {
  var n = e.value;
  if (n == null) {
    if (((n = e.children), (e = e.defaultValue), n != null)) {
      if (e != null) throw Error(ht(92));
      if (ny(n)) {
        if (1 < n.length) throw Error(ht(93));
        n = n[0];
      }
      e = n;
    }
    e == null && (e = ""), (n = e);
  }
  t._wrapperState = { initialValue: Jc(n) };
}
function Ele(t, e) {
  var n = Jc(e.value),
    r = Jc(e.defaultValue);
  n != null &&
    ((n = "" + n),
    n !== t.value && (t.value = n),
    e.defaultValue == null && t.defaultValue !== n && (t.defaultValue = n)),
    r != null && (t.defaultValue = "" + r);
}
function iK(t) {
  var e = t.textContent;
  e === t._wrapperState.initialValue && e !== "" && e !== null && (t.value = e);
}
function Tle(t) {
  switch (t) {
    case "svg":
      return "http://www.w3.org/2000/svg";
    case "math":
      return "http://www.w3.org/1998/Math/MathML";
    default:
      return "http://www.w3.org/1999/xhtml";
  }
}
function VH(t, e) {
  return t == null || t === "http://www.w3.org/1999/xhtml"
    ? Tle(e)
    : t === "http://www.w3.org/2000/svg" && e === "foreignObject"
    ? "http://www.w3.org/1999/xhtml"
    : t;
}
var _b,
  wle = (function (t) {
    return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction
      ? function (e, n, r, a) {
          MSApp.execUnsafeLocalFunction(function () {
            return t(e, n, r, a);
          });
        }
      : t;
  })(function (t, e) {
    if (t.namespaceURI !== "http://www.w3.org/2000/svg" || "innerHTML" in t)
      t.innerHTML = e;
    else {
      for (
        _b = _b || document.createElement("div"),
          _b.innerHTML = "<svg>" + e.valueOf().toString() + "</svg>",
          e = _b.firstChild;
        t.firstChild;

      )
        t.removeChild(t.firstChild);
      for (; e.firstChild; ) t.appendChild(e.firstChild);
    }
  });
function $g(t, e) {
  if (e) {
    var n = t.firstChild;
    if (n && n === t.lastChild && n.nodeType === 3) {
      n.nodeValue = e;
      return;
    }
  }
  t.textContent = e;
}
var Gy = {
    animationIterationCount: !0,
    aspectRatio: !0,
    borderImageOutset: !0,
    borderImageSlice: !0,
    borderImageWidth: !0,
    boxFlex: !0,
    boxFlexGroup: !0,
    boxOrdinalGroup: !0,
    columnCount: !0,
    columns: !0,
    flex: !0,
    flexGrow: !0,
    flexPositive: !0,
    flexShrink: !0,
    flexNegative: !0,
    flexOrder: !0,
    gridArea: !0,
    gridRow: !0,
    gridRowEnd: !0,
    gridRowSpan: !0,
    gridRowStart: !0,
    gridColumn: !0,
    gridColumnEnd: !0,
    gridColumnSpan: !0,
    gridColumnStart: !0,
    fontWeight: !0,
    lineClamp: !0,
    lineHeight: !0,
    opacity: !0,
    order: !0,
    orphans: !0,
    tabSize: !0,
    widows: !0,
    zIndex: !0,
    zoom: !0,
    fillOpacity: !0,
    floodOpacity: !0,
    stopOpacity: !0,
    strokeDasharray: !0,
    strokeDashoffset: !0,
    strokeMiterlimit: !0,
    strokeOpacity: !0,
    strokeWidth: !0,
  },
  xet = ["Webkit", "ms", "Moz", "O"];
Object.keys(Gy).forEach(function (t) {
  xet.forEach(function (e) {
    (e = e + t.charAt(0).toUpperCase() + t.substring(1)), (Gy[e] = Gy[t]);
  });
});
function Ple(t, e, n) {
  return e == null || typeof e == "boolean" || e === ""
    ? ""
    : n || typeof e != "number" || e === 0 || (Gy.hasOwnProperty(t) && Gy[t])
    ? ("" + e).trim()
    : e + "px";
}
function Ile(t, e) {
  t = t.style;
  for (var n in e)
    if (e.hasOwnProperty(n)) {
      var r = n.indexOf("--") === 0,
        a = Ple(n, e[n], r);
      n === "float" && (n = "cssFloat"), r ? t.setProperty(n, a) : (t[n] = a);
    }
}
var Let = Vs(
  { menuitem: !0 },
  {
    area: !0,
    base: !0,
    br: !0,
    col: !0,
    embed: !0,
    hr: !0,
    img: !0,
    input: !0,
    keygen: !0,
    link: !0,
    meta: !0,
    param: !0,
    source: !0,
    track: !0,
    wbr: !0,
  }
);
function jH(t, e) {
  if (e) {
    if (Let[t] && (e.children != null || e.dangerouslySetInnerHTML != null))
      throw Error(ht(137, t));
    if (e.dangerouslySetInnerHTML != null) {
      if (e.children != null) throw Error(ht(60));
      if (
        typeof e.dangerouslySetInnerHTML != "object" ||
        !("__html" in e.dangerouslySetInnerHTML)
      )
        throw Error(ht(61));
    }
    if (e.style != null && typeof e.style != "object") throw Error(ht(62));
  }
}
function zH(t, e) {
  if (t.indexOf("-") === -1) return typeof e.is == "string";
  switch (t) {
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
      return !1;
    default:
      return !0;
  }
}
var $H = null;
function $3(t) {
  return (
    (t = t.target || t.srcElement || window),
    t.correspondingUseElement && (t = t.correspondingUseElement),
    t.nodeType === 3 ? t.parentNode : t
  );
}
var WH = null,
  gf = null,
  vf = null;
function oK(t) {
  if ((t = c_(t))) {
    if (typeof WH != "function") throw Error(ht(280));
    var e = t.stateNode;
    e && ((e = fI(e)), WH(t.stateNode, t.type, e));
  }
}
function Cle(t) {
  gf ? (vf ? vf.push(t) : (vf = [t])) : (gf = t);
}
function Ale() {
  if (gf) {
    var t = gf,
      e = vf;
    if (((vf = gf = null), oK(t), e)) for (t = 0; t < e.length; t++) oK(e[t]);
  }
}
function Ole(t, e) {
  return t(e);
}
function Hle() {}
var FA = !1;
function Nle(t, e, n) {
  if (FA) return t(e, n);
  FA = !0;
  try {
    return Ole(t, e, n);
  } finally {
    (FA = !1), (gf !== null || vf !== null) && (Hle(), Ale());
  }
}
function Wg(t, e) {
  var n = t.stateNode;
  if (n === null) return null;
  var r = fI(n);
  if (r === null) return null;
  n = r[e];
  e: switch (e) {
    case "onClick":
    case "onClickCapture":
    case "onDoubleClick":
    case "onDoubleClickCapture":
    case "onMouseDown":
    case "onMouseDownCapture":
    case "onMouseMove":
    case "onMouseMoveCapture":
    case "onMouseUp":
    case "onMouseUpCapture":
    case "onMouseEnter":
      (r = !r.disabled) ||
        ((t = t.type),
        (r = !(
          t === "button" ||
          t === "input" ||
          t === "select" ||
          t === "textarea"
        ))),
        (t = !r);
      break e;
    default:
      t = !1;
  }
  if (t) return null;
  if (n && typeof n != "function") throw Error(ht(231, e, typeof n));
  return n;
}
var qH = !1;
if (vl)
  try {
    var NS = {};
    Object.defineProperty(NS, "passive", {
      get: function () {
        qH = !0;
      },
    }),
      window.addEventListener("test", NS, NS),
      window.removeEventListener("test", NS, NS);
  } catch {
    qH = !1;
  }
function Met(t, e, n, r, a, s, i, o, u) {
  var l = Array.prototype.slice.call(arguments, 3);
  try {
    e.apply(n, l);
  } catch (c) {
    this.onError(c);
  }
}
var Fy = !1,
  kw = null,
  xw = !1,
  YH = null,
  Det = {
    onError: function (t) {
      (Fy = !0), (kw = t);
    },
  };
function Get(t, e, n, r, a, s, i, o, u) {
  (Fy = !1), (kw = null), Met.apply(Det, arguments);
}
function Fet(t, e, n, r, a, s, i, o, u) {
  if ((Get.apply(this, arguments), Fy)) {
    if (Fy) {
      var l = kw;
      (Fy = !1), (kw = null);
    } else throw Error(ht(198));
    xw || ((xw = !0), (YH = l));
  }
}
function Kp(t) {
  var e = t,
    n = t;
  if (t.alternate) for (; e.return; ) e = e.return;
  else {
    t = e;
    do (e = t), e.flags & 4098 && (n = e.return), (t = e.return);
    while (t);
  }
  return e.tag === 3 ? n : null;
}
function Rle(t) {
  if (t.tag === 13) {
    var e = t.memoizedState;
    if (
      (e === null && ((t = t.alternate), t !== null && (e = t.memoizedState)),
      e !== null)
    )
      return e.dehydrated;
  }
  return null;
}
function uK(t) {
  if (Kp(t) !== t) throw Error(ht(188));
}
function Uet(t) {
  var e = t.alternate;
  if (!e) {
    if (((e = Kp(t)), e === null)) throw Error(ht(188));
    return e !== t ? null : t;
  }
  for (var n = t, r = e; ; ) {
    var a = n.return;
    if (a === null) break;
    var s = a.alternate;
    if (s === null) {
      if (((r = a.return), r !== null)) {
        n = r;
        continue;
      }
      break;
    }
    if (a.child === s.child) {
      for (s = a.child; s; ) {
        if (s === n) return uK(a), t;
        if (s === r) return uK(a), e;
        s = s.sibling;
      }
      throw Error(ht(188));
    }
    if (n.return !== r.return) (n = a), (r = s);
    else {
      for (var i = !1, o = a.child; o; ) {
        if (o === n) {
          (i = !0), (n = a), (r = s);
          break;
        }
        if (o === r) {
          (i = !0), (r = a), (n = s);
          break;
        }
        o = o.sibling;
      }
      if (!i) {
        for (o = s.child; o; ) {
          if (o === n) {
            (i = !0), (n = s), (r = a);
            break;
          }
          if (o === r) {
            (i = !0), (r = s), (n = a);
            break;
          }
          o = o.sibling;
        }
        if (!i) throw Error(ht(189));
      }
    }
    if (n.alternate !== r) throw Error(ht(190));
  }
  if (n.tag !== 3) throw Error(ht(188));
  return n.stateNode.current === n ? t : e;
}
function kle(t) {
  return (t = Uet(t)), t !== null ? xle(t) : null;
}
function xle(t) {
  if (t.tag === 5 || t.tag === 6) return t;
  for (t = t.child; t !== null; ) {
    var e = xle(t);
    if (e !== null) return e;
    t = t.sibling;
  }
  return null;
}
var Lle = gi.unstable_scheduleCallback,
  lK = gi.unstable_cancelCallback,
  Ket = gi.unstable_shouldYield,
  Bet = gi.unstable_requestPaint,
  rr = gi.unstable_now,
  Vet = gi.unstable_getCurrentPriorityLevel,
  W3 = gi.unstable_ImmediatePriority,
  Mle = gi.unstable_UserBlockingPriority,
  Lw = gi.unstable_NormalPriority,
  jet = gi.unstable_LowPriority,
  Dle = gi.unstable_IdlePriority,
  cI = null,
  pu = null;
function zet(t) {
  if (pu && typeof pu.onCommitFiberRoot == "function")
    try {
      pu.onCommitFiberRoot(cI, t, void 0, (t.current.flags & 128) === 128);
    } catch {}
}
var Co = Math.clz32 ? Math.clz32 : qet,
  $et = Math.log,
  Wet = Math.LN2;
function qet(t) {
  return (t >>>= 0), t === 0 ? 32 : (31 - (($et(t) / Wet) | 0)) | 0;
}
var bb = 64,
  Eb = 4194304;
function sy(t) {
  switch (t & -t) {
    case 1:
      return 1;
    case 2:
      return 2;
    case 4:
      return 4;
    case 8:
      return 8;
    case 16:
      return 16;
    case 32:
      return 32;
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return t & 4194240;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return t & 130023424;
    case 134217728:
      return 134217728;
    case 268435456:
      return 268435456;
    case 536870912:
      return 536870912;
    case 1073741824:
      return 1073741824;
    default:
      return t;
  }
}
function Mw(t, e) {
  var n = t.pendingLanes;
  if (n === 0) return 0;
  var r = 0,
    a = t.suspendedLanes,
    s = t.pingedLanes,
    i = n & 268435455;
  if (i !== 0) {
    var o = i & ~a;
    o !== 0 ? (r = sy(o)) : ((s &= i), s !== 0 && (r = sy(s)));
  } else (i = n & ~a), i !== 0 ? (r = sy(i)) : s !== 0 && (r = sy(s));
  if (r === 0) return 0;
  if (
    e !== 0 &&
    e !== r &&
    !(e & a) &&
    ((a = r & -r), (s = e & -e), a >= s || (a === 16 && (s & 4194240) !== 0))
  )
    return e;
  if ((r & 4 && (r |= n & 16), (e = t.entangledLanes), e !== 0))
    for (t = t.entanglements, e &= r; 0 < e; )
      (n = 31 - Co(e)), (a = 1 << n), (r |= t[n]), (e &= ~a);
  return r;
}
function Yet(t, e) {
  switch (t) {
    case 1:
    case 2:
    case 4:
      return e + 250;
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return e + 5e3;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return -1;
    case 134217728:
    case 268435456:
    case 536870912:
    case 1073741824:
      return -1;
    default:
      return -1;
  }
}
function Xet(t, e) {
  for (
    var n = t.suspendedLanes,
      r = t.pingedLanes,
      a = t.expirationTimes,
      s = t.pendingLanes;
    0 < s;

  ) {
    var i = 31 - Co(s),
      o = 1 << i,
      u = a[i];
    u === -1
      ? (!(o & n) || o & r) && (a[i] = Yet(o, e))
      : u <= e && (t.expiredLanes |= o),
      (s &= ~o);
  }
}
function XH(t) {
  return (
    (t = t.pendingLanes & -1073741825),
    t !== 0 ? t : t & 1073741824 ? 1073741824 : 0
  );
}
function Gle() {
  var t = bb;
  return (bb <<= 1), !(bb & 4194240) && (bb = 64), t;
}
function UA(t) {
  for (var e = [], n = 0; 31 > n; n++) e.push(t);
  return e;
}
function u_(t, e, n) {
  (t.pendingLanes |= e),
    e !== 536870912 && ((t.suspendedLanes = 0), (t.pingedLanes = 0)),
    (t = t.eventTimes),
    (e = 31 - Co(e)),
    (t[e] = n);
}
function Qet(t, e) {
  var n = t.pendingLanes & ~e;
  (t.pendingLanes = e),
    (t.suspendedLanes = 0),
    (t.pingedLanes = 0),
    (t.expiredLanes &= e),
    (t.mutableReadLanes &= e),
    (t.entangledLanes &= e),
    (e = t.entanglements);
  var r = t.eventTimes;
  for (t = t.expirationTimes; 0 < n; ) {
    var a = 31 - Co(n),
      s = 1 << a;
    (e[a] = 0), (r[a] = -1), (t[a] = -1), (n &= ~s);
  }
}
function q3(t, e) {
  var n = (t.entangledLanes |= e);
  for (t = t.entanglements; n; ) {
    var r = 31 - Co(n),
      a = 1 << r;
    (a & e) | (t[r] & e) && (t[r] |= e), (n &= ~a);
  }
}
var Qn = 0;
function Fle(t) {
  return (t &= -t), 1 < t ? (4 < t ? (t & 268435455 ? 16 : 536870912) : 4) : 1;
}
var Ule,
  Y3,
  Kle,
  Ble,
  Vle,
  QH = !1,
  Tb = [],
  Hc = null,
  Nc = null,
  Rc = null,
  qg = new Map(),
  Yg = new Map(),
  pc = [],
  Jet =
    "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(
      " "
    );
function cK(t, e) {
  switch (t) {
    case "focusin":
    case "focusout":
      Hc = null;
      break;
    case "dragenter":
    case "dragleave":
      Nc = null;
      break;
    case "mouseover":
    case "mouseout":
      Rc = null;
      break;
    case "pointerover":
    case "pointerout":
      qg.delete(e.pointerId);
      break;
    case "gotpointercapture":
    case "lostpointercapture":
      Yg.delete(e.pointerId);
  }
}
function RS(t, e, n, r, a, s) {
  return t === null || t.nativeEvent !== s
    ? ((t = {
        blockedOn: e,
        domEventName: n,
        eventSystemFlags: r,
        nativeEvent: s,
        targetContainers: [a],
      }),
      e !== null && ((e = c_(e)), e !== null && Y3(e)),
      t)
    : ((t.eventSystemFlags |= r),
      (e = t.targetContainers),
      a !== null && e.indexOf(a) === -1 && e.push(a),
      t);
}
function Zet(t, e, n, r, a) {
  switch (e) {
    case "focusin":
      return (Hc = RS(Hc, t, e, n, r, a)), !0;
    case "dragenter":
      return (Nc = RS(Nc, t, e, n, r, a)), !0;
    case "mouseover":
      return (Rc = RS(Rc, t, e, n, r, a)), !0;
    case "pointerover":
      var s = a.pointerId;
      return qg.set(s, RS(qg.get(s) || null, t, e, n, r, a)), !0;
    case "gotpointercapture":
      return (
        (s = a.pointerId), Yg.set(s, RS(Yg.get(s) || null, t, e, n, r, a)), !0
      );
  }
  return !1;
}
function jle(t) {
  var e = Bd(t.target);
  if (e !== null) {
    var n = Kp(e);
    if (n !== null) {
      if (((e = n.tag), e === 13)) {
        if (((e = Rle(n)), e !== null)) {
          (t.blockedOn = e),
            Vle(t.priority, function () {
              Kle(n);
            });
          return;
        }
      } else if (e === 3 && n.stateNode.current.memoizedState.isDehydrated) {
        t.blockedOn = n.tag === 3 ? n.stateNode.containerInfo : null;
        return;
      }
    }
  }
  t.blockedOn = null;
}
function DE(t) {
  if (t.blockedOn !== null) return !1;
  for (var e = t.targetContainers; 0 < e.length; ) {
    var n = JH(t.domEventName, t.eventSystemFlags, e[0], t.nativeEvent);
    if (n === null) {
      n = t.nativeEvent;
      var r = new n.constructor(n.type, n);
      ($H = r), n.target.dispatchEvent(r), ($H = null);
    } else return (e = c_(n)), e !== null && Y3(e), (t.blockedOn = n), !1;
    e.shift();
  }
  return !0;
}
function dK(t, e, n) {
  DE(t) && n.delete(e);
}
function ett() {
  (QH = !1),
    Hc !== null && DE(Hc) && (Hc = null),
    Nc !== null && DE(Nc) && (Nc = null),
    Rc !== null && DE(Rc) && (Rc = null),
    qg.forEach(dK),
    Yg.forEach(dK);
}
function kS(t, e) {
  t.blockedOn === e &&
    ((t.blockedOn = null),
    QH ||
      ((QH = !0),
      gi.unstable_scheduleCallback(gi.unstable_NormalPriority, ett)));
}
function Xg(t) {
  function e(a) {
    return kS(a, t);
  }
  if (0 < Tb.length) {
    kS(Tb[0], t);
    for (var n = 1; n < Tb.length; n++) {
      var r = Tb[n];
      r.blockedOn === t && (r.blockedOn = null);
    }
  }
  for (
    Hc !== null && kS(Hc, t),
      Nc !== null && kS(Nc, t),
      Rc !== null && kS(Rc, t),
      qg.forEach(e),
      Yg.forEach(e),
      n = 0;
    n < pc.length;
    n++
  )
    (r = pc[n]), r.blockedOn === t && (r.blockedOn = null);
  for (; 0 < pc.length && ((n = pc[0]), n.blockedOn === null); )
    jle(n), n.blockedOn === null && pc.shift();
}
var _f = Ml.ReactCurrentBatchConfig,
  Dw = !0;
function ttt(t, e, n, r) {
  var a = Qn,
    s = _f.transition;
  _f.transition = null;
  try {
    (Qn = 1), X3(t, e, n, r);
  } finally {
    (Qn = a), (_f.transition = s);
  }
}
function ntt(t, e, n, r) {
  var a = Qn,
    s = _f.transition;
  _f.transition = null;
  try {
    (Qn = 4), X3(t, e, n, r);
  } finally {
    (Qn = a), (_f.transition = s);
  }
}
function X3(t, e, n, r) {
  if (Dw) {
    var a = JH(t, e, n, r);
    if (a === null) XA(t, e, r, Gw, n), cK(t, r);
    else if (Zet(a, t, e, n, r)) r.stopPropagation();
    else if ((cK(t, r), e & 4 && -1 < Jet.indexOf(t))) {
      for (; a !== null; ) {
        var s = c_(a);
        if (
          (s !== null && Ule(s),
          (s = JH(t, e, n, r)),
          s === null && XA(t, e, r, Gw, n),
          s === a)
        )
          break;
        a = s;
      }
      a !== null && r.stopPropagation();
    } else XA(t, e, r, null, n);
  }
}
var Gw = null;
function JH(t, e, n, r) {
  if (((Gw = null), (t = $3(r)), (t = Bd(t)), t !== null))
    if (((e = Kp(t)), e === null)) t = null;
    else if (((n = e.tag), n === 13)) {
      if (((t = Rle(e)), t !== null)) return t;
      t = null;
    } else if (n === 3) {
      if (e.stateNode.current.memoizedState.isDehydrated)
        return e.tag === 3 ? e.stateNode.containerInfo : null;
      t = null;
    } else e !== t && (t = null);
  return (Gw = t), null;
}
function zle(t) {
  switch (t) {
    case "cancel":
    case "click":
    case "close":
    case "contextmenu":
    case "copy":
    case "cut":
    case "auxclick":
    case "dblclick":
    case "dragend":
    case "dragstart":
    case "drop":
    case "focusin":
    case "focusout":
    case "input":
    case "invalid":
    case "keydown":
    case "keypress":
    case "keyup":
    case "mousedown":
    case "mouseup":
    case "paste":
    case "pause":
    case "play":
    case "pointercancel":
    case "pointerdown":
    case "pointerup":
    case "ratechange":
    case "reset":
    case "resize":
    case "seeked":
    case "submit":
    case "touchcancel":
    case "touchend":
    case "touchstart":
    case "volumechange":
    case "change":
    case "selectionchange":
    case "textInput":
    case "compositionstart":
    case "compositionend":
    case "compositionupdate":
    case "beforeblur":
    case "afterblur":
    case "beforeinput":
    case "blur":
    case "fullscreenchange":
    case "focus":
    case "hashchange":
    case "popstate":
    case "select":
    case "selectstart":
      return 1;
    case "drag":
    case "dragenter":
    case "dragexit":
    case "dragleave":
    case "dragover":
    case "mousemove":
    case "mouseout":
    case "mouseover":
    case "pointermove":
    case "pointerout":
    case "pointerover":
    case "scroll":
    case "toggle":
    case "touchmove":
    case "wheel":
    case "mouseenter":
    case "mouseleave":
    case "pointerenter":
    case "pointerleave":
      return 4;
    case "message":
      switch (Vet()) {
        case W3:
          return 1;
        case Mle:
          return 4;
        case Lw:
        case jet:
          return 16;
        case Dle:
          return 536870912;
        default:
          return 16;
      }
    default:
      return 16;
  }
}
var _c = null,
  Q3 = null,
  GE = null;
function $le() {
  if (GE) return GE;
  var t,
    e = Q3,
    n = e.length,
    r,
    a = "value" in _c ? _c.value : _c.textContent,
    s = a.length;
  for (t = 0; t < n && e[t] === a[t]; t++);
  var i = n - t;
  for (r = 1; r <= i && e[n - r] === a[s - r]; r++);
  return (GE = a.slice(t, 1 < r ? 1 - r : void 0));
}
function FE(t) {
  var e = t.keyCode;
  return (
    "charCode" in t
      ? ((t = t.charCode), t === 0 && e === 13 && (t = 13))
      : (t = e),
    t === 10 && (t = 13),
    32 <= t || t === 13 ? t : 0
  );
}
function wb() {
  return !0;
}
function pK() {
  return !1;
}
function bi(t) {
  function e(n, r, a, s, i) {
    (this._reactName = n),
      (this._targetInst = a),
      (this.type = r),
      (this.nativeEvent = s),
      (this.target = i),
      (this.currentTarget = null);
    for (var o in t)
      t.hasOwnProperty(o) && ((n = t[o]), (this[o] = n ? n(s) : s[o]));
    return (
      (this.isDefaultPrevented = (
        s.defaultPrevented != null ? s.defaultPrevented : s.returnValue === !1
      )
        ? wb
        : pK),
      (this.isPropagationStopped = pK),
      this
    );
  }
  return (
    Vs(e.prototype, {
      preventDefault: function () {
        this.defaultPrevented = !0;
        var n = this.nativeEvent;
        n &&
          (n.preventDefault
            ? n.preventDefault()
            : typeof n.returnValue != "unknown" && (n.returnValue = !1),
          (this.isDefaultPrevented = wb));
      },
      stopPropagation: function () {
        var n = this.nativeEvent;
        n &&
          (n.stopPropagation
            ? n.stopPropagation()
            : typeof n.cancelBubble != "unknown" && (n.cancelBubble = !0),
          (this.isPropagationStopped = wb));
      },
      persist: function () {},
      isPersistent: wb,
    }),
    e
  );
}
var Wm = {
    eventPhase: 0,
    bubbles: 0,
    cancelable: 0,
    timeStamp: function (t) {
      return t.timeStamp || Date.now();
    },
    defaultPrevented: 0,
    isTrusted: 0,
  },
  J3 = bi(Wm),
  l_ = Vs({}, Wm, { view: 0, detail: 0 }),
  stt = bi(l_),
  KA,
  BA,
  xS,
  dI = Vs({}, l_, {
    screenX: 0,
    screenY: 0,
    clientX: 0,
    clientY: 0,
    pageX: 0,
    pageY: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    getModifierState: Z3,
    button: 0,
    buttons: 0,
    relatedTarget: function (t) {
      return t.relatedTarget === void 0
        ? t.fromElement === t.srcElement
          ? t.toElement
          : t.fromElement
        : t.relatedTarget;
    },
    movementX: function (t) {
      return "movementX" in t
        ? t.movementX
        : (t !== xS &&
            (xS && t.type === "mousemove"
              ? ((KA = t.screenX - xS.screenX), (BA = t.screenY - xS.screenY))
              : (BA = KA = 0),
            (xS = t)),
          KA);
    },
    movementY: function (t) {
      return "movementY" in t ? t.movementY : BA;
    },
  }),
  hK = bi(dI),
  rtt = Vs({}, dI, { dataTransfer: 0 }),
  att = bi(rtt),
  itt = Vs({}, l_, { relatedTarget: 0 }),
  VA = bi(itt),
  ott = Vs({}, Wm, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }),
  utt = bi(ott),
  ltt = Vs({}, Wm, {
    clipboardData: function (t) {
      return "clipboardData" in t ? t.clipboardData : window.clipboardData;
    },
  }),
  ctt = bi(ltt),
  dtt = Vs({}, Wm, { data: 0 }),
  fK = bi(dtt),
  ptt = {
    Esc: "Escape",
    Spacebar: " ",
    Left: "ArrowLeft",
    Up: "ArrowUp",
    Right: "ArrowRight",
    Down: "ArrowDown",
    Del: "Delete",
    Win: "OS",
    Menu: "ContextMenu",
    Apps: "ContextMenu",
    Scroll: "ScrollLock",
    MozPrintableKey: "Unidentified",
  },
  htt = {
    8: "Backspace",
    9: "Tab",
    12: "Clear",
    13: "Enter",
    16: "Shift",
    17: "Control",
    18: "Alt",
    19: "Pause",
    20: "CapsLock",
    27: "Escape",
    32: " ",
    33: "PageUp",
    34: "PageDown",
    35: "End",
    36: "Home",
    37: "ArrowLeft",
    38: "ArrowUp",
    39: "ArrowRight",
    40: "ArrowDown",
    45: "Insert",
    46: "Delete",
    112: "F1",
    113: "F2",
    114: "F3",
    115: "F4",
    116: "F5",
    117: "F6",
    118: "F7",
    119: "F8",
    120: "F9",
    121: "F10",
    122: "F11",
    123: "F12",
    144: "NumLock",
    145: "ScrollLock",
    224: "Meta",
  },
  ftt = {
    Alt: "altKey",
    Control: "ctrlKey",
    Meta: "metaKey",
    Shift: "shiftKey",
  };
function mtt(t) {
  var e = this.nativeEvent;
  return e.getModifierState
    ? e.getModifierState(t)
    : (t = ftt[t])
    ? !!e[t]
    : !1;
}
function Z3() {
  return mtt;
}
var Stt = Vs({}, l_, {
    key: function (t) {
      if (t.key) {
        var e = ptt[t.key] || t.key;
        if (e !== "Unidentified") return e;
      }
      return t.type === "keypress"
        ? ((t = FE(t)), t === 13 ? "Enter" : String.fromCharCode(t))
        : t.type === "keydown" || t.type === "keyup"
        ? htt[t.keyCode] || "Unidentified"
        : "";
    },
    code: 0,
    location: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    repeat: 0,
    locale: 0,
    getModifierState: Z3,
    charCode: function (t) {
      return t.type === "keypress" ? FE(t) : 0;
    },
    keyCode: function (t) {
      return t.type === "keydown" || t.type === "keyup" ? t.keyCode : 0;
    },
    which: function (t) {
      return t.type === "keypress"
        ? FE(t)
        : t.type === "keydown" || t.type === "keyup"
        ? t.keyCode
        : 0;
    },
  }),
  ytt = bi(Stt),
  gtt = Vs({}, dI, {
    pointerId: 0,
    width: 0,
    height: 0,
    pressure: 0,
    tangentialPressure: 0,
    tiltX: 0,
    tiltY: 0,
    twist: 0,
    pointerType: 0,
    isPrimary: 0,
  }),
  mK = bi(gtt),
  vtt = Vs({}, l_, {
    touches: 0,
    targetTouches: 0,
    changedTouches: 0,
    altKey: 0,
    metaKey: 0,
    ctrlKey: 0,
    shiftKey: 0,
    getModifierState: Z3,
  }),
  _tt = bi(vtt),
  btt = Vs({}, Wm, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }),
  Ett = bi(btt),
  Ttt = Vs({}, dI, {
    deltaX: function (t) {
      return "deltaX" in t ? t.deltaX : "wheelDeltaX" in t ? -t.wheelDeltaX : 0;
    },
    deltaY: function (t) {
      return "deltaY" in t
        ? t.deltaY
        : "wheelDeltaY" in t
        ? -t.wheelDeltaY
        : "wheelDelta" in t
        ? -t.wheelDelta
        : 0;
    },
    deltaZ: 0,
    deltaMode: 0,
  }),
  wtt = bi(Ttt),
  Ptt = [9, 13, 27, 32],
  eG = vl && "CompositionEvent" in window,
  Uy = null;
vl && "documentMode" in document && (Uy = document.documentMode);
var Itt = vl && "TextEvent" in window && !Uy,
  Wle = vl && (!eG || (Uy && 8 < Uy && 11 >= Uy)),
  SK = String.fromCharCode(32),
  yK = !1;
function qle(t, e) {
  switch (t) {
    case "keyup":
      return Ptt.indexOf(e.keyCode) !== -1;
    case "keydown":
      return e.keyCode !== 229;
    case "keypress":
    case "mousedown":
    case "focusout":
      return !0;
    default:
      return !1;
  }
}
function Yle(t) {
  return (t = t.detail), typeof t == "object" && "data" in t ? t.data : null;
}
var Mh = !1;
function Ctt(t, e) {
  switch (t) {
    case "compositionend":
      return Yle(e);
    case "keypress":
      return e.which !== 32 ? null : ((yK = !0), SK);
    case "textInput":
      return (t = e.data), t === SK && yK ? null : t;
    default:
      return null;
  }
}
function Att(t, e) {
  if (Mh)
    return t === "compositionend" || (!eG && qle(t, e))
      ? ((t = $le()), (GE = Q3 = _c = null), (Mh = !1), t)
      : null;
  switch (t) {
    case "paste":
      return null;
    case "keypress":
      if (!(e.ctrlKey || e.altKey || e.metaKey) || (e.ctrlKey && e.altKey)) {
        if (e.char && 1 < e.char.length) return e.char;
        if (e.which) return String.fromCharCode(e.which);
      }
      return null;
    case "compositionend":
      return Wle && e.locale !== "ko" ? null : e.data;
    default:
      return null;
  }
}
var Ott = {
  color: !0,
  date: !0,
  datetime: !0,
  "datetime-local": !0,
  email: !0,
  month: !0,
  number: !0,
  password: !0,
  range: !0,
  search: !0,
  tel: !0,
  text: !0,
  time: !0,
  url: !0,
  week: !0,
};
function gK(t) {
  var e = t && t.nodeName && t.nodeName.toLowerCase();
  return e === "input" ? !!Ott[t.type] : e === "textarea";
}
function Xle(t, e, n, r) {
  Cle(r),
    (e = Fw(e, "onChange")),
    0 < e.length &&
      ((n = new J3("onChange", "change", null, n, r)),
      t.push({ event: n, listeners: e }));
}
var Ky = null,
  Qg = null;
function Htt(t) {
  oce(t, 0);
}
function pI(t) {
  var e = Fh(t);
  if (_le(e)) return t;
}
function Ntt(t, e) {
  if (t === "change") return e;
}
var Qle = !1;
if (vl) {
  var jA;
  if (vl) {
    var zA = "oninput" in document;
    if (!zA) {
      var vK = document.createElement("div");
      vK.setAttribute("oninput", "return;"),
        (zA = typeof vK.oninput == "function");
    }
    jA = zA;
  } else jA = !1;
  Qle = jA && (!document.documentMode || 9 < document.documentMode);
}
function _K() {
  Ky && (Ky.detachEvent("onpropertychange", Jle), (Qg = Ky = null));
}
function Jle(t) {
  if (t.propertyName === "value" && pI(Qg)) {
    var e = [];
    Xle(e, Qg, t, $3(t)), Nle(Htt, e);
  }
}
function Rtt(t, e, n) {
  t === "focusin"
    ? (_K(), (Ky = e), (Qg = n), Ky.attachEvent("onpropertychange", Jle))
    : t === "focusout" && _K();
}
function ktt(t) {
  if (t === "selectionchange" || t === "keyup" || t === "keydown")
    return pI(Qg);
}
function xtt(t, e) {
  if (t === "click") return pI(e);
}
function Ltt(t, e) {
  if (t === "input" || t === "change") return pI(e);
}
function Mtt(t, e) {
  return (t === e && (t !== 0 || 1 / t === 1 / e)) || (t !== t && e !== e);
}
var Ro = typeof Object.is == "function" ? Object.is : Mtt;
function Jg(t, e) {
  if (Ro(t, e)) return !0;
  if (typeof t != "object" || t === null || typeof e != "object" || e === null)
    return !1;
  var n = Object.keys(t),
    r = Object.keys(e);
  if (n.length !== r.length) return !1;
  for (r = 0; r < n.length; r++) {
    var a = n[r];
    if (!xH.call(e, a) || !Ro(t[a], e[a])) return !1;
  }
  return !0;
}
function bK(t) {
  for (; t && t.firstChild; ) t = t.firstChild;
  return t;
}
function EK(t, e) {
  var n = bK(t);
  t = 0;
  for (var r; n; ) {
    if (n.nodeType === 3) {
      if (((r = t + n.textContent.length), t <= e && r >= e))
        return { node: n, offset: e - t };
      t = r;
    }
    e: {
      for (; n; ) {
        if (n.nextSibling) {
          n = n.nextSibling;
          break e;
        }
        n = n.parentNode;
      }
      n = void 0;
    }
    n = bK(n);
  }
}
function Zle(t, e) {
  return t && e
    ? t === e
      ? !0
      : t && t.nodeType === 3
      ? !1
      : e && e.nodeType === 3
      ? Zle(t, e.parentNode)
      : "contains" in t
      ? t.contains(e)
      : t.compareDocumentPosition
      ? !!(t.compareDocumentPosition(e) & 16)
      : !1
    : !1;
}
function ece() {
  for (var t = window, e = Rw(); e instanceof t.HTMLIFrameElement; ) {
    try {
      var n = typeof e.contentWindow.location.href == "string";
    } catch {
      n = !1;
    }
    if (n) t = e.contentWindow;
    else break;
    e = Rw(t.document);
  }
  return e;
}
function tG(t) {
  var e = t && t.nodeName && t.nodeName.toLowerCase();
  return (
    e &&
    ((e === "input" &&
      (t.type === "text" ||
        t.type === "search" ||
        t.type === "tel" ||
        t.type === "url" ||
        t.type === "password")) ||
      e === "textarea" ||
      t.contentEditable === "true")
  );
}
function Dtt(t) {
  var e = ece(),
    n = t.focusedElem,
    r = t.selectionRange;
  if (
    e !== n &&
    n &&
    n.ownerDocument &&
    Zle(n.ownerDocument.documentElement, n)
  ) {
    if (r !== null && tG(n)) {
      if (
        ((e = r.start),
        (t = r.end),
        t === void 0 && (t = e),
        "selectionStart" in n)
      )
        (n.selectionStart = e), (n.selectionEnd = Math.min(t, n.value.length));
      else if (
        ((t = ((e = n.ownerDocument || document) && e.defaultView) || window),
        t.getSelection)
      ) {
        t = t.getSelection();
        var a = n.textContent.length,
          s = Math.min(r.start, a);
        (r = r.end === void 0 ? s : Math.min(r.end, a)),
          !t.extend && s > r && ((a = r), (r = s), (s = a)),
          (a = EK(n, s));
        var i = EK(n, r);
        a &&
          i &&
          (t.rangeCount !== 1 ||
            t.anchorNode !== a.node ||
            t.anchorOffset !== a.offset ||
            t.focusNode !== i.node ||
            t.focusOffset !== i.offset) &&
          ((e = e.createRange()),
          e.setStart(a.node, a.offset),
          t.removeAllRanges(),
          s > r
            ? (t.addRange(e), t.extend(i.node, i.offset))
            : (e.setEnd(i.node, i.offset), t.addRange(e)));
      }
    }
    for (e = [], t = n; (t = t.parentNode); )
      t.nodeType === 1 &&
        e.push({ element: t, left: t.scrollLeft, top: t.scrollTop });
    for (typeof n.focus == "function" && n.focus(), n = 0; n < e.length; n++)
      (t = e[n]),
        (t.element.scrollLeft = t.left),
        (t.element.scrollTop = t.top);
  }
}
var Gtt = vl && "documentMode" in document && 11 >= document.documentMode,
  Dh = null,
  ZH = null,
  By = null,
  eN = !1;
function TK(t, e, n) {
  var r = n.window === n ? n.document : n.nodeType === 9 ? n : n.ownerDocument;
  eN ||
    Dh == null ||
    Dh !== Rw(r) ||
    ((r = Dh),
    "selectionStart" in r && tG(r)
      ? (r = { start: r.selectionStart, end: r.selectionEnd })
      : ((r = (
          (r.ownerDocument && r.ownerDocument.defaultView) ||
          window
        ).getSelection()),
        (r = {
          anchorNode: r.anchorNode,
          anchorOffset: r.anchorOffset,
          focusNode: r.focusNode,
          focusOffset: r.focusOffset,
        })),
    (By && Jg(By, r)) ||
      ((By = r),
      (r = Fw(ZH, "onSelect")),
      0 < r.length &&
        ((e = new J3("onSelect", "select", null, e, n)),
        t.push({ event: e, listeners: r }),
        (e.target = Dh))));
}
function Pb(t, e) {
  var n = {};
  return (
    (n[t.toLowerCase()] = e.toLowerCase()),
    (n["Webkit" + t] = "webkit" + e),
    (n["Moz" + t] = "moz" + e),
    n
  );
}
var Gh = {
    animationend: Pb("Animation", "AnimationEnd"),
    animationiteration: Pb("Animation", "AnimationIteration"),
    animationstart: Pb("Animation", "AnimationStart"),
    transitionend: Pb("Transition", "TransitionEnd"),
  },
  $A = {},
  tce = {};
vl &&
  ((tce = document.createElement("div").style),
  "AnimationEvent" in window ||
    (delete Gh.animationend.animation,
    delete Gh.animationiteration.animation,
    delete Gh.animationstart.animation),
  "TransitionEvent" in window || delete Gh.transitionend.transition);
function hI(t) {
  if ($A[t]) return $A[t];
  if (!Gh[t]) return t;
  var e = Gh[t],
    n;
  for (n in e) if (e.hasOwnProperty(n) && n in tce) return ($A[t] = e[n]);
  return t;
}
var nce = hI("animationend"),
  sce = hI("animationiteration"),
  rce = hI("animationstart"),
  ace = hI("transitionend"),
  ice = new Map(),
  wK =
    "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(
      " "
    );
function Sd(t, e) {
  ice.set(t, e), Up(e, [t]);
}
for (var WA = 0; WA < wK.length; WA++) {
  var qA = wK[WA],
    Ftt = qA.toLowerCase(),
    Utt = qA[0].toUpperCase() + qA.slice(1);
  Sd(Ftt, "on" + Utt);
}
Sd(nce, "onAnimationEnd");
Sd(sce, "onAnimationIteration");
Sd(rce, "onAnimationStart");
Sd("dblclick", "onDoubleClick");
Sd("focusin", "onFocus");
Sd("focusout", "onBlur");
Sd(ace, "onTransitionEnd");
Jf("onMouseEnter", ["mouseout", "mouseover"]);
Jf("onMouseLeave", ["mouseout", "mouseover"]);
Jf("onPointerEnter", ["pointerout", "pointerover"]);
Jf("onPointerLeave", ["pointerout", "pointerover"]);
Up(
  "onChange",
  "change click focusin focusout input keydown keyup selectionchange".split(" ")
);
Up(
  "onSelect",
  "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(
    " "
  )
);
Up("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
Up(
  "onCompositionEnd",
  "compositionend focusout keydown keypress keyup mousedown".split(" ")
);
Up(
  "onCompositionStart",
  "compositionstart focusout keydown keypress keyup mousedown".split(" ")
);
Up(
  "onCompositionUpdate",
  "compositionupdate focusout keydown keypress keyup mousedown".split(" ")
);
var ry =
    "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(
      " "
    ),
  Ktt = new Set(
    "cancel close invalid load scroll toggle".split(" ").concat(ry)
  );
function PK(t, e, n) {
  var r = t.type || "unknown-event";
  (t.currentTarget = n), Fet(r, e, void 0, t), (t.currentTarget = null);
}
function oce(t, e) {
  e = (e & 4) !== 0;
  for (var n = 0; n < t.length; n++) {
    var r = t[n],
      a = r.event;
    r = r.listeners;
    e: {
      var s = void 0;
      if (e)
        for (var i = r.length - 1; 0 <= i; i--) {
          var o = r[i],
            u = o.instance,
            l = o.currentTarget;
          if (((o = o.listener), u !== s && a.isPropagationStopped())) break e;
          PK(a, o, l), (s = u);
        }
      else
        for (i = 0; i < r.length; i++) {
          if (
            ((o = r[i]),
            (u = o.instance),
            (l = o.currentTarget),
            (o = o.listener),
            u !== s && a.isPropagationStopped())
          )
            break e;
          PK(a, o, l), (s = u);
        }
    }
  }
  if (xw) throw ((t = YH), (xw = !1), (YH = null), t);
}
function _s(t, e) {
  var n = e[aN];
  n === void 0 && (n = e[aN] = new Set());
  var r = t + "__bubble";
  n.has(r) || (uce(e, t, 2, !1), n.add(r));
}
function YA(t, e, n) {
  var r = 0;
  e && (r |= 4), uce(n, t, r, e);
}
var Ib = "_reactListening" + Math.random().toString(36).slice(2);
function Zg(t) {
  if (!t[Ib]) {
    (t[Ib] = !0),
      mle.forEach(function (n) {
        n !== "selectionchange" && (Ktt.has(n) || YA(n, !1, t), YA(n, !0, t));
      });
    var e = t.nodeType === 9 ? t : t.ownerDocument;
    e === null || e[Ib] || ((e[Ib] = !0), YA("selectionchange", !1, e));
  }
}
function uce(t, e, n, r) {
  switch (zle(e)) {
    case 1:
      var a = ttt;
      break;
    case 4:
      a = ntt;
      break;
    default:
      a = X3;
  }
  (n = a.bind(null, e, n, t)),
    (a = void 0),
    !qH ||
      (e !== "touchstart" && e !== "touchmove" && e !== "wheel") ||
      (a = !0),
    r
      ? a !== void 0
        ? t.addEventListener(e, n, { capture: !0, passive: a })
        : t.addEventListener(e, n, !0)
      : a !== void 0
      ? t.addEventListener(e, n, { passive: a })
      : t.addEventListener(e, n, !1);
}
function XA(t, e, n, r, a) {
  var s = r;
  if (!(e & 1) && !(e & 2) && r !== null)
    e: for (;;) {
      if (r === null) return;
      var i = r.tag;
      if (i === 3 || i === 4) {
        var o = r.stateNode.containerInfo;
        if (o === a || (o.nodeType === 8 && o.parentNode === a)) break;
        if (i === 4)
          for (i = r.return; i !== null; ) {
            var u = i.tag;
            if (
              (u === 3 || u === 4) &&
              ((u = i.stateNode.containerInfo),
              u === a || (u.nodeType === 8 && u.parentNode === a))
            )
              return;
            i = i.return;
          }
        for (; o !== null; ) {
          if (((i = Bd(o)), i === null)) return;
          if (((u = i.tag), u === 5 || u === 6)) {
            r = s = i;
            continue e;
          }
          o = o.parentNode;
        }
      }
      r = r.return;
    }
  Nle(function () {
    var l = s,
      c = $3(n),
      d = [];
    e: {
      var p = ice.get(t);
      if (p !== void 0) {
        var m = J3,
          y = t;
        switch (t) {
          case "keypress":
            if (FE(n) === 0) break e;
          case "keydown":
          case "keyup":
            m = ytt;
            break;
          case "focusin":
            (y = "focus"), (m = VA);
            break;
          case "focusout":
            (y = "blur"), (m = VA);
            break;
          case "beforeblur":
          case "afterblur":
            m = VA;
            break;
          case "click":
            if (n.button === 2) break e;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            m = hK;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            m = att;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            m = _tt;
            break;
          case nce:
          case sce:
          case rce:
            m = utt;
            break;
          case ace:
            m = Ett;
            break;
          case "scroll":
            m = stt;
            break;
          case "wheel":
            m = wtt;
            break;
          case "copy":
          case "cut":
          case "paste":
            m = ctt;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            m = mK;
        }
        var I = (e & 4) !== 0,
          O = !I && t === "scroll",
          g = I ? (p !== null ? p + "Capture" : null) : p;
        I = [];
        for (var C = l, H; C !== null; ) {
          H = C;
          var B = H.stateNode;
          if (
            (H.tag === 5 &&
              B !== null &&
              ((H = B),
              g !== null && ((B = Wg(C, g)), B != null && I.push(ev(C, B, H)))),
            O)
          )
            break;
          C = C.return;
        }
        0 < I.length &&
          ((p = new m(p, y, null, n, c)), d.push({ event: p, listeners: I }));
      }
    }
    if (!(e & 7)) {
      e: {
        if (
          ((p = t === "mouseover" || t === "pointerover"),
          (m = t === "mouseout" || t === "pointerout"),
          p &&
            n !== $H &&
            (y = n.relatedTarget || n.fromElement) &&
            (Bd(y) || y[_l]))
        )
          break e;
        if (
          (m || p) &&
          ((p =
            c.window === c
              ? c
              : (p = c.ownerDocument)
              ? p.defaultView || p.parentWindow
              : window),
          m
            ? ((y = n.relatedTarget || n.toElement),
              (m = l),
              (y = y ? Bd(y) : null),
              y !== null &&
                ((O = Kp(y)), y !== O || (y.tag !== 5 && y.tag !== 6)) &&
                (y = null))
            : ((m = null), (y = l)),
          m !== y)
        ) {
          if (
            ((I = hK),
            (B = "onMouseLeave"),
            (g = "onMouseEnter"),
            (C = "mouse"),
            (t === "pointerout" || t === "pointerover") &&
              ((I = mK),
              (B = "onPointerLeave"),
              (g = "onPointerEnter"),
              (C = "pointer")),
            (O = m == null ? p : Fh(m)),
            (H = y == null ? p : Fh(y)),
            (p = new I(B, C + "leave", m, n, c)),
            (p.target = O),
            (p.relatedTarget = H),
            (B = null),
            Bd(c) === l &&
              ((I = new I(g, C + "enter", y, n, c)),
              (I.target = H),
              (I.relatedTarget = O),
              (B = I)),
            (O = B),
            m && y)
          )
            t: {
              for (I = m, g = y, C = 0, H = I; H; H = ih(H)) C++;
              for (H = 0, B = g; B; B = ih(B)) H++;
              for (; 0 < C - H; ) (I = ih(I)), C--;
              for (; 0 < H - C; ) (g = ih(g)), H--;
              for (; C--; ) {
                if (I === g || (g !== null && I === g.alternate)) break t;
                (I = ih(I)), (g = ih(g));
              }
              I = null;
            }
          else I = null;
          m !== null && IK(d, p, m, I, !1),
            y !== null && O !== null && IK(d, O, y, I, !0);
        }
      }
      e: {
        if (
          ((p = l ? Fh(l) : window),
          (m = p.nodeName && p.nodeName.toLowerCase()),
          m === "select" || (m === "input" && p.type === "file"))
        )
          var he = Ntt;
        else if (gK(p))
          if (Qle) he = Ltt;
          else {
            he = ktt;
            var de = Rtt;
          }
        else
          (m = p.nodeName) &&
            m.toLowerCase() === "input" &&
            (p.type === "checkbox" || p.type === "radio") &&
            (he = xtt);
        if (he && (he = he(t, l))) {
          Xle(d, he, n, c);
          break e;
        }
        de && de(t, p, l),
          t === "focusout" &&
            (de = p._wrapperState) &&
            de.controlled &&
            p.type === "number" &&
            KH(p, "number", p.value);
      }
      switch (((de = l ? Fh(l) : window), t)) {
        case "focusin":
          (gK(de) || de.contentEditable === "true") &&
            ((Dh = de), (ZH = l), (By = null));
          break;
        case "focusout":
          By = ZH = Dh = null;
          break;
        case "mousedown":
          eN = !0;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          (eN = !1), TK(d, n, c);
          break;
        case "selectionchange":
          if (Gtt) break;
        case "keydown":
        case "keyup":
          TK(d, n, c);
      }
      var U;
      if (eG)
        e: {
          switch (t) {
            case "compositionstart":
              var R = "onCompositionStart";
              break e;
            case "compositionend":
              R = "onCompositionEnd";
              break e;
            case "compositionupdate":
              R = "onCompositionUpdate";
              break e;
          }
          R = void 0;
        }
      else
        Mh
          ? qle(t, n) && (R = "onCompositionEnd")
          : t === "keydown" && n.keyCode === 229 && (R = "onCompositionStart");
      R &&
        (Wle &&
          n.locale !== "ko" &&
          (Mh || R !== "onCompositionStart"
            ? R === "onCompositionEnd" && Mh && (U = $le())
            : ((_c = c),
              (Q3 = "value" in _c ? _c.value : _c.textContent),
              (Mh = !0))),
        (de = Fw(l, R)),
        0 < de.length &&
          ((R = new fK(R, t, null, n, c)),
          d.push({ event: R, listeners: de }),
          U ? (R.data = U) : ((U = Yle(n)), U !== null && (R.data = U)))),
        (U = Itt ? Ctt(t, n) : Att(t, n)) &&
          ((l = Fw(l, "onBeforeInput")),
          0 < l.length &&
            ((c = new fK("onBeforeInput", "beforeinput", null, n, c)),
            d.push({ event: c, listeners: l }),
            (c.data = U)));
    }
    oce(d, e);
  });
}
function ev(t, e, n) {
  return { instance: t, listener: e, currentTarget: n };
}
function Fw(t, e) {
  for (var n = e + "Capture", r = []; t !== null; ) {
    var a = t,
      s = a.stateNode;
    a.tag === 5 &&
      s !== null &&
      ((a = s),
      (s = Wg(t, n)),
      s != null && r.unshift(ev(t, s, a)),
      (s = Wg(t, e)),
      s != null && r.push(ev(t, s, a))),
      (t = t.return);
  }
  return r;
}
function ih(t) {
  if (t === null) return null;
  do t = t.return;
  while (t && t.tag !== 5);
  return t || null;
}
function IK(t, e, n, r, a) {
  for (var s = e._reactName, i = []; n !== null && n !== r; ) {
    var o = n,
      u = o.alternate,
      l = o.stateNode;
    if (u !== null && u === r) break;
    o.tag === 5 &&
      l !== null &&
      ((o = l),
      a
        ? ((u = Wg(n, s)), u != null && i.unshift(ev(n, u, o)))
        : a || ((u = Wg(n, s)), u != null && i.push(ev(n, u, o)))),
      (n = n.return);
  }
  i.length !== 0 && t.push({ event: e, listeners: i });
}
var Btt = /\r\n?/g,
  Vtt = /\u0000|\uFFFD/g;
function CK(t) {
  return (typeof t == "string" ? t : "" + t)
    .replace(
      Btt,
      `
`
    )
    .replace(Vtt, "");
}
function Cb(t, e, n) {
  if (((e = CK(e)), CK(t) !== e && n)) throw Error(ht(425));
}
function Uw() {}
var tN = null,
  nN = null;
function sN(t, e) {
  return (
    t === "textarea" ||
    t === "noscript" ||
    typeof e.children == "string" ||
    typeof e.children == "number" ||
    (typeof e.dangerouslySetInnerHTML == "object" &&
      e.dangerouslySetInnerHTML !== null &&
      e.dangerouslySetInnerHTML.__html != null)
  );
}
var rN = typeof setTimeout == "function" ? setTimeout : void 0,
  jtt = typeof clearTimeout == "function" ? clearTimeout : void 0,
  AK = typeof Promise == "function" ? Promise : void 0,
  ztt =
    typeof queueMicrotask == "function"
      ? queueMicrotask
      : typeof AK < "u"
      ? function (t) {
          return AK.resolve(null).then(t).catch($tt);
        }
      : rN;
function $tt(t) {
  setTimeout(function () {
    throw t;
  });
}
function QA(t, e) {
  var n = e,
    r = 0;
  do {
    var a = n.nextSibling;
    if ((t.removeChild(n), a && a.nodeType === 8))
      if (((n = a.data), n === "/$")) {
        if (r === 0) {
          t.removeChild(a), Xg(e);
          return;
        }
        r--;
      } else (n !== "$" && n !== "$?" && n !== "$!") || r++;
    n = a;
  } while (n);
  Xg(e);
}
function kc(t) {
  for (; t != null; t = t.nextSibling) {
    var e = t.nodeType;
    if (e === 1 || e === 3) break;
    if (e === 8) {
      if (((e = t.data), e === "$" || e === "$!" || e === "$?")) break;
      if (e === "/$") return null;
    }
  }
  return t;
}
function OK(t) {
  t = t.previousSibling;
  for (var e = 0; t; ) {
    if (t.nodeType === 8) {
      var n = t.data;
      if (n === "$" || n === "$!" || n === "$?") {
        if (e === 0) return t;
        e--;
      } else n === "/$" && e++;
    }
    t = t.previousSibling;
  }
  return null;
}
var qm = Math.random().toString(36).slice(2),
  su = "__reactFiber$" + qm,
  tv = "__reactProps$" + qm,
  _l = "__reactContainer$" + qm,
  aN = "__reactEvents$" + qm,
  Wtt = "__reactListeners$" + qm,
  qtt = "__reactHandles$" + qm;
function Bd(t) {
  var e = t[su];
  if (e) return e;
  for (var n = t.parentNode; n; ) {
    if ((e = n[_l] || n[su])) {
      if (
        ((n = e.alternate),
        e.child !== null || (n !== null && n.child !== null))
      )
        for (t = OK(t); t !== null; ) {
          if ((n = t[su])) return n;
          t = OK(t);
        }
      return e;
    }
    (t = n), (n = t.parentNode);
  }
  return null;
}
function c_(t) {
  return (
    (t = t[su] || t[_l]),
    !t || (t.tag !== 5 && t.tag !== 6 && t.tag !== 13 && t.tag !== 3) ? null : t
  );
}
function Fh(t) {
  if (t.tag === 5 || t.tag === 6) return t.stateNode;
  throw Error(ht(33));
}
function fI(t) {
  return t[tv] || null;
}
var iN = [],
  Uh = -1;
function yd(t) {
  return { current: t };
}
function Ts(t) {
  0 > Uh || ((t.current = iN[Uh]), (iN[Uh] = null), Uh--);
}
function Ss(t, e) {
  Uh++, (iN[Uh] = t.current), (t.current = e);
}
var Zc = {},
  oa = yd(Zc),
  Ka = yd(!1),
  mp = Zc;
function Zf(t, e) {
  var n = t.type.contextTypes;
  if (!n) return Zc;
  var r = t.stateNode;
  if (r && r.__reactInternalMemoizedUnmaskedChildContext === e)
    return r.__reactInternalMemoizedMaskedChildContext;
  var a = {},
    s;
  for (s in n) a[s] = e[s];
  return (
    r &&
      ((t = t.stateNode),
      (t.__reactInternalMemoizedUnmaskedChildContext = e),
      (t.__reactInternalMemoizedMaskedChildContext = a)),
    a
  );
}
function Ba(t) {
  return (t = t.childContextTypes), t != null;
}
function Kw() {
  Ts(Ka), Ts(oa);
}
function HK(t, e, n) {
  if (oa.current !== Zc) throw Error(ht(168));
  Ss(oa, e), Ss(Ka, n);
}
function lce(t, e, n) {
  var r = t.stateNode;
  if (((e = e.childContextTypes), typeof r.getChildContext != "function"))
    return n;
  r = r.getChildContext();
  for (var a in r) if (!(a in e)) throw Error(ht(108, Ret(t) || "Unknown", a));
  return Vs({}, n, r);
}
function Bw(t) {
  return (
    (t =
      ((t = t.stateNode) && t.__reactInternalMemoizedMergedChildContext) || Zc),
    (mp = oa.current),
    Ss(oa, t),
    Ss(Ka, Ka.current),
    !0
  );
}
function NK(t, e, n) {
  var r = t.stateNode;
  if (!r) throw Error(ht(169));
  n
    ? ((t = lce(t, e, mp)),
      (r.__reactInternalMemoizedMergedChildContext = t),
      Ts(Ka),
      Ts(oa),
      Ss(oa, t))
    : Ts(Ka),
    Ss(Ka, n);
}
var $u = null,
  mI = !1,
  JA = !1;
function cce(t) {
  $u === null ? ($u = [t]) : $u.push(t);
}
function Ytt(t) {
  (mI = !0), cce(t);
}
function gd() {
  if (!JA && $u !== null) {
    JA = !0;
    var t = 0,
      e = Qn;
    try {
      var n = $u;
      for (Qn = 1; t < n.length; t++) {
        var r = n[t];
        do r = r(!0);
        while (r !== null);
      }
      ($u = null), (mI = !1);
    } catch (a) {
      throw ($u !== null && ($u = $u.slice(t + 1)), Lle(W3, gd), a);
    } finally {
      (Qn = e), (JA = !1);
    }
  }
  return null;
}
var Kh = [],
  Bh = 0,
  Vw = null,
  jw = 0,
  Oi = [],
  Hi = 0,
  Sp = null,
  el = 1,
  tl = "";
function Od(t, e) {
  (Kh[Bh++] = jw), (Kh[Bh++] = Vw), (Vw = t), (jw = e);
}
function dce(t, e, n) {
  (Oi[Hi++] = el), (Oi[Hi++] = tl), (Oi[Hi++] = Sp), (Sp = t);
  var r = el;
  t = tl;
  var a = 32 - Co(r) - 1;
  (r &= ~(1 << a)), (n += 1);
  var s = 32 - Co(e) + a;
  if (30 < s) {
    var i = a - (a % 5);
    (s = (r & ((1 << i) - 1)).toString(32)),
      (r >>= i),
      (a -= i),
      (el = (1 << (32 - Co(e) + a)) | (n << a) | r),
      (tl = s + t);
  } else (el = (1 << s) | (n << a) | r), (tl = t);
}
function nG(t) {
  t.return !== null && (Od(t, 1), dce(t, 1, 0));
}
function sG(t) {
  for (; t === Vw; )
    (Vw = Kh[--Bh]), (Kh[Bh] = null), (jw = Kh[--Bh]), (Kh[Bh] = null);
  for (; t === Sp; )
    (Sp = Oi[--Hi]),
      (Oi[Hi] = null),
      (tl = Oi[--Hi]),
      (Oi[Hi] = null),
      (el = Oi[--Hi]),
      (Oi[Hi] = null);
}
var pi = null,
  ci = null,
  Rs = !1,
  So = null;
function pce(t, e) {
  var n = Li(5, null, null, 0);
  (n.elementType = "DELETED"),
    (n.stateNode = e),
    (n.return = t),
    (e = t.deletions),
    e === null ? ((t.deletions = [n]), (t.flags |= 16)) : e.push(n);
}
function RK(t, e) {
  switch (t.tag) {
    case 5:
      var n = t.type;
      return (
        (e =
          e.nodeType !== 1 || n.toLowerCase() !== e.nodeName.toLowerCase()
            ? null
            : e),
        e !== null
          ? ((t.stateNode = e), (pi = t), (ci = kc(e.firstChild)), !0)
          : !1
      );
    case 6:
      return (
        (e = t.pendingProps === "" || e.nodeType !== 3 ? null : e),
        e !== null ? ((t.stateNode = e), (pi = t), (ci = null), !0) : !1
      );
    case 13:
      return (
        (e = e.nodeType !== 8 ? null : e),
        e !== null
          ? ((n = Sp !== null ? { id: el, overflow: tl } : null),
            (t.memoizedState = {
              dehydrated: e,
              treeContext: n,
              retryLane: 1073741824,
            }),
            (n = Li(18, null, null, 0)),
            (n.stateNode = e),
            (n.return = t),
            (t.child = n),
            (pi = t),
            (ci = null),
            !0)
          : !1
      );
    default:
      return !1;
  }
}
function oN(t) {
  return (t.mode & 1) !== 0 && (t.flags & 128) === 0;
}
function uN(t) {
  if (Rs) {
    var e = ci;
    if (e) {
      var n = e;
      if (!RK(t, e)) {
        if (oN(t)) throw Error(ht(418));
        e = kc(n.nextSibling);
        var r = pi;
        e && RK(t, e)
          ? pce(r, n)
          : ((t.flags = (t.flags & -4097) | 2), (Rs = !1), (pi = t));
      }
    } else {
      if (oN(t)) throw Error(ht(418));
      (t.flags = (t.flags & -4097) | 2), (Rs = !1), (pi = t);
    }
  }
}
function kK(t) {
  for (t = t.return; t !== null && t.tag !== 5 && t.tag !== 3 && t.tag !== 13; )
    t = t.return;
  pi = t;
}
function Ab(t) {
  if (t !== pi) return !1;
  if (!Rs) return kK(t), (Rs = !0), !1;
  var e;
  if (
    ((e = t.tag !== 3) &&
      !(e = t.tag !== 5) &&
      ((e = t.type),
      (e = e !== "head" && e !== "body" && !sN(t.type, t.memoizedProps))),
    e && (e = ci))
  ) {
    if (oN(t)) throw (hce(), Error(ht(418)));
    for (; e; ) pce(t, e), (e = kc(e.nextSibling));
  }
  if ((kK(t), t.tag === 13)) {
    if (((t = t.memoizedState), (t = t !== null ? t.dehydrated : null), !t))
      throw Error(ht(317));
    e: {
      for (t = t.nextSibling, e = 0; t; ) {
        if (t.nodeType === 8) {
          var n = t.data;
          if (n === "/$") {
            if (e === 0) {
              ci = kc(t.nextSibling);
              break e;
            }
            e--;
          } else (n !== "$" && n !== "$!" && n !== "$?") || e++;
        }
        t = t.nextSibling;
      }
      ci = null;
    }
  } else ci = pi ? kc(t.stateNode.nextSibling) : null;
  return !0;
}
function hce() {
  for (var t = ci; t; ) t = kc(t.nextSibling);
}
function em() {
  (ci = pi = null), (Rs = !1);
}
function rG(t) {
  So === null ? (So = [t]) : So.push(t);
}
var Xtt = Ml.ReactCurrentBatchConfig;
function co(t, e) {
  if (t && t.defaultProps) {
    (e = Vs({}, e)), (t = t.defaultProps);
    for (var n in t) e[n] === void 0 && (e[n] = t[n]);
    return e;
  }
  return e;
}
var zw = yd(null),
  $w = null,
  Vh = null,
  aG = null;
function iG() {
  aG = Vh = $w = null;
}
function oG(t) {
  var e = zw.current;
  Ts(zw), (t._currentValue = e);
}
function lN(t, e, n) {
  for (; t !== null; ) {
    var r = t.alternate;
    if (
      ((t.childLanes & e) !== e
        ? ((t.childLanes |= e), r !== null && (r.childLanes |= e))
        : r !== null && (r.childLanes & e) !== e && (r.childLanes |= e),
      t === n)
    )
      break;
    t = t.return;
  }
}
function bf(t, e) {
  ($w = t),
    (aG = Vh = null),
    (t = t.dependencies),
    t !== null &&
      t.firstContext !== null &&
      (t.lanes & e && (Fa = !0), (t.firstContext = null));
}
function $i(t) {
  var e = t._currentValue;
  if (aG !== t)
    if (((t = { context: t, memoizedValue: e, next: null }), Vh === null)) {
      if ($w === null) throw Error(ht(308));
      (Vh = t), ($w.dependencies = { lanes: 0, firstContext: t });
    } else Vh = Vh.next = t;
  return e;
}
var Vd = null;
function uG(t) {
  Vd === null ? (Vd = [t]) : Vd.push(t);
}
function fce(t, e, n, r) {
  var a = e.interleaved;
  return (
    a === null ? ((n.next = n), uG(e)) : ((n.next = a.next), (a.next = n)),
    (e.interleaved = n),
    bl(t, r)
  );
}
function bl(t, e) {
  t.lanes |= e;
  var n = t.alternate;
  for (n !== null && (n.lanes |= e), n = t, t = t.return; t !== null; )
    (t.childLanes |= e),
      (n = t.alternate),
      n !== null && (n.childLanes |= e),
      (n = t),
      (t = t.return);
  return n.tag === 3 ? n.stateNode : null;
}
var ac = !1;
function lG(t) {
  t.updateQueue = {
    baseState: t.memoizedState,
    firstBaseUpdate: null,
    lastBaseUpdate: null,
    shared: { pending: null, interleaved: null, lanes: 0 },
    effects: null,
  };
}
function mce(t, e) {
  (t = t.updateQueue),
    e.updateQueue === t &&
      (e.updateQueue = {
        baseState: t.baseState,
        firstBaseUpdate: t.firstBaseUpdate,
        lastBaseUpdate: t.lastBaseUpdate,
        shared: t.shared,
        effects: t.effects,
      });
}
function ll(t, e) {
  return {
    eventTime: t,
    lane: e,
    tag: 0,
    payload: null,
    callback: null,
    next: null,
  };
}
function xc(t, e, n) {
  var r = t.updateQueue;
  if (r === null) return null;
  if (((r = r.shared), Un & 2)) {
    var a = r.pending;
    return (
      a === null ? (e.next = e) : ((e.next = a.next), (a.next = e)),
      (r.pending = e),
      bl(t, n)
    );
  }
  return (
    (a = r.interleaved),
    a === null ? ((e.next = e), uG(r)) : ((e.next = a.next), (a.next = e)),
    (r.interleaved = e),
    bl(t, n)
  );
}
function UE(t, e, n) {
  if (
    ((e = e.updateQueue), e !== null && ((e = e.shared), (n & 4194240) !== 0))
  ) {
    var r = e.lanes;
    (r &= t.pendingLanes), (n |= r), (e.lanes = n), q3(t, n);
  }
}
function xK(t, e) {
  var n = t.updateQueue,
    r = t.alternate;
  if (r !== null && ((r = r.updateQueue), n === r)) {
    var a = null,
      s = null;
    if (((n = n.firstBaseUpdate), n !== null)) {
      do {
        var i = {
          eventTime: n.eventTime,
          lane: n.lane,
          tag: n.tag,
          payload: n.payload,
          callback: n.callback,
          next: null,
        };
        s === null ? (a = s = i) : (s = s.next = i), (n = n.next);
      } while (n !== null);
      s === null ? (a = s = e) : (s = s.next = e);
    } else a = s = e;
    (n = {
      baseState: r.baseState,
      firstBaseUpdate: a,
      lastBaseUpdate: s,
      shared: r.shared,
      effects: r.effects,
    }),
      (t.updateQueue = n);
    return;
  }
  (t = n.lastBaseUpdate),
    t === null ? (n.firstBaseUpdate = e) : (t.next = e),
    (n.lastBaseUpdate = e);
}
function Ww(t, e, n, r) {
  var a = t.updateQueue;
  ac = !1;
  var s = a.firstBaseUpdate,
    i = a.lastBaseUpdate,
    o = a.shared.pending;
  if (o !== null) {
    a.shared.pending = null;
    var u = o,
      l = u.next;
    (u.next = null), i === null ? (s = l) : (i.next = l), (i = u);
    var c = t.alternate;
    c !== null &&
      ((c = c.updateQueue),
      (o = c.lastBaseUpdate),
      o !== i &&
        (o === null ? (c.firstBaseUpdate = l) : (o.next = l),
        (c.lastBaseUpdate = u)));
  }
  if (s !== null) {
    var d = a.baseState;
    (i = 0), (c = l = u = null), (o = s);
    do {
      var p = o.lane,
        m = o.eventTime;
      if ((r & p) === p) {
        c !== null &&
          (c = c.next =
            {
              eventTime: m,
              lane: 0,
              tag: o.tag,
              payload: o.payload,
              callback: o.callback,
              next: null,
            });
        e: {
          var y = t,
            I = o;
          switch (((p = e), (m = n), I.tag)) {
            case 1:
              if (((y = I.payload), typeof y == "function")) {
                d = y.call(m, d, p);
                break e;
              }
              d = y;
              break e;
            case 3:
              y.flags = (y.flags & -65537) | 128;
            case 0:
              if (
                ((y = I.payload),
                (p = typeof y == "function" ? y.call(m, d, p) : y),
                p == null)
              )
                break e;
              d = Vs({}, d, p);
              break e;
            case 2:
              ac = !0;
          }
        }
        o.callback !== null &&
          o.lane !== 0 &&
          ((t.flags |= 64),
          (p = a.effects),
          p === null ? (a.effects = [o]) : p.push(o));
      } else
        (m = {
          eventTime: m,
          lane: p,
          tag: o.tag,
          payload: o.payload,
          callback: o.callback,
          next: null,
        }),
          c === null ? ((l = c = m), (u = d)) : (c = c.next = m),
          (i |= p);
      if (((o = o.next), o === null)) {
        if (((o = a.shared.pending), o === null)) break;
        (p = o),
          (o = p.next),
          (p.next = null),
          (a.lastBaseUpdate = p),
          (a.shared.pending = null);
      }
    } while (1);
    if (
      (c === null && (u = d),
      (a.baseState = u),
      (a.firstBaseUpdate = l),
      (a.lastBaseUpdate = c),
      (e = a.shared.interleaved),
      e !== null)
    ) {
      a = e;
      do (i |= a.lane), (a = a.next);
      while (a !== e);
    } else s === null && (a.shared.lanes = 0);
    (gp |= i), (t.lanes = i), (t.memoizedState = d);
  }
}
function LK(t, e, n) {
  if (((t = e.effects), (e.effects = null), t !== null))
    for (e = 0; e < t.length; e++) {
      var r = t[e],
        a = r.callback;
      if (a !== null) {
        if (((r.callback = null), (r = n), typeof a != "function"))
          throw Error(ht(191, a));
        a.call(r);
      }
    }
}
var Sce = new fle.Component().refs;
function cN(t, e, n, r) {
  (e = t.memoizedState),
    (n = n(r, e)),
    (n = n == null ? e : Vs({}, e, n)),
    (t.memoizedState = n),
    t.lanes === 0 && (t.updateQueue.baseState = n);
}
var SI = {
  isMounted: function (t) {
    return (t = t._reactInternals) ? Kp(t) === t : !1;
  },
  enqueueSetState: function (t, e, n) {
    t = t._reactInternals;
    var r = _a(),
      a = Mc(t),
      s = ll(r, a);
    (s.payload = e),
      n != null && (s.callback = n),
      (e = xc(t, s, a)),
      e !== null && (Ao(e, t, a, r), UE(e, t, a));
  },
  enqueueReplaceState: function (t, e, n) {
    t = t._reactInternals;
    var r = _a(),
      a = Mc(t),
      s = ll(r, a);
    (s.tag = 1),
      (s.payload = e),
      n != null && (s.callback = n),
      (e = xc(t, s, a)),
      e !== null && (Ao(e, t, a, r), UE(e, t, a));
  },
  enqueueForceUpdate: function (t, e) {
    t = t._reactInternals;
    var n = _a(),
      r = Mc(t),
      a = ll(n, r);
    (a.tag = 2),
      e != null && (a.callback = e),
      (e = xc(t, a, r)),
      e !== null && (Ao(e, t, r, n), UE(e, t, r));
  },
};
function MK(t, e, n, r, a, s, i) {
  return (
    (t = t.stateNode),
    typeof t.shouldComponentUpdate == "function"
      ? t.shouldComponentUpdate(r, s, i)
      : e.prototype && e.prototype.isPureReactComponent
      ? !Jg(n, r) || !Jg(a, s)
      : !0
  );
}
function yce(t, e, n) {
  var r = !1,
    a = Zc,
    s = e.contextType;
  return (
    typeof s == "object" && s !== null
      ? (s = $i(s))
      : ((a = Ba(e) ? mp : oa.current),
        (r = e.contextTypes),
        (s = (r = r != null) ? Zf(t, a) : Zc)),
    (e = new e(n, s)),
    (t.memoizedState = e.state !== null && e.state !== void 0 ? e.state : null),
    (e.updater = SI),
    (t.stateNode = e),
    (e._reactInternals = t),
    r &&
      ((t = t.stateNode),
      (t.__reactInternalMemoizedUnmaskedChildContext = a),
      (t.__reactInternalMemoizedMaskedChildContext = s)),
    e
  );
}
function DK(t, e, n, r) {
  (t = e.state),
    typeof e.componentWillReceiveProps == "function" &&
      e.componentWillReceiveProps(n, r),
    typeof e.UNSAFE_componentWillReceiveProps == "function" &&
      e.UNSAFE_componentWillReceiveProps(n, r),
    e.state !== t && SI.enqueueReplaceState(e, e.state, null);
}
function dN(t, e, n, r) {
  var a = t.stateNode;
  (a.props = n), (a.state = t.memoizedState), (a.refs = Sce), lG(t);
  var s = e.contextType;
  typeof s == "object" && s !== null
    ? (a.context = $i(s))
    : ((s = Ba(e) ? mp : oa.current), (a.context = Zf(t, s))),
    (a.state = t.memoizedState),
    (s = e.getDerivedStateFromProps),
    typeof s == "function" && (cN(t, e, s, n), (a.state = t.memoizedState)),
    typeof e.getDerivedStateFromProps == "function" ||
      typeof a.getSnapshotBeforeUpdate == "function" ||
      (typeof a.UNSAFE_componentWillMount != "function" &&
        typeof a.componentWillMount != "function") ||
      ((e = a.state),
      typeof a.componentWillMount == "function" && a.componentWillMount(),
      typeof a.UNSAFE_componentWillMount == "function" &&
        a.UNSAFE_componentWillMount(),
      e !== a.state && SI.enqueueReplaceState(a, a.state, null),
      Ww(t, n, a, r),
      (a.state = t.memoizedState)),
    typeof a.componentDidMount == "function" && (t.flags |= 4194308);
}
function LS(t, e, n) {
  if (
    ((t = n.ref), t !== null && typeof t != "function" && typeof t != "object")
  ) {
    if (n._owner) {
      if (((n = n._owner), n)) {
        if (n.tag !== 1) throw Error(ht(309));
        var r = n.stateNode;
      }
      if (!r) throw Error(ht(147, t));
      var a = r,
        s = "" + t;
      return e !== null &&
        e.ref !== null &&
        typeof e.ref == "function" &&
        e.ref._stringRef === s
        ? e.ref
        : ((e = function (i) {
            var o = a.refs;
            o === Sce && (o = a.refs = {}),
              i === null ? delete o[s] : (o[s] = i);
          }),
          (e._stringRef = s),
          e);
    }
    if (typeof t != "string") throw Error(ht(284));
    if (!n._owner) throw Error(ht(290, t));
  }
  return t;
}
function Ob(t, e) {
  throw (
    ((t = Object.prototype.toString.call(e)),
    Error(
      ht(
        31,
        t === "[object Object]"
          ? "object with keys {" + Object.keys(e).join(", ") + "}"
          : t
      )
    ))
  );
}
function GK(t) {
  var e = t._init;
  return e(t._payload);
}
function gce(t) {
  function e(g, C) {
    if (t) {
      var H = g.deletions;
      H === null ? ((g.deletions = [C]), (g.flags |= 16)) : H.push(C);
    }
  }
  function n(g, C) {
    if (!t) return null;
    for (; C !== null; ) e(g, C), (C = C.sibling);
    return null;
  }
  function r(g, C) {
    for (g = new Map(); C !== null; )
      C.key !== null ? g.set(C.key, C) : g.set(C.index, C), (C = C.sibling);
    return g;
  }
  function a(g, C) {
    return (g = Dc(g, C)), (g.index = 0), (g.sibling = null), g;
  }
  function s(g, C, H) {
    return (
      (g.index = H),
      t
        ? ((H = g.alternate),
          H !== null
            ? ((H = H.index), H < C ? ((g.flags |= 2), C) : H)
            : ((g.flags |= 2), C))
        : ((g.flags |= 1048576), C)
    );
  }
  function i(g) {
    return t && g.alternate === null && (g.flags |= 2), g;
  }
  function o(g, C, H, B) {
    return C === null || C.tag !== 6
      ? ((C = a1(H, g.mode, B)), (C.return = g), C)
      : ((C = a(C, H)), (C.return = g), C);
  }
  function u(g, C, H, B) {
    var he = H.type;
    return he === Lh
      ? c(g, C, H.props.children, B, H.key)
      : C !== null &&
        (C.elementType === he ||
          (typeof he == "object" &&
            he !== null &&
            he.$$typeof === rc &&
            GK(he) === C.type))
      ? ((B = a(C, H.props)), (B.ref = LS(g, C, H)), (B.return = g), B)
      : ((B = $E(H.type, H.key, H.props, null, g.mode, B)),
        (B.ref = LS(g, C, H)),
        (B.return = g),
        B);
  }
  function l(g, C, H, B) {
    return C === null ||
      C.tag !== 4 ||
      C.stateNode.containerInfo !== H.containerInfo ||
      C.stateNode.implementation !== H.implementation
      ? ((C = i1(H, g.mode, B)), (C.return = g), C)
      : ((C = a(C, H.children || [])), (C.return = g), C);
  }
  function c(g, C, H, B, he) {
    return C === null || C.tag !== 7
      ? ((C = Jd(H, g.mode, B, he)), (C.return = g), C)
      : ((C = a(C, H)), (C.return = g), C);
  }
  function d(g, C, H) {
    if ((typeof C == "string" && C !== "") || typeof C == "number")
      return (C = a1("" + C, g.mode, H)), (C.return = g), C;
    if (typeof C == "object" && C !== null) {
      switch (C.$$typeof) {
        case gb:
          return (
            (H = $E(C.type, C.key, C.props, null, g.mode, H)),
            (H.ref = LS(g, null, C)),
            (H.return = g),
            H
          );
        case xh:
          return (C = i1(C, g.mode, H)), (C.return = g), C;
        case rc:
          var B = C._init;
          return d(g, B(C._payload), H);
      }
      if (ny(C) || HS(C))
        return (C = Jd(C, g.mode, H, null)), (C.return = g), C;
      Ob(g, C);
    }
    return null;
  }
  function p(g, C, H, B) {
    var he = C !== null ? C.key : null;
    if ((typeof H == "string" && H !== "") || typeof H == "number")
      return he !== null ? null : o(g, C, "" + H, B);
    if (typeof H == "object" && H !== null) {
      switch (H.$$typeof) {
        case gb:
          return H.key === he ? u(g, C, H, B) : null;
        case xh:
          return H.key === he ? l(g, C, H, B) : null;
        case rc:
          return (he = H._init), p(g, C, he(H._payload), B);
      }
      if (ny(H) || HS(H)) return he !== null ? null : c(g, C, H, B, null);
      Ob(g, H);
    }
    return null;
  }
  function m(g, C, H, B, he) {
    if ((typeof B == "string" && B !== "") || typeof B == "number")
      return (g = g.get(H) || null), o(C, g, "" + B, he);
    if (typeof B == "object" && B !== null) {
      switch (B.$$typeof) {
        case gb:
          return (
            (g = g.get(B.key === null ? H : B.key) || null), u(C, g, B, he)
          );
        case xh:
          return (
            (g = g.get(B.key === null ? H : B.key) || null), l(C, g, B, he)
          );
        case rc:
          var de = B._init;
          return m(g, C, H, de(B._payload), he);
      }
      if (ny(B) || HS(B)) return (g = g.get(H) || null), c(C, g, B, he, null);
      Ob(C, B);
    }
    return null;
  }
  function y(g, C, H, B) {
    for (
      var he = null, de = null, U = C, R = (C = 0), ge = null;
      U !== null && R < H.length;
      R++
    ) {
      U.index > R ? ((ge = U), (U = null)) : (ge = U.sibling);
      var ve = p(g, U, H[R], B);
      if (ve === null) {
        U === null && (U = ge);
        break;
      }
      t && U && ve.alternate === null && e(g, U),
        (C = s(ve, C, R)),
        de === null ? (he = ve) : (de.sibling = ve),
        (de = ve),
        (U = ge);
    }
    if (R === H.length) return n(g, U), Rs && Od(g, R), he;
    if (U === null) {
      for (; R < H.length; R++)
        (U = d(g, H[R], B)),
          U !== null &&
            ((C = s(U, C, R)),
            de === null ? (he = U) : (de.sibling = U),
            (de = U));
      return Rs && Od(g, R), he;
    }
    for (U = r(g, U); R < H.length; R++)
      (ge = m(U, g, R, H[R], B)),
        ge !== null &&
          (t && ge.alternate !== null && U.delete(ge.key === null ? R : ge.key),
          (C = s(ge, C, R)),
          de === null ? (he = ge) : (de.sibling = ge),
          (de = ge));
    return (
      t &&
        U.forEach(function (we) {
          return e(g, we);
        }),
      Rs && Od(g, R),
      he
    );
  }
  function I(g, C, H, B) {
    var he = HS(H);
    if (typeof he != "function") throw Error(ht(150));
    if (((H = he.call(H)), H == null)) throw Error(ht(151));
    for (
      var de = (he = null), U = C, R = (C = 0), ge = null, ve = H.next();
      U !== null && !ve.done;
      R++, ve = H.next()
    ) {
      U.index > R ? ((ge = U), (U = null)) : (ge = U.sibling);
      var we = p(g, U, ve.value, B);
      if (we === null) {
        U === null && (U = ge);
        break;
      }
      t && U && we.alternate === null && e(g, U),
        (C = s(we, C, R)),
        de === null ? (he = we) : (de.sibling = we),
        (de = we),
        (U = ge);
    }
    if (ve.done) return n(g, U), Rs && Od(g, R), he;
    if (U === null) {
      for (; !ve.done; R++, ve = H.next())
        (ve = d(g, ve.value, B)),
          ve !== null &&
            ((C = s(ve, C, R)),
            de === null ? (he = ve) : (de.sibling = ve),
            (de = ve));
      return Rs && Od(g, R), he;
    }
    for (U = r(g, U); !ve.done; R++, ve = H.next())
      (ve = m(U, g, R, ve.value, B)),
        ve !== null &&
          (t && ve.alternate !== null && U.delete(ve.key === null ? R : ve.key),
          (C = s(ve, C, R)),
          de === null ? (he = ve) : (de.sibling = ve),
          (de = ve));
    return (
      t &&
        U.forEach(function (Te) {
          return e(g, Te);
        }),
      Rs && Od(g, R),
      he
    );
  }
  function O(g, C, H, B) {
    if (
      (typeof H == "object" &&
        H !== null &&
        H.type === Lh &&
        H.key === null &&
        (H = H.props.children),
      typeof H == "object" && H !== null)
    ) {
      switch (H.$$typeof) {
        case gb:
          e: {
            for (var he = H.key, de = C; de !== null; ) {
              if (de.key === he) {
                if (((he = H.type), he === Lh)) {
                  if (de.tag === 7) {
                    n(g, de.sibling),
                      (C = a(de, H.props.children)),
                      (C.return = g),
                      (g = C);
                    break e;
                  }
                } else if (
                  de.elementType === he ||
                  (typeof he == "object" &&
                    he !== null &&
                    he.$$typeof === rc &&
                    GK(he) === de.type)
                ) {
                  n(g, de.sibling),
                    (C = a(de, H.props)),
                    (C.ref = LS(g, de, H)),
                    (C.return = g),
                    (g = C);
                  break e;
                }
                n(g, de);
                break;
              } else e(g, de);
              de = de.sibling;
            }
            H.type === Lh
              ? ((C = Jd(H.props.children, g.mode, B, H.key)),
                (C.return = g),
                (g = C))
              : ((B = $E(H.type, H.key, H.props, null, g.mode, B)),
                (B.ref = LS(g, C, H)),
                (B.return = g),
                (g = B));
          }
          return i(g);
        case xh:
          e: {
            for (de = H.key; C !== null; ) {
              if (C.key === de)
                if (
                  C.tag === 4 &&
                  C.stateNode.containerInfo === H.containerInfo &&
                  C.stateNode.implementation === H.implementation
                ) {
                  n(g, C.sibling),
                    (C = a(C, H.children || [])),
                    (C.return = g),
                    (g = C);
                  break e;
                } else {
                  n(g, C);
                  break;
                }
              else e(g, C);
              C = C.sibling;
            }
            (C = i1(H, g.mode, B)), (C.return = g), (g = C);
          }
          return i(g);
        case rc:
          return (de = H._init), O(g, C, de(H._payload), B);
      }
      if (ny(H)) return y(g, C, H, B);
      if (HS(H)) return I(g, C, H, B);
      Ob(g, H);
    }
    return (typeof H == "string" && H !== "") || typeof H == "number"
      ? ((H = "" + H),
        C !== null && C.tag === 6
          ? (n(g, C.sibling), (C = a(C, H)), (C.return = g), (g = C))
          : (n(g, C), (C = a1(H, g.mode, B)), (C.return = g), (g = C)),
        i(g))
      : n(g, C);
  }
  return O;
}
var tm = gce(!0),
  vce = gce(!1),
  d_ = {},
  hu = yd(d_),
  nv = yd(d_),
  sv = yd(d_);
function jd(t) {
  if (t === d_) throw Error(ht(174));
  return t;
}
function cG(t, e) {
  switch ((Ss(sv, e), Ss(nv, t), Ss(hu, d_), (t = e.nodeType), t)) {
    case 9:
    case 11:
      e = (e = e.documentElement) ? e.namespaceURI : VH(null, "");
      break;
    default:
      (t = t === 8 ? e.parentNode : e),
        (e = t.namespaceURI || null),
        (t = t.tagName),
        (e = VH(e, t));
  }
  Ts(hu), Ss(hu, e);
}
function nm() {
  Ts(hu), Ts(nv), Ts(sv);
}
function _ce(t) {
  jd(sv.current);
  var e = jd(hu.current),
    n = VH(e, t.type);
  e !== n && (Ss(nv, t), Ss(hu, n));
}
function dG(t) {
  nv.current === t && (Ts(hu), Ts(nv));
}
var Gs = yd(0);
function qw(t) {
  for (var e = t; e !== null; ) {
    if (e.tag === 13) {
      var n = e.memoizedState;
      if (
        n !== null &&
        ((n = n.dehydrated), n === null || n.data === "$?" || n.data === "$!")
      )
        return e;
    } else if (e.tag === 19 && e.memoizedProps.revealOrder !== void 0) {
      if (e.flags & 128) return e;
    } else if (e.child !== null) {
      (e.child.return = e), (e = e.child);
      continue;
    }
    if (e === t) break;
    for (; e.sibling === null; ) {
      if (e.return === null || e.return === t) return null;
      e = e.return;
    }
    (e.sibling.return = e.return), (e = e.sibling);
  }
  return null;
}
var ZA = [];
function pG() {
  for (var t = 0; t < ZA.length; t++)
    ZA[t]._workInProgressVersionPrimary = null;
  ZA.length = 0;
}
var KE = Ml.ReactCurrentDispatcher,
  e1 = Ml.ReactCurrentBatchConfig,
  yp = 0,
  Ks = null,
  mr = null,
  wr = null,
  Yw = !1,
  Vy = !1,
  rv = 0,
  Qtt = 0;
function Br() {
  throw Error(ht(321));
}
function hG(t, e) {
  if (e === null) return !1;
  for (var n = 0; n < e.length && n < t.length; n++)
    if (!Ro(t[n], e[n])) return !1;
  return !0;
}
function fG(t, e, n, r, a, s) {
  if (
    ((yp = s),
    (Ks = e),
    (e.memoizedState = null),
    (e.updateQueue = null),
    (e.lanes = 0),
    (KE.current = t === null || t.memoizedState === null ? tnt : nnt),
    (t = n(r, a)),
    Vy)
  ) {
    s = 0;
    do {
      if (((Vy = !1), (rv = 0), 25 <= s)) throw Error(ht(301));
      (s += 1),
        (wr = mr = null),
        (e.updateQueue = null),
        (KE.current = snt),
        (t = n(r, a));
    } while (Vy);
  }
  if (
    ((KE.current = Xw),
    (e = mr !== null && mr.next !== null),
    (yp = 0),
    (wr = mr = Ks = null),
    (Yw = !1),
    e)
  )
    throw Error(ht(300));
  return t;
}
function mG() {
  var t = rv !== 0;
  return (rv = 0), t;
}
function Xo() {
  var t = {
    memoizedState: null,
    baseState: null,
    baseQueue: null,
    queue: null,
    next: null,
  };
  return wr === null ? (Ks.memoizedState = wr = t) : (wr = wr.next = t), wr;
}
function Wi() {
  if (mr === null) {
    var t = Ks.alternate;
    t = t !== null ? t.memoizedState : null;
  } else t = mr.next;
  var e = wr === null ? Ks.memoizedState : wr.next;
  if (e !== null) (wr = e), (mr = t);
  else {
    if (t === null) throw Error(ht(310));
    (mr = t),
      (t = {
        memoizedState: mr.memoizedState,
        baseState: mr.baseState,
        baseQueue: mr.baseQueue,
        queue: mr.queue,
        next: null,
      }),
      wr === null ? (Ks.memoizedState = wr = t) : (wr = wr.next = t);
  }
  return wr;
}
function av(t, e) {
  return typeof e == "function" ? e(t) : e;
}
function t1(t) {
  var e = Wi(),
    n = e.queue;
  if (n === null) throw Error(ht(311));
  n.lastRenderedReducer = t;
  var r = mr,
    a = r.baseQueue,
    s = n.pending;
  if (s !== null) {
    if (a !== null) {
      var i = a.next;
      (a.next = s.next), (s.next = i);
    }
    (r.baseQueue = a = s), (n.pending = null);
  }
  if (a !== null) {
    (s = a.next), (r = r.baseState);
    var o = (i = null),
      u = null,
      l = s;
    do {
      var c = l.lane;
      if ((yp & c) === c)
        u !== null &&
          (u = u.next =
            {
              lane: 0,
              action: l.action,
              hasEagerState: l.hasEagerState,
              eagerState: l.eagerState,
              next: null,
            }),
          (r = l.hasEagerState ? l.eagerState : t(r, l.action));
      else {
        var d = {
          lane: c,
          action: l.action,
          hasEagerState: l.hasEagerState,
          eagerState: l.eagerState,
          next: null,
        };
        u === null ? ((o = u = d), (i = r)) : (u = u.next = d),
          (Ks.lanes |= c),
          (gp |= c);
      }
      l = l.next;
    } while (l !== null && l !== s);
    u === null ? (i = r) : (u.next = o),
      Ro(r, e.memoizedState) || (Fa = !0),
      (e.memoizedState = r),
      (e.baseState = i),
      (e.baseQueue = u),
      (n.lastRenderedState = r);
  }
  if (((t = n.interleaved), t !== null)) {
    a = t;
    do (s = a.lane), (Ks.lanes |= s), (gp |= s), (a = a.next);
    while (a !== t);
  } else a === null && (n.lanes = 0);
  return [e.memoizedState, n.dispatch];
}
function n1(t) {
  var e = Wi(),
    n = e.queue;
  if (n === null) throw Error(ht(311));
  n.lastRenderedReducer = t;
  var r = n.dispatch,
    a = n.pending,
    s = e.memoizedState;
  if (a !== null) {
    n.pending = null;
    var i = (a = a.next);
    do (s = t(s, i.action)), (i = i.next);
    while (i !== a);
    Ro(s, e.memoizedState) || (Fa = !0),
      (e.memoizedState = s),
      e.baseQueue === null && (e.baseState = s),
      (n.lastRenderedState = s);
  }
  return [s, r];
}
function bce() {}
function Ece(t, e) {
  var n = Ks,
    r = Wi(),
    a = e(),
    s = !Ro(r.memoizedState, a);
  if (
    (s && ((r.memoizedState = a), (Fa = !0)),
    (r = r.queue),
    SG(Pce.bind(null, n, r, t), [t]),
    r.getSnapshot !== e || s || (wr !== null && wr.memoizedState.tag & 1))
  ) {
    if (
      ((n.flags |= 2048),
      iv(9, wce.bind(null, n, r, a, e), void 0, null),
      Cr === null)
    )
      throw Error(ht(349));
    yp & 30 || Tce(n, e, a);
  }
  return a;
}
function Tce(t, e, n) {
  (t.flags |= 16384),
    (t = { getSnapshot: e, value: n }),
    (e = Ks.updateQueue),
    e === null
      ? ((e = { lastEffect: null, stores: null }),
        (Ks.updateQueue = e),
        (e.stores = [t]))
      : ((n = e.stores), n === null ? (e.stores = [t]) : n.push(t));
}
function wce(t, e, n, r) {
  (e.value = n), (e.getSnapshot = r), Ice(e) && Cce(t);
}
function Pce(t, e, n) {
  return n(function () {
    Ice(e) && Cce(t);
  });
}
function Ice(t) {
  var e = t.getSnapshot;
  t = t.value;
  try {
    var n = e();
    return !Ro(t, n);
  } catch {
    return !0;
  }
}
function Cce(t) {
  var e = bl(t, 1);
  e !== null && Ao(e, t, 1, -1);
}
function FK(t) {
  var e = Xo();
  return (
    typeof t == "function" && (t = t()),
    (e.memoizedState = e.baseState = t),
    (t = {
      pending: null,
      interleaved: null,
      lanes: 0,
      dispatch: null,
      lastRenderedReducer: av,
      lastRenderedState: t,
    }),
    (e.queue = t),
    (t = t.dispatch = ent.bind(null, Ks, t)),
    [e.memoizedState, t]
  );
}
function iv(t, e, n, r) {
  return (
    (t = { tag: t, create: e, destroy: n, deps: r, next: null }),
    (e = Ks.updateQueue),
    e === null
      ? ((e = { lastEffect: null, stores: null }),
        (Ks.updateQueue = e),
        (e.lastEffect = t.next = t))
      : ((n = e.lastEffect),
        n === null
          ? (e.lastEffect = t.next = t)
          : ((r = n.next), (n.next = t), (t.next = r), (e.lastEffect = t))),
    t
  );
}
function Ace() {
  return Wi().memoizedState;
}
function BE(t, e, n, r) {
  var a = Xo();
  (Ks.flags |= t),
    (a.memoizedState = iv(1 | e, n, void 0, r === void 0 ? null : r));
}
function yI(t, e, n, r) {
  var a = Wi();
  r = r === void 0 ? null : r;
  var s = void 0;
  if (mr !== null) {
    var i = mr.memoizedState;
    if (((s = i.destroy), r !== null && hG(r, i.deps))) {
      a.memoizedState = iv(e, n, s, r);
      return;
    }
  }
  (Ks.flags |= t), (a.memoizedState = iv(1 | e, n, s, r));
}
function UK(t, e) {
  return BE(8390656, 8, t, e);
}
function SG(t, e) {
  return yI(2048, 8, t, e);
}
function Oce(t, e) {
  return yI(4, 2, t, e);
}
function Hce(t, e) {
  return yI(4, 4, t, e);
}
function Nce(t, e) {
  if (typeof e == "function")
    return (
      (t = t()),
      e(t),
      function () {
        e(null);
      }
    );
  if (e != null)
    return (
      (t = t()),
      (e.current = t),
      function () {
        e.current = null;
      }
    );
}
function Rce(t, e, n) {
  return (
    (n = n != null ? n.concat([t]) : null), yI(4, 4, Nce.bind(null, e, t), n)
  );
}
function yG() {}
function kce(t, e) {
  var n = Wi();
  e = e === void 0 ? null : e;
  var r = n.memoizedState;
  return r !== null && e !== null && hG(e, r[1])
    ? r[0]
    : ((n.memoizedState = [t, e]), t);
}
function xce(t, e) {
  var n = Wi();
  e = e === void 0 ? null : e;
  var r = n.memoizedState;
  return r !== null && e !== null && hG(e, r[1])
    ? r[0]
    : ((t = t()), (n.memoizedState = [t, e]), t);
}
function Lce(t, e, n) {
  return yp & 21
    ? (Ro(n, e) ||
        ((n = Gle()), (Ks.lanes |= n), (gp |= n), (t.baseState = !0)),
      e)
    : (t.baseState && ((t.baseState = !1), (Fa = !0)), (t.memoizedState = n));
}
function Jtt(t, e) {
  var n = Qn;
  (Qn = n !== 0 && 4 > n ? n : 4), t(!0);
  var r = e1.transition;
  e1.transition = {};
  try {
    t(!1), e();
  } finally {
    (Qn = n), (e1.transition = r);
  }
}
function Mce() {
  return Wi().memoizedState;
}
function Ztt(t, e, n) {
  var r = Mc(t);
  if (
    ((n = {
      lane: r,
      action: n,
      hasEagerState: !1,
      eagerState: null,
      next: null,
    }),
    Dce(t))
  )
    Gce(e, n);
  else if (((n = fce(t, e, n, r)), n !== null)) {
    var a = _a();
    Ao(n, t, r, a), Fce(n, e, r);
  }
}
function ent(t, e, n) {
  var r = Mc(t),
    a = { lane: r, action: n, hasEagerState: !1, eagerState: null, next: null };
  if (Dce(t)) Gce(e, a);
  else {
    var s = t.alternate;
    if (
      t.lanes === 0 &&
      (s === null || s.lanes === 0) &&
      ((s = e.lastRenderedReducer), s !== null)
    )
      try {
        var i = e.lastRenderedState,
          o = s(i, n);
        if (((a.hasEagerState = !0), (a.eagerState = o), Ro(o, i))) {
          var u = e.interleaved;
          u === null
            ? ((a.next = a), uG(e))
            : ((a.next = u.next), (u.next = a)),
            (e.interleaved = a);
          return;
        }
      } catch {
      } finally {
      }
    (n = fce(t, e, a, r)),
      n !== null && ((a = _a()), Ao(n, t, r, a), Fce(n, e, r));
  }
}
function Dce(t) {
  var e = t.alternate;
  return t === Ks || (e !== null && e === Ks);
}
function Gce(t, e) {
  Vy = Yw = !0;
  var n = t.pending;
  n === null ? (e.next = e) : ((e.next = n.next), (n.next = e)),
    (t.pending = e);
}
function Fce(t, e, n) {
  if (n & 4194240) {
    var r = e.lanes;
    (r &= t.pendingLanes), (n |= r), (e.lanes = n), q3(t, n);
  }
}
var Xw = {
    readContext: $i,
    useCallback: Br,
    useContext: Br,
    useEffect: Br,
    useImperativeHandle: Br,
    useInsertionEffect: Br,
    useLayoutEffect: Br,
    useMemo: Br,
    useReducer: Br,
    useRef: Br,
    useState: Br,
    useDebugValue: Br,
    useDeferredValue: Br,
    useTransition: Br,
    useMutableSource: Br,
    useSyncExternalStore: Br,
    useId: Br,
    unstable_isNewReconciler: !1,
  },
  tnt = {
    readContext: $i,
    useCallback: function (t, e) {
      return (Xo().memoizedState = [t, e === void 0 ? null : e]), t;
    },
    useContext: $i,
    useEffect: UK,
    useImperativeHandle: function (t, e, n) {
      return (
        (n = n != null ? n.concat([t]) : null),
        BE(4194308, 4, Nce.bind(null, e, t), n)
      );
    },
    useLayoutEffect: function (t, e) {
      return BE(4194308, 4, t, e);
    },
    useInsertionEffect: function (t, e) {
      return BE(4, 2, t, e);
    },
    useMemo: function (t, e) {
      var n = Xo();
      return (
        (e = e === void 0 ? null : e), (t = t()), (n.memoizedState = [t, e]), t
      );
    },
    useReducer: function (t, e, n) {
      var r = Xo();
      return (
        (e = n !== void 0 ? n(e) : e),
        (r.memoizedState = r.baseState = e),
        (t = {
          pending: null,
          interleaved: null,
          lanes: 0,
          dispatch: null,
          lastRenderedReducer: t,
          lastRenderedState: e,
        }),
        (r.queue = t),
        (t = t.dispatch = Ztt.bind(null, Ks, t)),
        [r.memoizedState, t]
      );
    },
    useRef: function (t) {
      var e = Xo();
      return (t = { current: t }), (e.memoizedState = t);
    },
    useState: FK,
    useDebugValue: yG,
    useDeferredValue: function (t) {
      return (Xo().memoizedState = t);
    },
    useTransition: function () {
      var t = FK(!1),
        e = t[0];
      return (t = Jtt.bind(null, t[1])), (Xo().memoizedState = t), [e, t];
    },
    useMutableSource: function () {},
    useSyncExternalStore: function (t, e, n) {
      var r = Ks,
        a = Xo();
      if (Rs) {
        if (n === void 0) throw Error(ht(407));
        n = n();
      } else {
        if (((n = e()), Cr === null)) throw Error(ht(349));
        yp & 30 || Tce(r, e, n);
      }
      a.memoizedState = n;
      var s = { value: n, getSnapshot: e };
      return (
        (a.queue = s),
        UK(Pce.bind(null, r, s, t), [t]),
        (r.flags |= 2048),
        iv(9, wce.bind(null, r, s, n, e), void 0, null),
        n
      );
    },
    useId: function () {
      var t = Xo(),
        e = Cr.identifierPrefix;
      if (Rs) {
        var n = tl,
          r = el;
        (n = (r & ~(1 << (32 - Co(r) - 1))).toString(32) + n),
          (e = ":" + e + "R" + n),
          (n = rv++),
          0 < n && (e += "H" + n.toString(32)),
          (e += ":");
      } else (n = Qtt++), (e = ":" + e + "r" + n.toString(32) + ":");
      return (t.memoizedState = e);
    },
    unstable_isNewReconciler: !1,
  },
  nnt = {
    readContext: $i,
    useCallback: kce,
    useContext: $i,
    useEffect: SG,
    useImperativeHandle: Rce,
    useInsertionEffect: Oce,
    useLayoutEffect: Hce,
    useMemo: xce,
    useReducer: t1,
    useRef: Ace,
    useState: function () {
      return t1(av);
    },
    useDebugValue: yG,
    useDeferredValue: function (t) {
      var e = Wi();
      return Lce(e, mr.memoizedState, t);
    },
    useTransition: function () {
      var t = t1(av)[0],
        e = Wi().memoizedState;
      return [t, e];
    },
    useMutableSource: bce,
    useSyncExternalStore: Ece,
    useId: Mce,
    unstable_isNewReconciler: !1,
  },
  snt = {
    readContext: $i,
    useCallback: kce,
    useContext: $i,
    useEffect: SG,
    useImperativeHandle: Rce,
    useInsertionEffect: Oce,
    useLayoutEffect: Hce,
    useMemo: xce,
    useReducer: n1,
    useRef: Ace,
    useState: function () {
      return n1(av);
    },
    useDebugValue: yG,
    useDeferredValue: function (t) {
      var e = Wi();
      return mr === null ? (e.memoizedState = t) : Lce(e, mr.memoizedState, t);
    },
    useTransition: function () {
      var t = n1(av)[0],
        e = Wi().memoizedState;
      return [t, e];
    },
    useMutableSource: bce,
    useSyncExternalStore: Ece,
    useId: Mce,
    unstable_isNewReconciler: !1,
  };
function sm(t, e) {
  try {
    var n = "",
      r = e;
    do (n += Net(r)), (r = r.return);
    while (r);
    var a = n;
  } catch (s) {
    a =
      `
Error generating stack: ` +
      s.message +
      `
` +
      s.stack;
  }
  return { value: t, source: e, stack: a, digest: null };
}
function s1(t, e, n) {
  return { value: t, source: null, stack: n ?? null, digest: e ?? null };
}
function pN(t, e) {
  try {
    console.error(e.value);
  } catch (n) {
    setTimeout(function () {
      throw n;
    });
  }
}
var rnt = typeof WeakMap == "function" ? WeakMap : Map;
function Uce(t, e, n) {
  (n = ll(-1, n)), (n.tag = 3), (n.payload = { element: null });
  var r = e.value;
  return (
    (n.callback = function () {
      Jw || ((Jw = !0), (EN = r)), pN(t, e);
    }),
    n
  );
}
function Kce(t, e, n) {
  (n = ll(-1, n)), (n.tag = 3);
  var r = t.type.getDerivedStateFromError;
  if (typeof r == "function") {
    var a = e.value;
    (n.payload = function () {
      return r(a);
    }),
      (n.callback = function () {
        pN(t, e);
      });
  }
  var s = t.stateNode;
  return (
    s !== null &&
      typeof s.componentDidCatch == "function" &&
      (n.callback = function () {
        pN(t, e),
          typeof r != "function" &&
            (Lc === null ? (Lc = new Set([this])) : Lc.add(this));
        var i = e.stack;
        this.componentDidCatch(e.value, {
          componentStack: i !== null ? i : "",
        });
      }),
    n
  );
}
function KK(t, e, n) {
  var r = t.pingCache;
  if (r === null) {
    r = t.pingCache = new rnt();
    var a = new Set();
    r.set(e, a);
  } else (a = r.get(e)), a === void 0 && ((a = new Set()), r.set(e, a));
  a.has(n) || (a.add(n), (t = gnt.bind(null, t, e, n)), e.then(t, t));
}
function BK(t) {
  do {
    var e;
    if (
      ((e = t.tag === 13) &&
        ((e = t.memoizedState), (e = e !== null ? e.dehydrated !== null : !0)),
      e)
    )
      return t;
    t = t.return;
  } while (t !== null);
  return null;
}
function VK(t, e, n, r, a) {
  return t.mode & 1
    ? ((t.flags |= 65536), (t.lanes = a), t)
    : (t === e
        ? (t.flags |= 65536)
        : ((t.flags |= 128),
          (n.flags |= 131072),
          (n.flags &= -52805),
          n.tag === 1 &&
            (n.alternate === null
              ? (n.tag = 17)
              : ((e = ll(-1, 1)), (e.tag = 2), xc(n, e, 1))),
          (n.lanes |= 1)),
      t);
}
var ant = Ml.ReactCurrentOwner,
  Fa = !1;
function fa(t, e, n, r) {
  e.child = t === null ? vce(e, null, n, r) : tm(e, t.child, n, r);
}
function jK(t, e, n, r, a) {
  n = n.render;
  var s = e.ref;
  return (
    bf(e, a),
    (r = fG(t, e, n, r, s, a)),
    (n = mG()),
    t !== null && !Fa
      ? ((e.updateQueue = t.updateQueue),
        (e.flags &= -2053),
        (t.lanes &= ~a),
        El(t, e, a))
      : (Rs && n && nG(e), (e.flags |= 1), fa(t, e, r, a), e.child)
  );
}
function zK(t, e, n, r, a) {
  if (t === null) {
    var s = n.type;
    return typeof s == "function" &&
      !PG(s) &&
      s.defaultProps === void 0 &&
      n.compare === null &&
      n.defaultProps === void 0
      ? ((e.tag = 15), (e.type = s), Bce(t, e, s, r, a))
      : ((t = $E(n.type, null, r, e, e.mode, a)),
        (t.ref = e.ref),
        (t.return = e),
        (e.child = t));
  }
  if (((s = t.child), !(t.lanes & a))) {
    var i = s.memoizedProps;
    if (
      ((n = n.compare), (n = n !== null ? n : Jg), n(i, r) && t.ref === e.ref)
    )
      return El(t, e, a);
  }
  return (
    (e.flags |= 1),
    (t = Dc(s, r)),
    (t.ref = e.ref),
    (t.return = e),
    (e.child = t)
  );
}
function Bce(t, e, n, r, a) {
  if (t !== null) {
    var s = t.memoizedProps;
    if (Jg(s, r) && t.ref === e.ref)
      if (((Fa = !1), (e.pendingProps = r = s), (t.lanes & a) !== 0))
        t.flags & 131072 && (Fa = !0);
      else return (e.lanes = t.lanes), El(t, e, a);
  }
  return hN(t, e, n, r, a);
}
function Vce(t, e, n) {
  var r = e.pendingProps,
    a = r.children,
    s = t !== null ? t.memoizedState : null;
  if (r.mode === "hidden")
    if (!(e.mode & 1))
      (e.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }),
        Ss(zh, ni),
        (ni |= n);
    else {
      if (!(n & 1073741824))
        return (
          (t = s !== null ? s.baseLanes | n : n),
          (e.lanes = e.childLanes = 1073741824),
          (e.memoizedState = {
            baseLanes: t,
            cachePool: null,
            transitions: null,
          }),
          (e.updateQueue = null),
          Ss(zh, ni),
          (ni |= t),
          null
        );
      (e.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }),
        (r = s !== null ? s.baseLanes : n),
        Ss(zh, ni),
        (ni |= r);
    }
  else
    s !== null ? ((r = s.baseLanes | n), (e.memoizedState = null)) : (r = n),
      Ss(zh, ni),
      (ni |= r);
  return fa(t, e, a, n), e.child;
}
function jce(t, e) {
  var n = e.ref;
  ((t === null && n !== null) || (t !== null && t.ref !== n)) &&
    ((e.flags |= 512), (e.flags |= 2097152));
}
function hN(t, e, n, r, a) {
  var s = Ba(n) ? mp : oa.current;
  return (
    (s = Zf(e, s)),
    bf(e, a),
    (n = fG(t, e, n, r, s, a)),
    (r = mG()),
    t !== null && !Fa
      ? ((e.updateQueue = t.updateQueue),
        (e.flags &= -2053),
        (t.lanes &= ~a),
        El(t, e, a))
      : (Rs && r && nG(e), (e.flags |= 1), fa(t, e, n, a), e.child)
  );
}
function $K(t, e, n, r, a) {
  if (Ba(n)) {
    var s = !0;
    Bw(e);
  } else s = !1;
  if ((bf(e, a), e.stateNode === null))
    VE(t, e), yce(e, n, r), dN(e, n, r, a), (r = !0);
  else if (t === null) {
    var i = e.stateNode,
      o = e.memoizedProps;
    i.props = o;
    var u = i.context,
      l = n.contextType;
    typeof l == "object" && l !== null
      ? (l = $i(l))
      : ((l = Ba(n) ? mp : oa.current), (l = Zf(e, l)));
    var c = n.getDerivedStateFromProps,
      d =
        typeof c == "function" ||
        typeof i.getSnapshotBeforeUpdate == "function";
    d ||
      (typeof i.UNSAFE_componentWillReceiveProps != "function" &&
        typeof i.componentWillReceiveProps != "function") ||
      ((o !== r || u !== l) && DK(e, i, r, l)),
      (ac = !1);
    var p = e.memoizedState;
    (i.state = p),
      Ww(e, r, i, a),
      (u = e.memoizedState),
      o !== r || p !== u || Ka.current || ac
        ? (typeof c == "function" && (cN(e, n, c, r), (u = e.memoizedState)),
          (o = ac || MK(e, n, o, r, p, u, l))
            ? (d ||
                (typeof i.UNSAFE_componentWillMount != "function" &&
                  typeof i.componentWillMount != "function") ||
                (typeof i.componentWillMount == "function" &&
                  i.componentWillMount(),
                typeof i.UNSAFE_componentWillMount == "function" &&
                  i.UNSAFE_componentWillMount()),
              typeof i.componentDidMount == "function" && (e.flags |= 4194308))
            : (typeof i.componentDidMount == "function" && (e.flags |= 4194308),
              (e.memoizedProps = r),
              (e.memoizedState = u)),
          (i.props = r),
          (i.state = u),
          (i.context = l),
          (r = o))
        : (typeof i.componentDidMount == "function" && (e.flags |= 4194308),
          (r = !1));
  } else {
    (i = e.stateNode),
      mce(t, e),
      (o = e.memoizedProps),
      (l = e.type === e.elementType ? o : co(e.type, o)),
      (i.props = l),
      (d = e.pendingProps),
      (p = i.context),
      (u = n.contextType),
      typeof u == "object" && u !== null
        ? (u = $i(u))
        : ((u = Ba(n) ? mp : oa.current), (u = Zf(e, u)));
    var m = n.getDerivedStateFromProps;
    (c =
      typeof m == "function" ||
      typeof i.getSnapshotBeforeUpdate == "function") ||
      (typeof i.UNSAFE_componentWillReceiveProps != "function" &&
        typeof i.componentWillReceiveProps != "function") ||
      ((o !== d || p !== u) && DK(e, i, r, u)),
      (ac = !1),
      (p = e.memoizedState),
      (i.state = p),
      Ww(e, r, i, a);
    var y = e.memoizedState;
    o !== d || p !== y || Ka.current || ac
      ? (typeof m == "function" && (cN(e, n, m, r), (y = e.memoizedState)),
        (l = ac || MK(e, n, l, r, p, y, u) || !1)
          ? (c ||
              (typeof i.UNSAFE_componentWillUpdate != "function" &&
                typeof i.componentWillUpdate != "function") ||
              (typeof i.componentWillUpdate == "function" &&
                i.componentWillUpdate(r, y, u),
              typeof i.UNSAFE_componentWillUpdate == "function" &&
                i.UNSAFE_componentWillUpdate(r, y, u)),
            typeof i.componentDidUpdate == "function" && (e.flags |= 4),
            typeof i.getSnapshotBeforeUpdate == "function" && (e.flags |= 1024))
          : (typeof i.componentDidUpdate != "function" ||
              (o === t.memoizedProps && p === t.memoizedState) ||
              (e.flags |= 4),
            typeof i.getSnapshotBeforeUpdate != "function" ||
              (o === t.memoizedProps && p === t.memoizedState) ||
              (e.flags |= 1024),
            (e.memoizedProps = r),
            (e.memoizedState = y)),
        (i.props = r),
        (i.state = y),
        (i.context = u),
        (r = l))
      : (typeof i.componentDidUpdate != "function" ||
          (o === t.memoizedProps && p === t.memoizedState) ||
          (e.flags |= 4),
        typeof i.getSnapshotBeforeUpdate != "function" ||
          (o === t.memoizedProps && p === t.memoizedState) ||
          (e.flags |= 1024),
        (r = !1));
  }
  return fN(t, e, n, r, s, a);
}
function fN(t, e, n, r, a, s) {
  jce(t, e);
  var i = (e.flags & 128) !== 0;
  if (!r && !i) return a && NK(e, n, !1), El(t, e, s);
  (r = e.stateNode), (ant.current = e);
  var o =
    i && typeof n.getDerivedStateFromError != "function" ? null : r.render();
  return (
    (e.flags |= 1),
    t !== null && i
      ? ((e.child = tm(e, t.child, null, s)), (e.child = tm(e, null, o, s)))
      : fa(t, e, o, s),
    (e.memoizedState = r.state),
    a && NK(e, n, !0),
    e.child
  );
}
function zce(t) {
  var e = t.stateNode;
  e.pendingContext
    ? HK(t, e.pendingContext, e.pendingContext !== e.context)
    : e.context && HK(t, e.context, !1),
    cG(t, e.containerInfo);
}
function WK(t, e, n, r, a) {
  return em(), rG(a), (e.flags |= 256), fa(t, e, n, r), e.child;
}
var mN = { dehydrated: null, treeContext: null, retryLane: 0 };
function SN(t) {
  return { baseLanes: t, cachePool: null, transitions: null };
}
function $ce(t, e, n) {
  var r = e.pendingProps,
    a = Gs.current,
    s = !1,
    i = (e.flags & 128) !== 0,
    o;
  if (
    ((o = i) ||
      (o = t !== null && t.memoizedState === null ? !1 : (a & 2) !== 0),
    o
      ? ((s = !0), (e.flags &= -129))
      : (t === null || t.memoizedState !== null) && (a |= 1),
    Ss(Gs, a & 1),
    t === null)
  )
    return (
      uN(e),
      (t = e.memoizedState),
      t !== null && ((t = t.dehydrated), t !== null)
        ? (e.mode & 1
            ? t.data === "$!"
              ? (e.lanes = 8)
              : (e.lanes = 1073741824)
            : (e.lanes = 1),
          null)
        : ((i = r.children),
          (t = r.fallback),
          s
            ? ((r = e.mode),
              (s = e.child),
              (i = { mode: "hidden", children: i }),
              !(r & 1) && s !== null
                ? ((s.childLanes = 0), (s.pendingProps = i))
                : (s = _I(i, r, 0, null)),
              (t = Jd(t, r, n, null)),
              (s.return = e),
              (t.return = e),
              (s.sibling = t),
              (e.child = s),
              (e.child.memoizedState = SN(n)),
              (e.memoizedState = mN),
              t)
            : gG(e, i))
    );
  if (((a = t.memoizedState), a !== null && ((o = a.dehydrated), o !== null)))
    return int(t, e, i, r, o, a, n);
  if (s) {
    (s = r.fallback), (i = e.mode), (a = t.child), (o = a.sibling);
    var u = { mode: "hidden", children: r.children };
    return (
      !(i & 1) && e.child !== a
        ? ((r = e.child),
          (r.childLanes = 0),
          (r.pendingProps = u),
          (e.deletions = null))
        : ((r = Dc(a, u)), (r.subtreeFlags = a.subtreeFlags & 14680064)),
      o !== null ? (s = Dc(o, s)) : ((s = Jd(s, i, n, null)), (s.flags |= 2)),
      (s.return = e),
      (r.return = e),
      (r.sibling = s),
      (e.child = r),
      (r = s),
      (s = e.child),
      (i = t.child.memoizedState),
      (i =
        i === null
          ? SN(n)
          : {
              baseLanes: i.baseLanes | n,
              cachePool: null,
              transitions: i.transitions,
            }),
      (s.memoizedState = i),
      (s.childLanes = t.childLanes & ~n),
      (e.memoizedState = mN),
      r
    );
  }
  return (
    (s = t.child),
    (t = s.sibling),
    (r = Dc(s, { mode: "visible", children: r.children })),
    !(e.mode & 1) && (r.lanes = n),
    (r.return = e),
    (r.sibling = null),
    t !== null &&
      ((n = e.deletions),
      n === null ? ((e.deletions = [t]), (e.flags |= 16)) : n.push(t)),
    (e.child = r),
    (e.memoizedState = null),
    r
  );
}
function gG(t, e) {
  return (
    (e = _I({ mode: "visible", children: e }, t.mode, 0, null)),
    (e.return = t),
    (t.child = e)
  );
}
function Hb(t, e, n, r) {
  return (
    r !== null && rG(r),
    tm(e, t.child, null, n),
    (t = gG(e, e.pendingProps.children)),
    (t.flags |= 2),
    (e.memoizedState = null),
    t
  );
}
function int(t, e, n, r, a, s, i) {
  if (n)
    return e.flags & 256
      ? ((e.flags &= -257), (r = s1(Error(ht(422)))), Hb(t, e, i, r))
      : e.memoizedState !== null
      ? ((e.child = t.child), (e.flags |= 128), null)
      : ((s = r.fallback),
        (a = e.mode),
        (r = _I({ mode: "visible", children: r.children }, a, 0, null)),
        (s = Jd(s, a, i, null)),
        (s.flags |= 2),
        (r.return = e),
        (s.return = e),
        (r.sibling = s),
        (e.child = r),
        e.mode & 1 && tm(e, t.child, null, i),
        (e.child.memoizedState = SN(i)),
        (e.memoizedState = mN),
        s);
  if (!(e.mode & 1)) return Hb(t, e, i, null);
  if (a.data === "$!") {
    if (((r = a.nextSibling && a.nextSibling.dataset), r)) var o = r.dgst;
    return (
      (r = o), (s = Error(ht(419))), (r = s1(s, r, void 0)), Hb(t, e, i, r)
    );
  }
  if (((o = (i & t.childLanes) !== 0), Fa || o)) {
    if (((r = Cr), r !== null)) {
      switch (i & -i) {
        case 4:
          a = 2;
          break;
        case 16:
          a = 8;
          break;
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
          a = 32;
          break;
        case 536870912:
          a = 268435456;
          break;
        default:
          a = 0;
      }
      (a = a & (r.suspendedLanes | i) ? 0 : a),
        a !== 0 &&
          a !== s.retryLane &&
          ((s.retryLane = a), bl(t, a), Ao(r, t, a, -1));
    }
    return wG(), (r = s1(Error(ht(421)))), Hb(t, e, i, r);
  }
  return a.data === "$?"
    ? ((e.flags |= 128),
      (e.child = t.child),
      (e = vnt.bind(null, t)),
      (a._reactRetry = e),
      null)
    : ((t = s.treeContext),
      (ci = kc(a.nextSibling)),
      (pi = e),
      (Rs = !0),
      (So = null),
      t !== null &&
        ((Oi[Hi++] = el),
        (Oi[Hi++] = tl),
        (Oi[Hi++] = Sp),
        (el = t.id),
        (tl = t.overflow),
        (Sp = e)),
      (e = gG(e, r.children)),
      (e.flags |= 4096),
      e);
}
function qK(t, e, n) {
  t.lanes |= e;
  var r = t.alternate;
  r !== null && (r.lanes |= e), lN(t.return, e, n);
}
function r1(t, e, n, r, a) {
  var s = t.memoizedState;
  s === null
    ? (t.memoizedState = {
        isBackwards: e,
        rendering: null,
        renderingStartTime: 0,
        last: r,
        tail: n,
        tailMode: a,
      })
    : ((s.isBackwards = e),
      (s.rendering = null),
      (s.renderingStartTime = 0),
      (s.last = r),
      (s.tail = n),
      (s.tailMode = a));
}
function Wce(t, e, n) {
  var r = e.pendingProps,
    a = r.revealOrder,
    s = r.tail;
  if ((fa(t, e, r.children, n), (r = Gs.current), r & 2))
    (r = (r & 1) | 2), (e.flags |= 128);
  else {
    if (t !== null && t.flags & 128)
      e: for (t = e.child; t !== null; ) {
        if (t.tag === 13) t.memoizedState !== null && qK(t, n, e);
        else if (t.tag === 19) qK(t, n, e);
        else if (t.child !== null) {
          (t.child.return = t), (t = t.child);
          continue;
        }
        if (t === e) break e;
        for (; t.sibling === null; ) {
          if (t.return === null || t.return === e) break e;
          t = t.return;
        }
        (t.sibling.return = t.return), (t = t.sibling);
      }
    r &= 1;
  }
  if ((Ss(Gs, r), !(e.mode & 1))) e.memoizedState = null;
  else
    switch (a) {
      case "forwards":
        for (n = e.child, a = null; n !== null; )
          (t = n.alternate),
            t !== null && qw(t) === null && (a = n),
            (n = n.sibling);
        (n = a),
          n === null
            ? ((a = e.child), (e.child = null))
            : ((a = n.sibling), (n.sibling = null)),
          r1(e, !1, a, n, s);
        break;
      case "backwards":
        for (n = null, a = e.child, e.child = null; a !== null; ) {
          if (((t = a.alternate), t !== null && qw(t) === null)) {
            e.child = a;
            break;
          }
          (t = a.sibling), (a.sibling = n), (n = a), (a = t);
        }
        r1(e, !0, n, null, s);
        break;
      case "together":
        r1(e, !1, null, null, void 0);
        break;
      default:
        e.memoizedState = null;
    }
  return e.child;
}
function VE(t, e) {
  !(e.mode & 1) &&
    t !== null &&
    ((t.alternate = null), (e.alternate = null), (e.flags |= 2));
}
function El(t, e, n) {
  if (
    (t !== null && (e.dependencies = t.dependencies),
    (gp |= e.lanes),
    !(n & e.childLanes))
  )
    return null;
  if (t !== null && e.child !== t.child) throw Error(ht(153));
  if (e.child !== null) {
    for (
      t = e.child, n = Dc(t, t.pendingProps), e.child = n, n.return = e;
      t.sibling !== null;

    )
      (t = t.sibling), (n = n.sibling = Dc(t, t.pendingProps)), (n.return = e);
    n.sibling = null;
  }
  return e.child;
}
function ont(t, e, n) {
  switch (e.tag) {
    case 3:
      zce(e), em();
      break;
    case 5:
      _ce(e);
      break;
    case 1:
      Ba(e.type) && Bw(e);
      break;
    case 4:
      cG(e, e.stateNode.containerInfo);
      break;
    case 10:
      var r = e.type._context,
        a = e.memoizedProps.value;
      Ss(zw, r._currentValue), (r._currentValue = a);
      break;
    case 13:
      if (((r = e.memoizedState), r !== null))
        return r.dehydrated !== null
          ? (Ss(Gs, Gs.current & 1), (e.flags |= 128), null)
          : n & e.child.childLanes
          ? $ce(t, e, n)
          : (Ss(Gs, Gs.current & 1),
            (t = El(t, e, n)),
            t !== null ? t.sibling : null);
      Ss(Gs, Gs.current & 1);
      break;
    case 19:
      if (((r = (n & e.childLanes) !== 0), t.flags & 128)) {
        if (r) return Wce(t, e, n);
        e.flags |= 128;
      }
      if (
        ((a = e.memoizedState),
        a !== null &&
          ((a.rendering = null), (a.tail = null), (a.lastEffect = null)),
        Ss(Gs, Gs.current),
        r)
      )
        break;
      return null;
    case 22:
    case 23:
      return (e.lanes = 0), Vce(t, e, n);
  }
  return El(t, e, n);
}
var qce, yN, Yce, Xce;
qce = function (t, e) {
  for (var n = e.child; n !== null; ) {
    if (n.tag === 5 || n.tag === 6) t.appendChild(n.stateNode);
    else if (n.tag !== 4 && n.child !== null) {
      (n.child.return = n), (n = n.child);
      continue;
    }
    if (n === e) break;
    for (; n.sibling === null; ) {
      if (n.return === null || n.return === e) return;
      n = n.return;
    }
    (n.sibling.return = n.return), (n = n.sibling);
  }
};
yN = function () {};
Yce = function (t, e, n, r) {
  var a = t.memoizedProps;
  if (a !== r) {
    (t = e.stateNode), jd(hu.current);
    var s = null;
    switch (n) {
      case "input":
        (a = FH(t, a)), (r = FH(t, r)), (s = []);
        break;
      case "select":
        (a = Vs({}, a, { value: void 0 })),
          (r = Vs({}, r, { value: void 0 })),
          (s = []);
        break;
      case "textarea":
        (a = BH(t, a)), (r = BH(t, r)), (s = []);
        break;
      default:
        typeof a.onClick != "function" &&
          typeof r.onClick == "function" &&
          (t.onclick = Uw);
    }
    jH(n, r);
    var i;
    n = null;
    for (l in a)
      if (!r.hasOwnProperty(l) && a.hasOwnProperty(l) && a[l] != null)
        if (l === "style") {
          var o = a[l];
          for (i in o) o.hasOwnProperty(i) && (n || (n = {}), (n[i] = ""));
        } else
          l !== "dangerouslySetInnerHTML" &&
            l !== "children" &&
            l !== "suppressContentEditableWarning" &&
            l !== "suppressHydrationWarning" &&
            l !== "autoFocus" &&
            (zg.hasOwnProperty(l)
              ? s || (s = [])
              : (s = s || []).push(l, null));
    for (l in r) {
      var u = r[l];
      if (
        ((o = a != null ? a[l] : void 0),
        r.hasOwnProperty(l) && u !== o && (u != null || o != null))
      )
        if (l === "style")
          if (o) {
            for (i in o)
              !o.hasOwnProperty(i) ||
                (u && u.hasOwnProperty(i)) ||
                (n || (n = {}), (n[i] = ""));
            for (i in u)
              u.hasOwnProperty(i) &&
                o[i] !== u[i] &&
                (n || (n = {}), (n[i] = u[i]));
          } else n || (s || (s = []), s.push(l, n)), (n = u);
        else
          l === "dangerouslySetInnerHTML"
            ? ((u = u ? u.__html : void 0),
              (o = o ? o.__html : void 0),
              u != null && o !== u && (s = s || []).push(l, u))
            : l === "children"
            ? (typeof u != "string" && typeof u != "number") ||
              (s = s || []).push(l, "" + u)
            : l !== "suppressContentEditableWarning" &&
              l !== "suppressHydrationWarning" &&
              (zg.hasOwnProperty(l)
                ? (u != null && l === "onScroll" && _s("scroll", t),
                  s || o === u || (s = []))
                : (s = s || []).push(l, u));
    }
    n && (s = s || []).push("style", n);
    var l = s;
    (e.updateQueue = l) && (e.flags |= 4);
  }
};
Xce = function (t, e, n, r) {
  n !== r && (e.flags |= 4);
};
function MS(t, e) {
  if (!Rs)
    switch (t.tailMode) {
      case "hidden":
        e = t.tail;
        for (var n = null; e !== null; )
          e.alternate !== null && (n = e), (e = e.sibling);
        n === null ? (t.tail = null) : (n.sibling = null);
        break;
      case "collapsed":
        n = t.tail;
        for (var r = null; n !== null; )
          n.alternate !== null && (r = n), (n = n.sibling);
        r === null
          ? e || t.tail === null
            ? (t.tail = null)
            : (t.tail.sibling = null)
          : (r.sibling = null);
    }
}
function Vr(t) {
  var e = t.alternate !== null && t.alternate.child === t.child,
    n = 0,
    r = 0;
  if (e)
    for (var a = t.child; a !== null; )
      (n |= a.lanes | a.childLanes),
        (r |= a.subtreeFlags & 14680064),
        (r |= a.flags & 14680064),
        (a.return = t),
        (a = a.sibling);
  else
    for (a = t.child; a !== null; )
      (n |= a.lanes | a.childLanes),
        (r |= a.subtreeFlags),
        (r |= a.flags),
        (a.return = t),
        (a = a.sibling);
  return (t.subtreeFlags |= r), (t.childLanes = n), e;
}
function unt(t, e, n) {
  var r = e.pendingProps;
  switch ((sG(e), e.tag)) {
    case 2:
    case 16:
    case 15:
    case 0:
    case 11:
    case 7:
    case 8:
    case 12:
    case 9:
    case 14:
      return Vr(e), null;
    case 1:
      return Ba(e.type) && Kw(), Vr(e), null;
    case 3:
      return (
        (r = e.stateNode),
        nm(),
        Ts(Ka),
        Ts(oa),
        pG(),
        r.pendingContext &&
          ((r.context = r.pendingContext), (r.pendingContext = null)),
        (t === null || t.child === null) &&
          (Ab(e)
            ? (e.flags |= 4)
            : t === null ||
              (t.memoizedState.isDehydrated && !(e.flags & 256)) ||
              ((e.flags |= 1024), So !== null && (PN(So), (So = null)))),
        yN(t, e),
        Vr(e),
        null
      );
    case 5:
      dG(e);
      var a = jd(sv.current);
      if (((n = e.type), t !== null && e.stateNode != null))
        Yce(t, e, n, r, a),
          t.ref !== e.ref && ((e.flags |= 512), (e.flags |= 2097152));
      else {
        if (!r) {
          if (e.stateNode === null) throw Error(ht(166));
          return Vr(e), null;
        }
        if (((t = jd(hu.current)), Ab(e))) {
          (r = e.stateNode), (n = e.type);
          var s = e.memoizedProps;
          switch (((r[su] = e), (r[tv] = s), (t = (e.mode & 1) !== 0), n)) {
            case "dialog":
              _s("cancel", r), _s("close", r);
              break;
            case "iframe":
            case "object":
            case "embed":
              _s("load", r);
              break;
            case "video":
            case "audio":
              for (a = 0; a < ry.length; a++) _s(ry[a], r);
              break;
            case "source":
              _s("error", r);
              break;
            case "img":
            case "image":
            case "link":
              _s("error", r), _s("load", r);
              break;
            case "details":
              _s("toggle", r);
              break;
            case "input":
              sK(r, s), _s("invalid", r);
              break;
            case "select":
              (r._wrapperState = { wasMultiple: !!s.multiple }),
                _s("invalid", r);
              break;
            case "textarea":
              aK(r, s), _s("invalid", r);
          }
          jH(n, s), (a = null);
          for (var i in s)
            if (s.hasOwnProperty(i)) {
              var o = s[i];
              i === "children"
                ? typeof o == "string"
                  ? r.textContent !== o &&
                    (s.suppressHydrationWarning !== !0 &&
                      Cb(r.textContent, o, t),
                    (a = ["children", o]))
                  : typeof o == "number" &&
                    r.textContent !== "" + o &&
                    (s.suppressHydrationWarning !== !0 &&
                      Cb(r.textContent, o, t),
                    (a = ["children", "" + o]))
                : zg.hasOwnProperty(i) &&
                  o != null &&
                  i === "onScroll" &&
                  _s("scroll", r);
            }
          switch (n) {
            case "input":
              vb(r), rK(r, s, !0);
              break;
            case "textarea":
              vb(r), iK(r);
              break;
            case "select":
            case "option":
              break;
            default:
              typeof s.onClick == "function" && (r.onclick = Uw);
          }
          (r = a), (e.updateQueue = r), r !== null && (e.flags |= 4);
        } else {
          (i = a.nodeType === 9 ? a : a.ownerDocument),
            t === "http://www.w3.org/1999/xhtml" && (t = Tle(n)),
            t === "http://www.w3.org/1999/xhtml"
              ? n === "script"
                ? ((t = i.createElement("div")),
                  (t.innerHTML = "<script></script>"),
                  (t = t.removeChild(t.firstChild)))
                : typeof r.is == "string"
                ? (t = i.createElement(n, { is: r.is }))
                : ((t = i.createElement(n)),
                  n === "select" &&
                    ((i = t),
                    r.multiple
                      ? (i.multiple = !0)
                      : r.size && (i.size = r.size)))
              : (t = i.createElementNS(t, n)),
            (t[su] = e),
            (t[tv] = r),
            qce(t, e, !1, !1),
            (e.stateNode = t);
          e: {
            switch (((i = zH(n, r)), n)) {
              case "dialog":
                _s("cancel", t), _s("close", t), (a = r);
                break;
              case "iframe":
              case "object":
              case "embed":
                _s("load", t), (a = r);
                break;
              case "video":
              case "audio":
                for (a = 0; a < ry.length; a++) _s(ry[a], t);
                a = r;
                break;
              case "source":
                _s("error", t), (a = r);
                break;
              case "img":
              case "image":
              case "link":
                _s("error", t), _s("load", t), (a = r);
                break;
              case "details":
                _s("toggle", t), (a = r);
                break;
              case "input":
                sK(t, r), (a = FH(t, r)), _s("invalid", t);
                break;
              case "option":
                a = r;
                break;
              case "select":
                (t._wrapperState = { wasMultiple: !!r.multiple }),
                  (a = Vs({}, r, { value: void 0 })),
                  _s("invalid", t);
                break;
              case "textarea":
                aK(t, r), (a = BH(t, r)), _s("invalid", t);
                break;
              default:
                a = r;
            }
            jH(n, a), (o = a);
            for (s in o)
              if (o.hasOwnProperty(s)) {
                var u = o[s];
                s === "style"
                  ? Ile(t, u)
                  : s === "dangerouslySetInnerHTML"
                  ? ((u = u ? u.__html : void 0), u != null && wle(t, u))
                  : s === "children"
                  ? typeof u == "string"
                    ? (n !== "textarea" || u !== "") && $g(t, u)
                    : typeof u == "number" && $g(t, "" + u)
                  : s !== "suppressContentEditableWarning" &&
                    s !== "suppressHydrationWarning" &&
                    s !== "autoFocus" &&
                    (zg.hasOwnProperty(s)
                      ? u != null && s === "onScroll" && _s("scroll", t)
                      : u != null && B3(t, s, u, i));
              }
            switch (n) {
              case "input":
                vb(t), rK(t, r, !1);
                break;
              case "textarea":
                vb(t), iK(t);
                break;
              case "option":
                r.value != null && t.setAttribute("value", "" + Jc(r.value));
                break;
              case "select":
                (t.multiple = !!r.multiple),
                  (s = r.value),
                  s != null
                    ? yf(t, !!r.multiple, s, !1)
                    : r.defaultValue != null &&
                      yf(t, !!r.multiple, r.defaultValue, !0);
                break;
              default:
                typeof a.onClick == "function" && (t.onclick = Uw);
            }
            switch (n) {
              case "button":
              case "input":
              case "select":
              case "textarea":
                r = !!r.autoFocus;
                break e;
              case "img":
                r = !0;
                break e;
              default:
                r = !1;
            }
          }
          r && (e.flags |= 4);
        }
        e.ref !== null && ((e.flags |= 512), (e.flags |= 2097152));
      }
      return Vr(e), null;
    case 6:
      if (t && e.stateNode != null) Xce(t, e, t.memoizedProps, r);
      else {
        if (typeof r != "string" && e.stateNode === null) throw Error(ht(166));
        if (((n = jd(sv.current)), jd(hu.current), Ab(e))) {
          if (
            ((r = e.stateNode),
            (n = e.memoizedProps),
            (r[su] = e),
            (s = r.nodeValue !== n) && ((t = pi), t !== null))
          )
            switch (t.tag) {
              case 3:
                Cb(r.nodeValue, n, (t.mode & 1) !== 0);
                break;
              case 5:
                t.memoizedProps.suppressHydrationWarning !== !0 &&
                  Cb(r.nodeValue, n, (t.mode & 1) !== 0);
            }
          s && (e.flags |= 4);
        } else
          (r = (n.nodeType === 9 ? n : n.ownerDocument).createTextNode(r)),
            (r[su] = e),
            (e.stateNode = r);
      }
      return Vr(e), null;
    case 13:
      if (
        (Ts(Gs),
        (r = e.memoizedState),
        t === null ||
          (t.memoizedState !== null && t.memoizedState.dehydrated !== null))
      ) {
        if (Rs && ci !== null && e.mode & 1 && !(e.flags & 128))
          hce(), em(), (e.flags |= 98560), (s = !1);
        else if (((s = Ab(e)), r !== null && r.dehydrated !== null)) {
          if (t === null) {
            if (!s) throw Error(ht(318));
            if (
              ((s = e.memoizedState),
              (s = s !== null ? s.dehydrated : null),
              !s)
            )
              throw Error(ht(317));
            s[su] = e;
          } else
            em(), !(e.flags & 128) && (e.memoizedState = null), (e.flags |= 4);
          Vr(e), (s = !1);
        } else So !== null && (PN(So), (So = null)), (s = !0);
        if (!s) return e.flags & 65536 ? e : null;
      }
      return e.flags & 128
        ? ((e.lanes = n), e)
        : ((r = r !== null),
          r !== (t !== null && t.memoizedState !== null) &&
            r &&
            ((e.child.flags |= 8192),
            e.mode & 1 &&
              (t === null || Gs.current & 1 ? vr === 0 && (vr = 3) : wG())),
          e.updateQueue !== null && (e.flags |= 4),
          Vr(e),
          null);
    case 4:
      return (
        nm(), yN(t, e), t === null && Zg(e.stateNode.containerInfo), Vr(e), null
      );
    case 10:
      return oG(e.type._context), Vr(e), null;
    case 17:
      return Ba(e.type) && Kw(), Vr(e), null;
    case 19:
      if ((Ts(Gs), (s = e.memoizedState), s === null)) return Vr(e), null;
      if (((r = (e.flags & 128) !== 0), (i = s.rendering), i === null))
        if (r) MS(s, !1);
        else {
          if (vr !== 0 || (t !== null && t.flags & 128))
            for (t = e.child; t !== null; ) {
              if (((i = qw(t)), i !== null)) {
                for (
                  e.flags |= 128,
                    MS(s, !1),
                    r = i.updateQueue,
                    r !== null && ((e.updateQueue = r), (e.flags |= 4)),
                    e.subtreeFlags = 0,
                    r = n,
                    n = e.child;
                  n !== null;

                )
                  (s = n),
                    (t = r),
                    (s.flags &= 14680066),
                    (i = s.alternate),
                    i === null
                      ? ((s.childLanes = 0),
                        (s.lanes = t),
                        (s.child = null),
                        (s.subtreeFlags = 0),
                        (s.memoizedProps = null),
                        (s.memoizedState = null),
                        (s.updateQueue = null),
                        (s.dependencies = null),
                        (s.stateNode = null))
                      : ((s.childLanes = i.childLanes),
                        (s.lanes = i.lanes),
                        (s.child = i.child),
                        (s.subtreeFlags = 0),
                        (s.deletions = null),
                        (s.memoizedProps = i.memoizedProps),
                        (s.memoizedState = i.memoizedState),
                        (s.updateQueue = i.updateQueue),
                        (s.type = i.type),
                        (t = i.dependencies),
                        (s.dependencies =
                          t === null
                            ? null
                            : {
                                lanes: t.lanes,
                                firstContext: t.firstContext,
                              })),
                    (n = n.sibling);
                return Ss(Gs, (Gs.current & 1) | 2), e.child;
              }
              t = t.sibling;
            }
          s.tail !== null &&
            rr() > rm &&
            ((e.flags |= 128), (r = !0), MS(s, !1), (e.lanes = 4194304));
        }
      else {
        if (!r)
          if (((t = qw(i)), t !== null)) {
            if (
              ((e.flags |= 128),
              (r = !0),
              (n = t.updateQueue),
              n !== null && ((e.updateQueue = n), (e.flags |= 4)),
              MS(s, !0),
              s.tail === null && s.tailMode === "hidden" && !i.alternate && !Rs)
            )
              return Vr(e), null;
          } else
            2 * rr() - s.renderingStartTime > rm &&
              n !== 1073741824 &&
              ((e.flags |= 128), (r = !0), MS(s, !1), (e.lanes = 4194304));
        s.isBackwards
          ? ((i.sibling = e.child), (e.child = i))
          : ((n = s.last),
            n !== null ? (n.sibling = i) : (e.child = i),
            (s.last = i));
      }
      return s.tail !== null
        ? ((e = s.tail),
          (s.rendering = e),
          (s.tail = e.sibling),
          (s.renderingStartTime = rr()),
          (e.sibling = null),
          (n = Gs.current),
          Ss(Gs, r ? (n & 1) | 2 : n & 1),
          e)
        : (Vr(e), null);
    case 22:
    case 23:
      return (
        TG(),
        (r = e.memoizedState !== null),
        t !== null && (t.memoizedState !== null) !== r && (e.flags |= 8192),
        r && e.mode & 1
          ? ni & 1073741824 && (Vr(e), e.subtreeFlags & 6 && (e.flags |= 8192))
          : Vr(e),
        null
      );
    case 24:
      return null;
    case 25:
      return null;
  }
  throw Error(ht(156, e.tag));
}
function lnt(t, e) {
  switch ((sG(e), e.tag)) {
    case 1:
      return (
        Ba(e.type) && Kw(),
        (t = e.flags),
        t & 65536 ? ((e.flags = (t & -65537) | 128), e) : null
      );
    case 3:
      return (
        nm(),
        Ts(Ka),
        Ts(oa),
        pG(),
        (t = e.flags),
        t & 65536 && !(t & 128) ? ((e.flags = (t & -65537) | 128), e) : null
      );
    case 5:
      return dG(e), null;
    case 13:
      if (
        (Ts(Gs), (t = e.memoizedState), t !== null && t.dehydrated !== null)
      ) {
        if (e.alternate === null) throw Error(ht(340));
        em();
      }
      return (
        (t = e.flags), t & 65536 ? ((e.flags = (t & -65537) | 128), e) : null
      );
    case 19:
      return Ts(Gs), null;
    case 4:
      return nm(), null;
    case 10:
      return oG(e.type._context), null;
    case 22:
    case 23:
      return TG(), null;
    case 24:
      return null;
    default:
      return null;
  }
}
var Nb = !1,
  Xr = !1,
  cnt = typeof WeakSet == "function" ? WeakSet : Set,
  kt = null;
function jh(t, e) {
  var n = t.ref;
  if (n !== null)
    if (typeof n == "function")
      try {
        n(null);
      } catch (r) {
        qs(t, e, r);
      }
    else n.current = null;
}
function gN(t, e, n) {
  try {
    n();
  } catch (r) {
    qs(t, e, r);
  }
}
var YK = !1;
function dnt(t, e) {
  if (((tN = Dw), (t = ece()), tG(t))) {
    if ("selectionStart" in t)
      var n = { start: t.selectionStart, end: t.selectionEnd };
    else
      e: {
        n = ((n = t.ownerDocument) && n.defaultView) || window;
        var r = n.getSelection && n.getSelection();
        if (r && r.rangeCount !== 0) {
          n = r.anchorNode;
          var a = r.anchorOffset,
            s = r.focusNode;
          r = r.focusOffset;
          try {
            n.nodeType, s.nodeType;
          } catch {
            n = null;
            break e;
          }
          var i = 0,
            o = -1,
            u = -1,
            l = 0,
            c = 0,
            d = t,
            p = null;
          t: for (;;) {
            for (
              var m;
              d !== n || (a !== 0 && d.nodeType !== 3) || (o = i + a),
                d !== s || (r !== 0 && d.nodeType !== 3) || (u = i + r),
                d.nodeType === 3 && (i += d.nodeValue.length),
                (m = d.firstChild) !== null;

            )
              (p = d), (d = m);
            for (;;) {
              if (d === t) break t;
              if (
                (p === n && ++l === a && (o = i),
                p === s && ++c === r && (u = i),
                (m = d.nextSibling) !== null)
              )
                break;
              (d = p), (p = d.parentNode);
            }
            d = m;
          }
          n = o === -1 || u === -1 ? null : { start: o, end: u };
        } else n = null;
      }
    n = n || { start: 0, end: 0 };
  } else n = null;
  for (
    nN = { focusedElem: t, selectionRange: n }, Dw = !1, kt = e;
    kt !== null;

  )
    if (((e = kt), (t = e.child), (e.subtreeFlags & 1028) !== 0 && t !== null))
      (t.return = e), (kt = t);
    else
      for (; kt !== null; ) {
        e = kt;
        try {
          var y = e.alternate;
          if (e.flags & 1024)
            switch (e.tag) {
              case 0:
              case 11:
              case 15:
                break;
              case 1:
                if (y !== null) {
                  var I = y.memoizedProps,
                    O = y.memoizedState,
                    g = e.stateNode,
                    C = g.getSnapshotBeforeUpdate(
                      e.elementType === e.type ? I : co(e.type, I),
                      O
                    );
                  g.__reactInternalSnapshotBeforeUpdate = C;
                }
                break;
              case 3:
                var H = e.stateNode.containerInfo;
                H.nodeType === 1
                  ? (H.textContent = "")
                  : H.nodeType === 9 &&
                    H.documentElement &&
                    H.removeChild(H.documentElement);
                break;
              case 5:
              case 6:
              case 4:
              case 17:
                break;
              default:
                throw Error(ht(163));
            }
        } catch (B) {
          qs(e, e.return, B);
        }
        if (((t = e.sibling), t !== null)) {
          (t.return = e.return), (kt = t);
          break;
        }
        kt = e.return;
      }
  return (y = YK), (YK = !1), y;
}
function jy(t, e, n) {
  var r = e.updateQueue;
  if (((r = r !== null ? r.lastEffect : null), r !== null)) {
    var a = (r = r.next);
    do {
      if ((a.tag & t) === t) {
        var s = a.destroy;
        (a.destroy = void 0), s !== void 0 && gN(e, n, s);
      }
      a = a.next;
    } while (a !== r);
  }
}
function gI(t, e) {
  if (
    ((e = e.updateQueue), (e = e !== null ? e.lastEffect : null), e !== null)
  ) {
    var n = (e = e.next);
    do {
      if ((n.tag & t) === t) {
        var r = n.create;
        n.destroy = r();
      }
      n = n.next;
    } while (n !== e);
  }
}
function vN(t) {
  var e = t.ref;
  if (e !== null) {
    var n = t.stateNode;
    switch (t.tag) {
      case 5:
        t = n;
        break;
      default:
        t = n;
    }
    typeof e == "function" ? e(t) : (e.current = t);
  }
}
function Qce(t) {
  var e = t.alternate;
  e !== null && ((t.alternate = null), Qce(e)),
    (t.child = null),
    (t.deletions = null),
    (t.sibling = null),
    t.tag === 5 &&
      ((e = t.stateNode),
      e !== null &&
        (delete e[su],
        delete e[tv],
        delete e[aN],
        delete e[Wtt],
        delete e[qtt])),
    (t.stateNode = null),
    (t.return = null),
    (t.dependencies = null),
    (t.memoizedProps = null),
    (t.memoizedState = null),
    (t.pendingProps = null),
    (t.stateNode = null),
    (t.updateQueue = null);
}
function Jce(t) {
  return t.tag === 5 || t.tag === 3 || t.tag === 4;
}
function XK(t) {
  e: for (;;) {
    for (; t.sibling === null; ) {
      if (t.return === null || Jce(t.return)) return null;
      t = t.return;
    }
    for (
      t.sibling.return = t.return, t = t.sibling;
      t.tag !== 5 && t.tag !== 6 && t.tag !== 18;

    ) {
      if (t.flags & 2 || t.child === null || t.tag === 4) continue e;
      (t.child.return = t), (t = t.child);
    }
    if (!(t.flags & 2)) return t.stateNode;
  }
}
function _N(t, e, n) {
  var r = t.tag;
  if (r === 5 || r === 6)
    (t = t.stateNode),
      e
        ? n.nodeType === 8
          ? n.parentNode.insertBefore(t, e)
          : n.insertBefore(t, e)
        : (n.nodeType === 8
            ? ((e = n.parentNode), e.insertBefore(t, n))
            : ((e = n), e.appendChild(t)),
          (n = n._reactRootContainer),
          n != null || e.onclick !== null || (e.onclick = Uw));
  else if (r !== 4 && ((t = t.child), t !== null))
    for (_N(t, e, n), t = t.sibling; t !== null; ) _N(t, e, n), (t = t.sibling);
}
function bN(t, e, n) {
  var r = t.tag;
  if (r === 5 || r === 6)
    (t = t.stateNode), e ? n.insertBefore(t, e) : n.appendChild(t);
  else if (r !== 4 && ((t = t.child), t !== null))
    for (bN(t, e, n), t = t.sibling; t !== null; ) bN(t, e, n), (t = t.sibling);
}
var Nr = null,
  fo = !1;
function Wl(t, e, n) {
  for (n = n.child; n !== null; ) Zce(t, e, n), (n = n.sibling);
}
function Zce(t, e, n) {
  if (pu && typeof pu.onCommitFiberUnmount == "function")
    try {
      pu.onCommitFiberUnmount(cI, n);
    } catch {}
  switch (n.tag) {
    case 5:
      Xr || jh(n, e);
    case 6:
      var r = Nr,
        a = fo;
      (Nr = null),
        Wl(t, e, n),
        (Nr = r),
        (fo = a),
        Nr !== null &&
          (fo
            ? ((t = Nr),
              (n = n.stateNode),
              t.nodeType === 8 ? t.parentNode.removeChild(n) : t.removeChild(n))
            : Nr.removeChild(n.stateNode));
      break;
    case 18:
      Nr !== null &&
        (fo
          ? ((t = Nr),
            (n = n.stateNode),
            t.nodeType === 8
              ? QA(t.parentNode, n)
              : t.nodeType === 1 && QA(t, n),
            Xg(t))
          : QA(Nr, n.stateNode));
      break;
    case 4:
      (r = Nr),
        (a = fo),
        (Nr = n.stateNode.containerInfo),
        (fo = !0),
        Wl(t, e, n),
        (Nr = r),
        (fo = a);
      break;
    case 0:
    case 11:
    case 14:
    case 15:
      if (
        !Xr &&
        ((r = n.updateQueue), r !== null && ((r = r.lastEffect), r !== null))
      ) {
        a = r = r.next;
        do {
          var s = a,
            i = s.destroy;
          (s = s.tag),
            i !== void 0 && (s & 2 || s & 4) && gN(n, e, i),
            (a = a.next);
        } while (a !== r);
      }
      Wl(t, e, n);
      break;
    case 1:
      if (
        !Xr &&
        (jh(n, e),
        (r = n.stateNode),
        typeof r.componentWillUnmount == "function")
      )
        try {
          (r.props = n.memoizedProps),
            (r.state = n.memoizedState),
            r.componentWillUnmount();
        } catch (o) {
          qs(n, e, o);
        }
      Wl(t, e, n);
      break;
    case 21:
      Wl(t, e, n);
      break;
    case 22:
      n.mode & 1
        ? ((Xr = (r = Xr) || n.memoizedState !== null), Wl(t, e, n), (Xr = r))
        : Wl(t, e, n);
      break;
    default:
      Wl(t, e, n);
  }
}
function QK(t) {
  var e = t.updateQueue;
  if (e !== null) {
    t.updateQueue = null;
    var n = t.stateNode;
    n === null && (n = t.stateNode = new cnt()),
      e.forEach(function (r) {
        var a = _nt.bind(null, t, r);
        n.has(r) || (n.add(r), r.then(a, a));
      });
  }
}
function oo(t, e) {
  var n = e.deletions;
  if (n !== null)
    for (var r = 0; r < n.length; r++) {
      var a = n[r];
      try {
        var s = t,
          i = e,
          o = i;
        e: for (; o !== null; ) {
          switch (o.tag) {
            case 5:
              (Nr = o.stateNode), (fo = !1);
              break e;
            case 3:
              (Nr = o.stateNode.containerInfo), (fo = !0);
              break e;
            case 4:
              (Nr = o.stateNode.containerInfo), (fo = !0);
              break e;
          }
          o = o.return;
        }
        if (Nr === null) throw Error(ht(160));
        Zce(s, i, a), (Nr = null), (fo = !1);
        var u = a.alternate;
        u !== null && (u.return = null), (a.return = null);
      } catch (l) {
        qs(a, e, l);
      }
    }
  if (e.subtreeFlags & 12854)
    for (e = e.child; e !== null; ) ede(e, t), (e = e.sibling);
}
function ede(t, e) {
  var n = t.alternate,
    r = t.flags;
  switch (t.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
      if ((oo(e, t), $o(t), r & 4)) {
        try {
          jy(3, t, t.return), gI(3, t);
        } catch (I) {
          qs(t, t.return, I);
        }
        try {
          jy(5, t, t.return);
        } catch (I) {
          qs(t, t.return, I);
        }
      }
      break;
    case 1:
      oo(e, t), $o(t), r & 512 && n !== null && jh(n, n.return);
      break;
    case 5:
      if (
        (oo(e, t),
        $o(t),
        r & 512 && n !== null && jh(n, n.return),
        t.flags & 32)
      ) {
        var a = t.stateNode;
        try {
          $g(a, "");
        } catch (I) {
          qs(t, t.return, I);
        }
      }
      if (r & 4 && ((a = t.stateNode), a != null)) {
        var s = t.memoizedProps,
          i = n !== null ? n.memoizedProps : s,
          o = t.type,
          u = t.updateQueue;
        if (((t.updateQueue = null), u !== null))
          try {
            o === "input" && s.type === "radio" && s.name != null && ble(a, s),
              zH(o, i);
            var l = zH(o, s);
            for (i = 0; i < u.length; i += 2) {
              var c = u[i],
                d = u[i + 1];
              c === "style"
                ? Ile(a, d)
                : c === "dangerouslySetInnerHTML"
                ? wle(a, d)
                : c === "children"
                ? $g(a, d)
                : B3(a, c, d, l);
            }
            switch (o) {
              case "input":
                UH(a, s);
                break;
              case "textarea":
                Ele(a, s);
                break;
              case "select":
                var p = a._wrapperState.wasMultiple;
                a._wrapperState.wasMultiple = !!s.multiple;
                var m = s.value;
                m != null
                  ? yf(a, !!s.multiple, m, !1)
                  : p !== !!s.multiple &&
                    (s.defaultValue != null
                      ? yf(a, !!s.multiple, s.defaultValue, !0)
                      : yf(a, !!s.multiple, s.multiple ? [] : "", !1));
            }
            a[tv] = s;
          } catch (I) {
            qs(t, t.return, I);
          }
      }
      break;
    case 6:
      if ((oo(e, t), $o(t), r & 4)) {
        if (t.stateNode === null) throw Error(ht(162));
        (a = t.stateNode), (s = t.memoizedProps);
        try {
          a.nodeValue = s;
        } catch (I) {
          qs(t, t.return, I);
        }
      }
      break;
    case 3:
      if (
        (oo(e, t), $o(t), r & 4 && n !== null && n.memoizedState.isDehydrated)
      )
        try {
          Xg(e.containerInfo);
        } catch (I) {
          qs(t, t.return, I);
        }
      break;
    case 4:
      oo(e, t), $o(t);
      break;
    case 13:
      oo(e, t),
        $o(t),
        (a = t.child),
        a.flags & 8192 &&
          ((s = a.memoizedState !== null),
          (a.stateNode.isHidden = s),
          !s ||
            (a.alternate !== null && a.alternate.memoizedState !== null) ||
            (bG = rr())),
        r & 4 && QK(t);
      break;
    case 22:
      if (
        ((c = n !== null && n.memoizedState !== null),
        t.mode & 1 ? ((Xr = (l = Xr) || c), oo(e, t), (Xr = l)) : oo(e, t),
        $o(t),
        r & 8192)
      ) {
        if (
          ((l = t.memoizedState !== null),
          (t.stateNode.isHidden = l) && !c && t.mode & 1)
        )
          for (kt = t, c = t.child; c !== null; ) {
            for (d = kt = c; kt !== null; ) {
              switch (((p = kt), (m = p.child), p.tag)) {
                case 0:
                case 11:
                case 14:
                case 15:
                  jy(4, p, p.return);
                  break;
                case 1:
                  jh(p, p.return);
                  var y = p.stateNode;
                  if (typeof y.componentWillUnmount == "function") {
                    (r = p), (n = p.return);
                    try {
                      (e = r),
                        (y.props = e.memoizedProps),
                        (y.state = e.memoizedState),
                        y.componentWillUnmount();
                    } catch (I) {
                      qs(r, n, I);
                    }
                  }
                  break;
                case 5:
                  jh(p, p.return);
                  break;
                case 22:
                  if (p.memoizedState !== null) {
                    ZK(d);
                    continue;
                  }
              }
              m !== null ? ((m.return = p), (kt = m)) : ZK(d);
            }
            c = c.sibling;
          }
        e: for (c = null, d = t; ; ) {
          if (d.tag === 5) {
            if (c === null) {
              c = d;
              try {
                (a = d.stateNode),
                  l
                    ? ((s = a.style),
                      typeof s.setProperty == "function"
                        ? s.setProperty("display", "none", "important")
                        : (s.display = "none"))
                    : ((o = d.stateNode),
                      (u = d.memoizedProps.style),
                      (i =
                        u != null && u.hasOwnProperty("display")
                          ? u.display
                          : null),
                      (o.style.display = Ple("display", i)));
              } catch (I) {
                qs(t, t.return, I);
              }
            }
          } else if (d.tag === 6) {
            if (c === null)
              try {
                d.stateNode.nodeValue = l ? "" : d.memoizedProps;
              } catch (I) {
                qs(t, t.return, I);
              }
          } else if (
            ((d.tag !== 22 && d.tag !== 23) ||
              d.memoizedState === null ||
              d === t) &&
            d.child !== null
          ) {
            (d.child.return = d), (d = d.child);
            continue;
          }
          if (d === t) break e;
          for (; d.sibling === null; ) {
            if (d.return === null || d.return === t) break e;
            c === d && (c = null), (d = d.return);
          }
          c === d && (c = null), (d.sibling.return = d.return), (d = d.sibling);
        }
      }
      break;
    case 19:
      oo(e, t), $o(t), r & 4 && QK(t);
      break;
    case 21:
      break;
    default:
      oo(e, t), $o(t);
  }
}
function $o(t) {
  var e = t.flags;
  if (e & 2) {
    try {
      e: {
        for (var n = t.return; n !== null; ) {
          if (Jce(n)) {
            var r = n;
            break e;
          }
          n = n.return;
        }
        throw Error(ht(160));
      }
      switch (r.tag) {
        case 5:
          var a = r.stateNode;
          r.flags & 32 && ($g(a, ""), (r.flags &= -33));
          var s = XK(t);
          bN(t, s, a);
          break;
        case 3:
        case 4:
          var i = r.stateNode.containerInfo,
            o = XK(t);
          _N(t, o, i);
          break;
        default:
          throw Error(ht(161));
      }
    } catch (u) {
      qs(t, t.return, u);
    }
    t.flags &= -3;
  }
  e & 4096 && (t.flags &= -4097);
}
function pnt(t, e, n) {
  (kt = t), tde(t);
}
function tde(t, e, n) {
  for (var r = (t.mode & 1) !== 0; kt !== null; ) {
    var a = kt,
      s = a.child;
    if (a.tag === 22 && r) {
      var i = a.memoizedState !== null || Nb;
      if (!i) {
        var o = a.alternate,
          u = (o !== null && o.memoizedState !== null) || Xr;
        o = Nb;
        var l = Xr;
        if (((Nb = i), (Xr = u) && !l))
          for (kt = a; kt !== null; )
            (i = kt),
              (u = i.child),
              i.tag === 22 && i.memoizedState !== null
                ? eB(a)
                : u !== null
                ? ((u.return = i), (kt = u))
                : eB(a);
        for (; s !== null; ) (kt = s), tde(s), (s = s.sibling);
        (kt = a), (Nb = o), (Xr = l);
      }
      JK(t);
    } else
      a.subtreeFlags & 8772 && s !== null ? ((s.return = a), (kt = s)) : JK(t);
  }
}
function JK(t) {
  for (; kt !== null; ) {
    var e = kt;
    if (e.flags & 8772) {
      var n = e.alternate;
      try {
        if (e.flags & 8772)
          switch (e.tag) {
            case 0:
            case 11:
            case 15:
              Xr || gI(5, e);
              break;
            case 1:
              var r = e.stateNode;
              if (e.flags & 4 && !Xr)
                if (n === null) r.componentDidMount();
                else {
                  var a =
                    e.elementType === e.type
                      ? n.memoizedProps
                      : co(e.type, n.memoizedProps);
                  r.componentDidUpdate(
                    a,
                    n.memoizedState,
                    r.__reactInternalSnapshotBeforeUpdate
                  );
                }
              var s = e.updateQueue;
              s !== null && LK(e, s, r);
              break;
            case 3:
              var i = e.updateQueue;
              if (i !== null) {
                if (((n = null), e.child !== null))
                  switch (e.child.tag) {
                    case 5:
                      n = e.child.stateNode;
                      break;
                    case 1:
                      n = e.child.stateNode;
                  }
                LK(e, i, n);
              }
              break;
            case 5:
              var o = e.stateNode;
              if (n === null && e.flags & 4) {
                n = o;
                var u = e.memoizedProps;
                switch (e.type) {
                  case "button":
                  case "input":
                  case "select":
                  case "textarea":
                    u.autoFocus && n.focus();
                    break;
                  case "img":
                    u.src && (n.src = u.src);
                }
              }
              break;
            case 6:
              break;
            case 4:
              break;
            case 12:
              break;
            case 13:
              if (e.memoizedState === null) {
                var l = e.alternate;
                if (l !== null) {
                  var c = l.memoizedState;
                  if (c !== null) {
                    var d = c.dehydrated;
                    d !== null && Xg(d);
                  }
                }
              }
              break;
            case 19:
            case 17:
            case 21:
            case 22:
            case 23:
            case 25:
              break;
            default:
              throw Error(ht(163));
          }
        Xr || (e.flags & 512 && vN(e));
      } catch (p) {
        qs(e, e.return, p);
      }
    }
    if (e === t) {
      kt = null;
      break;
    }
    if (((n = e.sibling), n !== null)) {
      (n.return = e.return), (kt = n);
      break;
    }
    kt = e.return;
  }
}
function ZK(t) {
  for (; kt !== null; ) {
    var e = kt;
    if (e === t) {
      kt = null;
      break;
    }
    var n = e.sibling;
    if (n !== null) {
      (n.return = e.return), (kt = n);
      break;
    }
    kt = e.return;
  }
}
function eB(t) {
  for (; kt !== null; ) {
    var e = kt;
    try {
      switch (e.tag) {
        case 0:
        case 11:
        case 15:
          var n = e.return;
          try {
            gI(4, e);
          } catch (u) {
            qs(e, n, u);
          }
          break;
        case 1:
          var r = e.stateNode;
          if (typeof r.componentDidMount == "function") {
            var a = e.return;
            try {
              r.componentDidMount();
            } catch (u) {
              qs(e, a, u);
            }
          }
          var s = e.return;
          try {
            vN(e);
          } catch (u) {
            qs(e, s, u);
          }
          break;
        case 5:
          var i = e.return;
          try {
            vN(e);
          } catch (u) {
            qs(e, i, u);
          }
      }
    } catch (u) {
      qs(e, e.return, u);
    }
    if (e === t) {
      kt = null;
      break;
    }
    var o = e.sibling;
    if (o !== null) {
      (o.return = e.return), (kt = o);
      break;
    }
    kt = e.return;
  }
}
var hnt = Math.ceil,
  Qw = Ml.ReactCurrentDispatcher,
  vG = Ml.ReactCurrentOwner,
  Ui = Ml.ReactCurrentBatchConfig,
  Un = 0,
  Cr = null,
  lr = null,
  kr = 0,
  ni = 0,
  zh = yd(0),
  vr = 0,
  ov = null,
  gp = 0,
  vI = 0,
  _G = 0,
  zy = null,
  Ma = null,
  bG = 0,
  rm = 1 / 0,
  Bu = null,
  Jw = !1,
  EN = null,
  Lc = null,
  Rb = !1,
  bc = null,
  Zw = 0,
  $y = 0,
  TN = null,
  jE = -1,
  zE = 0;
function _a() {
  return Un & 6 ? rr() : jE !== -1 ? jE : (jE = rr());
}
function Mc(t) {
  return t.mode & 1
    ? Un & 2 && kr !== 0
      ? kr & -kr
      : Xtt.transition !== null
      ? (zE === 0 && (zE = Gle()), zE)
      : ((t = Qn),
        t !== 0 || ((t = window.event), (t = t === void 0 ? 16 : zle(t.type))),
        t)
    : 1;
}
function Ao(t, e, n, r) {
  if (50 < $y) throw (($y = 0), (TN = null), Error(ht(185)));
  u_(t, n, r),
    (!(Un & 2) || t !== Cr) &&
      (t === Cr && (!(Un & 2) && (vI |= n), vr === 4 && hc(t, kr)),
      Va(t, r),
      n === 1 && Un === 0 && !(e.mode & 1) && ((rm = rr() + 500), mI && gd()));
}
function Va(t, e) {
  var n = t.callbackNode;
  Xet(t, e);
  var r = Mw(t, t === Cr ? kr : 0);
  if (r === 0)
    n !== null && lK(n), (t.callbackNode = null), (t.callbackPriority = 0);
  else if (((e = r & -r), t.callbackPriority !== e)) {
    if ((n != null && lK(n), e === 1))
      t.tag === 0 ? Ytt(tB.bind(null, t)) : cce(tB.bind(null, t)),
        ztt(function () {
          !(Un & 6) && gd();
        }),
        (n = null);
    else {
      switch (Fle(r)) {
        case 1:
          n = W3;
          break;
        case 4:
          n = Mle;
          break;
        case 16:
          n = Lw;
          break;
        case 536870912:
          n = Dle;
          break;
        default:
          n = Lw;
      }
      n = lde(n, nde.bind(null, t));
    }
    (t.callbackPriority = e), (t.callbackNode = n);
  }
}
function nde(t, e) {
  if (((jE = -1), (zE = 0), Un & 6)) throw Error(ht(327));
  var n = t.callbackNode;
  if (Ef() && t.callbackNode !== n) return null;
  var r = Mw(t, t === Cr ? kr : 0);
  if (r === 0) return null;
  if (r & 30 || r & t.expiredLanes || e) e = e0(t, r);
  else {
    e = r;
    var a = Un;
    Un |= 2;
    var s = rde();
    (Cr !== t || kr !== e) && ((Bu = null), (rm = rr() + 500), Qd(t, e));
    do
      try {
        Snt();
        break;
      } catch (o) {
        sde(t, o);
      }
    while (1);
    iG(),
      (Qw.current = s),
      (Un = a),
      lr !== null ? (e = 0) : ((Cr = null), (kr = 0), (e = vr));
  }
  if (e !== 0) {
    if (
      (e === 2 && ((a = XH(t)), a !== 0 && ((r = a), (e = wN(t, a)))), e === 1)
    )
      throw ((n = ov), Qd(t, 0), hc(t, r), Va(t, rr()), n);
    if (e === 6) hc(t, r);
    else {
      if (
        ((a = t.current.alternate),
        !(r & 30) &&
          !fnt(a) &&
          ((e = e0(t, r)),
          e === 2 && ((s = XH(t)), s !== 0 && ((r = s), (e = wN(t, s)))),
          e === 1))
      )
        throw ((n = ov), Qd(t, 0), hc(t, r), Va(t, rr()), n);
      switch (((t.finishedWork = a), (t.finishedLanes = r), e)) {
        case 0:
        case 1:
          throw Error(ht(345));
        case 2:
          Hd(t, Ma, Bu);
          break;
        case 3:
          if (
            (hc(t, r), (r & 130023424) === r && ((e = bG + 500 - rr()), 10 < e))
          ) {
            if (Mw(t, 0) !== 0) break;
            if (((a = t.suspendedLanes), (a & r) !== r)) {
              _a(), (t.pingedLanes |= t.suspendedLanes & a);
              break;
            }
            t.timeoutHandle = rN(Hd.bind(null, t, Ma, Bu), e);
            break;
          }
          Hd(t, Ma, Bu);
          break;
        case 4:
          if ((hc(t, r), (r & 4194240) === r)) break;
          for (e = t.eventTimes, a = -1; 0 < r; ) {
            var i = 31 - Co(r);
            (s = 1 << i), (i = e[i]), i > a && (a = i), (r &= ~s);
          }
          if (
            ((r = a),
            (r = rr() - r),
            (r =
              (120 > r
                ? 120
                : 480 > r
                ? 480
                : 1080 > r
                ? 1080
                : 1920 > r
                ? 1920
                : 3e3 > r
                ? 3e3
                : 4320 > r
                ? 4320
                : 1960 * hnt(r / 1960)) - r),
            10 < r)
          ) {
            t.timeoutHandle = rN(Hd.bind(null, t, Ma, Bu), r);
            break;
          }
          Hd(t, Ma, Bu);
          break;
        case 5:
          Hd(t, Ma, Bu);
          break;
        default:
          throw Error(ht(329));
      }
    }
  }
  return Va(t, rr()), t.callbackNode === n ? nde.bind(null, t) : null;
}
function wN(t, e) {
  var n = zy;
  return (
    t.current.memoizedState.isDehydrated && (Qd(t, e).flags |= 256),
    (t = e0(t, e)),
    t !== 2 && ((e = Ma), (Ma = n), e !== null && PN(e)),
    t
  );
}
function PN(t) {
  Ma === null ? (Ma = t) : Ma.push.apply(Ma, t);
}
function fnt(t) {
  for (var e = t; ; ) {
    if (e.flags & 16384) {
      var n = e.updateQueue;
      if (n !== null && ((n = n.stores), n !== null))
        for (var r = 0; r < n.length; r++) {
          var a = n[r],
            s = a.getSnapshot;
          a = a.value;
          try {
            if (!Ro(s(), a)) return !1;
          } catch {
            return !1;
          }
        }
    }
    if (((n = e.child), e.subtreeFlags & 16384 && n !== null))
      (n.return = e), (e = n);
    else {
      if (e === t) break;
      for (; e.sibling === null; ) {
        if (e.return === null || e.return === t) return !0;
        e = e.return;
      }
      (e.sibling.return = e.return), (e = e.sibling);
    }
  }
  return !0;
}
function hc(t, e) {
  for (
    e &= ~_G,
      e &= ~vI,
      t.suspendedLanes |= e,
      t.pingedLanes &= ~e,
      t = t.expirationTimes;
    0 < e;

  ) {
    var n = 31 - Co(e),
      r = 1 << n;
    (t[n] = -1), (e &= ~r);
  }
}
function tB(t) {
  if (Un & 6) throw Error(ht(327));
  Ef();
  var e = Mw(t, 0);
  if (!(e & 1)) return Va(t, rr()), null;
  var n = e0(t, e);
  if (t.tag !== 0 && n === 2) {
    var r = XH(t);
    r !== 0 && ((e = r), (n = wN(t, r)));
  }
  if (n === 1) throw ((n = ov), Qd(t, 0), hc(t, e), Va(t, rr()), n);
  if (n === 6) throw Error(ht(345));
  return (
    (t.finishedWork = t.current.alternate),
    (t.finishedLanes = e),
    Hd(t, Ma, Bu),
    Va(t, rr()),
    null
  );
}
function EG(t, e) {
  var n = Un;
  Un |= 1;
  try {
    return t(e);
  } finally {
    (Un = n), Un === 0 && ((rm = rr() + 500), mI && gd());
  }
}
function vp(t) {
  bc !== null && bc.tag === 0 && !(Un & 6) && Ef();
  var e = Un;
  Un |= 1;
  var n = Ui.transition,
    r = Qn;
  try {
    if (((Ui.transition = null), (Qn = 1), t)) return t();
  } finally {
    (Qn = r), (Ui.transition = n), (Un = e), !(Un & 6) && gd();
  }
}
function TG() {
  (ni = zh.current), Ts(zh);
}
function Qd(t, e) {
  (t.finishedWork = null), (t.finishedLanes = 0);
  var n = t.timeoutHandle;
  if ((n !== -1 && ((t.timeoutHandle = -1), jtt(n)), lr !== null))
    for (n = lr.return; n !== null; ) {
      var r = n;
      switch ((sG(r), r.tag)) {
        case 1:
          (r = r.type.childContextTypes), r != null && Kw();
          break;
        case 3:
          nm(), Ts(Ka), Ts(oa), pG();
          break;
        case 5:
          dG(r);
          break;
        case 4:
          nm();
          break;
        case 13:
          Ts(Gs);
          break;
        case 19:
          Ts(Gs);
          break;
        case 10:
          oG(r.type._context);
          break;
        case 22:
        case 23:
          TG();
      }
      n = n.return;
    }
  if (
    ((Cr = t),
    (lr = t = Dc(t.current, null)),
    (kr = ni = e),
    (vr = 0),
    (ov = null),
    (_G = vI = gp = 0),
    (Ma = zy = null),
    Vd !== null)
  ) {
    for (e = 0; e < Vd.length; e++)
      if (((n = Vd[e]), (r = n.interleaved), r !== null)) {
        n.interleaved = null;
        var a = r.next,
          s = n.pending;
        if (s !== null) {
          var i = s.next;
          (s.next = a), (r.next = i);
        }
        n.pending = r;
      }
    Vd = null;
  }
  return t;
}
function sde(t, e) {
  do {
    var n = lr;
    try {
      if ((iG(), (KE.current = Xw), Yw)) {
        for (var r = Ks.memoizedState; r !== null; ) {
          var a = r.queue;
          a !== null && (a.pending = null), (r = r.next);
        }
        Yw = !1;
      }
      if (
        ((yp = 0),
        (wr = mr = Ks = null),
        (Vy = !1),
        (rv = 0),
        (vG.current = null),
        n === null || n.return === null)
      ) {
        (vr = 1), (ov = e), (lr = null);
        break;
      }
      e: {
        var s = t,
          i = n.return,
          o = n,
          u = e;
        if (
          ((e = kr),
          (o.flags |= 32768),
          u !== null && typeof u == "object" && typeof u.then == "function")
        ) {
          var l = u,
            c = o,
            d = c.tag;
          if (!(c.mode & 1) && (d === 0 || d === 11 || d === 15)) {
            var p = c.alternate;
            p
              ? ((c.updateQueue = p.updateQueue),
                (c.memoizedState = p.memoizedState),
                (c.lanes = p.lanes))
              : ((c.updateQueue = null), (c.memoizedState = null));
          }
          var m = BK(i);
          if (m !== null) {
            (m.flags &= -257),
              VK(m, i, o, s, e),
              m.mode & 1 && KK(s, l, e),
              (e = m),
              (u = l);
            var y = e.updateQueue;
            if (y === null) {
              var I = new Set();
              I.add(u), (e.updateQueue = I);
            } else y.add(u);
            break e;
          } else {
            if (!(e & 1)) {
              KK(s, l, e), wG();
              break e;
            }
            u = Error(ht(426));
          }
        } else if (Rs && o.mode & 1) {
          var O = BK(i);
          if (O !== null) {
            !(O.flags & 65536) && (O.flags |= 256),
              VK(O, i, o, s, e),
              rG(sm(u, o));
            break e;
          }
        }
        (s = u = sm(u, o)),
          vr !== 4 && (vr = 2),
          zy === null ? (zy = [s]) : zy.push(s),
          (s = i);
        do {
          switch (s.tag) {
            case 3:
              (s.flags |= 65536), (e &= -e), (s.lanes |= e);
              var g = Uce(s, u, e);
              xK(s, g);
              break e;
            case 1:
              o = u;
              var C = s.type,
                H = s.stateNode;
              if (
                !(s.flags & 128) &&
                (typeof C.getDerivedStateFromError == "function" ||
                  (H !== null &&
                    typeof H.componentDidCatch == "function" &&
                    (Lc === null || !Lc.has(H))))
              ) {
                (s.flags |= 65536), (e &= -e), (s.lanes |= e);
                var B = Kce(s, o, e);
                xK(s, B);
                break e;
              }
          }
          s = s.return;
        } while (s !== null);
      }
      ide(n);
    } catch (he) {
      (e = he), lr === n && n !== null && (lr = n = n.return);
      continue;
    }
    break;
  } while (1);
}
function rde() {
  var t = Qw.current;
  return (Qw.current = Xw), t === null ? Xw : t;
}
function wG() {
  (vr === 0 || vr === 3 || vr === 2) && (vr = 4),
    Cr === null || (!(gp & 268435455) && !(vI & 268435455)) || hc(Cr, kr);
}
function e0(t, e) {
  var n = Un;
  Un |= 2;
  var r = rde();
  (Cr !== t || kr !== e) && ((Bu = null), Qd(t, e));
  do
    try {
      mnt();
      break;
    } catch (a) {
      sde(t, a);
    }
  while (1);
  if ((iG(), (Un = n), (Qw.current = r), lr !== null)) throw Error(ht(261));
  return (Cr = null), (kr = 0), vr;
}
function mnt() {
  for (; lr !== null; ) ade(lr);
}
function Snt() {
  for (; lr !== null && !Ket(); ) ade(lr);
}
function ade(t) {
  var e = ude(t.alternate, t, ni);
  (t.memoizedProps = t.pendingProps),
    e === null ? ide(t) : (lr = e),
    (vG.current = null);
}
function ide(t) {
  var e = t;
  do {
    var n = e.alternate;
    if (((t = e.return), e.flags & 32768)) {
      if (((n = lnt(n, e)), n !== null)) {
        (n.flags &= 32767), (lr = n);
        return;
      }
      if (t !== null)
        (t.flags |= 32768), (t.subtreeFlags = 0), (t.deletions = null);
      else {
        (vr = 6), (lr = null);
        return;
      }
    } else if (((n = unt(n, e, ni)), n !== null)) {
      lr = n;
      return;
    }
    if (((e = e.sibling), e !== null)) {
      lr = e;
      return;
    }
    lr = e = t;
  } while (e !== null);
  vr === 0 && (vr = 5);
}
function Hd(t, e, n) {
  var r = Qn,
    a = Ui.transition;
  try {
    (Ui.transition = null), (Qn = 1), ynt(t, e, n, r);
  } finally {
    (Ui.transition = a), (Qn = r);
  }
  return null;
}
function ynt(t, e, n, r) {
  do Ef();
  while (bc !== null);
  if (Un & 6) throw Error(ht(327));
  n = t.finishedWork;
  var a = t.finishedLanes;
  if (n === null) return null;
  if (((t.finishedWork = null), (t.finishedLanes = 0), n === t.current))
    throw Error(ht(177));
  (t.callbackNode = null), (t.callbackPriority = 0);
  var s = n.lanes | n.childLanes;
  if (
    (Qet(t, s),
    t === Cr && ((lr = Cr = null), (kr = 0)),
    (!(n.subtreeFlags & 2064) && !(n.flags & 2064)) ||
      Rb ||
      ((Rb = !0),
      lde(Lw, function () {
        return Ef(), null;
      })),
    (s = (n.flags & 15990) !== 0),
    n.subtreeFlags & 15990 || s)
  ) {
    (s = Ui.transition), (Ui.transition = null);
    var i = Qn;
    Qn = 1;
    var o = Un;
    (Un |= 4),
      (vG.current = null),
      dnt(t, n),
      ede(n, t),
      Dtt(nN),
      (Dw = !!tN),
      (nN = tN = null),
      (t.current = n),
      pnt(n),
      Bet(),
      (Un = o),
      (Qn = i),
      (Ui.transition = s);
  } else t.current = n;
  if (
    (Rb && ((Rb = !1), (bc = t), (Zw = a)),
    (s = t.pendingLanes),
    s === 0 && (Lc = null),
    zet(n.stateNode),
    Va(t, rr()),
    e !== null)
  )
    for (r = t.onRecoverableError, n = 0; n < e.length; n++)
      (a = e[n]), r(a.value, { componentStack: a.stack, digest: a.digest });
  if (Jw) throw ((Jw = !1), (t = EN), (EN = null), t);
  return (
    Zw & 1 && t.tag !== 0 && Ef(),
    (s = t.pendingLanes),
    s & 1 ? (t === TN ? $y++ : (($y = 0), (TN = t))) : ($y = 0),
    gd(),
    null
  );
}
function Ef() {
  if (bc !== null) {
    var t = Fle(Zw),
      e = Ui.transition,
      n = Qn;
    try {
      if (((Ui.transition = null), (Qn = 16 > t ? 16 : t), bc === null))
        var r = !1;
      else {
        if (((t = bc), (bc = null), (Zw = 0), Un & 6)) throw Error(ht(331));
        var a = Un;
        for (Un |= 4, kt = t.current; kt !== null; ) {
          var s = kt,
            i = s.child;
          if (kt.flags & 16) {
            var o = s.deletions;
            if (o !== null) {
              for (var u = 0; u < o.length; u++) {
                var l = o[u];
                for (kt = l; kt !== null; ) {
                  var c = kt;
                  switch (c.tag) {
                    case 0:
                    case 11:
                    case 15:
                      jy(8, c, s);
                  }
                  var d = c.child;
                  if (d !== null) (d.return = c), (kt = d);
                  else
                    for (; kt !== null; ) {
                      c = kt;
                      var p = c.sibling,
                        m = c.return;
                      if ((Qce(c), c === l)) {
                        kt = null;
                        break;
                      }
                      if (p !== null) {
                        (p.return = m), (kt = p);
                        break;
                      }
                      kt = m;
                    }
                }
              }
              var y = s.alternate;
              if (y !== null) {
                var I = y.child;
                if (I !== null) {
                  y.child = null;
                  do {
                    var O = I.sibling;
                    (I.sibling = null), (I = O);
                  } while (I !== null);
                }
              }
              kt = s;
            }
          }
          if (s.subtreeFlags & 2064 && i !== null) (i.return = s), (kt = i);
          else
            e: for (; kt !== null; ) {
              if (((s = kt), s.flags & 2048))
                switch (s.tag) {
                  case 0:
                  case 11:
                  case 15:
                    jy(9, s, s.return);
                }
              var g = s.sibling;
              if (g !== null) {
                (g.return = s.return), (kt = g);
                break e;
              }
              kt = s.return;
            }
        }
        var C = t.current;
        for (kt = C; kt !== null; ) {
          i = kt;
          var H = i.child;
          if (i.subtreeFlags & 2064 && H !== null) (H.return = i), (kt = H);
          else
            e: for (i = C; kt !== null; ) {
              if (((o = kt), o.flags & 2048))
                try {
                  switch (o.tag) {
                    case 0:
                    case 11:
                    case 15:
                      gI(9, o);
                  }
                } catch (he) {
                  qs(o, o.return, he);
                }
              if (o === i) {
                kt = null;
                break e;
              }
              var B = o.sibling;
              if (B !== null) {
                (B.return = o.return), (kt = B);
                break e;
              }
              kt = o.return;
            }
        }
        if (
          ((Un = a), gd(), pu && typeof pu.onPostCommitFiberRoot == "function")
        )
          try {
            pu.onPostCommitFiberRoot(cI, t);
          } catch {}
        r = !0;
      }
      return r;
    } finally {
      (Qn = n), (Ui.transition = e);
    }
  }
  return !1;
}
function nB(t, e, n) {
  (e = sm(n, e)),
    (e = Uce(t, e, 1)),
    (t = xc(t, e, 1)),
    (e = _a()),
    t !== null && (u_(t, 1, e), Va(t, e));
}
function qs(t, e, n) {
  if (t.tag === 3) nB(t, t, n);
  else
    for (; e !== null; ) {
      if (e.tag === 3) {
        nB(e, t, n);
        break;
      } else if (e.tag === 1) {
        var r = e.stateNode;
        if (
          typeof e.type.getDerivedStateFromError == "function" ||
          (typeof r.componentDidCatch == "function" &&
            (Lc === null || !Lc.has(r)))
        ) {
          (t = sm(n, t)),
            (t = Kce(e, t, 1)),
            (e = xc(e, t, 1)),
            (t = _a()),
            e !== null && (u_(e, 1, t), Va(e, t));
          break;
        }
      }
      e = e.return;
    }
}
function gnt(t, e, n) {
  var r = t.pingCache;
  r !== null && r.delete(e),
    (e = _a()),
    (t.pingedLanes |= t.suspendedLanes & n),
    Cr === t &&
      (kr & n) === n &&
      (vr === 4 || (vr === 3 && (kr & 130023424) === kr && 500 > rr() - bG)
        ? Qd(t, 0)
        : (_G |= n)),
    Va(t, e);
}
function ode(t, e) {
  e === 0 &&
    (t.mode & 1
      ? ((e = Eb), (Eb <<= 1), !(Eb & 130023424) && (Eb = 4194304))
      : (e = 1));
  var n = _a();
  (t = bl(t, e)), t !== null && (u_(t, e, n), Va(t, n));
}
function vnt(t) {
  var e = t.memoizedState,
    n = 0;
  e !== null && (n = e.retryLane), ode(t, n);
}
function _nt(t, e) {
  var n = 0;
  switch (t.tag) {
    case 13:
      var r = t.stateNode,
        a = t.memoizedState;
      a !== null && (n = a.retryLane);
      break;
    case 19:
      r = t.stateNode;
      break;
    default:
      throw Error(ht(314));
  }
  r !== null && r.delete(e), ode(t, n);
}
var ude;
ude = function (t, e, n) {
  if (t !== null)
    if (t.memoizedProps !== e.pendingProps || Ka.current) Fa = !0;
    else {
      if (!(t.lanes & n) && !(e.flags & 128)) return (Fa = !1), ont(t, e, n);
      Fa = !!(t.flags & 131072);
    }
  else (Fa = !1), Rs && e.flags & 1048576 && dce(e, jw, e.index);
  switch (((e.lanes = 0), e.tag)) {
    case 2:
      var r = e.type;
      VE(t, e), (t = e.pendingProps);
      var a = Zf(e, oa.current);
      bf(e, n), (a = fG(null, e, r, t, a, n));
      var s = mG();
      return (
        (e.flags |= 1),
        typeof a == "object" &&
        a !== null &&
        typeof a.render == "function" &&
        a.$$typeof === void 0
          ? ((e.tag = 1),
            (e.memoizedState = null),
            (e.updateQueue = null),
            Ba(r) ? ((s = !0), Bw(e)) : (s = !1),
            (e.memoizedState =
              a.state !== null && a.state !== void 0 ? a.state : null),
            lG(e),
            (a.updater = SI),
            (e.stateNode = a),
            (a._reactInternals = e),
            dN(e, r, t, n),
            (e = fN(null, e, r, !0, s, n)))
          : ((e.tag = 0), Rs && s && nG(e), fa(null, e, a, n), (e = e.child)),
        e
      );
    case 16:
      r = e.elementType;
      e: {
        switch (
          (VE(t, e),
          (t = e.pendingProps),
          (a = r._init),
          (r = a(r._payload)),
          (e.type = r),
          (a = e.tag = Ent(r)),
          (t = co(r, t)),
          a)
        ) {
          case 0:
            e = hN(null, e, r, t, n);
            break e;
          case 1:
            e = $K(null, e, r, t, n);
            break e;
          case 11:
            e = jK(null, e, r, t, n);
            break e;
          case 14:
            e = zK(null, e, r, co(r.type, t), n);
            break e;
        }
        throw Error(ht(306, r, ""));
      }
      return e;
    case 0:
      return (
        (r = e.type),
        (a = e.pendingProps),
        (a = e.elementType === r ? a : co(r, a)),
        hN(t, e, r, a, n)
      );
    case 1:
      return (
        (r = e.type),
        (a = e.pendingProps),
        (a = e.elementType === r ? a : co(r, a)),
        $K(t, e, r, a, n)
      );
    case 3:
      e: {
        if ((zce(e), t === null)) throw Error(ht(387));
        (r = e.pendingProps),
          (s = e.memoizedState),
          (a = s.element),
          mce(t, e),
          Ww(e, r, null, n);
        var i = e.memoizedState;
        if (((r = i.element), s.isDehydrated))
          if (
            ((s = {
              element: r,
              isDehydrated: !1,
              cache: i.cache,
              pendingSuspenseBoundaries: i.pendingSuspenseBoundaries,
              transitions: i.transitions,
            }),
            (e.updateQueue.baseState = s),
            (e.memoizedState = s),
            e.flags & 256)
          ) {
            (a = sm(Error(ht(423)), e)), (e = WK(t, e, r, n, a));
            break e;
          } else if (r !== a) {
            (a = sm(Error(ht(424)), e)), (e = WK(t, e, r, n, a));
            break e;
          } else
            for (
              ci = kc(e.stateNode.containerInfo.firstChild),
                pi = e,
                Rs = !0,
                So = null,
                n = vce(e, null, r, n),
                e.child = n;
              n;

            )
              (n.flags = (n.flags & -3) | 4096), (n = n.sibling);
        else {
          if ((em(), r === a)) {
            e = El(t, e, n);
            break e;
          }
          fa(t, e, r, n);
        }
        e = e.child;
      }
      return e;
    case 5:
      return (
        _ce(e),
        t === null && uN(e),
        (r = e.type),
        (a = e.pendingProps),
        (s = t !== null ? t.memoizedProps : null),
        (i = a.children),
        sN(r, a) ? (i = null) : s !== null && sN(r, s) && (e.flags |= 32),
        jce(t, e),
        fa(t, e, i, n),
        e.child
      );
    case 6:
      return t === null && uN(e), null;
    case 13:
      return $ce(t, e, n);
    case 4:
      return (
        cG(e, e.stateNode.containerInfo),
        (r = e.pendingProps),
        t === null ? (e.child = tm(e, null, r, n)) : fa(t, e, r, n),
        e.child
      );
    case 11:
      return (
        (r = e.type),
        (a = e.pendingProps),
        (a = e.elementType === r ? a : co(r, a)),
        jK(t, e, r, a, n)
      );
    case 7:
      return fa(t, e, e.pendingProps, n), e.child;
    case 8:
      return fa(t, e, e.pendingProps.children, n), e.child;
    case 12:
      return fa(t, e, e.pendingProps.children, n), e.child;
    case 10:
      e: {
        if (
          ((r = e.type._context),
          (a = e.pendingProps),
          (s = e.memoizedProps),
          (i = a.value),
          Ss(zw, r._currentValue),
          (r._currentValue = i),
          s !== null)
        )
          if (Ro(s.value, i)) {
            if (s.children === a.children && !Ka.current) {
              e = El(t, e, n);
              break e;
            }
          } else
            for (s = e.child, s !== null && (s.return = e); s !== null; ) {
              var o = s.dependencies;
              if (o !== null) {
                i = s.child;
                for (var u = o.firstContext; u !== null; ) {
                  if (u.context === r) {
                    if (s.tag === 1) {
                      (u = ll(-1, n & -n)), (u.tag = 2);
                      var l = s.updateQueue;
                      if (l !== null) {
                        l = l.shared;
                        var c = l.pending;
                        c === null
                          ? (u.next = u)
                          : ((u.next = c.next), (c.next = u)),
                          (l.pending = u);
                      }
                    }
                    (s.lanes |= n),
                      (u = s.alternate),
                      u !== null && (u.lanes |= n),
                      lN(s.return, n, e),
                      (o.lanes |= n);
                    break;
                  }
                  u = u.next;
                }
              } else if (s.tag === 10) i = s.type === e.type ? null : s.child;
              else if (s.tag === 18) {
                if (((i = s.return), i === null)) throw Error(ht(341));
                (i.lanes |= n),
                  (o = i.alternate),
                  o !== null && (o.lanes |= n),
                  lN(i, n, e),
                  (i = s.sibling);
              } else i = s.child;
              if (i !== null) i.return = s;
              else
                for (i = s; i !== null; ) {
                  if (i === e) {
                    i = null;
                    break;
                  }
                  if (((s = i.sibling), s !== null)) {
                    (s.return = i.return), (i = s);
                    break;
                  }
                  i = i.return;
                }
              s = i;
            }
        fa(t, e, a.children, n), (e = e.child);
      }
      return e;
    case 9:
      return (
        (a = e.type),
        (r = e.pendingProps.children),
        bf(e, n),
        (a = $i(a)),
        (r = r(a)),
        (e.flags |= 1),
        fa(t, e, r, n),
        e.child
      );
    case 14:
      return (
        (r = e.type),
        (a = co(r, e.pendingProps)),
        (a = co(r.type, a)),
        zK(t, e, r, a, n)
      );
    case 15:
      return Bce(t, e, e.type, e.pendingProps, n);
    case 17:
      return (
        (r = e.type),
        (a = e.pendingProps),
        (a = e.elementType === r ? a : co(r, a)),
        VE(t, e),
        (e.tag = 1),
        Ba(r) ? ((t = !0), Bw(e)) : (t = !1),
        bf(e, n),
        yce(e, r, a),
        dN(e, r, a, n),
        fN(null, e, r, !0, t, n)
      );
    case 19:
      return Wce(t, e, n);
    case 22:
      return Vce(t, e, n);
  }
  throw Error(ht(156, e.tag));
};
function lde(t, e) {
  return Lle(t, e);
}
function bnt(t, e, n, r) {
  (this.tag = t),
    (this.key = n),
    (this.sibling =
      this.child =
      this.return =
      this.stateNode =
      this.type =
      this.elementType =
        null),
    (this.index = 0),
    (this.ref = null),
    (this.pendingProps = e),
    (this.dependencies =
      this.memoizedState =
      this.updateQueue =
      this.memoizedProps =
        null),
    (this.mode = r),
    (this.subtreeFlags = this.flags = 0),
    (this.deletions = null),
    (this.childLanes = this.lanes = 0),
    (this.alternate = null);
}
function Li(t, e, n, r) {
  return new bnt(t, e, n, r);
}
function PG(t) {
  return (t = t.prototype), !(!t || !t.isReactComponent);
}
function Ent(t) {
  if (typeof t == "function") return PG(t) ? 1 : 0;
  if (t != null) {
    if (((t = t.$$typeof), t === j3)) return 11;
    if (t === z3) return 14;
  }
  return 2;
}
function Dc(t, e) {
  var n = t.alternate;
  return (
    n === null
      ? ((n = Li(t.tag, e, t.key, t.mode)),
        (n.elementType = t.elementType),
        (n.type = t.type),
        (n.stateNode = t.stateNode),
        (n.alternate = t),
        (t.alternate = n))
      : ((n.pendingProps = e),
        (n.type = t.type),
        (n.flags = 0),
        (n.subtreeFlags = 0),
        (n.deletions = null)),
    (n.flags = t.flags & 14680064),
    (n.childLanes = t.childLanes),
    (n.lanes = t.lanes),
    (n.child = t.child),
    (n.memoizedProps = t.memoizedProps),
    (n.memoizedState = t.memoizedState),
    (n.updateQueue = t.updateQueue),
    (e = t.dependencies),
    (n.dependencies =
      e === null ? null : { lanes: e.lanes, firstContext: e.firstContext }),
    (n.sibling = t.sibling),
    (n.index = t.index),
    (n.ref = t.ref),
    n
  );
}
function $E(t, e, n, r, a, s) {
  var i = 2;
  if (((r = t), typeof t == "function")) PG(t) && (i = 1);
  else if (typeof t == "string") i = 5;
  else
    e: switch (t) {
      case Lh:
        return Jd(n.children, a, s, e);
      case V3:
        (i = 8), (a |= 8);
        break;
      case LH:
        return (
          (t = Li(12, n, e, a | 2)), (t.elementType = LH), (t.lanes = s), t
        );
      case MH:
        return (t = Li(13, n, e, a)), (t.elementType = MH), (t.lanes = s), t;
      case DH:
        return (t = Li(19, n, e, a)), (t.elementType = DH), (t.lanes = s), t;
      case gle:
        return _I(n, a, s, e);
      default:
        if (typeof t == "object" && t !== null)
          switch (t.$$typeof) {
            case Sle:
              i = 10;
              break e;
            case yle:
              i = 9;
              break e;
            case j3:
              i = 11;
              break e;
            case z3:
              i = 14;
              break e;
            case rc:
              (i = 16), (r = null);
              break e;
          }
        throw Error(ht(130, t == null ? t : typeof t, ""));
    }
  return (
    (e = Li(i, n, e, a)), (e.elementType = t), (e.type = r), (e.lanes = s), e
  );
}
function Jd(t, e, n, r) {
  return (t = Li(7, t, r, e)), (t.lanes = n), t;
}
function _I(t, e, n, r) {
  return (
    (t = Li(22, t, r, e)),
    (t.elementType = gle),
    (t.lanes = n),
    (t.stateNode = { isHidden: !1 }),
    t
  );
}
function a1(t, e, n) {
  return (t = Li(6, t, null, e)), (t.lanes = n), t;
}
function i1(t, e, n) {
  return (
    (e = Li(4, t.children !== null ? t.children : [], t.key, e)),
    (e.lanes = n),
    (e.stateNode = {
      containerInfo: t.containerInfo,
      pendingChildren: null,
      implementation: t.implementation,
    }),
    e
  );
}
function Tnt(t, e, n, r, a) {
  (this.tag = e),
    (this.containerInfo = t),
    (this.finishedWork =
      this.pingCache =
      this.current =
      this.pendingChildren =
        null),
    (this.timeoutHandle = -1),
    (this.callbackNode = this.pendingContext = this.context = null),
    (this.callbackPriority = 0),
    (this.eventTimes = UA(0)),
    (this.expirationTimes = UA(-1)),
    (this.entangledLanes =
      this.finishedLanes =
      this.mutableReadLanes =
      this.expiredLanes =
      this.pingedLanes =
      this.suspendedLanes =
      this.pendingLanes =
        0),
    (this.entanglements = UA(0)),
    (this.identifierPrefix = r),
    (this.onRecoverableError = a),
    (this.mutableSourceEagerHydrationData = null);
}
function IG(t, e, n, r, a, s, i, o, u) {
  return (
    (t = new Tnt(t, e, n, o, u)),
    e === 1 ? ((e = 1), s === !0 && (e |= 8)) : (e = 0),
    (s = Li(3, null, null, e)),
    (t.current = s),
    (s.stateNode = t),
    (s.memoizedState = {
      element: r,
      isDehydrated: n,
      cache: null,
      transitions: null,
      pendingSuspenseBoundaries: null,
    }),
    lG(s),
    t
  );
}
function wnt(t, e, n) {
  var r = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
  return {
    $$typeof: xh,
    key: r == null ? null : "" + r,
    children: t,
    containerInfo: e,
    implementation: n,
  };
}
function cde(t) {
  if (!t) return Zc;
  t = t._reactInternals;
  e: {
    if (Kp(t) !== t || t.tag !== 1) throw Error(ht(170));
    var e = t;
    do {
      switch (e.tag) {
        case 3:
          e = e.stateNode.context;
          break e;
        case 1:
          if (Ba(e.type)) {
            e = e.stateNode.__reactInternalMemoizedMergedChildContext;
            break e;
          }
      }
      e = e.return;
    } while (e !== null);
    throw Error(ht(171));
  }
  if (t.tag === 1) {
    var n = t.type;
    if (Ba(n)) return lce(t, n, e);
  }
  return e;
}
function dde(t, e, n, r, a, s, i, o, u) {
  return (
    (t = IG(n, r, !0, t, a, s, i, o, u)),
    (t.context = cde(null)),
    (n = t.current),
    (r = _a()),
    (a = Mc(n)),
    (s = ll(r, a)),
    (s.callback = e ?? null),
    xc(n, s, a),
    (t.current.lanes = a),
    u_(t, a, r),
    Va(t, r),
    t
  );
}
function bI(t, e, n, r) {
  var a = e.current,
    s = _a(),
    i = Mc(a);
  return (
    (n = cde(n)),
    e.context === null ? (e.context = n) : (e.pendingContext = n),
    (e = ll(s, i)),
    (e.payload = { element: t }),
    (r = r === void 0 ? null : r),
    r !== null && (e.callback = r),
    (t = xc(a, e, i)),
    t !== null && (Ao(t, a, i, s), UE(t, a, i)),
    i
  );
}
function t0(t) {
  if (((t = t.current), !t.child)) return null;
  switch (t.child.tag) {
    case 5:
      return t.child.stateNode;
    default:
      return t.child.stateNode;
  }
}
function sB(t, e) {
  if (((t = t.memoizedState), t !== null && t.dehydrated !== null)) {
    var n = t.retryLane;
    t.retryLane = n !== 0 && n < e ? n : e;
  }
}
function CG(t, e) {
  sB(t, e), (t = t.alternate) && sB(t, e);
}
function Pnt() {
  return null;
}
var pde =
  typeof reportError == "function"
    ? reportError
    : function (t) {
        console.error(t);
      };
function AG(t) {
  this._internalRoot = t;
}
EI.prototype.render = AG.prototype.render = function (t) {
  var e = this._internalRoot;
  if (e === null) throw Error(ht(409));
  bI(t, e, null, null);
};
EI.prototype.unmount = AG.prototype.unmount = function () {
  var t = this._internalRoot;
  if (t !== null) {
    this._internalRoot = null;
    var e = t.containerInfo;
    vp(function () {
      bI(null, t, null, null);
    }),
      (e[_l] = null);
  }
};
function EI(t) {
  this._internalRoot = t;
}
EI.prototype.unstable_scheduleHydration = function (t) {
  if (t) {
    var e = Ble();
    t = { blockedOn: null, target: t, priority: e };
    for (var n = 0; n < pc.length && e !== 0 && e < pc[n].priority; n++);
    pc.splice(n, 0, t), n === 0 && jle(t);
  }
};
function OG(t) {
  return !(!t || (t.nodeType !== 1 && t.nodeType !== 9 && t.nodeType !== 11));
}
function TI(t) {
  return !(
    !t ||
    (t.nodeType !== 1 &&
      t.nodeType !== 9 &&
      t.nodeType !== 11 &&
      (t.nodeType !== 8 || t.nodeValue !== " react-mount-point-unstable "))
  );
}
function rB() {}
function Int(t, e, n, r, a) {
  if (a) {
    if (typeof r == "function") {
      var s = r;
      r = function () {
        var l = t0(i);
        s.call(l);
      };
    }
    var i = dde(e, r, t, 0, null, !1, !1, "", rB);
    return (
      (t._reactRootContainer = i),
      (t[_l] = i.current),
      Zg(t.nodeType === 8 ? t.parentNode : t),
      vp(),
      i
    );
  }
  for (; (a = t.lastChild); ) t.removeChild(a);
  if (typeof r == "function") {
    var o = r;
    r = function () {
      var l = t0(u);
      o.call(l);
    };
  }
  var u = IG(t, 0, !1, null, null, !1, !1, "", rB);
  return (
    (t._reactRootContainer = u),
    (t[_l] = u.current),
    Zg(t.nodeType === 8 ? t.parentNode : t),
    vp(function () {
      bI(e, u, n, r);
    }),
    u
  );
}
function wI(t, e, n, r, a) {
  var s = n._reactRootContainer;
  if (s) {
    var i = s;
    if (typeof a == "function") {
      var o = a;
      a = function () {
        var u = t0(i);
        o.call(u);
      };
    }
    bI(e, i, t, a);
  } else i = Int(n, e, t, a, r);
  return t0(i);
}
Ule = function (t) {
  switch (t.tag) {
    case 3:
      var e = t.stateNode;
      if (e.current.memoizedState.isDehydrated) {
        var n = sy(e.pendingLanes);
        n !== 0 &&
          (q3(e, n | 1), Va(e, rr()), !(Un & 6) && ((rm = rr() + 500), gd()));
      }
      break;
    case 13:
      vp(function () {
        var r = bl(t, 1);
        if (r !== null) {
          var a = _a();
          Ao(r, t, 1, a);
        }
      }),
        CG(t, 1);
  }
};
Y3 = function (t) {
  if (t.tag === 13) {
    var e = bl(t, 134217728);
    if (e !== null) {
      var n = _a();
      Ao(e, t, 134217728, n);
    }
    CG(t, 134217728);
  }
};
Kle = function (t) {
  if (t.tag === 13) {
    var e = Mc(t),
      n = bl(t, e);
    if (n !== null) {
      var r = _a();
      Ao(n, t, e, r);
    }
    CG(t, e);
  }
};
Ble = function () {
  return Qn;
};
Vle = function (t, e) {
  var n = Qn;
  try {
    return (Qn = t), e();
  } finally {
    Qn = n;
  }
};
WH = function (t, e, n) {
  switch (e) {
    case "input":
      if ((UH(t, n), (e = n.name), n.type === "radio" && e != null)) {
        for (n = t; n.parentNode; ) n = n.parentNode;
        for (
          n = n.querySelectorAll(
            "input[name=" + JSON.stringify("" + e) + '][type="radio"]'
          ),
            e = 0;
          e < n.length;
          e++
        ) {
          var r = n[e];
          if (r !== t && r.form === t.form) {
            var a = fI(r);
            if (!a) throw Error(ht(90));
            _le(r), UH(r, a);
          }
        }
      }
      break;
    case "textarea":
      Ele(t, n);
      break;
    case "select":
      (e = n.value), e != null && yf(t, !!n.multiple, e, !1);
  }
};
Ole = EG;
Hle = vp;
var Cnt = { usingClientEntryPoint: !1, Events: [c_, Fh, fI, Cle, Ale, EG] },
  DS = {
    findFiberByHostInstance: Bd,
    bundleType: 0,
    version: "18.2.0",
    rendererPackageName: "react-dom",
  },
  Ant = {
    bundleType: DS.bundleType,
    version: DS.version,
    rendererPackageName: DS.rendererPackageName,
    rendererConfig: DS.rendererConfig,
    overrideHookState: null,
    overrideHookStateDeletePath: null,
    overrideHookStateRenamePath: null,
    overrideProps: null,
    overridePropsDeletePath: null,
    overridePropsRenamePath: null,
    setErrorHandler: null,
    setSuspenseHandler: null,
    scheduleUpdate: null,
    currentDispatcherRef: Ml.ReactCurrentDispatcher,
    findHostInstanceByFiber: function (t) {
      return (t = kle(t)), t === null ? null : t.stateNode;
    },
    findFiberByHostInstance: DS.findFiberByHostInstance || Pnt,
    findHostInstancesForRefresh: null,
    scheduleRefresh: null,
    scheduleRoot: null,
    setRefreshHandler: null,
    getCurrentFiber: null,
    reconcilerVersion: "18.2.0-next-9e3b772b8-20220608",
  };
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u") {
  var kb = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (!kb.isDisabled && kb.supportsFiber)
    try {
      (cI = kb.inject(Ant)), (pu = kb);
    } catch {}
}
eo.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Cnt;
eo.createPortal = function (t, e) {
  var n = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
  if (!OG(e)) throw Error(ht(200));
  return wnt(t, e, null, n);
};
eo.createRoot = function (t, e) {
  if (!OG(t)) throw Error(ht(299));
  var n = !1,
    r = "",
    a = pde;
  return (
    e != null &&
      (e.unstable_strictMode === !0 && (n = !0),
      e.identifierPrefix !== void 0 && (r = e.identifierPrefix),
      e.onRecoverableError !== void 0 && (a = e.onRecoverableError)),
    (e = IG(t, 1, !1, null, null, n, !1, r, a)),
    (t[_l] = e.current),
    Zg(t.nodeType === 8 ? t.parentNode : t),
    new AG(e)
  );
};
eo.findDOMNode = function (t) {
  if (t == null) return null;
  if (t.nodeType === 1) return t;
  var e = t._reactInternals;
  if (e === void 0)
    throw typeof t.render == "function"
      ? Error(ht(188))
      : ((t = Object.keys(t).join(",")), Error(ht(268, t)));
  return (t = kle(e)), (t = t === null ? null : t.stateNode), t;
};
eo.flushSync = function (t) {
  return vp(t);
};
eo.hydrate = function (t, e, n) {
  if (!TI(e)) throw Error(ht(200));
  return wI(null, t, e, !0, n);
};
eo.hydrateRoot = function (t, e, n) {
  if (!OG(t)) throw Error(ht(405));
  var r = (n != null && n.hydratedSources) || null,
    a = !1,
    s = "",
    i = pde;
  if (
    (n != null &&
      (n.unstable_strictMode === !0 && (a = !0),
      n.identifierPrefix !== void 0 && (s = n.identifierPrefix),
      n.onRecoverableError !== void 0 && (i = n.onRecoverableError)),
    (e = dde(e, null, t, 1, n ?? null, a, !1, s, i)),
    (t[_l] = e.current),
    Zg(t),
    r)
  )
    for (t = 0; t < r.length; t++)
      (n = r[t]),
        (a = n._getVersion),
        (a = a(n._source)),
        e.mutableSourceEagerHydrationData == null
          ? (e.mutableSourceEagerHydrationData = [n, a])
          : e.mutableSourceEagerHydrationData.push(n, a);
  return new EI(e);
};
eo.render = function (t, e, n) {
  if (!TI(e)) throw Error(ht(200));
  return wI(null, t, e, !1, n);
};
eo.unmountComponentAtNode = function (t) {
  if (!TI(t)) throw Error(ht(40));
  return t._reactRootContainer
    ? (vp(function () {
        wI(null, null, t, !1, function () {
          (t._reactRootContainer = null), (t[_l] = null);
        });
      }),
      !0)
    : !1;
};
eo.unstable_batchedUpdates = EG;
eo.unstable_renderSubtreeIntoContainer = function (t, e, n, r) {
  if (!TI(n)) throw Error(ht(200));
  if (t == null || t._reactInternals === void 0) throw Error(ht(38));
  return wI(t, e, n, !1, r);
};
eo.version = "18.2.0-next-9e3b772b8-20220608";
function hde() {
  if (
    !(
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u" ||
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function"
    )
  )
    try {
      __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(hde);
    } catch (t) {
      console.error(t);
    }
}
hde();
function Ont(t) {
  const e = Object.prototype.toString.call(t);
  return e === "[object Window]" || e === "[object global]";
}
function Hnt(t) {
  return "nodeType" in t;
}
function Nnt(t) {
  var e, n;
  return t
    ? Ont(t)
      ? t
      : Hnt(t) &&
        (e = (n = t.ownerDocument) == null ? void 0 : n.defaultView) != null
      ? e
      : window
    : window;
}
var aB;
(function (t) {
  (t.DragStart = "dragStart"),
    (t.DragMove = "dragMove"),
    (t.DragEnd = "dragEnd"),
    (t.DragCancel = "dragCancel"),
    (t.DragOver = "dragOver"),
    (t.RegisterDroppable = "registerDroppable"),
    (t.SetDroppableDisabled = "setDroppableDisabled"),
    (t.UnregisterDroppable = "unregisterDroppable");
})(aB || (aB = {}));
const Rnt = Object.freeze({ x: 0, y: 0 });
function knt(t) {
  if (t.startsWith("matrix3d(")) {
    const e = t.slice(9, -1).split(/, /);
    return { x: +e[12], y: +e[13], scaleX: +e[0], scaleY: +e[5] };
  } else if (t.startsWith("matrix(")) {
    const e = t.slice(7, -1).split(/, /);
    return { x: +e[4], y: +e[5], scaleX: +e[0], scaleY: +e[3] };
  }
  return null;
}
function xnt(t, e, n) {
  const r = knt(e);
  if (!r) return t;
  const { scaleX: a, scaleY: s, x: i, y: o } = r,
    u = t.left - i - (1 - a) * parseFloat(n),
    l = t.top - o - (1 - s) * parseFloat(n.slice(n.indexOf(" ") + 1)),
    c = a ? t.width / a : t.width,
    d = s ? t.height / s : t.height;
  return { width: c, height: d, top: l, right: u + c, bottom: l + d, left: u };
}
const Lnt = { ignoreTransform: !1 };
function fde(t, e) {
  e === void 0 && (e = Lnt);
  let n = t.getBoundingClientRect();
  if (e.ignoreTransform) {
    const { transform: l, transformOrigin: c } = Nnt(t).getComputedStyle(t);
    l && (n = xnt(n, l, c));
  }
  const { top: r, left: a, width: s, height: i, bottom: o, right: u } = n;
  return { top: r, left: a, width: s, height: i, bottom: o, right: u };
}
function iB(t) {
  return fde(t, { ignoreTransform: !0 });
}
var $h;
(function (t) {
  (t[(t.Forward = 1)] = "Forward"), (t[(t.Backward = -1)] = "Backward");
})($h || ($h = {}));
var oB;
(function (t) {
  (t.Click = "click"),
    (t.DragStart = "dragstart"),
    (t.Keydown = "keydown"),
    (t.ContextMenu = "contextmenu"),
    (t.Resize = "resize"),
    (t.SelectionChange = "selectionchange"),
    (t.VisibilityChange = "visibilitychange");
})(oB || (oB = {}));
var vo;
(function (t) {
  (t.Space = "Space"),
    (t.Down = "ArrowDown"),
    (t.Right = "ArrowRight"),
    (t.Left = "ArrowLeft"),
    (t.Up = "ArrowUp"),
    (t.Esc = "Escape"),
    (t.Enter = "Enter");
})(vo || (vo = {}));
vo.Space, vo.Enter, vo.Esc, vo.Space, vo.Enter;
var uB;
(function (t) {
  t[(t.RightClick = 2)] = "RightClick";
})(uB || (uB = {}));
var lB;
(function (t) {
  (t[(t.Pointer = 0)] = "Pointer"),
    (t[(t.DraggableRect = 1)] = "DraggableRect");
})(lB || (lB = {}));
var cB;
(function (t) {
  (t[(t.TreeOrder = 0)] = "TreeOrder"),
    (t[(t.ReversedTreeOrder = 1)] = "ReversedTreeOrder");
})(cB || (cB = {}));
$h.Backward + "", $h.Forward + "", $h.Backward + "", $h.Forward + "";
var IN;
(function (t) {
  (t[(t.Always = 0)] = "Always"),
    (t[(t.BeforeDragging = 1)] = "BeforeDragging"),
    (t[(t.WhileDragging = 2)] = "WhileDragging");
})(IN || (IN = {}));
var CN;
(function (t) {
  t.Optimized = "optimized";
})(CN || (CN = {}));
IN.WhileDragging, CN.Optimized;
({ ...Rnt });
var dB;
(function (t) {
  (t[(t.Uninitialized = 0)] = "Uninitialized"),
    (t[(t.Initializing = 1)] = "Initializing"),
    (t[(t.Initialized = 2)] = "Initialized");
})(dB || (dB = {}));
function Mnt(t, e, n) {
  const r = t.slice();
  return r.splice(n < 0 ? r.length + n : n, 0, r.splice(e, 1)[0]), r;
}
vo.Down, vo.Right, vo.Up, vo.Left;
var Dnt = !0;
function $s(t, e) {
  if (!Dnt) {
    if (t) return;
    var n = "Warning: " + e;
    typeof console < "u" && console.warn(n);
    try {
      throw Error(n);
    } catch {}
  }
}
const Gnt = k("SESSION_SHARING_ACTION_REQUIRED"),
  mde = (t, e, n) => {
    t.splice(e, 0, n);
  };
var Sde;
const Fnt = class WE {
  constructor(e) {
    (this[Sde] = !0), (this.root = e);
  }
  getRoot() {
    return this.root;
  }
  getFirstLeafId() {
    return this.getFirstLeaf(this.root).id;
  }
  getFirstLeaf(e) {
    var n;
    return (n = e == null ? void 0 : e.children) != null && n.length
      ? this.getFirstLeaf(e == null ? void 0 : e.children[0])
      : e;
  }
  split(e, n, r) {
    return sr(this, (s) => {
      const [i, o] = s.findBranch((d) => d.id === e) ?? [];
      if (!i || i.children.length > 1) return s;
      const u = { id: n, children: [], layout: "single", size: 1 / 2 };
      if (!o)
        return (
          (i.size = 0.5),
          (s.root = {
            id: xd("split-"),
            layout: r.layout,
            size: 1,
            children: r.position === "start" ? [u, i] : [i, u],
          }),
          s
        );
      if (o.layout !== r.layout) {
        const d = { id: i.id, layout: "single", children: [], size: 0.5 };
        return (
          (i.id = xd("split-")),
          (i.layout = r.layout),
          (i.children = r.position === "start" ? [u, d] : [d, u]),
          s
        );
      }
      const l = o.children.findIndex((d) => d.id === i.id);
      (u.size = i.size / 2), (i.size /= 2);
      const c = r.position === "start" ? l : l + 1;
      return mde(o.children, c, u), s;
    });
  }
  remove(e) {
    return sr(this, (r) => {
      const [a, s, i] = r.findBranch((c) => c.id === e) ?? [];
      if (!s || a.children.length >= 1) return r;
      if (s.children.length > 2)
        return Xu(s.children, (c) => c.id === a.id), Unt(s, a.size), r;
      const [o, u] = s.children,
        l = o.id === a.id ? u : o;
      if ((i == null ? void 0 : i.layout) === l.layout) {
        const c = i.children.findIndex((d) => d.id === s.id);
        return Knt(l, s.size), i.children.splice(c, 1, ...l.children), r;
      }
      return (s.id = l.id), (s.layout = l.layout), (s.children = l.children), r;
    });
  }
  resize(e, n) {
    return sr(this, (a) => {
      const [s] = a.findBranch((i) => i.id === e) ?? [];
      for (const [i, o] of s.children.entries()) o.size = n[i];
    });
  }
  has(e) {
    const [n] = this.findBranch((r) => r.id === e) ?? [];
    return n !== void 0;
  }
  single() {
    return this.root.children.length === 0 ? this.root : void 0;
  }
  *leafs() {
    yield* yde(this.root);
  }
  numberOfLeafs() {
    return [...this.leafs()].length;
  }
  toJSON() {
    return this.root;
  }
  mapDepthFirst(e) {
    return gde(this.root, e);
  }
  findAdjacentLeaf(e, n) {
    const r = Array.from(this.getBoundingNodeRects().entries()),
      a = r.find(([l]) => e(l));
    if (!a) return;
    const [s, i] = a,
      o = Bnt[n],
      u = FP(r, ([l, c]) => (l === s || l.children.length > 0 ? -1 : o(i, c)));
    return u == null ? void 0 : u[0];
  }
  getBoundingNodeRects() {
    const e = new Map();
    return (
      e.set(this.root, { left: 0, top: 0, right: 1, bottom: 1 }),
      AN(this.root, e),
      e
    );
  }
  findBranch(e, n = this.root, r = []) {
    if (e(n)) return [n, ...r];
    if (n.children.length !== 0)
      for (const a of n.children) {
        const s = this.findBranch(e, a, [n, ...r]);
        if (s) return s;
      }
  }
  static buildBalancedTree(e) {
    let n = e.map((a) => ({
        id: a,
        layout: "single",
        size: 0.5,
        children: [],
      })),
      r = "horizontal";
    if (n.length > 1)
      for (; n.length > 2; ) {
        const a = n.length,
          s = [];
        for (let i = 0; i < a; i += 2) {
          const o = a - i;
          if (o === 3) {
            s.push({
              id: xd("split-"),
              layout: r,
              size: i === 0 ? 1 : 1 / 2,
              children: [
                { ...n[i], size: 1 / 3 },
                { ...n[i + 1], size: 1 / 3 },
                { ...n[i + 2], size: 1 / 3 },
              ],
            });
            break;
          } else
            o === 1
              ? s.push({ ...n[i], size: 1 / 2 })
              : s.push({
                  id: xd("split-"),
                  layout: r,
                  size: 1 / 2,
                  children: [
                    { ...n[i], size: 1 / 2 },
                    { ...n[i + 1], size: 1 / 2 },
                  ],
                });
        }
        (r = r === "horizontal" ? "vertical" : "horizontal"), (n = s);
      }
    return e.length === 1
      ? new WE({ id: e[0], layout: "single", size: 1, children: [] })
      : n.length === 1
      ? new WE(n[0])
      : new WE({ id: xd("split-"), layout: r, size: 1, children: n });
  }
};
Sde = M1;
let xb = Fnt;
function* yde(t) {
  if (t.children.length === 0) yield t;
  else for (const e of t.children) yield* yde(e);
}
function Unt(t, e) {
  rn(t.layout === "horizontal" || t.layout === "vertical");
  for (const n of t.children) n.size += e / t.children.length;
}
function Knt(t, e) {
  rn(t.layout === "horizontal" || t.layout === "vertical");
  for (const n of t.children) n.size *= e;
}
function gde(t, { onLeaf: e, onSplit: n }) {
  return t.layout === "single"
    ? e(t)
    : n(t, (r) => gde(r, { onLeaf: e, onSplit: n }));
}
const AN = (t, e) => {
    const n = e.get(t),
      { layout: r, children: a } = t;
    if (a.length === 0) return;
    if ((rn(n, `Missing rect for node: ${t.id}`), r === "vertical")) {
      let i = 0;
      for (const o of a) {
        const u = (n.bottom - n.top) * o.size;
        e.set(o, { left: n.left, right: n.right, top: i, bottom: u + i }),
          (i += u),
          AN(o, e);
      }
      return;
    }
    let s = 0;
    for (const i of a) {
      const o = (n.right - n.left) * i.size;
      e.set(i, { top: n.top, bottom: n.bottom, left: s, right: s + o }),
        (s += o),
        AN(i, e);
    }
  },
  Bnt = {
    upper: (t, e) =>
      t.top !== e.bottom
        ? -1
        : Lb({ min: t.left, max: t.right }, { min: e.left, max: e.right }),
    lower: (t, e) =>
      t.bottom !== e.top
        ? -1
        : Lb({ min: t.left, max: t.right }, { min: e.left, max: e.right }),
    left: (t, e) =>
      t.left !== e.right
        ? -1
        : Lb({ min: t.top, max: t.bottom }, { min: e.top, max: e.bottom }),
    right: (t, e) =>
      t.right !== e.left
        ? -1
        : Lb({ min: t.top, max: t.bottom }, { min: e.top, max: e.bottom }),
  },
  Lb = (t, e) =>
    e.min <= t.max && t.min <= e.max
      ? Math.min(t.max, e.max) - Math.max(t.min, e.min)
      : 0;
function pB(t, e) {
  if (t.length === 1) return;
  const n = t.indexOf(e);
  if (n !== -1) return n === t.length - 1 ? t[n - 1] : t[n + 1];
}
function hB(t, e, n) {
  B6(t, e) && Kg(t, e, n);
}
const Vnt = {
    all: {},
    tabs: [],
    history: {},
    splitViewBroadcastTabs: [],
    shellIntegrationActivatedConnections: [],
    search: { searchQuery: "", targetTerminalId: null },
  },
  jnt = ta(Vnt, (t) => {
    t.addCase(V5e, (e, { payload: n }) => {
      e.splitViewBroadcastTabs.includes(n)
        ? Xu(e.splitViewBroadcastTabs, (r) => r === n)
        : e.splitViewBroadcastTabs.push(n);
    }),
      t.addCase(eJ, (e, { payload: n }) => {
        e.shellIntegrationActivatedConnections.push(n);
      }),
      t.addCase(L5e, (e, { payload: { windowId: n, query: r } }) => {
        e.search = znt(e, n, r);
      }),
      t.addCase(M5e, (e, { payload: { terminal: n } }) => {
        e.all[n.id] = n;
      }),
      t.addCase(D5e, (e, { payload: { title: n, id: r, terminalId: a } }) => {
        const s = e.all[a];
        if (!s) {
          $s(!1, "Terminal was not found");
          return;
        }
        if (ql(e, a)) {
          $s(!1, "Terminal already has a parent tab");
          return;
        }
        (e.all[a].isActive = !0),
          e.tabs.push({
            id: r,
            title: n,
            isEditingTitle: !1,
            hasUnreadOutput: !1,
            hasSessionSharingInputRequest: !1,
            windowId: s.windowId,
            showSplitViewHint: !1,
            layout: new xb({ id: a, children: [], layout: "single", size: 1 }),
          });
      }),
      t.addCase(F5e, (e, { payload: { title: n, terminal: r, id: a } }) => {
        (e.all[r.id] = r),
          e.tabs.push({
            id: a,
            title: n,
            isEditingTitle: !1,
            hasUnreadOutput: !1,
            hasSessionSharingInputRequest: !1,
            windowId: r.windowId,
            showSplitViewHint: !1,
            layout: new xb({
              id: r.id,
              children: [],
              layout: "single",
              size: 1,
            }),
          });
      }),
      t.addCase(G5e, (e, { payload: n }) => {
        const { id: r, terminalIds: a } = n,
          s = a.reduce(
            (o, u) => {
              if (ql(e, u))
                return $s(!1, "Terminal already has a parent tab"), o;
              const l = e.all[u];
              return l
                ? (o.terminalIds.push(u),
                  o.terminalWindowId == null
                    ? {
                        terminalIds: o.terminalIds,
                        terminalWindowId: l.windowId,
                      }
                    : o)
                : ($s(!1, "Terminal was not found"), o);
            },
            { terminalWindowId: null, terminalIds: [] }
          ),
          i = xb.buildBalancedTree(s.terminalIds);
        s.terminalWindowId &&
          e.tabs.push({
            id: r,
            title: "Split View",
            isEditingTitle: !1,
            hasUnreadOutput: !1,
            hasSessionSharingInputRequest: !1,
            windowId: s.terminalWindowId,
            showSplitViewHint: !1,
            layout: i,
          });
      }),
      t.addCase(
        U5e,
        (
          e,
          { payload: { title: n, id: r, terminalId: a, newTabIndex: s } }
        ) => {
          const i = e.all[a];
          if (!i) {
            $s(!1, "Terminal was not found");
            return;
          }
          const o = ql(e, a);
          if (!o) {
            $s(!1, "Terminal has no parent tab");
            return;
          }
          if (o.layout.single()) {
            $s(!1, "Terminal is the only one in its parent tab");
            return;
          }
          (o.layout = Xl(o.layout).remove(a)),
            mde(e.tabs, s, {
              id: r,
              title: n,
              isEditingTitle: !1,
              hasUnreadOutput: !1,
              hasSessionSharingInputRequest: !1,
              windowId: i.windowId,
              showSplitViewHint: !1,
              layout: new xb({
                id: a,
                children: [],
                layout: "single",
                size: 1,
              }),
            });
          const u = o.layout.single();
          u && (o.title = e.all[u.id].title);
        }
      ),
      t.addCase(K5e, (e, { payload: n }) => {
        const r = e.all[n],
          a = ql(e, n);
        if (!r) {
          $s(!1, "Terminal was not found");
          return;
        }
        if (!a) {
          $s(!1, "Terminal has no parent tab");
          return;
        }
        Xu(e.shellIntegrationActivatedConnections, (i) => i === r.connectionId);
        const s = a.layout.single();
        if (r.isActive)
          if (s) {
            const i = pB(e.tabs, a);
            if (i) {
              const [o] = i.layout.leafs();
              e.all[o.id].isActive = !0;
            }
          } else {
            const i = pB(
              [...a.layout.leafs()].map((o) => o.id),
              r.id
            );
            i && (e.all[i].isActive = !0);
          }
        if (s) Xu(e.tabs, (i) => i.id === a.id);
        else {
          a.layout = Xl(a.layout).remove(n);
          const i = a.layout.single();
          i && (a.title = e.all[i.id].title);
        }
        delete e.all[n], delete e.history[n];
      }),
      t.addCase(
        B5e,
        (
          e,
          {
            payload: {
              terminalId: n,
              targetTerminalId: r,
              position: a,
              layout: s,
            },
          }
        ) => {
          const i = e.all[n],
            o = e.all[r];
          if (!i || !o) {
            $s(!1, "Terminal was not found");
            return;
          }
          const u = ql(e, n);
          if (!u) {
            $s(!1, "Source tab was not found");
            return;
          }
          const l = e.tabs.find((c) => c.layout.has(r));
          if (!l) {
            $s(!1, "Target tab was not found");
            return;
          }
          if (i.windowId !== l.windowId) {
            $s(!1, "Terminal and target tab must be in the same window");
            return;
          }
          if (l.layout.has(n)) {
            $s(!1, "Terminal is already inside the given tab");
            return;
          }
          u.layout.single()
            ? Xu(e.tabs, (c) => c.id === u.id)
            : (u.layout = Xl(u.layout).remove(n)),
            (l.layout = Xl(l.layout).split(r, n, { layout: s, position: a })),
            (l.showSplitViewHint = !1);
        }
      ),
      t.addCase(tJ, (e, { payload: { windowId: n } }) => {
        e.search = mB(e, n, !0);
      }),
      t.addCase(j5e, (e, { payload: n }) => {
        e.search = mB(e, n, !1);
      }),
      t.addCase(z5e, (e, { payload: n }) => {
        hB(e, ["all", n, "isActive"], !0);
        const r = ql(e, n);
        r && ((r.hasUnreadOutput = !1), (r.hasSessionSharingInputRequest = !1));
        for (const a of Object.values(e.all)) a.id !== n && (a.isActive = !1);
      }),
      t.addCase($5e, (e, { payload: n }) => {
        const r = Xf(e.tabs, { id: n });
        if (!r) {
          $s(!1, "Tab was not found");
          return;
        }
        const [{ id: a }] = r.layout.leafs();
        (r.hasUnreadOutput = !1),
          (r.hasSessionSharingInputRequest = !1),
          (e.all[a].isActive = !0);
        for (const s of Object.values(e.all)) s.id !== a && (s.isActive = !1);
      }),
      t.addCase(Gnt, (e, { payload: n }) => {
        const r = Xf(e.tabs, { id: n });
        if (!r) {
          $s(!1, "Tab was not found");
          return;
        }
        const a = r.layout.single();
        a && !e.all[a.id].isActive && (r.hasSessionSharingInputRequest = !0);
      }),
      t.addCase(q5e, (e, { payload: n }) => {
        for (const r of Object.values(e.all))
          r.windowId === n && (r.isActive = !1);
      }),
      t.addCase(Y5e, (e, { payload: n }) => {
        e.all = $nt(e, n, !0);
      }),
      t.addCase(W5e, (e, { payload: n }) => {
        var a;
        const r = (a = e.all[n]) == null ? void 0 : a.connectionId;
        r && Xu(e.shellIntegrationActivatedConnections, (s) => s === r),
          (e.all = SB(e, n, Date.now()));
      }),
      t.addCase(k5e, (e, { payload: n }) => {
        hB(e, ["all", n.terminalId, "disconnectTimestamp"], null);
      }),
      t.addCase(x5e, (e, { payload: n }) => {
        e.all = SB(e, n, null);
      }),
      t.addCase(X5e, (e, { payload: n }) => {
        e.tabs = Mnt(e.tabs, n.oldIndex, n.newIndex);
      }),
      t.addCase(Z5e, (e, { payload: n }) => {
        const r = e.all[n.id];
        if (!r) {
          $s(!1, "Terminal was not found");
          return;
        }
        Object.assign(r, n.changes);
      }),
      t.addCase(eUe, (e, { payload: n }) => {
        const r = e.tabs.find((s) => s.id === n.id);
        if (!r) {
          $s(!1, "Tab was not found");
          return;
        }
        Object.assign(r, n.changes);
        const a = r.layout.single();
        a && n.changes.title && (e.all[a.id].title = n.changes.title);
      }),
      t.addCase(tUe, (e, { payload: n }) => {
        const r = e.tabs.find((a) => a.id === n);
        r && (r.showSplitViewHint = !0);
      }),
      t.addCase(nUe, (e, { payload: n }) => {
        const r = e.tabs.find((a) => a.id === n);
        r && (r.showSplitViewHint = !1);
      }),
      t.addCase(Q5e, (e, { payload: n }) => {
        const r = ql(e, n.sourceTerminalId),
          a = ql(e, n.targetTerminalId);
        if (!r || !a) {
          $s(!1, "Tab was not found");
          return;
        }
        r.layout = Xl(r.layout).remove(n.sourceTerminalId);
        const s = r === a ? r.layout : Xl(a.layout);
        a.layout = s.split(n.targetTerminalId, n.sourceTerminalId, {
          layout: n.layout,
          position: n.position,
        });
      }),
      t.addCase(J5e, (e, { payload: n }) => {
        const r = e.tabs.find((a) => a.id === n.tabId);
        if (!r) {
          $s(r, "Tab was not found");
          return;
        }
        r.layout = Xl(r.layout).resize(n.nodeId, n.sizes);
      }),
      t.addCase(nJ, (e, { payload: { windowId: n } }) => {
        e.all = fB(e, n, !0);
      }),
      t.addCase(iUe, (e, { payload: { windowId: n } }) => {
        e.all = fB(e, n, !1);
      }),
      t.addCase(oUe, (e, { payload: n }) => {
        const r = e.all[n.terminalId];
        if (!r) {
          $s(r, "Terminal was not found");
          return;
        }
        r.autocompleteState = n.state;
      }),
      t.addCase(uUe, (e, { payload: n }) => {
        e.history[n.terminalId] = { commands: n.commands, status: n.status };
      }),
      t.addCase(wse, (e, { payload: n }) => {
        const r = e.all[n.terminalId];
        if (!r) {
          $s(!1, "Terminal was not found");
          return;
        }
        r.osName = n.os ?? void 0;
      });
  }),
  fB = (t, e, n) =>
    Nl(t.all, (r) =>
      HG(r, e)
        ? {
            ...r,
            isTerminalWithProFeatures: n,
            terminalWithProFeaturesOpenTimestamp: n ? Date.now() : null,
          }
        : r
    ),
  mB = (t, e, n) => {
    var r;
    return {
      ...t.search,
      targetTerminalId:
        (n &&
          ((r = Object.values(t.all).find((a) => HG(a, e))) == null
            ? void 0
            : r.id)) ||
        null,
    };
  },
  SB = (t, e, n) =>
    Nl(t.all, (r) => (r.id === e ? { ...r, disconnectTimestamp: n } : r)),
  znt = (t, e, n) => {
    const r = Object.values(t.all).filter((a) => HG(a, e))[0] ?? null;
    return r
      ? { ...t.search, searchQuery: n, targetTerminalId: r.id }
      : t.search;
  },
  $nt = (t, e, n) =>
    Nl(t.all, (r) => (r.id === e ? { ...r, connectionEstablished: n } : r)),
  HG = (t, e) => t.windowId === e && t.isActive && t.connectionEstablished,
  ql = (t, e) => Object.values(t.tabs).find((n) => n.layout.has(e)),
  NG = "grantAccessHiddenMembers",
  Wnt = Kt(`${NG}/clearGrantAccessHiddenMembersData`);
Kt(`${NG}/closeAllGrantAccessDialogs`);
const o1 = { hiddenUserIds: [] },
  {
    reducer: qnt,
    actions: { hideGrantAccessDialog: Y_t },
  } = ua({
    name: NG,
    initialState: o1,
    reducers: {
      hideGrantAccessDialog(t, { payload: e }) {
        t.hiddenUserIds = e.map((n) => n.user_id);
      },
    },
    extraReducers: (t) => {
      t.addCase(qn.success, () => o1).addCase(Wnt, () => o1);
    },
  }),
  yB = { objects: [] },
  { reducer: Ynt, actions: X_t } = ua({
    name: "keyExchangePopups",
    initialState: yB,
    reducers: {
      hideKeyExchangePromotion(t, { payload: e }) {
        const n = t.objects.find((r) => r.id === e);
        n && (n.isHidden = !0);
      },
    },
    extraReducers: (t) => {
      t.addCase(qn.success, () => yB).addCase(
        ea.success,
        (e, { payload: n }) => {
          e.objects = n.objects
            .filter((r) => {
              var a;
              return (
                r.action === AT &&
                ((a = r.message_attributes) == null ? void 0 : a.user_pk)
              );
            })
            .map((r) => {
              var a, s, i, o;
              return {
                email:
                  ((s =
                    (a = r.message_attributes) == null
                      ? void 0
                      : a.user_email) == null
                    ? void 0
                    : s.trim()) ?? "",
                id:
                  ((i = r.message_attributes) == null ? void 0 : i.user_pk) ??
                  0,
                isHidden:
                  ((o = e.objects.find((u) => {
                    var l;
                    return (
                      u.id ===
                      ((l = r.message_attributes) == null ? void 0 : l.user_pk)
                    );
                  })) == null
                    ? void 0
                    : o.isHidden) ?? !1,
              };
            })
            .reverse();
        }
      );
    },
  }),
  n0 = null,
  Xnt = [n0, SP],
  Qnt = Kt("vaults/selectVaultIds"),
  gB = {
    vaults: [],
    other: [],
    withoutKeys: [],
    selectedVaultIds: Xnt,
    changeVaultWizards: [],
    vaultsMembers: [],
  },
  {
    reducer: Jnt,
    actions: {
      setVaults: u1,
      showInteractiveChangeVaultDialog: ON,
      hideChangeVaultDialog: Znt,
      selectPersonalVault: Q_t,
      setVaultsMembers: vB,
    },
  } = ua({
    initialState: gB,
    name: "vaults",
    reducers: {
      setVaults: (t, e) => {
        const [n, r] = est(e.payload.items),
          [a, s] = Go(n, (l) => l.role !== "Owner" || l.isDefault),
          i = t.vaults.length + 1 === t.selectedVaultIds.length;
        (t.vaults = a), (t.other = s), (t.withoutKeys = r);
        const o = _B(a);
        if (e.payload.selectAll || i) {
          t.selectedVaultIds = o;
          return;
        }
        const u = Tw(t.selectedVaultIds, o);
        t.selectedVaultIds = Zu(u) ? o : u;
      },
      showInteractiveChangeVaultDialog: (t, e) => {
        t.changeVaultWizards = [
          e.payload,
          ...t.changeVaultWizards.filter(
            (n) => n.wizardID !== e.payload.wizardID
          ),
        ];
      },
      setVaultsMembers: (t, { payload: e }) => {
        t.vaultsMembers = e;
      },
      hideChangeVaultDialog: (t, e) => {
        t.changeVaultWizards = t.changeVaultWizards.filter(
          (n) => n.wizardID !== e.payload.wizardID
        );
      },
      selectPersonalVault: (t) => {
        t.selectedVaultIds.includes(n0) || t.selectedVaultIds.unshift(n0);
      },
      openNewVaultForm: (t) => t,
    },
    extraReducers: (t) =>
      t
        .addCase(Qnt, (e, n) => {
          const r = Tw(n.payload, _B(e.vaults));
          e.selectedVaultIds = Zu(r) ? e.selectedVaultIds : r;
        })
        .addCase(qn.success, () => gB),
  });
k("vaults/openNewVaultForm");
function _B(t) {
  const e = t.map((n) => n.id);
  return e.unshift(n0), e;
}
function est(t) {
  const e = t.map((a) => ({
      id: a.id,
      name: a.name,
      encryptionKeyId: a.original_key,
      isDefault: !!a.is_default,
      role: a.role,
    })),
    [n, r] = Go(e, (a) => a.encryptionKeyId != null);
  return [n, r];
}
const tst = { lastFocused: void 0, isFocused: !1 },
  { reducer: nst, actions: J_t } = ua({
    name: "windows",
    initialState: tst,
    reducers: {
      windowFocused(t, { payload: e }) {
        (t.lastFocused = e), (t.isFocused = !0);
      },
      windowBlurred(t, { payload: e }) {
        (t.lastFocused = e), (t.isFocused = !1);
      },
    },
  }),
  bB = {
    username: "",
    team: null,
    isTeamDataStale: !1,
    personal_subscription: null,
    team_subscription: null,
    student: null,
    trial: null,
    account: {
      id: null,
      user_id: null,
      is_email_confirmed: !0,
      need_to_update_subscription: !1,
      pro_mode: !1,
      two_factor_auth: !1,
      team: !1,
      updated_at: "",
      feature_toggles: null,
      registered_at: "",
      now: "",
      plan_type: "Unauthorized",
      user_type: "Unauthorized",
      full_name: "",
      company: "",
      address: "",
      country_code: "",
      current_period: null,
      authorized_features: null,
      expired_screen_type: null,
      tax_id: "",
      has_sso: !1,
      team_display_name: "",
      is_subscribed_to_marketing_emails: !1,
    },
    device: void 0,
    team_members: [],
    team_invites: [],
    hasAccessToSharedData: null,
    access_objects: [],
  },
  sst = Yn(
    {
      [us.success.toString()]: (t, { payload: e }) =>
        Yr({}, t, e, { isTeamDataStale: !1 }),
      [Zr.success.toString()]: (
        t,
        { payload: { bulk_account: e, device: n } }
      ) => Yr({}, t, e, { isTeamDataStale: !1, device: n }),
      [fl.toString()]: (t, { payload: e }) => Yr({}, t, e),
      [qn.success.toString()]: () => bB,
      [aO.success.toString()]: (t) =>
        Yr({}, t, { account: { two_factor_auth: !0 } }),
      [iO.success.toString()]: (t) =>
        Yr({}, t, { account: { two_factor_auth: !1 } }),
      [U0.success.toString()]: (t, { payload: e }) =>
        kh({}, t, { team: e }, { isTeamDataStale: !1 }),
      [b$.success.toString()]: (t, { payload: e }) =>
        Yr({}, t, {
          username: e,
          account: { is_email_confirmed: !1, has_sso: !1 },
        }),
      [Cg.success.toString()]: (t, { payload: e }) =>
        kh({}, t, { team_members: (e == null ? void 0 : e.results) ?? [] }),
      [Ag.success.toString()]: (t, { payload: e }) =>
        kh({}, t, { team_invites: (e == null ? void 0 : e.results) ?? [] }),
      [Xd.success.toString()]: (t, { payload: e }) =>
        kh({}, t, { team_invites: e.invites, team_members: e.members }),
    },
    bB
  ),
  vde = {
    monthly: { value: 12, currency: "USD" },
    yearly: { value: 120, currency: "USD" },
  },
  rst = {
    monthly: { value: 24, currency: "USD" },
    yearly: { value: 240, currency: "USD" },
  },
  ast = {
    monthly: { value: 36, currency: "USD" },
    yearly: { value: 360, currency: "USD" },
  },
  ist = { isCanceled: !1, isLoading: null, pro: vde, team: rst, business: ast },
  ost = Yn(
    {
      [hP.toString()]: (t) => ({
        ...t,
        isCanceled: !1,
        isLoading: yA ? "monthly" : null,
      }),
      [fP.toString()]: (t) => ({
        ...t,
        isCanceled: !1,
        isLoading: yA ? "yearly" : null,
      }),
      [d2.toString()]: (t) => ({ ...t, isLoading: yA ? "restore" : null }),
      [iX.toString()]: (t) => ({ ...t, isCanceled: !0, isLoading: null }),
      [rX.toString()]: (t) => ({ ...t, isLoading: null }),
      [h2.toString()]: (t) => ({ ...t, isLoading: null }),
      [nw.success.toString()]: (t, e) => ({ ...t, pro: e.payload }),
      [$d.success.toString()]: (t, e) =>
        e.payload.pro
          ? {
              ...t,
              pro: e.payload.pro,
              team: e.payload.team,
              business: e.payload.business,
            }
          : { ...t, team: e.payload.team, business: e.payload.business },
      [aX.toString()]: (t) => ({ ...t, isLoading: null }),
    },
    ist
  ),
  s0 = k("SET_AUTHORIZED"),
  ust = Yn({ [s0.toString()]: (t, { payload: e }) => e }, !1),
  EB = [],
  lst = Yn(
    {
      [Bue.toString()]: (t, { payload: e }) => [...e],
      [Xd.success.toString()]: (t, { payload: e }) => [...e.avatars],
      [qn.success.toString()]: () => EB,
    },
    EB
  ),
  cst = Kt("SET_SFTP_CHANGED_FILE"),
  dst = Kt("REMOVE_SFTP_CHANGED_FILE"),
  pst = Kt("REMOVE_ALL_SFTP_CHANGED_FILES"),
  hst = Yn(
    {
      [cst.toString()]: (t, { payload: { fileId: e, changedFile: n } }) => {
        const r = new Map(t);
        return r.set(e, n), [...r];
      },
      [dst.toString()]: (t, { payload: e }) => {
        const n = new Map(t);
        return n.delete(e), [...n];
      },
      [pst.toString()]: (t, { payload: e }) => {
        const n = new Map(t);
        return (
          t.forEach(([r, a]) => {
            a.sftpContainerId === e && n.delete(r);
          }),
          [...n]
        );
      },
    },
    []
  ),
  fst = {
    hosts: [],
    groups: [],
    snippets: [],
    sshKeys: [],
    visibleIdentities: [],
    portForwardingRules: [],
    knownHosts: [],
    histories: [],
    hostLatestActivities: [],
    multiKeys: [],
    awsConfigs: [],
    snippetsPackages: [],
    hardwareKeys: [],
    historyCommands: [],
  },
  mst = Yn({ [ss.toString()]: (t, { payload: e }) => ({ ...t, ...e }) }, fst),
  Sst = 4e4,
  oh = (t, e, n) =>
    ta(n, (r) => {
      r.addCase(t, Bg).addCase(e, pm);
    }),
  Cd = (t, e) =>
    ta(e, (n) => {
      n.addCase(t, (r, a) => a.payload);
    }),
  yst = {
    rightClickToPaste: oh(N0e, R0e, !1),
    bellSound: oh(E0e, T0e, !1),
    optionIsMeta: oh(Hz, Nz, !0),
    scrollback: Cd(k0e, Sst),
    colorScheme: ta(_2, (t) => {
      t.addCase(eO, (e, n) => n.payload), t.addCase(tO, (e, n) => n.payload);
    }),
    colorSchemeAwaitsSynchronization: ta(!1, (t) => {
      t.addCase(eO, () => !0), t.addCase(tO, () => !1);
    }),
    fontFamily: Cd(A0e, wX),
    fontSize: Cd(O0e, TX),
    brightenBoldText: oh(w0e, P0e, !1),
    terminalEmulationType: Cd(x0e, "xterm-256color"),
    detectOS: oh(I0e, C0e, !0),
    liveTerminalLabel: ta(!1, (t) => {
      t.addCase(H0e, Bg);
    }),
    hideProFeatureSteps: ta(!1, (t) => {
      t.addCase(L0e, Bg);
    }),
    keywordsHighlighting: Cd(M0e, !0),
    enableShellHistoryImport: Cd(D0e, !0),
    autocompleteDisabledUntilTimestamp: Cd(G0e, 1),
    autoreconnect: oh(Rz, kz, !0),
  },
  gst = bp(yst),
  GS = "grid",
  vst = {
    hosts: GS,
    keychain: GS,
    portForwarding: GS,
    snippets: GS,
    knownHosts: GS,
  },
  _st = Yn(
    {
      [xz.toString()]: (t, { payload: e }) => {
        const n = e.tab;
        return { ...t, [n]: e.layout };
      },
    },
    vst
  ),
  bst = k("SET_LOCALHOST"),
  _de = k("REFRESH_LOCALHOST"),
  Est = k("REMOVE_LOCALHOST"),
  PI = k("UPDATE_STORED_LOCALHOST"),
  Tst = null,
  wst = Yn({ [PI.toString()]: (t, { payload: e }) => e }, Tst),
  Pst = Yn(
    {
      [F0e.toString()]: (t, { payload: e }) => [...t, e],
      [U0e.toString()]: (t, { payload: e }) => Vg(t, e),
    },
    []
  ),
  Ist = Yn(
    { [Lz.toString()]: (t, { payload: e }) => (e == null ? void 0 : e.label) },
    null
  ),
  Cst = { path: Ist, customPaths: Pst },
  Ast = bp(Cst),
  Ost = k("SET_SORTING"),
  FS = { by: "Date", reverse: !0 },
  Hst = {
    hosts: FS,
    keychain: FS,
    portForwarding: FS,
    snippets: FS,
    knownHosts: FS,
  },
  Nst = Yn(
    {
      [Ost.toString()]: (t, { payload: e }) => {
        const n = e.tab;
        return { ...t, [n]: { by: e.sort, reverse: e.reverse } };
      },
    },
    Hst
  ),
  Rst = Kt("ADD_TRANSFER_STREAM"),
  kst = Kt("REMOVE_TRANSFER_STREAM"),
  xst = Yn(
    {
      [Rst.toString()]: (
        t,
        { payload: { transferStreamId: e, transferStream: n } }
      ) => {
        const r = new Map(t);
        return r.set(e, n), [...r];
      },
      [kst.toString()]: (t, { payload: e }) => {
        const n = new Map(t);
        return n.delete(e), [...n];
      },
    },
    []
  ),
  Lst = Yn(
    {
      [K0e.toString()]: (
        t,
        { payload: { theme: e, selectedThemeValue: n } }
      ) => ({ ...t, theme: e, selectedThemeValue: n || e }),
      [Mz.toString()]: (t) => ({
        ...t,
        isTerminalSharingVisible: !t.isTerminalSharingVisible,
      }),
      [B0e.toString()]: (t, { payload: e }) => ({
        ...t,
        isPortForwardingWizardEnabled: e,
      }),
      [Dz.toString()]: (t, { payload: e }) => ({ ...t, isSettingsOpened: e }),
      [V0e.toString()]: (t) => ({ ...t, isCopyLinkInfoVisible: !1 }),
      [j0e.toString()]: (t, { payload: e }) => ({
        ...t,
        isQuickConnectHighlighted: e,
      }),
      [ss.toString()]: sr((t, { payload: e }) => {
        const { hosts: n = [], groups: r = [] } = e;
        (n.length !== 0 || r.length !== 0) &&
          (t.isQuickConnectHighlighted = !1);
      }),
      [z0e.toString()]: (t) => ({ ...t, isShowAppInterface: !0 }),
      [Gz.toString()]: sr((t, { payload: e }) => {
        t.gracePeriodUntilDate = e;
      }),
      [$0e.toString()]: sr((t) => {
        t.identityPromo.variant = "icon";
      }),
      [W0e.toString()]: sr((t) => {
        t.showLinkedIdentitiesBanner = !1;
      }),
      [q0e.toString()]: sr((t) => {
        t.groupPromo.variant = "icon";
      }),
      [Y0e.toString()]: sr((t) => {
        t.showBannerAboutGroup = !1;
      }),
    },
    {
      theme: "light",
      selectedThemeValue: "auto",
      isTerminalSharingVisible: !0,
      isSettingsOpened: !1,
      isPortForwardingWizardEnabled: !0,
      isCopyLinkInfoVisible: !0,
      isQuickConnectHighlighted: !0,
      isShowAppInterface: !1,
      gracePeriodUntilDate: void 0,
      identityPromo: { variant: "banner" },
      showLinkedIdentitiesBanner: !0,
      groupPromo: { variant: "banner" },
      showBannerAboutGroup: !0,
    }
  ),
  Mst = {
    commandPalette: AZe,
    commandPaletteAnalytics: IZe,
    transferStreams: xst,
    globalTerminalSettings: gst,
    sidepanel: dZe,
    localTerminalPath: Ast,
    localhost: wst,
    sorting: Nst,
    sftp: gZe,
    entities: mst,
    user: sst,
    purchases: ost,
    dialogs: kJe,
    sync: ret,
    experiments: LJe,
    inAppMessages: kZe,
    terminal: jnt,
    promotion: eZe,
    history: S5e,
    ui: Lst,
    navigation: BZe,
    authorized: ust,
    layout: _st,
    snackbar: tet,
    multiKey: GZe,
    presenceEffect: DJe,
    avatars: lst,
    changedSftpFiles: hst,
    app: vZe,
    appUpdate: _Ze,
    shortcuts: YZe,
    clouds: OJe,
    keyExchangePopups: Ynt,
    customerExperience: aCe,
    windows: nst,
    identityAutocomplete: MJe,
    quickConnectSettings: jZe,
    connectionFlow: HZe,
    realtimeCollaboration: aZe,
    nativeTheme: FZe,
    stats: set,
    onboardings: GJe,
    tags: oet,
    terminalTheme: RJe,
    vault: Jnt,
    lifecycle: xZe,
    reconnection: uet,
    runSnippet: qZe,
    identityPromotion: NJe,
    grantAccessHiddenMembers: qnt,
  },
  Dst = bp(Mst),
  Gst = (t, e) => {
    const n = oI.match(e) ? e.payload : t;
    return Dst(n, e);
  },
  Wo = sr((t) => {
    t.terminalTheme.themeUsages = Kue;
  }),
  Fst = Wn((t) => {
    if (t.proTrialOnboarding != null) {
      const e = t.proTrialOnboarding.userShouldSeeTrialOnboarding,
        n = t.proTrialOnboarding.successAnimationFinished,
        r = t.proTrialOnboarding.completedStepsOrder;
      t.onboardings = {
        proTrialOnboarding: {
          userShouldSeeProTrialOnboarding: e,
          proTrialSuccessAnimationFinished: n,
          proTrialCompletedStepsOrder: r,
        },
        teamOwnerOnboarding: {
          userShouldSeeTeamOnboarding: !1,
          teamSuccessAnimationFinished: !1,
          teamEntryAnimationFinished: !1,
          userClosedTeamOnboarding: !1,
          upgradeNowButtonHasActiveMode: !1,
        },
        onboardingAttributes: [],
      };
    }
    delete t.promotion.shouldGroupSharingDailyTipBeShown,
      delete t.proTrialOnboarding;
  }),
  Ust = Wn((t) => {
    var e, n, r, a;
    if (
      (((e = t.globalTerminalSettings) == null
        ? void 0
        : e.autocompleteForShellHistory) != null &&
        (t.globalTerminalSettings.enableShellHistoryImport =
          t.globalTerminalSettings.autocompleteForShellHistory),
      t.globalTerminalSettings != null)
    ) {
      const s =
          ((n = t.controlCenter) == null ? void 0 : n.autocompleteDisabled) ===
          0,
        i =
          ((r = t.globalTerminalSettings) == null
            ? void 0
            : r.autocompleteForDirectories) === !0,
        o =
          ((a = t.globalTerminalSettings) == null
            ? void 0
            : a.autocompleteForPasswords) === !0,
        u = s && o && i;
      t.globalTerminalSettings.autocompleteDisabledUntilTimestamp = u ? 0 : 1;
    }
    delete t.controlCenter,
      delete t.globalTerminalSettings.autocompleteForShellHistory,
      delete t.globalTerminalSettings.autocompleteForDirectories,
      delete t.globalTerminalSettings.autocompleteForPasswords;
  }),
  TB = [
    (t) => t,
    (t) => {
      const { experiments: e = {} } = t,
        n = e.teamPromotionDisabled ? Date.now() : null;
      return {
        ...t,
        promotion: { ...t.promotion, teamDismissTimestamp: n },
        experiments: { ...t.experiments, teamPromotionDisabled: void 0 },
      };
    },
    (t) => {
      const { experiments: e } = t,
        { treatments: n = {} } = e,
        {
          password_strength: r = "Exp_1_Disabled",
          new_connection_flow_desktop: a = "Exp_2_Disabled",
        } = n;
      return {
        ...t,
        experiments: {
          ...e,
          treatments: {
            ...n,
            password_strength: r === "Exp_1_Disabled" ? Vu : r,
            new_connection_flow_desktop: a === "Exp_2_Disabled" ? Vu : a,
          },
        },
      };
    },
    (t) => {
      const e = Ft.takeDarkMode();
      return e == null ? t : Yr({}, t, { ui: { theme: e ? "dark" : "light" } });
    },
    (t) =>
      Yr({}, t, {
        globalTerminalSettings: {
          colorScheme: Bst(Ft.takeColorScheme()) ?? _2,
          fontFamily: Ft.takeFontFamily() ?? wX,
          fontSize: Ft.takeFontSize() ?? TX,
        },
      }),
    (t) => {
      var n;
      const e = t;
      return (n = e.ui) != null && n.layout && delete e.ui.layout, { ...e };
    },
    ({ notifications: t, ...e }) => e,
    (t) => {
      const e = xl(t);
      return delete e.promotion.teamDismissTimestamp, e;
    },
    (t) => {
      const e = t;
      return (
        e.sftp &&
          !e.sftp.fileTypeAppAssociations &&
          (e.sftp.fileTypeAppAssociations = []),
        { ...e }
      );
    },
    (t) => {
      var e;
      return (e = t.ui) != null && e.activeTab
        ? t
        : Yr({}, t, {
            ui: {
              activeTab: { id: "", type: "" },
              isTerminalSharingVisible: !0,
            },
          });
    },
    (t) => {
      var e;
      return (e = t.ui) != null && e.isSettingsOpened
        ? t
        : Yr({}, t, { ui: { isSettingsOpened: !1 } });
    },
    (t) => {
      var e;
      return (e = t.ui) != null && e.selectedThemeValue
        ? t
        : Yr({}, t, { ui: { selectedThemeValue: "light" } });
    },
    (t) => {
      const e = t;
      return e.featureActivations && delete e.featureActivations, { ...e };
    },
    (t) => {
      var n;
      const e = t;
      return (
        (n = e.promotion) != null &&
          n.hasOwnProperty("shouldShareAllSnippetsPromoBeShown") &&
          delete e.promotion.shouldShareAllSnippetsPromoBeShown,
        { ...e }
      );
    },
    (t) => {
      var n;
      const e = t;
      return (
        (n = e.promotion) != null &&
          n.hasOwnProperty("multikeyDismissTimestamp") &&
          delete e.promotion.multikeyDismissTimestamp,
        { ...e }
      );
    },
    (t) => {
      var n;
      const e = t;
      return (
        (n = e.liveTerminals) != null &&
          n.hasOwnProperty("tryLiveTerminalsDismissTimestamp") &&
          delete e.liveTerminals.tryLiveTerminalsDismissTimestamp,
        { ...e }
      );
    },
    (t) => {
      const e = t;
      return e.liveTerminals && delete e.liveTerminals, { ...e };
    },
    (t) => {
      var n;
      const e = t;
      return (
        (n = e.ui).isPortForwardingWizardEnabled ??
          (n.isPortForwardingWizardEnabled = !0),
        { ...e }
      );
    },
    Kst,
    (t) => {
      var n;
      const e = t;
      return (
        (n = e.ui).isQuickConnectHighlighted ??
          (n.isQuickConnectHighlighted = !1),
        { ...e }
      );
    },
    Vst("autocompleteForPasswords", !0),
    Wn((t) => {
      const n = t.ui.currentWelcomeFlowStepIndex ?? [];
      t.ui.currentWelcomeFlowStepIndex = n.filter((r) => r <= 10);
    }),
    Wn((t) => {
      var n;
      const e =
        ((n = t == null ? void 0 : t.snippetsPanel) == null
          ? void 0
          : n.interacted) ?? !1;
      t.snippetsPanel &&
        ((t.snippetsPanel.screen = e ? "snippets" : "history"),
        (t.snippetsPanel.hintWasShown =
          Ft.wasDeprecatedSidePanelShortcutHintShown()));
    }),
    Wn((t) => {
      var e, n;
      (e = t.user.account).team_display_name ?? (e.team_display_name = ""),
        (n = t.user.account).is_subscribed_to_marketing_emails ??
          (n.is_subscribed_to_marketing_emails = !1);
    }),
    (t) => wJe(t, PJe),
    Wn((t) => {
      t.controlCenter != null &&
        "autocompletePromoShownTimestamp" in t.controlCenter &&
        (t.controlCenter.autocompletePromoShownTimestamp = void 0),
        t.promotion != null &&
          "passwordAutocompletion" in t.promotion &&
          (t.promotion.passwordAutocompletion = void 0);
    }),
    Ust,
    Fst,
    Wn((t) => {
      t.promotion != null &&
        "freeToTrialDismissTimestamp" in t.promotion &&
        delete t.promotion.freeToTrialDismissTimestamp;
    }),
    Wn((t) => {
      var e;
      (e = t.user).access_objects ??
        (e.access_objects = t.user.access_objects_list ?? []),
        delete t.user.access_objects_list;
    }),
    Wn((t) => {
      t.experiments.treatments.desktop_side_menu_team_trial_promotion != null &&
        delete t.experiments.treatments.desktop_side_menu_team_trial_promotion;
    }),
    Wn((t) => {
      delete t.ui.currentWelcomeFlowStepIndex;
    }),
    Wn((t) => {
      t.terminalTheme ?? (t.terminalTheme = {});
    }),
    Wo,
    Wo,
    Wn((t) => {
      t.globalTerminalSettings.colorSchemeAwaitsSynchronization =
        t.globalTerminalSettings.colorScheme !== "termius dark";
    }),
    Wn((t) => {
      t.stats &&
        !t.stats.sessionTabs &&
        ((t.stats.sessionTabs = {}),
        (t.stats.firstInteractionDate = Date.now()),
        (t.stats.lastInteractionDate = Date.now()));
    }),
    Wo,
    Wn((t) => {
      t.snippetsPanel &&
        ((t.sidepanel = t.snippetsPanel),
        (t.sidepanel.startSharing = !1),
        delete t.snippetsPanel);
    }),
    Wn((t) => {
      t.ui.showLinkedIdentitiesBanner = !0;
    }),
    Wn((t) => {
      t.sidepanel ??
        (t.sidepanel = {
          interacted: !1,
          hintWasShown: !1,
          visible: !0,
          windows: [],
          screen: "theme",
          topThreePromoClosed: !1,
          startSharing: !1,
        }),
        delete t.sidepanel.width;
    }),
    Wo,
    Wo,
    Wn((t) => {
      (t.ui.groupPromo = { variant: "banner" }),
        (t.ui.showBannerAboutGroup = !0),
        (t.ui.identityPromo = { variant: "banner" });
    }),
    Wo,
    Wo,
    Wo,
    Wo,
    Wo,
  ];
function Kst(t) {
  return {
    ...t,
    user: {
      ...{
        username: "",
        team: null,
        personal_subscription: null,
        team_subscription: null,
        student: null,
        trial: null,
        account: {
          id: null,
          user_id: null,
          is_email_confirmed: !0,
          need_to_update_subscription: !1,
          pro_mode: !1,
          two_factor_auth: !1,
          team: !1,
          updated_at: "",
          feature_toggles: null,
          registered_at: "",
          now: "",
          plan_type: "Unauthorized",
          user_type: "Unauthorized",
          full_name: "",
          company: "",
          address: "",
          country_code: "",
          current_period: null,
          authorized_features: null,
          expired_screen_type: null,
          tax_id: "",
          has_sso: !1,
        },
        team_members: [],
        team_invites: [],
        hasAccessToSharedData: null,
      },
      isTeamDataStale: !0,
    },
  };
}
function Bst(t) {
  try {
    return JSON.parse(t).name.toLowerCase();
  } catch {
    return;
  }
}
function Vst(t, e) {
  return (n) => Yr({ globalTerminalSettings: { [t]: e } }, n);
}
function jst() {
  const t = {
      key: "root",
      storage: TJe,
      version: TB.length - 1,
      whitelist: [
        "globalTerminalSettings",
        "localTerminalPath",
        "sidepanel",
        "sorting",
        "sftp",
        "experiments",
        "promotion",
        "ui",
        "layout",
        "history",
        "keyExchangePopups",
        "controlCenter",
        "user",
        "quickConnectSettings",
        "connectionFlow",
        "stats",
        "customerExperience",
        "onboardings",
        "terminalTheme",
        "runSnippet",
        "vault",
        "appUpdate",
      ],
      transforms: [$st, zst, Wst, qst, IJe, Yst, wZe],
      migrate: cge(TB),
    },
    e = Bye(t, Gst);
  function n(a, s) {
    return s.type === ig
      ? { ...a, _persist: { ...a._persist, rehydrated: !0 } }
      : e(a, s);
  }
  function* r() {
    const a = yield* Zs(({ type: o }) => o === ig);
    a.err && tt.exception("Redux Persist Rehydrate has failed", a.err);
    const s = yield* Pe(),
      i = e(s, a);
    delete i._persist, yield* D(oI(i));
  }
  return { persistedReducer: n, persistedSaga: r };
}
const zst = Ep(
    ({ windows: t, ...e }) => ({ ...e }),
    (t) => ({ ...t, windows: [] }),
    { whitelist: ["snippetsPanel"] }
  ),
  $st = Ep(
    ({ windows: t, ...e }) => ({ ...e }),
    (t) => ({ ...t, windows: [] }),
    { whitelist: ["sidepanel"] }
  ),
  Wst = Ep(
    ({ isShowing: t }) => ({ isShowing: t }),
    (t) => ({ ...eH, ...t }),
    { whitelist: ["history"] }
  ),
  qst = Ep(
    (t) => zv(t, "isShowAppInterface"),
    (t) => ({ ...t, isShowAppInterface: !1 }),
    { whitelist: ["ui"] }
  ),
  Yst = Ep(
    (t) => zv(t, "selectedVaultIds"),
    (t) => {
      const e =
        "vaults" in t && Array.isArray(t.vaults)
          ? t.vaults.map((n) => n.id)
          : [];
      return (
        e.length === 0 && e.push(SP),
        e.unshift(null),
        { ...t, selectedVaultIds: e }
      );
    },
    { whitelist: ["vault"] }
  );
function HN(t) {
  this.message = t;
}
(HN.prototype = new Error()), (HN.prototype.name = "InvalidCharacterError");
var wB =
  (typeof window < "u" && window.atob && window.atob.bind(window)) ||
  function (t) {
    var e = String(t).replace(/=+$/, "");
    if (e.length % 4 == 1)
      throw new HN(
        "'atob' failed: The string to be decoded is not correctly encoded."
      );
    for (
      var n, r, a = 0, s = 0, i = "";
      (r = e.charAt(s++));
      ~r && ((n = a % 4 ? 64 * n + r : r), a++ % 4)
        ? (i += String.fromCharCode(255 & (n >> ((-2 * a) & 6))))
        : 0
    )
      r =
        "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(
          r
        );
    return i;
  };
function Xst(t) {
  var e = t.replace(/-/g, "+").replace(/_/g, "/");
  switch (e.length % 4) {
    case 0:
      break;
    case 2:
      e += "==";
      break;
    case 3:
      e += "=";
      break;
    default:
      throw "Illegal base64url string!";
  }
  try {
    return (function (n) {
      return decodeURIComponent(
        wB(n).replace(/(.)/g, function (r, a) {
          var s = a.charCodeAt(0).toString(16).toUpperCase();
          return s.length < 2 && (s = "0" + s), "%" + s;
        })
      );
    })(e);
  } catch {
    return wB(e);
  }
}
function r0(t) {
  this.message = t;
}
function Qst(t, e) {
  if (typeof t != "string") throw new r0("Invalid token specified");
  var n = (e = e || {}).header === !0 ? 0 : 1;
  try {
    return JSON.parse(Xst(t.split(".")[n]));
  } catch (r) {
    throw new r0("Invalid token specified: " + r.message);
  }
}
(r0.prototype = new Error()), (r0.prototype.name = "InvalidTokenError");
function RG(t) {
  return (
    typeof t == "object" &&
    t != null &&
    "message" in t &&
    (t.message === "timeout" || t.message === "disconnected")
  );
}
function* Jst(t) {
  const e = yield* Pe(Wv),
    n = vR((r) => {
      const a = t.subscribe(`$teams:team_${e}`, {
        join: (s) => {
          r(I3(s == null ? void 0 : s.info));
        },
        leave: (s) => {
          r(C3(s == null ? void 0 : s.info));
        },
        subscribe: async () => {
          let s;
          try {
            s = await a.presence();
          } catch (i) {
            RG(i) || tt.exception("Cannot get centrifuge presence data", i);
            return;
          }
          r(kH(s == null ? void 0 : s.presence));
        },
        unsubscribe: () => {
          r(kH({}));
        },
      });
      return () => a.unsubscribe();
    });
  yield* $e(n, D);
}
function Zst(t, e) {
  const n = t.decrypt(e);
  if (sn.is(n)) throw n;
  if (n == null) throw new Error("Centrifuge publish message is nullable");
  return JSON.parse(n);
}
function ert(t, e) {
  const n = t.encrypt(JSON.stringify(e));
  if (sn.is(n)) throw n;
  return n;
}
const trt = Xe.object({
    type: Xe.literal("TEAM_TERMINAL_SESSION_SHARING_REQUEST"),
    payload: Xe.object({
      id: Xe.string(),
      connectionId: Xe.string(),
      hostId: Xe.number(),
    }),
  }),
  nrt = Xe.object({
    type: Xe.literal("TEAM_TERMINAL_SESSION_SHARING_RESPONSE"),
    payload: Xe.object({ id: Xe.string(), url: Xe.string() }),
  }),
  srt = Xe.object({
    type: Xe.literal("REQUEST_TEAM_TERMINAL_SESSION_INPUT_ACCESS"),
    payload: Xe.string(),
  }),
  rrt = Xe.object({
    type: Xe.literal("TEAM_TERMINAL_SESSION_PARAMS_CHANGED"),
    payload: Xe.object({
      connectionId: Xe.string(),
      connectionParams: Xe.object({
        terminalTitle: Xe.string(),
        totalViewersCount: Xe.number(),
        allowViewersInput: Xe.boolean(),
      }).partial(),
    }),
  }),
  art = Xe.object({
    type: Xe.literal("SHARE_REALTIME_COLLABORATION_STATE"),
    payload: Xe.array(
      Xe.object({
        id: Xe.string(),
        owner: Xe.number(),
        ownerDeviceToken: Xe.string(),
        windowId: Xe.number(),
        viewers: Xe.array(Xe.number()),
        hostId: Xe.number(),
        params: Xe.object({
          terminalTitle: Xe.string(),
          totalViewersCount: Xe.number(),
          allowViewersInput: Xe.boolean(),
        }),
      })
    ),
  }),
  irt = Xe.object({
    type: Xe.literal("TEAM_TERMINAL_SESSION_STARTED"),
    payload: Xe.object({
      userId: Xe.number(),
      hostId: Xe.number(),
      windowId: Xe.number(),
      ownerDeviceToken: Xe.string(),
      connectionId: Xe.string(),
      connectionParams: Xe.object({
        terminalTitle: Xe.string(),
        totalViewersCount: Xe.number(),
        allowViewersInput: Xe.boolean(),
      }),
    }),
  }),
  ort = Xe.object({
    type: Xe.literal("TEAM_TERMINAL_SESSION_FINISHED"),
    payload: Xe.string(),
  }),
  urt = Xe.object({
    type: Xe.literal("JOIN_TEAM_TERMINAL_SESSION"),
    payload: Xe.object({
      userId: Xe.number(),
      connectionId: Xe.string(),
      totalViewersCount: Xe.number(),
    }),
  }),
  lrt = Xe.object({
    type: Xe.literal("LEAVE_TEAM_TERMINAL_SESSION"),
    payload: Xe.object({
      userId: Xe.number(),
      connectionId: Xe.string(),
      totalViewersCount: Xe.number(),
    }),
  }),
  crt = Xe.discriminatedUnion("type", [
    trt,
    nrt,
    srt,
    rrt,
    art,
    irt,
    ort,
    urt,
    lrt,
  ]);
function* drt(t, e) {
  (yield* Pe(Dg)) && (yield* PB(t, e)), yield* $e(k3, PB, t, e);
}
function* PB(t, e) {
  const n = yield* Pe(Wv),
    r = t.subscribe(`$teams:team_${n}`),
    a = vR((i) => {
      const o = (u) => {
        try {
          const l = Zst(e, u.data),
            c = crt.parse(l),
            d = hrt(c);
          if (d == null) return;
          i(d);
        } catch (l) {
          RG(l) ||
            tt.exception(
              "Cannot process incoming centrifuge Realtime Collaboration publish message",
              l
            );
        }
      };
      return (
        r.addListener("publish", o),
        () => {
          r.removeListener("publish", o), r.unsubscribe();
        }
      );
    });
  yield* $e(a, D);
  const s = yield* Jr(prt, r, e);
  yield* Zs(x3), yield* I0(s), a.close();
}
function* prt(t, e) {
  yield* $e(md, async ({ payload: n }) => {
    try {
      const r = ert(e, n);
      await t.publish(r);
    } catch (r) {
      RG(r) ||
        tt.exception(
          "Cannot publish centrifuge Realtime Collaboration message",
          r
        );
    }
  });
}
function hrt(t) {
  switch (t.type) {
    case "TEAM_TERMINAL_SESSION_SHARING_REQUEST":
      return tZe(t.payload);
    case "TEAM_TERMINAL_SESSION_SHARING_RESPONSE":
      return Que(t.payload);
    case "REQUEST_TEAM_TERMINAL_SESSION_INPUT_ACCESS":
      return nZe(t.payload);
    case "TEAM_TERMINAL_SESSION_PARAMS_CHANGED":
      return R3(t.payload);
    case "SHARE_REALTIME_COLLABORATION_STATE":
      return que(t.payload);
    case "TEAM_TERMINAL_SESSION_STARTED":
      return Yue(t.payload);
    case "TEAM_TERMINAL_SESSION_FINISHED":
      return O3(t.payload);
    case "JOIN_TEAM_TERMINAL_SESSION":
      return H3(t.payload);
    case "LEAVE_TEAM_TERMINAL_SESSION":
      return N3(t.payload);
  }
  return null;
}
const frt = (t) => {
    var e, n;
    return (n = (e = t.data) == null ? void 0 : e.termius_data) == null
      ? void 0
      : n.notification_type;
  },
  mrt = new Map([
    ["sync", () => Cy.request("does-not-block-ui")],
    ["logout", () => qn.request({ keepSepKeys: !1 })],
    ["update_profile", () => us.request()],
    ["in-app-message", () => WQ()],
    ["history-updated", () => go.request()],
    ["team-updated", () => ak()],
    ["onboarding-updated", () => $ue()],
  ]);
function* Srt(t, e) {
  const n = vR((r) => {
    const a = t.subscribe(`notifications#${e}`, {
      publish: (s) => {
        const i = frt(s),
          o = mrt.get(i);
        o && r(o());
      },
    });
    return () => a.unsubscribe();
  });
  yield* $e(n, D);
}
var bde = { exports: {} };
(function (t, e) {
  (function (r, a) {
    t.exports = a();
  })(sl, function () {
    return (function () {
      var n = {
          382: function (s, i, o) {
            Object.defineProperty(i, "__esModule", { value: !0 }),
              (i.Centrifuge = void 0);
            var u = p(o(187)),
              l = p(o(471)),
              c = o(147),
              d = o(853);
            function p(we) {
              return we && we.__esModule ? we : { default: we };
            }
            function m(we) {
              "@babel/helpers - typeof";
              return (
                typeof Symbol == "function" &&
                typeof Symbol.iterator == "symbol"
                  ? (m = function (Ce) {
                      return typeof Ce;
                    })
                  : (m = function (Ce) {
                      return Ce &&
                        typeof Symbol == "function" &&
                        Ce.constructor === Symbol &&
                        Ce !== Symbol.prototype
                        ? "symbol"
                        : typeof Ce;
                    }),
                m(we)
              );
            }
            function y(we, Te) {
              if (!(we instanceof Te))
                throw new TypeError("Cannot call a class as a function");
            }
            function I(we, Te) {
              for (var Ce = 0; Ce < Te.length; Ce++) {
                var Ee = Te[Ce];
                (Ee.enumerable = Ee.enumerable || !1),
                  (Ee.configurable = !0),
                  "value" in Ee && (Ee.writable = !0),
                  Object.defineProperty(we, Ee.key, Ee);
              }
            }
            function O(we, Te, Ce) {
              return Te && I(we.prototype, Te), Ce && I(we, Ce), we;
            }
            function g(we, Te) {
              if (typeof Te != "function" && Te !== null)
                throw new TypeError(
                  "Super expression must either be null or a function"
                );
              (we.prototype = Object.create(Te && Te.prototype, {
                constructor: { value: we, writable: !0, configurable: !0 },
              })),
                Te && C(we, Te);
            }
            function C(we, Te) {
              return (
                (C =
                  Object.setPrototypeOf ||
                  function (Ee, x) {
                    return (Ee.__proto__ = x), Ee;
                  }),
                C(we, Te)
              );
            }
            function H(we) {
              var Te = de();
              return function () {
                var Ee = U(we),
                  x;
                if (Te) {
                  var F = U(this).constructor;
                  x = Reflect.construct(Ee, arguments, F);
                } else x = Ee.apply(this, arguments);
                return B(this, x);
              };
            }
            function B(we, Te) {
              return Te && (m(Te) === "object" || typeof Te == "function")
                ? Te
                : he(we);
            }
            function he(we) {
              if (we === void 0)
                throw new ReferenceError(
                  "this hasn't been initialised - super() hasn't been called"
                );
              return we;
            }
            function de() {
              if (
                typeof Reflect > "u" ||
                !Reflect.construct ||
                Reflect.construct.sham
              )
                return !1;
              if (typeof Proxy == "function") return !0;
              try {
                return (
                  Date.prototype.toString.call(
                    Reflect.construct(Date, [], function () {})
                  ),
                  !0
                );
              } catch {
                return !1;
              }
            }
            function U(we) {
              return (
                (U = Object.setPrototypeOf
                  ? Object.getPrototypeOf
                  : function (Ce) {
                      return Ce.__proto__ || Object.getPrototypeOf(Ce);
                    }),
                U(we)
              );
            }
            var R = "timeout",
              ge = "connection closed",
              ve = (function (we) {
                g(Ce, we);
                var Te = H(Ce);
                function Ce(Ee, x) {
                  var F;
                  return (
                    y(this, Ce),
                    (F = Te.call(this)),
                    (F._url = Ee),
                    (F._websocket = null),
                    (F._sockjs = null),
                    (F._isSockjs = !1),
                    (F._binary = !1),
                    (F._methodType = null),
                    (F._pushType = null),
                    (F._encoder = null),
                    (F._decoder = null),
                    (F._status = "disconnected"),
                    (F._reconnect = !0),
                    (F._reconnecting = !1),
                    (F._transport = null),
                    (F._transportName = null),
                    (F._transportClosed = !0),
                    (F._messageId = 0),
                    (F._clientID = null),
                    (F._refreshRequired = !1),
                    (F._subs = {}),
                    (F._serverSubs = {}),
                    (F._lastSeq = {}),
                    (F._lastGen = {}),
                    (F._lastOffset = {}),
                    (F._lastEpoch = {}),
                    (F._messages = []),
                    (F._isBatching = !1),
                    (F._isSubscribeBatching = !1),
                    (F._privateChannels = {}),
                    (F._numRefreshFailed = 0),
                    (F._refreshTimeout = null),
                    (F._pingTimeout = null),
                    (F._pongTimeout = null),
                    (F._subRefreshTimeouts = {}),
                    (F._retries = 0),
                    (F._callbacks = {}),
                    (F._latency = null),
                    (F._latencyStart = null),
                    (F._connectData = null),
                    (F._token = null),
                    (F._xhrID = 0),
                    (F._xhrs = {}),
                    (F._dispatchPromise = Promise.resolve()),
                    (F._config = {
                      debug: !1,
                      name: "",
                      version: "",
                      websocket: null,
                      sockjs: null,
                      minRetry: 1e3,
                      maxRetry: 2e4,
                      timeout: 5e3,
                      ping: !0,
                      pingInterval: 25e3,
                      pongWaitTimeout: 5e3,
                      privateChannelPrefix: "$",
                      onTransportClose: null,
                      sockjsServer: null,
                      sockjsTransports: [
                        "websocket",
                        "xdr-streaming",
                        "xhr-streaming",
                        "eventsource",
                        "iframe-eventsource",
                        "iframe-htmlfile",
                        "xdr-polling",
                        "xhr-polling",
                        "iframe-xhr-polling",
                        "jsonp-polling",
                      ],
                      refreshEndpoint: "/centrifuge/refresh",
                      refreshHeaders: {},
                      refreshParams: {},
                      refreshData: {},
                      refreshAttempts: null,
                      refreshInterval: 1e3,
                      onRefreshFailed: null,
                      onRefresh: null,
                      subscribeEndpoint: "/centrifuge/subscribe",
                      subscribeHeaders: {},
                      subscribeParams: {},
                      subRefreshInterval: 1e3,
                      onPrivateSubscribe: null,
                    }),
                    F._configure(x),
                    F
                  );
                }
                return (
                  O(Ce, [
                    {
                      key: "setToken",
                      value: function (x) {
                        this._token = x;
                      },
                    },
                    {
                      key: "setConnectData",
                      value: function (x) {
                        this._connectData = x;
                      },
                    },
                    {
                      key: "setRefreshHeaders",
                      value: function (x) {
                        this._config.refreshHeaders = x;
                      },
                    },
                    {
                      key: "setRefreshParams",
                      value: function (x) {
                        this._config.refreshParams = x;
                      },
                    },
                    {
                      key: "setRefreshData",
                      value: function (x) {
                        this._config.refreshData = x;
                      },
                    },
                    {
                      key: "setSubscribeHeaders",
                      value: function (x) {
                        this._config.subscribeHeaders = x;
                      },
                    },
                    {
                      key: "setSubscribeParams",
                      value: function (x) {
                        this._config.subscribeParams = x;
                      },
                    },
                    {
                      key: "_ajax",
                      value: function (x, F, Se, ye, Ae) {
                        var De = this,
                          lt = "";
                        this._debug(
                          "sending AJAX request to",
                          x,
                          "with data",
                          JSON.stringify(ye)
                        );
                        var nt = o.g.XMLHttpRequest
                          ? new o.g.XMLHttpRequest()
                          : new o.g.ActiveXObject("Microsoft.XMLHTTP");
                        for (var L in F)
                          F.hasOwnProperty(L) &&
                            (lt.length > 0 && (lt += "&"),
                            (lt +=
                              encodeURIComponent(L) +
                              "=" +
                              encodeURIComponent(F[L])));
                        lt.length > 0 && (lt = "?" + lt),
                          nt.open("POST", x + lt, !0),
                          "withCredentials" in nt && (nt.withCredentials = !0),
                          nt.setRequestHeader(
                            "X-Requested-With",
                            "XMLHttpRequest"
                          ),
                          nt.setRequestHeader(
                            "Content-Type",
                            "application/json"
                          );
                        for (var M in Se)
                          Se.hasOwnProperty(M) && nt.setRequestHeader(M, Se[M]);
                        return (
                          (nt.onreadystatechange = function () {
                            if (nt.readyState === 4)
                              if (nt.status === 200) {
                                var me,
                                  K = !1;
                                try {
                                  (me = JSON.parse(nt.responseText)), (K = !0);
                                } catch {
                                  Ae({
                                    error:
                                      "Invalid JSON. Data was: " +
                                      nt.responseText,
                                    status: 200,
                                    data: null,
                                  });
                                }
                                K && Ae({ data: me, status: 200 });
                              } else
                                De._log(
                                  "wrong status code in AJAX response",
                                  nt.status
                                ),
                                  Ae({ status: nt.status, data: null });
                          }),
                          setTimeout(function () {
                            return nt.send(JSON.stringify(ye));
                          }, 20),
                          nt
                        );
                      },
                    },
                    {
                      key: "_log",
                      value: function () {
                        (0, d.log)("info", arguments);
                      },
                    },
                    {
                      key: "_debug",
                      value: function () {
                        this._config.debug === !0 &&
                          (0, d.log)("debug", arguments);
                      },
                    },
                    {
                      key: "_websocketSupported",
                      value: function () {
                        return this._config.websocket !== null
                          ? !0
                          : !(
                              typeof WebSocket != "function" &&
                              (typeof WebSocket > "u"
                                ? "undefined"
                                : m(WebSocket)) !== "object"
                            );
                      },
                    },
                    {
                      key: "_setFormat",
                      value: function (x) {
                        if (!this._formatOverride(x)) {
                          if (x === "protobuf")
                            throw new Error(
                              "not implemented by JSON only Centrifuge client – use client with Protobuf"
                            );
                          (this._binary = !1),
                            (this._methodType = c.JsonMethodType),
                            (this._pushType = c.JsonPushType),
                            (this._encoder = new c.JsonEncoder()),
                            (this._decoder = new c.JsonDecoder());
                        }
                      },
                    },
                    {
                      key: "_formatOverride",
                      value: function (x) {
                        return !1;
                      },
                    },
                    {
                      key: "_configure",
                      value: function (x) {
                        if (!("Promise" in o.g))
                          throw new Error("Promise polyfill required");
                        if (
                          ((0, d.extend)(this._config, x || {}),
                          this._debug("centrifuge config", this._config),
                          !this._url)
                        )
                          throw new Error("url required");
                        if (
                          ((0, d.startsWith)(this._url, "ws") &&
                          this._url.indexOf("format=protobuf") > -1
                            ? this._setFormat("protobuf")
                            : this._setFormat("json"),
                          (0, d.startsWith)(this._url, "http"))
                        )
                          if (
                            (this._debug(
                              "client will try to connect to SockJS endpoint"
                            ),
                            this._config.sockjs !== null)
                          )
                            this._debug(
                              "SockJS explicitly provided in options"
                            ),
                              (this._sockjs = this._config.sockjs);
                          else {
                            if (typeof o.g.SockJS > "u")
                              throw new Error(
                                "SockJS not found, use ws:// in url or include SockJS"
                              );
                            this._debug("use globally defined SockJS"),
                              (this._sockjs = o.g.SockJS);
                          }
                        else
                          this._debug(
                            "client will connect to websocket endpoint"
                          );
                      },
                    },
                    {
                      key: "_setStatus",
                      value: function (x) {
                        this._status !== x &&
                          (this._debug("Status", this._status, "->", x),
                          (this._status = x));
                      },
                    },
                    {
                      key: "_isDisconnected",
                      value: function () {
                        return this._status === "disconnected";
                      },
                    },
                    {
                      key: "_isConnecting",
                      value: function () {
                        return this._status === "connecting";
                      },
                    },
                    {
                      key: "_isConnected",
                      value: function () {
                        return this._status === "connected";
                      },
                    },
                    {
                      key: "_nextMessageId",
                      value: function () {
                        return ++this._messageId;
                      },
                    },
                    {
                      key: "_resetRetry",
                      value: function () {
                        this._debug("reset retries count to 0"),
                          (this._retries = 0);
                      },
                    },
                    {
                      key: "_getRetryInterval",
                      value: function () {
                        var x = (0, d.backoff)(
                          this._retries,
                          this._config.minRetry,
                          this._config.maxRetry
                        );
                        return (this._retries += 1), x;
                      },
                    },
                    {
                      key: "_abortInflightXHRs",
                      value: function () {
                        for (var x in this._xhrs) {
                          try {
                            this._xhrs[x].abort();
                          } catch (F) {
                            this._debug("error aborting xhr", F);
                          }
                          delete this._xhrs[x];
                        }
                      },
                    },
                    {
                      key: "_clearConnectedState",
                      value: function (x) {
                        (this._clientID = null), this._stopPing();
                        for (var F in this._callbacks)
                          if (this._callbacks.hasOwnProperty(F)) {
                            var Se = this._callbacks[F];
                            clearTimeout(Se.timeout);
                            var ye = Se.errback;
                            if (!ye) continue;
                            ye({
                              error: this._createErrorObject("disconnected"),
                            });
                          }
                        this._callbacks = {};
                        for (var Ae in this._subs)
                          if (this._subs.hasOwnProperty(Ae)) {
                            var De = this._subs[Ae];
                            x
                              ? (De._isSuccess() &&
                                  (De._triggerUnsubscribe(),
                                  (De._recover = !0)),
                                De._shouldResubscribe() && De._setSubscribing())
                              : De._setUnsubscribed();
                          }
                        this._abortInflightXHRs(),
                          this._refreshTimeout !== null &&
                            (clearTimeout(this._refreshTimeout),
                            (this._refreshTimeout = null));
                        for (var lt in this._subRefreshTimeouts)
                          this._subRefreshTimeouts.hasOwnProperty(lt) &&
                            this._subRefreshTimeouts[lt] &&
                            this._clearSubRefreshTimeout(lt);
                        (this._subRefreshTimeouts = {}),
                          this._reconnect || (this._subs = {});
                      },
                    },
                    {
                      key: "_isTransportOpen",
                      value: function () {
                        return this._isSockjs
                          ? this._transport &&
                              this._transport.transport &&
                              this._transport.transport.readyState ===
                                this._transport.transport.OPEN
                          : this._transport &&
                              this._transport.readyState ===
                                this._transport.OPEN;
                      },
                    },
                    {
                      key: "_transportSend",
                      value: function (x) {
                        if (!x.length) return !0;
                        if (!this._isTransportOpen()) {
                          for (var F in x) {
                            var Se = F.id;
                            if (Se in this._callbacks) {
                              var ye = this._callbacks[Se];
                              clearTimeout(this._callbacks[Se].timeout),
                                delete this._callbacks[Se];
                              var Ae = ye.errback;
                              Ae({ error: this._createErrorObject(ge, 0) });
                            }
                          }
                          return !1;
                        }
                        return (
                          this._transport.send(this._encoder.encodeCommands(x)),
                          !0
                        );
                      },
                    },
                    {
                      key: "_setupTransport",
                      value: function () {
                        var x = this;
                        if (((this._isSockjs = !1), this._sockjs !== null)) {
                          var F = { transports: this._config.sockjsTransports };
                          this._config.sockjsServer !== null &&
                            (F.server = this._config.sockjsServer),
                            (this._isSockjs = !0),
                            (this._transport = new this._sockjs(
                              this._url,
                              null,
                              F
                            ));
                        } else {
                          if (!this._websocketSupported()) {
                            this._debug(
                              "No Websocket support and no SockJS configured, can not connect"
                            );
                            return;
                          }
                          this._config.websocket !== null
                            ? (this._websocket = this._config.websocket)
                            : (this._websocket = WebSocket),
                            (this._transport = new this._websocket(this._url)),
                            this._binary === !0 &&
                              (this._transport.binaryType = "arraybuffer");
                        }
                        (this._transport.onopen = function () {
                          (x._transportClosed = !1),
                            x._isSockjs
                              ? ((x._transportName =
                                  "sockjs-" + x._transport.transport),
                                (x._transport.onheartbeat = function () {
                                  return x._restartPing();
                                }))
                              : (x._transportName = "websocket");
                          var Se = {};
                          (x._token ||
                            x._connectData ||
                            x._config.name ||
                            x._config.version) &&
                            (Se.params = {}),
                            x._token && (Se.params.token = x._token),
                            x._connectData && (Se.params.data = x._connectData),
                            x._config.name && (Se.params.name = x._config.name),
                            x._config.version &&
                              (Se.params.version = x._config.version);
                          var ye = {},
                            Ae = !1;
                          for (var De in x._serverSubs)
                            if (
                              x._serverSubs.hasOwnProperty(De) &&
                              x._serverSubs[De].recoverable
                            ) {
                              Ae = !0;
                              var lt = { recover: !0 };
                              x._serverSubs[De].seq || x._serverSubs[De].gen
                                ? (x._serverSubs[De].seq &&
                                    (lt.seq = x._serverSubs[De].seq),
                                  x._serverSubs[De].gen &&
                                    (lt.gen = x._serverSubs[De].gen))
                                : x._serverSubs[De].offset &&
                                  (lt.offset = x._serverSubs[De].offset),
                                x._serverSubs[De].epoch &&
                                  (lt.epoch = x._serverSubs[De].epoch),
                                (ye[De] = lt);
                            }
                          Ae &&
                            (Se.params || (Se.params = {}),
                            (Se.params.subs = ye)),
                            (x._latencyStart = new Date()),
                            x._call(Se).then(
                              function (nt) {
                                x._connectResponse(
                                  x._decoder.decodeCommandResult(
                                    x._methodType.CONNECT,
                                    nt.result
                                  ),
                                  Ae
                                ),
                                  nt.next && nt.next();
                              },
                              function (nt) {
                                var L = nt.error;
                                L.code === 109 && (x._refreshRequired = !0),
                                  x._disconnect("connect error", !0),
                                  nt.next && nt.next();
                              }
                            );
                        }),
                          (this._transport.onerror = function (Se) {
                            x._debug("transport level error", Se);
                          }),
                          (this._transport.onclose = function (Se) {
                            x._transportClosed = !0;
                            var ye = ge,
                              Ae = !0;
                            if (Se && "reason" in Se && Se.reason)
                              try {
                                var De = JSON.parse(Se.reason);
                                x._debug("reason is an advice object", De),
                                  (ye = De.reason),
                                  (Ae = De.reconnect);
                              } catch {
                                (ye = Se.reason),
                                  x._debug("reason is a plain string", ye);
                              }
                            if (
                              (x._config.onTransportClose !== null &&
                                x._config.onTransportClose({
                                  event: Se,
                                  reason: ye,
                                  reconnect: Ae,
                                }),
                              x._disconnect(ye, Ae),
                              x._reconnect === !0)
                            ) {
                              x._reconnecting = !0;
                              var lt = x._getRetryInterval();
                              x._debug(
                                "reconnect after " + lt + " milliseconds"
                              ),
                                setTimeout(function () {
                                  x._reconnect === !0 &&
                                    (x._refreshRequired
                                      ? x._refresh()
                                      : x._connect());
                                }, lt);
                            }
                          }),
                          (this._transport.onmessage = function (Se) {
                            x._dataReceived(Se.data);
                          });
                      },
                    },
                    {
                      key: "rpc",
                      value: function (x) {
                        return this._rpc("", x);
                      },
                    },
                    {
                      key: "namedRPC",
                      value: function (x, F) {
                        return this._rpc(x, F);
                      },
                    },
                    {
                      key: "_rpc",
                      value: function (x, F) {
                        var Se = { data: F };
                        x !== "" && (Se.method = x);
                        var ye = { method: this._methodType.RPC, params: Se };
                        return this._methodCall(ye, function (Ae) {
                          return Ae;
                        });
                      },
                    },
                    {
                      key: "send",
                      value: function (x) {
                        var F = {
                          method: this._methodType.SEND,
                          params: { data: x },
                        };
                        if (!this.isConnected())
                          return Promise.reject(this._createErrorObject(ge, 0));
                        var Se = this._transportSend([F]);
                        return Se
                          ? Promise.resolve({})
                          : Promise.reject(this._createErrorObject(ge, 0));
                      },
                    },
                    {
                      key: "_getHistoryParams",
                      value: function (x, F) {
                        var Se = { channel: x };
                        return (
                          F !== void 0 &&
                            (F.since &&
                              ((Se.use_since = !0),
                              F.since.offset && (Se.offset = F.since.offset),
                              F.since.epoch && (Se.epoch = F.since.epoch)),
                            F.limit !== void 0 &&
                              ((Se.use_limit = !0), (Se.limit = F.limit))),
                          Se
                        );
                      },
                    },
                    {
                      key: "_methodCall",
                      value: function (x, F) {
                        var Se = this;
                        return this.isConnected()
                          ? new Promise(function (ye, Ae) {
                              Se._call(x).then(
                                function (De) {
                                  ye(
                                    F(
                                      Se._decoder.decodeCommandResult(
                                        x.method,
                                        De.result
                                      )
                                    )
                                  ),
                                    De.next && De.next();
                                },
                                function (De) {
                                  Ae(De.error), De.next && De.next();
                                }
                              );
                            })
                          : Promise.reject(this._createErrorObject(ge, 0));
                      },
                    },
                    {
                      key: "publish",
                      value: function (x, F) {
                        var Se = {
                          method: this._methodType.PUBLISH,
                          params: { channel: x, data: F },
                        };
                        return this._methodCall(Se, function () {
                          return {};
                        });
                      },
                    },
                    {
                      key: "history",
                      value: function (x, F) {
                        var Se = this._getHistoryParams(x, F),
                          ye = { method: this._methodType.HISTORY, params: Se };
                        return this._methodCall(ye, function (Ae) {
                          return {
                            publications: Ae.publications,
                            epoch: Ae.epoch || "",
                            offset: Ae.offset || 0,
                          };
                        });
                      },
                    },
                    {
                      key: "presence",
                      value: function (x) {
                        var F = {
                          method: this._methodType.PRESENCE,
                          params: { channel: x },
                        };
                        return this._methodCall(F, function (Se) {
                          return { presence: Se.presence };
                        });
                      },
                    },
                    {
                      key: "presenceStats",
                      value: function (x) {
                        var F = {
                          method: this._methodType.PRESENCE_STATS,
                          params: { channel: x },
                        };
                        return this._methodCall(F, function (Se) {
                          return {
                            num_users: Se.num_users,
                            num_clients: Se.num_clients,
                          };
                        });
                      },
                    },
                    {
                      key: "_dataReceived",
                      value: function (x) {
                        var F = this,
                          Se = this._decoder.decodeReplies(x);
                        (this._dispatchPromise = this._dispatchPromise.then(
                          function () {
                            var ye;
                            (F._dispatchPromise = new Promise(function (Ae) {
                              ye = Ae;
                            })),
                              F._dispatchSynchronized(Se, ye);
                          }
                        )),
                          this._restartPing();
                      },
                    },
                    {
                      key: "_dispatchSynchronized",
                      value: function (x, F) {
                        var Se = this,
                          ye = Promise.resolve(),
                          Ae = function (nt) {
                            x.hasOwnProperty(nt) &&
                              (ye = ye.then(function () {
                                return Se._dispatchReply(x[nt]);
                              }));
                          };
                        for (var De in x) Ae(De);
                        ye = ye.then(function () {
                          F();
                        });
                      },
                    },
                    {
                      key: "_dispatchReply",
                      value: function (x) {
                        var F,
                          Se = new Promise(function (Ae) {
                            F = Ae;
                          });
                        if (x == null)
                          return (
                            this._debug(
                              "dispatch: got undefined or null reply"
                            ),
                            F(),
                            Se
                          );
                        var ye = x.id;
                        return (
                          ye && ye > 0
                            ? this._handleReply(x, F)
                            : this._handlePush(x.result, F),
                          Se
                        );
                      },
                    },
                    {
                      key: "_call",
                      value: function (x) {
                        var F = this;
                        return new Promise(function (Se, ye) {
                          var Ae = F._addMessage(x);
                          F._registerCall(Ae, Se, ye);
                        });
                      },
                    },
                    {
                      key: "_connect",
                      value: function () {
                        if (this.isConnected()) {
                          this._debug("connect called when already connected");
                          return;
                        }
                        this._status !== "connecting" &&
                          (this._debug("start connecting"),
                          this._setStatus("connecting"),
                          (this._clientID = null),
                          (this._reconnect = !0),
                          this._setupTransport());
                      },
                    },
                    {
                      key: "_disconnect",
                      value: function (x, F) {
                        var Se = F || !1;
                        if (
                          (Se === !1 && (this._reconnect = !1),
                          this._isDisconnected())
                        ) {
                          Se || this._clearConnectedState(Se);
                          return;
                        }
                        if (
                          (this._clearConnectedState(Se),
                          this._debug("disconnected:", x, F),
                          this._setStatus("disconnected"),
                          this._refreshTimeout &&
                            (clearTimeout(this._refreshTimeout),
                            (this._refreshTimeout = null)),
                          this._reconnecting === !1)
                        ) {
                          for (var ye in this._serverSubs)
                            this._serverSubs.hasOwnProperty(ye) &&
                              this.emit("unsubscribe", { channel: ye });
                          this.emit("disconnect", { reason: x, reconnect: Se });
                        }
                        Se === !1 &&
                          ((this._subs = {}), (this._serverSubs = {})),
                          this._transportClosed || this._transport.close();
                      },
                    },
                    {
                      key: "_refreshFailed",
                      value: function () {
                        (this._numRefreshFailed = 0),
                          this._isDisconnected() ||
                            this._disconnect("refresh failed", !1),
                          this._config.onRefreshFailed !== null &&
                            this._config.onRefreshFailed();
                      },
                    },
                    {
                      key: "_refresh",
                      value: function () {
                        var x = this;
                        if (
                          (this._debug("refresh token"),
                          this._config.refreshAttempts === 0)
                        ) {
                          this._debug(
                            "refresh attempts set to 0, do not send refresh request at all"
                          ),
                            this._refreshFailed();
                          return;
                        }
                        this._refreshTimeout !== null &&
                          (clearTimeout(this._refreshTimeout),
                          (this._refreshTimeout = null));
                        var F = this._clientID,
                          Se = this._newXHRID(),
                          ye = function (nt) {
                            if (
                              (Se in x._xhrs && delete x._xhrs[Se],
                              x._clientID === F)
                            ) {
                              if (nt.error || nt.status !== 200) {
                                if (
                                  (nt.error
                                    ? x._debug(
                                        "error refreshing connection token",
                                        nt.error
                                      )
                                    : x._debug(
                                        "error refreshing connection token: wrong status code",
                                        nt.status
                                      ),
                                  x._numRefreshFailed++,
                                  x._refreshTimeout !== null &&
                                    (clearTimeout(x._refreshTimeout),
                                    (x._refreshTimeout = null)),
                                  x._config.refreshAttempts !== null &&
                                    x._numRefreshFailed >=
                                      x._config.refreshAttempts)
                                ) {
                                  x._refreshFailed();
                                  return;
                                }
                                var L = Math.round(
                                    Math.random() *
                                      1e3 *
                                      Math.max(x._numRefreshFailed, 20)
                                  ),
                                  M = x._config.refreshInterval + L;
                                x._refreshTimeout = setTimeout(function () {
                                  return x._refresh();
                                }, M);
                                return;
                              }
                              if (
                                ((x._numRefreshFailed = 0),
                                (x._token = nt.data.token),
                                !x._token)
                              ) {
                                x._refreshFailed();
                                return;
                              }
                              if (x._isDisconnected() && x._reconnect)
                                x._debug(
                                  "token refreshed, connect from scratch"
                                ),
                                  x._connect();
                              else {
                                x._debug("send refreshed token");
                                var me = {
                                  method: x._methodType.REFRESH,
                                  params: { token: x._token },
                                };
                                x._call(me).then(
                                  function (K) {
                                    x._refreshResponse(
                                      x._decoder.decodeCommandResult(
                                        x._methodType.REFRESH,
                                        K.result
                                      )
                                    ),
                                      K.next && K.next();
                                  },
                                  function (K) {
                                    x._refreshError(K.error),
                                      K.next && K.next();
                                  }
                                );
                              }
                            }
                          };
                        if (this._config.onRefresh !== null) {
                          var Ae = {};
                          this._config.onRefresh(Ae, ye);
                        } else {
                          var De = this._ajax(
                            this._config.refreshEndpoint,
                            this._config.refreshParams,
                            this._config.refreshHeaders,
                            this._config.refreshData,
                            ye
                          );
                          this._xhrs[Se] = De;
                        }
                      },
                    },
                    {
                      key: "_refreshError",
                      value: function (x) {
                        var F = this;
                        this._debug("refresh error", x),
                          this._refreshTimeout &&
                            (clearTimeout(this._refreshTimeout),
                            (this._refreshTimeout = null));
                        var Se =
                          this._config.refreshInterval +
                          Math.round(Math.random() * 1e3);
                        this._refreshTimeout = setTimeout(function () {
                          return F._refresh();
                        }, Se);
                      },
                    },
                    {
                      key: "_refreshResponse",
                      value: function (x) {
                        var F = this;
                        this._refreshTimeout &&
                          (clearTimeout(this._refreshTimeout),
                          (this._refreshTimeout = null)),
                          x.expires &&
                            ((this._clientID = x.client),
                            (this._refreshTimeout = setTimeout(function () {
                              return F._refresh();
                            }, this._getTTLMilliseconds(x.ttl))));
                      },
                    },
                    {
                      key: "_newXHRID",
                      value: function () {
                        return this._xhrID++, this._xhrID;
                      },
                    },
                    {
                      key: "_subRefresh",
                      value: function (x) {
                        var F = this;
                        if (
                          (this._debug(
                            "refresh subscription token for channel",
                            x
                          ),
                          this._subRefreshTimeouts[x] !== void 0)
                        )
                          this._clearSubRefreshTimeout(x);
                        else return;
                        var Se = this._clientID,
                          ye = this._newXHRID(),
                          Ae = function (L) {
                            if (
                              (ye in F._xhrs && delete F._xhrs[ye],
                              !(
                                L.error ||
                                L.status !== 200 ||
                                F._clientID !== Se
                              ))
                            ) {
                              var M = {};
                              if (L.data.channels)
                                for (var me in L.data.channels) {
                                  var K = L.data.channels[me];
                                  K.channel && (M[K.channel] = K.token);
                                }
                              var Ge = M[x];
                              if (Ge) {
                                var Ke = {
                                    method: F._methodType.SUB_REFRESH,
                                    params: { channel: x, token: Ge },
                                  },
                                  Re = F._getSub(x);
                                Re !== null &&
                                  F._call(Ke).then(
                                    function (it) {
                                      F._subRefreshResponse(
                                        x,
                                        F._decoder.decodeCommandResult(
                                          F._methodType.SUB_REFRESH,
                                          it.result
                                        )
                                      ),
                                        it.next && it.next();
                                    },
                                    function (it) {
                                      F._subRefreshError(x, it.error),
                                        it.next && it.next();
                                    }
                                  );
                              }
                            }
                          },
                          De = { client: this._clientID, channels: [x] };
                        if (this._config.onPrivateSubscribe !== null)
                          this._config.onPrivateSubscribe({ data: De }, Ae);
                        else {
                          var lt = this._ajax(
                            this._config.subscribeEndpoint,
                            this._config.subscribeParams,
                            this._config.subscribeHeaders,
                            De,
                            Ae
                          );
                          this._xhrs[ye] = lt;
                        }
                      },
                    },
                    {
                      key: "_clearSubRefreshTimeout",
                      value: function (x) {
                        this._subRefreshTimeouts[x] !== void 0 &&
                          (clearTimeout(this._subRefreshTimeouts[x]),
                          delete this._subRefreshTimeouts[x]);
                      },
                    },
                    {
                      key: "_subRefreshError",
                      value: function (x, F) {
                        var Se = this;
                        this._debug("subscription refresh error", x, F),
                          this._clearSubRefreshTimeout(x);
                        var ye = this._getSub(x);
                        if (ye !== null) {
                          var Ae = Math.round(Math.random() * 1e3),
                            De = setTimeout(function () {
                              return Se._subRefresh(x);
                            }, this._config.subRefreshInterval + Ae);
                          this._subRefreshTimeouts[x] = De;
                        }
                      },
                    },
                    {
                      key: "_subRefreshResponse",
                      value: function (x, F) {
                        var Se = this;
                        this._debug("subscription refresh success", x),
                          this._clearSubRefreshTimeout(x);
                        var ye = this._getSub(x);
                        if (ye !== null && F.expires === !0) {
                          var Ae = setTimeout(function () {
                            return Se._subRefresh(x);
                          }, this._getTTLMilliseconds(F.ttl));
                          this._subRefreshTimeouts[x] = Ae;
                        }
                      },
                    },
                    {
                      key: "_subscribe",
                      value: function (x, F) {
                        var Se = this;
                        this._debug("subscribing on", x.channel);
                        var ye = x.channel;
                        if (
                          (ye in this._subs || (this._subs[ye] = x),
                          !this.isConnected())
                        ) {
                          x._setNew();
                          return;
                        }
                        x._setSubscribing(F);
                        var Ae = {
                          method: this._methodType.SUBSCRIBE,
                          params: { channel: ye },
                        };
                        if (
                          (0, d.startsWith)(
                            ye,
                            this._config.privateChannelPrefix
                          )
                        )
                          this._isSubscribeBatching
                            ? (this._privateChannels[ye] = !0)
                            : (this.startSubscribeBatching(),
                              this._subscribe(x),
                              this.stopSubscribeBatching());
                        else {
                          var De = x._needRecover();
                          if (De === !0) {
                            Ae.params.recover = !0;
                            var lt = this._getLastSeq(ye),
                              nt = this._getLastGen(ye);
                            if (lt || nt)
                              lt && (Ae.params.seq = lt),
                                nt && (Ae.params.gen = nt);
                            else {
                              var L = this._getLastOffset(ye);
                              L && (Ae.params.offset = L);
                            }
                            var M = this._getLastEpoch(ye);
                            M && (Ae.params.epoch = M);
                          }
                          this._call(Ae).then(
                            function (me) {
                              Se._subscribeResponse(
                                ye,
                                De,
                                Se._decoder.decodeCommandResult(
                                  Se._methodType.SUBSCRIBE,
                                  me.result
                                )
                              ),
                                me.next && me.next();
                            },
                            function (me) {
                              Se._subscribeError(ye, me.error),
                                me.next && me.next();
                            }
                          );
                        }
                      },
                    },
                    {
                      key: "_unsubscribe",
                      value: function (x) {
                        delete this._subs[x.channel],
                          delete this._lastOffset[x.channel],
                          delete this._lastSeq[x.channel],
                          delete this._lastGen[x.channel],
                          this.isConnected() &&
                            this._addMessage({
                              method: this._methodType.UNSUBSCRIBE,
                              params: { channel: x.channel },
                            });
                      },
                    },
                    {
                      key: "_getTTLMilliseconds",
                      value: function (x) {
                        return Math.min(x * 1e3, 2147483647);
                      },
                    },
                    {
                      key: "getSub",
                      value: function (x) {
                        return this._getSub(x);
                      },
                    },
                    {
                      key: "_getSub",
                      value: function (x) {
                        var F = this._subs[x];
                        return F || null;
                      },
                    },
                    {
                      key: "_isServerSub",
                      value: function (x) {
                        return this._serverSubs[x] !== void 0;
                      },
                    },
                    {
                      key: "_connectResponse",
                      value: function (x, F) {
                        var Se = this,
                          ye = this._reconnecting;
                        if (
                          ((this._reconnecting = !1),
                          this._resetRetry(),
                          (this._refreshRequired = !1),
                          !this.isConnected())
                        ) {
                          this._latencyStart !== null &&
                            ((this._latency =
                              new Date().getTime() -
                              this._latencyStart.getTime()),
                            (this._latencyStart = null)),
                            (this._clientID = x.client),
                            this._setStatus("connected"),
                            this._refreshTimeout &&
                              clearTimeout(this._refreshTimeout),
                            x.expires &&
                              (this._refreshTimeout = setTimeout(function () {
                                return Se._refresh();
                              }, this._getTTLMilliseconds(x.ttl))),
                            this.startBatching(),
                            this.startSubscribeBatching();
                          for (var Ae in this._subs)
                            if (this._subs.hasOwnProperty(Ae)) {
                              var De = this._subs[Ae];
                              De._shouldResubscribe() &&
                                this._subscribe(De, ye);
                            }
                          this.stopSubscribeBatching(),
                            this.stopBatching(),
                            this._startPing();
                          var lt = {
                            client: x.client,
                            transport: this._transportName,
                            latency: this._latency,
                          };
                          x.data && (lt.data = x.data),
                            this.emit("connect", lt),
                            x.subs && this._processServerSubs(x.subs);
                        }
                      },
                    },
                    {
                      key: "_processServerSubs",
                      value: function (x) {
                        for (var F in x)
                          if (x.hasOwnProperty(F)) {
                            var Se = x[F],
                              ye = this._serverSubs[F] !== void 0,
                              Ae = { channel: F, isResubscribe: ye };
                            (Ae = this._expandSubscribeContext(Ae, Se)),
                              this.emit("subscribe", Ae);
                          }
                        for (var De in x)
                          if (x.hasOwnProperty(De)) {
                            var lt = x[De];
                            if (lt.recovered) {
                              var nt = lt.publications;
                              if (nt && nt.length > 0) {
                                nt.length > 1 &&
                                  (!nt[0].offset ||
                                    nt[0].offset > nt[1].offset) &&
                                  (nt = nt.reverse());
                                for (var L in nt)
                                  nt.hasOwnProperty(L) &&
                                    this._handlePublication(De, nt[L]);
                              }
                            }
                            this._serverSubs[De] = {
                              seq: lt.seq,
                              gen: lt.gen,
                              offset: lt.offset,
                              epoch: lt.epoch,
                              recoverable: lt.recoverable,
                            };
                          }
                      },
                    },
                    {
                      key: "_stopPing",
                      value: function () {
                        this._pongTimeout !== null &&
                          (clearTimeout(this._pongTimeout),
                          (this._pongTimeout = null)),
                          this._pingTimeout !== null &&
                            (clearTimeout(this._pingTimeout),
                            (this._pingTimeout = null));
                      },
                    },
                    {
                      key: "_startPing",
                      value: function () {
                        var x = this;
                        this._config.ping !== !0 ||
                          this._config.pingInterval <= 0 ||
                          (this.isConnected() &&
                            (this._pingTimeout = setTimeout(function () {
                              if (!x.isConnected()) {
                                x._stopPing();
                                return;
                              }
                              x.ping(),
                                (x._pongTimeout = setTimeout(function () {
                                  x._disconnect("no ping", !0);
                                }, x._config.pongWaitTimeout));
                            }, this._config.pingInterval)));
                      },
                    },
                    {
                      key: "_restartPing",
                      value: function () {
                        this._stopPing(), this._startPing();
                      },
                    },
                    {
                      key: "_subscribeError",
                      value: function (x, F) {
                        var Se = this._getSub(x);
                        if (Se && Se._isSubscribing()) {
                          if (F.code === 0 && F.message === R) {
                            this._disconnect("timeout", !0);
                            return;
                          }
                          Se._setSubscribeError(F);
                        }
                      },
                    },
                    {
                      key: "_expandSubscribeContext",
                      value: function (x, F) {
                        var Se = !1;
                        "recovered" in F && (Se = F.recovered),
                          (x.recovered = Se);
                        var ye = !1;
                        "positioned" in F && (ye = F.positioned);
                        var Ae = "";
                        "epoch" in F && (Ae = F.epoch);
                        var De = 0;
                        return (
                          "offset" in F && (De = F.offset),
                          ye && (x.streamPosition = { offset: De, epoch: Ae }),
                          F.data && (x.data = F.data),
                          x
                        );
                      },
                    },
                    {
                      key: "_subscribeResponse",
                      value: function (x, F, Se) {
                        var ye = this,
                          Ae = this._getSub(x);
                        if (Ae && Ae._isSubscribing()) {
                          Ae._setSubscribeSuccess(Se);
                          var De = Se.publications;
                          if (De && De.length > 0) {
                            De.length >= 2 &&
                              !De[0].offset &&
                              !De[1].offset &&
                              (De = De.reverse());
                            for (var lt in De)
                              De.hasOwnProperty(lt) &&
                                this._handlePublication(x, De[lt]);
                          }
                          if (
                            (Se.recoverable &&
                              (!F || !Se.recovered) &&
                              ((this._lastSeq[x] = Se.seq || 0),
                              (this._lastGen[x] = Se.gen || 0),
                              (this._lastOffset[x] = Se.offset || 0)),
                            (this._lastEpoch[x] = Se.epoch || ""),
                            Se.recoverable && (Ae._recoverable = !0),
                            Se.expires === !0)
                          ) {
                            var nt = setTimeout(function () {
                              return ye._subRefresh(x);
                            }, this._getTTLMilliseconds(Se.ttl));
                            this._subRefreshTimeouts[x] = nt;
                          }
                        }
                      },
                    },
                    {
                      key: "_handleReply",
                      value: function (x, F) {
                        var Se = x.id,
                          ye = x.result;
                        if (!(Se in this._callbacks)) {
                          F();
                          return;
                        }
                        var Ae = this._callbacks[Se];
                        if (
                          (clearTimeout(this._callbacks[Se].timeout),
                          delete this._callbacks[Se],
                          (0, d.errorExists)(x))
                        ) {
                          var lt = Ae.errback;
                          if (!lt) {
                            F();
                            return;
                          }
                          var nt = x.error;
                          lt({ error: nt, next: F });
                        } else {
                          var De = Ae.callback;
                          if (!De) return;
                          De({ result: ye, next: F });
                        }
                      },
                    },
                    {
                      key: "_handleJoin",
                      value: function (x, F) {
                        var Se = { info: F.info },
                          ye = this._getSub(x);
                        if (!ye) {
                          this._isServerSub(x) &&
                            ((Se.channel = x), this.emit("join", Se));
                          return;
                        }
                        ye.emit("join", Se);
                      },
                    },
                    {
                      key: "_handleLeave",
                      value: function (x, F) {
                        var Se = { info: F.info },
                          ye = this._getSub(x);
                        if (!ye) {
                          this._isServerSub(x) &&
                            ((Se.channel = x), this.emit("leave", Se));
                          return;
                        }
                        ye.emit("leave", Se);
                      },
                    },
                    {
                      key: "_handleUnsub",
                      value: function (x, F) {
                        var Se = {},
                          ye = this._getSub(x);
                        if (!ye) {
                          this._isServerSub(x) &&
                            (delete this._serverSubs[x],
                            (Se.channel = x),
                            this.emit("unsubscribe", Se));
                          return;
                        }
                        ye.unsubscribe(),
                          F.resubscribe === !0 && ye.subscribe();
                      },
                    },
                    {
                      key: "_handleSub",
                      value: function (x, F) {
                        this._serverSubs[x] = {
                          seq: F.seq,
                          gen: F.gen,
                          offset: F.offset,
                          epoch: F.epoch,
                          recoverable: F.recoverable,
                        };
                        var Se = { channel: x, isResubscribe: !1 };
                        (Se = this._expandSubscribeContext(Se, F)),
                          this.emit("subscribe", Se);
                      },
                    },
                    {
                      key: "_handlePublication",
                      value: function (x, F) {
                        var Se = this._getSub(x),
                          ye = {
                            data: F.data,
                            seq: F.seq,
                            gen: F.gen,
                            offset: F.offset,
                          };
                        if ((F.info && (ye.info = F.info), !Se)) {
                          this._isServerSub(x) &&
                            (F.seq !== void 0 &&
                              (this._serverSubs[x].seq = F.seq),
                            F.gen !== void 0 &&
                              (this._serverSubs[x].gen = F.gen),
                            F.offset !== void 0 &&
                              (this._serverSubs[x].offset = F.offset),
                            (ye.channel = x),
                            this.emit("publish", ye));
                          return;
                        }
                        F.seq !== void 0 && (this._lastSeq[x] = F.seq),
                          F.gen !== void 0 && (this._lastGen[x] = F.gen),
                          F.offset !== void 0 &&
                            (this._lastOffset[x] = F.offset),
                          Se.emit("publish", ye);
                      },
                    },
                    {
                      key: "_handleMessage",
                      value: function (x) {
                        this.emit("message", x.data);
                      },
                    },
                    {
                      key: "_handlePush",
                      value: function (x, F) {
                        var Se = this._decoder.decodePush(x),
                          ye = 0;
                        "type" in Se && (ye = Se.type);
                        var Ae = Se.channel;
                        if (ye === this._pushType.PUBLICATION) {
                          var De = this._decoder.decodePushData(
                            this._pushType.PUBLICATION,
                            Se.data
                          );
                          this._handlePublication(Ae, De);
                        } else if (ye === this._pushType.MESSAGE) {
                          var lt = this._decoder.decodePushData(
                            this._pushType.MESSAGE,
                            Se.data
                          );
                          this._handleMessage(lt);
                        } else if (ye === this._pushType.JOIN) {
                          var nt = this._decoder.decodePushData(
                            this._pushType.JOIN,
                            Se.data
                          );
                          this._handleJoin(Ae, nt);
                        } else if (ye === this._pushType.LEAVE) {
                          var L = this._decoder.decodePushData(
                            this._pushType.LEAVE,
                            Se.data
                          );
                          this._handleLeave(Ae, L);
                        } else if (ye === this._pushType.UNSUB) {
                          var M = this._decoder.decodePushData(
                            this._pushType.UNSUB,
                            Se.data
                          );
                          this._handleUnsub(Ae, M);
                        } else if (ye === this._pushType.SUB) {
                          var me = this._decoder.decodePushData(
                            this._pushType.SUB,
                            Se.data
                          );
                          this._handleSub(Ae, me);
                        }
                        F();
                      },
                    },
                    {
                      key: "_flush",
                      value: function () {
                        var x = this._messages.slice(0);
                        (this._messages = []), this._transportSend(x);
                      },
                    },
                    {
                      key: "_ping",
                      value: function () {
                        var x = this,
                          F = { method: this._methodType.PING };
                        this._call(F).then(
                          function (Se) {
                            x._pingResponse(
                              x._decoder.decodeCommandResult(
                                x._methodType.PING,
                                Se.result
                              )
                            ),
                              Se.next && Se.next();
                          },
                          function (Se) {
                            x._debug("ping error", Se.error),
                              Se.next && Se.next();
                          }
                        );
                      },
                    },
                    {
                      key: "_pingResponse",
                      value: function (x) {
                        this.isConnected() &&
                          (this._stopPing(), this._startPing());
                      },
                    },
                    {
                      key: "_getLastSeq",
                      value: function (x) {
                        var F = this._lastSeq[x];
                        return F || 0;
                      },
                    },
                    {
                      key: "_getLastOffset",
                      value: function (x) {
                        var F = this._lastOffset[x];
                        return F || 0;
                      },
                    },
                    {
                      key: "_getLastGen",
                      value: function (x) {
                        var F = this._lastGen[x];
                        return F || 0;
                      },
                    },
                    {
                      key: "_getLastEpoch",
                      value: function (x) {
                        var F = this._lastEpoch[x];
                        return F || "";
                      },
                    },
                    {
                      key: "_createErrorObject",
                      value: function (x, F) {
                        var Se = { message: x, code: F || 0 };
                        return Se;
                      },
                    },
                    {
                      key: "_registerCall",
                      value: function (x, F, Se) {
                        var ye = this;
                        (this._callbacks[x] = {
                          callback: F,
                          errback: Se,
                          timeout: null,
                        }),
                          (this._callbacks[x].timeout = setTimeout(function () {
                            delete ye._callbacks[x],
                              (0, d.isFunction)(Se) &&
                                Se({ error: ye._createErrorObject(R) });
                          }, this._config.timeout));
                      },
                    },
                    {
                      key: "_addMessage",
                      value: function (x) {
                        var F = this._nextMessageId();
                        return (
                          (x.id = F),
                          this._isBatching === !0
                            ? this._messages.push(x)
                            : this._transportSend([x]),
                          F
                        );
                      },
                    },
                    {
                      key: "isConnected",
                      value: function () {
                        return this._isConnected();
                      },
                    },
                    {
                      key: "connect",
                      value: function () {
                        this._connect();
                      },
                    },
                    {
                      key: "disconnect",
                      value: function () {
                        this._disconnect("client", !1);
                      },
                    },
                    {
                      key: "ping",
                      value: function () {
                        return this._ping();
                      },
                    },
                    {
                      key: "startBatching",
                      value: function () {
                        this._isBatching = !0;
                      },
                    },
                    {
                      key: "stopBatching",
                      value: function () {
                        (this._isBatching = !1), this._flush();
                      },
                    },
                    {
                      key: "startSubscribeBatching",
                      value: function () {
                        this._isSubscribeBatching = !0;
                      },
                    },
                    {
                      key: "stopSubscribeBatching",
                      value: function () {
                        var x = this;
                        this._isSubscribeBatching = !1;
                        var F = this._privateChannels;
                        this._privateChannels = {};
                        var Se = [];
                        for (var ye in F)
                          if (F.hasOwnProperty(ye)) {
                            var Ae = this._getSub(ye);
                            if (!Ae) continue;
                            Se.push(ye);
                          }
                        if (Se.length === 0) {
                          this._debug(
                            "no private channels found, no need to make request"
                          );
                          return;
                        }
                        var De = { client: this._clientID, channels: Se },
                          lt = this._clientID,
                          nt = this._newXHRID(),
                          L = function (K) {
                            if (
                              (nt in x._xhrs && delete x._xhrs[nt],
                              x._clientID === lt)
                            ) {
                              if (K.error || K.status !== 200) {
                                x._debug("authorization request failed");
                                for (var Ge in Se)
                                  if (Se.hasOwnProperty(Ge)) {
                                    var Ke = Se[Ge];
                                    x._subscribeError(
                                      Ke,
                                      x._createErrorObject(
                                        "authorization request failed"
                                      )
                                    );
                                  }
                                return;
                              }
                              var Re = {};
                              if (K.data.channels)
                                for (var it in K.data.channels) {
                                  var Qe = K.data.channels[it];
                                  Qe.channel && (Re[Qe.channel] = Qe.token);
                                }
                              var ct = !1;
                              x._isBatching || (x.startBatching(), (ct = !0));
                              for (var ot in Se)
                                if (Se.hasOwnProperty(ot)) {
                                  var rt = (function () {
                                    var gt = Se[ot],
                                      Mt = Re[gt];
                                    if (Mt) {
                                      var at = {
                                          method: x._methodType.SUBSCRIBE,
                                          params: { channel: gt, token: Mt },
                                        },
                                        Dt = x._getSub(gt);
                                      if (Dt === null) return "continue";
                                      var pt = Dt._needRecover();
                                      if (pt === !0) {
                                        at.params.recover = !0;
                                        var Xt = x._getLastSeq(gt),
                                          It = x._getLastGen(gt);
                                        if (Xt || It)
                                          Xt && (at.params.seq = Xt),
                                            It && (at.params.gen = It);
                                        else {
                                          var bt = x._getLastOffset(gt);
                                          bt && (at.params.offset = bt);
                                        }
                                        var yt = x._getLastEpoch(gt);
                                        yt && (at.params.epoch = yt);
                                      }
                                      x._call(at).then(
                                        function (tn) {
                                          x._subscribeResponse(
                                            gt,
                                            pt,
                                            x._decoder.decodeCommandResult(
                                              x._methodType.SUBSCRIBE,
                                              tn.result
                                            )
                                          ),
                                            tn.next && tn.next();
                                        },
                                        function (tn) {
                                          x._subscribeError(gt, tn.error),
                                            tn.next && tn.next();
                                        }
                                      );
                                    } else
                                      return (
                                        x._subscribeError(
                                          gt,
                                          x._createErrorObject(
                                            "permission denied",
                                            103
                                          )
                                        ),
                                        "continue"
                                      );
                                  })();
                                  if (rt === "continue") continue;
                                }
                              ct && x.stopBatching();
                            }
                          };
                        if (this._config.onPrivateSubscribe !== null)
                          this._config.onPrivateSubscribe({ data: De }, L);
                        else {
                          var M = this._ajax(
                            this._config.subscribeEndpoint,
                            this._config.subscribeParams,
                            this._config.subscribeHeaders,
                            De,
                            L
                          );
                          this._xhrs[nt] = M;
                        }
                      },
                    },
                    {
                      key: "subscribe",
                      value: function (x, F) {
                        var Se = this._getSub(x);
                        if (Se !== null)
                          return (
                            Se._setEvents(F),
                            Se._isUnsubscribed() && Se.subscribe(),
                            Se
                          );
                        var ye = new l.default(this, x, F);
                        return (this._subs[x] = ye), ye.subscribe(), ye;
                      },
                    },
                  ]),
                  Ce
                );
              })(u.default);
            i.Centrifuge = ve;
          },
          579: function (s, i, o) {
            Object.defineProperty(i, "__esModule", { value: !0 }),
              (i.default = void 0);
            var u = o(382),
              l = u.Centrifuge;
            (i.default = l), (s.exports = i.default);
          },
          147: function (s, i) {
            Object.defineProperty(i, "__esModule", { value: !0 }),
              (i.JsonDecoder =
                i.JsonEncoder =
                i.JsonPushType =
                i.JsonMethodType =
                  void 0);
            function o(y, I) {
              if (!(y instanceof I))
                throw new TypeError("Cannot call a class as a function");
            }
            function u(y, I) {
              for (var O = 0; O < I.length; O++) {
                var g = I[O];
                (g.enumerable = g.enumerable || !1),
                  (g.configurable = !0),
                  "value" in g && (g.writable = !0),
                  Object.defineProperty(y, g.key, g);
              }
            }
            function l(y, I, O) {
              return I && u(y.prototype, I), O && u(y, O), y;
            }
            var c = {
              CONNECT: 0,
              SUBSCRIBE: 1,
              UNSUBSCRIBE: 2,
              PUBLISH: 3,
              PRESENCE: 4,
              PRESENCE_STATS: 5,
              HISTORY: 6,
              PING: 7,
              SEND: 8,
              RPC: 9,
              REFRESH: 10,
              SUB_REFRESH: 11,
            };
            i.JsonMethodType = c;
            var d = {
              PUBLICATION: 0,
              JOIN: 1,
              LEAVE: 2,
              UNSUB: 3,
              MESSAGE: 4,
              SUB: 5,
            };
            i.JsonPushType = d;
            var p = (function () {
              function y() {
                o(this, y);
              }
              return (
                l(y, [
                  {
                    key: "encodeCommands",
                    value: function (O) {
                      return O.map(function (g) {
                        return JSON.stringify(g);
                      }).join(`
`);
                    },
                  },
                ]),
                y
              );
            })();
            i.JsonEncoder = p;
            var m = (function () {
              function y() {
                o(this, y);
              }
              return (
                l(y, [
                  {
                    key: "decodeReplies",
                    value: function (O) {
                      return O.split(
                        `
`
                      )
                        .filter(function (g) {
                          return g !== "";
                        })
                        .map(function (g) {
                          return JSON.parse(g);
                        });
                    },
                  },
                  {
                    key: "decodeCommandResult",
                    value: function (O, g) {
                      return g;
                    },
                  },
                  {
                    key: "decodePush",
                    value: function (O) {
                      return O;
                    },
                  },
                  {
                    key: "decodePushData",
                    value: function (O, g) {
                      return g;
                    },
                  },
                ]),
                y
              );
            })();
            i.JsonDecoder = m;
          },
          471: function (s, i, o) {
            function u(Te) {
              "@babel/helpers - typeof";
              return (
                typeof Symbol == "function" &&
                typeof Symbol.iterator == "symbol"
                  ? (u = function (Ee) {
                      return typeof Ee;
                    })
                  : (u = function (Ee) {
                      return Ee &&
                        typeof Symbol == "function" &&
                        Ee.constructor === Symbol &&
                        Ee !== Symbol.prototype
                        ? "symbol"
                        : typeof Ee;
                    }),
                u(Te)
              );
            }
            Object.defineProperty(i, "__esModule", { value: !0 }),
              (i.default = void 0);
            var l = d(o(187)),
              c = o(853);
            function d(Te) {
              return Te && Te.__esModule ? Te : { default: Te };
            }
            function p(Te, Ce) {
              if (!(Te instanceof Ce))
                throw new TypeError("Cannot call a class as a function");
            }
            function m(Te, Ce) {
              for (var Ee = 0; Ee < Ce.length; Ee++) {
                var x = Ce[Ee];
                (x.enumerable = x.enumerable || !1),
                  (x.configurable = !0),
                  "value" in x && (x.writable = !0),
                  Object.defineProperty(Te, x.key, x);
              }
            }
            function y(Te, Ce, Ee) {
              return Ce && m(Te.prototype, Ce), Ee && m(Te, Ee), Te;
            }
            function I(Te, Ce) {
              if (typeof Ce != "function" && Ce !== null)
                throw new TypeError(
                  "Super expression must either be null or a function"
                );
              (Te.prototype = Object.create(Ce && Ce.prototype, {
                constructor: { value: Te, writable: !0, configurable: !0 },
              })),
                Ce && O(Te, Ce);
            }
            function O(Te, Ce) {
              return (
                (O =
                  Object.setPrototypeOf ||
                  function (x, F) {
                    return (x.__proto__ = F), x;
                  }),
                O(Te, Ce)
              );
            }
            function g(Te) {
              var Ce = B();
              return function () {
                var x = he(Te),
                  F;
                if (Ce) {
                  var Se = he(this).constructor;
                  F = Reflect.construct(x, arguments, Se);
                } else F = x.apply(this, arguments);
                return C(this, F);
              };
            }
            function C(Te, Ce) {
              return Ce && (u(Ce) === "object" || typeof Ce == "function")
                ? Ce
                : H(Te);
            }
            function H(Te) {
              if (Te === void 0)
                throw new ReferenceError(
                  "this hasn't been initialised - super() hasn't been called"
                );
              return Te;
            }
            function B() {
              if (
                typeof Reflect > "u" ||
                !Reflect.construct ||
                Reflect.construct.sham
              )
                return !1;
              if (typeof Proxy == "function") return !0;
              try {
                return (
                  Date.prototype.toString.call(
                    Reflect.construct(Date, [], function () {})
                  ),
                  !0
                );
              } catch {
                return !1;
              }
            }
            function he(Te) {
              return (
                (he = Object.setPrototypeOf
                  ? Object.getPrototypeOf
                  : function (Ee) {
                      return Ee.__proto__ || Object.getPrototypeOf(Ee);
                    }),
                he(Te)
              );
            }
            var de = 0,
              U = 1,
              R = 2,
              ge = 3,
              ve = 4,
              we = (function (Te) {
                I(Ee, Te);
                var Ce = g(Ee);
                function Ee(x, F, Se) {
                  var ye;
                  return (
                    p(this, Ee),
                    (ye = Ce.call(this)),
                    (ye.channel = F),
                    (ye._centrifuge = x),
                    (ye._status = de),
                    (ye._error = null),
                    (ye._isResubscribe = !1),
                    (ye._ready = !1),
                    (ye._subscriptionPromise = null),
                    (ye._noResubscribe = !1),
                    (ye._recoverable = !1),
                    (ye._recover = !1),
                    ye._setEvents(Se),
                    ye._initializePromise(),
                    (ye._promises = {}),
                    (ye._promiseId = 0),
                    ye.on("error", function (Ae) {
                      this._centrifuge._debug("subscription error", Ae);
                    }),
                    ye
                  );
                }
                return (
                  y(Ee, [
                    {
                      key: "_nextPromiseId",
                      value: function () {
                        return ++this._promiseId;
                      },
                    },
                    {
                      key: "_initializePromise",
                      value: function () {
                        var F = this;
                        (this._ready = !1),
                          (this._subscriptionPromise = new Promise(function (
                            Se,
                            ye
                          ) {
                            (F._resolve = function (Ae) {
                              (F._ready = !0), Se(Ae);
                            }),
                              (F._reject = function (Ae) {
                                (F._ready = !0), ye(Ae);
                              });
                          }).then(
                            function () {},
                            function () {}
                          ));
                      },
                    },
                    {
                      key: "_needRecover",
                      value: function () {
                        return this._recoverable === !0 && this._recover === !0;
                      },
                    },
                    {
                      key: "_setEvents",
                      value: function (F) {
                        if (F) {
                          if ((0, c.isFunction)(F)) this.on("publish", F);
                          else if (
                            Object.prototype.toString.call(F) ===
                            Object.prototype.toString.call({})
                          )
                            for (
                              var Se = [
                                  "publish",
                                  "join",
                                  "leave",
                                  "unsubscribe",
                                  "subscribe",
                                  "error",
                                ],
                                ye = 0,
                                Ae = Se.length;
                              ye < Ae;
                              ye++
                            ) {
                              var De = Se[ye];
                              De in F && this.on(De, F[De]);
                            }
                        }
                      },
                    },
                    {
                      key: "_isNew",
                      value: function () {
                        return this._status === de;
                      },
                    },
                    {
                      key: "_isUnsubscribed",
                      value: function () {
                        return this._status === ve;
                      },
                    },
                    {
                      key: "_isSubscribing",
                      value: function () {
                        return this._status === U;
                      },
                    },
                    {
                      key: "_isReady",
                      value: function () {
                        return this._status === R || this._status === ge;
                      },
                    },
                    {
                      key: "_isSuccess",
                      value: function () {
                        return this._status === R;
                      },
                    },
                    {
                      key: "_isError",
                      value: function () {
                        return this._status === ge;
                      },
                    },
                    {
                      key: "_setNew",
                      value: function () {
                        this._status = de;
                      },
                    },
                    {
                      key: "_setSubscribing",
                      value: function (F) {
                        (this._isResubscribe = F || !1),
                          this._ready === !0 && this._initializePromise(),
                          (this._status = U);
                      },
                    },
                    {
                      key: "_setSubscribeSuccess",
                      value: function (F) {
                        if (this._status !== R) {
                          this._status = R;
                          var Se = this._getSubscribeSuccessContext(F);
                          (this._recover = !1),
                            this.emit("subscribe", Se),
                            this._resolve(Se);
                          for (var ye in this._promises)
                            clearTimeout(this._promises[ye].timeout),
                              this._promises[ye].resolve(),
                              delete this._promises[ye];
                        }
                      },
                    },
                    {
                      key: "_setSubscribeError",
                      value: function (F) {
                        if (this._status !== ge) {
                          (this._status = ge), (this._error = F);
                          var Se = this._getSubscribeErrorContext();
                          this.emit("error", Se), this._reject(Se);
                          for (var ye in this._promises)
                            clearTimeout(this._promises[ye].timeout),
                              this._promises[ye].reject(F),
                              delete this._promises[ye];
                        }
                      },
                    },
                    {
                      key: "_triggerUnsubscribe",
                      value: function () {
                        this.emit("unsubscribe", { channel: this.channel });
                      },
                    },
                    {
                      key: "_setUnsubscribed",
                      value: function (F) {
                        if (
                          (this._centrifuge._clearSubRefreshTimeout(
                            this.channel
                          ),
                          this._status !== ve)
                        ) {
                          var Se = this._status === R;
                          (this._status = ve),
                            F === !0 &&
                              ((this._recover = !1),
                              (this._noResubscribe = !0),
                              delete this._centrifuge._lastSeq[this.channel],
                              delete this._centrifuge._lastGen[this.channel],
                              delete this._centrifuge._lastEpoch[this.channel]),
                            Se && this._triggerUnsubscribe();
                        }
                      },
                    },
                    {
                      key: "_shouldResubscribe",
                      value: function () {
                        return !this._noResubscribe;
                      },
                    },
                    {
                      key: "_getSubscribeSuccessContext",
                      value: function (F) {
                        var Se = {
                          channel: this.channel,
                          isResubscribe: this._isResubscribe,
                        };
                        return (
                          F &&
                            (Se = this._centrifuge._expandSubscribeContext(
                              Se,
                              F
                            )),
                          Se
                        );
                      },
                    },
                    {
                      key: "_getSubscribeErrorContext",
                      value: function () {
                        var F = this._error;
                        return (
                          (F.channel = this.channel),
                          (F.isResubscribe = this._isResubscribe),
                          F
                        );
                      },
                    },
                    {
                      key: "ready",
                      value: function (F, Se) {
                        this._ready &&
                          (this._isSuccess()
                            ? F(this._getSubscribeSuccessContext())
                            : Se(this._getSubscribeErrorContext()));
                      },
                    },
                    {
                      key: "subscribe",
                      value: function () {
                        this._status !== R &&
                          ((this._noResubscribe = !1),
                          this._centrifuge._subscribe(this));
                      },
                    },
                    {
                      key: "unsubscribe",
                      value: function () {
                        this._setUnsubscribed(!0),
                          this._centrifuge._unsubscribe(this);
                      },
                    },
                    {
                      key: "_methodCall",
                      value: function () {
                        var F = this;
                        if (this._isSuccess()) return Promise.resolve();
                        if (this._isError()) return Promise.reject(this._error);
                        var Se = new Promise(function (ye, Ae) {
                          var De = setTimeout(function () {
                            Ae({ code: 0, message: "timeout" });
                          }, F._centrifuge._config.timeout);
                          F._promises[F._nextPromiseId()] = {
                            timeout: De,
                            resolve: ye,
                            reject: Ae,
                          };
                        });
                        return Se;
                      },
                    },
                    {
                      key: "publish",
                      value: function (F) {
                        var Se = this;
                        return this._methodCall().then(function () {
                          return Se._centrifuge.publish(Se.channel, F);
                        });
                      },
                    },
                    {
                      key: "presence",
                      value: function () {
                        var F = this;
                        return this._methodCall().then(function () {
                          return F._centrifuge.presence(F.channel);
                        });
                      },
                    },
                    {
                      key: "presenceStats",
                      value: function () {
                        var F = this;
                        return this._methodCall().then(function () {
                          return F._centrifuge.presenceStats(F.channel);
                        });
                      },
                    },
                    {
                      key: "history",
                      value: function (F) {
                        var Se = this;
                        return this._methodCall().then(function () {
                          return Se._centrifuge.history(Se.channel, F);
                        });
                      },
                    },
                  ]),
                  Ee
                );
              })(l.default);
            (i.default = we), (s.exports = i.default);
          },
          853: function (s, i, o) {
            Object.defineProperty(i, "__esModule", { value: !0 }),
              (i.startsWith = u),
              (i.isFunction = l),
              (i.log = c),
              (i.backoff = d),
              (i.errorExists = p),
              (i.extend = m);
            function u(y, I) {
              return y.lastIndexOf(I, 0) === 0;
            }
            function l(y) {
              return y == null ? !1 : typeof y == "function";
            }
            function c(y, I) {
              if (o.g.console) {
                var O = o.g.console[y];
                l(O) && O.apply(o.g.console, I);
              }
            }
            function d(y, I, O) {
              var g = 0.5 * Math.random(),
                C = Math.min(O, I * Math.pow(2, y + 1));
              return Math.floor((1 - g) * C);
            }
            function p(y) {
              return "error" in y && y.error !== null;
            }
            function m(y, I) {
              for (var O in I) I.hasOwnProperty(O) && (y[O] = I[O]);
              return y;
            }
          },
          187: function (s) {
            var i = typeof Reflect == "object" ? Reflect : null,
              o =
                i && typeof i.apply == "function"
                  ? i.apply
                  : function (ge, ve, we) {
                      return Function.prototype.apply.call(ge, ve, we);
                    },
              u;
            i && typeof i.ownKeys == "function"
              ? (u = i.ownKeys)
              : Object.getOwnPropertySymbols
              ? (u = function (ge) {
                  return Object.getOwnPropertyNames(ge).concat(
                    Object.getOwnPropertySymbols(ge)
                  );
                })
              : (u = function (ge) {
                  return Object.getOwnPropertyNames(ge);
                });
            function l(R) {
              console && console.warn && console.warn(R);
            }
            var c =
              Number.isNaN ||
              function (ge) {
                return ge !== ge;
              };
            function d() {
              d.init.call(this);
            }
            (s.exports = d),
              (s.exports.once = U),
              (d.EventEmitter = d),
              (d.prototype._events = void 0),
              (d.prototype._eventsCount = 0),
              (d.prototype._maxListeners = void 0);
            var p = 10;
            function m(R) {
              if (typeof R != "function")
                throw new TypeError(
                  'The "listener" argument must be of type Function. Received type ' +
                    typeof R
                );
            }
            Object.defineProperty(d, "defaultMaxListeners", {
              enumerable: !0,
              get: function () {
                return p;
              },
              set: function (R) {
                if (typeof R != "number" || R < 0 || c(R))
                  throw new RangeError(
                    'The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' +
                      R +
                      "."
                  );
                p = R;
              },
            }),
              (d.init = function () {
                (this._events === void 0 ||
                  this._events === Object.getPrototypeOf(this)._events) &&
                  ((this._events = Object.create(null)),
                  (this._eventsCount = 0)),
                  (this._maxListeners = this._maxListeners || void 0);
              }),
              (d.prototype.setMaxListeners = function (ge) {
                if (typeof ge != "number" || ge < 0 || c(ge))
                  throw new RangeError(
                    'The value of "n" is out of range. It must be a non-negative number. Received ' +
                      ge +
                      "."
                  );
                return (this._maxListeners = ge), this;
              });
            function y(R) {
              return R._maxListeners === void 0
                ? d.defaultMaxListeners
                : R._maxListeners;
            }
            (d.prototype.getMaxListeners = function () {
              return y(this);
            }),
              (d.prototype.emit = function (ge) {
                for (var ve = [], we = 1; we < arguments.length; we++)
                  ve.push(arguments[we]);
                var Te = ge === "error",
                  Ce = this._events;
                if (Ce !== void 0) Te = Te && Ce.error === void 0;
                else if (!Te) return !1;
                if (Te) {
                  var Ee;
                  if ((ve.length > 0 && (Ee = ve[0]), Ee instanceof Error))
                    throw Ee;
                  var x = new Error(
                    "Unhandled error." + (Ee ? " (" + Ee.message + ")" : "")
                  );
                  throw ((x.context = Ee), x);
                }
                var F = Ce[ge];
                if (F === void 0) return !1;
                if (typeof F == "function") o(F, this, ve);
                else
                  for (var Se = F.length, ye = B(F, Se), we = 0; we < Se; ++we)
                    o(ye[we], this, ve);
                return !0;
              });
            function I(R, ge, ve, we) {
              var Te, Ce, Ee;
              if (
                (m(ve),
                (Ce = R._events),
                Ce === void 0
                  ? ((Ce = R._events = Object.create(null)),
                    (R._eventsCount = 0))
                  : (Ce.newListener !== void 0 &&
                      (R.emit(
                        "newListener",
                        ge,
                        ve.listener ? ve.listener : ve
                      ),
                      (Ce = R._events)),
                    (Ee = Ce[ge])),
                Ee === void 0)
              )
                (Ee = Ce[ge] = ve), ++R._eventsCount;
              else if (
                (typeof Ee == "function"
                  ? (Ee = Ce[ge] = we ? [ve, Ee] : [Ee, ve])
                  : we
                  ? Ee.unshift(ve)
                  : Ee.push(ve),
                (Te = y(R)),
                Te > 0 && Ee.length > Te && !Ee.warned)
              ) {
                Ee.warned = !0;
                var x = new Error(
                  "Possible EventEmitter memory leak detected. " +
                    Ee.length +
                    " " +
                    String(ge) +
                    " listeners added. Use emitter.setMaxListeners() to increase limit"
                );
                (x.name = "MaxListenersExceededWarning"),
                  (x.emitter = R),
                  (x.type = ge),
                  (x.count = Ee.length),
                  l(x);
              }
              return R;
            }
            (d.prototype.addListener = function (ge, ve) {
              return I(this, ge, ve, !1);
            }),
              (d.prototype.on = d.prototype.addListener),
              (d.prototype.prependListener = function (ge, ve) {
                return I(this, ge, ve, !0);
              });
            function O() {
              if (!this.fired)
                return (
                  this.target.removeListener(this.type, this.wrapFn),
                  (this.fired = !0),
                  arguments.length === 0
                    ? this.listener.call(this.target)
                    : this.listener.apply(this.target, arguments)
                );
            }
            function g(R, ge, ve) {
              var we = {
                  fired: !1,
                  wrapFn: void 0,
                  target: R,
                  type: ge,
                  listener: ve,
                },
                Te = O.bind(we);
              return (Te.listener = ve), (we.wrapFn = Te), Te;
            }
            (d.prototype.once = function (ge, ve) {
              return m(ve), this.on(ge, g(this, ge, ve)), this;
            }),
              (d.prototype.prependOnceListener = function (ge, ve) {
                return m(ve), this.prependListener(ge, g(this, ge, ve)), this;
              }),
              (d.prototype.removeListener = function (ge, ve) {
                var we, Te, Ce, Ee, x;
                if ((m(ve), (Te = this._events), Te === void 0)) return this;
                if (((we = Te[ge]), we === void 0)) return this;
                if (we === ve || we.listener === ve)
                  --this._eventsCount === 0
                    ? (this._events = Object.create(null))
                    : (delete Te[ge],
                      Te.removeListener &&
                        this.emit("removeListener", ge, we.listener || ve));
                else if (typeof we != "function") {
                  for (Ce = -1, Ee = we.length - 1; Ee >= 0; Ee--)
                    if (we[Ee] === ve || we[Ee].listener === ve) {
                      (x = we[Ee].listener), (Ce = Ee);
                      break;
                    }
                  if (Ce < 0) return this;
                  Ce === 0 ? we.shift() : he(we, Ce),
                    we.length === 1 && (Te[ge] = we[0]),
                    Te.removeListener !== void 0 &&
                      this.emit("removeListener", ge, x || ve);
                }
                return this;
              }),
              (d.prototype.off = d.prototype.removeListener),
              (d.prototype.removeAllListeners = function (ge) {
                var ve, we, Te;
                if (((we = this._events), we === void 0)) return this;
                if (we.removeListener === void 0)
                  return (
                    arguments.length === 0
                      ? ((this._events = Object.create(null)),
                        (this._eventsCount = 0))
                      : we[ge] !== void 0 &&
                        (--this._eventsCount === 0
                          ? (this._events = Object.create(null))
                          : delete we[ge]),
                    this
                  );
                if (arguments.length === 0) {
                  var Ce = Object.keys(we),
                    Ee;
                  for (Te = 0; Te < Ce.length; ++Te)
                    (Ee = Ce[Te]),
                      Ee !== "removeListener" && this.removeAllListeners(Ee);
                  return (
                    this.removeAllListeners("removeListener"),
                    (this._events = Object.create(null)),
                    (this._eventsCount = 0),
                    this
                  );
                }
                if (((ve = we[ge]), typeof ve == "function"))
                  this.removeListener(ge, ve);
                else if (ve !== void 0)
                  for (Te = ve.length - 1; Te >= 0; Te--)
                    this.removeListener(ge, ve[Te]);
                return this;
              });
            function C(R, ge, ve) {
              var we = R._events;
              if (we === void 0) return [];
              var Te = we[ge];
              return Te === void 0
                ? []
                : typeof Te == "function"
                ? ve
                  ? [Te.listener || Te]
                  : [Te]
                : ve
                ? de(Te)
                : B(Te, Te.length);
            }
            (d.prototype.listeners = function (ge) {
              return C(this, ge, !0);
            }),
              (d.prototype.rawListeners = function (ge) {
                return C(this, ge, !1);
              }),
              (d.listenerCount = function (R, ge) {
                return typeof R.listenerCount == "function"
                  ? R.listenerCount(ge)
                  : H.call(R, ge);
              }),
              (d.prototype.listenerCount = H);
            function H(R) {
              var ge = this._events;
              if (ge !== void 0) {
                var ve = ge[R];
                if (typeof ve == "function") return 1;
                if (ve !== void 0) return ve.length;
              }
              return 0;
            }
            d.prototype.eventNames = function () {
              return this._eventsCount > 0 ? u(this._events) : [];
            };
            function B(R, ge) {
              for (var ve = new Array(ge), we = 0; we < ge; ++we)
                ve[we] = R[we];
              return ve;
            }
            function he(R, ge) {
              for (; ge + 1 < R.length; ge++) R[ge] = R[ge + 1];
              R.pop();
            }
            function de(R) {
              for (var ge = new Array(R.length), ve = 0; ve < ge.length; ++ve)
                ge[ve] = R[ve].listener || R[ve];
              return ge;
            }
            function U(R, ge) {
              return new Promise(function (ve, we) {
                function Te() {
                  Ce !== void 0 && R.removeListener("error", Ce),
                    ve([].slice.call(arguments));
                }
                var Ce;
                ge !== "error" &&
                  ((Ce = function (x) {
                    R.removeListener(ge, Te), we(x);
                  }),
                  R.once("error", Ce)),
                  R.once(ge, Te);
              });
            }
          },
        },
        r = {};
      function a(s) {
        if (r[s]) return r[s].exports;
        var i = (r[s] = { exports: {} });
        return n[s](i, i.exports, a), i.exports;
      }
      return (
        (function () {
          a.g = (function () {
            if (typeof globalThis == "object") return globalThis;
            try {
              return this || new Function("return this")();
            } catch {
              if (typeof window == "object") return window;
            }
          })();
        })(),
        a(579)
      );
    })();
  });
})(bde);
var yrt = bde.exports;
const grt = Lo(yrt),
  vrt = 10 * 60 * 1e3;
class _rt {
  constructor() {
    (this.lastRefreshDate = null),
      (this.lastRefreshStatusCode = 200),
      (this.setLastRefreshData = (e) => {
        (this.lastRefreshDate = new Date()), (this.lastRefreshStatusCode = e);
      }),
      (this.isRefreshRequestThrottled = () =>
        this.lastRefreshStatusCode !== 200
          ? !1
          : this.lastRefreshDate
          ? +new Date() - +this.lastRefreshDate < vrt
          : ((this.lastRefreshDate = new Date()), !1));
  }
}
function brt(t, e) {
  const n = new _rt(),
    r = `${t.api.baseWSUrl}${_t.centrifugoWebsocket}`,
    a = t.api.generateUrl(_t.centrifugoToken),
    s = t.api.generateAuthHeaders(),
    i = { authorization: s.authorization },
    o = new grt(r, {
      onRefresh: u,
      subscribeEndpoint: t.api.generateUrl(
        _t.centrifugoPrivateSubscriptionToken
      ),
      subscribeHeaders: i,
      refreshHeaders: s,
      refreshEndpoint: a,
      minRetry: 5e3,
      maxRetry: 3e5,
    });
  return o.setToken(e), o;
  async function u(l, c) {
    if (n.isRefreshRequestThrottled()) {
      c({ status: 0, data: { token: "" } });
      return;
    }
    let d;
    try {
      d = await fetch(a, { method: "POST", headers: s });
    } catch {
      return;
    }
    if (d.status === 401) {
      o.disconnect();
      return;
    }
    const p = await d.json();
    c({ status: d.status, data: { token: p.token } }),
      n.setLastRefreshData(d.status);
  }
}
function* Ert(t) {
  yield* Pr([Woe, rf.success], Trt, t);
}
function* Trt(t) {
  let e;
  try {
    const { token: n, clientID: r } = yield* Crt(t);
    (e = brt(t, n)),
      yield* Srt(e, r),
      yield* Jr(wrt, t, e),
      e.connect(),
      yield* Zs(qn.success),
      yield* I0();
  } catch {
  } finally {
    e == null || e.disconnect();
  }
}
function* wrt(t, e) {
  yield* Prt(), yield* Jst(e);
  const n = yield* Irt(t);
  n && (yield* drt(e, n));
}
function* Prt() {
  for (;;) {
    if (yield* Pe(Wv)) return;
    yield* Zs([us.success, lp.success]);
  }
}
function* Irt(t) {
  for (;;) {
    try {
      const e = yield* Pe(Wv),
        n = yield* Pe(_i);
      if (e == null || n == null)
        return (
          tt.exception(
            "Team ID or User ID is empty during centrifuge team channel cryptor setup",
            new Error()
          ),
          null
        );
      const r = yield* Pe(Oa),
        a = yield* Me(
          { context: t.syncKeyManager, fn: "createTeamCryptor" },
          n,
          { canManageTeam: r }
        );
      if (a) return a;
    } catch (e) {
      return (
        tt.exception("Can not setup centrifuge team channel cryptor", e), null
      );
    }
    yield* Zs([us.success, ak]);
  }
}
function* Crt(t) {
  const e = yield* Me({
    context: t.credentialsStorage,
    fn: "getCentrifugeJWTToken",
  });
  if (e && (Qst(e.token).exp ?? 0) * 1e3 - Date.now() > 0) return e;
  const { token: n, client_id: r } = yield* Me({
      context: t.api,
      fn: "getCentrifugoToken",
    }),
    a = { token: n, clientID: r.toString() };
  return t.credentialsStorage.setCentrifugeJWTToken(a), a;
}
const Art = 3 * 60 * 1e3;
function* Ort(t, { meta: e, payload: n }) {
  try {
    const { group: r, withBackendSync: a } = n,
      s = yield* Me(kG, t, [new Fs(r)]);
    s != null &&
      (yield* Me({ context: t.cloudsController, fn: "syncNow" }, s),
      a && (yield* D($t.request("does-not-block-ui")))),
      yield* D(pf.success(void 0, e.requestId));
  } catch {
    yield* D(pf.failure({ code: pf.failure.toString() }, e.requestId));
  }
}
function* Hrt(t) {
  for (;;) {
    if (yield* Pe(bu)) {
      const n = yield* Me(kG, t);
      if (n != null) {
        const r = yield* Me({ context: t.cloudsController, fn: "sync" }, n);
        if (r == null) return;
        const s = yield* Me(() => r);
        krt(s) && (yield* D($t.request("does-not-block-ui")));
      }
    }
    yield* Bi(Art);
  }
}
function* Nrt(t, { meta: e }) {
  try {
    if (yield* Pe(bu)) {
      const r = yield* Me(kG, t);
      r != null &&
        (yield* Me({ context: t.cloudsController, fn: "syncNow" }, r));
    }
    yield* D(uH.success(void 0, e.requestId));
  } catch {
    yield* D(uH.failure({ code: pf.failure.toString() }, e.requestId));
  }
}
function* Rrt(t) {
  yield* Gn([$e(pf.request, Ort, t), Pr(uH.request, Nrt, t), K1(Hrt, t)]);
}
function* kG(t, e) {
  const n = yield* Pe(_i),
    r = yield* Pe(Ea),
    a = yield* Pe(Oa);
  if (n == null) return e;
  const i = yield* Me(
    { context: t, fn: "getVaultRoles" },
    n,
    r ? { canManageTeam: a } : null
  );
  if (i.status !== "vaults setup incomplete")
    return (e ?? t.store.getGroups()).filter((o) => {
      var u;
      return o.is_shared
        ? kP((u = i.roles) == null ? void 0 : u.get(o.encrypted_with))
        : !0;
    });
}
function krt(t) {
  return t == null || Zu(t)
    ? !1
    : t.some((e) =>
        e == null ? !1 : !Zu(e.created) || !Zu(e.updated) || !Zu(e.deleted)
      );
}
function xrt(t) {
  return {
    async init() {
      return t.initCustomerExperience();
    },
    async send(e) {
      return t.sendCustomerExperience(Lrt(e));
    },
  };
}
function Lrt(t) {
  switch (t.action) {
    case "rated":
      return {
        action: "rated",
        score: t.score,
        comment: void 0,
        interacted_at: lc(t.interactedAt),
      };
    case "reviewed":
      return {
        action: "rated",
        score: t.score,
        comment: void 0,
        interacted_at: lc(t.interactedAt),
      };
    case "left-feedback":
      return {
        action: "rated",
        score: t.score,
        comment: t.comment || void 0,
        interacted_at: lc(t.interactedAt),
      };
    case "dismissed":
      return {
        action: "dismissed",
        score: void 0,
        comment: void 0,
        interacted_at: lc(t.interactedAt),
      };
    case "rated-in-legacy-app-version":
      return {
        action: "rated",
        score: void 0,
        comment: void 0,
        interacted_at: lc(t.interactedAt),
      };
    default:
      return F0();
  }
}
function Ede(t) {
  return typeof t == "string" || typeof t == "number";
}
function NN(t) {
  return Ede(t) ? t : t.window;
}
function IB(t) {
  return Ede(t) ? void 0 : t.container;
}
function Mrt(t, e) {
  return IB(t) === IB(e) && NN(t) === NN(e);
}
const to = (t) => t.dialogs || [],
  Drt = Nt(
    (t, e) => to(t),
    (t, e) => e,
    (t, e) => t.filter(([n, r]) => [e, "all-windows"].includes(NN(r.target)))
  );
Nt(
  Drt,
  (t, e) => e,
  (t, e) => t.length !== 0
);
const xG = Nt(
    (t, e) => to(t),
    (t, e) => e,
    (t, e) => t.filter(([n, r]) => r.name === e)
  ),
  Ym = (t) => t.inAppMessages.objects,
  Grt = (t) => !!xG(t, "MigrateToNewCryptoSystemScreen").length,
  Frt = Nt(Ym, (t) => t.some((e) => e.action === YR && !e.is_seen));
Nt(Grt, Frt, N8e, (t, e, n) => !e && !t && !n);
const Tde = (t = {}) => {
    var e;
    return (
      (t == null ? void 0 : t.detail) ||
      (t == null ? void 0 : t.error) ||
      ((e = t == null ? void 0 : t.authy_token) == null ? void 0 : e["0"]) ||
      "Something went wrong, try again."
    );
  },
  Urt = (t) => t >= 2;
function Krt(t) {
  if (Ft.getDeprecatedForceToShowTeamTrialPromotions()) return !0;
  const e = Ea(t),
    n = MQ(t);
  return !e && Urt(n);
}
function LG(t) {
  return t.navigation.localPath;
}
function II(t) {
  return t.navigation.global;
}
function Brt(t, e) {
  const n = Vrt(t, e);
  return n == null ? !1 : n.path.startsWith(sJe);
}
function Vrt(t, e) {
  return II(t).find((n) => n.windowId === e);
}
Nt(Oa, Krt, P8e, (t, e, n) => {
  const r = [];
  let a = "/account";
  return (
    t &&
      (r.push({ title: "Manage Team", path: "/manage-team" }),
      (a = "/manage-team")),
    r.push({ title: "Account", path: "/account" }),
    n && r.push({ title: "Vaults", path: "/vaults" }),
    e && r.push({ title: "Invite People", path: "/invite-people" }),
    r.push({ title: "Terminal", path: "/terminal" }),
    r.push({ title: "SFTP", path: "/sftp" }),
    r.push({ title: "Shortcuts", path: "/shortcuts" }),
    { tabs: r, defaultPath: a, sanitizePath: s }
  );
  function s(i) {
    const o = r.find((u) => u.path === i);
    return o == null ? a : o.path;
  }
});
function jrt(t) {
  return t.windows.lastFocused;
}
function zrt(t, e) {
  return t.windows.isFocused ? t.windows.lastFocused === e : !1;
}
const wde = Nt(Brt, zrt, (t, e) => ({
  isCurrentTabTerminal: t,
  isCurrentWindowFocused: e,
}));
Nt(wde, ({ isCurrentTabTerminal: t, isCurrentWindowFocused: e }) => !t && e);
Nt(wde, ({ isCurrentTabTerminal: t, isCurrentWindowFocused: e }) => t && !e);
function br(t) {
  pv.send("open-external", t);
}
const qE = ({ username: t, period: e, plan: n }) => {
    const r = new URL("https://account.termius.com/billing/purchase"),
      a = new URLSearchParams({
        email: t,
        period: e || "YEAR",
        plan: n || "pro",
      });
    (r.hash = a.toString()), br({ title: "Billing", url: r.toString() });
  },
  $rt = () =>
    br({ title: "AuthyLearnMore", url: "https://www.authy.com/learn-more/" }),
  CB = () => {
    br({
      title: "G2",
      url: "https://www.g2.com/products/termius/reviews/start",
    });
  },
  Wrt = () =>
    br({ title: "Beta", url: "https://www.termius.com/beta-program" }),
  qrt = () =>
    br({ title: "Changelog", url: "https://termi.us/desktop-changelog" }),
  Yrt = () => br({ title: "Documentation", url: "https://docs.termius.com/" }),
  Xrt = () =>
    br({ title: "Create Team", url: "https://account.termius.com/team" }),
  Qrt = () =>
    br({ title: "Manage Team", url: "https://account.termius.com/team" }),
  Jrt = () =>
    br({ title: "Terms of Use", url: "https://termius.com/terms-of-use" }),
  Zrt = () =>
    br({ title: "Privacy Policy", url: "https://termius.com/privacy-policy" }),
  eat = () => br({ title: "Mosh.org", url: "https://mosh.org" }),
  tat = () => {
    function t() {
      return ls.macOS()
        ? "mac-os"
        : ls.windows()
        ? "windows"
        : ls.linux()
        ? "linux"
        : "";
    }
    br({ title: "Termius", url: `https://www.termius.com/${t()}` });
  },
  nat = () =>
    br({
      title: "Termius",
      url: "itms-apps://itunes.apple.com/us/app/termius-ssh-client/id1176074088?mt=12",
    }),
  sat = () =>
    br({
      title: "Termius",
      url: "ms-windows-store://pdp/?ProductId=9nk1gdvpx09v",
    }),
  rat = () =>
    br({
      title: "Termius",
      url: "itms-apps://itunes.apple.com/us/app/termius-ssh-client/id1176074088?mt=12&action=write-review",
    }),
  aat = () =>
    br({
      title: "Termius",
      url: "ms-windows-store://review/?ProductId=9nk1gdvpx09v",
    }),
  iat = () =>
    br({ title: "How we check passwords", url: "https://termi.us/hipb" }),
  oat = () =>
    br({ title: "Termius Support", url: "https://support.termius.com/" }),
  uat = new Map([
    ["AuthyLearnMore", $rt],
    ["Beta", Wrt],
    ["Changelog", qrt],
    ["Documentation", Yrt],
    ["Create Team", Xrt],
    ["Manage Team", Qrt],
    ["Terms of Use", Jrt],
    ["Privacy Policy", Zrt],
    ["Mosh.org", eat],
    ["Download", tat],
    ["AppStore", nat],
    ["WindowsStore", sat],
    ["HowWeCheckPasswords", iat],
    ["Support", oat],
  ]);
function Pde(t) {
  (t instanceof _r && t.status !== 400) ||
    tt.exception("Customer Experience has failed", t, {
      tags: { feature: "customer experience" },
    });
}
function AB(t) {
  Ol(1, arguments);
  var e = Eo(t);
  return e.setHours(0, 0, 0, 0), e;
}
var lat = 864e5;
function cat(t, e) {
  Ol(2, arguments);
  var n = AB(t),
    r = AB(e),
    a = n.getTime() - OT(n),
    s = r.getTime() - OT(r);
  return Math.round((a - s) / lat);
}
function OB(t, e) {
  var n =
    t.getFullYear() - e.getFullYear() ||
    t.getMonth() - e.getMonth() ||
    t.getDate() - e.getDate() ||
    t.getHours() - e.getHours() ||
    t.getMinutes() - e.getMinutes() ||
    t.getSeconds() - e.getSeconds() ||
    t.getMilliseconds() - e.getMilliseconds();
  return n < 0 ? -1 : n > 0 ? 1 : n;
}
function dat(t, e) {
  Ol(2, arguments);
  var n = Eo(t),
    r = Eo(e),
    a = OB(n, r),
    s = Math.abs(cat(n, r));
  n.setDate(n.getDate() - a * s);
  var i = +(OB(n, r) === -a),
    o = a * (s - i);
  return o === 0 ? 0 : o;
}
const pat = 7,
  hat = 90;
function Ide(t) {
  return t.customerExperience.isCESVisible;
}
function Cde(t) {
  return t.customerExperience.interactionData;
}
function fat(t) {
  return t.customerExperience.initWasPerformed;
}
function mat(t) {
  return t.customerExperience.keyEventHasHappened;
}
function Ade(t) {
  return Ym(t).some(Uz);
}
function Sat(t, e = new Date()) {
  return Nm(t) ? yat(t, e) : _at(t);
}
function yat(t, e) {
  const n = Cde(t);
  return n == null
    ? !0
    : dat(e, n.interactedAt) >= gat(t, n) &&
        (n.action === "dismissed" || n.appVersion !== Uue(t));
}
function gat(t, e) {
  return vat(t, e) ? pat : hat;
}
function vat(t, e) {
  return e.action === "dismissed" && t.customerExperience.dismissCount === 1;
}
function _at(t) {
  return Ade(t);
}
function* bat(t, e) {
  yield* $e(H$, Eat, e),
    yield* $e([T2, Nw], Tat),
    yield* $e([qd.success, ea.success, al.success], wat),
    yield* $e(w2, Pat),
    yield* $e([Op, Zr.success], Nat, t, e);
}
function* Eat(t, { payload: e }) {
  if (
    (yield* Hat(),
    e.action === "reviewed" && (yield* Pe(Rat)),
    !(yield* Pe(Nm)))
  )
    try {
      yield* Me(() => t.send(e)), yield* D(N$()), yield* D(ea.request());
    } catch (n) {
      Pde(n);
    }
}
function* Tat() {
  (yield* Pe(Ide)) || ((yield* Pe(Cat)) && (yield* D(ik(!0)), yield* D(FX())));
}
function* wat() {
  const t = yield* Pe(Ide),
    e = yield* Pe(IQ),
    n = yield* Pe(Ade);
  t && e && !n && (yield* D(ik(!1)));
}
function* Pat({ payload: t }) {
  t.type != null && Iat(t.type) && (yield* D(uCe()));
}
function Iat(t) {
  return ["SSH", "Telnet", "Mosh", "Local"].includes(t);
}
function Cat(t) {
  return Oat(t) && Aat(t) && mat(t) && Sat(t);
}
function Aat(t) {
  return II(t).some(
    (e) => e.path.toLowerCase().includes("hosts") && e.windowId === jrt(t)
  );
}
function Oat(t) {
  return MQ(t) > 0;
}
function* Hat() {
  if ((yield* D(ik(!1)), yield* Pe(Nm))) return;
  const e = (yield* Pe(Ym)).filter(Uz);
  yield* D(Iy.request(e));
}
function* Nat(t, e) {
  try {
    const n = t.shouldSend(yield* Pe());
    switch (n.type) {
      case "init":
        yield* Me(() => e.init()), yield* D(oCe());
        break;
      case "send":
        yield* Me(() => e.send(n.payload)), yield* D(N$());
        break;
      case "nothing":
        break;
      default:
        F0(n);
    }
  } catch (n) {
    Pde(n);
  }
}
function Rat(t) {
  Ea(t) ? CB() : _Q ? rat() : p8e ? aat() : CB();
}
function kat() {
  return {
    shouldSend: (t) => {
      if (!IQ(t)) return { type: "nothing" };
      const n = Cde(t);
      return n != null
        ? { type: "send", payload: n }
        : bu(t)
        ? { type: "nothing" }
        : fat(t)
        ? { type: "nothing" }
        : { type: "init" };
    },
  };
}
const xat = new Set([
  "BlockAccess",
  "OTPFlowDialog",
  "ProFeatures",
  "GracePeriod",
  "ChoosePlanDialog",
  "SignInScreen",
]);
function* Lat({ meta: t, payload: e }) {
  const n = yield* Pe((r) => xG(r, e.dialog));
  xat.has(e.dialog) && n.some(([r, a]) => Mrt(a.target, e.target))
    ? yield* D(ym.failure(new zY(), t.requestId))
    : yield* D(K0({ dialogData: e, requestMeta: t }));
}
function* Mat() {
  yield* $e(ym.request, Lat), uw && (yield* $e(Dz, Dat));
}
function* Dat() {
  const e = (yield* Pe(to)).filter(([r, a]) => a.requestMeta.windowId === 2);
  !(yield* Pe(l5e)) && e.length !== 0 && (yield* Gn(e.map(([r]) => D(Hp(r)))));
}
function* Gat(t) {
  if (t.length === 0) return;
  const e = yield* Pe(to);
  for (const n of t) {
    const r = e.filter(([a, s]) => s.name === n);
    r.length !== 0 && (yield* Gn(r.map(([a]) => D(Hp(a)))));
  }
}
const l1 = (...t) => {},
  Fat = (t) => {
    let e = {};
    return (
      t.map((n) => {
        const { name: r, value: a } = n;
        return (e = { ...e, [`${r}`]: a }), n;
      }),
      e
    );
  };
/*
Adaptation of "object-assign" library (https://www.npmjs.com/package/object-assign)
exported as an ES module instead of CommonJS, to avoid extra configuration steps when using
the ESM build of the SDK with tools that doesn't support CommonJS by default (e.g. Rollup).

object-assign
(c) Sindre Sorhus
@license MIT
*/ var HB = Object.getOwnPropertySymbols,
  Uat = Object.prototype.hasOwnProperty,
  Kat = Object.prototype.propertyIsEnumerable;
function Bat(t) {
  if (t == null)
    throw new TypeError(
      "Object.assign cannot be called with null or undefined"
    );
  return Object(t);
}
function Vat() {
  try {
    if (!Object.assign) return !1;
    var t = new String("abc");
    if (((t[5] = "de"), Object.getOwnPropertyNames(t)[0] === "5")) return !1;
    for (var e = {}, n = 0; n < 10; n++) e["_" + String.fromCharCode(n)] = n;
    var r = Object.getOwnPropertyNames(e).map(function (s) {
      return e[s];
    });
    if (r.join("") !== "0123456789") return !1;
    var a = {};
    return (
      "abcdefghijklmnopqrst".split("").forEach(function (s) {
        a[s] = s;
      }),
      Object.keys(Object.assign({}, a)).join("") === "abcdefghijklmnopqrst"
    );
  } catch {
    return !1;
  }
}
var Jn = Vat()
    ? Object.assign
    : function (t, e) {
        for (var n, r = Bat(t), a, s = 1; s < arguments.length; s++) {
          n = Object(arguments[s]);
          for (var i in n) Uat.call(n, i) && (r[i] = n[i]);
          if (HB) {
            a = HB(n);
            for (var o = 0; o < a.length; o++)
              Kat.call(n, a[o]) && (r[a[o]] = n[a[o]]);
          }
        }
        return r;
      },
  Ode = 0,
  Hde = 1,
  Nde = 2,
  Rde = 3,
  kde = 4,
  xde = 5,
  Lde = 6,
  Mde = 7,
  Dde = 8,
  Gde = 9,
  Fde = 10,
  Ude = 11,
  Kde = 12,
  Bde = 13,
  Vde = 14,
  jde = 15,
  zde = 16,
  $de = 17,
  RN = 18,
  Wde = 19,
  qde = 20,
  Yde = 21,
  Xde = 22,
  Qde = 23,
  Jde = 24,
  Zde = 25,
  epe = 26,
  tpe = 27,
  npe = 28,
  spe = 29,
  rpe = 30,
  ape = 31,
  ipe = 32,
  ope = 33,
  upe = 34,
  lpe = 35,
  cpe = 36,
  dpe = 37,
  ppe = 38,
  hpe = 39,
  fpe = 100,
  mpe = 101,
  Spe = 102,
  ype = 103,
  gpe = 104,
  vpe = 105,
  _pe = 106,
  bpe = 107,
  Epe = 108,
  Tpe = 109,
  wpe = 110,
  Ppe = 111,
  Ipe = 112,
  Cpe = 113,
  Ape = 114,
  CI = 115,
  Ope = 116,
  Hpe = 117,
  Npe = 118,
  Rpe = 119,
  kpe = 120,
  xpe = 121,
  Lpe = 122,
  Mpe = 123,
  Dpe = 124,
  Gpe = 200,
  Fpe = 201,
  Upe = 202,
  Kpe = 203,
  Bpe = 204,
  Vpe = 205,
  jpe = 206,
  zpe = 207,
  $pe = 208,
  kN = 209,
  Wpe = 210,
  qpe = 211,
  Ype = 212,
  Xpe = 213,
  Qpe = 214,
  Jpe = 215,
  Zpe = 216,
  ehe = 217,
  the = 218,
  nhe = 219,
  she = 220,
  rhe = 221,
  xN = 222,
  YE = 223,
  ahe = 224,
  ihe = 225,
  ohe = 226,
  uhe = 227,
  lhe = 228,
  che = 300,
  dhe = 301,
  phe = 302,
  hhe = 303,
  fhe = 304,
  mhe = 305,
  She = 306,
  yhe = 307,
  ghe = 308,
  vhe = 309,
  _he = 310,
  MG = 311,
  bhe = 312,
  Ehe = 313,
  The = 314,
  Xm = 315,
  whe = 316,
  Phe = 317,
  Qm = 318,
  Jm = 319,
  Ihe = 320,
  DG = 321,
  Che = 322,
  jat = 323,
  zat = 324,
  Ahe = 325,
  Ohe = 326,
  Hhe = 327,
  Nhe = 328,
  Da = "settings",
  c1 = "Factory instantiation",
  uv = "engine",
  XE = uv + ":combiner: ",
  fr = uv + ":matcher: ",
  LN = uv + ":value: ",
  fu = "sync",
  d1 = fu + ":sync-manager: ",
  Rhe = fu + ":offline: ",
  oi = fu + ":streaming: ",
  Wh = fu + ":featureflag-changes: ",
  $at = fu + ":my-segments: ",
  p1 = fu + ":polling-manager: ",
  a0 = fu + ":submitter: ",
  Wy = "impressions-tracker: ",
  khe = "events-tracker: ",
  Wat = "unique-keys-tracker: ",
  NB = "cleanup: ",
  RB = "Global fetch API is not available.";
function qat(t, e) {
  var n = t.log,
    r = t.core.authorizationKey,
    a = t.version,
    s = t.runtime,
    i = s.ip,
    o = s.hostname,
    u = e && e();
  u || n.error(hhe, [RB]);
  var l = {
    Accept: "application/json",
    "Content-Type": "application/json",
    Authorization: "Bearer " + r,
    SplitSDKVersion: a,
  };
  return (
    i && (l.SplitSDKMachineIP = i),
    o && (l.SplitSDKMachineName = o),
    function (d, p, m, y) {
      p === void 0 && (p = {}),
        m === void 0 && (m = function () {}),
        y === void 0 && (y = !1);
      var I = {
        headers: p.headers ? Jn({}, l, p.headers) : l,
        method: p.method || "GET",
        body: p.body,
      };
      return u
        ? u(d, I)
            .then(function (O) {
              return O.ok
                ? (m(), O)
                : O.text().then(function (g) {
                    return Promise.reject({ response: O, message: g });
                  });
            })
            .catch(function (O) {
              var g = O && O.response,
                C = "";
              if (g)
                switch (g.status) {
                  case 404:
                    C = "Invalid SDK key or resource not found.";
                    break;
                  default:
                    C = O.message;
                    break;
                }
              else C = O.message || "Network Error";
              (!g || g.status !== 403) &&
                n[y ? "info" : "error"](Che, [
                  g ? g.status : "NO_STATUS",
                  d,
                  C,
                ]);
              var H = new Error(C);
              throw ((H.statusCode = g && g.status), m(H), H);
            })
        : Promise.reject(new Error(RB));
    }
  );
}
var Oo = "control",
  kB = { treatment: Oo, config: null },
  MN = "IMPRESSION",
  DN = "EVENT",
  ed = "DEBUG",
  nl = "OPTIMIZED",
  td = "NONE",
  Bp = "localhost",
  GG = "standalone",
  Yat = "producer",
  FG = "consumer",
  UG = "consumer_partial",
  qy = "MEMORY",
  GN = "LOCALSTORAGE",
  nd = "GRANTED",
  Zm = "DECLINED",
  KG = "UNKNOWN",
  xhe = "getTreatment",
  FN = "getTreatments",
  Lhe = "getTreatmentWithConfig",
  Mhe = "getTreatmentsWithConfig",
  Dhe = "getTreatmentsByFlagSet",
  Ghe = "getTreatmentsByFlagSets",
  Fhe = "getTreatmentsWithConfigByFlagSet",
  Uhe = "getTreatmentsWithConfigByFlagSets",
  Nd = "track",
  US = "split",
  xB = "splits",
  LB = "names",
  i0 = 0,
  UN = 1,
  Khe = 2,
  Xat = 0,
  Qat = 1,
  Jat = 2,
  Zat = 0,
  eit = 1,
  tit = 2,
  Bhe = "sp",
  nit = "im",
  sit = "ic",
  rit = "ev",
  Mb = "te",
  ait = "to",
  iit = "se",
  Vhe = "ms",
  oit = "t",
  uit = "ts",
  lit = "tc",
  cit = "tcs",
  dit = "tf",
  pit = "tfs",
  hit = "tcf",
  fit = "tcfs",
  mit = "tr",
  Sit = 0,
  yit = 10,
  git = 20,
  h1 = 30,
  vit = 40,
  jhe = 50,
  _it = 60,
  MB = 70,
  zhe = 80,
  bit = 0,
  Eit = 1,
  Tit = 1,
  wit = 0,
  Pit = 1,
  Iit = 2,
  f1 = { headers: { "Cache-Control": "no-cache" } };
function Cit(t) {
  return "users=" + encodeURIComponent(t);
}
function Ait(t, e, n) {
  var r = t.urls,
    a =
      t.sync.__splitFiltersValidation &&
      t.sync.__splitFiltersValidation.queryString,
    s = t.sync.impressionsMode,
    i = qat(t, e.getFetch);
  return {
    getSdkAPIHealthCheck: function () {
      var o = r.sdk + "/version";
      return i(o)
        .then(function () {
          return !0;
        })
        .catch(function () {
          return !1;
        });
    },
    getEventsAPIHealthCheck: function () {
      var o = r.events + "/version";
      return i(o)
        .then(function () {
          return !0;
        })
        .catch(function () {
          return !1;
        });
    },
    fetchAuth: function (o) {
      var u = r.auth + "/v2/auth";
      if (o) {
        var l = o.map(Cit).join("&");
        l && (u += "?" + l);
      }
      return i(u, void 0, n.trackHttp(ait));
    },
    fetchSplitChanges: function (o, u, l) {
      var c =
        r.sdk +
        "/splitChanges?since=" +
        o +
        (l ? "&till=" + l : "") +
        (a || "");
      return i(c, u ? f1 : void 0, n.trackHttp(Bhe)).catch(function (d) {
        throw (d.statusCode === 414 && t.log.error(Hhe), d);
      });
    },
    fetchSegmentChanges: function (o, u, l, c) {
      var d =
        r.sdk +
        "/segmentChanges/" +
        u +
        "?since=" +
        o +
        (c ? "&till=" + c : "");
      return i(d, l ? f1 : void 0, n.trackHttp(iit));
    },
    fetchMySegments: function (o, u) {
      var l = r.sdk + "/mySegments/" + encodeURIComponent(o);
      return i(l, u ? f1 : void 0, n.trackHttp(Vhe));
    },
    postEventsBulk: function (o, u) {
      var l = r.events + "/events/bulk";
      return i(l, { method: "POST", body: o, headers: u }, n.trackHttp(rit));
    },
    postTestImpressionsBulk: function (o, u) {
      var l = r.events + "/testImpressions/bulk";
      return i(
        l,
        {
          method: "POST",
          body: o,
          headers: Jn({ SplitSDKImpressionsMode: s }, u),
        },
        n.trackHttp(nit)
      );
    },
    postTestImpressionsCount: function (o, u) {
      var l = r.events + "/testImpressions/count";
      return i(l, { method: "POST", body: o, headers: u }, n.trackHttp(sit));
    },
    postUniqueKeysBulkCs: function (o, u) {
      var l = r.telemetry + "/v1/keys/cs";
      return i(l, { method: "POST", body: o, headers: u }, n.trackHttp(Mb));
    },
    postUniqueKeysBulkSs: function (o, u) {
      var l = r.telemetry + "/v1/keys/ss";
      return i(l, { method: "POST", body: o, headers: u }, n.trackHttp(Mb));
    },
    postMetricsConfig: function (o, u) {
      var l = r.telemetry + "/v1/metrics/config";
      return i(l, { method: "POST", body: o, headers: u }, n.trackHttp(Mb), !0);
    },
    postMetricsUsage: function (o, u) {
      var l = r.telemetry + "/v1/metrics/usage";
      return i(l, { method: "POST", body: o, headers: u }, n.trackHttp(Mb), !0);
    },
  };
}
function AI(t, e, n, r) {
  r === void 0 && (r = "task");
  var a = 0,
    s,
    i = !1,
    o = 0,
    u,
    l;
  function c() {
    for (var p = [], m = 0; m < arguments.length; m++) p[m] = arguments[m];
    return (
      a++,
      t.debug(dpe, [r]),
      (s = (
        s
          ? s.then(function () {
              return e.apply(void 0, p);
            })
          : e.apply(void 0, p)
      ).then(function (y) {
        return a--, y;
      })),
      s
    );
  }
  function d(p) {
    return c.apply(void 0, u).then(function (m) {
      return i && p === o && (l = setTimeout(d, n, p)), m;
    });
  }
  return {
    execute: c,
    isExecuting: function () {
      return a > 0;
    },
    start: function () {
      for (var p = [], m = 0; m < arguments.length; m++) p[m] = arguments[m];
      if (!i) return (i = !0), o++, (u = p), t.debug(cpe, [r, n]), d(o);
    },
    stop: function () {
      (i = !1), l && (t.debug(ppe, [r]), clearTimeout(l), (l = void 0));
    },
    isRunning: function () {
      return i;
    },
  };
}
function am(t, e, n, r, a, s, i, o) {
  i === void 0 && (i = 0);
  var u = 0,
    l;
  function c() {
    if (n.isEmpty() && !l) return Promise.resolve();
    l = n.pop(l);
    var d = typeof l.length == "number" ? l.length + " " + a : a;
    t[o ? "debug" : "info"](Ope, [d]);
    var p = JSON.stringify(s ? s(l) : l);
    return (
      i || (l = void 0),
      e(p)
        .then(function () {
          (u = 0), (l = void 0);
        })
        .catch(function (m) {
          i
            ? u === i
              ? ((u = 0), (l = void 0), t[o ? "debug" : "warn"](kN, [d, m]))
              : (u++, t[o ? "debug" : "warn"](Wpe, [d, m]))
            : t[o ? "debug" : "warn"](kN, [d, m]);
        })
    );
  }
  return AI(t, c, r, a + " submitter");
}
function $he(t, e) {
  var n = !1,
    r,
    a = t.start;
  t.start = function () {
    (n = !0), (r = setTimeout(a, e));
  };
  var s = t.stop;
  return (
    (t.stop = function () {
      (n = !1), clearTimeout(r), s();
    }),
    (t.isRunning = function () {
      return n;
    }),
    t
  );
}
var DB = "events";
function Oit(t) {
  var e = t.settings,
    n = e.log,
    r = e.scheduler.eventsPushRate,
    a = e.startup.eventsFirstPushWindow,
    s = t.splitApi.postEventsBulk,
    i = t.storage.events,
    o = am(n, s, i, r, DB);
  return (
    a > 0 && (o = $he(o, a)),
    i.setOnFullQueueCb(function () {
      o.isRunning() && (n.info(CI, [DB]), o.execute());
    }),
    o
  );
}
function Hit(t, e, n) {
  return (
    n === void 0 && (n = !1),
    Is(t) && Is(e)
      ? (n && ((t = t.toLowerCase()), (e = e.toLowerCase())),
        t.slice(t.length - e.length) === e)
      : !1
  );
}
function BG(t, e) {
  var n;
  if (ja(t))
    for (var r = Object.keys(t), a = 0; a < r.length && !n; a++) {
      var s = r[a],
        i = e(t[s], s, t);
      i && (n = t[s]);
    }
  else if (Array.isArray(t))
    for (var a = 0; a < t.length && !n; a++) {
      var i = e(t[a], a, t);
      i && (n = t[a]);
    }
  return n;
}
function vd(t, e) {
  if (Array.isArray(t) && typeof e == "function") {
    for (var n = 0; n < t.length; n++) if (e(t[n], n, t) === !0) return n;
  }
  return -1;
}
function _o(t, e) {
  var n = Object.keys(t);
  return (
    n.forEach(function (r) {
      return e(t[r], r, t);
    }),
    t
  );
}
function KN(t, e, n) {
  var r = n;
  try {
    var a = e.split("."),
      s = t;
    a.forEach(function (i) {
      return (s = s[i]);
    }),
      typeof s < "u" && (r = s);
  } catch {}
  return r;
}
function Nit(t, e) {
  var n = {};
  if (Array.isArray(t) && Is(e))
    for (var r = 0; r < t.length; r++) {
      var a = t[r][e];
      Is(a) && (n[a] || (n[a] = []), n[a].push(t[r]));
    }
  return n;
}
function VG(t) {
  return t === !0 || t === !1;
}
function Tl(t) {
  return (
    t instanceof Number && (t = t.valueOf()),
    typeof t == "number"
      ? Number.isFinite
        ? Number.isFinite(t)
        : isFinite(t)
      : !1
  );
}
function BN(t) {
  return t instanceof Number && (t = t.valueOf()), t !== t;
}
function ja(t) {
  return (
    t !== null &&
    typeof t == "object" &&
    (t.constructor === Object ||
      (t.constructor != null && t.constructor.name === "Object"))
  );
}
function Is(t) {
  return typeof t == "string" || t instanceof String;
}
function Whe(t) {
  return Is(t) ? t.toUpperCase() : t;
}
function QE(t, e) {
  for (var n = [], r = 2; r < arguments.length; r++) n[r - 2] = arguments[r];
  var a = t;
  if (
    (ja(e) &&
      Object.keys(e).forEach(function (i) {
        var o = e[i];
        ja(o) && (a[i] && ja(a[i]) ? (o = QE({}, a[i], o)) : (o = QE({}, o))),
          o !== void 0 && (a[i] = o);
      }),
    n && n.length)
  ) {
    var s = n.splice(0, 1)[0];
    a = QE.apply(void 0, y4e([a, s], n, !1));
  }
  return a;
}
function im(t, e) {
  return Is(t) && Is(e) ? t.slice(0, e.length) === e : !1;
}
function bh(t) {
  if (typeof t == "number") return t;
  if (ja(t) && typeof t.valueOf == "function") {
    var e = t.valueOf();
    t = ja(e) ? e + "" : e;
  }
  return typeof t != "string"
    ? t === 0
      ? t
      : +t
    : ((t = t.replace(/^\s+|\s+$/g, "")), +t);
}
function qhe(t) {
  if (t == null) return "";
  if (typeof t == "string") return t;
  if (Array.isArray(t))
    return (
      t.map(function (n) {
        return Is(n) ? n : "";
      }) + ""
    );
  var e = t + "";
  return e === "0" && 1 / t === Number.NEGATIVE_INFINITY ? "-0" : e;
}
function OI(t) {
  var e = {};
  return t.filter(function (n) {
    return Object.prototype.hasOwnProperty.call(e, n) ? !1 : (e[n] = !0);
  });
}
function Rit(t, e) {
  e === void 0 && (e = JSON.stringify);
  var n = {};
  return t.filter(function (r) {
    var a = e(r);
    return Object.prototype.hasOwnProperty.call(n, a) ? !1 : (n[a] = !0);
  });
}
var GB = "impressions";
function Yhe(t, e) {
  var n = Nit(e, "feature"),
    r = [];
  return (
    _o(n, function (a, s) {
      r.push({
        f: s,
        i: a.map(function (i) {
          var o = {
            k: i.keyName,
            t: i.treatment,
            m: i.time,
            c: i.changeNumber,
            r: t ? i.label : void 0,
            b: i.bucketingKey ? i.bucketingKey : void 0,
            pt: i.pt ? i.pt : void 0,
          };
          return o;
        }),
      });
    }),
    r
  );
}
function kit(t) {
  var e = t.settings,
    n = e.log,
    r = e.scheduler.impressionsRefreshRate,
    a = e.core.labelsEnabled,
    s = t.splitApi.postTestImpressionsBulk,
    i = t.storage.impressions,
    o = am(n, s, i, r, GB, Yhe.bind(void 0, a), 1);
  return (
    i.setOnFullQueueCb(function () {
      o.isRunning() && (n.info(CI, [GB]), o.execute());
    }),
    o
  );
}
function Xhe(t) {
  for (var e = [], n = Object.keys(t), r = 0; r < n.length; r++) {
    var a = n[r].split("::");
    if (a.length === 2) {
      var s = a[0],
        i = a[1],
        o = { f: s, m: Number(i), rc: t[n[r]] };
      e.push(o);
    }
  }
  return { pf: e };
}
var xit = 18e5;
function Lit(t) {
  var e = t.settings.log,
    n = t.splitApi.postTestImpressionsCount,
    r = t.storage.impressionCounts;
  if (r) return am(e, n, r, xit, "impression counts", Xhe, 1);
}
var sd = "state::splits-arrived",
  HI = "state::splits-cache-loaded",
  _d = "state::segments-arrived",
  JE = "init::timeout",
  ic = "init::ready",
  o0 = "init::cache-ready",
  Qhe = "state::update";
function Mit(t, e) {
  if (t === "localhost") return Bp;
  if ([GG, Yat, FG, UG].indexOf(e) === -1) throw Error("Invalid mode provided");
  return e;
}
function p_(t) {
  return FG === t || UG === t;
}
var Dit = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/;
function jG(t, e, n, r) {
  if ((r === void 0 && (r = "feature flag name"), e == null))
    t.error(Xm, [n, r]);
  else if (!Is(e)) t.error(Qm, [n, r]);
  else {
    if ((Dit.test(e) && (t.warn(Qpe, [n, r, e]), (e = e.trim())), e.length > 0))
      return e;
    t.error(Jm, [n, r]);
  }
  return !1;
}
function zG(t, e, n, r, a) {
  if (
    (r === void 0 && (r = "feature flag names"),
    a === void 0 && (a = "feature flag name"),
    Array.isArray(e) && e.length > 0)
  ) {
    var s = [];
    if (
      (e.forEach(function (i) {
        var o = jG(t, i, n, a);
        o && s.push(o);
      }),
      s.length)
    )
      return OI(s);
  }
  return t.error(Ihe, [n, r]), !1;
}
var $G = [
    { type: "bySet", maxLength: 50, queryParam: "sets=" },
    { type: "byName", maxLength: 400, queryParam: "names=" },
    { type: "byPrefix", maxLength: 50, queryParam: "prefixes=" },
  ],
  FB = /^[a-z0-9][_a-z0-9]{0,49}$/,
  Git = /[A-Z]/;
function Fit(t) {
  return $G.some(function (e) {
    return e.type === t;
  });
}
function Uit(t, e, n, r) {
  var a = zG(t, n, Da, e + " filter", e + " filter value");
  if (a) {
    if ((e === "bySet" && (a = Jhe(t, a, Da)), a.length > r))
      throw new Error(
        r +
          " unique values can be specified at most for '" +
          e +
          "' filter. You passed " +
          a.length +
          ". Please consider reducing the amount or using other filter."
      );
    a.sort();
  }
  return a || [];
}
function Kit(t) {
  var e = [];
  return (
    $G.forEach(function (n) {
      var r = n.type,
        a = n.queryParam,
        s = t[r];
      s.length > 0 &&
        e.push(
          a +
            s
              .map(function (i) {
                return encodeURIComponent(i);
              })
              .join(",")
        );
    }),
    e.length > 0 ? "&" + e.join("&") : null
  );
}
function Jhe(t, e, n) {
  var r = e
    .map(function (a) {
      return Git.test(a) && (t.warn(ohe, [n, a]), (a = a.toLowerCase())), a;
    })
    .filter(function (a) {
      return FB.test(a)
        ? typeof a == "string"
        : (t.warn(ihe, [n, a, FB, a]), !1);
    });
  return OI(r);
}
function m1(t, e) {
  return BG(t, function (n) {
    return n.type === e && n.values.length > 0;
  });
}
function Bit(t, e, n) {
  var r = {
    validFilters: [],
    queryString: null,
    groupedFilters: { bySet: [], byName: [], byPrefix: [] },
  };
  if (!e) return r;
  if (p_(n)) return t.warn(nhe), r;
  if (!Array.isArray(e) || e.length === 0) return t.warn(rhe), r;
  (r.validFilters = e.filter(function (s, i) {
    return s && Fit(s.type) && Array.isArray(s.values)
      ? ((r.groupedFilters[s.type] = r.groupedFilters[s.type].concat(s.values)),
        !0)
      : (t.warn(she, [i]), !1);
  })),
    $G.forEach(function (s) {
      var i = s.type,
        o = s.maxLength;
      r.groupedFilters[i].length > 0 &&
        (r.groupedFilters[i] = Uit(t, i, r.groupedFilters[i], o));
    });
  var a = m1(r.validFilters, "bySet");
  return (
    a &&
      ((m1(r.validFilters, "byName") || m1(r.validFilters, "byPrefix")) &&
        t.error(Nhe),
      Jn(r.groupedFilters, { byName: [], byPrefix: [] })),
    (r.queryString = Kit(r.groupedFilters)),
    t.debug(hpe, [r.queryString]),
    r
  );
}
function Vit(t, e, n, r) {
  var a = zG(t, n, e, "flag sets", "flag set"),
    s = a ? Jhe(t, a, e) : [];
  return (
    r.length > 0 &&
      (s = s.filter(function (i) {
        return r.indexOf(i) > -1 ? !0 : (t.warn(uhe, [e, i]), !1);
      })),
    s
  );
}
function jit(t, e) {
  return (
    (e = Whe(e)),
    [ed, nl, td].indexOf(e) > -1
      ? e
      : (t.error(DG, ["impressionsMode", [ed, nl, td], nl]), nl)
  );
}
var UB = 250;
function S1(t, e, n, r) {
  if (e == null) return t.error(Xm, [n, r]), !1;
  if (Tl(e)) return t.warn(Xpe, [n, r, e]), qhe(e);
  if (Is(e)) {
    if (((e = e.trim()), e.length > 0 && e.length <= UB)) return e;
    e.length === 0
      ? t.error(Jm, [n, r])
      : e.length > UB && t.error(whe, [n, r]);
  } else t.error(Qm, [n, r]);
  return !1;
}
function lv(t, e, n) {
  if (ja(e)) {
    var r = S1(t, e.matchingKey, n, "matchingKey"),
      a = S1(t, e.bucketingKey, n, "bucketingKey");
    return r && a
      ? { matchingKey: r, bucketingKey: a }
      : (t.error(Phe, [n]), !1);
  } else return S1(t, e, n, "key");
}
var zit = /[A-Z]/,
  y1 = "traffic_type";
function NI(t, e, n) {
  if (e == null) t.error(Xm, [n, y1]);
  else if (!Is(e)) t.error(Qm, [n, y1]);
  else if (e.length === 0) t.error(Jm, [n, y1]);
  else return zit.test(e) && (t.warn(Zpe, [n]), (e = e.toLowerCase())), e;
  return !1;
}
var Eh = {
  mode: GG,
  core: {
    authorizationKey: void 0,
    key: void 0,
    trafficType: void 0,
    labelsEnabled: !0,
    IPAddressesEnabled: void 0,
  },
  scheduler: {
    featuresRefreshRate: 60,
    segmentsRefreshRate: 60,
    telemetryRefreshRate: 3600,
    impressionsRefreshRate: 300,
    offlineRefreshRate: 15,
    eventsPushRate: 60,
    eventsQueueSize: 500,
    impressionsQueueSize: 3e4,
    pushRetryBackoffBase: 1,
  },
  urls: {
    sdk: "https://sdk.split.io/api",
    events: "https://events.split.io/api",
    auth: "https://auth.split.io/api",
    streaming: "https://streaming.split.io",
    telemetry: "https://telemetry.split.io/api",
  },
  storage: void 0,
  debug: void 0,
  impressionListener: void 0,
  version: void 0,
  integrations: void 0,
  streamingEnabled: !0,
  sync: {
    splitFilters: void 0,
    impressionsMode: nl,
    localhostMode: void 0,
    enabled: !0,
  },
  log: void 0,
};
function qo(t) {
  return Math.round(t * 1e3);
}
function $it(t, e) {
  var n = e.defaults,
    r = e.runtime,
    a = e.storage,
    s = e.integrations,
    i = e.logger,
    o = e.localhost,
    u = e.consent,
    l = QE({}, Eh, n, t),
    c = i(l);
  (l.log = c), (l.sync.impressionsMode = jit(c, l.sync.impressionsMode));
  function d(g, C, H) {
    return C >= H ? C : (c.error(Ohe, [g, H]), H);
  }
  var p = l.scheduler,
    m = l.startup;
  (p.featuresRefreshRate = qo(p.featuresRefreshRate)),
    (p.segmentsRefreshRate = qo(p.segmentsRefreshRate)),
    (p.offlineRefreshRate = qo(p.offlineRefreshRate)),
    (p.eventsPushRate = qo(p.eventsPushRate)),
    (p.telemetryRefreshRate = qo(
      d("telemetryRefreshRate", p.telemetryRefreshRate, 60)
    )),
    KN(t, "scheduler.impressionsRefreshRate") === void 0 &&
      l.sync.impressionsMode === ed &&
      (p.impressionsRefreshRate = 60),
    (p.impressionsRefreshRate = qo(p.impressionsRefreshRate)),
    p.metricsRefreshRate &&
      c.warn(
        "`metricsRefreshRate` will be deprecated soon. For configuring telemetry rates, update `telemetryRefreshRate` value in configs"
      ),
    (m.requestTimeoutBeforeReady = qo(m.requestTimeoutBeforeReady)),
    (m.readyTimeout = qo(m.readyTimeout)),
    (m.eventsFirstPushWindow = qo(m.eventsFirstPushWindow)),
    (l.mode = Mit(l.core.authorizationKey, l.mode)),
    a && (l.storage = a(l));
  var y = l.core.key;
  if (e.acceptKey) {
    if (
      (l.mode === Bp && y === void 0
        ? (l.core.key = "localhost_key")
        : (l.core.key = lv(c, y, "Client instantiation")),
      e.acceptTT)
    ) {
      var I = l.core.trafficType;
      I !== void 0 && (l.core.trafficType = NI(c, I, "Client instantiation"));
    }
  } else
    y !== void 0 && c.warn("Provided `key` is ignored in server-side SDK."),
      (l.core.key = void 0);
  (l.runtime = r(l)),
    s && (l.integrations = s(l)),
    o && (l.sync.localhostMode = o(l)),
    l.streamingEnabled !== !1 &&
      ((l.streamingEnabled = !0),
      (p.pushRetryBackoffBase = qo(p.pushRetryBackoffBase))),
    l.sync.enabled !== !1 && (l.sync.enabled = !0);
  var O = Bit(c, l.sync.splitFilters, l.mode);
  return (
    (l.sync.splitFilters = O.validFilters),
    (l.sync.__splitFiltersValidation = O),
    (l.userConsent = u(l)),
    l
  );
}
var g1 = "sdk_key";
function Wit(t, e) {
  var n = !1;
  return (
    e == null
      ? t.error(Xm, [c1, g1])
      : Is(e)
      ? e.length > 0
        ? (n = e)
        : t.error(Jm, [c1, g1])
      : t.error(Qm, [c1, g1]),
    n
  );
}
var ki = {};
function qit(t, e) {
  var n = Wit(t, e);
  return (
    n &&
      (ki[n]
        ? (t.warn(xN, [ki[n] + " factory/ies with this SDK Key"]), ki[n]++)
        : ((ki[n] = 1),
          Object.keys(ki).length > 1 &&
            t.warn(xN, ["an instance of the Split factory"]))),
    n
  );
}
function Yit(t) {
  ki[t] && ki[t]--, ki[t] === 0 && delete ki[t];
}
function ZE(t) {
  var e = t();
  return function () {
    return Math.round(t() - e);
  };
}
var KS,
  BS,
  VS,
  Xit = ((KS = {}), (KS[GG] = Xat), (KS[FG] = Qat), (KS[UG] = Jat), KS),
  Qit = ((BS = {}), (BS[nl] = Zat), (BS[ed] = eit), (BS[td] = tit), BS),
  Jit = ((VS = {}), (VS[KG] = 1), (VS[nd] = 2), (VS[Zm] = 3), VS);
function Zit() {
  return Object.keys(ki).length;
}
function eot() {
  return Object.keys(ki).reduce(function (t, e) {
    return t + ki[e] - 1;
  }, 0);
}
function tot(t) {
  var e = 0;
  t.validFilters.forEach(function (a) {
    a.type === "bySet" && (e += a.values.length);
  });
  var n = t.groupedFilters.bySet.length,
    r = e - n;
  return { flagSetsTotal: e, flagSetsIgnored: r };
}
function not(t, e) {
  return { oM: Xit[t], st: e.toLowerCase(), aF: Zit(), rF: eot() };
}
function sot(t, e) {
  return {
    isEmpty: function () {
      return !1;
    },
    clear: function () {},
    pop: function () {
      var n = e.urls,
        r = e.scheduler,
        a = e.core.key !== void 0,
        s = tot(e.sync.__splitFiltersValidation),
        i = s.flagSetsTotal,
        o = s.flagSetsIgnored;
      return Jn(not(e.mode, e.storage.type), {
        sE: e.streamingEnabled,
        rR: {
          sp: r.featuresRefreshRate / 1e3,
          se: a ? void 0 : r.segmentsRefreshRate / 1e3,
          ms: a ? r.segmentsRefreshRate / 1e3 : void 0,
          im: r.impressionsRefreshRate / 1e3,
          ev: r.eventsPushRate / 1e3,
          te: r.telemetryRefreshRate / 1e3,
        },
        uO: {
          s: n.sdk !== Eh.urls.sdk,
          e: n.events !== Eh.urls.events,
          a: n.auth !== Eh.urls.auth,
          st: n.streaming !== Eh.urls.streaming,
          t: n.telemetry !== Eh.urls.telemetry,
        },
        iQ: r.impressionsQueueSize,
        eQ: r.eventsQueueSize,
        iM: Qit[e.sync.impressionsMode],
        iL: !!e.impressionListener,
        hP: !1,
        tR: t.getTimeUntilReady(),
        tC: t.getTimeUntilReadyFromCache(),
        nR: t.getNonReadyUsage(),
        t: t.popTags(),
        i:
          e.integrations &&
          e.integrations.map(function (u) {
            return u.type;
          }),
        uC: e.userConsent ? Jit[e.userConsent] : 0,
        fsT: i,
        fsI: o,
      });
    },
  };
}
function rot(t) {
  var e = t.storage.telemetry,
    n = t.platform.now;
  if (!(!e || !n)) {
    var r = t.settings,
      a = t.settings,
      s = a.log,
      i = a.scheduler.telemetryRefreshRate,
      o = t.splitApi,
      u = t.readiness,
      l = t.sdkReadinessManager,
      c = ZE(n),
      d = $he(
        am(s, o.postMetricsUsage, e, i, "telemetry stats", void 0, 0, !0),
        i
      );
    return (
      u.gate.once(o0, function () {
        e.recordTimeUntilReadyFromCache(c());
      }),
      l.incInternalReadyCbCount(),
      u.gate.once(ic, function () {
        if ((e.recordTimeUntilReady(c()), d.isRunning())) {
          var p = am(
            s,
            o.postMetricsConfig,
            sot(e, r),
            0,
            "telemetry config",
            void 0,
            0,
            !0
          );
          p.execute();
        }
      }),
      d
    );
  }
}
var KB = "unique keys",
  aot = 9e5;
function iot(t) {
  var e = t.settings,
    n = e.log,
    r = e.core.key,
    a = t.splitApi,
    s = a.postUniqueKeysBulkCs,
    i = a.postUniqueKeysBulkSs,
    o = t.storage.uniqueKeys,
    u = r !== void 0,
    l = u ? s : i,
    c = am(n, l, o, aot, KB);
  return (
    o.setOnFullQueueCb(function () {
      c.isRunning() && (n.info(CI, [KB]), c.execute());
    }),
    c
  );
}
function oot(t) {
  var e = [kit(t), Oit(t)],
    n = Lit(t);
  n && e.push(n);
  var r = rot(t);
  return (
    t.storage.uniqueKeys && e.push(iot(t)),
    {
      start: function (a) {
        a ||
          e.forEach(function (s) {
            return s.start();
          }),
          r && r.start();
      },
      stop: function (a) {
        e.forEach(function (s) {
          return s.stop();
        }),
          !a && r && r.stop();
      },
      isRunning: function () {
        return e.some(function (a) {
          return a.isRunning();
        });
      },
      execute: function (a) {
        var s = a
          ? []
          : e.map(function (i) {
              return i.execute();
            });
        return r && s.push(r.execute()), Promise.all(s);
      },
      isExecuting: function () {
        return e.some(function (a) {
          return a.isExecuting();
        });
      },
    }
  );
}
var uot = 600,
  Yy = "PUSH_NONRETRYABLE_ERROR",
  VN = "PUSH_RETRYABLE_ERROR",
  Xy = "PUSH_SUBSYSTEM_UP",
  Tf = "PUSH_SUBSYSTEM_DOWN",
  Zhe = "MY_SEGMENTS_UPDATE",
  efe = "MY_SEGMENTS_UPDATE_V2",
  tfe = "SEGMENT_UPDATE",
  nfe = "SPLIT_KILL",
  sfe = "SPLIT_UPDATE",
  BB = "CONTROL",
  jN = "OCCUPANCY",
  fc;
(function (t) {
  (t.STREAMING_DISABLED = "STREAMING_DISABLED"),
    (t.STREAMING_PAUSED = "STREAMING_PAUSED"),
    (t.STREAMING_RESUMED = "STREAMING_RESUMED"),
    (t.STREAMING_RESET = "STREAMING_RESET");
})(fc || (fc = {}));
function u0(t) {
  var e = t.userConsent;
  return !e || e === nd;
}
function lot(t, e) {
  return function (n) {
    var r = n.settings,
      a = n.settings,
      s = a.log,
      i = a.streamingEnabled,
      o = a.sync.enabled,
      u = n.telemetryTracker,
      l = t && t(n),
      c = o && i && l && e ? e(n, l) : void 0,
      d = oot(n);
    function p() {
      l.isRunning()
        ? s.info(Npe)
        : (s.info(Hpe), l.start(), u.streamingEvent(MB, Eit));
    }
    function m() {
      s.info(Rpe),
        l.isRunning() && (l.stop(), u.streamingEvent(MB, bit)),
        l.syncAll();
    }
    c && (c.on(Xy, m), c.on(Tf, p));
    var y = !1,
      I = !0;
    return {
      pollingManager: l,
      pushManager: c,
      submitterManager: d,
      start: function () {
        (y = !0),
          l &&
            (o
              ? c
                ? (I && (l.syncAll(), (I = !1)), c.start())
                : l.start()
              : I && (l.syncAll(), (I = !1))),
          d.start(!u0(r));
      },
      stop: function () {
        (y = !1), c && c.stop(), l && l.isRunning() && l.stop(), d.stop();
      },
      isRunning: function () {
        return y;
      },
      flush: function () {
        return d.execute(!u0(r));
      },
      shared: function (O, g, C) {
        if (l) {
          var H = l.add(O, g, C);
          return {
            isRunning: H.isRunning,
            start: function () {
              o
                ? c
                  ? (l.isRunning()
                      ? C.splits.usesSegments() && H.start()
                      : H.execute(),
                    c.add(O, H))
                  : C.splits.usesSegments() && H.start()
                : g.isReady() || H.execute();
            },
            stop: function () {
              var B = l.get(O);
              B && (c && c.remove(O), B.isRunning() && B.stop(), l.remove(O));
            },
            flush: function () {
              return Promise.resolve();
            },
          };
        }
      },
    };
  };
}
var RI = (function () {
  function t(e, n, r) {
    (this.baseMillis = t.__TEST__BASE_MILLIS || n || t.DEFAULT_BASE_MILLIS),
      (this.maxMillis = t.__TEST__MAX_MILLIS || r || t.DEFAULT_MAX_MILLIS),
      (this.attempts = 0),
      (this.cb = e);
  }
  return (
    (t.prototype.scheduleCall = function () {
      var e = this,
        n = Math.min(
          this.baseMillis * Math.pow(2, this.attempts),
          this.maxMillis
        );
      return (
        this.timeoutID && clearTimeout(this.timeoutID),
        (this.timeoutID = setTimeout(function () {
          (e.timeoutID = void 0), e.cb();
        }, n)),
        this.attempts++,
        n
      );
    }),
    (t.prototype.reset = function () {
      (this.attempts = 0),
        this.timeoutID &&
          (clearTimeout(this.timeoutID), (this.timeoutID = void 0));
    }),
    (t.DEFAULT_BASE_MILLIS = 1e3),
    (t.DEFAULT_MAX_MILLIS = 18e5),
    t
  );
})();
function cot(t) {
  return Is(t.data) && (t.parsedData = JSON.parse(t.data)), t;
}
function dot(t) {
  if (t.data) {
    var e = JSON.parse(t.data);
    return (
      (e.parsedData = JSON.parse(e.data)),
      e.name && e.name === "[meta]occupancy" && (e.parsedData.type = jN),
      e
    );
  }
}
var pot = [/control_pri$/, /control_sec$/],
  hot = [yit, git];
function fot(t, e) {
  var n = pot.map(function (i) {
      return { regex: i, hasPublishers: !0, oTime: -1, cTime: -1 };
    }),
    r = !0,
    a = !0;
  function s() {
    return n.some(function (i) {
      return i.hasPublishers;
    });
  }
  return {
    handleOpen: function () {
      e.streamingEvent(Sit), t.emit(Xy);
    },
    isStreamingUp: function () {
      return a && r;
    },
    handleOccupancyEvent: function (i, o, u) {
      for (var l = 0; l < n.length; l++) {
        var c = n[l];
        if (c.regex.test(o)) {
          if ((e.streamingEvent(hot[l], i), u > c.oTime)) {
            (c.oTime = u), (c.hasPublishers = i !== 0);
            var d = s();
            a && (!d && r ? t.emit(Tf) : d && !r && t.emit(Xy)), (r = d);
          }
          return;
        }
      }
    },
    handleControlEvent: function (i, o, u) {
      if (i === fc.STREAMING_RESET) {
        t.emit(i);
        return;
      }
      for (var l = 0; l < n.length; l++) {
        var c = n[l];
        if (c.regex.test(o)) {
          u > c.cTime &&
            ((c.cTime = u),
            i === fc.STREAMING_DISABLED
              ? (e.streamingEvent(h1, wit), t.emit(Yy))
              : r &&
                (i === fc.STREAMING_PAUSED && a
                  ? (e.streamingEvent(h1, Iit), t.emit(Tf))
                  : i === fc.STREAMING_RESUMED &&
                    !a &&
                    (e.streamingEvent(h1, Pit), t.emit(Xy))),
            (a = i === fc.STREAMING_RESUMED));
          return;
        }
      }
    },
  };
}
function mot(t, e, n) {
  var r = fot(e, n);
  function a(s) {
    if (s.parsedData && s.parsedData.code) {
      var i = s.parsedData.code;
      if ((n.streamingEvent(_it, i), 40140 <= i && i <= 40149)) return !0;
      if (4e4 <= i && i <= 49999) return !1;
    } else n.streamingEvent(vit, Tit);
    return !0;
  }
  return {
    handleOpen: function () {
      r.handleOpen();
    },
    handleError: function (s) {
      var i = s;
      try {
        i = cot(s);
      } catch (u) {
        t.warn(jpe, [u]);
      }
      var o = (i.parsedData && i.parsedData.message) || i.message;
      t.error(mhe, [o]), a(i) ? e.emit(VN) : e.emit(Yy);
    },
    handleMessage: function (s) {
      var i;
      try {
        if (((i = dot(s)), !i)) return;
      } catch (d) {
        t.warn(zpe, [d]);
        return;
      }
      var o = i.parsedData,
        u = i.data,
        l = i.channel,
        c = i.timestamp;
      if (
        (t.debug(lpe, [u]),
        !(!r.isStreamingUp() && [jN, BB].indexOf(o.type) === -1))
      )
        switch (o.type) {
          case sfe:
          case tfe:
          case efe:
          case nfe:
            e.emit(o.type, o);
            break;
          case Zhe:
            e.emit(o.type, o, l);
            break;
          case jN:
            r.handleOccupancyEvent(o.metrics.publishers, l, c);
            break;
          case BB:
            r.handleControlEvent(o.controlType, l, c);
            break;
        }
    },
  };
}
function Sot(t, e) {
  var n = 0,
    r = -1,
    a = !1,
    s,
    i,
    o = new RI(u);
  function u() {
    if (((s = !0), n > r)) {
      a = !1;
      var l = n;
      t.execute(i, !0).then(function (c) {
        s &&
          (c !== !1 && (i && e.trackUpdatesFromSSE(Vhe), (r = Math.max(r, l))),
          a ? u() : o.scheduleCall());
      });
    } else s = !1;
  }
  return {
    put: function (l, c) {
      l <= r ||
        l <= n ||
        ((n = l), (a = !0), (i = c), (o.timeoutID || !s) && u(), o.reset());
    },
    stop: function () {
      (s = !1), o.reset();
    },
  };
}
var rfe = 1e4,
  afe = 6e4,
  ife = 10;
function yot(t, e, n) {
  function r(s) {
    var i = 0,
      o = !1,
      u,
      l,
      c = new RI(d, rfe, afe);
    function d() {
      (u = !0),
        i > n.getChangeNumber(s)
          ? ((o = !1),
            e.execute(!1, s, !0, l ? i : void 0).then(function () {
              if (u)
                if (o) d();
                else {
                  var p = c.attempts + 1;
                  if (i <= n.getChangeNumber(s)) {
                    t.debug(
                      "Refresh completed" +
                        (l ? " bypassing the CDN" : "") +
                        " in " +
                        p +
                        " attempts."
                    ),
                      (u = !1);
                    return;
                  }
                  if (p < ife) {
                    c.scheduleCall();
                    return;
                  }
                  l
                    ? (t.debug(
                        "No changes fetched after " +
                          p +
                          " attempts with CDN bypassed."
                      ),
                      (u = !1))
                    : (c.reset(), (l = !0), d());
                }
            }))
          : (u = !1);
    }
    return {
      put: function (p) {
        var m = n.getChangeNumber(s);
        p <= m ||
          p <= i ||
          ((i = p), (o = !0), (l = !1), (c.timeoutID || !u) && d(), c.reset());
      },
      stop: function () {
        (u = !1), c.reset();
      },
    };
  }
  var a = {};
  return {
    put: function (s) {
      var i = s.changeNumber,
        o = s.segmentName;
      a[o] || (a[o] = r(o)), a[o].put(i);
    },
    stop: function () {
      Object.keys(a).forEach(function (s) {
        return a[s].stop();
      });
    },
  };
}
function got(t, e, n, r, a, s) {
  var i = 0,
    o = !1,
    u,
    l,
    c,
    d = new RI(p, rfe, afe);
  function p() {
    if (((u = !0), i > e.getChangeNumber())) {
      o = !1;
      var y = c ? { payload: c, changeNumber: i } : void 0;
      n.execute(!0, l ? i : void 0, y).then(function () {
        if (u)
          if (o) p();
          else {
            y && a.trackUpdatesFromSSE(Bhe), s && s.execute(!0);
            var I = d.attempts + 1;
            if (i <= e.getChangeNumber()) {
              t.debug(
                "Refresh completed" +
                  (l ? " bypassing the CDN" : "") +
                  " in " +
                  I +
                  " attempts."
              ),
                (u = !1);
              return;
            }
            if (I < ife) {
              d.scheduleCall();
              return;
            }
            l
              ? (t.debug(
                  "No changes fetched after " +
                    I +
                    " attempts with CDN bypassed."
                ),
                (u = !1))
              : (d.reset(), (l = !0), p());
          }
      });
    } else u = !1;
  }
  function m(y, I) {
    var O = y.changeNumber,
      g = y.pcn,
      C = e.getChangeNumber();
    O <= C ||
      O <= i ||
      ((i = O),
      (o = !0),
      (l = !1),
      (c = void 0),
      I && C === g && (c = I),
      (d.timeoutID || !u) && p(),
      d.reset());
  }
  return {
    put: m,
    killSplit: function (y) {
      var I = y.changeNumber,
        O = y.splitName,
        g = y.defaultTreatment;
      e.killLocally(O, g, I) && r.emit(sd, !0), m({ changeNumber: I });
    },
    stop: function () {
      (u = !1), d.reset();
    },
  };
}
var ofe = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
function WG(t) {
  var e = String(t).replace(/[=]+$/, "");
  if (e.length % 4 === 1)
    throw new Error(
      "'atob' failed: The string to be decoded is not correctly encoded."
    );
  for (
    var n = "", r = 0, a = void 0, s = void 0, i = 0;
    (s = e.charAt(i++));
    ~s && ((a = r % 4 ? a * 64 + s : s), r++ % 4)
      ? (n += String.fromCharCode(255 & (a >> ((-2 * r) & 6))))
      : 0
  )
    s = ofe.indexOf(s);
  return n;
}
function vot(t) {
  for (
    var e = String(t), n = "", r = void 0, a = void 0, s = 0, i = ofe;
    e.charAt(s | 0) || ((i = "="), s % 1);
    n += i.charAt(63 & (r >> (8 - (s % 1) * 8)))
  ) {
    if (((a = e.charCodeAt((s += 3 / 4))), a > 255))
      throw new Error(
        "'btoa' failed: The string to be encoded contains characters outside of the Latin1 range."
      );
    r = (r << 8) | a;
  }
  return n;
}
function _ot(t) {
  var e = t.split(".")[1],
    n = e.replace(/-/g, "+").replace(/_/g, "/"),
    r = decodeURIComponent(
      WG(n)
        .split("")
        .map(function (a) {
          return "%" + ("00" + a.charCodeAt(0).toString(16)).slice(-2);
        })
        .join("")
    );
  return JSON.parse(r);
}
function bot(t, e) {
  var n = null;
  for (
    typeof t == "number" &&
    ((n = t),
    (t = function () {
      return null;
    }));
    n !== null || (n = t()) !== null;

  )
    n < 128
      ? e(n & 127)
      : n < 2048
      ? (e(((n >> 6) & 31) | 192), e((n & 63) | 128))
      : n < 65536
      ? (e(((n >> 12) & 15) | 224), e(((n >> 6) & 63) | 128), e((n & 63) | 128))
      : (e(((n >> 18) & 7) | 240),
        e(((n >> 12) & 63) | 128),
        e(((n >> 6) & 63) | 128),
        e((n & 63) | 128)),
      (n = null);
}
function Eot(t, e) {
  for (var n, r = null; (n = r !== null ? r : t()) !== null; ) {
    if (
      n >= 55296 &&
      n <= 57343 &&
      (r = t()) !== null &&
      r >= 56320 &&
      r <= 57343
    ) {
      e((n - 55296) * 1024 + r - 56320 + 65536), (r = null);
      continue;
    }
    e(n);
  }
  r !== null && e(r);
}
function Tot(t, e) {
  Eot(t, function (n) {
    bot(n, e);
  });
}
var VB = String.fromCharCode;
function wot(t) {
  if (typeof t != "string") throw TypeError("Illegal argument: " + typeof t);
  var e = 0;
  return function () {
    return e >= t.length ? null : t.charCodeAt(e++);
  };
}
function Pot() {
  var t = [],
    e = [];
  return function () {
    if (arguments.length === 0) return e.join("") + VB.apply(String, t);
    t.length + arguments.length > 1024 &&
      (e.push(VB.apply(String, t)), (t.length = 0)),
      Array.prototype.push.apply(t, arguments);
  };
}
function ufe(t) {
  var e;
  return Tot(wot(t), (e = Pot())), e();
}
/*!
 * +----------------------------------------------------------------------------------+
 * | murmurHash3.js v3.0.0 (http://github.com/karanlyons/murmurHash3.js)              |
 * | A TypeScript/JavaScript implementation of MurmurHash3's hashing algorithms.      |
 * |----------------------------------------------------------------------------------|
 * | Copyright (c) 2012-2020 Karan Lyons. Freely distributable under the MIT license. |
 * +----------------------------------------------------------------------------------+
 */ function Ld(t, e) {
  return (t & 65535) * e + ((((t >>> 16) * e) & 65535) << 16);
}
function v1(t, e) {
  return (t << e) | (t >>> (32 - e));
}
function Iot(t) {
  return (
    (t ^= t >>> 16),
    (t = Ld(t, 2246822507)),
    (t ^= t >>> 13),
    (t = Ld(t, 3266489909)),
    (t ^= t >>> 16),
    t
  );
}
function Cot(t, e) {
  (t = t || ""), (e = e || 0);
  for (
    var n = t.length % 4,
      r = t.length - n,
      a = e,
      s = 0,
      i = 3432918353,
      o = 461845907,
      u = 0;
    u < r;
    u = u + 4
  )
    (s =
      (t.charCodeAt(u) & 255) |
      ((t.charCodeAt(u + 1) & 255) << 8) |
      ((t.charCodeAt(u + 2) & 255) << 16) |
      ((t.charCodeAt(u + 3) & 255) << 24)),
      (s = Ld(s, i)),
      (s = v1(s, 15)),
      (s = Ld(s, o)),
      (a ^= s),
      (a = v1(a, 13)),
      (a = Ld(a, 5) + 3864292196);
  switch (((s = 0), n)) {
    case 3:
      s ^= (t.charCodeAt(u + 2) & 255) << 16;
    case 2:
      s ^= (t.charCodeAt(u + 1) & 255) << 8;
    case 1:
      (s ^= t.charCodeAt(u) & 255),
        (s = Ld(s, i)),
        (s = v1(s, 15)),
        (s = Ld(s, o)),
        (a ^= s);
  }
  return (a ^= t.length), (a = Iot(a)), a >>> 0;
}
function kI(t, e) {
  return Cot(ufe(t), e >>> 0);
}
function lfe(t, e) {
  return Math.abs(kI(t, e) % 100) + 1;
}
function Aot(t) {
  return function (n) {
    return t(n)
      .then(function (r) {
        return r.json();
      })
      .then(function (r) {
        if (r.token) {
          var a = _ot(r.token);
          if (typeof a.iat != "number" || typeof a.exp != "number")
            throw new Error(
              'token properties "issuedAt" (iat) or "expiration" (exp) are missing or invalid'
            );
          var s = JSON.parse(a["x-ably-capability"]);
          return Jn({ decodedToken: a, channels: s }, r);
        }
        return r;
      });
  };
}
function jB(t) {
  return vot(kI(t, 0).toString());
}
var Oot = "1.1",
  Hot = /^control_/;
function Not(t) {
  var e = {
      SplitSDKClientKey: Is(t.core.authorizationKey)
        ? t.core.authorizationKey.slice(-4)
        : "",
      SplitSDKVersion: t.version,
    },
    n = t.runtime,
    r = n.ip,
    a = n.hostname;
  return r && (e.SplitSDKMachineIP = r), a && (e.SplitSDKMachineName = a), e;
}
var Rot = (function () {
  function t(e, n, r) {
    if (((this.eventSource = r && r()), !this.eventSource))
      throw new Error("EventSource API is not available. ");
    (this.streamingUrl = e.urls.streaming + "/sse"),
      (this.useHeaders = n),
      (this.headers = Not(e));
  }
  return (
    (t.prototype.setEventHandler = function (e) {
      this.handler = e;
    }),
    (t.prototype.open = function (e) {
      this.close();
      var n = Object.keys(e.channels)
          .map(function (a) {
            var s = Hot.test(a) ? "[?occupancy=metrics.publishers]" : "";
            return encodeURIComponent(s + a);
          })
          .join(","),
        r =
          this.streamingUrl +
          "?channels=" +
          n +
          "&accessToken=" +
          e.token +
          "&v=" +
          Oot +
          "&heartbeats=true";
      (this.connection = new this.eventSource(
        this.useHeaders
          ? r
          : r +
            ("&SplitSDKVersion=" +
              this.headers.SplitSDKVersion +
              "&SplitSDKClientKey=" +
              this.headers.SplitSDKClientKey),
        this.useHeaders ? { headers: this.headers } : void 0
      )),
        this.handler &&
          (this.connection.addEventListener("open", this.handler.handleOpen),
          this.connection.addEventListener(
            "message",
            this.handler.handleMessage
          ),
          this.connection.addEventListener("error", this.handler.handleError));
    }),
    (t.prototype.close = function () {
      this.connection && this.connection.close();
    }),
    t
  );
})();
function om(t) {
  return ja(t) ? t.matchingKey : t;
}
function kot(t) {
  return ja(t) ? t.bucketingKey : void 0;
}
function cfe(t) {
  return ja(t)
    ? { matchingKey: t.matchingKey, bucketingKey: t.bucketingKey }
    : { matchingKey: t, bucketingKey: t };
}
var zB;
(function (t) {
  (t[(t.None = 0)] = "None"),
    (t[(t.Gzip = 1)] = "Gzip"),
    (t[(t.Zlib = 2)] = "Zlib");
})(zB || (zB = {}));
var Qy;
(function (t) {
  (t[(t.UnboundedFetchRequest = 0)] = "UnboundedFetchRequest"),
    (t[(t.BoundedFetchRequest = 1)] = "BoundedFetchRequest"),
    (t[(t.KeyList = 2)] = "KeyList"),
    (t[(t.SegmentRemoval = 3)] = "SegmentRemoval");
})(Qy || (Qy = {}));
var Db = (function () {
    if (
      [typeof Uint8Array, typeof Uint16Array, typeof Uint32Array].some(
        function (F) {
          return F != "function";
        }
      )
    )
      return "global Uint8Array object is not available for gzip/zlib decompression";
    var e = Uint8Array,
      n = Uint16Array,
      r = Uint32Array,
      a = new e([
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
        5, 5, 5, 5, 0, 0, 0, 0,
      ]),
      s = new e([
        0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10,
        10, 11, 11, 12, 12, 13, 13, 0, 0,
      ]),
      i = new e([
        16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15,
      ]),
      o = function (F, Se) {
        for (var ye = new n(31), Ae = 0; Ae < 31; ++Ae)
          ye[Ae] = Se += 1 << F[Ae - 1];
        for (var De = new r(ye[30]), Ae = 1; Ae < 30; ++Ae)
          for (var lt = ye[Ae]; lt < ye[Ae + 1]; ++lt)
            De[lt] = ((lt - ye[Ae]) << 5) | Ae;
        return [ye, De];
      },
      u = o(a, 2),
      l = u[0],
      c = u[1];
    (l[28] = 258), (c[258] = 28);
    for (var d = o(s, 0), p = d[0], m = new n(32768), y = 0; y < 32768; ++y) {
      var I = ((y & 43690) >>> 1) | ((y & 21845) << 1);
      (I = ((I & 52428) >>> 2) | ((I & 13107) << 2)),
        (I = ((I & 61680) >>> 4) | ((I & 3855) << 4)),
        (m[y] = (((I & 65280) >>> 8) | ((I & 255) << 8)) >>> 1);
    }
    for (
      var O = function (F, Se, ye) {
          for (var Ae = F.length, De = 0, lt = new n(Se); De < Ae; ++De)
            ++lt[F[De] - 1];
          var nt = new n(Se);
          for (De = 0; De < Se; ++De) nt[De] = (nt[De - 1] + lt[De - 1]) << 1;
          var L;
          if (ye) {
            L = new n(1 << Se);
            var M = 15 - Se;
            for (De = 0; De < Ae; ++De)
              if (F[De])
                for (
                  var me = (De << 4) | F[De],
                    K = Se - F[De],
                    Ge = nt[F[De] - 1]++ << K,
                    Ke = Ge | ((1 << K) - 1);
                  Ge <= Ke;
                  ++Ge
                )
                  L[m[Ge] >>> M] = me;
          } else
            for (L = new n(Ae), De = 0; De < Ae; ++De)
              F[De] && (L[De] = m[nt[F[De] - 1]++] >>> (15 - F[De]));
          return L;
        },
        g = new e(288),
        y = 0;
      y < 144;
      ++y
    )
      g[y] = 8;
    for (var y = 144; y < 256; ++y) g[y] = 9;
    for (var y = 256; y < 280; ++y) g[y] = 7;
    for (var y = 280; y < 288; ++y) g[y] = 8;
    for (var C = new e(32), y = 0; y < 32; ++y) C[y] = 5;
    var H = O(g, 9, 1),
      B = O(C, 5, 1),
      he = function (F) {
        for (var Se = F[0], ye = 1; ye < F.length; ++ye)
          F[ye] > Se && (Se = F[ye]);
        return Se;
      },
      de = function (F, Se, ye) {
        var Ae = (Se / 8) | 0;
        return ((F[Ae] | (F[Ae + 1] << 8)) >> (Se & 7)) & ye;
      },
      U = function (F, Se) {
        var ye = (Se / 8) | 0;
        return (F[ye] | (F[ye + 1] << 8) | (F[ye + 2] << 16)) >> (Se & 7);
      },
      R = function (F) {
        return ((F + 7) / 8) | 0;
      },
      ge = function (F, Se, ye) {
        (Se == null || Se < 0) && (Se = 0),
          (ye == null || ye > F.length) && (ye = F.length);
        var Ae = new (F instanceof n ? n : F instanceof r ? r : e)(ye - Se);
        return Ae.set(F.subarray(Se, ye)), Ae;
      },
      ve = [
        "unexpected EOF",
        "invalid block type",
        "invalid length/literal",
        "invalid distance",
        "stream finished",
        "no stream handler",
        ,
        "no callback",
        "invalid UTF-8 data",
        "extra field too long",
        "date not in range 1980-2099",
        "filename too long",
        "stream finishing",
        "invalid zip data",
      ],
      we = function (F, Se, ye) {
        var Ae = new Error(Se || ve[F]);
        if (
          ((Ae.code = F),
          Error.captureStackTrace && Error.captureStackTrace(Ae, we),
          !ye)
        )
          throw Ae;
        return Ae;
      },
      Te = function (F, Se, ye) {
        var Ae = F.length;
        if (!Ae || (ye && ye.f && !ye.l)) return Se || new e(0);
        var De = !Se || ye,
          lt = !ye || ye.i;
        ye || (ye = {}), Se || (Se = new e(Ae * 3));
        var nt = function (so) {
            var Et = Se.length;
            if (so > Et) {
              var Uo = new e(Math.max(Et * 2, so));
              Uo.set(Se), (Se = Uo);
            }
          },
          L = ye.f || 0,
          M = ye.p || 0,
          me = ye.b || 0,
          K = ye.l,
          Ge = ye.d,
          Ke = ye.m,
          Re = ye.n,
          it = Ae * 8;
        do {
          if (!K) {
            L = de(F, M, 1);
            var Qe = de(F, M + 1, 3);
            if (((M += 3), Qe))
              if (Qe == 1) (K = H), (Ge = B), (Ke = 9), (Re = 5);
              else if (Qe == 2) {
                var gt = de(F, M, 31) + 257,
                  Mt = de(F, M + 10, 15) + 4,
                  at = gt + de(F, M + 5, 31) + 1;
                M += 14;
                for (var Dt = new e(at), pt = new e(19), Xt = 0; Xt < Mt; ++Xt)
                  pt[i[Xt]] = de(F, M + Xt * 3, 7);
                M += Mt * 3;
                for (
                  var It = he(pt),
                    bt = (1 << It) - 1,
                    yt = O(pt, It, 1),
                    Xt = 0;
                  Xt < at;

                ) {
                  var tn = yt[de(F, M, bt)];
                  M += tn & 15;
                  var ct = tn >>> 4;
                  if (ct < 16) Dt[Xt++] = ct;
                  else {
                    var Ct = 0,
                      Qt = 0;
                    for (
                      ct == 16
                        ? ((Qt = 3 + de(F, M, 3)), (M += 2), (Ct = Dt[Xt - 1]))
                        : ct == 17
                        ? ((Qt = 3 + de(F, M, 7)), (M += 3))
                        : ct == 18 && ((Qt = 11 + de(F, M, 127)), (M += 7));
                      Qt--;

                    )
                      Dt[Xt++] = Ct;
                  }
                }
                var Bt = Dt.subarray(0, gt),
                  Ut = Dt.subarray(gt);
                (Ke = he(Bt)),
                  (Re = he(Ut)),
                  (K = O(Bt, Ke, 1)),
                  (Ge = O(Ut, Re, 1));
              } else we(1);
            else {
              var ct = R(M) + 4,
                ot = F[ct - 4] | (F[ct - 3] << 8),
                rt = ct + ot;
              if (rt > Ae) {
                lt && we(0);
                break;
              }
              De && nt(me + ot),
                Se.set(F.subarray(ct, rt), me),
                (ye.b = me += ot),
                (ye.p = M = rt * 8),
                (ye.f = L);
              continue;
            }
            if (M > it) {
              lt && we(0);
              break;
            }
          }
          De && nt(me + 131072);
          for (var as = (1 << Ke) - 1, Ya = (1 << Re) - 1, Wt = M; ; Wt = M) {
            var Ct = K[U(F, M) & as],
              mn = Ct >>> 4;
            if (((M += Ct & 15), M > it)) {
              lt && we(0);
              break;
            }
            if ((Ct || we(2), mn < 256)) Se[me++] = mn;
            else if (mn == 256) {
              (Wt = M), (K = null);
              break;
            } else {
              var no = mn - 254;
              if (mn > 264) {
                var Xt = mn - 257,
                  ds = a[Xt];
                (no = de(F, M, (1 << ds) - 1) + l[Xt]), (M += ds);
              }
              var Rt = Ge[U(F, M) & Ya],
                hr = Rt >>> 4;
              Rt || we(3), (M += Rt & 15);
              var Ut = p[hr];
              if (hr > 3) {
                var ds = s[hr];
                (Ut += U(F, M) & ((1 << ds) - 1)), (M += ds);
              }
              if (M > it) {
                lt && we(0);
                break;
              }
              De && nt(me + 131072);
              for (var la = me + no; me < la; me += 4)
                (Se[me] = Se[me - Ut]),
                  (Se[me + 1] = Se[me + 1 - Ut]),
                  (Se[me + 2] = Se[me + 2 - Ut]),
                  (Se[me + 3] = Se[me + 3 - Ut]);
              me = la;
            }
          }
          (ye.l = K),
            (ye.p = Wt),
            (ye.b = me),
            (ye.f = L),
            K && ((L = 1), (ye.m = Ke), (ye.d = Ge), (ye.n = Re));
        } while (!L);
        return me == Se.length ? Se : ge(Se, 0, me);
      },
      Ce = function (F) {
        (F[0] != 31 || F[1] != 139 || F[2] != 8) && we(6, "invalid gzip data");
        var Se = F[3],
          ye = 10;
        Se & 4 && (ye += F[10] | ((F[11] << 8) + 2));
        for (
          var Ae = ((Se >> 3) & 1) + ((Se >> 4) & 1);
          Ae > 0;
          Ae -= !F[ye++]
        );
        return ye + (Se & 2);
      },
      Ee = function (F) {
        var Se = F.length;
        return (
          (F[Se - 4] |
            (F[Se - 3] << 8) |
            (F[Se - 2] << 16) |
            (F[Se - 1] << 24)) >>>
          0
        );
      },
      x = function (F) {
        ((F[0] & 15) != 8 || F[0] >>> 4 > 7 || ((F[0] << 8) | F[1]) % 31) &&
          we(6, "invalid zlib data"),
          F[1] & 32 &&
            we(6, "invalid zlib data: preset dictionaries not supported");
      };
    return {
      gunzipSync: function (F, Se) {
        return Te(F.subarray(Ce(F), -8), Se || new e(Ee(F)));
      },
      unzlibSync: function (F, Se) {
        return Te((x(F), F.subarray(2, -4)), Se);
      },
    };
  })(),
  xot = 1,
  Lot = 2;
function Mot(t) {
  return String.fromCharCode.apply(null, t);
}
function Dot(t) {
  var e = t.split("").map(function (n) {
    return n.charCodeAt(0);
  });
  return new Uint8Array(e);
}
function dfe(t, e) {
  var n = WG(t),
    r = Dot(n);
  if (typeof Db == "string") throw new Error(Db);
  if (e === xot) return Db.gunzipSync(r);
  if (e === Lot) return Db.unzlibSync(r);
  throw new Error("Invalid compression algorithm #" + e);
}
function pfe(t, e, n) {
  n === void 0 && (n = !0);
  var r = dfe(t, e),
    a = Mot(r);
  return n && (a = a.replace(/\d+/g, '"$&"')), JSON.parse(a);
}
function Got(t, e) {
  return dfe(t, e);
}
function Fot(t, e) {
  var n = parseInt(e.slice(8), 16) % (t.length * 8),
    r = Math.floor(n / 8),
    a = n % 8;
  return (t[r] & (1 << a)) > 0;
}
function Uot(t, e) {
  var n = !1;
  return t > 0 ? pfe(e, t, n) : JSON.parse(WG(e));
}
var hfe = (function () {
  function t(e) {
    var n = this;
    (this.__setData__ = []),
      Array.isArray(e) &&
        e.forEach(function (r) {
          n.add(r);
        });
  }
  return (
    (t.prototype.clear = function () {
      this.__setData__.length && (this.__setData__.length = 0);
    }),
    (t.prototype.add = function (e) {
      return this.has(e) ? this : (this.__setData__.push(e), this);
    }),
    (t.prototype.delete = function (e) {
      var n = this.__setData__.indexOf(e);
      return n === -1 ? !1 : (this.__setData__.splice(n, 1), !0);
    }),
    (t.prototype.has = function (e) {
      return this.__setData__.indexOf(e) !== -1;
    }),
    (t.prototype.forEach = function (e, n) {
      if (typeof e != "function") throw new TypeError(e + " is not a function");
      for (var r = 0; r < this.__setData__.length; r++) {
        var a = this.__setData__[r];
        e.call(n, a, a, this);
      }
    }),
    Object.defineProperty(t.prototype, "size", {
      get: function () {
        return this.__setData__.length;
      },
      enumerable: !1,
      configurable: !0,
    }),
    t
  );
})();
function _p(t) {
  return t instanceof hfe ? t.__setData__.slice() : Array.from(t);
}
function Kot() {
  return typeof Array.from == "function" &&
    typeof Set == "function" &&
    Set.prototype &&
    Set.prototype.values
    ? Set
    : hfe;
}
var hi = Kot();
function Bot(t, e) {
  var n = new hi(_p(t));
  return (
    e.forEach(function (r) {
      n.add(r);
    }),
    n
  );
}
function Yl(t, e) {
  (t = [t[0] >>> 16, t[0] & 65535, t[1] >>> 16, t[1] & 65535]),
    (e = [e[0] >>> 16, e[0] & 65535, e[1] >>> 16, e[1] & 65535]);
  var n = [0, 0, 0, 0];
  return (
    (n[3] += t[3] + e[3]),
    (n[2] += n[3] >>> 16),
    (n[3] &= 65535),
    (n[2] += t[2] + e[2]),
    (n[1] += n[2] >>> 16),
    (n[2] &= 65535),
    (n[1] += t[1] + e[1]),
    (n[0] += n[1] >>> 16),
    (n[1] &= 65535),
    (n[0] += t[0] + e[0]),
    (n[0] &= 65535),
    [(n[0] << 16) | n[1], (n[2] << 16) | n[3]]
  );
}
function Pi(t, e) {
  (t = [t[0] >>> 16, t[0] & 65535, t[1] >>> 16, t[1] & 65535]),
    (e = [e[0] >>> 16, e[0] & 65535, e[1] >>> 16, e[1] & 65535]);
  var n = [0, 0, 0, 0];
  return (
    (n[3] += t[3] * e[3]),
    (n[2] += n[3] >>> 16),
    (n[3] &= 65535),
    (n[2] += t[2] * e[3]),
    (n[1] += n[2] >>> 16),
    (n[2] &= 65535),
    (n[2] += t[3] * e[2]),
    (n[1] += n[2] >>> 16),
    (n[2] &= 65535),
    (n[1] += t[1] * e[3]),
    (n[0] += n[1] >>> 16),
    (n[1] &= 65535),
    (n[1] += t[2] * e[2]),
    (n[0] += n[1] >>> 16),
    (n[1] &= 65535),
    (n[1] += t[3] * e[1]),
    (n[0] += n[1] >>> 16),
    (n[1] &= 65535),
    (n[0] += t[0] * e[3] + t[1] * e[2] + t[2] * e[1] + t[3] * e[0]),
    (n[0] &= 65535),
    [(n[0] << 16) | n[1], (n[2] << 16) | n[3]]
  );
}
function uh(t, e) {
  return (
    (e %= 64),
    e === 32
      ? [t[1], t[0]]
      : e < 32
      ? [(t[0] << e) | (t[1] >>> (32 - e)), (t[1] << e) | (t[0] >>> (32 - e))]
      : ((e -= 32),
        [(t[1] << e) | (t[0] >>> (32 - e)), (t[0] << e) | (t[1] >>> (32 - e))])
  );
}
function Za(t, e) {
  return (
    (e %= 64),
    e === 0
      ? t
      : e < 32
      ? [(t[0] << e) | (t[1] >>> (32 - e)), t[1] << e]
      : [t[1] << (e - 32), 0]
  );
}
function As(t, e) {
  return [t[0] ^ e[0], t[1] ^ e[1]];
}
function $B(t) {
  return (
    (t = As(t, [0, t[0] >>> 1])),
    (t = Pi(t, [4283543511, 3981806797])),
    (t = As(t, [0, t[0] >>> 1])),
    (t = Pi(t, [3301882366, 444984403])),
    (t = As(t, [0, t[0] >>> 1])),
    t
  );
}
function Vot(t, e) {
  (t = t || ""), (e = e || 0);
  for (
    var n = t.length % 16,
      r = t.length - n,
      a = [0, e],
      s = [0, e],
      i = [0, 0],
      o = [0, 0],
      u = [2277735313, 289559509],
      l = [1291169091, 658871167],
      c = 0;
    c < r;
    c = c + 16
  )
    (i = [
      (t.charCodeAt(c + 4) & 255) |
        ((t.charCodeAt(c + 5) & 255) << 8) |
        ((t.charCodeAt(c + 6) & 255) << 16) |
        ((t.charCodeAt(c + 7) & 255) << 24),
      (t.charCodeAt(c) & 255) |
        ((t.charCodeAt(c + 1) & 255) << 8) |
        ((t.charCodeAt(c + 2) & 255) << 16) |
        ((t.charCodeAt(c + 3) & 255) << 24),
    ]),
      (o = [
        (t.charCodeAt(c + 12) & 255) |
          ((t.charCodeAt(c + 13) & 255) << 8) |
          ((t.charCodeAt(c + 14) & 255) << 16) |
          ((t.charCodeAt(c + 15) & 255) << 24),
        (t.charCodeAt(c + 8) & 255) |
          ((t.charCodeAt(c + 9) & 255) << 8) |
          ((t.charCodeAt(c + 10) & 255) << 16) |
          ((t.charCodeAt(c + 11) & 255) << 24),
      ]),
      (i = Pi(i, u)),
      (i = uh(i, 31)),
      (i = Pi(i, l)),
      (a = As(a, i)),
      (a = uh(a, 27)),
      (a = Yl(a, s)),
      (a = Yl(Pi(a, [0, 5]), [0, 1390208809])),
      (o = Pi(o, l)),
      (o = uh(o, 33)),
      (o = Pi(o, u)),
      (s = As(s, o)),
      (s = uh(s, 31)),
      (s = Yl(s, a)),
      (s = Yl(Pi(s, [0, 5]), [0, 944331445]));
  switch (((i = [0, 0]), (o = [0, 0]), n)) {
    case 15:
      o = As(o, Za([0, t.charCodeAt(c + 14)], 48));
    case 14:
      o = As(o, Za([0, t.charCodeAt(c + 13)], 40));
    case 13:
      o = As(o, Za([0, t.charCodeAt(c + 12)], 32));
    case 12:
      o = As(o, Za([0, t.charCodeAt(c + 11)], 24));
    case 11:
      o = As(o, Za([0, t.charCodeAt(c + 10)], 16));
    case 10:
      o = As(o, Za([0, t.charCodeAt(c + 9)], 8));
    case 9:
      (o = As(o, [0, t.charCodeAt(c + 8)])),
        (o = Pi(o, l)),
        (o = uh(o, 33)),
        (o = Pi(o, u)),
        (s = As(s, o));
    case 8:
      i = As(i, Za([0, t.charCodeAt(c + 7)], 56));
    case 7:
      i = As(i, Za([0, t.charCodeAt(c + 6)], 48));
    case 6:
      i = As(i, Za([0, t.charCodeAt(c + 5)], 40));
    case 5:
      i = As(i, Za([0, t.charCodeAt(c + 4)], 32));
    case 4:
      i = As(i, Za([0, t.charCodeAt(c + 3)], 24));
    case 3:
      i = As(i, Za([0, t.charCodeAt(c + 2)], 16));
    case 2:
      i = As(i, Za([0, t.charCodeAt(c + 1)], 8));
    case 1:
      (i = As(i, [0, t.charCodeAt(c)])),
        (i = Pi(i, u)),
        (i = uh(i, 31)),
        (i = Pi(i, l)),
        (a = As(a, i));
  }
  return (
    (a = As(a, [0, t.length])),
    (s = As(s, [0, t.length])),
    (a = Yl(a, s)),
    (s = Yl(s, a)),
    (a = $B(a)),
    (s = $B(s)),
    (a = Yl(a, s)),
    (s = Yl(s, a)),
    ("00000000" + (a[0] >>> 0).toString(16)).slice(-8) +
      ("00000000" + (a[1] >>> 0).toString(16)).slice(-8) +
      ("00000000" + (s[0] >>> 0).toString(16)).slice(-8) +
      ("00000000" + (s[1] >>> 0).toString(16)).slice(-8)
  );
}
function jot(t, e) {
  return Vot(ufe(t), e >>> 0);
}
function zot(t) {
  var e,
    n,
    r = [0],
    a;
  for (e = 0; e < t.length; e += 1) {
    for (a = parseInt(t.charAt(e), 16), n = r.length - 1; n >= 0; n -= 1)
      (r[n] = r[n] * 16 + a), (a = (r[n] / 10) | 0), (r[n] %= 10);
    for (; a > 0; ) r.unshift(a % 10), (a = (a / 10) | 0);
  }
  return r.join("");
}
function $ot(t) {
  var e = jot(t).slice(0, 16);
  return { hex: e, dec: zot(e) };
}
function Wot(t, e) {
  var n = t.settings,
    r = t.storage,
    a = t.splitApi,
    s = t.readiness,
    i = t.platform,
    o = t.telemetryTracker,
    u = n.core.key ? om(n.core.key) : void 0,
    l = n.log,
    c;
  try {
    c = new Rot(n, !u, i.getEventSource);
  } catch (Te) {
    l.warn($pe, [Te]);
    return;
  }
  var d = Aot(a.fetchAuth),
    p = new i.EventEmitter(),
    m = mot(l, p, o);
  c.setEventHandler(m);
  var y = u ? void 0 : yot(l, e.segmentsSyncTask, r.segments),
    I = got(
      l,
      r.splits,
      e.splitsSyncTask,
      s.splits,
      o,
      u ? void 0 : e.segmentsSyncTask
    ),
    O = {},
    g = {},
    C = !1,
    H,
    B,
    he = new RI(ge, n.scheduler.pushRetryBackoffBase),
    de,
    U;
  function R(Te) {
    de && clearTimeout(de), U && clearTimeout(U);
    var Ce = Te.decodedToken,
      Ee = Ce.exp - Ce.iat - uot,
      x =
        typeof Te.connDelay == "number" && Te.connDelay >= 0
          ? Te.connDelay
          : 60;
    l.info(wpe, [Ee, x]),
      (de = setTimeout(ge, Ee * 1e3)),
      (U = setTimeout(function () {
        H || c.open(Te);
      }, x * 1e3)),
      o.streamingEvent(jhe, Ce.exp);
  }
  function ge() {
    if (!H) {
      l.info(Ipe), (H = !1);
      var Te = u ? Object.keys(g) : void 0;
      d(Te)
        .then(function (Ce) {
          if (!H) {
            if (!Ce.pushEnabled) {
              l.info(Cpe), p.emit(Yy);
              return;
            }
            (Te && Te.length < Object.keys(g).length) || R(Ce);
          }
        })
        .catch(function (Ce) {
          if (!H) {
            if (
              (l.error(She, [Ce.message]),
              Ce.statusCode >= 400 && Ce.statusCode < 500)
            ) {
              o.streamingEvent(zhe), p.emit(Yy);
              return;
            }
            p.emit(VN);
          }
        });
    }
  }
  function ve() {
    H ||
      ((H = !0),
      c.close(),
      l.info(Ape),
      de && clearTimeout(de),
      U && clearTimeout(U),
      he.reset(),
      we());
  }
  function we() {
    I.stop(),
      u
        ? _o(g, function (Te) {
            var Ce = Te.worker;
            return Ce.stop();
          })
        : y.stop();
  }
  return (
    p.on(Tf, we),
    p.on(Xy, function () {
      he.reset();
    }),
    p.on(Yy, function () {
      (B = !0), ve(), p.emit(Tf);
    }),
    p.on(VN, function () {
      c.close();
      var Ce = he.scheduleCall();
      l.info(Ppe, [Ce / 1e3]), p.emit(Tf);
    }),
    p.on(fc.STREAMING_RESET, function () {
      H || (de && clearTimeout(de), ge());
    }),
    p.on(nfe, I.killSplit),
    p.on(sfe, function (Te) {
      if (Te.d && Te.c !== void 0)
        try {
          var Ce = Uot(Te.c, Te.d);
          if (Ce) {
            I.put(Te, Ce);
            return;
          }
        } catch (Ee) {
          l.warn(ahe, [Ee]);
        }
      I.put(Te);
    }),
    u
      ? (p.on(Zhe, function (Ce, Ee) {
          var x = Ee.split("_")[2],
            F = O[x];
          F &&
            g[F] &&
            g[F].worker.put(
              Ce.changeNumber,
              Ce.includesPayload
                ? Ce.segmentList
                  ? Ce.segmentList
                  : []
                : void 0
            );
        }),
        p.on(efe, function (Ce) {
          switch (Ce.u) {
            case Qy.BoundedFetchRequest: {
              var Ee;
              try {
                Ee = Got(Ce.d, Ce.c);
              } catch (ye) {
                l.warn(YE, ["BoundedFetchRequest", ye]);
                break;
              }
              _o(g, function (ye) {
                var Ae = ye.hash64,
                  De = ye.worker;
                Fot(Ee, Ae.hex) && De.put(Ce.changeNumber);
              });
              return;
            }
            case Qy.KeyList: {
              var x = void 0,
                F,
                Se;
              try {
                (x = pfe(Ce.d, Ce.c)), (F = new hi(x.a)), (Se = new hi(x.r));
              } catch (ye) {
                l.warn(YE, ["KeyList", ye]);
                break;
              }
              _o(g, function (ye) {
                var Ae = ye.hash64,
                  De = ye.worker,
                  lt = F.has(Ae.dec) ? !0 : Se.has(Ae.dec) ? !1 : void 0;
                lt !== void 0 &&
                  De.put(Ce.changeNumber, { name: Ce.segmentName, add: lt });
              });
              return;
            }
            case Qy.SegmentRemoval:
              if (!Ce.segmentName) {
                l.warn(YE, ["SegmentRemoval", "No segment name was provided"]);
                break;
              }
              _o(g, function (ye) {
                var Ae = ye.worker;
                return Ae.put(Ce.changeNumber, {
                  name: Ce.segmentName,
                  add: !1,
                });
              });
              return;
          }
          _o(g, function (ye) {
            var Ae = ye.worker;
            Ae.put(Ce.changeNumber);
          });
        }))
      : p.on(tfe, y.put),
    Jn(Object.create(p), {
      stop: function () {
        ve(), u && this.remove(u);
      },
      start: function () {
        B ||
          H === !1 ||
          ((H = !1), u ? this.add(u, e.segmentsSyncTask) : setTimeout(ge));
      },
      isRunning: function () {
        return H === !1;
      },
      add: function (Te, Ce) {
        var Ee = jB(Te);
        O[Ee] ||
          ((O[Ee] = Te),
          (g[Te] = { hash64: $ot(Te), worker: Sot(Ce, o) }),
          (C = !0),
          setTimeout(function () {
            C && ((C = !1), ge());
          }, 0));
      },
      remove: function (Te) {
        var Ce = jB(Te);
        delete O[Ce], delete g[Te];
      },
    })
  );
}
function qot(t) {
  return function (n, r, a) {
    var s = t(n, r);
    return (
      a && (s = a(s)),
      s
        .then(function (i) {
          return i.json();
        })
        .then(function (i) {
          return i.mySegments.map(function (o) {
            return o.name;
          });
        })
    );
  };
}
function ffe(t, e) {
  return t < 1
    ? e
    : new Promise(function (n, r) {
        var a = setTimeout(function () {
          r(
            new Error(
              "Operation timed out because it exceeded the configured time limit of " +
                t +
                " ms."
            )
          );
        }, t);
        e.then(
          function (s) {
            clearTimeout(a), n(s);
          },
          function (s) {
            clearTimeout(a), r(s);
          }
        );
      });
}
function Yot(t, e, n, r, a, s, i, o) {
  var u = !0,
    l = !0;
  function c(m) {
    return l && (m = ffe(s, m)), m;
  }
  function d(m) {
    var y;
    if (Array.isArray(m)) y = r.resetSegments(m);
    else {
      var I = m.name,
        O = m.add;
      r.isInSegment(I) !== O
        ? ((y = !0), O ? r.addToSegment(I) : r.removeFromSegment(I))
        : (y = !1);
    }
    n.usesSegments() && (y || u) && ((u = !1), a.emit(_d));
  }
  function p(m, y, I) {
    var O = y
      ? new Promise(function (g) {
          d(y), g(!0);
        })
      : e(o, I, c).then(function (g) {
          return (l = !1), d(g), !0;
        });
    return O.catch(function (g) {
      return l && i > m
        ? ((m += 1), t.warn(Bpe, [m, g]), p(m))
        : ((l = !1), !1);
    });
  }
  return function (y, I) {
    return p(0, y, I);
  };
}
function Xot(t, e, n, r, a) {
  return AI(
    r.log,
    Yot(
      r.log,
      qot(t),
      e.splits,
      e.segments,
      n.segments,
      r.startup.requestTimeoutBeforeReady,
      r.startup.retriesOnFailureBeforeReady,
      a
    ),
    r.scheduler.segmentsRefreshRate,
    "mySegmentsUpdater"
  );
}
function Qot(t) {
  return function (n, r, a, s) {
    var i = t(n, r, a);
    return (
      s && (i = s(i)),
      i.then(function (o) {
        return o.json();
      })
    );
  };
}
function Jot(t) {
  var e = Promise.resolve(t.getRegisteredSegments());
  return e.then(function (n) {
    return Promise.all(
      n.map(function (r) {
        return t.getChangeNumber(r);
      })
    ).then(function (r) {
      return r.every(function (a) {
        return a !== -1;
      });
    });
  });
}
function Zot(t) {
  for (var e = t.conditions, n = new hi(), r = 0; r < e.length; r++) {
    var a = e[r].matcherGroup.matchers;
    a.forEach(function (s) {
      s.matcherType === "IN_SEGMENT" &&
        n.add(s.userDefinedSegmentMatcherData.segmentName);
    });
  }
  return n;
}
function eut(t, e) {
  var n = e.groupedFilters,
    r = n.bySet,
    a = n.byName,
    s = n.byPrefix;
  if (r.length > 0)
    return (
      t.sets &&
      t.sets.some(function (c) {
        return r.indexOf(c) > -1;
      })
    );
  var i = a.length > 0,
    o = s.length > 0;
  if (!i && !o) return !0;
  var u = i && a.indexOf(t.name) > -1,
    l =
      o &&
      s.some(function (c) {
        return im(t.name, c);
      });
  return u || l;
}
function tut(t, e) {
  var n = new hi(),
    r = t.reduce(
      function (a, s) {
        return (
          s.status === "ACTIVE" && eut(s, e)
            ? (a.added.push([s.name, s]),
              Zot(s).forEach(function (i) {
                n.add(i);
              }))
            : a.removed.push(s.name),
          a
        );
      },
      { added: [], removed: [], segments: [] }
    );
  return (r.segments = _p(n)), r;
}
function nut(t, e, n, r, a, s, i, o, u) {
  i === void 0 && (i = 0), o === void 0 && (o = 0);
  var l = !0;
  function c(p) {
    return l && i && (p = ffe(i, p)), p;
  }
  function d(p) {
    var m = p[1],
      y = p[2];
    return !!(
      (m &&
        m.some(function (I) {
          return I;
        })) ||
      (y &&
        y.some(function (I) {
          return I;
        }))
    );
  }
  return function (m, y, I) {
    function O(C, H) {
      H === void 0 && (H = 0), t.debug(ape, [C]);
      var B = Promise.resolve(
        I ? { splits: [I.payload], till: I.changeNumber } : e(C, m, y, c)
      )
        .then(function (he) {
          l = !1;
          var de = tut(he.splits, a);
          return (
            t.debug(ipe, [de.added.length]),
            t.debug(ope, [de.removed.length]),
            t.debug(upe, [de.segments.length]),
            Promise.all([
              n.setChangeNumber(he.till),
              n.addSplits(de.added),
              n.removeSplits(de.removed),
              r.registerSegments(de.segments),
            ]).then(function (U) {
              return s
                ? Promise.resolve(
                    !s.splitsArrived || (C !== he.till && d(U) && (u || Jot(r)))
                  )
                    .catch(function () {
                      return !1;
                    })
                    .then(function (R) {
                      return R && s.emit(sd), !0;
                    })
                : !0;
            })
          );
        })
        .catch(function (he) {
          return (
            t.warn(Vpe, [he]),
            l && o > H
              ? ((H += 1), t.info(Tpe, [H, he]), O(C, H))
              : ((l = !1), !1)
          );
        });
      return (
        s &&
          l &&
          Promise.resolve(n.checkCache()).then(function (he) {
            he && s.emit(HI);
          }),
        B
      );
    }
    var g = Promise.resolve(n.getChangeNumber());
    return g.then(O);
  };
}
function sut(t, e, n, r, a) {
  return AI(
    r.log,
    nut(
      r.log,
      Qot(t),
      e.splits,
      e.segments,
      r.sync.__splitFiltersValidation,
      n.splits,
      r.startup.requestTimeoutBeforeReady,
      r.startup.retriesOnFailureBeforeReady,
      a
    ),
    r.scheduler.featuresRefreshRate,
    "splitChangesUpdater"
  );
}
function rut(t) {
  var e = t.splitApi,
    n = t.storage,
    r = t.readiness,
    a = t.settings,
    s = a.log,
    i = sut(e.fetchSplitChanges, n, r, a, !0),
    o = {},
    u = om(a.core.key),
    l = p(u, r, n);
  function c() {
    _o(o, function (m) {
      m.start();
    });
  }
  function d() {
    _o(o, function (m) {
      m.isRunning() && m.stop();
    });
  }
  r.splits.on(sd, function () {
    if (i.isRunning()) {
      var m = n.splits.usesSegments();
      m !== l.isRunning() && (s.info(_pe, [m ? "ON" : "OFF"]), m ? c() : d());
    }
  });
  function p(m, y, I) {
    var O = Xot(e.fetchMySegments, I, y, a, m);
    function g() {
      !y.isReady() && !I.splits.usesSegments() && y.segments.emit(_d);
    }
    return (
      I.splits.usesSegments() ? y.splits.once(sd, g) : setTimeout(g, 0),
      (o[m] = O),
      O
    );
  }
  return {
    splitsSyncTask: i,
    segmentsSyncTask: l,
    start: function () {
      s.info(bpe), i.start(), n.splits.usesSegments() && c();
    },
    stop: function () {
      s.info(Epe), i.isRunning() && i.stop(), d();
    },
    isRunning: i.isRunning,
    syncAll: function () {
      var m = [i.execute()];
      return (
        _o(o, function (y) {
          m.push(y.execute());
        }),
        Promise.all(m)
      );
    },
    add: p,
    remove: function (m) {
      delete o[m];
    },
    get: function (m) {
      return o[m];
    },
  };
}
var mfe = (function () {
    function t(e) {
      e === void 0 && (e = 0), (this.maxQueue = e), (this.queue = []);
    }
    return (
      (t.prototype.setOnFullQueueCb = function (e) {
        this.onFullQueue = e;
      }),
      (t.prototype.track = function (e) {
        var n;
        (n = this.queue).push.apply(n, e),
          this.maxQueue > 0 &&
            this.queue.length >= this.maxQueue &&
            this.onFullQueue &&
            this.onFullQueue();
      }),
      (t.prototype.clear = function () {
        this.queue = [];
      }),
      (t.prototype.pop = function (e) {
        var n = this.queue;
        return this.clear(), e ? e.concat(n) : n;
      }),
      (t.prototype.isEmpty = function () {
        return this.queue.length === 0;
      }),
      t
    );
  })(),
  aut = 3600 * 1e3;
function Sfe(t) {
  return t - (t % aut);
}
var yfe = 3e4,
  gfe = (function () {
    function t(e) {
      e === void 0 && (e = yfe),
        (this.cache = {}),
        (this.cacheSize = 0),
        (this.maxStorage = e);
    }
    return (
      (t.prototype._makeKey = function (e, n) {
        return e + "::" + Sfe(n);
      }),
      (t.prototype.track = function (e, n, r) {
        var a = this._makeKey(e, n),
          s = this.cache[a];
        (this.cache[a] = s ? s + r : r),
          this.onFullQueue &&
            ((this.cacheSize = this.cacheSize + r),
            this.cacheSize >= this.maxStorage && this.onFullQueue());
      }),
      (t.prototype.pop = function (e) {
        var n = this.cache;
        return (
          this.clear(),
          e
            ? (Object.keys(n).forEach(function (r) {
                e[r] ? (e[r] += n[r]) : (e[r] = n[r]);
              }),
              e)
            : n
        );
      }),
      (t.prototype.clear = function () {
        (this.cache = {}), (this.cacheSize = 0);
      }),
      (t.prototype.isEmpty = function () {
        return Object.keys(this.cache).length === 0;
      }),
      t
    );
  })(),
  iut = 5 * 1024 * 1024,
  vfe = (function () {
    function t(e) {
      e === void 0 && (e = 0),
        (this.maxQueue = e),
        (this.queue = []),
        (this.queueByteSize = 0);
    }
    return (
      (t.prototype.setOnFullQueueCb = function (e) {
        this.onFullQueue = e;
      }),
      (t.prototype.track = function (e, n) {
        return (
          n === void 0 && (n = 0),
          (this.queueByteSize += n),
          this.queue.push(e),
          this._checkForFlush(),
          !0
        );
      }),
      (t.prototype.clear = function () {
        (this.queue = []), (this.queueByteSize = 0);
      }),
      (t.prototype.pop = function (e) {
        var n = this.queue;
        return this.clear(), e ? e.concat(n) : n;
      }),
      (t.prototype.isEmpty = function () {
        return this.queue.length === 0;
      }),
      (t.prototype._checkForFlush = function () {
        (this.queueByteSize > iut ||
          (this.maxQueue > 0 && this.queue.length >= this.maxQueue)) &&
          this.onFullQueue &&
          this.onFullQueue();
      }),
      t
    );
  })(),
  out = /[^.]+$/,
  uut = "SPLITIO";
function lut(t) {
  return t ? t + ".SPLITIO" : "SPLITIO";
}
var cut = (function () {
  function t(e) {
    e === void 0 && (e = uut), (this.prefix = e);
  }
  return (
    (t.prototype.buildTrafficTypeKey = function (e) {
      return this.prefix + ".trafficType." + e;
    }),
    (t.prototype.buildFlagSetKey = function (e) {
      return this.prefix + ".flagSet." + e;
    }),
    (t.prototype.buildSplitKey = function (e) {
      return this.prefix + ".split." + e;
    }),
    (t.prototype.buildSplitsTillKey = function () {
      return this.prefix + ".splits.till";
    }),
    (t.prototype.isSplitKey = function (e) {
      return im(e, this.prefix + ".split.");
    }),
    (t.prototype.buildSplitKeyPrefix = function () {
      return this.prefix + ".split.";
    }),
    (t.prototype.buildSplitsWithSegmentCountKey = function () {
      return this.prefix + ".splits.usingSegments";
    }),
    (t.prototype.buildSegmentNameKey = function (e) {
      return this.prefix + ".segment." + e;
    }),
    (t.prototype.buildSegmentTillKey = function (e) {
      return this.prefix + ".segment." + e + ".till";
    }),
    (t.prototype.extractKey = function (e) {
      var n = e.match(out);
      if (n && n.length) return n[0];
      throw new Error("Invalid latency key provided");
    }),
    (t.prototype.buildHashKey = function () {
      return this.prefix + ".hash";
    }),
    t
  );
})();
function dut(t) {
  return kI(
    t.core.authorizationKey + "::" + t.sync.__splitFiltersValidation.queryString
  ).toString(16);
}
var WB = (function (t) {
  Uv(e, t);
  function e(n, r) {
    var a = t.call(this, n) || this;
    return (
      (a.matchingKey = r),
      (a.regexSplitsCacheKey = new RegExp(
        "^" + n + "\\.(splits?|trafficType|flagSet)\\."
      )),
      a
    );
  }
  return (
    (e.prototype.buildSegmentNameKey = function (n) {
      return this.prefix + "." + this.matchingKey + ".segment." + n;
    }),
    (e.prototype.extractSegmentName = function (n) {
      var r = this.prefix + "." + this.matchingKey + ".segment.";
      if (im(n, r)) return n.substr(r.length);
    }),
    (e.prototype.buildOldSegmentNameKey = function (n) {
      return this.matchingKey + "." + this.prefix + ".segment." + n;
    }),
    (e.prototype.extractOldSegmentKey = function (n) {
      var r = this.matchingKey + "." + this.prefix + ".segment.";
      if (im(n, r)) return n.substr(r.length);
    }),
    (e.prototype.buildLastUpdatedKey = function () {
      return this.prefix + ".splits.lastUpdated";
    }),
    (e.prototype.isSplitsCacheKey = function (n) {
      return this.regexSplitsCacheKey.test(n);
    }),
    e
  );
})(cut);
function qG() {
  var t = "__SPLITSOFTWARE__";
  try {
    return localStorage.setItem(t, t), localStorage.removeItem(t), !0;
  } catch {
    return !1;
  }
}
var _fe = (function () {
  function t() {}
  return (
    (t.prototype.addSplits = function (e) {
      var n = this;
      return e.map(function (r) {
        return n.addSplit(r[0], r[1]);
      });
    }),
    (t.prototype.removeSplits = function (e) {
      var n = this;
      return e.map(function (r) {
        return n.removeSplit(r);
      });
    }),
    (t.prototype.getSplits = function (e) {
      var n = this,
        r = {};
      return (
        e.forEach(function (a) {
          r[a] = n.getSplit(a);
        }),
        r
      );
    }),
    (t.prototype.getAll = function () {
      var e = this;
      return this.getSplitNames().map(function (n) {
        return e.getSplit(n);
      });
    }),
    (t.prototype.checkCache = function () {
      return !1;
    }),
    (t.prototype.killLocally = function (e, n, r) {
      var a = this.getSplit(e);
      if (a && (!a.changeNumber || a.changeNumber < r)) {
        var s = Jn({}, a);
        return (
          (s.killed = !0),
          (s.defaultTreatment = n),
          (s.changeNumber = r),
          this.addSplit(e, s)
        );
      }
      return !1;
    }),
    t
  );
})();
function Jy(t) {
  for (var e = t.conditions || [], n = 0; n < e.length; n++)
    for (var r = e[n].matcherGroup.matchers, a = 0; a < r.length; a++)
      if (r[a].matcherType === "IN_SEGMENT") return !0;
  return !1;
}
var ti = "storage:localstorage: ",
  _1 = "1",
  put = (function (t) {
    Uv(e, t);
    function e(n, r, a) {
      var s = t.call(this) || this;
      return (
        (s.keys = r),
        (s.log = n.log),
        (s.storageHash = dut(n)),
        (s.flagSetsFilter =
          n.sync.__splitFiltersValidation.groupedFilters.bySet),
        s._checkExpiration(a),
        s._checkFilterQuery(),
        s
      );
    }
    return (
      (e.prototype._decrementCount = function (n) {
        var r = bh(localStorage.getItem(n)) - 1;
        r > 0 ? localStorage.setItem(n, r) : localStorage.removeItem(n);
      }),
      (e.prototype._decrementCounts = function (n) {
        try {
          if (n) {
            var r = this.keys.buildTrafficTypeKey(n.trafficTypeName);
            if ((this._decrementCount(r), Jy(n))) {
              var a = this.keys.buildSplitsWithSegmentCountKey();
              this._decrementCount(a);
            }
          }
        } catch (s) {
          this.log.error(ti + s);
        }
      }),
      (e.prototype._incrementCounts = function (n) {
        try {
          if (n) {
            var r = this.keys.buildTrafficTypeKey(n.trafficTypeName);
            if (
              (localStorage.setItem(r, bh(localStorage.getItem(r)) + 1), Jy(n))
            ) {
              var a = this.keys.buildSplitsWithSegmentCountKey();
              localStorage.setItem(a, bh(localStorage.getItem(a)) + 1);
            }
          }
        } catch (s) {
          this.log.error(ti + s);
        }
      }),
      (e.prototype.clear = function () {
        this.log.info(ti + "Flushing Splits data from localStorage");
        for (var n = localStorage.length, r = [], a = 0; a < n; a++) {
          var s = localStorage.key(a);
          s != null && this.keys.isSplitsCacheKey(s) && r.push(s);
        }
        r.forEach(function (i) {
          localStorage.removeItem(i);
        }),
          (this.hasSync = !1);
      }),
      (e.prototype.addSplit = function (n, r) {
        try {
          var a = this.keys.buildSplitKey(n),
            s = localStorage.getItem(a),
            i = s ? JSON.parse(s) : null;
          return (
            localStorage.setItem(a, JSON.stringify(r)),
            this._incrementCounts(r),
            this._decrementCounts(i),
            i && this.removeFromFlagSets(i.name, i.sets),
            this.addToFlagSets(r),
            !0
          );
        } catch (o) {
          return this.log.error(ti + o), !1;
        }
      }),
      (e.prototype.removeSplit = function (n) {
        try {
          var r = this.getSplit(n);
          return (
            localStorage.removeItem(this.keys.buildSplitKey(n)),
            this._decrementCounts(r),
            r && this.removeFromFlagSets(r.name, r.sets),
            !0
          );
        } catch (a) {
          return this.log.error(ti + a), !1;
        }
      }),
      (e.prototype.getSplit = function (n) {
        var r = localStorage.getItem(this.keys.buildSplitKey(n));
        return r && JSON.parse(r);
      }),
      (e.prototype.setChangeNumber = function (n) {
        if (this.updateNewFilter) {
          this.log.info(
            ti +
              "SDK key or feature flag filter criteria was modified. Updating cache"
          );
          var r = this.keys.buildHashKey();
          try {
            localStorage.setItem(r, this.storageHash);
          } catch (a) {
            this.log.error(ti + a);
          }
          this.updateNewFilter = !1;
        }
        try {
          return (
            localStorage.setItem(this.keys.buildSplitsTillKey(), n + ""),
            localStorage.setItem(
              this.keys.buildLastUpdatedKey(),
              Date.now() + ""
            ),
            (this.hasSync = !0),
            !0
          );
        } catch (a) {
          return this.log.error(ti + a), !1;
        }
      }),
      (e.prototype.getChangeNumber = function () {
        var n = -1,
          r = localStorage.getItem(this.keys.buildSplitsTillKey());
        return r !== null ? ((r = parseInt(r, 10)), BN(r) ? n : r) : n;
      }),
      (e.prototype.getSplitNames = function () {
        for (var n = localStorage.length, r = [], a = 0; a < n; ) {
          var s = localStorage.key(a);
          s != null &&
            this.keys.isSplitKey(s) &&
            r.push(this.keys.extractKey(s)),
            a++;
        }
        return r;
      }),
      (e.prototype.trafficTypeExists = function (n) {
        var r = bh(localStorage.getItem(this.keys.buildTrafficTypeKey(n)));
        return Tl(r) && r > 0;
      }),
      (e.prototype.usesSegments = function () {
        if (!this.hasSync) return !0;
        var n = localStorage.getItem(
            this.keys.buildSplitsWithSegmentCountKey()
          ),
          r = n === null ? 0 : bh(n);
        return Tl(r) ? r > 0 : !0;
      }),
      (e.prototype.checkCache = function () {
        return this.getChangeNumber() > -1;
      }),
      (e.prototype._checkExpiration = function (n) {
        var r = localStorage.getItem(this.keys.buildLastUpdatedKey());
        r !== null &&
          ((r = parseInt(r, 10)), !BN(r) && n && r < n && this.clear());
      }),
      (e.prototype._checkFilterQuery = function () {
        var n = this.keys.buildHashKey(),
          r = localStorage.getItem(n);
        if (r !== this.storageHash)
          try {
            (this.updateNewFilter = !0), this.checkCache() && this.clear();
          } catch (a) {
            this.log.error(ti + a);
          }
      }),
      (e.prototype.getNamesByFlagSets = function (n) {
        var r = this;
        return n.map(function (a) {
          var s = r.keys.buildFlagSetKey(a),
            i = localStorage.getItem(s);
          return new hi(i ? JSON.parse(i) : []);
        });
      }),
      (e.prototype.addToFlagSets = function (n) {
        var r = this;
        n.sets &&
          n.sets.forEach(function (a) {
            if (
              !(
                r.flagSetsFilter.length > 0 &&
                !r.flagSetsFilter.some(function (u) {
                  return u === a;
                })
              )
            ) {
              var s = r.keys.buildFlagSetKey(a),
                i = localStorage.getItem(s),
                o = new hi(i ? JSON.parse(i) : []);
              o.add(n.name), localStorage.setItem(s, JSON.stringify(_p(o)));
            }
          });
      }),
      (e.prototype.removeFromFlagSets = function (n, r) {
        var a = this;
        r &&
          r.forEach(function (s) {
            a.removeNames(s, n);
          });
      }),
      (e.prototype.removeNames = function (n, r) {
        var a = this.keys.buildFlagSetKey(n),
          s = localStorage.getItem(a);
        if (s) {
          var i = new hi(JSON.parse(s));
          if ((i.delete(r), i.size === 0)) {
            localStorage.removeItem(a);
            return;
          }
          localStorage.setItem(a, JSON.stringify(_p(i)));
        }
      }),
      e
    );
  })(_fe),
  bfe = (function () {
    function t() {}
    return (
      (t.prototype.registerSegments = function (e) {
        return !1;
      }),
      (t.prototype.setChangeNumber = function (e, n) {
        return !0;
      }),
      (t.prototype.getChangeNumber = function (e) {
        return -1;
      }),
      (t.prototype.resetSegments = function (e) {
        return !0;
      }),
      t
    );
  })(),
  qB = (function (t) {
    Uv(e, t);
    function e(n, r) {
      var a = t.call(this) || this;
      return (a.log = n), (a.keys = r), a;
    }
    return (
      (e.prototype.clear = function () {
        this.log.info(ti + "Flushing MySegments data from localStorage"),
          this.resetSegments([]);
      }),
      (e.prototype.addToSegment = function (n) {
        var r = this.keys.buildSegmentNameKey(n);
        try {
          return localStorage.setItem(r, _1), !0;
        } catch (a) {
          return this.log.error(ti + a), !1;
        }
      }),
      (e.prototype.removeFromSegment = function (n) {
        var r = this.keys.buildSegmentNameKey(n);
        try {
          return localStorage.removeItem(r), !0;
        } catch (a) {
          return this.log.error(ti + a), !1;
        }
      }),
      (e.prototype.isInSegment = function (n) {
        return localStorage.getItem(this.keys.buildSegmentNameKey(n)) === _1;
      }),
      (e.prototype.resetSegments = function (n) {
        var r = this,
          a = !1,
          s,
          i = Object.keys(localStorage).reduce(function (o, u) {
            var l = r.keys.extractSegmentName(u);
            if (l) o.push(l);
            else if (((l = r.keys.extractOldSegmentKey(u)), l)) {
              var c = r.keys.buildSegmentNameKey(l);
              try {
                !localStorage.getItem(c) &&
                  n.indexOf(l) > -1 &&
                  (localStorage.setItem(c, _1), o.push(l)),
                  localStorage.removeItem(u);
              } catch (d) {
                r.log.error(d);
              }
            }
            return o;
          }, []);
        if (n.length === 0 && i.length === n.length) return a;
        if (i.length !== n.length)
          (a = !0),
            i.forEach(function (o) {
              return r.removeFromSegment(o);
            }),
            n.forEach(function (o) {
              return r.addToSegment(o);
            });
        else {
          for (s = 0; s < n.length && i.indexOf(n[s]) !== -1; s++);
          s < n.length &&
            ((a = !0),
            i.forEach(function (o) {
              return r.removeFromSegment(o);
            }),
            n.forEach(function (o) {
              return r.addToSegment(o);
            }));
        }
        return a;
      }),
      (e.prototype.getRegisteredSegments = function () {
        var n = this;
        return Object.keys(localStorage).reduce(function (r, a) {
          var s = n.keys.extractSegmentName(a);
          return s && r.push(s), r;
        }, []);
      }),
      (e.prototype.getKeysCount = function () {
        return 1;
      }),
      e
    );
  })(bfe),
  l0 = (function (t) {
    Uv(e, t);
    function e() {
      var n = (t !== null && t.apply(this, arguments)) || this;
      return (n.segmentCache = {}), n;
    }
    return (
      (e.prototype.clear = function () {
        this.segmentCache = {};
      }),
      (e.prototype.addToSegment = function (n) {
        return (this.segmentCache[n] = !0), !0;
      }),
      (e.prototype.removeFromSegment = function (n) {
        return delete this.segmentCache[n], !0;
      }),
      (e.prototype.isInSegment = function (n) {
        return this.segmentCache[n] === !0;
      }),
      (e.prototype.resetSegments = function (n) {
        var r = this,
          a = !1,
          s,
          i = Object.keys(this.segmentCache);
        if (n.length === 0 && i.length === n.length) return a;
        if (i.length !== n.length)
          (a = !0),
            (this.segmentCache = {}),
            n.forEach(function (o) {
              r.addToSegment(o);
            });
        else {
          for (s = 0; s < n.length && this.isInSegment(n[s]); s++);
          s < n.length &&
            ((a = !0),
            (this.segmentCache = {}),
            n.forEach(function (o) {
              r.addToSegment(o);
            }));
        }
        return a;
      }),
      (e.prototype.getRegisteredSegments = function () {
        return Object.keys(this.segmentCache);
      }),
      (e.prototype.getKeysCount = function () {
        return 1;
      }),
      e
    );
  })(bfe),
  c0 = (function (t) {
    Uv(e, t);
    function e(n) {
      var r = t.call(this) || this;
      return (
        (r.splitsCache = {}),
        (r.ttCache = {}),
        (r.changeNumber = -1),
        (r.splitsWithSegmentsCount = 0),
        (r.flagSetsCache = {}),
        (r.flagSetsFilter = n ? n.groupedFilters.bySet : []),
        r
      );
    }
    return (
      (e.prototype.clear = function () {
        (this.splitsCache = {}),
          (this.ttCache = {}),
          (this.changeNumber = -1),
          (this.splitsWithSegmentsCount = 0);
      }),
      (e.prototype.addSplit = function (n, r) {
        var a = this.getSplit(n);
        if (a) {
          var s = a.trafficTypeName;
          this.ttCache[s]--,
            this.ttCache[s] || delete this.ttCache[s],
            this.removeFromFlagSets(a.name, a.sets),
            Jy(a) && this.splitsWithSegmentsCount--;
        }
        if (r) {
          this.splitsCache[n] = r;
          var i = r.trafficTypeName;
          return (
            (this.ttCache[i] = (this.ttCache[i] || 0) + 1),
            this.addToFlagSets(r),
            Jy(r) && this.splitsWithSegmentsCount++,
            !0
          );
        } else return !1;
      }),
      (e.prototype.removeSplit = function (n) {
        var r = this.getSplit(n);
        if (r) {
          delete this.splitsCache[n];
          var a = r.trafficTypeName;
          return (
            this.ttCache[a]--,
            this.ttCache[a] || delete this.ttCache[a],
            this.removeFromFlagSets(r.name, r.sets),
            Jy(r) && this.splitsWithSegmentsCount--,
            !0
          );
        } else return !1;
      }),
      (e.prototype.getSplit = function (n) {
        return this.splitsCache[n] || null;
      }),
      (e.prototype.setChangeNumber = function (n) {
        return (this.changeNumber = n), !0;
      }),
      (e.prototype.getChangeNumber = function () {
        return this.changeNumber;
      }),
      (e.prototype.getSplitNames = function () {
        return Object.keys(this.splitsCache);
      }),
      (e.prototype.trafficTypeExists = function (n) {
        return Tl(this.ttCache[n]) && this.ttCache[n] > 0;
      }),
      (e.prototype.usesSegments = function () {
        return (
          this.getChangeNumber() === -1 || this.splitsWithSegmentsCount > 0
        );
      }),
      (e.prototype.getNamesByFlagSets = function (n) {
        var r = this;
        return n.map(function (a) {
          return r.flagSetsCache[a] || new hi();
        });
      }),
      (e.prototype.addToFlagSets = function (n) {
        var r = this;
        n.sets &&
          n.sets.forEach(function (a) {
            (r.flagSetsFilter.length > 0 &&
              !r.flagSetsFilter.some(function (s) {
                return s === a;
              })) ||
              (r.flagSetsCache[a] || (r.flagSetsCache[a] = new hi([])),
              r.flagSetsCache[a].add(n.name));
          });
      }),
      (e.prototype.removeFromFlagSets = function (n, r) {
        var a = this;
        r &&
          r.forEach(function (s) {
            a.removeNames(s, n);
          });
      }),
      (e.prototype.removeNames = function (n, r) {
        this.flagSetsCache[n] &&
          (this.flagSetsCache[n].delete(r),
          this.flagSetsCache[n].size === 0 && delete this.flagSetsCache[n]);
      }),
      e
    );
  })(_fe),
  Efe = "GOOGLE_ANALYTICS_TO_SPLIT",
  Tfe = "SPLIT_TO_GOOGLE_ANALYTICS",
  hut = 864e6,
  fut = 0,
  mut = 22,
  Sut = 1.5;
function YB(t) {
  var e = Math.min(mut, Math.max(fut, Math.ceil(Math.log(t) / Math.log(Sut))));
  return BN(e) ? 0 : e;
}
var yut = 20,
  gut = 10;
function XB() {
  return [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
}
var vut = 0.001;
function wfe(t) {
  var e = t.settings;
  return e.mode !== Bp && (e.core.key === void 0 || Math.random() <= vut);
}
var Pfe = (function () {
    function t(e, n) {
      (this.splits = e),
        (this.segments = n),
        (this.e = !0),
        (this.notReadyUsage = 0),
        (this.impressionStats = [0, 0, 0]),
        (this.eventStats = [0, 0]),
        (this.lastSync = {}),
        (this.httpErrors = {}),
        (this.httpLatencies = {}),
        (this.authRejections = 0),
        (this.tokenRefreshes = 0),
        (this.streamingEvents = []),
        (this.tags = []),
        (this.exceptions = {}),
        (this.latencies = {}),
        (this.updatesFromSSE = { sp: 0, ms: 0 });
    }
    return (
      (t.prototype.isEmpty = function () {
        return this.e;
      }),
      (t.prototype.clear = function () {}),
      (t.prototype.pop = function () {
        return (
          (this.e = !0),
          {
            lS: this.getLastSynchronization(),
            mL: this.popLatencies(),
            mE: this.popExceptions(),
            hE: this.popHttpErrors(),
            hL: this.popHttpLatencies(),
            tR: this.popTokenRefreshes(),
            aR: this.popAuthRejections(),
            iQ: this.getImpressionStats(i0),
            iDe: this.getImpressionStats(Khe),
            iDr: this.getImpressionStats(UN),
            spC: this.splits && this.splits.getSplitNames().length,
            seC: this.segments && this.segments.getRegisteredSegments().length,
            skC: this.segments && this.segments.getKeysCount(),
            sL: this.getSessionLength(),
            eQ: this.getEventStats(i0),
            eD: this.getEventStats(UN),
            sE: this.popStreamingEvents(),
            t: this.popTags(),
            ufs: this.popUpdatesFromSSE(),
          }
        );
      }),
      (t.prototype.getTimeUntilReady = function () {
        return this.timeUntilReady;
      }),
      (t.prototype.recordTimeUntilReady = function (e) {
        this.timeUntilReady = e;
      }),
      (t.prototype.getTimeUntilReadyFromCache = function () {
        return this.timeUntilReadyFromCache;
      }),
      (t.prototype.recordTimeUntilReadyFromCache = function (e) {
        this.timeUntilReadyFromCache = e;
      }),
      (t.prototype.getNonReadyUsage = function () {
        return this.notReadyUsage;
      }),
      (t.prototype.recordNonReadyUsage = function () {
        this.notReadyUsage++;
      }),
      (t.prototype.getImpressionStats = function (e) {
        return this.impressionStats[e];
      }),
      (t.prototype.recordImpressionStats = function (e, n) {
        (this.impressionStats[e] += n), (this.e = !1);
      }),
      (t.prototype.getEventStats = function (e) {
        return this.eventStats[e];
      }),
      (t.prototype.recordEventStats = function (e, n) {
        (this.eventStats[e] += n), (this.e = !1);
      }),
      (t.prototype.getLastSynchronization = function () {
        return this.lastSync;
      }),
      (t.prototype.recordSuccessfulSync = function (e, n) {
        (this.lastSync[e] = n), (this.e = !1);
      }),
      (t.prototype.popHttpErrors = function () {
        var e = this.httpErrors;
        return (this.httpErrors = {}), e;
      }),
      (t.prototype.recordHttpError = function (e, n) {
        var r = (this.httpErrors[e] = this.httpErrors[e] || {});
        (r[n] = (r[n] || 0) + 1), (this.e = !1);
      }),
      (t.prototype.popHttpLatencies = function () {
        var e = this.httpLatencies;
        return (this.httpLatencies = {}), e;
      }),
      (t.prototype.recordHttpLatency = function (e, n) {
        var r = (this.httpLatencies[e] = this.httpLatencies[e] || XB());
        r[YB(n)]++, (this.e = !1);
      }),
      (t.prototype.popAuthRejections = function () {
        var e = this.authRejections;
        return (this.authRejections = 0), e;
      }),
      (t.prototype.recordAuthRejections = function () {
        this.authRejections++, (this.e = !1);
      }),
      (t.prototype.popTokenRefreshes = function () {
        var e = this.tokenRefreshes;
        return (this.tokenRefreshes = 0), e;
      }),
      (t.prototype.recordTokenRefreshes = function () {
        this.tokenRefreshes++, (this.e = !1);
      }),
      (t.prototype.popStreamingEvents = function () {
        return this.streamingEvents.splice(0);
      }),
      (t.prototype.recordStreamingEvents = function (e) {
        this.streamingEvents.length < yut && this.streamingEvents.push(e),
          (this.e = !1);
      }),
      (t.prototype.popTags = function () {
        return this.tags.splice(0);
      }),
      (t.prototype.addTag = function (e) {
        this.tags.length < gut && this.tags.push(e), (this.e = !1);
      }),
      (t.prototype.getSessionLength = function () {
        return this.sessionLength;
      }),
      (t.prototype.recordSessionLength = function (e) {
        (this.sessionLength = e), (this.e = !1);
      }),
      (t.prototype.popExceptions = function () {
        var e = this.exceptions;
        return (this.exceptions = {}), e;
      }),
      (t.prototype.recordException = function (e) {
        (this.exceptions[e] = (this.exceptions[e] || 0) + 1), (this.e = !1);
      }),
      (t.prototype.popLatencies = function () {
        var e = this.latencies;
        return (this.latencies = {}), e;
      }),
      (t.prototype.recordLatency = function (e, n) {
        var r = (this.latencies[e] = this.latencies[e] || XB());
        r[YB(n)]++, (this.e = !1);
      }),
      (t.prototype.popUpdatesFromSSE = function () {
        var e = this.updatesFromSSE;
        return (this.updatesFromSSE = { sp: 0, ms: 0 }), e;
      }),
      (t.prototype.recordUpdatesFromSSE = function (e) {
        this.updatesFromSSE[e]++, (this.e = !1);
      }),
      t
    );
  })(),
  Ife = (function () {
    function t(e) {
      e === void 0 && (e = yfe),
        (this.uniqueTrackerSize = 0),
        (this.uniqueKeysTracker = {}),
        (this.maxStorage = e);
    }
    return (
      (t.prototype.setOnFullQueueCb = function (e) {
        this.onFullQueue = e;
      }),
      (t.prototype.track = function (e, n) {
        this.uniqueKeysTracker[e] || (this.uniqueKeysTracker[e] = new hi());
        var r = this.uniqueKeysTracker[e];
        r.has(n) || (r.add(n), this.uniqueTrackerSize++),
          this.uniqueTrackerSize >= this.maxStorage &&
            this.onFullQueue &&
            this.onFullQueue();
      }),
      (t.prototype.clear = function () {
        (this.uniqueTrackerSize = 0), (this.uniqueKeysTracker = {});
      }),
      (t.prototype.pop = function () {
        var e = this.uniqueKeysTracker;
        return this.clear(), this.fromUniqueKeysCollector(e);
      }),
      (t.prototype.isEmpty = function () {
        return Object.keys(this.uniqueKeysTracker).length === 0;
      }),
      (t.prototype.fromUniqueKeysCollector = function (e) {
        for (var n = [], r = Object.keys(e), a = 0; a < r.length; a++) {
          var s = r[a],
            i = _p(e[s]),
            o = { k: s, fs: i };
          n.push(o);
        }
        return { keys: n };
      }),
      t
    );
  })();
function xI(t) {
  var e = t.settings,
    n = e.scheduler,
    r = n.impressionsQueueSize,
    a = n.eventsQueueSize,
    s = e.sync,
    i = s.impressionsMode,
    o = s.__splitFiltersValidation,
    u = new c0(o),
    l = new l0(),
    c = {
      splits: u,
      segments: l,
      impressions: new mfe(r),
      impressionCounts: i !== ed ? new gfe() : void 0,
      events: new vfe(a),
      telemetry: wfe(t) ? new Pfe(u, l) : void 0,
      uniqueKeys: i === td ? new Ife() : void 0,
      destroy: function () {
        this.splits.clear(),
          this.segments.clear(),
          this.impressions.clear(),
          this.impressionCounts && this.impressionCounts.clear(),
          this.events.clear(),
          this.uniqueKeys && this.uniqueKeys.clear();
      },
      shared: function () {
        return {
          splits: this.splits,
          segments: new l0(),
          impressions: this.impressions,
          impressionCounts: this.impressionCounts,
          events: this.events,
          telemetry: this.telemetry,
          destroy: function () {
            (this.splits = new c0(o)), this.segments.clear();
          },
        };
      },
    };
  if (t.settings.mode === Bp) {
    var d = function () {
      return !0;
    };
    (c.impressions.track = d),
      (c.events.track = d),
      c.impressionCounts && (c.impressionCounts.track = d),
      c.uniqueKeys && (c.uniqueKeys.track = d);
  }
  return c;
}
xI.type = qy;
function _ut(t) {
  t === void 0 && (t = {});
  var e = lut(t.prefix);
  function n(r) {
    if (!qG())
      return (
        r.settings.log.warn(
          ti +
            "LocalStorage API is unavailable. Falling back to default MEMORY storage"
        ),
        xI(r)
      );
    var a = r.settings,
      s = r.settings,
      i = s.log,
      o = s.scheduler,
      u = o.impressionsQueueSize,
      l = o.eventsQueueSize,
      c = s.sync,
      d = c.impressionsMode,
      p = c.__splitFiltersValidation,
      m = om(a.core.key),
      y = new WB(e, m),
      I = Date.now() - hut,
      O = new put(a, y, I),
      g = new qB(i, y);
    return {
      splits: O,
      segments: g,
      impressions: new mfe(u),
      impressionCounts: d !== ed ? new gfe() : void 0,
      events: new vfe(l),
      telemetry: wfe(r) ? new Pfe(O, g) : void 0,
      uniqueKeys: d === td ? new Ife() : void 0,
      destroy: function () {
        var C;
        (this.splits = new c0(p)),
          (this.segments = new l0()),
          this.impressions.clear(),
          this.impressionCounts && this.impressionCounts.clear(),
          this.events.clear(),
          (C = this.uniqueKeys) === null || C === void 0 || C.clear();
      },
      shared: function (C) {
        var H = new WB(e, C);
        return {
          splits: this.splits,
          segments: new qB(i, H),
          impressions: this.impressions,
          impressionCounts: this.impressionCounts,
          events: this.events,
          telemetry: this.telemetry,
          destroy: function () {
            (this.splits = new c0(p)), (this.segments = new l0());
          },
        };
      },
    };
  }
  return (n.type = GN), n;
}
function Qs(t) {
  return t != null && typeof t.then == "function";
}
function but(t, e, n, r) {
  if (!Is(e) || e.length === 0)
    return (
      t.warn(
        r +
          ": you passed an invalid attribute name, attribute name must be a non-empty string."
      ),
      !1
    );
  var a = Is(n),
    s = Tl(n),
    i = VG(n),
    o = Array.isArray(n);
  return a || s || i || o
    ? !0
    : (t.warn(
        r +
          ": you passed an invalid attribute value for " +
          e +
          ". Acceptable types are: string, number, boolean and array of strings."
      ),
      !1);
}
function Cfe(t, e, n) {
  return e == null || ja(e) ? e : (t.error(MG, [n, "attributes"]), !1);
}
function QB(t, e, n) {
  if (!Cfe(t, e, n)) return !1;
  var r = !0;
  return (
    Object.keys(e).forEach(function (a) {
      but(t, a, e[a], n) || (r = !1);
    }),
    r
  );
}
var Eut = /^[a-zA-Z0-9][-_.:a-zA-Z0-9]{0,79}$/,
  b1 = "event_type";
function Afe(t, e, n) {
  if (e == null) t.error(Xm, [n, b1]);
  else if (!Is(e)) t.error(Qm, [n, b1]);
  else if (e.length === 0) t.error(Jm, [n, b1]);
  else if (!Eut.test(e)) t.error(_he, [n, e]);
  else return e;
  return !1;
}
function Ofe(t, e, n) {
  return Tl(e) || e == null ? e : (t.error(Ehe, [n]), !1);
}
var jS = { NULL: 0, STRING: 2, BOOLEAN: 4, NUMBER: 8 },
  Tut = 300,
  wut = 1024 * 32,
  E1 = 1024;
function Hfe(t, e, n) {
  if (e == null) return { properties: null, size: E1 };
  if (!ja(e))
    return t.error(MG, [n, "properties"]), { properties: !1, size: E1 };
  var r = Object.keys(e),
    a = Jn({}, e),
    s = { properties: a, size: E1 };
  r.length > Tut && t.warn(Ype, [n]);
  for (var i = 0; i < r.length; i++) {
    s.size += r[i].length * jS.STRING;
    var o = a[r[i]],
      u = Is(o),
      l = Tl(o),
      c = VG(o),
      d = o === null;
    if (
      (u ||
        l ||
        c ||
        d ||
        ((a[r[i]] = null), (o = null), (d = !0), t.warn(qpe, [n, r[i]])),
      d
        ? (s.size += jS.NULL)
        : l
        ? (s.size += jS.NUMBER)
        : c
        ? (s.size += jS.BOOLEAN)
        : u && (s.size += o.length * jS.STRING),
      s.size > wut)
    ) {
      t.error(bhe, [n]), (s.properties = !1);
      break;
    }
  }
  return s;
}
function Zy(t, e, n) {
  return e.isDestroyed() ? (t.error(The, [n]), !1) : !0;
}
function eT(t, e, n, r) {
  return e.isReady() || e.isReadyFromCache()
    ? !0
    : (t.warn(Kpe, [n, r ? " for feature flag " + r.toString() : ""]), !1);
}
var Put = "killed",
  Iut = "default rule",
  Nfe = "definition not found",
  Rfe = "not ready",
  LI = "exception",
  Cut = "archived",
  Aut = "not in split";
function zN(t, e, n, r, a) {
  return e.isReady() && (r === Nfe || r == null)
    ? (t.warn(Jpe, [a, n]), !1)
    : !0;
}
function JB(t, e, n) {
  t.warn(ehe, [n, e]);
}
function Out(t, e, n, r, a, s) {
  if (!e.isReady() || r === Bp) return !0;
  var i = n.trafficTypeExists(a);
  return Qs(i)
    ? i.then(function (o) {
        return o || JB(t, a, s), o;
      })
    : (i || JB(t, a, s), i);
}
function Hut(t) {
  var e = t.conditions,
    n = BG(e, function (r) {
      return r.conditionType === "ROLLOUT";
    });
  return (
    n || (n = e[0]),
    n
      ? n.partitions.map(function (r) {
          return r.treatment;
        })
      : []
  );
}
function $N(t) {
  return t
    ? {
        name: t.name,
        trafficType: t.trafficTypeName,
        killed: t.killed,
        changeNumber: t.changeNumber || 0,
        treatments: Hut(t),
        configs: t.configurations || {},
        sets: t.sets || [],
        defaultTreatment: t.defaultTreatment,
      }
    : null;
}
function ZB(t) {
  var e = [];
  return (
    t.forEach(function (n) {
      var r = $N(n);
      r && e.push(r);
    }),
    e
  );
}
function Nut(t, e, n) {
  var r = n.readinessManager,
    a = n.sdkStatus,
    s = t.log,
    i = t.mode,
    o = p_(i);
  return Jn(Object.create(a), {
    split: function (u) {
      var l = jG(s, u, US);
      if (!Zy(s, r, US) || !eT(s, r, US) || !l)
        return o ? Promise.resolve(null) : null;
      var c = e.getSplit(l);
      return Qs(c)
        ? c
            .catch(function () {
              return null;
            })
            .then(function (d) {
              return zN(s, r, l, d, US), $N(d);
            })
        : (zN(s, r, l, c, US), $N(c));
    },
    splits: function () {
      if (!Zy(s, r, xB) || !eT(s, r, xB)) return o ? Promise.resolve([]) : [];
      var u = e.getAll();
      return Qs(u)
        ? u
            .catch(function () {
              return [];
            })
            .then(ZB)
        : ZB(u);
    },
    names: function () {
      if (!Zy(s, r, LB) || !eT(s, r, LB)) return o ? Promise.resolve([]) : [];
      var u = e.getSplitNames();
      return Qs(u)
        ? u.catch(function () {
            return [];
          })
        : u;
    },
  });
}
var Rut = (function () {
  function t() {
    this.attributesCache = {};
  }
  return (
    (t.prototype.setAttribute = function (e, n) {
      return (this.attributesCache[e] = n), !0;
    }),
    (t.prototype.getAttribute = function (e) {
      return this.attributesCache[e];
    }),
    (t.prototype.setAttributes = function (e) {
      return (this.attributesCache = Jn(this.attributesCache, e)), !0;
    }),
    (t.prototype.getAll = function () {
      return this.attributesCache;
    }),
    (t.prototype.removeAttribute = function (e) {
      return Object.keys(this.attributesCache).indexOf(e) >= 0
        ? (delete this.attributesCache[e], !0)
        : !1;
    }),
    (t.prototype.clear = function () {
      return (this.attributesCache = {}), !0;
    }),
    t
  );
})();
function kut(t, e) {
  var n = new Rut(),
    r = e.getTreatment,
    a = e.getTreatmentWithConfig,
    s = e.getTreatments,
    i = e.getTreatmentsWithConfig,
    o = e.getTreatmentsByFlagSets,
    u = e.getTreatmentsWithConfigByFlagSets,
    l = e.getTreatmentsByFlagSet,
    c = e.getTreatmentsWithConfigByFlagSet,
    d = e.track;
  function p(de, U, R) {
    return r(de, U, he(R));
  }
  function m(de, U, R) {
    return a(de, U, he(R));
  }
  function y(de, U, R) {
    return s(de, U, he(R));
  }
  function I(de, U, R) {
    return i(de, U, he(R));
  }
  function O(de, U, R) {
    return o(de, U, he(R));
  }
  function g(de, U, R) {
    return u(de, U, he(R));
  }
  function C(de, U, R) {
    return l(de, U, he(R));
  }
  function H(de, U, R) {
    return c(de, U, he(R));
  }
  function B(de, U, R, ge, ve) {
    return d(de, U, R, ge, ve);
  }
  function he(de) {
    var U = n.getAll();
    return Object.keys(U).length > 0 ? Jn({}, U, de) : de;
  }
  return Jn(e, {
    getTreatment: p,
    getTreatmentWithConfig: m,
    getTreatments: y,
    getTreatmentsWithConfig: I,
    getTreatmentsByFlagSets: O,
    getTreatmentsWithConfigByFlagSets: g,
    getTreatmentsByFlagSet: C,
    getTreatmentsWithConfigByFlagSet: H,
    track: B,
    setAttribute: function (de, U) {
      var R = {};
      return (
        (R[de] = U),
        QB(t, R, "setAttribute")
          ? (t.debug("stored " + U + " for attribute " + de),
            n.setAttribute(de, U))
          : !1
      );
    },
    getAttribute: function (de) {
      return t.debug("retrieved attribute " + de), n.getAttribute(de + "");
    },
    setAttributes: function (de) {
      return QB(t, de, "setAttributes") ? n.setAttributes(de) : !1;
    },
    getAttributes: function () {
      return n.getAll();
    },
    removeAttribute: function (de) {
      return t.debug("removed attribute " + de), n.removeAttribute(de + "");
    },
    clearAttributes: function () {
      return n.clear();
    },
  });
}
function eV(t, e, n, r) {
  var a = kut(t, e);
  return Jn(a, {
    getTreatment: a.getTreatment.bind(a, n),
    getTreatmentWithConfig: a.getTreatmentWithConfig.bind(a, n),
    getTreatments: a.getTreatments.bind(a, n),
    getTreatmentsWithConfig: a.getTreatmentsWithConfig.bind(a, n),
    getTreatmentsByFlagSets: a.getTreatmentsByFlagSets.bind(a, n),
    getTreatmentsWithConfigByFlagSets: a.getTreatmentsWithConfigByFlagSets.bind(
      a,
      n
    ),
    getTreatmentsByFlagSet: a.getTreatmentsByFlagSet.bind(a, n),
    getTreatmentsWithConfigByFlagSet: a.getTreatmentsWithConfigByFlagSet.bind(
      a,
      n
    ),
    track: r ? a.track.bind(a, n, r) : a.track.bind(a, n),
    isClientSide: !0,
    key: n,
    trafficType: r,
  });
}
var Os = {
    UNDEFINED: 0,
    ALL_KEYS: 1,
    IN_SEGMENT: 2,
    WHITELIST: 3,
    EQUAL_TO: 4,
    GREATER_THAN_OR_EQUAL_TO: 5,
    LESS_THAN_OR_EQUAL_TO: 6,
    BETWEEN: 7,
    EQUAL_TO_SET: 8,
    CONTAINS_ANY_OF_SET: 9,
    CONTAINS_ALL_OF_SET: 10,
    PART_OF_SET: 11,
    ENDS_WITH: 12,
    STARTS_WITH: 13,
    CONTAINS_STRING: 14,
    IN_SPLIT_TREATMENT: 15,
    EQUAL_TO_BOOLEAN: 16,
    MATCHES_STRING: 17,
  },
  Wr = {
    BOOLEAN: "BOOLEAN",
    STRING: "STRING",
    NUMBER: "NUMBER",
    SET: "SET",
    DATETIME: "DATETIME",
    NOT_SPECIFIED: "NOT_SPECIFIED",
  };
function xut(t) {
  var e = Os[t];
  return e || Os.UNDEFINED;
}
function Lut(t) {
  return t ? t.segmentName : void 0;
}
function Mut(t) {
  return new hi(t.whitelist);
}
function tV(t) {
  return t.whitelist;
}
function nV(t) {
  return t.value;
}
function kfe(t) {
  return new Date(t).setUTCHours(0, 0, 0, 0);
}
function tT(t) {
  return new Date(t).setUTCSeconds(0, 0);
}
function Dut(t) {
  var e = t.map(function (n) {
    var r = n.matcherType,
      a = n.negate,
      s = n.keySelector,
      i = n.userDefinedSegmentMatcherData,
      o = n.whitelistMatcherData,
      u = n.unaryNumericMatcherData,
      l = n.betweenMatcherData,
      c = n.dependencyMatcherData,
      d = n.booleanMatcherData,
      p = n.stringMatcherData,
      m = s && s.attribute,
      y = xut(r),
      I = Wr.STRING,
      O = void 0;
    return (
      y === Os.IN_SEGMENT
        ? (O = Lut(i))
        : y === Os.WHITELIST
        ? (O = Mut(o))
        : y === Os.EQUAL_TO
        ? ((O = nV(u)),
          (I = Wr.NUMBER),
          u.dataType === "DATETIME" && ((O = kfe(O)), (I = Wr.DATETIME)))
        : y === Os.GREATER_THAN_OR_EQUAL_TO || y === Os.LESS_THAN_OR_EQUAL_TO
        ? ((O = nV(u)),
          (I = Wr.NUMBER),
          u.dataType === "DATETIME" && ((O = tT(O)), (I = Wr.DATETIME)))
        : y === Os.BETWEEN
        ? ((O = l),
          (I = Wr.NUMBER),
          O.dataType === "DATETIME" &&
            ((O.start = tT(O.start)), (O.end = tT(O.end)), (I = Wr.DATETIME)))
        : y === Os.EQUAL_TO_SET ||
          y === Os.CONTAINS_ANY_OF_SET ||
          y === Os.CONTAINS_ALL_OF_SET ||
          y === Os.PART_OF_SET
        ? ((O = tV(o)), (I = Wr.SET))
        : y === Os.STARTS_WITH || y === Os.ENDS_WITH || y === Os.CONTAINS_STRING
        ? (O = tV(o))
        : y === Os.IN_SPLIT_TREATMENT
        ? ((O = c), (I = Wr.NOT_SPECIFIED))
        : y === Os.EQUAL_TO_BOOLEAN
        ? ((I = Wr.BOOLEAN), (O = d))
        : y === Os.MATCHES_STRING && (O = p),
      { attribute: m, negate: a, type: y, value: O, dataType: I }
    );
  });
  return vd(e, function (n) {
    return n.type === Os.UNDEFINED;
  }) === -1
    ? e
    : [];
}
var Gut = (function () {
  function t(e, n) {
    if (e[e.length - 1] !== 100)
      throw new RangeError("Provided invalid dataset as input");
    (this._ranges = e), (this._treatments = n);
  }
  return (
    (t.parse = function (e) {
      var n = e.reduce(
          function (s, i) {
            var o = i.size,
              u = i.treatment;
            return s.ranges.push((s.inc += o)), s.treatments.push(u), s;
          },
          { inc: 0, ranges: [], treatments: [] }
        ),
        r = n.ranges,
        a = n.treatments;
      return new t(r, a);
    }),
    (t.prototype.getTreatmentFor = function (e) {
      if (e < 0 || e > 100)
        throw new RangeError("Please provide a value between 0 and 100");
      var n = vd(this._ranges, function (a) {
          return e <= a;
        }),
        r = this._treatments[n];
      return r;
    }),
    t
  );
})();
function Fut(t) {
  return function (n) {
    return t.debug(kde), n != null;
  };
}
function Uut(t, e, n) {
  return function (a) {
    var s = n.segments.isInSegment(e, a);
    return (
      Qs(s)
        ? s.then(function (i) {
            return t.debug(RN, [e, a, s]), i;
          })
        : t.debug(RN, [e, a, s]),
      s
    );
  };
}
function Kut(t, e) {
  return function (r) {
    var a = e.has(r);
    return t.debug(Xde, [r, _p(e).join(","), a]), a;
  };
}
function But(t, e) {
  return function (r) {
    var a = r === e;
    return t.debug(Kde, [r, e, a]), a;
  };
}
function Vut(t, e) {
  return function (r) {
    var a = r >= e;
    return t.debug(jde, [r, e, a]), a;
  };
}
function jut(t, e) {
  return function (r) {
    var a = r <= e;
    return t.debug(zde, [r, e, a]), a;
  };
}
function zut(t, e) {
  return function (r) {
    var a = r >= e.start && r <= e.end;
    return t.debug(xde, [r, e.start, e.end, a]), a;
  };
}
function $ut(t, e) {
  return function (r) {
    for (
      var a = r.length === e.length,
        s = function (o) {
          vd(e, function (u) {
            return u === r[o];
          }) < 0 && (a = !1);
        },
        i = 0;
      i < r.length && a;
      i++
    )
      s(i);
    return t.debug(Bde, [r, e, a]), a;
  };
}
function Wut(t, e) {
  return function (r) {
    for (
      var a = !1,
        s = function (o) {
          vd(r, function (u) {
            return u === e[o];
          }) >= 0 && (a = !0);
        },
        i = 0;
      i < e.length && !a;
      i++
    )
      s(i);
    return t.debug(Dde, [r, e, a]), a;
  };
}
function qut(t, e) {
  return function (r) {
    var a = !0;
    if (r.length < e.length) a = !1;
    else
      for (
        var s = function (o) {
            vd(r, function (u) {
              return u === e[o];
            }) < 0 && (a = !1);
          },
          i = 0;
        i < e.length && a;
        i++
      )
        s(i);
    return t.debug(Mde, [r, e, a]), a;
  };
}
function Yut(t, e) {
  return function (r) {
    for (
      var a = r.length <= e.length,
        s = function (o) {
          vd(e, function (u) {
            return u === r[o];
          }) < 0 && (a = !1);
        },
        i = 0;
      i < r.length && a;
      i++
    )
      s(i);
    return t.debug($de, [r, e, a]), a;
  };
}
function Xut(t, e) {
  return function (r) {
    var a = e.some(function (s) {
      return Hit(r, s);
    });
    return t.debug(Vde, [r, e, a]), a;
  };
}
function Qut(t, e) {
  return function (r) {
    var a = e.some(function (s) {
      return im(r, s);
    });
    return t.debug(Yde, [r, e, a]), a;
  };
}
function Jut(t, e) {
  return function (r) {
    var a = e.some(function (s) {
      return Is(r) && r.indexOf(s) > -1;
    });
    return t.debug(Gde, [r, e, a]), a;
  };
}
function Zut(t, e, n) {
  var r = e.split,
    a = e.treatments;
  function s(i, o, u) {
    var l = !1;
    return (
      Array.isArray(o) && (l = o.indexOf(i.treatment) !== -1),
      t.debug(Fde, [u, i.treatment, i.label, u, o, l]),
      l
    );
  }
  return function (o, u) {
    var l = o.key,
      c = o.attributes;
    t.debug(Ude, [
      r,
      JSON.stringify(l),
      c
        ? `
 attributes: ` + JSON.stringify(c)
        : "",
    ]);
    var d = u(t, l, r, c, n);
    return Qs(d)
      ? d.then(function (p) {
          return s(p, a, r);
        })
      : s(d, a, r);
  };
}
function elt(t, e) {
  return function (r) {
    var a = e === r;
    return t.debug(Lde, [e, r]), a;
  };
}
function tlt(t, e) {
  return function (r) {
    var a;
    try {
      a = new RegExp(e);
    } catch {
      return t.debug(qde, [e]), !1;
    }
    var s = a.test(r);
    return t.debug(Wde, [r, e, s ? "yes" : "no"]), s;
  };
}
var sV = [
  void 0,
  Fut,
  Uut,
  Kut,
  But,
  Vut,
  jut,
  zut,
  $ut,
  Wut,
  qut,
  Yut,
  Xut,
  Qut,
  Jut,
  Zut,
  elt,
  tlt,
];
function nlt(t, e, n) {
  var r = e.type,
    a = e.value,
    s;
  return sV[r] && (s = sV[r](t, a, n)), s;
}
function slt(t) {
  var e = bh(t);
  return isNaN(e) ? void 0 : e;
}
function rlt(t) {
  var e = t;
  ja(t) && (e = t.matchingKey ? t.matchingKey : void 0);
  var n = qhe(e);
  return n || void 0;
}
function alt(t) {
  var e = Array.isArray(t)
    ? OI(
        t.map(function (n) {
          return n + "";
        })
      )
    : [];
  return e.length ? e : void 0;
}
function ilt(t) {
  if (t === !0 || t === !1) return t;
  if (typeof t == "string") {
    var e = t.toLocaleLowerCase();
    if (e === "true") return !0;
    if (e === "false") return !1;
  }
}
function olt(t, e) {
  return { key: t, attributes: e };
}
function ult(t, e) {
  switch (t) {
    case Os.EQUAL_TO:
      return e === "DATETIME" ? kfe : void 0;
    case Os.GREATER_THAN_OR_EQUAL_TO:
    case Os.LESS_THAN_OR_EQUAL_TO:
    case Os.BETWEEN:
      return e === "DATETIME" ? tT : void 0;
    case Os.IN_SPLIT_TREATMENT:
      return olt;
    default:
      return;
  }
}
function llt(t, e, n, r, a) {
  var s = ult(e, r),
    i;
  switch (r) {
    case Wr.NUMBER:
    case Wr.DATETIME:
      i = slt(n);
      break;
    case Wr.STRING:
      i = rlt(n);
      break;
    case Wr.SET:
      i = alt(n);
      break;
    case Wr.BOOLEAN:
      i = ilt(n);
      break;
    case Wr.NOT_SPECIFIED:
      i = n;
      break;
    default:
      i = void 0;
  }
  return (
    s && (i = s(i, a)),
    t.debug(Jde, [n, r, i instanceof Object ? JSON.stringify(i) : i]),
    i
  );
}
function clt(t, e, n, r) {
  var a = void 0;
  return (
    n ? (r ? ((a = r[n]), t.debug(Qde, [n, a])) : t.warn(Fpe, [n])) : (a = e), a
  );
}
function dlt(t, e, n, r) {
  var a = n.attribute,
    s = clt(t, e, a, r),
    i = llt(t, n.type, s, n.dataType, r);
  if (i !== void 0) return i;
  t.warn(Gpe, [s + (a ? " for attribute " + a : "")]);
}
function plt(t, e, n, r) {
  var a = lfe(e, n),
    s = r.getTreatmentFor(a);
  return t.debug(Rde, [a, e, n, s]), s;
}
function hlt(t, e, n) {
  if (t < 100) {
    var r = lfe(e, n);
    if (r > t) return !1;
  }
  return !0;
}
function rV(t, e, n, r, a, s) {
  if (e) {
    var i = plt(t, n, r, a);
    return { treatment: i, label: s };
  }
}
function flt(t, e, n, r, a) {
  return function (i, o, u, l, c, d) {
    if (a === "ROLLOUT" && !hlt(u, i.bucketingKey, l))
      return { treatment: void 0, label: Aut };
    var p = e(i, c, d);
    return Qs(p)
      ? p.then(function (m) {
          return rV(t, m, i.bucketingKey, o, n, r);
        })
      : rV(t, p, i.bucketingKey, o, n, r);
  };
}
function mlt(t, e) {
  function n() {
    return t.error(che), { treatment: Oo, label: LI };
  }
  function r(s) {
    for (var i = s.length, o = 0; o < i; o++) {
      var u = s[o];
      if (u !== void 0) return t.debug(Hde, [u.treatment]), u;
    }
    t.debug(Nde);
  }
  function a(s, i, o, u, l, c) {
    var d = e.map(function (p) {
      return p(s, i, o, u, l, c);
    });
    return vd(d, Qs) !== -1
      ? Promise.all(d).then(function (p) {
          return r(p);
        })
      : r(d);
  }
  return !Array.isArray(e) || (Array.isArray(e) && e.length === 0) ? n : a;
}
function Slt(t, e) {
  function n(r) {
    var a = r.every(function (s) {
      return s;
    });
    return t.debug(Ode, [a]), a;
  }
  return function () {
    for (var a = [], s = 0; s < arguments.length; s++) a[s] = arguments[s];
    var i = e.map(function (o) {
      return o.apply(void 0, a);
    });
    return vd(i, Qs) !== -1 ? Promise.all(i).then(n) : n(i);
  };
}
function ylt(t, e, n) {
  for (var r = [], a = 0; a < e.length; a++) {
    var s = e[a],
      i = s.matcherGroup,
      o = s.partitions,
      u = s.label,
      l = s.conditionType,
      c = Dut(i.matchers),
      d = c.map(function (p) {
        var m = nlt(t, p, n);
        return function (y, I, O) {
          var g = dlt(t, y, p, I),
            C = g !== void 0 && m ? m(g, O) : !1;
          return Qs(C)
            ? C.then(function (H) {
                return !!(H ^ p.negate);
              })
            : !!(C ^ p.negate);
        };
      });
    if (d.length === 0) {
      r = [];
      break;
    }
    r.push(flt(t, Slt(t, d), Gut.parse(o), u, l));
  }
  return mlt(t, r);
}
function aV(t, e) {
  return { treatment: KN(t, "treatment", e), label: KN(t, "label", Iut) };
}
var glt = (function () {
    function t(e, n) {
      (this.baseInfo = e),
        (this.evaluator = n),
        typeof this.baseInfo.defaultTreatment != "string" &&
          (this.baseInfo.defaultTreatment = Oo);
    }
    return (
      (t.parse = function (e, n, r) {
        var a = n.conditions,
          s = ylt(e, a, r);
        return new t(n, s);
      }),
      (t.prototype.getKey = function () {
        return this.baseInfo.name;
      }),
      (t.prototype.getTreatment = function (e, n, r) {
        var a = this.baseInfo,
          s = a.killed,
          i = a.seed,
          o = a.defaultTreatment,
          u = a.trafficAllocation,
          l = a.trafficAllocationSeed,
          c,
          d,
          p;
        try {
          c = cfe(e);
        } catch {
          return { treatment: Oo, label: LI };
        }
        if (this.isGarbage()) (d = Oo), (p = Cut);
        else if (s) (d = o), (p = Put);
        else {
          var m = this.evaluator(c, i, u, l, n, r);
          return Qs(m)
            ? m.then(function (y) {
                return aV(y, o);
              })
            : aV(m, o);
        }
        return { treatment: d, label: p };
      }),
      (t.prototype.isGarbage = function () {
        return this.baseInfo.status === "ARCHIVED";
      }),
      (t.prototype.getChangeNumber = function () {
        return this.baseInfo.changeNumber;
      }),
      t
    );
  })(),
  WN = { treatment: Oo, label: LI, config: null };
function iV(t) {
  var e = {};
  return (
    t.forEach(function (n) {
      e[n] = WN;
    }),
    e
  );
}
function xfe(t, e, n, r, a) {
  var s;
  try {
    s = a.splits.getSplit(n);
  } catch {
    return WN;
  }
  return Qs(s)
    ? s
        .then(function (i) {
          return qN(t, i, e, r, a);
        })
        .catch(function () {
          return WN;
        })
    : qN(t, s, e, r, a);
}
function Lfe(t, e, n, r, a) {
  var s;
  try {
    s = a.splits.getSplits(n);
  } catch {
    return iV(n);
  }
  return Qs(s)
    ? s
        .then(function (i) {
          return oV(t, n, i, e, r, a);
        })
        .catch(function () {
          return iV(n);
        })
    : oV(t, n, s, e, r, a);
}
function vlt(t, e, n, r, a, s) {
  var i;
  function o(u) {
    for (var l = new hi(), c = 0; c < n.length; c++) {
      var d = u[c];
      d.size ? (l = Bot(l, d)) : t.warn(lhe, [s, n[c]]);
    }
    return l.size ? Lfe(t, e, _p(l), r, a) : {};
  }
  try {
    i = a.splits.getNamesByFlagSets(n);
  } catch {
    return {};
  }
  return Qs(i)
    ? i
        .then(function (u) {
          return o(u);
        })
        .catch(function () {
          return {};
        })
    : o(i);
}
function qN(t, e, n, r, a) {
  var s = { treatment: Oo, label: Nfe, config: null };
  if (e) {
    var i = glt.parse(t, e, a);
    if (((s = i.getTreatment(n, r, xfe)), Qs(s)))
      return s.then(function (o) {
        return (
          (o.changeNumber = i.getChangeNumber()),
          (o.config =
            (e.configurations && e.configurations[o.treatment]) || null),
          o
        );
      });
    (s.changeNumber = i.getChangeNumber()),
      (s.config = (e.configurations && e.configurations[s.treatment]) || null);
  }
  return s;
}
function oV(t, e, n, r, a, s) {
  var i = {},
    o = [];
  return (
    e.forEach(function (u) {
      var l = qN(t, n[u], r, a, s);
      Qs(l)
        ? o.push(
            l.then(function (c) {
              i[u] = c;
            })
          )
        : (i[u] = l);
    }),
    o.length > 0
      ? Promise.all(o).then(function () {
          return i;
        })
      : i
  );
}
var YN = { treatment: Oo, label: Rfe };
function uV(t) {
  var e = {};
  return (
    t.forEach(function (n) {
      e[n] = YN;
    }),
    e
  );
}
function _lt(t) {
  var e = t.sdkReadinessManager.readinessManager,
    n = t.storage,
    r = t.settings,
    a = t.impressionsTracker,
    s = t.eventTracker,
    i = t.telemetryTracker,
    o = r.log,
    u = r.mode,
    l = p_(u);
  function c(B, he, de, U, R) {
    U === void 0 && (U = !1), R === void 0 && (R = xhe);
    var ge = i.trackEval(U ? lit : oit),
      ve = function (Te) {
        var Ce = [],
          Ee = C(Te, he, B, de, U, R, Ce);
        return a.track(Ce, de), ge(Ce[0] && Ce[0].label), Ee;
      },
      we =
        e.isReady() || e.isReadyFromCache()
          ? xfe(o, B, he, de, n)
          : l
          ? Promise.resolve(YN)
          : YN;
    return Qs(we)
      ? we.then(function (Te) {
          return ve(Te);
        })
      : ve(we);
  }
  function d(B, he, de) {
    return c(B, he, de, !0, Lhe);
  }
  function p(B, he, de, U, R) {
    U === void 0 && (U = !1), R === void 0 && (R = FN);
    var ge = i.trackEval(U ? cit : uit),
      ve = function (Te) {
        var Ce = [],
          Ee = {};
        return (
          Object.keys(Te).forEach(function (x) {
            Ee[x] = C(Te[x], x, B, de, U, R, Ce);
          }),
          a.track(Ce, de),
          ge(Ce[0] && Ce[0].label),
          Ee
        );
      },
      we =
        e.isReady() || e.isReadyFromCache()
          ? Lfe(o, B, he, de, n)
          : l
          ? Promise.resolve(uV(he))
          : uV(he);
    return Qs(we)
      ? we.then(function (Te) {
          return ve(Te);
        })
      : ve(we);
  }
  function m(B, he, de) {
    return p(B, he, de, !0, Mhe);
  }
  function y(B, he, de, U, R, ge) {
    U === void 0 && (U = !1),
      R === void 0 && (R = pit),
      ge === void 0 && (ge = Ghe);
    var ve = i.trackEval(R),
      we = function (Ce) {
        var Ee = [],
          x = {},
          F = Ce;
        return (
          Object.keys(F).forEach(function (Se) {
            x[Se] = C(F[Se], Se, B, de, U, ge, Ee);
          }),
          a.track(Ee, de),
          ve(Ee[0] && Ee[0].label),
          x
        );
      },
      Te =
        e.isReady() || e.isReadyFromCache()
          ? vlt(o, B, he, de, n, ge)
          : l
          ? Promise.resolve({})
          : {};
    return Qs(Te)
      ? Te.then(function (Ce) {
          return we(Ce);
        })
      : we(Te);
  }
  function I(B, he, de) {
    return y(B, he, de, !0, fit, Uhe);
  }
  function O(B, he, de) {
    return y(B, [he], de, !1, dit, Dhe);
  }
  function g(B, he, de) {
    return y(B, [he], de, !0, hit, Fhe);
  }
  function C(B, he, de, U, R, ge, ve) {
    var we = om(de),
      Te = kot(de),
      Ce = B.treatment,
      Ee = B.label,
      x = B.changeNumber,
      F = B.config,
      Se = F === void 0 ? null : F;
    return (
      o.info(Spe, [he, we, Ce, Ee]),
      zN(o, e, he, Ee, ge) &&
        (o.info(ype),
        ve.push({
          feature: he,
          keyName: we,
          treatment: Ce,
          time: Date.now(),
          bucketingKey: Te,
          label: Ee,
          changeNumber: x,
        })),
      R ? { treatment: Ce, config: Se } : Ce
    );
  }
  function H(B, he, de, U, R, ge) {
    ge === void 0 && (ge = 1024);
    var ve = i.trackEval(mit),
      we = om(B),
      Te = Date.now(),
      Ce = {
        eventTypeId: de,
        trafficTypeName: he,
        value: U,
        timestamp: Te,
        key: we,
        properties: R,
      };
    Out(o, e, n.splits, u, he, Nd);
    var Ee = s.track(Ce, ge);
    return Qs(Ee)
      ? Ee.then(function (x) {
          return ve(), x;
        })
      : (ve(), Ee);
  }
  return {
    getTreatment: c,
    getTreatmentWithConfig: d,
    getTreatments: p,
    getTreatmentsWithConfig: m,
    getTreatmentsByFlagSets: y,
    getTreatmentsWithConfigByFlagSets: I,
    getTreatmentsByFlagSet: O,
    getTreatmentsWithConfigByFlagSet: g,
    track: H,
    isClientSide: !1,
  };
}
function blt(t, e, n) {
  var r = t.log,
    a = t.mode,
    s = p_(a);
  function i(g, C, H, B, he) {
    var de = im(B, FN),
      U = lv(r, g, B),
      R = !1,
      ge = [];
    C && (R = de ? zG(r, C, B) : jG(r, C, B));
    var ve = Cfe(r, H, B),
      we = Zy(r, n, B);
    he &&
      (ge = Vit(
        r,
        B,
        he,
        t.sync.__splitFiltersValidation.groupedFilters.bySet
      )),
      eT(r, n, B, R);
    var Te = we && U && (R || ge.length > 0) && ve !== !1;
    return {
      valid: Te,
      key: U,
      splitOrSplits: R,
      flagSetOrFlagSets: ge,
      attributes: ve,
    };
  }
  function o(g) {
    return s ? Promise.resolve(g) : g;
  }
  function u(g, C, H) {
    var B = i(g, C, H, xhe);
    return B.valid
      ? e.getTreatment(B.key, B.splitOrSplits, B.attributes)
      : o(Oo);
  }
  function l(g, C, H) {
    var B = i(g, C, H, Lhe);
    return B.valid
      ? e.getTreatmentWithConfig(B.key, B.splitOrSplits, B.attributes)
      : o(Jn({}, kB));
  }
  function c(g, C, H) {
    var B = i(g, C, H, FN);
    if (B.valid) return e.getTreatments(B.key, B.splitOrSplits, B.attributes);
    var he = {};
    return (
      B.splitOrSplits &&
        B.splitOrSplits.forEach(function (de) {
          return (he[de] = Oo);
        }),
      o(he)
    );
  }
  function d(g, C, H) {
    var B = i(g, C, H, Mhe);
    if (B.valid)
      return e.getTreatmentsWithConfig(B.key, B.splitOrSplits, B.attributes);
    var he = {};
    return (
      B.splitOrSplits &&
        B.splitOrSplits.forEach(function (de) {
          return (he[de] = Jn({}, kB));
        }),
      o(he)
    );
  }
  function p(g, C, H) {
    var B = i(g, void 0, H, Ghe, C);
    return B.valid
      ? e.getTreatmentsByFlagSets(B.key, B.flagSetOrFlagSets, B.attributes)
      : o({});
  }
  function m(g, C, H) {
    var B = i(g, void 0, H, Uhe, C);
    return B.valid
      ? e.getTreatmentsWithConfigByFlagSets(
          B.key,
          B.flagSetOrFlagSets,
          B.attributes
        )
      : o({});
  }
  function y(g, C, H) {
    var B = i(g, void 0, H, Dhe, [C]);
    return B.valid
      ? e.getTreatmentsByFlagSet(B.key, B.flagSetOrFlagSets[0], B.attributes)
      : o({});
  }
  function I(g, C, H) {
    var B = i(g, void 0, H, Fhe, [C]);
    return B.valid
      ? e.getTreatmentsWithConfigByFlagSet(
          B.key,
          B.flagSetOrFlagSets[0],
          B.attributes
        )
      : o({});
  }
  function O(g, C, H, B, he) {
    var de = lv(r, g, Nd),
      U = NI(r, C, Nd),
      R = Afe(r, H, Nd),
      ge = Ofe(r, B, Nd),
      ve = Hfe(r, he, Nd),
      we = ve.properties,
      Te = ve.size,
      Ce = Zy(r, n, Nd);
    return Ce && de && U && R && ge !== !1 && we !== !1
      ? e.track(de, U, R, ge, we, Te)
      : s
      ? Promise.resolve(!1)
      : !1;
  }
  return {
    getTreatment: u,
    getTreatmentWithConfig: l,
    getTreatments: c,
    getTreatmentsWithConfig: d,
    getTreatmentsByFlagSets: p,
    getTreatmentsWithConfigByFlagSets: m,
    getTreatmentsByFlagSet: y,
    getTreatmentsWithConfigByFlagSet: I,
    track: O,
  };
}
var Elt = 1e3;
function lV(t, e) {
  var n = t.sdkReadinessManager,
    r = t.syncManager,
    a = t.storage,
    s = t.signalListener,
    i = t.settings,
    o = t.telemetryTracker,
    u = t.uniqueKeysTracker,
    l = 0;
  function c(p, m) {
    var y = Date.now(),
      I = y - l;
    return I < m
      ? (i.log.warn(
          "Flush cooldown, remaining time " + (m - I) / 1e3 + " seconds"
        ),
        Promise.resolve())
      : ((l = y), p());
  }
  function d() {
    return r ? r.flush() : Promise.resolve();
  }
  return Jn(Object.create(n.sdkStatus), blt(i, _lt(t), n.readinessManager), {
    flush: function () {
      return c(d, Elt);
    },
    destroy: function () {
      return (
        n.readinessManager.destroy(),
        e || (Yit(i.core.authorizationKey), o.sessionLength()),
        r && r.stop(),
        d().then(function () {
          return s && s.stop(), u && u.stop(), a.destroy();
        })
      );
    },
  });
}
function cV(t, e) {
  return (
    (t.matchingKey ? t.matchingKey : t) +
    "-" +
    (t.bucketingKey ? t.bucketingKey : t) +
    "-" +
    (e !== void 0 ? e : "")
  );
}
var dV = "Client instantiation";
function Tlt(t) {
  var e = t.storage,
    n = t.syncManager,
    r = t.sdkReadinessManager,
    a = t.settings,
    s = a.core,
    i = s.key,
    o = s.trafficType,
    u = a.startup.readyTimeout,
    l = a.log,
    c = eV(l, lV(t), i, o),
    d = cfe(i),
    p = cV(d, o),
    m = {};
  return (
    (m[p] = c),
    function (I, O) {
      if (I === void 0) return l.debug(tpe), c;
      var g = lv(l, I, "Shared " + dV);
      if (g === !1) throw new Error("Shared Client needs a valid key.");
      var C;
      if (O !== void 0 && ((C = NI(l, O, "Shared " + dV)), C === !1))
        throw new Error(
          "Shared Client needs a valid traffic type or no traffic type at all."
        );
      var H = cV(g, C);
      if (m[H]) l.debug(npe);
      else {
        var B = om(g),
          he = r.shared(u),
          de =
            e.shared &&
            e.shared(B, function (R) {
              if (R) {
                he.readinessManager.timeout();
                return;
              }
              he.readinessManager.segments.emit(_d);
            }),
          U = n && de && n.shared(B, he.readinessManager, de);
        (m[H] = eV(
          l,
          lV(
            Jn({}, t, {
              sdkReadinessManager: he,
              storage: de || e,
              syncManager: U,
              signalListener: void 0,
            }),
            !0
          ),
          g,
          C
        )),
          U && U.start(),
          l.info(gpe);
      }
      return m[H];
    }
  );
}
var wlt = (function () {
  function t(e) {
    var n = this;
    (this.__mapKeysData__ = []),
      (this.__mapValuesData__ = []),
      Array.isArray(e) &&
        e.forEach(function (r) {
          n.set(r[0], r[1]);
        });
  }
  return (
    (t.prototype.clear = function () {
      this.__mapKeysData__.length &&
        ((this.__mapKeysData__.length = 0),
        (this.__mapValuesData__.length = 0));
    }),
    (t.prototype.delete = function (e) {
      var n = this.__mapKeysData__.indexOf(e);
      return n === -1
        ? !1
        : (this.__mapKeysData__.splice(n, 1),
          this.__mapValuesData__.splice(n, 1),
          !0);
    }),
    (t.prototype.forEach = function (e, n) {
      for (var r = 0; r < this.__mapKeysData__.length; r++)
        e.call(n, this.__mapValuesData__[r], this.__mapKeysData__[r], this);
    }),
    (t.prototype.get = function (e) {
      var n = this.__mapKeysData__.indexOf(e);
      if (n !== -1) return this.__mapValuesData__[n];
    }),
    (t.prototype.has = function (e) {
      return this.__mapKeysData__.indexOf(e) !== -1;
    }),
    (t.prototype.set = function (e, n) {
      var r = this.__mapKeysData__.indexOf(e);
      return (
        r === -1 && (r = this.__mapKeysData__.push(e) - 1),
        (this.__mapValuesData__[r] = n),
        this
      );
    }),
    Object.defineProperty(t.prototype, "size", {
      get: function () {
        return this.__mapKeysData__.length;
      },
      enumerable: !1,
      configurable: !0,
    }),
    t
  );
})();
function Plt() {
  return typeof Array.from == "function" &&
    typeof Map == "function" &&
    Map.prototype &&
    Map.prototype.values
    ? Map
    : wlt;
}
var YG = Plt(),
  eg = (function () {
    function t(e, n, r, a) {
      (this.list = a),
        (this.value = e),
        n ? ((n.next = this), (this.prev = n)) : (this.prev = null),
        r ? ((r.prev = this), (this.next = r)) : (this.next = null);
    }
    return t;
  })(),
  Ilt = (function () {
    function t() {
      (this.tail = null), (this.head = null), (this.length = 0);
    }
    return (
      (t.prototype.removeNode = function (e) {
        if (!(!e || !(e instanceof eg))) {
          if (e.list !== this)
            throw new Error("removing node which does not belong to this list");
          var n = e.next,
            r = e.prev;
          return (
            n && (n.prev = r),
            r && (r.next = n),
            e === this.head && (this.head = n),
            e === this.tail && (this.tail = r),
            e.list.length--,
            (e.next = null),
            (e.prev = null),
            (e.list = null),
            n
          );
        }
      }),
      (t.prototype.unshiftNode = function (e) {
        if (!(!e || !(e instanceof eg)) && e !== this.head) {
          e.list && e.list.removeNode(e);
          var n = this.head;
          (e.list = this),
            (e.next = n),
            n && (n.prev = e),
            (this.head = e),
            this.tail || (this.tail = e),
            this.length++;
        }
      }),
      (t.prototype.unshift = function () {
        for (var e = 0, n = arguments.length; e < n; e++)
          (this.head = new eg(arguments[e], null, this.head, this)),
            this.tail || (this.tail = this.head),
            this.length++;
        return this.length;
      }),
      t
    );
  })(),
  Clt = (function () {
    function t(e) {
      (this.maxLen = e || 1), (this.items = new YG()), (this.lru = new Ilt());
    }
    return (
      (t.prototype.get = function (e) {
        var n = this.items.get(e);
        if (!(!n || !(n instanceof eg)))
          return this.lru.unshiftNode(n), n.value.value;
      }),
      (t.prototype.set = function (e, n) {
        var r = this.items.get(e);
        if (r) {
          if (!(r instanceof eg)) return !1;
          this.lru.unshiftNode(r), (this.lru.head.value.value = n);
        } else {
          if (this.lru.length === this.maxLen) {
            var a = this.lru.tail;
            if (!a) return !1;
            this.items.delete(a.value.key), this.lru.removeNode(this.lru.tail);
          }
          this.lru.unshift({ key: e, value: n }),
            this.items.set(e, this.lru.head);
        }
        return !0;
      }),
      t
    );
  })(),
  Alt = (function () {
    function t(e, n) {
      (this.cache = new Clt(e)), (this.hasher = n);
    }
    return (
      (t.prototype.testAndSet = function (e) {
        var n = this.hasher(e),
          r = this.cache.get(n);
        return this.cache.set(n, e.time), r;
      }),
      t
    );
  })();
function Olt(t) {
  return (
    t.keyName +
    ":" +
    t.feature +
    ":" +
    t.treatment +
    ":" +
    t.label +
    ":" +
    t.changeNumber
  );
}
function Hlt(t) {
  return kI(Olt(t));
}
var Nlt = 500;
function Rlt() {
  return new Alt(Nlt, Hlt);
}
function klt(t, e) {
  var n = [];
  if (
    (t.forEach(function (r) {
      var a = r(e);
      a && a.queue && n.push(a);
    }),
    n.length !== 0)
  )
    return {
      handleImpression: function (r) {
        n.forEach(function (a) {
          return a.queue({ type: MN, payload: r });
        });
      },
      handleEvent: function (r) {
        n.forEach(function (a) {
          return a.queue({ type: DN, payload: r });
        });
      },
    };
}
var oc = "ga-to-split: ",
  zS = "ga-to-split:mapper";
function xlt(t, e, n, r, a, s) {
  var i = t.GoogleAnalyticsObject || "ga";
  (t[i] =
    t[i] ||
    function () {
      (t[i].q = t[i].q || []).push(arguments);
    }),
    t[i]("provide", e, n);
  var o = t[i].q && t[i].q.push !== [].push;
  a &&
    !o &&
    r.error(
      oc +
        "integration is configured to autorequire the splitTracker plugin, but the necessary script does not seem to have run. Please check the docs."
    ),
    s && o && s.addTag("integration:ga-autorequire");
}
var Llt = {
  eventTypeId: { event: "eventAction", social: "socialAction" },
  eventValue: { event: "eventValue", timing: "timingValue" },
  eventProperties: {
    pageview: ["page"],
    screenview: ["screenName"],
    event: ["eventCategory", "eventLabel"],
    social: ["socialNetwork", "socialTarget"],
    timing: ["timingCategory", "timingVar", "timingLabel"],
    exception: ["exDescription", "exFatal"],
  },
};
function Mlt(t) {
  return function (e) {
    var n = e.get("hitType"),
      r = e.get(t.eventTypeId[n] || "hitType"),
      a = e.get(t.eventValue[n]),
      s = {},
      i = t.eventProperties[n];
    if (i)
      for (var o = 0; o < i.length; o++) {
        var u = e.get(i[o]);
        u !== void 0 && (s[i[o]] = u);
      }
    return { eventTypeId: r, value: a, properties: s, timestamp: Date.now() };
  };
}
var Dlt = Mlt(Llt),
  Glt = "ga";
function Flt(t) {
  if (!Array.isArray(t)) return [];
  var e = Rit(t);
  return e.filter(function (n) {
    if (!n) return !1;
    var r = n.key,
      a = n.trafficType;
    return !((!Is(r) && !Tl(r)) || !Is(a));
  });
}
function Ult(t, e) {
  if (!Afe(t, e.eventTypeId, zS) || Ofe(t, e.value, zS) === !1) return !1;
  var n = Hfe(t, e.properties, zS).properties;
  return !(
    n === !1 ||
    (e.timestamp && !Tl(e.timestamp)) ||
    (e.key && lv(t, e.key, zS) === !1) ||
    (e.trafficTypeName && NI(t, e.trafficTypeName, zS) === !1)
  );
}
var Klt = /^[^a-zA-Z0-9]+/,
  Blt = /[^-_.:a-zA-Z0-9]+/g;
function Vlt(t, e) {
  if (!Is(e) || e.length === 0) return e;
  var n = e.replace(Klt, "").replace(Blt, "_"),
    r = n.slice(0, 80);
  return (
    r.length < n.length &&
      t.warn(
        oc +
          "EventTypeId was truncated because it cannot be more than 80 characters long."
      ),
    r
  );
}
function jlt(t, e) {
  var n = e.storage,
    r = e.settings,
    a = r.core,
    s = r.log,
    i = e.telemetryTracker,
    o = {
      prefix: Glt,
      identities:
        a.key && a.trafficType
          ? [{ key: a.key, trafficType: a.trafficType }]
          : void 0,
    },
    u = (function () {
      function l(c, d) {
        var p = Jn({}, o, t, d);
        this.tracker = c;
        var m = Flt(p.identities);
        if (m.length === 0) {
          s.warn(
            oc +
              "No valid identities were provided. Please check that you are passing a valid list of identities or providing a traffic type at the SDK configuration."
          );
          return;
        }
        var y = m.length - p.identities.length;
        y &&
          s.warn(
            oc +
              (y +
                " identities were discarded because they are invalid or duplicated. Identities must be an array of objects with key and trafficType.")
          ),
          (p.identities = m),
          Is(p.prefix) ||
            (s.warn(
              oc +
                "The provided `prefix` was ignored since it is invalid. Please check that you are passing a string object as `prefix`."
            ),
            (p.prefix = void 0));
        var I = c.get("sendHitTask");
        c.set("sendHitTask", function (O) {
          if ((I(O), !(p.hits === !1 || O.get("splitHit")))) {
            try {
              if (p.filter && !p.filter(O)) return;
            } catch (C) {
              s.warn(oc + ("custom filter threw: " + C));
              return;
            }
            var g = Dlt(O);
            if (p.mapper) {
              try {
                g = p.mapper(O, g);
              } catch (C) {
                s.warn(oc + ("custom mapper threw: " + C));
                return;
              }
              if (!g) return;
            }
            p.prefix && (g.eventTypeId = p.prefix + "." + g.eventTypeId),
              (g.eventTypeId = Vlt(s, g.eventTypeId)),
              Ult(s, g) &&
                (g.key && g.trafficTypeName
                  ? n.events.track(g)
                  : p.identities.forEach(function (C) {
                      var H = Jn(
                        { key: C.key, trafficTypeName: C.trafficType },
                        g
                      );
                      n.events.track(H);
                    }));
          }
        }),
          s.info(oc + "integration started");
      }
      return l;
    })();
  xlt(window, "splitTracker", u, s, t.autoRequire === !0, i);
}
function zlt(t) {
  t === void 0 && (t = {});
  function e(n) {
    return jlt(t, n);
  }
  return (e.type = "GOOGLE_ANALYTICS_TO_SPLIT"), e;
}
var $S = "split-to-ga: ",
  pV = "`ga` command queue not found.",
  hV = "No hit was sent.",
  $lt = (function () {
    function t(e, n) {
      (this.trackerNames = t.defaultTrackerNames),
        (this.log = e),
        n &&
          (typeof n.filter == "function" && (this.filter = n.filter),
          typeof n.mapper == "function" && (this.mapper = n.mapper),
          Array.isArray(n.trackerNames) &&
            (this.trackerNames = OI(n.trackerNames)),
          (this.impressions = n.impressions),
          (this.events = n.events)),
        e.info($S + "integration started"),
        typeof t.getGa() != "function" &&
          e.warn($S + (pV + " No hits will be sent until it is available."));
    }
    return (
      (t.defaultMapper = function (e) {
        var n = e.type,
          r = e.payload;
        switch (n) {
          case MN:
            return {
              hitType: "event",
              eventCategory: "split-impression",
              eventAction: "Evaluate " + r.impression.feature,
              eventLabel:
                "Treatment: " +
                r.impression.treatment +
                ". Targeting rule: " +
                r.impression.label +
                ".",
              nonInteraction: !0,
            };
          case DN:
            return {
              hitType: "event",
              eventCategory: "split-event",
              eventAction: r.eventTypeId,
              eventValue: r.value,
              nonInteraction: !0,
            };
        }
      }),
      (t.getGa = function () {
        return typeof window < "u"
          ? window[window.GoogleAnalyticsObject || "ga"]
          : void 0;
      }),
      (t.validateFieldsObject = function (e, n) {
        return n && n.hitType
          ? !0
          : (e.warn(
              $S +
                "your custom mapper returned an invalid FieldsObject instance. It must be an object with at least a `hitType` field."
            ),
            !1);
      }),
      (t.prototype.queue = function (e) {
        var n = t.getGa();
        if (n) {
          if (
            (this.impressions === !1 && e.type === MN) ||
            (this.events === !1 && e.type === DN)
          )
            return;
          var r;
          try {
            if (
              (this.filter && !this.filter(e)) ||
              ((r = t.defaultMapper(e)),
              this.mapper &&
                ((r = this.mapper(e, r)),
                !r || !t.validateFieldsObject(this.log, r)))
            )
              return;
          } catch (a) {
            this.log.warn($S + ("queue method threw: " + a + ". " + hV));
            return;
          }
          this.trackerNames.forEach(function (a) {
            var s = a ? a + ".send" : "send";
            (r.splitHit = !0), n(s, r);
          });
        } else this.log.warn($S + (pV + " " + hV));
      }),
      (t.defaultTrackerNames = [""]),
      t
    );
  })();
function Wlt(t) {
  t === void 0 && (t = {});
  function e(n) {
    return new $lt(n.settings.log, t);
  }
  return (e.type = "SPLIT_TO_GOOGLE_ANALYTICS"), e;
}
function qlt(t, e) {
  var n = t
    .map(function (r) {
      switch (r.type) {
        case Efe:
          return zlt(r);
        case Tfe:
          return Wlt(r);
      }
    })
    .filter(function (r) {
      return r && typeof r == "function";
    });
  return klt(n, e);
}
function Mfe(t) {
  var e = xI(t);
  return (
    (e.splits.checkCache = function () {
      return !0;
    }),
    e
  );
}
Mfe.type = qy;
function fV(t, e) {
  var n = !1,
    r = !1;
  function a(i) {
    var o = new Promise(function (l, c) {
        return i.then(l, function (d) {
          r ? c(d) : e(d);
        });
      }),
      u = o.then;
    return (
      Object.defineProperty(o, "then", {
        value: function (l, c) {
          var d = u.call(o, l, c);
          return (
            typeof l == "function" && (n = !0),
            typeof c == "function" ? ((r = !0), d) : a(d)
          );
        },
      }),
      o
    );
  }
  var s = a(t);
  return (
    (s.hasOnFulfilled = function () {
      return n;
    }),
    s
  );
}
function Ylt(t) {
  var e = Jn(new t(), { splitsArrived: !1, splitsCacheLoaded: !1 });
  return (
    e.on(sd, function (n) {
      n || (e.splitsArrived = !0);
    }),
    e.once(HI, function () {
      e.splitsCacheLoaded = !0;
    }),
    e
  );
}
function Xlt(t) {
  var e = Jn(new t(), { segmentsArrived: !1 });
  return (
    e.once(_d, function () {
      e.segmentsArrived = !0;
    }),
    e
  );
}
function Dfe(t, e, n) {
  e === void 0 && (e = 0), n === void 0 && (n = Ylt(t));
  var r = Xlt(t),
    a = new t(),
    s = !1;
  n.splitsCacheLoaded ? (s = !0) : n.once(HI, d);
  var i = !1;
  function o() {
    i || ((i = !0), a.emit(JE, "Split SDK emitted SDK_READY_TIMED_OUT event."));
  }
  var u;
  e > 0 && (u = setTimeout(o, e));
  var l = !1;
  n.on(sd, p), r.on(_d, p);
  var c = !1;
  function d() {
    if (((s = !0), !l))
      try {
        a.emit(o0);
      } catch (y) {
        setTimeout(function () {
          throw y;
        }, 0);
      }
  }
  function p(y) {
    if (l)
      try {
        a.emit(Qhe, y);
      } catch (I) {
        setTimeout(function () {
          throw I;
        }, 0);
      }
    else if (n.splitsArrived && r.segmentsArrived) {
      clearTimeout(u), (l = !0);
      try {
        a.emit(ic);
      } catch (I) {
        setTimeout(function () {
          throw I;
        }, 0);
      }
    }
  }
  var m = 1;
  return {
    splits: n,
    segments: r,
    gate: a,
    shared: function (y) {
      return y === void 0 && (y = 0), m++, Dfe(t, y, n);
    },
    timeout: o,
    setDestroyed: function () {
      c = !0;
    },
    destroy: function () {
      (c = !0),
        r.removeAllListeners(),
        a.removeAllListeners(),
        clearTimeout(u),
        m > 0 && m--,
        m === 0 && n.removeAllListeners();
    },
    isReady: function () {
      return l;
    },
    hasTimedout: function () {
      return i;
    },
    isReadyFromCache: function () {
      return s;
    },
    isDestroyed: function () {
      return c;
    },
    isOperational: function () {
      return (l || s) && !c;
    },
  };
}
var Qlt = "newListener",
  Jlt = "removeListener";
function Gfe(t, e, n, r) {
  n === void 0 && (n = 0), r === void 0 && (r = Dfe(e, n));
  var a = 0,
    s = 0;
  r.gate.on(Jlt, function (l) {
    l === ic && s--;
  }),
    r.gate.on(Qlt, function (l) {
      (l === ic || l === JE) &&
        (r.isReady()
          ? t.error(phe, [l === ic ? "SDK_READY" : "SDK_READY_TIMED_OUT"])
          : l === ic && s++);
    });
  var i = u();
  r.gate.once(o0, function () {
    t.info(fpe);
  });
  function o(l) {
    t.error(l && l.message);
  }
  function u() {
    var l = fV(
      new Promise(function (c, d) {
        r.gate.once(ic, function () {
          t.info(mpe), s === a && !l.hasOnFulfilled() && t.warn(Upe), c();
        }),
          r.gate.once(JE, function (p) {
            d(new Error(p));
          });
      }),
      o
    );
    return l;
  }
  return {
    readinessManager: r,
    shared: function (l) {
      return l === void 0 && (l = 0), Gfe(t, e, l, r.shared(l));
    },
    incInternalReadyCbCount: function () {
      a++;
    },
    sdkStatus: Jn(Object.create(r.gate), {
      Event: {
        SDK_READY: ic,
        SDK_READY_FROM_CACHE: o0,
        SDK_UPDATE: Qhe,
        SDK_READY_TIMED_OUT: JE,
      },
      ready: function () {
        return r.hasTimedout()
          ? r.isReady()
            ? Promise.resolve()
            : fV(
                Promise.reject(
                  new Error("Split SDK has emitted SDK_READY_TIMED_OUT event.")
                ),
                o
              )
          : i;
      },
      __getStatus: function () {
        return {
          isReady: r.isReady(),
          isReadyFromCache: r.isReadyFromCache(),
          isOperational: r.isOperational(),
          hasTimedout: r.hasTimedout(),
          isDestroyed: r.isDestroyed(),
        };
      },
    }),
  };
}
function Zlt(t, e, n, r, a) {
  var s = t.log,
    i = t.impressionListener,
    o = t.runtime,
    u = o.ip,
    l = o.hostname,
    c = t.version;
  return {
    track: function (d, p) {
      if (t.userConsent !== Zm) {
        var m = d.length,
          y = n.process(d),
          I = y.impressionsToStore,
          O = y.impressionsToListener,
          g = y.deduped,
          C = O.length;
        if (I.length > 0) {
          var H = e.track(I);
          Qs(H)
            ? H.then(function () {
                s.info(xpe, [m]);
              }).catch(function (de) {
                s.error(yhe, [m, de]);
              })
            : a &&
              (a.recordImpressionStats(i0, I.length),
              a.recordImpressionStats(Khe, g));
        }
        if (i || r)
          for (
            var B = function (de) {
                var U = {
                  impression: Jn({}, O[de]),
                  attributes: p,
                  ip: u,
                  hostname: l,
                  sdkLanguageVersion: c,
                };
                setTimeout(function () {
                  r && r.handleImpression(U);
                  try {
                    i && i.logImpression(U);
                  } catch (R) {
                    s.error(ghe, [R]);
                  }
                }, 0);
              },
              he = 0;
            he < C;
            he++
          )
            B(he);
      }
    },
  };
}
function ect(t, e, n, r) {
  var a = t.log,
    s = t.mode,
    i = p_(s);
  function o(u, l) {
    var c = u.eventTypeId,
      d = u.trafficTypeName,
      p = u.key,
      m = u.value,
      y = u.timestamp,
      I = u.properties,
      O =
        'event of type "' +
        c +
        '" for traffic type "' +
        d +
        '". Key: ' +
        p +
        ". Value: " +
        m +
        ". Timestamp: " +
        y +
        ". " +
        (I ? "With properties." : "With no properties.");
    return (
      l
        ? (a.info(kpe, [O]),
          n &&
            setTimeout(function () {
              var g = Jn({}, u);
              I && (g.properties = Jn({}, I)), n.handleEvent(g);
            }, 0))
        : a.error(vhe, [O]),
      l
    );
  }
  return {
    track: function (u, l) {
      if (t.userConsent === Zm) return i ? Promise.resolve(!1) : !1;
      var c = e.track(u, l);
      return Qs(c)
        ? c.then(o.bind(null, u))
        : (r && r.recordEventStats(c ? i0 : UN, 1), o(u, c));
    },
  };
}
function tct(t, e) {
  if (t && e) {
    var n = ZE(e);
    return {
      trackEval: function (a) {
        var s = ZE(e);
        return function (i) {
          switch (i) {
            case LI:
              t.recordException(a);
              return;
            case Rfe:
              t.recordNonReadyUsage && t.recordNonReadyUsage();
          }
          t.recordLatency(a, s());
        };
      },
      trackHttp: function (a) {
        var s = ZE(e);
        return function (i) {
          t.recordHttpLatency(a, s()),
            i && i.statusCode
              ? t.recordHttpError(a, i.statusCode)
              : t.recordSuccessfulSync(a, Date.now());
        };
      },
      sessionLength: function () {
        t.recordSessionLength && t.recordSessionLength(n());
      },
      streamingEvent: function (a, s) {
        a === zhe
          ? t.recordAuthRejections()
          : (t.recordStreamingEvents({ e: a, d: s, t: Date.now() }),
            a === jhe && t.recordTokenRefreshes());
      },
      addTag: function (a) {
        t.addTag && t.addTag(a);
      },
      trackUpdatesFromSSE: function (a) {
        t.recordUpdatesFromSSE(a);
      },
    };
  } else {
    var r = function () {
      return function () {};
    };
    return {
      trackEval: r,
      trackHttp: r,
      sessionLength: function () {},
      streamingEvent: function () {},
      addTag: function () {},
      trackUpdatesFromSSE: function () {},
    };
  }
}
var Qr = {
    DEBUG: "DEBUG",
    INFO: "INFO",
    WARN: "WARN",
    ERROR: "ERROR",
    NONE: "NONE",
  },
  lh = { DEBUG: 1, INFO: 2, WARN: 3, ERROR: 4, NONE: 5 };
function XG(t) {
  return !!BG(Qr, function (e) {
    return t === e;
  });
}
function mV(t, e) {
  t === void 0 && (t = ""), e === void 0 && (e = []);
  var n = 0;
  return t.replace(/%s/g, function () {
    return e[n++];
  });
}
var nct = { prefix: "splitio", logLevel: Qr.NONE, showLevel: !0 },
  sct = (function () {
    function t(e, n) {
      (this.options = Jn({}, nct, e)),
        (this.codes = n || new YG()),
        (this.logLevel = lh[this.options.logLevel]);
    }
    return (
      (t.prototype.setLogLevel = function (e) {
        (this.options.logLevel = e), (this.logLevel = lh[e]);
      }),
      (t.prototype.debug = function (e, n) {
        this._shouldLog(lh.DEBUG) && this._log(Qr.DEBUG, e, n);
      }),
      (t.prototype.info = function (e, n) {
        this._shouldLog(lh.INFO) && this._log(Qr.INFO, e, n);
      }),
      (t.prototype.warn = function (e, n) {
        this._shouldLog(lh.WARN) && this._log(Qr.WARN, e, n);
      }),
      (t.prototype.error = function (e, n) {
        this._shouldLog(lh.ERROR) && this._log(Qr.ERROR, e, n);
      }),
      (t.prototype._log = function (e, n, r) {
        if (typeof n == "number") {
          var a = this.codes.get(n);
          n = a
            ? mV(a, r)
            : "Message code " + n + (r ? ", with args: " + r.toString() : "");
        } else r && (n = mV(n, r));
        var s = this._generateLogMessage(e, n);
        console.log(s);
      }),
      (t.prototype._generateLogMessage = function (e, n) {
        var r = " => ",
          a = "";
        return (
          this.options.showLevel &&
            (a +=
              "[" +
              e +
              "]" +
              (e === Qr.INFO || e === Qr.WARN ? " " : "") +
              " "),
          this.options.prefix && (a += this.options.prefix + r),
          (a += n)
        );
      }),
      (t.prototype._shouldLog = function (e) {
        return e >= this.logLevel;
      }),
      t
    );
  })();
function rct(t) {
  function e(n) {
    XG(n) ? t.setLogLevel(n) : t.error(dhe);
  }
  return {
    enable: function () {
      e(Qr.DEBUG);
    },
    setLogLevel: e,
    disable: function () {
      e(Qr.NONE);
    },
    LogLevel: Qr,
  };
}
function act(t) {
  return {
    process: function (e) {
      return (
        e.forEach(function (n) {
          n.pt = t.testAndSet(n);
        }),
        { impressionsToStore: e, impressionsToListener: e, deduped: 0 }
      );
    },
  };
}
function ict(t, e) {
  return {
    process: function (n) {
      var r = [];
      return (
        n.forEach(function (a) {
          a.pt = t.testAndSet(a);
          var s = Date.now();
          a.pt && e.track(a.feature, s, 1),
            (!a.pt || a.pt < Sfe(s)) && r.push(a);
        }),
        {
          impressionsToStore: r,
          impressionsToListener: n,
          deduped: n.length - r.length,
        }
      );
    },
  };
}
function oct(t, e) {
  return {
    process: function (n) {
      return (
        n.forEach(function (r) {
          var a = Date.now();
          t.track(r.feature, a, 1), e.track(r.keyName, r.feature);
        }),
        { impressionsToStore: [], impressionsToListener: n, deduped: 0 }
      );
    },
  };
}
var uct = {
  add: function () {
    return !0;
  },
  contains: function () {
    return !0;
  },
  clear: function () {},
};
function lct(t, e, n) {
  n === void 0 && (n = uct);
  var r;
  return (
    n.refreshRate && (r = setInterval(n.clear, n.refreshRate)),
    {
      track: function (a, s) {
        if (!n.add(a, s)) {
          t.debug(
            Wat + "The feature " + s + " and key " + a + " exist in the filter"
          );
          return;
        }
        e.track(a, s);
      },
      stop: function () {
        clearInterval(r);
      },
    }
  );
}
function cct(t) {
  var e = t.settings,
    n = t.platform,
    r = t.storageFactory,
    a = t.splitApiFactory,
    s = t.extraProps,
    i = t.syncManagerFactory,
    o = t.SignalListener,
    u = t.impressionsObserverFactory,
    l = t.integrationsManagerFactory,
    c = t.sdkManagerFactory,
    d = t.sdkClientMethodFactory,
    p = t.filterAdapterFactory,
    m = e.log,
    y = e.sync.impressionsMode;
  qit(m, e.core.authorizationKey);
  var I = Gfe(m, n.EventEmitter, e.startup.readyTimeout),
    O = I.readinessManager,
    g = r({
      settings: e,
      onReadyCb: function (x) {
        if (x) {
          O.timeout();
          return;
        }
        O.splits.emit(sd), O.segments.emit(_d);
      },
    }),
    C = tct(g.telemetry, n.now),
    H = l && l({ settings: e, storage: g, telemetryTracker: C }),
    B = u(),
    he = y === td ? lct(m, g.uniqueKeys, p && p()) : void 0,
    de;
  switch (y) {
    case nl:
      de = ict(B, g.impressionCounts);
      break;
    case td:
      de = oct(g.impressionCounts, he);
      break;
    default:
      de = act(B);
  }
  var U = Zlt(e, g.impressions, de, H, g.telemetry),
    R = ect(e, g.events, H, g.telemetry),
    ge = a && a(e, n, C),
    ve = {
      splitApi: ge,
      eventTracker: R,
      impressionsTracker: U,
      telemetryTracker: C,
      uniqueKeysTracker: he,
      sdkReadinessManager: I,
      readiness: O,
      settings: e,
      storage: g,
      platform: n,
    },
    we = i && i(ve);
  ve.syncManager = we;
  var Te = o && new o(we, e, g, ge);
  ve.signalListener = Te;
  var Ce = d(ve),
    Ee = c(e, g.splits, I);
  return (
    we && we.start(),
    Te && Te.start(),
    m.info(vpe),
    Jn(
      {
        client: Ce,
        manager: function () {
          return m.debug(spe), Ee;
        },
        Logger: rct(m),
        settings: e,
      },
      s && s(ve)
    )
  );
}
var dct = { GRANTED: nd, DECLINED: Zm, UNKNOWN: KG };
function pct(t) {
  var e = t.settings,
    n = t.settings.log,
    r = t.syncManager,
    a = t.storage,
    s = a.events,
    i = a.impressions,
    o = a.impressionCounts;
  return (
    u0(e) || n.info(Dpe, [e.userConsent]),
    {
      setStatus: function (u) {
        var l, c;
        if (!VG(u)) return n.warn(Ahe, ["UserConsent.setStatus"]), !1;
        var d = u ? nd : Zm;
        return (
          e.userConsent !== d
            ? (n.info(Lpe, [e.userConsent, d]),
              (e.userConsent = d),
              u
                ? (l = r == null ? void 0 : r.submitterManager) === null ||
                  l === void 0 ||
                  l.start()
                : ((c = r == null ? void 0 : r.submitterManager) === null ||
                    c === void 0 ||
                    c.stop(!0),
                  s.clear && s.clear(),
                  i.clear && i.clear(),
                  o && o.clear && o.clear()))
            : n.info(Mpe, [d]),
          !0
        );
      },
      getStatus: function () {
        return e.userConsent;
      },
      Status: dct,
    }
  );
}
function hct() {
  return { ip: !1, hostname: !1 };
}
var fct = !!(
    typeof process < "u" &&
    typeof process.version < "u" &&
    process.version
  ),
  mct = [
    [che, XE + "Invalid feature flag, no valid rules found"],
    [
      dhe,
      "logger: Invalid Log Level - No changes to the logs will be applied.",
    ],
    [hhe, "The SDK will not get ready. Reason: %s"],
    [
      yhe,
      Wy + "Could not store impressions bulk with %s impression(s). Error: %s",
    ],
    [ghe, Wy + "Impression listener logImpression method threw: %s."],
    [vhe, khe + "Failed to queue %s"],
    [
      fhe,
      Rhe +
        "There was an issue loading the mock feature flags data. No changes will be applied to the current cache. %s",
    ],
    [
      mhe,
      oi +
        "Failed to connect or error on streaming connection, with error message: %s",
    ],
    [She, oi + "Failed to authenticate for streaming. Error: %s."],
    [Che, "Response status is not OK. Status: %s. URL: %s. Message: %s"],
    [
      phe,
      "A listener was added for %s on the SDK, which has already fired and won't be emitted again. The callback won't be executed.",
    ],
    [The, "%s: Client has already been destroyed - no calls possible."],
    [
      _he,
      '%s: you passed "%s", event_type must adhere to the regular expression /^[a-zA-Z0-9][-_.:a-zA-Z0-9]{0,79}$/g. This means an event_type must be alphanumeric, cannot be more than 80 characters long, and can only include a dash, underscore, period, or colon as separators of alphanumeric characters.',
    ],
    [MG, "%s: %s must be a plain object."],
    [
      bhe,
      "%s: the maximum size allowed for the properties is 32768 bytes, which was exceeded. Event not queued.",
    ],
    [Ehe, "%s: value must be a finite number."],
    [
      Xm,
      "%s: you passed a null or undefined %s. It must be a non-empty string.",
    ],
    [whe, "%s: %s too long. It must have 250 characters or less."],
    [
      Phe,
      "%s: Key must be an object with bucketingKey and matchingKey with valid string properties.",
    ],
    [Qm, "%s: you passed an invalid %s. It must be a non-empty string."],
    [Jm, "%s: you passed an empty %s. It must be a non-empty string."],
    [Ihe, "%s: %s must be a non-empty array."],
    [Ahe, "%s: provided param must be a boolean value."],
    [
      DG,
      Da +
        ': you passed an invalid "%s" config param. It should be one of the following values: %s. Defaulting to "%s".',
    ],
    [
      jat,
      Da +
        ': an invalid value was received for "sync.localhostMode" config. A valid entity should be provided for localhost mode.',
    ],
    [
      zat,
      Da +
        ": the provided storage is invalid.%s Falling back into default MEMORY storage",
    ],
    [
      Ohe,
      Da +
        ': the provided "%s" config param is lower than allowed. Setting to the minimum value %s seconds',
    ],
    [
      Hhe,
      Da +
        ": the amount of flag sets provided are big causing uri length error.",
    ],
    [
      Nhe,
      Da +
        ": the Set filter is exclusive and cannot be used simultaneously with names or prefix filters. Ignoring names and prefixes.",
    ],
  ],
  Sct = mct.concat([
    [Gpe, LN + "Value %s doesn't match with expected type."],
    [Fpe, LN + "Defined attribute [%s], no attributes received."],
    [Bpe, $at + "Retrying download of segments #%s. Reason: %s"],
    [Vpe, Wh + "Error while doing fetch of feature flags. %s"],
    [jpe, oi + "Error parsing SSE error notification: %s"],
    [zpe, oi + "Error parsing SSE message notification: %s"],
    [$pe, oi + "Falling back to polling mode. Reason: %s"],
    [kN, a0 + "Dropping %s after retry. Reason: %s."],
    [
      Wpe,
      a0 +
        "Failed to push %s, keeping data to retry on next iteration. Reason: %s.",
    ],
    [
      Kpe,
      "%s: the SDK is not ready, results may be incorrect%s. Make sure to wait for SDK readiness before using this method.",
    ],
    [
      Upe,
      "No listeners for SDK Readiness detected. Incorrect control treatments could have been logged if you called getTreatment/s while the SDK was not yet ready.",
    ],
    [qpe, '%s: Property "%s" is of invalid type. Setting value to null.'],
    [
      Ype,
      "%s: Event has more than 300 properties. Some of them will be trimmed when processed.",
    ],
    [Xpe, '%s: %s "%s" is not of type string, converting.'],
    [Qpe, '%s: %s "%s" has extra whitespace, trimming.'],
    [
      Jpe,
      '%s: feature flag "%s" does not exist in this environment. Please double check what feature flags exist in the Split user interface.',
    ],
    [
      Zpe,
      "%s: traffic_type_name should be all lowercase - converting string to lowercase.",
    ],
    [
      ehe,
      `%s: traffic type "%s" does not have any corresponding feature flag in this environment, make sure you're tracking your events to a valid traffic type defined in the Split user interface.`,
    ],
    [
      uhe,
      "%s: you passed %s which is not part of the configured FlagSetsFilter, ignoring Flag Set.",
    ],
    [the, Da + ": %s integration item(s) at settings is invalid. %s"],
    [
      nhe,
      Da +
        ": feature flag filters are not applicable for Consumer modes where the SDK does not keep rollout data in sync. Filters were discarded",
    ],
    [
      she,
      Da +
        ': feature flag filter at position %s is invalid. It must be an object with a valid filter type ("bySet", "byName" or "byPrefix") and a list of "values".',
    ],
    [
      rhe,
      Da +
        ": feature flag filter configuration must be a non-empty array of filter objects.",
    ],
    [
      xN,
      Da +
        ": You already have %s. We recommend keeping only one instance of the factory at all times (Singleton pattern) and reusing it throughout your application",
    ],
    [
      YE,
      oi + "Fetching MySegments due to an error processing %s notification: %s",
    ],
    [
      ahe,
      oi +
        "Fetching SplitChanges due to an error processing SPLIT_UPDATE notification: %s",
    ],
    [
      ihe,
      "%s: you passed %s, flag set must adhere to the regular expressions %s. This means a flag set must start with a letter or number, be in lowercase, alphanumeric and have a max length of 50 characters. %s was discarded.",
    ],
    [
      ohe,
      "%s: flag set %s should be all lowercase - converting string to lowercase.",
    ],
    [
      lhe,
      "%s: you passed %s flag set that does not contain cached feature flag names. Please double check what flag sets are in use in the Split user interface.",
    ],
  ]),
  SV = "Split SDK client is ready",
  yct = Sct.concat([
    [fpe, SV + " from cache"],
    [mpe, SV],
    [Spe, Wy + "Feature flag: %s. Key: %s. Evaluation: %s. Label: %s"],
    [ype, Wy + "Queueing corresponding impression."],
    [gpe, "New shared client instance created."],
    [vpe, "New Split SDK instance created."],
    [kpe, khe + "Successfully queued %s"],
    [xpe, Wy + "Successfully stored %s impression(s)."],
    [Lpe, "UserConsent: consent status changed from %s to %s."],
    [
      Mpe,
      "UserConsent: call had no effect because it was the current consent status (%s).",
    ],
    [Dpe, "Starting the SDK with %s user consent. No data will be sent."],
    [_pe, p1 + "Turning segments data polling %s."],
    [bpe, p1 + "Starting polling"],
    [Epe, p1 + "Stopping polling"],
    [Tpe, Wh + "Retrying download of feature flags #%s. Reason: %s"],
    [CI, a0 + "Flushing full %s queue and reseting timer."],
    [Ope, a0 + "Pushing %s."],
    [
      wpe,
      oi +
        "Refreshing streaming token in %s seconds, and connecting streaming in %s seconds.",
    ],
    [Ppe, oi + "Attempting to reconnect streaming in %s seconds."],
    [Ipe, oi + "Connecting streaming."],
    [
      Cpe,
      oi +
        "Streaming is disabled for given SDK key. Switching to polling mode.",
    ],
    [Ape, oi + "Disconnecting streaming."],
    [Hpe, d1 + "Streaming not available. Starting polling."],
    [Npe, d1 + "Streaming couldn't connect. Continue polling."],
    [Rpe, d1 + "Streaming connected. Syncing and stopping polling."],
  ]),
  gct = yct.concat([
    [Ode, XE + "[andCombiner] evaluates to %s"],
    [Hde, XE + "Treatment found: %s"],
    [Nde, XE + "All predicates evaluated, no treatment found."],
    [
      Rde,
      uv +
        ': using algo "murmur" bucket %s for key %s using seed %s - treatment %s',
    ],
    [kde, fr + "[allMatcher] is always true"],
    [xde, fr + "[betweenMatcher] is %s between %s and %s? %s"],
    [Lde, fr + "[booleanMatcher] %s === %s"],
    [Mde, fr + "[containsAllMatcher] %s contains all elements of %s? %s"],
    [
      Dde,
      fr + "[containsAnyMatcher] %s contains at least an element of %s? %s",
    ],
    [Gde, fr + "[containsStringMatcher] %s contains %s? %s"],
    [
      Fde,
      fr +
        '[dependencyMatcher] parent feature flag "%s" evaluated to "%s" with label "%s". %s evaluated treatment is part of [%s] ? %s.',
    ],
    [
      Ude,
      fr +
        '[dependencyMatcher] will evaluate parent feature flag: "%s" with key: %s %s',
    ],
    [Kde, fr + "[equalToMatcher] is %s equal to %s? %s"],
    [Bde, fr + "[equalToSetMatcher] is %s equal to set %s? %s"],
    [Vde, fr + "[endsWithMatcher] %s ends with %s? %s"],
    [jde, fr + "[greaterThanEqualMatcher] is %s greater than %s? %s"],
    [zde, fr + "[lessThanEqualMatcher] is %s less than %s? %s"],
    [$de, fr + "[partOfMatcher] %s is part of %s? %s"],
    [RN, fr + "[segmentMatcher] evaluated %s / %s => %s"],
    [Wde, fr + "[stringMatcher] does %s matches with %s? %s"],
    [qde, fr + "[stringMatcher] %s is an invalid regex"],
    [Yde, fr + "[startsWithMatcher] %s starts with %s? %s"],
    [Xde, fr + "[whitelistMatcher] evaluated %s in [%s] => %s"],
    [Qde, LN + "Extracted attribute [%s], [%s] will be used for matching."],
    [
      Jde,
      uv +
        ":sanitize: Attempted to sanitize [%s] which should be of type [%s]. Sanitized and processed value => [%s]",
    ],
    [Zde, NB + "Registering cleanup handler %s"],
    [epe, NB + "Deregistering cleanup handler %s"],
    [tpe, "Retrieving default SDK client."],
    [npe, "Retrieving existing SDK client."],
    [spe, "Retrieving manager instance."],
    [
      rpe,
      Rhe +
        `Feature flags data: 
%s`,
    ],
    [ape, Wh + "Spin up feature flags update using since = %s"],
    [ipe, Wh + "New feature flags %s"],
    [ope, Wh + "Removed feature flags %s"],
    [upe, Wh + "Segment names collected %s"],
    [lpe, oi + "New SSE message received, with data: %s."],
    [cpe, fu + ": Starting %s. Running each %s millis"],
    [dpe, fu + ": Running %s"],
    [ppe, fu + ": Stopping %s"],
    [hpe, Da + ': feature flags filtering criteria is "%s".'],
  ]);
function vct(t) {
  return typeof t == "boolean"
    ? t
      ? Qr.DEBUG
      : Qr.NONE
    : typeof t == "string" && XG(t)
    ? t
    : void 0;
}
var _ct = new YG(gct),
  bct = "splitio_debug",
  Ect = "SPLITIO_DEBUG",
  T1 = String(fct ? process.env[Ect] : qG() ? localStorage.getItem(bct) : ""),
  d0 = Qr.NONE;
/^(enabled?|on)/i.test(T1) ? (d0 = Qr.DEBUG) : XG(T1) && (d0 = T1);
function Tct(t) {
  var e = t.debug,
    n = e !== void 0 ? vct(e) : d0,
    r = new sct({ logLevel: n || d0 }, _ct);
  return (
    n ||
      r._log(
        Qr.ERROR,
        "Invalid Log Level - No changes to the logs will be applied."
      ),
    r
  );
}
function wct(t) {
  var e = t.treatment;
  return t.keys
    ? {
        conditionType: "WHITELIST",
        matcherGroup: {
          combiner: "AND",
          matchers: [
            {
              keySelector: null,
              matcherType: "WHITELIST",
              negate: !1,
              whitelistMatcherData: {
                whitelist: Is(t.keys) ? [t.keys] : t.keys,
              },
            },
          ],
        },
        partitions: [{ treatment: e, size: 100 }],
        label: "whitelisted " + e,
      }
    : {
        conditionType: "ROLLOUT",
        matcherGroup: {
          combiner: "AND",
          matchers: [
            { keySelector: null, matcherType: "ALL_KEYS", negate: !1 },
          ],
        },
        partitions: [{ treatment: e, size: 100 }],
        label: "default rule",
      };
}
function Pct(t, e) {
  return typeof t != typeof e
    ? !0
    : typeof t == "string"
    ? t !== e
    : t.treatment !== e.treatment || t.config !== e.config;
}
function Ict() {
  var t = { emptyMock: "1" };
  function e(n) {
    var r = Object.keys(n);
    return r.length !== Object.keys(t).length
      ? ((t = n), !0)
      : r.some(function (a) {
          var s = !t[a],
            i = Pct(t[a], n[a]),
            o = s || i;
          return o && (t = n), o;
        });
  }
  return function (r) {
    var a = r.features || {};
    if (!e(a)) return !1;
    var s = {};
    return (
      _o(a, function (i, o) {
        var u = i,
          l = null;
        ja(i) && ((u = i.treatment), (l = i.config || l));
        var c = {};
        l !== null && (c[u] = l),
          (s[o] = {
            trafficTypeName: "localhost",
            conditions: [wct({ treatment: u })],
            configurations: c,
          });
      }),
      s
    );
  };
}
function Cct(t, e, n, r) {
  var a = r.log,
    s = e.splits,
    i = !0;
  return function () {
    var u = [],
      l = null,
      c = {};
    try {
      c = t(r);
    } catch (d) {
      (l = d), a.error(fhe, [d]);
    }
    return !l && c
      ? (a.debug(rpe, [JSON.stringify(c)]),
        _o(c, function (d, p) {
          u.push([
            p,
            {
              name: p,
              status: "ACTIVE",
              killed: !1,
              trafficAllocation: 100,
              defaultTreatment: Oo,
              conditions: d.conditions || [],
              configurations: d.configurations,
              trafficTypeName: d.trafficTypeName,
            },
          ]);
        }),
        Promise.all([s.clear(), s.addSplits(u)]).then(function () {
          return (
            n.splits.emit(sd),
            i &&
              ((i = !1),
              Promise.resolve(s.checkCache()).then(function (d) {
                d && n.splits.emit(HI), n.segments.emit(_d);
              })),
            !0
          );
        }))
      : Promise.resolve(!0);
  };
}
function Act(t, e, n, r) {
  return AI(
    r.log,
    Cct(t, e, n, r),
    r.scheduler.offlineRefreshRate,
    "offlineUpdater"
  );
}
function yV() {
  return Promise.resolve();
}
function Oct(t) {
  return function (e) {
    var n = e.settings,
      r = e.readiness,
      a = e.storage;
    return Jn(Act(t(), a, r, n), {
      flush: yV,
      shared: function (s, i) {
        return {
          start: function () {
            setTimeout(function () {
              i.segments.emit(_d);
            }, 0);
          },
          stop: function () {},
          isRunning: function () {
            return !0;
          },
          flush: yV,
        };
      },
    });
  };
}
var Ffe = Oct(Ict);
Ffe.type = "LocalhostFromObject";
function Hct() {
  return Ffe;
}
var gV = [Zm, nd, KG];
function Nct(t) {
  var e = t.userConsent,
    n = t.log;
  return (
    (e = Whe(e)),
    gV.indexOf(e) > -1 ? e : (n.error(DG, ["userConsent", gV, nd]), nd)
  );
}
var Rct = "10.25.2",
  kct = {
    startup: {
      requestTimeoutBeforeReady: 5,
      retriesOnFailureBeforeReady: 1,
      readyTimeout: 10,
      eventsFirstPushWindow: 10,
    },
    userConsent: nd,
    version: "javascript-" + Rct,
  },
  w1 = "LOCALSTORAGE";
function xct(t) {
  var e = t.log,
    n = t.mode,
    r = t.storage,
    a = r === void 0 ? { type: qy } : r,
    s = a.type,
    i = a.options,
    o = i === void 0 ? {} : i,
    u = a.prefix,
    l,
    c = function () {
      (l = s), (s = qy);
    };
  return (
    n === Bp && s === w1 && c(),
    ((s !== qy && s !== w1) || (s === w1 && !qG())) &&
      (c(),
      e.error(
        "Invalid or unavailable storage. Fallbacking into MEMORY storage"
      )),
    { type: s, options: o, prefix: u, __originalType: l }
  );
}
function Lct(t, e, n) {
  var r = t.integrations,
    a = t.log;
  if (!Array.isArray(r) || r.length === 0) return [];
  var s = r.filter(e),
    i = r.length - s.length;
  return i && a.warn(the, [i, n || ""]), s;
}
function Mct(t, e) {
  return (
    e === void 0 && (e = []),
    Lct(
      t,
      function (n) {
        return n && Is(n.type) && e.indexOf(n.type) > -1;
      },
      'Integration items must have a valid "type" value'
    )
  );
}
function Dct(t) {
  return Mct(t, [Efe, Tfe]);
}
var Gct = {
  defaults: kct,
  acceptKey: !0,
  acceptTT: !0,
  runtime: hct,
  storage: xct,
  integrations: Dct,
  logger: Tct,
  localhost: function () {
    return Hct();
  },
  consent: Nct,
};
function Fct(t) {
  return $it(t, Gct);
}
var wf = typeof Reflect == "object" ? Reflect : null,
  vV =
    wf && typeof wf.apply == "function"
      ? wf.apply
      : function (e, n, r) {
          return Function.prototype.apply.call(e, n, r);
        },
  nT;
wf && typeof wf.ownKeys == "function"
  ? (nT = wf.ownKeys)
  : Object.getOwnPropertySymbols
  ? (nT = function (e) {
      return Object.getOwnPropertyNames(e).concat(
        Object.getOwnPropertySymbols(e)
      );
    })
  : (nT = function (e) {
      return Object.getOwnPropertyNames(e);
    });
function Uct(t) {
  console && console.warn && console.warn(t);
}
var Ufe =
  Number.isNaN ||
  function (e) {
    return e !== e;
  };
function ys() {
  ys.init.call(this);
}
ys.prototype._events = void 0;
ys.prototype._eventsCount = 0;
ys.prototype._maxListeners = void 0;
var _V = 10;
function MI(t) {
  if (typeof t != "function")
    throw new TypeError(
      'The "listener" argument must be of type Function. Received type ' +
        typeof t
    );
}
Object.defineProperty(ys, "defaultMaxListeners", {
  enumerable: !0,
  get: function () {
    return _V;
  },
  set: function (t) {
    if (typeof t != "number" || t < 0 || Ufe(t))
      throw new RangeError(
        'The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' +
          t +
          "."
      );
    _V = t;
  },
});
ys.init = function () {
  (this._events === void 0 ||
    this._events === Object.getPrototypeOf(this)._events) &&
    ((this._events = Object.create(null)), (this._eventsCount = 0)),
    (this._maxListeners = this._maxListeners || void 0);
};
ys.prototype.setMaxListeners = function (e) {
  if (typeof e != "number" || e < 0 || Ufe(e))
    throw new RangeError(
      'The value of "n" is out of range. It must be a non-negative number. Received ' +
        e +
        "."
    );
  return (this._maxListeners = e), this;
};
function Kfe(t) {
  return t._maxListeners === void 0 ? ys.defaultMaxListeners : t._maxListeners;
}
ys.prototype.getMaxListeners = function () {
  return Kfe(this);
};
ys.prototype.emit = function (e) {
  for (var n = [], r = 1; r < arguments.length; r++) n.push(arguments[r]);
  var a = e === "error",
    s = this._events;
  if (s !== void 0) a = a && s.error === void 0;
  else if (!a) return !1;
  if (a) {
    var i;
    if ((n.length > 0 && (i = n[0]), i instanceof Error)) throw i;
    var o = new Error("Unhandled error." + (i ? " (" + i.message + ")" : ""));
    throw ((o.context = i), o);
  }
  var u = s[e];
  if (u === void 0) return !1;
  if (typeof u == "function") vV(u, this, n);
  else
    for (var l = u.length, c = $fe(u, l), r = 0; r < l; ++r) vV(c[r], this, n);
  return !0;
};
function Bfe(t, e, n, r) {
  var a, s, i;
  if (
    (MI(n),
    (s = t._events),
    s === void 0
      ? ((s = t._events = Object.create(null)), (t._eventsCount = 0))
      : (s.newListener !== void 0 &&
          (t.emit("newListener", e, n.listener ? n.listener : n),
          (s = t._events)),
        (i = s[e])),
    i === void 0)
  )
    (i = s[e] = n), ++t._eventsCount;
  else if (
    (typeof i == "function"
      ? (i = s[e] = r ? [n, i] : [i, n])
      : r
      ? i.unshift(n)
      : i.push(n),
    (a = Kfe(t)),
    a > 0 && i.length > a && !i.warned)
  ) {
    i.warned = !0;
    var o = new Error(
      "Possible EventEmitter memory leak detected. " +
        i.length +
        " " +
        String(e) +
        " listeners added. Use emitter.setMaxListeners() to increase limit"
    );
    (o.name = "MaxListenersExceededWarning"),
      (o.emitter = t),
      (o.type = e),
      (o.count = i.length),
      Uct(o);
  }
  return t;
}
ys.prototype.addListener = function (e, n) {
  return Bfe(this, e, n, !1);
};
ys.prototype.on = ys.prototype.addListener;
ys.prototype.prependListener = function (e, n) {
  return Bfe(this, e, n, !0);
};
function Kct() {
  if (!this.fired)
    return (
      this.target.removeListener(this.type, this.wrapFn),
      (this.fired = !0),
      arguments.length === 0
        ? this.listener.call(this.target)
        : this.listener.apply(this.target, arguments)
    );
}
function Vfe(t, e, n) {
  var r = { fired: !1, wrapFn: void 0, target: t, type: e, listener: n },
    a = Kct.bind(r);
  return (a.listener = n), (r.wrapFn = a), a;
}
ys.prototype.once = function (e, n) {
  return MI(n), this.on(e, Vfe(this, e, n)), this;
};
ys.prototype.prependOnceListener = function (e, n) {
  return MI(n), this.prependListener(e, Vfe(this, e, n)), this;
};
ys.prototype.removeListener = function (e, n) {
  var r, a, s, i, o;
  if ((MI(n), (a = this._events), a === void 0)) return this;
  if (((r = a[e]), r === void 0)) return this;
  if (r === n || r.listener === n)
    --this._eventsCount === 0
      ? (this._events = Object.create(null))
      : (delete a[e],
        a.removeListener && this.emit("removeListener", e, r.listener || n));
  else if (typeof r != "function") {
    for (s = -1, i = r.length - 1; i >= 0; i--)
      if (r[i] === n || r[i].listener === n) {
        (o = r[i].listener), (s = i);
        break;
      }
    if (s < 0) return this;
    s === 0 ? r.shift() : Bct(r, s),
      r.length === 1 && (a[e] = r[0]),
      a.removeListener !== void 0 && this.emit("removeListener", e, o || n);
  }
  return this;
};
ys.prototype.off = ys.prototype.removeListener;
ys.prototype.removeAllListeners = function (e) {
  var n, r, a;
  if (((r = this._events), r === void 0)) return this;
  if (r.removeListener === void 0)
    return (
      arguments.length === 0
        ? ((this._events = Object.create(null)), (this._eventsCount = 0))
        : r[e] !== void 0 &&
          (--this._eventsCount === 0
            ? (this._events = Object.create(null))
            : delete r[e]),
      this
    );
  if (arguments.length === 0) {
    var s = Object.keys(r),
      i;
    for (a = 0; a < s.length; ++a)
      (i = s[a]), i !== "removeListener" && this.removeAllListeners(i);
    return (
      this.removeAllListeners("removeListener"),
      (this._events = Object.create(null)),
      (this._eventsCount = 0),
      this
    );
  }
  if (((n = r[e]), typeof n == "function")) this.removeListener(e, n);
  else if (n !== void 0)
    for (a = n.length - 1; a >= 0; a--) this.removeListener(e, n[a]);
  return this;
};
function jfe(t, e, n) {
  var r = t._events;
  if (r === void 0) return [];
  var a = r[e];
  return a === void 0
    ? []
    : typeof a == "function"
    ? n
      ? [a.listener || a]
      : [a]
    : n
    ? Vct(a)
    : $fe(a, a.length);
}
ys.prototype.listeners = function (e) {
  return jfe(this, e, !0);
};
ys.prototype.rawListeners = function (e) {
  return jfe(this, e, !1);
};
ys.listenerCount = function (t, e) {
  return typeof t.listenerCount == "function"
    ? t.listenerCount(e)
    : zfe.call(t, e);
};
ys.prototype.listenerCount = zfe;
function zfe(t) {
  var e = this._events;
  if (e !== void 0) {
    var n = e[t];
    if (typeof n == "function") return 1;
    if (n !== void 0) return n.length;
  }
  return 0;
}
ys.prototype.eventNames = function () {
  return this._eventsCount > 0 ? nT(this._events) : [];
};
function $fe(t, e) {
  for (var n = new Array(e), r = 0; r < e; ++r) n[r] = t[r];
  return n;
}
function Bct(t, e) {
  for (; e + 1 < t.length; e++) t[e] = t[e + 1];
  t.pop();
}
function Vct(t) {
  for (var e = new Array(t.length), n = 0; n < e.length; ++n)
    e[n] = t[n].listener || t[n];
  return e;
}
function jct(t, e) {
  return (
    (e = e || {}),
    new Promise(function (n, r) {
      var a = new XMLHttpRequest(),
        s = [],
        i = [],
        o = {},
        u = function () {
          return {
            ok: ((a.status / 100) | 0) == 2,
            statusText: a.statusText,
            status: a.status,
            url: a.responseURL,
            text: function () {
              return Promise.resolve(a.responseText);
            },
            json: function () {
              return Promise.resolve(a.responseText).then(JSON.parse);
            },
            blob: function () {
              return Promise.resolve(new Blob([a.response]));
            },
            clone: u,
            headers: {
              keys: function () {
                return s;
              },
              entries: function () {
                return i;
              },
              get: function (c) {
                return o[c.toLowerCase()];
              },
              has: function (c) {
                return c.toLowerCase() in o;
              },
            },
          };
        };
      for (var l in (a.open(e.method || "get", t, !0),
      (a.onload = function () {
        a
          .getAllResponseHeaders()
          .replace(/^(.*?):[^\S\n]*([\s\S]*?)$/gm, function (c, d, p) {
            s.push((d = d.toLowerCase())),
              i.push([d, p]),
              (o[d] = o[d] ? o[d] + "," + p : p);
          }),
          n(u());
      }),
      (a.onerror = r),
      (a.withCredentials = e.credentials == "include"),
      e.headers))
        a.setRequestHeader(l, e.headers[l]);
      a.send(e.body || null);
    })
  );
}
function zct() {
  return typeof fetch == "function" ? fetch : jct;
}
function $ct() {
  return typeof EventSource == "function" ? EventSource : void 0;
}
var bV = "visibilitychange",
  EV = "pagehide",
  TV = "for visibilitychange and pagehide events.",
  Wct = (function () {
    function t(e, n, r, a) {
      (this.syncManager = e),
        (this.settings = n),
        (this.storage = r),
        (this.serviceApi = a),
        (this.flushData = this.flushData.bind(this)),
        (this.flushDataIfHidden = this.flushDataIfHidden.bind(this)),
        (this.fromImpressionsCollector = Yhe.bind(
          void 0,
          n.core.labelsEnabled
        ));
    }
    return (
      (t.prototype.start = function () {
        this.settings.log.debug(Zde, [TV]),
          typeof document < "u" &&
            document.addEventListener &&
            document.addEventListener(bV, this.flushDataIfHidden),
          typeof window < "u" &&
            window.addEventListener &&
            window.addEventListener(EV, this.flushData);
      }),
      (t.prototype.stop = function () {
        this.settings.log.debug(epe, [TV]),
          typeof document < "u" &&
            document.removeEventListener &&
            document.removeEventListener(bV, this.flushDataIfHidden),
          typeof window < "u" &&
            window.removeEventListener &&
            window.removeEventListener(EV, this.flushData);
      }),
      (t.prototype.flushData = function () {
        if (this.syncManager) {
          var e = this.settings.urls,
            n = e.events,
            r = e.telemetry;
          if (u0(this.settings)) {
            var a = this.settings.sync.impressionsMode,
              s = { sim: a === nl ? nl : a === ed ? ed : td };
            this._flushData(
              n + "/testImpressions/beacon",
              this.storage.impressions,
              this.serviceApi.postTestImpressionsBulk,
              this.fromImpressionsCollector,
              s
            ),
              this._flushData(
                n + "/events/beacon",
                this.storage.events,
                this.serviceApi.postEventsBulk
              ),
              this.storage.impressionCounts &&
                this._flushData(
                  n + "/testImpressions/count/beacon",
                  this.storage.impressionCounts,
                  this.serviceApi.postTestImpressionsCount,
                  Xhe
                ),
              this.storage.uniqueKeys &&
                this._flushData(
                  r + "/v1/keys/cs/beacon",
                  this.storage.uniqueKeys,
                  this.serviceApi.postUniqueKeysBulkCs
                );
          }
          this.storage.telemetry &&
            this._flushData(
              r + "/v1/metrics/usage/beacon",
              this.storage.telemetry,
              this.serviceApi.postMetricsUsage
            );
        }
      }),
      (t.prototype.flushDataIfHidden = function () {
        document.visibilityState === "hidden" && this.flushData();
      }),
      (t.prototype._flushData = function (e, n, r, a, s) {
        if (!n.isEmpty()) {
          var i = a ? a(n.pop()) : n.pop();
          this._sendBeacon(e, i, s) ||
            r(JSON.stringify(i)).catch(function () {});
        }
      }),
      (t.prototype._sendBeacon = function (e, n, r) {
        if (typeof navigator < "u" && navigator.sendBeacon) {
          var a = {
            entries: n,
            token: this.settings.core.authorizationKey,
            sdk: this.settings.version,
          };
          r && Jn(a, r);
          var s = JSON.stringify(a);
          try {
            return navigator.sendBeacon(e, s);
          } catch {
            return !1;
          }
        }
        return !1;
      }),
      t
    );
  })();
function qct() {
  return typeof performance == "object" && typeof performance.now == "function"
    ? performance.now.bind(performance)
    : Date.now;
}
var Yct = qct(),
  Xct = { getFetch: zct, getEventSource: $ct, EventEmitter: ys, now: Yct },
  Qct = Wct,
  Jct = lot(rut, Wot);
function Zct(t) {
  return t.storage.type === GN
    ? _ut(t.storage)
    : t.storage.__originalType === GN
    ? Mfe
    : xI;
}
function edt(t) {
  var e = {
    settings: t,
    platform: Xct,
    storageFactory: Zct(t),
    splitApiFactory: Ait,
    syncManagerFactory: Jct,
    sdkManagerFactory: Nut,
    sdkClientMethodFactory: Tlt,
    SignalListener: Qct,
    integrationsManagerFactory:
      t.integrations && t.integrations.length > 0
        ? qlt.bind(null, t.integrations)
        : void 0,
    impressionsObserverFactory: Rlt,
    extraProps: function (n) {
      return { UserConsent: pct(n) };
    },
  };
  switch (t.mode) {
    case Bp:
      (e.splitApiFactory = void 0),
        (e.syncManagerFactory = t.sync.localhostMode),
        (e.SignalListener = void 0);
      break;
  }
  return e;
}
function tdt(t, e) {
  var n = Fct(t),
    r = edt(n);
  return e && e(r), cct(r);
}
class ndt extends Error {
  constructor() {
    super(...arguments), (this.name = "Split timeout error");
  }
}
class sdt {
  constructor(e, n) {
    (this._splitAuthKey = e), (this._splits = n), (this._isSdkReady = !1);
  }
  setTrafficId(e) {
    this._trafficId !== e &&
      ((this._isSdkReady = !1), (this._trafficId = e), this._initClient());
  }
  _initClient() {
    const e = {
        core: { authorizationKey: this._splitAuthKey, key: this._trafficId },
      },
      n = tdt(e);
    this._client = n.client();
  }
  async getTreatments(e, n) {
    return (
      this.setTrafficId(e),
      this._isSdkReady || (this._isSdkReady = await this._waitUntilSdkReady()),
      this._splits.length === 0
        ? {}
        : this._client.getTreatments(this._splits, n)
    );
  }
  _waitUntilSdkReady() {
    return new Promise((e, n) => {
      this._client.on(this._client.Event.SDK_READY, () => e(!0)),
        this._client.on(this._client.Event.SDK_READY_TIMED_OUT, () =>
          n(new ndt())
        );
    });
  }
}
class rdt extends sdt {
  constructor() {
    super(hCe, mCe),
      (this._mixpanel = null),
      (this._treatments = {}),
      (this._experiments = nX()),
      (this.props = { isUserReLogin: !1 });
  }
  _trackExperimentStarted(e, n) {
    if (!this._mixpanel) return;
    const r = {
      Platform: "Desktop",
      ExperimentName: e,
      iOSExperimentVariant: n,
    };
    try {
      this._mixpanel.track("$experiment_started", r),
        l1("🚀[Experiments]: Experiment started: ", r);
    } catch {}
  }
  _setUpExperiment(e, n) {
    return this._isExperimentHasValue(e, n)
      ? !1
      : (this._isExperimentStarted(e)
          ? (this._experiments = this._experiments.map((r) =>
              r.name === e ? { ...r, value: n } : r
            ))
          : (this._experiments = [...this._experiments, { name: e, value: n }]),
        r5(this._experiments),
        !0);
  }
  _isExperimentStarted(e) {
    return this._experiments.some((n) => n.name === e);
  }
  _isExperimentHasValue(e, n) {
    return this._experiments.some((r) => r.name === e && r.value === n);
  }
  async _tryToStartExperiment(e, n, r, a = {}, s = !1) {
    if (
      (await this._updateTreatments(e, n, a),
      !Object.keys(this._treatments).length)
    )
      return null;
    const i = this._treatments[r];
    return i == null || i === fCe
      ? null
      : (this._isExperimentHasValue(r, i) ||
          !this._setUpExperiment(r, i) ||
          i === Vu ||
          s ||
          this._trackExperimentStarted(SCe[r], yCe[r][i]),
        i);
  }
  async _updateTreatments(e, n, r = {}) {
    const a = this._treatments,
      s = e || Yc.token,
      i = { platform: "desktop", user_type: n.toLowerCase(), ...r };
    try {
      (this._treatments = await this.getTreatments(s, i)),
        l1(
          "[Experiments]: Update treatments:",
          `
PREV`,
          a,
          `
NEXT`,
          this._treatments
        );
    } catch {}
  }
  initMixpanel(e) {
    e && (this._mixpanel = e);
  }
  reset() {
    (this._experiments = []), r5(this._experiments);
  }
  setProps(e) {
    (this.props = { ...this.props, ...e }),
      l1("[Experiments]: Props has been updated", this.props);
  }
  get activeExperiments() {
    return Fat(this._experiments);
  }
  startNewTeamSetupExperiment(e, n) {
    return this._tryToStartExperiment(e, n, z0);
  }
  startTeamTrialDescriptionExperiment(e, n) {
    return this._tryToStartExperiment(e, n, j0);
  }
  startAnalyticsTokenExperiment(e, n, r = {}) {
    return this._tryToStartExperiment(e, n, gm, r, !0);
  }
  startHostSharingNewFlowExperiment(e, n, r = {}) {
    return this._tryToStartExperiment(e, n, $0, r);
  }
  startSignUpEmailVerificationExperiment(e, n) {
    return this._tryToStartExperiment(e, n, V0);
  }
}
const ui = new rdt();
function* adt() {
  const { user_id: t, user_type: e } = yield* Pe(D2),
    n = yield* Pe(Oa);
  yield* Me(
    { context: ui, fn: "startHostSharingNewFlowExperiment" },
    t == null ? void 0 : t.toFixed(),
    e,
    { isTeamOwner: n, isShareHostEnabled: !0 }
  );
}
function* idt() {
  const { user_id: t, user_type: e } = yield* Pe(D2);
  yield* Me(
    { context: ui, fn: "startTeamTrialDescriptionExperiment" },
    t == null ? void 0 : t.toFixed(),
    e
  ),
    yield* D(B0(ui.activeExperiments));
}
function* odt(t) {
  var n;
  const { user_type: e } = yield* Pe(D2);
  yield* Me(
    { context: ui, fn: "startSignUpEmailVerificationExperiment" },
    (n = t.payload) == null ? void 0 : n.userId,
    e
  ),
    yield* D(B0(ui.activeExperiments));
}
function* udt() {
  const { username: t, account: e } = yield* Pe((a) => a.user),
    { user_id: n, user_type: r } = e;
  ui.props.isUserReLogin ||
    (t && !n) ||
    (yield* Me({ context: ui, fn: "startNewTeamSetupExperiment" }, n, r),
    yield* Me(adt),
    yield* Me({ context: ui, fn: "startAnalyticsTokenExperiment" }, n, r, {
      environment: "production",
    }),
    yield* D(L$(ui.activeExperiments[gm])),
    yield* D(B0(ui.activeExperiments)));
}
function* wV() {
  yield* Me({ context: ui, fn: "reset" });
}
function* ldt() {
  ui.initMixpanel(window.mixpanel),
    yield* Gn([
      Pr(s0, udt),
      Pr(Zr.success, wV),
      Pr(qn.success, wV),
      Pr(dCe, idt),
      Pr(pCe, odt),
    ]);
}
const PV = "Trial period extension deprecated.",
  XN = Ze("EXTEND_TEAM_TRIAL");
function* cdt(t) {
  try {
    return {
      status: "success",
      data: yield* Me(async () => t.api.extendTeamTrial()),
    };
  } catch (e) {
    return { status: "error", data: e };
  }
}
function ddt(t) {
  var n;
  const e = t.data.responseJSON;
  return t.data.status === 0
    ? "Network error."
    : ((n = e == null ? void 0 : e.error) == null ? void 0 : n[0]) === PV
    ? PV
    : t.data.message;
}
function* pdt(t, { meta: e }) {
  const { resp: n } = yield* Gn({ delay: Bi(5e3), resp: Me(() => cdt(t)) });
  if (n.status === "success") {
    const r = yield* Pe(b8e),
      [a] = QPe({ from: r, until: n.data.valid_until }, r);
    yield* D(
      XN.success(
        {
          expirationDate: new Date(n.data.valid_until),
          days: a,
          expirationTryNumber: n.data.expiration_try_number,
        },
        e.requestId
      )
    ),
      yield* D($t.request("does-not-block-ui"));
  }
  n.status === "error" &&
    (yield* D(XN.failure(new Error(ddt(n)), e.requestId)));
}
function* hdt(t) {
  yield* $e(XN.request, pdt, t);
}
const p0 = {
  ssh: "ssh_config.identity",
  telnet: "telnet_config.identity",
  proxy: "ssh_config.proxy.identity",
};
class fdt {
  constructor({ hosts: e, groups: n, editableVaults: r }) {
    (this.isInvisibleIdentitiesEqual = (a, s) => {
      var i, o;
      return (
        Es(a, s) &&
        a.username === s.username &&
        a.password === s.password &&
        ((i = a.ssh_key) == null ? void 0 : i.local_id) ===
          ((o = s.ssh_key) == null ? void 0 : o.local_id)
      );
    }),
      (this.update = (a, s, i) => {
        const o =
            i instanceof Tn
              ? { type: "host", entity: i }
              : { type: "group", entity: i },
          u = this.data[s].findIndex((l) =>
            this.isInvisibleIdentitiesEqual(l.identity, a)
          );
        u !== -1
          ? this.data[s][u].entities.push(o)
          : this.data[s].push({ identity: a, entities: [o] });
      }),
      (this.addEntity = (a) => {
        Object.keys(p0).forEach((i) => {
          const o = p0[i],
            u = bv(a, o, null);
          u &&
            u.username &&
            !u.is_visible &&
            Py(u, this.editableVaults) &&
            this.update(u, i, a);
        });
      }),
      (this.editableVaults = r),
      (this.data = { ssh: [], telnet: [], proxy: [] }),
      e.forEach(this.addEntity),
      n.forEach(this.addEntity);
  }
}
function mdt(t) {
  return new fdt(t).data;
}
function QN(t) {
  return (e) => t.some((n) => wP(e, n));
}
const Fo = !0;
function ku(t, e) {
  return t.store.getTags(QN(e));
}
async function Sdt(t) {
  return (await t.store.getAllPersonalDeviceKeyPair())[0];
}
function um(t) {
  return { groups: t.store.getGroups(Fo) };
}
function wl(t) {
  return {
    hosts: t.store
      .getHosts(Fo)
      .map((n) => n.clone({ connectionPath: f3(n, t.store) })),
  };
}
function ydt(t) {
  return { snippets: t.store.getSnippets(Fo) };
}
function Wfe(t) {
  return { sshKeys: t.store.getSshKeys(Fo) };
}
function DI(t) {
  return { visibleIdentities: t.store.getVisibleIdentities(Fo) };
}
function rd(t) {
  return { portForwardingRules: t.store.getPortForwardingRules(Fo) };
}
function QG(t) {
  return { knownHosts: t.store.getKnownHosts(Fo) };
}
function JG(t) {
  return { hostLatestActivities: t.store.getHostLatestActivities(Fo) };
}
function gdt(t) {
  return { hardwareKeys: t.store.getAllHardwareKeys(Fo) };
}
function qfe(t) {
  return { multiKeys: t.store.getAllTeamMultiKey(Fo) };
}
function vdt(t) {
  return { snippetsPackages: t.store.getSnippetsPackages(Fo) };
}
function Yfe(t) {
  return { historyCommands: t.store.getHistoryCommands() };
}
function Dl(t) {
  return {
    ...wl(t),
    ...um(t),
    ...ydt(t),
    ...Wfe(t),
    ...DI(t),
    ...rd(t),
    ...QG(t),
    ...JG(t),
    ...qfe(t),
    ...vdt(t),
    ...gdt(t),
    ...Yfe(t),
  };
}
var _dt = p$,
  bdt = f$,
  IV,
  P1,
  I1 = 0,
  C1 = 0;
function Edt(t, e, n) {
  var r = (e && n) || 0,
    a = e || [];
  t = t || {};
  var s = t.node || IV,
    i = t.clockseq !== void 0 ? t.clockseq : P1;
  if (s == null || i == null) {
    var o = _dt();
    s == null && (s = IV = [o[0] | 1, o[1], o[2], o[3], o[4], o[5]]),
      i == null && (i = P1 = ((o[6] << 8) | o[7]) & 16383);
  }
  var u = t.msecs !== void 0 ? t.msecs : new Date().getTime(),
    l = t.nsecs !== void 0 ? t.nsecs : C1 + 1,
    c = u - I1 + (l - C1) / 1e4;
  if (
    (c < 0 && t.clockseq === void 0 && (i = (i + 1) & 16383),
    (c < 0 || u > I1) && t.nsecs === void 0 && (l = 0),
    l >= 1e4)
  )
    throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");
  (I1 = u), (C1 = l), (P1 = i), (u += 122192928e5);
  var d = ((u & 268435455) * 1e4 + l) % 4294967296;
  (a[r++] = (d >>> 24) & 255),
    (a[r++] = (d >>> 16) & 255),
    (a[r++] = (d >>> 8) & 255),
    (a[r++] = d & 255);
  var p = ((u / 4294967296) * 1e4) & 268435455;
  (a[r++] = (p >>> 8) & 255),
    (a[r++] = p & 255),
    (a[r++] = ((p >>> 24) & 15) | 16),
    (a[r++] = (p >>> 16) & 255),
    (a[r++] = (i >>> 8) | 128),
    (a[r++] = i & 255);
  for (var m = 0; m < 6; ++m) a[r + m] = s[m];
  return e || bdt(a);
}
var Tdt = Edt,
  wdt = Tdt,
  Xfe = m$,
  ZG = Xfe;
ZG.v1 = wdt;
ZG.v4 = Xfe;
var Ei = ZG;
async function JN(t) {
  const n = (await $b.fetchAllKeys()).find((r) => r.publicKey === t);
  if (!n) throw new Error("Key not found");
  return n;
}
class Pdt {
  constructor() {
    (this.tasks = []), (this.isExecuting = !1);
  }
  add(e) {
    return new Promise((n, r) => {
      this.tasks.push({ request: e, isCancelled: !1, resolve: n, reject: r }),
        this.maybeExecute();
    });
  }
  cancel(e) {
    const n = this.tasks.find((r) => r.request.request_id === e);
    return n ? ((n.isCancelled = !0), !0) : !1;
  }
  canStartNewTask() {
    return !(this.isExecuting || this.tasks.length === 0);
  }
  maybeExecute() {
    this.canStartNewTask() && this.execute();
  }
  async execute() {
    const e = this.tasks.shift();
    if (e) {
      if (((this.isExecuting = !0), e.isCancelled)) {
        this.onTaskFailed(e, new Error("Cancelled"));
        return;
      }
      try {
        const n = await this.sign(e.request);
        this.onTaskSucceeded(e, n);
      } catch (n) {
        this.onTaskFailed(e, n);
      }
    }
  }
  onTaskSucceeded(e, n) {
    e.resolve(n), this.onTaskFinished();
  }
  onTaskFailed(e, n) {
    e.reject(n), this.onTaskFinished();
  }
  onTaskFinished() {
    (this.isExecuting = !1), this.maybeExecute();
  }
  async sign(e) {
    return (await JN(e.publicKey)).sign(e.data);
  }
}
function Gb(t) {
  return { isSuccess: !1, error: t };
}
function Fb(t) {
  return { isSuccess: !0, result: t };
}
const CV = "keychain.sep";
class h_ {
  static listen() {
    Cye.handle(CV, (e, n, r) => this.handle(n, r));
  }
  static async isAvailable(e = "FULL_CHECK") {
    if (!uw) return !1;
    const n = Ft.getDeprecatedDeviceHasSepSupport();
    if (e === "SHALLOW_CHECK") return !!n;
    if (n != null) return n;
    const r = await this.invoke("CHECK_SUPPORTED");
    return Ft.setDeprecatedDeviceHasSepSupport(r), r;
  }
  static async generateNewKey(e) {
    const n = await this.invoke("GENERATE", e);
    if (!n.isSuccess) throw new Error(n.error.message);
    return n.result;
  }
  static async removeKey(e) {
    const n = await this.invoke("REMOVE", e);
    if (!n.isSuccess) throw new Error(n.error.message);
    return n.result;
  }
  static signData(e, n) {
    const r = Sm();
    return {
      promise: this.invokeSignatureRequest({
        request_id: r,
        data: e,
        publicKey: n,
      }),
      cancel: async () => this.invoke("SIGN_CANCEL", r),
    };
  }
  static async checkKeyExists(e) {
    return this.invoke("CHECK_KEY_EXISTS", e);
  }
  static async getAllKeys() {
    const e = await this.invoke("GET_ALL_KEYS");
    if (!e.isSuccess) throw new Error(e.error.message);
    return e.result;
  }
  static async invokeSignatureRequest(e) {
    const n = await this.invoke("SIGN", e);
    if (!n.isSuccess) throw new Error(n.error.message);
    return n.result;
  }
  static invoke(e, n) {
    return pv.invoke(CV, e, n);
  }
  static handle(e, n) {
    switch (e) {
      case "CHECK_SUPPORTED":
        return this.handleIsSupported();
      case "GENERATE":
        return this.handleGenerateNewKey(n);
      case "REMOVE":
        return this.handleRemoveKey(n);
      case "SIGN":
        return this.handleSignatureRequest(n);
      case "SIGN_CANCEL":
        return this.handleCancelSignatureRequest(n);
      case "CHECK_KEY_EXISTS":
        return this.handleCheckKeyExists(n);
      case "GET_ALL_KEYS":
        return this.handleGetAllKeys();
      default:
        throw new Error("API Misuse");
    }
  }
  static handleIsSupported() {
    return $b.isSupported();
  }
  static async handleGenerateNewKey(e) {
    try {
      const n = await $b.generateNewKey({ label: e });
      return Fb(n.publicKey);
    } catch (n) {
      return Gb(n);
    }
  }
  static async handleRemoveKey(e) {
    try {
      const r = await (await JN(e)).remove();
      return Fb(r);
    } catch (n) {
      return Gb(n);
    }
  }
  static async handleSignatureRequest(e) {
    try {
      const n = await this.signatureRequests.add(e);
      return Fb(n);
    } catch (n) {
      return Gb(n);
    }
  }
  static handleCancelSignatureRequest(e) {
    return this.signatureRequests.cancel(e);
  }
  static async handleCheckKeyExists(e) {
    try {
      return (await JN(e)).publicKey.length !== 0;
    } catch {
      return !1;
    }
  }
  static async handleGetAllKeys() {
    try {
      const n = (await $b.fetchAllKeys()).map((r) => ({
        label: r.label,
        publicKey: r.publicKey,
      }));
      return Fb(n);
    } catch (e) {
      return Gb(e);
    }
  }
}
h_.signatureRequests = new Pdt();
async function Idt() {
  try {
    return (await Zz.listWindowsHelloKeys()).map(Ndt);
  } catch (t) {
    if (t.message === "Object was not found.") return [];
    throw Jfe(t);
  }
}
async function Cdt(t) {
  try {
    await Zz.deleteWindowsHelloKey(Hdt(t));
  } catch (e) {
    throw Jfe(e);
  }
}
class eS extends Error {
  constructor(e) {
    super("Windows Hello is not available on this device"),
      (this.reason = e),
      (this.name = "WindowsHelloUnavailable");
  }
  static swallow(e) {
    if (e instanceof eS) return e;
    throw e;
  }
}
class Qfe extends Error {
  constructor() {
    super("Cancelled by user"), (this.name = "CancelledByUser");
  }
}
const Adt = Xe.union([
    Xe.literal("Webauthn Platform Authenticator not available"),
    Xe.literal("Error loading webauthn API methods"),
    Xe.literal("Error loading webauthn.dll"),
    Xe.literal(
      "Webauthn API version is too old and does not support getPlatformCredentialList API"
    ),
  ]),
  Odt = Iv(Adt);
function Hdt(t) {
  return Buffer.from(t, "base64");
}
function Ndt(t) {
  return t.toString("base64");
}
function Jfe(t) {
  return t.message === "The action was cancelled by the user."
    ? new Qfe()
    : Odt(t.message)
    ? new eS(t.message)
    : t;
}
Ll(eS);
Ll(Qfe);
const Rdt = 5e3,
  Zfe = () => ({
    processed: k("UNIVERSAL_UNDO_PROCESSED"),
    canceled: k("UNIVERSAL_UNDO_CANCELED"),
  });
function* GI({ payload: t, cancelable: e, timer: n = Rdt }) {
  if (!e) return;
  t.variant === "reconnect"
    ? yield* D(nle({ ...t, timer: n }))
    : yield* D(Nu({ ...t, timer: n }));
  const r = yield* Of({
    processed: Zs(kdt(t.id)),
    canceled: Zs(xdt(t.id)),
    exceeded: Ldt(n),
  });
  return r.canceled && (yield* I0()), r;
}
function kdt(t) {
  return (e) => Zfe().processed.match(e) && e.payload.id === t;
}
function xdt(t) {
  return (e) => Zfe().canceled.match(e) && e.payload.id === t;
}
function* Ldt(t) {
  return yield* Bi(t), "processed";
}
function eme(t) {
  return t
    .flatMap(({ count: e, singular: n, plural: r }) =>
      e !== 0 ? [`${e} ${e > 1 ? r : n}`] : []
    )
    .join(" and ");
}
function Mdt(t) {
  var a;
  const e = t.length === 1 ? "singular" : "plural",
    n = ((a = t[0]) == null ? void 0 : a.entityName) ?? "default",
    r = t.every((s) => s.entityName === n);
  return xg[r ? n : "default"][e];
}
function Ddt(t, e) {
  return `${e} ${Mdt(t)} to`;
}
function tme(t, e, n) {
  return { message: Ddt(t, e), target: `${n} Vault` };
}
function Gdt(t, e, n) {
  const r = eme([
    { count: t.length, ...xg.group },
    { count: e.length, ...xg.host },
  ]);
  return { message: `${mP.moving} ${r} to `, target: n.label };
}
function Fdt(t, e, n) {
  const r = eme([
    { count: t.length, ...xg.snippet },
    { count: e.length, ...xg.snippetsPackage },
  ]);
  return { message: `${mP.moving} ${r} to `, target: n.label };
}
function Udt(t) {
  return ZP(t, ["connected_at", "id", "local_id"], ["desc", "desc", "desc"]);
}
function* Kdt(t, { payload: e, meta: n }) {
  const r = new Ia(e.entity),
    a = Xdt(t, r),
    s = t.store.getSshKey(r);
  s &&
    s.certificates.length > r.certificates.length &&
    (yield* D(Ty({ type: "SSH Certificate" })));
  try {
    yield* Me({ context: t.store, fn: "setSshKey" }, r);
  } catch {
    yield* D(Ny.failure({ code: Ny.failure.toString() }, n.requestId));
    return;
  }
  yield* D(xu(t)),
    yield* D(Ny.success(r, n.requestId)),
    yield* D($t.request("does-not-block-ui")),
    a &&
      (yield* D(
        QX({
          ...(e.context ?? {
            keySource: "Pasted",
            wizardID: null,
            connectionID: null,
          }),
          fido2BasedKey: "yes",
        })
      ));
}
function* Bdt(t, { payload: e, meta: n }) {
  const { keygenOptions: r, entity: a } = e;
  try {
    const { privateKey: s, publicKey: i } = yield* Me(Jz, r);
    if (s.length === 0) {
      yield* D(gh.failure({ code: gh.failure.toString() }, n.requestId));
      return;
    }
    const o = new Ia({ ...a, public_key: i ?? "", private_key: s }),
      u = yield* ln(Ny, { entity: o });
    yield* D(gh.success(u, n.requestId));
  } catch {
    yield* D(gh.failure({ code: gh.failure.toString() }, n.requestId));
  }
}
function* Vdt(t, { payload: e, meta: n }) {
  const { label: r } = e;
  try {
    const a = yield* Me({ context: h_, fn: "generateNewKey" }, r),
      s = new Cp({ label: r, public_key: a, storage: G0 });
    yield* Me({ context: t.store, fn: "setHardwareKey" }, s),
      yield* D(iH.success(s, n.requestId)),
      yield* D(xu(t));
  } catch (a) {
    yield* D(iH.failure(a.message, n.requestId));
  }
}
async function nme(t, e) {
  try {
    if (e.isSep() && !(await h_.removeKey(e.public_key))) return;
    if (e.isWindowsHello() && e.credentialId != null)
      try {
        await Cdt(e.credentialId);
      } catch (n) {
        eS.swallow(n);
      }
    await t.store.deleteHardwareKeys([e]);
  } catch {}
}
function* jdt(t, { payload: e, meta: n }) {
  const r = e;
  try {
    for (const a of r) yield* Me({ context: t.store, fn: "setHardwareKey" }, a);
  } catch {
    yield* D(Hy.failure({ code: Hy.failure.toString() }, n.requestId));
    return;
  }
  yield* D(Hy.success(r, n.requestId)), yield* D(xu(t));
}
async function zdt(t, e, n) {
  const r = e.filter(
    (a) => n.find((s) => s.publicKey === a.public_key) === void 0
  );
  return await t.store.deleteHardwareKeys(r), r.length;
}
async function $dt(t, e, n) {
  const r = n.filter(
      (s) => e.find((i) => i.public_key === s.publicKey) === void 0
    ),
    a = r.map((s) =>
      t.store.setHardwareKey(
        new Cp({ label: s.label, public_key: s.publicKey, storage: G0 })
      )
    );
  return await Promise.all(a), r.length;
}
function* Wdt(t, e) {
  yield* D(
    DP({
      id: t,
      force_to_do_action: !1,
      is_dismissible: !0,
      is_seen: !1,
      created_at: new Date(),
      type: "medium",
      title: "⚙️ Secure Enclave",
      body: e,
      button_name: "Dismiss",
      action: XR,
    })
  );
}
function* qdt(t) {
  try {
    const e = t.store.getAllSepKeys(),
      n = yield* Me({ context: h_, fn: "getAllKeys" });
    if (e.length === 0 && n.length === 0) return;
    const r = yield* Me($dt, t, e, n),
      a = yield* Me(zdt, t, e, n);
    if (r === 0 && a === 0) return;
    if ((yield* D(xu(t)), r !== 0)) {
      const s = r !== 1;
      yield* Me(
        Wdt,
        J0e,
        `${r} ${s ? "keys were" : "key was"} found in the system which ${
          s ? "are" : "is"
        } associated with Termius. ${
          s ? "These keys were" : "This key was"
        } added and can be found in the Keychain.`
      );
    }
    if (a !== 0) {
      const s =
          "We detected that a key is missing from the system. This means that Termius can no longer use this key.",
        i = `We detected that ${a} keys are missing from the system. This means that Termius can no longer use these keys.`;
      yield* D(
        DP({
          id: Kz,
          force_to_do_action: !1,
          is_dismissible: !0,
          is_seen: !1,
          created_at: new Date(),
          type: "medium",
          title: "Missing biometric keys",
          body: a === 1 ? s : i,
          button_name: "Dismiss",
          action: XR,
        })
      );
    }
  } catch {}
}
function* Ydt(t) {
  try {
    const e = yield* Me(Idt),
      n = t.store.getAllHardwareKeys(),
      r = qP(n, e, (i, o) => i.credentialId === o);
    if (Zu(r)) return;
    yield* Me(() => t.store.deleteHardwareKeys(r)), yield* D(xu(t));
    const a =
        "We detected that a key is missing from the system. This means that Termius can no longer use this key.",
      s = `We detected that ${r.length} keys are missing from the system. This means that Termius can no longer use these keys.`;
    yield* D(
      DP({
        id: Kz,
        force_to_do_action: !1,
        is_dismissible: !0,
        is_seen: !1,
        created_at: new Date(),
        type: "medium",
        title: "Missing biometric keys",
        body: r.length === 1 ? a : s,
        button_name: "Dismiss",
        action: XR,
      })
    );
  } catch (e) {
    if (e instanceof eS) return;
    tt.exception("Failed to cleanup Windows Hello keys", e);
  }
}
function Xdt(t, e) {
  const n = sO(e.private_key);
  if (!n) return !1;
  const r = t.store.getSshKey(e);
  return (r == null || !sO(r.private_key)) && n;
}
function* Qdt(t, { payload: e, meta: n }) {
  try {
    for (const r of e.sshKeys)
      yield* Me({ context: t.store, fn: "deleteSshKey" }, new Ia(r)),
        yield* D(Ty({ type: "SSH Key" }));
    for (const r of e.identities)
      yield* Me({ context: t.store, fn: "deleteIdentity" }, new xr(r)),
        yield* D(Ty({ type: "Identity" }));
    for (const r of e.hardwareKeys.map((a) => new Cp(a)))
      yield* Me(nme, t, r),
        yield* D(
          Ty({
            location: r.isWindowsHello() ? "WindowsHelloKey" : "SEPKey",
            type: "Biometric Key",
          })
        );
  } catch (r) {
    yield* D(oH.failure(r, n.requestId));
    return;
  }
  yield* D(oH.success(void 0, n.requestId)),
    yield* D(xu(t)),
    yield* D($t.request("does-not-block-ui"));
}
function* Jdt(t, { payload: e, meta: n }) {
  try {
    const r = e.local_id == null && e.is_visible;
    if ((yield* Me({ context: t.store, fn: "setIdentity" }, e), r)) {
      const a = [];
      e.password && a.push("Password"),
        e.ssh_key && a.push("SSH key"),
        e.hardware_key && a.push("Hardware key"),
        yield* D(UX(a)),
        yield* D(YX({ source: "Pasted", type: "Identity" }));
    }
    yield* D(gE.success(e, n.requestId)),
      yield* D(xu(t)),
      yield* D($t.request("does-not-block-ui"));
  } catch {
    yield* D(gE.failure({ code: gE.failure.toString() }, n.requestId));
  }
}
function* Zdt(t, e) {
  const { store: n } = t;
  yield* Me(() =>
    Promise.all(
      n
        .getKnownHosts()
        .filter((r) => r.hostnames === e.hostnames && Es(r, e))
        .map((r) => n.deleteKnownHost(r))
    )
  ),
    yield* sme(t, e);
}
function* sme(t, e) {
  const { store: n } = t;
  ame(n.getKnownHosts(), e) ||
    (yield* Me({ context: t.store, fn: "setKnownHost" }, e),
    yield* D(ss(QG(t))),
    yield* D($t.request("does-not-block-ui")));
}
function* ept(t, { payload: e }) {
  for (const n of e) yield* Me([t.store, t.store.deleteKnownHost], new gl(n));
  yield* D(ss(QG(t))), yield* D($t.request("does-not-block-ui"));
}
function* tpt(t, { payload: e, meta: n }) {
  const r = new Xi(e);
  try {
    yield* Me({ context: t.store, fn: "setPortForwardingRule" }, r);
  } catch {
    yield* D(SE.failure({ code: SE.failure.toString() }, n.requestId));
    return;
  }
  yield* D(SE.success(r, n.requestId)),
    yield* D(ss({ ...rd(t) })),
    yield* D($t.request("does-not-block-ui"));
}
function* npt(t, { payload: e, meta: n }) {
  try {
    for (const r of e)
      yield* Me([t.store, t.store.deletePortForwardingRule], new Xi(r));
  } catch {
    yield* D(yE.failure({ code: yE.failure.toString() }, n.requestId));
    return;
  }
  yield* D(yE.success(void 0, n.requestId)),
    yield* D(ss({ ...rd(t) })),
    yield* D($t.request("does-not-block-ui"));
}
function* spt(t, { meta: e }) {
  try {
    const n = yield* Me({
      context: t.store,
      fn: "getOverLimitedHistoryEntities",
    });
    yield* Me([t.store, t.store.bulkDeleteHistoryEntities], n),
      yield* D(xy.success(n, e.requestId));
  } catch {
    yield* D(xy.failure({ code: xy.failure.toString() }, e.requestId));
  }
}
function* rpt(t) {
  const e = yield* Pe(H8e);
  yield* Me({ context: t.store, fn: "cleanUpHistory" }, e);
}
function* apt(t, { meta: e }) {
  try {
    const n = yield* Me({ context: t.store, fn: "getHistoryEntities" });
    yield* D(ss({ histories: Udt(n) })),
      yield* Jr(rpt, t),
      yield* D(xi.success(void 0, e.requestId));
  } catch {
    yield* D(xi.failure({ code: xi.failure.toString() }, e.requestId));
  }
}
function* ipt(t, { payload: e, meta: n }) {
  var s;
  const r = yield* Pe(X8e, (s = e.host) == null ? void 0 : s.local_id),
    a = new O2({ ...r, ...e });
  try {
    yield* Me({ context: t.store, fn: "setHostLatestActivity" }, a),
      yield* D(bE.success(void 0, n.requestId)),
      yield* D(ss({ ...wl(t), ...JG(t), ...DI(t) }));
  } catch {
    yield* D(bE.failure({ code: bE.failure.toString() }, n.requestId));
  }
}
function* opt(t, { payload: e, meta: n }) {
  try {
    yield* Me({ context: t.store, fn: "deleteHostLatestActivity" }, e),
      yield* D(ss({ ...wl(t), ...JG(t), ...DI(t) })),
      yield* D(EE.success(void 0, n.requestId));
  } catch {
    yield* D(EE.failure({ code: EE.failure.toString() }, n.requestId));
  }
}
async function f_(t, e) {
  const n = new Fs(e);
  n.stripEmptyIdentities();
  const r = t.store.getGroup({ local_id: n.local_id }, !0) || {
    local_id: void 0,
    is_shared: !1,
  };
  return (
    await t.store.setGroup(n),
    { savedGroup: n, oldGroup: r.local_id ? new Fs(r) : null }
  );
}
async function m_(t, e) {
  const n = new Tn(e);
  n.touch();
  const r = t.store.getHost({ local_id: n.local_id }, !0) || {
    is_shared: !1,
    encrypted_with: null,
    local_id: void 0,
  };
  return (
    await t.store.setHost(n),
    { savedHost: n, oldHost: r.local_id ? new Tn(r) : null }
  );
}
function h0(t) {
  var e, n;
  return !!(
    ((e = t.ssh_config) != null &&
      e.identity &&
      !t.ssh_config.identity.local_id) ||
    ((n = t.telnet_config) != null &&
      n.identity &&
      !t.telnet_config.identity.local_id)
  );
}
function f0(t, e) {
  var n, r, a, s, i, o, u, l;
  return (
    ((r =
      (n = e == null ? void 0 : e.ssh_config) == null ? void 0 : n.identity) ==
    null
      ? void 0
      : r.local_id) !==
      ((s = (a = t.ssh_config) == null ? void 0 : a.identity) == null
        ? void 0
        : s.local_id) ||
    ((o =
      (i = e == null ? void 0 : e.telnet_config) == null
        ? void 0
        : i.identity) == null
      ? void 0
      : o.local_id) !==
      ((l = (u = t.telnet_config) == null ? void 0 : u.identity) == null
        ? void 0
        : l.local_id)
  );
}
function m0(t, e) {
  var n, r, a, s, i, o, u, l, c, d, p, m, y, I, O, g, C, H;
  return (n = t.ssh_config) != null &&
    n.identity &&
    !t.ssh_config.identity.local_id
    ? (r = t.ssh_config) == null
      ? void 0
      : r.identity
    : (a = t.telnet_config) != null &&
      a.identity &&
      !t.telnet_config.identity.local_id
    ? (s = t.telnet_config) == null
      ? void 0
      : s.identity
    : (o = (i = t.ssh_config) == null ? void 0 : i.identity) != null &&
      o.local_id &&
      ((l =
        (u = e == null ? void 0 : e.ssh_config) == null
          ? void 0
          : u.identity) == null
        ? void 0
        : l.local_id) !==
        ((d = (c = t.ssh_config) == null ? void 0 : c.identity) == null
          ? void 0
          : d.local_id)
    ? (p = t.ssh_config) == null
      ? void 0
      : p.identity
    : (y = (m = t.telnet_config) == null ? void 0 : m.identity) != null &&
      y.local_id &&
      ((O =
        (I = e == null ? void 0 : e.telnet_config) == null
          ? void 0
          : I.identity) == null
        ? void 0
        : O.local_id) !==
        ((C = (g = t.telnet_config) == null ? void 0 : g.identity) == null
          ? void 0
          : C.local_id)
    ? (H = t.telnet_config) == null
      ? void 0
      : H.identity
    : null;
}
function* upt(t, e) {
  const n = new Tn(e),
    { group: r } = n;
  if (!r) throw new Error("Couldn't save host without group");
  const { savedGroup: a, oldGroup: s } = yield* Me(f_, t, r);
  (h0(a) || f0(a, s)) &&
    (yield* D(
      Mg({
        isShared: a.is_shared,
        encryptedWith: a.encrypted_with,
        identitySource: "Group Settings",
        identity: m0(a, s),
      })
    )),
    yield* D(ss({ ...um(t), ...wl(t), ...rd(t) })),
    (n.group = a);
  const { savedHost: i, oldHost: o } = yield* Me(m_, t, n);
  (h0(i) || f0(i, o)) &&
    (yield* D(
      Mg({
        isShared: i.is_shared,
        encryptedWith: i.encrypted_with,
        identitySource: "Host Settings",
        identity: m0(i, o),
      })
    )),
    yield* D(ss({ ...wl(t), ...rd(t), ...um(t) }));
  const u = yield* Pe(ia);
  return yield* D(Ru(ku(t, u))), i;
}
function* lpt(t, { payload: e, meta: n }) {
  try {
    const r = yield* Me(upt, t, e);
    yield* D(ky.success(r, n.requestId));
  } catch {
    yield* D(ky.failure({ code: ky.failure.toString() }, n.requestId));
  }
}
function* cpt(t, { payload: { hosts: e, groups: n }, meta: r }) {
  try {
    for (const i of n.map((o) => new Fs(o)))
      yield* Me({ context: t.store, fn: "deleteGroup" }, i),
        i.cloud_config && (yield* D(KP(i))),
        yield* D(
          xX({
            isShared: i.is_shared,
            id: i.id,
            encryptedWith: i.encrypted_with,
          })
        );
    const a = e.map((i) => new Tn(i));
    yield* Me({ context: t.store, fn: "deleteHosts" }, a);
    for (const i of a)
      yield* D(
        HX({
          isShared: i.is_shared,
          encryptedWith: i.encrypted_with,
          hostID: i.id || -1,
        })
      );
    yield* D(xu(t));
    const s = yield* Pe(ia);
    yield* D(Ru(ku(t, s))),
      yield* D($t.request("does-not-block-ui")),
      yield* D(vE.success(void 0, r.requestId));
  } catch {
    yield* D(vE.failure({ code: vE.failure.toString() }, r.requestId));
  }
}
function* dpt(t, { payload: e, meta: n }) {
  try {
    const { groups: r, hosts: a, targetGroup: s, cancelable: i } = e,
      o = {
        id: Ei.v4(),
        createdAt: new Date(),
        variant: "process",
        ...Gdt(r, a, s),
      };
    yield* GI({ payload: o, cancelable: i });
    for (const l of a) yield* Me(m_, t, new Tn({ ...l, group: s }));
    for (const l of r) yield* Me(f_, t, new Fs({ ...l, parent_group: s }));
    yield* D(xu(t));
    const u = yield* Pe(ia);
    yield* D(Ru(ku(t, u))),
      yield* D($t.request("does-not-block-ui")),
      yield* D(TE.success(void 0, n.requestId));
  } catch {
    yield* D(TE.failure({ code: TE.failure.toString() }, n.requestId));
  }
}
function* ppt() {
  yield* D($t.request("does-not-block-ui"));
}
function* hpt(t) {
  yield* Gn([
    $e($t.success, AV, t),
    $e(df.success, AV, t),
    $e(ky.request, lpt, t),
    Pr(ky.success, ppt),
    $e(vE.request, cpt, t),
    $e(TE.request, dpt, t),
    $e(Ny.request, Kdt, t),
    $e(gh.request, Bdt, t),
    $e(iH.request, Vdt, t),
    $e(Hy.request, jdt, t),
    $e(Tse, qdt, t),
    $e(oH.request, Qdt, t),
    $e(gE.request, Jdt, t),
    $e(SE.request, tpt, t),
    $e(yE.request, npt, t),
    zt(zUe, function* (n) {
      const r = new hp({ ...n, active: !1 });
      yield* Me({ context: t.store, fn: "updateHistoryEntity" }, r),
        yield* D(xi.request()),
        yield* D(xy.request()),
        yield* D($t.request("does-not-block-ui"));
    }),
    zt(jUe, function* (n) {
      return yield* Me({ context: t.store, fn: "setHistory" }, n);
    }),
    zt($Ue, function* (n) {
      const r = yield* Pe(dw);
      yield* Me({ context: t.store, fn: "deleteHistoryEntity" }, n),
        yield* D(xi.request()),
        yield* D(go.request()),
        yield* D(XO({ clearAll: "no", history: r }));
    }),
    $e(xi.request, apt, t),
    zt(WUe, function* () {
      const n = yield* Pe(dw),
        r = { totalCount: 0, isNeedUpdate: !1, shownCount: xm };
      if (
        ((yield* Pe(bu)) &&
          (yield* Me({ context: t.store, fn: "clearAllInactiveHistories" })),
        yield* D(xi.request()),
        yield* Pe(bu))
      )
        try {
          yield* Me({ context: t, fn: "clearHistory" });
        } catch (a) {
          _r.ignorableAPIError(a) ||
            tt.exception("Failed to call clear history API", a);
        }
      yield* Me({ context: t.store, fn: "clearAllInactiveHistories" }),
        yield* D(km(r)),
        yield* D(XO({ clearAll: "yes", history: n }));
    }),
    $e(xy.request, spt, t),
    $e(bE.request, ipt, t),
    $e(EE.request, opt, t),
    $e(KUe, ({ payload: e }) => Zdt(t, new gl(e))),
    $e(BUe, ({ payload: e }) => sme(t, new gl(e))),
    $e(VUe, ept, t),
    $e(nH.request, fpt, t),
    zt(f6, async () => t.store.hasSyncableEntities()),
    $e(df.request, mpt, t),
    $e(df.success, rme, t),
  ]);
}
function* fpt(t, { payload: e, meta: n }) {
  try {
    const r = yield* ln(us),
      { user_id: a } = r.account,
      { encryption_schema: s } = HP(r);
    yield* Me({ context: t, fn: "tryFixSharingSetup" }, a, e, s),
      yield* D(nH.success(void 0, n.requestId));
  } catch (r) {
    tt.exception(
      `Enabling sharing failed, error: ${r == null ? void 0 : r.constructor}`,
      r
    );
    const a = Tde(r.responseJSON);
    yield* D(nH.failure(a, n.requestId));
  }
}
function* mpt(t, { payload: e, meta: n }) {
  try {
    const { store: r } = t,
      { entities: a } = e,
      s = {
        ...a,
        knownHosts: a.knownHosts.filter((o) => !ame(r.getKnownHosts(), o)),
      },
      i = yield* Me({ context: t.store, fn: "importEntities" }, s, null);
    yield* D(df.success(i, n.requestId));
  } catch {
    yield* D(df.failure({ code: df.failure.toString() }, n.requestId));
  }
}
function* AV(t) {
  yield* rme(t);
  const e = yield* Pe(ia);
  yield* D(Ru(ku(t, e))), yield* D(du.request());
}
function* rme(t) {
  yield* D(xu(t));
}
function xu(t) {
  return ss(Dl(t));
}
function ame(t, e) {
  return t.some((n) => n.isEqual(e));
}
function* Spt({ meta: t }) {
  try {
    const e = yield* Pe(Zi),
      n = yield* Pe(Dp),
      r = yield* Pe(ia),
      a = mdt({ hosts: e, groups: n, editableVaults: r });
    yield* D(du.success(a, t.requestId));
  } catch {
    yield* D(du.failure({ code: du.failure.toString() }, t.requestId));
  }
}
const ypt = ({ entities: t, identity: e, identityPathName: n }) =>
    Object.values(Vv(t, (s) => [s.entity.entityName, s.entity.local_id])).map(
      (s) => {
        if (s.length > 1) {
          const u = s[0].entity;
          return (
            s.forEach((l) => {
              const c = p0[l.path || n];
              Kg(u, c, e);
            }),
            { ...s[0], entity: u }
          );
        }
        const i = s[0].entity,
          o = p0[s[0].path || n];
        return Kg(i, o, e), { ...s[0], entity: i };
      }
    ),
  gpt = ({ mergedEntities: t, hosts: e, groups: n, api: r }) =>
    t.map((a) =>
      a.entity.entityName === "host" &&
      e.find((o) => o.local_id === a.entity.local_id)
        ? m_(r, new Tn(a.entity))
        : n.find((i) => i.local_id === a.entity.local_id)
        ? f_(r, new Fs(a.entity))
        : null
    );
function* vpt(t, { payload: e, meta: n }) {
  try {
    const { data: r, identityPathName: a } = e,
      { identity: s, entities: i } = r,
      o = yield* Pe(Zi),
      u = yield* Pe(Dp),
      l = ypt({ entities: i, identity: s, identityPathName: a }),
      c = gpt({ mergedEntities: l, hosts: o, groups: u, api: t });
    yield* Me(() => Promise.all(c)),
      yield* D(NE.success(s, n.requestId)),
      yield* D(ss(Dl(t)));
    const d = yield* Pe(ia);
    yield* D(Ru(ku(t, d))),
      yield* D(du.request()),
      yield* D($t.request("does-not-block-ui"));
  } catch {
    yield* D(NE.failure({ code: NE.failure.toString() }, n.requestId));
  }
}
function* _pt(t, { payload: e, meta: n }) {
  var r, a, s, i;
  try {
    const { entity: o, identity: u } = e,
      l = new xr({ ...u, is_visible: !1 }).prepareForDuplicate();
    (r = o.ssh_config) != null &&
      r.identity &&
      o.ssh_config.identity.local_id === u.local_id &&
      (o.ssh_config.identity = l),
      (a = o.telnet_config) != null &&
        a.identity &&
        o.telnet_config.identity.local_id === u.local_id &&
        (o.telnet_config.identity = l),
      (i = (s = o.ssh_config) == null ? void 0 : s.proxy) != null &&
        i.identity &&
        o.ssh_config.proxy.identity.local_id === u.local_id &&
        (o.ssh_config.proxy.identity = l),
      o.entityName === "host"
        ? yield* Me(() => m_(t, o))
        : yield* Me(() => f_(t, o)),
      yield* D(RE.success(u, n.requestId)),
      yield* D(ss(Dl(t))),
      yield* D($t.request("does-not-block-ui"));
  } catch {
    yield* D(RE.failure({ code: RE.failure.toString() }, n.requestId));
  }
}
function* bpt(t) {
  yield* Gn([
    Gj(1e3, du.request, Spt),
    $e(NE.request, vpt, t),
    $e(RE.request, _pt, t),
  ]);
}
const Ept = (t, e) => t.id === e.user_id,
  OV = (t) => (e) => ({
    ...(t.find((n) => Ept(n, e)) ?? eF(e)),
    username: e.email,
  }),
  eF = (t) => ({ id: t.user_id, username: t.email, devices: [] }),
  S_ = (t, e) => {
    if (e.user_id == null) return t;
    const n = { ...(t.find((i) => i.id === e.user_id) ?? eF(e)) },
      r = t
        .filter((i) => i.id !== e.user_id)
        .sort((i, o) => (i.id ?? 1 / 0) - (o.id ?? 1 / 0)),
      [a, s] = Go(r, d8e);
    return n_([n, ...a, ...s], "username");
  };
function* y_() {
  const t = yield* Pe(Do),
    e = yield* Pe(_i);
  return t == null || e == null
    ? { user_id: void 0, email: void 0 }
    : { user_id: e, email: t };
}
function* tF(t, e, n) {
  const r = yield* Pe(G2),
    a = yield* Pe(qv);
  rn(r), rn(a);
  const s = yield* y_(),
    i = { user_id: a, email: r },
    o = [OV(t)(i), ...e.map(OV(t)), ...n.map(eF)];
  return S_(o, s).filter((u) => u.username);
}
function* ime(t) {
  const e = yield* y_();
  try {
    const n = yield* ln(Cg),
      r = (n == null ? void 0 : n.results) ?? [];
    yield* D(uI(r));
    const a = yield* ln(Ag),
      s = (a == null ? void 0 : a.results) ?? [];
    return yield* tF(t, r, s);
  } catch {
    return S_(
      t.filter((r) => r.username),
      e
    );
  }
}
const ome = (t) => {
    var e;
    return {
      id: ((e = t.chan_info) == null ? void 0 : e.user_id) ?? 0,
      username: "",
      devices: [t.client ?? ""],
    };
  },
  nF = (t, e) => {
    var n;
    return t.id === ((n = e.chan_info) == null ? void 0 : n.user_id);
  },
  Tpt = (t, e) => t.id === e.id,
  wpt = (t, e) => {
    const n = t.findIndex((r) => nF(r, e));
    return (
      n === -1
        ? t.push(ome(e))
        : (t[n].devices = [...t[n].devices, e.client ?? ""]),
      t
    );
  };
function* Ppt({ payload: t }) {
  const e = yield* Pe(Hm),
    r = Object.values(t).reduce(wpt, []);
  if (r.some((i) => i.username === "")) {
    const i = yield* ime(r);
    yield* D(Qc(i));
    return;
  }
  const a = yield* y_(),
    s = [
      ...r,
      ...e
        .filter((i) => !r.some((o) => Tpt(i, o)))
        .map((i) => ({ ...i, devices: [] })),
    ];
  yield* D(Qc(S_(s, a)));
}
function* Ipt({ payload: t }) {
  const e = xl(yield* Pe(Hm)),
    n = e.findIndex((a) => nF(a, t));
  if (n === -1) {
    e.push(ome(t));
    const a = yield* ime(e);
    yield* D(Qc(a));
    return;
  } else {
    const a = [...e[n].devices, t.client ?? ""];
    e[n].devices = a;
  }
  const r = yield* y_();
  yield* D(Qc(S_(e, r)));
}
function* Cpt({ payload: t }) {
  const e = xl(yield* Pe(Hm)),
    n = e.findIndex((a) => nF(a, t));
  if (n === -1) return;
  {
    const a = e[n].devices.filter((s) => s !== t.client);
    e[n].devices = a;
  }
  const r = yield* y_();
  yield* D(Qc(S_(e, r)));
}
function Apt(t) {
  return new Promise((e, n) => {
    const r = new FileReader();
    (r.onload = () => e(r.result)),
      (r.onerror = () => n(r.error)),
      r.readAsDataURL(t);
  });
}
function* A1(t, e) {
  try {
    const n = yield* Me({ context: t.api, fn: "getUserAvatar" }, e);
    if (n) {
      const r = yield* Me(async () => Apt(n));
      rn(typeof r == "string", "cannot parse avatar"),
        yield* Me(
          { context: t.store, fn: "setTeamMemberAvatar" },
          { id: e, base64: r }
        );
    }
  } catch (n) {
    n.status === 404 &&
      (yield* Me(
        { context: t.store.teamMemberAvatarRepository, fn: "delete" },
        [e]
      ));
  }
}
function* Opt(t, { payload: e }) {
  const n = yield* Pe(_i),
    r = yield* Pe(qv),
    a = e.map(function* (o) {
      yield* A1(t, o.user_id);
    });
  r &&
    a.push(
      (function* () {
        yield* A1(t, r);
      })()
    ),
    n &&
      a.push(
        (function* () {
          yield* A1(t, n);
        })()
      ),
    yield* Gn(a);
  const s = yield* Me({ context: t.store, fn: "getAllTeamMemberAvatars" });
  yield* D(Bue(s));
}
function* Hpt(t, { meta: e }) {
  try {
    const n = yield* Pe(Hm),
      r = yield* Me({ context: t.store, fn: "getAllTeamInvites" }),
      a = yield* Me({ context: t.store, fn: "getAllTeamMembers" }),
      s = yield* Me({ context: t.store, fn: "getAllTeamMemberAvatars" }),
      i = yield* tF(n, a, r);
    yield* D(Qc(i)),
      yield* D(Xd.success({ invites: r, members: a, avatars: s }, e.requestId));
  } catch (n) {
    yield* D(
      Xd.failure(
        { message: n.message, code: Xd.failure.toString() },
        e.requestId
      )
    );
  }
}
function* Npt() {
  try {
    const t = yield* Pe(Hm),
      e = yield* Pe(K2),
      n = yield* Pe(Qi),
      r = yield* tF(t, n, e);
    yield* D(Qc(r));
  } catch (t) {
    tt.exception("Error during refreshing presence effect", t);
  }
}
function* Rpt() {
  yield* D(uI([]));
}
function* kpt(t) {
  yield* Gn([
    $e(kH, Ppt),
    $e(I3, Ipt),
    $e(C3, Cpt),
    $e(uI, Opt, t),
    $e(Xd.request, Hpt, t),
    $e(Vue, Npt),
    $e([Zr.success, Op], Rpt),
  ]);
}
const xpt = (t, e, n) => {
    const r = t[e],
      a = [...t];
    return a.splice(e, 1), a.slice(0, n).concat(r).concat(a.slice(n));
  },
  Vp = (t) => {
    var e;
    return (e = t.onboardings) == null
      ? void 0
      : e.onboardingAttributes.find((n) => n.type === "personal");
  },
  jp = (t) => {
    var e;
    return (e = t.onboardings) == null
      ? void 0
      : e.onboardingAttributes.find((n) => n.type === "team");
  },
  FI = (t, e) => {
    var n, r;
    return !!(
      (r =
        (n = Vp(t)) == null ? void 0 : n.steps.find((a) => a.codename === e)) !=
        null && r.value
    );
  },
  ume = (t, e) => {
    var n, r;
    return !!(
      (r =
        (n = jp(t)) == null ? void 0 : n.steps.find((a) => a.codename === e)) !=
        null && r.value
    );
  },
  Lpt = (t) => t.onboardings.proTrialOnboarding.proTrialCompletedStepsOrder,
  cv = (t) =>
    !!t.onboardings.proTrialOnboarding.userShouldSeeProTrialOnboarding,
  Mpt = (t) => {
    var e;
    return (e = Vp(t)) == null ? void 0 : e.steps;
  },
  lme = (t) => FI(t, "invite_members") || !1,
  cme = (t) => FI(t, "add_second_device") || !1,
  dme = (t) => FI(t, "add_hosts") || !1,
  pme = (t) => FI(t, "connect_to_host") || !1,
  hme = (t) =>
    !!t.onboardings.proTrialOnboarding.proTrialSuccessAnimationFinished,
  sF = (t) => {
    var e;
    return ((e = Vp(t)) == null ? void 0 : e.is_completed) || !1;
  },
  Dpt = (t) => {
    var e;
    return ((e = Vp(t)) == null ? void 0 : e.id) || 0;
  },
  Gpt = (t) => ume(t, "has_invited_members") || !1,
  Fpt = (t) => ume(t, "has_shared_data") || !1,
  rF = (t) => !!t.onboardings.teamOwnerOnboarding.userClosedTeamOnboarding,
  Lu = (t) => !!t.onboardings.teamOwnerOnboarding.userShouldSeeTeamOnboarding,
  UI = (t) => !!t.onboardings.teamOwnerOnboarding.teamSuccessAnimationFinished,
  Upt = (t) => !!t.onboardings.teamOwnerOnboarding.teamEntryAnimationFinished,
  Kpt = (t) =>
    !!t.onboardings.teamOwnerOnboarding.upgradeNowButtonHasActiveMode,
  fme = (t) => {
    var e;
    return (e = jp(t)) == null ? void 0 : e.steps;
  },
  Bpt = (t) => {
    const e = jp(t);
    if (!e) return !1;
    const n = rF(t),
      r = to(t),
      a = xP(t),
      i = !!Qi(t).length,
      u = II(t).some((d) => d.path === E3),
      l = Lu(t);
    return !!(
      !(e != null && e.is_completed) &&
      !l &&
      (!i || !a) &&
      r.length === 0 &&
      u &&
      !n
    );
  },
  Vpt = (t) => {
    const e = fme(t),
      n = UI(t),
      r = xP(t),
      a = Qi(t),
      s = Lu(t),
      i = (e == null ? void 0 : e.every((d) => d.value)) || (!!a.length && r),
      o = to(t),
      l = II(t).some((d) => d.path === E3);
    return !!(e && i && o.length === 0 && s && l && !n);
  },
  jpt = (t) => {
    var u;
    const e = $v(t),
      n = Oa(t),
      r = UI(t),
      a = Lu(t),
      s = rF(t),
      i = sF(t),
      o = t.user.personal_subscription;
    return (
      (i && !o) ||
      (n &&
        e &&
        (a || r || s || ((u = jp(t)) == null ? void 0 : u.is_completed)))
    );
  },
  mme = (t) => {
    const e = K2(t),
      n = Qi(t),
      r = !!n.length && n.some((a) => a.is_access_granted);
    return {
      hasSharedData: xP(t),
      hasInvitedMembers: !!e.length,
      hasJoinedMembers: !!n.length,
      hasGrantedAccess: r,
    };
  };
function aF(t, e) {
  (t instanceof _r && t.status !== 400) || t.status === 0 || tt.exception(e, t);
}
function* zpt(t) {
  yield* $e(
    [
      Zr.success,
      Op,
      $ue,
      Ju.success,
      Wue,
      lp.success,
      C$.success,
      A$.success,
      zue,
    ],
    $pt,
    t
  ),
    yield* $e(kE, Wpt),
    yield* $e(kE, Jpt),
    yield* $e([Zr.success, kE], qpt),
    yield* $e(xi.success, Ypt),
    yield* $e(jJe.request, Xpt, t),
    yield* $e(AX, Qpt),
    yield* $e([Hp, i_], Zpt),
    yield* $e(Nw, iF),
    yield* $e(Nw, oF),
    yield* $e(KJe, eht),
    yield* $e([qn.success, Ju.success], Sme),
    yield* $e(Zr.success, nht),
    yield* $e(us.success, sht);
}
function* $pt(t) {
  var n, r;
  if (!(yield* Pe(Nm)))
    try {
      const s = (yield* Me([t, t.retrieveOnboardingAttributes])).objects;
      if (!s) return;
      const i = s == null ? void 0 : s.find((u) => u.type === "team"),
        o = yield* Pe(Lu);
      if (i && o) {
        const u = yield* Pe(Gpt),
          l = yield* Pe(Fpt),
          c =
            (n = i.steps.find((p) => p.codename === "has_invited_members")) ==
            null
              ? void 0
              : n.value,
          d =
            (r = i.steps.find((p) => p.codename === "has_shared_data")) == null
              ? void 0
              : r.value;
        if (l !== d || u !== c) {
          const p = yield* Pe(mme);
          yield* D(P2(p));
        }
      }
      yield* D(kE(s));
    } catch (a) {
      aF(a, "Getting onboarding data from backend failed");
    }
}
function* Wpt() {
  var u, l;
  const t = yield* Pe($v),
    e = yield* Pe(Ea),
    n = yield* Pe(cv),
    r = yield* Pe(Vp);
  if (!t || e || !r) {
    n && (yield* D(Sf(!1)));
    return;
  }
  const a = yield* Pe(cme),
    s =
      (u =
        r == null
          ? void 0
          : r.steps.find((c) => c.codename === "add_second_device")) == null
        ? void 0
        : u.value,
    i =
      (l =
        r == null
          ? void 0
          : r.steps.find((c) => c.codename === "invite_members")) == null
        ? void 0
        : l.value,
    o = yield* Pe(cv);
  if (
    (!(r != null && r.is_completed) &&
      i &&
      (yield* D(
        jue([
          "add_hosts",
          "connect_to_host",
          "invite_members",
          "add_second_device",
        ])
      )),
    !a && s && o)
  ) {
    const c = yield* Pe(lme);
    yield* D(
      A2({
        onboardingAction: "Install",
        success: "yes",
        remainingSteps: c ? 0 : 1,
      })
    );
  }
}
function* qpt() {
  const t = yield* Pe(cv);
  if (!(yield* Pe(Vp))) {
    t && (yield* D(Sf(!1)));
    return;
  }
  const n = yield* Pe($v),
    r = yield* Pe(Ea),
    a = yield* Pe(hme),
    s = yield* Pe(dme),
    i = yield* Pe(pme),
    o = yield* Pe(sF);
  if (!a && o) {
    yield* Bi(4e3), yield* D(UJe), yield* D(Sf(!1)), yield* D(lI(!0));
    return;
  }
  !o && !a && n && !r && i && s && !t && (yield* D(Sf(!0)));
}
function* Ypt() {
  const t = yield* Pe(cv);
  if (!(yield* Pe(Vp))) {
    t && (yield* D(Sf(!1)));
    return;
  }
  const n = yield* Pe($v),
    r = yield* Pe(cv),
    a = yield* Pe(hme),
    s = yield* Pe(sF);
  if (!n || r || a || s) return;
  const o = (yield* Pe(q8e)).filter((u) => !u.errorMsg).length !== 0;
  !r && n && !s && o && (yield* D(Sf(!0)), yield* D(C2()));
}
function* Xpt(t) {
  try {
    const e = yield* Pe(Lpt),
      n = yield* Pe(lme),
      r = e.indexOf("invite_members");
    if (n) return;
    const a = yield* Pe(Dpt);
    yield* Me(() =>
      t.skipTrialOnboardingInviteStep({
        data: { steps: [{ codename: "invite_members", value: !0 }] },
        id: a,
      })
    ),
      yield* D(zue());
    const s = yield* Pe(Mpt);
    if (!s) return;
    const i = yield* Pe(cme),
      o = s.filter((u) => u.value).length;
    yield* D(
      A2({
        onboardingAction: "Invite",
        success: "no",
        remainingSteps: i ? 0 : 1,
      })
    ),
      yield* D(jue(xpt(e, r, o)));
  } catch (e) {
    aF(e, "Skip invite step failed");
  }
}
function* Qpt() {
  const t = yield* Pe($v),
    e = yield* Pe(pme),
    n = yield* Pe(dme);
  t && e && n && (yield* D(C2()));
}
function* Jpt() {
  const t = yield* Pe(Oa),
    e = yield* Pe(jp),
    n = yield* Pe(Lu);
  if (!e || !t) {
    n && (yield* D(Qf(!1)));
    return;
  }
  yield* iF(), yield* oF(), yield* tht();
}
function* Zpt() {
  if (!(yield* Pe(Oa))) return;
  const e = yield* Pe(UI),
    n = yield* Pe(fme),
    r = yield* Pe(xP),
    a = yield* Pe(Qi),
    s = yield* Pe(Lu);
  ((n == null ? void 0 : n.every((o) => o.value)) || (!!a.length && r)) &&
    !e &&
    !s &&
    (yield* D(A3(!0)), yield* D(lI(!0))),
    yield* iF(),
    yield* oF();
}
function* eht() {
  (yield* Pe(rF)) && (yield* D(Qf(!1)));
}
function* iF() {
  const t = yield* Pe(Lu);
  if (!(yield* Pe(jp))) {
    t && (yield* D(Qf(!1)));
    return;
  }
  const n = yield* Pe(mme),
    r = yield* Pe(Bpt),
    a = yield* Pe(Upt);
  r &&
    (a || (yield* D(P2(n))),
    yield* D(Qf(!0)),
    yield* Bi(3e3),
    yield* D(BJe(!0)));
}
function* oF() {
  if (!(yield* Pe(Oa))) return;
  (yield* Pe(Vpt)) &&
    (yield* Bi(1e3),
    yield* D(A3(!0)),
    yield* Bi(3e3),
    yield* D(Qf(!1)),
    yield* D(lI(!0)));
}
function* Sme() {
  yield* D(VJe());
}
function* tht() {
  const t = yield* Pe(Lu),
    e = yield* Pe(jp);
  if (!e) {
    t && (yield* D(Qf(!1)));
    return;
  }
  const n = yield* Pe(UI);
  e.is_completed && !n && !t && (yield* D(A3(!0)));
}
function* nht() {
  const t = yield* Pe(jpt),
    e = yield* Pe(Kpt),
    n = yield* Pe(Lu);
  t && !n && !e && (yield* D(lI(!0)));
}
function* sht() {
  const t = yield* Pe(Oa),
    e = yield* Pe(Lu);
  !t && e && (yield* Sme(), yield* D(Wue()));
}
const rht = Ze("REQUEST_UPGRADE_TO_MULTIPLE_VAULTS");
function* aht(t) {
  yield* zt(rht, () => t.requestUpgradeToMultipleVaults());
}
const Ub = { PREMIUM_MONTHLY: "9ND1N9PQ5PMZ", PREMIUM_YEARLY: "9NVM51ZW6J00" },
  ch = {
    PREMIUM_MONTHLY: "com.termius.monthly",
    PREMIUM_YEARLY: "com.termius.yearly",
  },
  Kb = {
    SUCCESS: 0,
    ALREADY_PURCHASED: 1,
    NOT_PURCHASED: 2,
    NETWORK_ERROR: 3,
    SERVER_ERROR: 4,
    UNKNOWN_ERROR: "UNKNOWN_ERROR",
    IN_APP_PURCHASES_UNAVAILABLE: "IN_APP_PURCHASES_UNAVAILABLE",
    ITEM_UNAVAILABLE: "ITEM_UNAVAILABLE",
  },
  iht = (t) => {
    switch (String(t)) {
      case "1":
      case "ITEM_UNAVAILABLE":
        return "Item Issue";
      case "2":
        return "User Canceled";
      case "3":
        return "Connection Issue";
      case "IN_APP_PURCHASES_UNAVAILABLE":
        return "Billing Issue";
      default:
        return "Error";
    }
  },
  dh = {
    NOT_PURCHASED: 2,
    NETWORK_ERROR: "-1009",
    USER_CANCELED: "-1012",
    ITEM_UNAVAILABLE: "ITEM_UNAVAILABLE",
    UNKNOWN_ERROR: "UNKNOWN_ERROR",
    IN_APP_PURCHASES_UNAVAILABLE: "IN_APP_PURCHASES_UNAVAILABLE",
  },
  oht = (t) => {
    switch (String(t)) {
      case "ITEM_UNAVAILABLE":
        return "Item Issue";
      case "-1001":
      case "-1003":
      case "-1004":
      case "-1005":
      case "-1009":
        return "Connection Issue";
      case "-1012":
        return "User Canceled";
      case "IN_APP_PURCHASES_UNAVAILABLE":
        return "Billing Issue";
      default:
        return "Error";
    }
  },
  uht = (t) => {
    switch (String(t)) {
      case "1":
      case "ITEM_UNAVAILABLE":
        return "Subscription is unavailable";
      case "-1001":
        return "The connection timed out";
      case "-1003":
        return "The connection failed because the host could not be found";
      case "-1004":
        return "The connection failed because a connection cannot be made to the host";
      case "-1005":
        return "The connection failed because the network connection was lost";
      case "-1009":
      case "3":
        return "The connection failed because the device is not connected to the internet";
      case "-1012":
        return "The connection failed because the user canceled required authentication";
      case "IN_APP_PURCHASES_UNAVAILABLE":
        return "In app purchases are unavailable";
      default:
        return "The secure connection failed for an unknown reason";
    }
  },
  lht = vi("fs");
async function yme(t) {
  const e = await t.bulkAccount();
  return e.personal_subscription == null || e.personal_subscription.is_expired
    ? Nn(new Error("No valid Pro subscription found"))
    : Ga.EMPTY;
}
class cht {
  constructor(e) {
    (this.api = e),
      (this.inAppPurchase = HSe),
      (this.restorePurchase = x1("@termius/restore-mas-purchase")),
      (this.upgradeToProFunnelID = Ei.v4()),
      (this.requestMonthlyPremium = ({
        purchaseLocation: n,
        upgradeToProFunnelID: r,
      }) => {
        (this.purchaseLocation = n),
          (this.upgradeToProFunnelID = r),
          this.requestMacStorePurchase(ch.PREMIUM_MONTHLY, r, n);
      }),
      (this.requestYearlyPremium = ({
        purchaseLocation: n,
        upgradeToProFunnelID: r,
      }) => {
        (this.purchaseLocation = n),
          (this.upgradeToProFunnelID = r),
          this.requestMacStorePurchase(ch.PREMIUM_YEARLY, r, n);
      }),
      (this.requestMacStorePurchase = async (n, r, a) => {
        var s;
        try {
          if (
            (await this.tryRestoreSubscription()).ok &&
            (await yme(this.api.api)).ok
          ) {
            (s = this.delegates) == null || s.onRestoreSuccess();
            return;
          }
          (await this.inAppPurchase.purchaseProduct(n, 1)) ||
            this.handlePurchaseFailed(dh.ITEM_UNAVAILABLE, r, a);
        } catch {
          this.handlePurchaseFailed(dh.UNKNOWN_ERROR, r, a);
        }
      }),
      (this.getProductsPrices = async () => {
        const n = await this.inAppPurchase.getProducts([
            ch.PREMIUM_MONTHLY,
            ch.PREMIUM_YEARLY,
          ]),
          r = n.find((i) => i.productIdentifier === ch.PREMIUM_MONTHLY),
          a = n.find((i) => i.productIdentifier === ch.PREMIUM_YEARLY);
        if (!r || !a) throw new Error("No products");
        const s = (i) => ({ value: i.price, currency: i.currencyCode });
        return { monthly: s(r), yearly: s(a) };
      }),
      (this.handlePurchaseFailed = (n, r, a) => {
        var i;
        this.inAppPurchase.finishAllTransactions();
        const s = n === dh.NOT_PURCHASED || n === dh.USER_CANCELED;
        (i = this.delegates) == null ||
          i.onPurchaseFail({
            userCancel: s,
            purchaseStatus: n,
            reason: oht(n),
            purchaseLocation: a,
            upgradeToProFunnelID: r,
          });
      }),
      (this.validateReceipt = async () => {
        try {
          await this.restorePurchase.refreshReceipt();
        } catch {}
        const n = this.inAppPurchase.getReceiptURL(),
          a = lht.readFileSync(n).toString("base64");
        await this.api.api.validateReceipt({
          platform: "mac-appstore",
          user_id_in_shop: a,
        });
      }),
      (this.requestRestorePremium = async () => {
        var r, a;
        (await this.tryRestoreSubscription()).err
          ? (r = this.delegates) == null || r.onRestoreFail()
          : (a = this.delegates) == null || a.onRestoreSuccess();
      }),
      (this.api = e);
  }
  registerDelegates(e) {
    if (((this.delegates = e), !this.inAppPurchase.canMakePayments())) {
      this.handlePurchaseFailed(
        dh.IN_APP_PURCHASES_UNAVAILABLE,
        this.upgradeToProFunnelID,
        this.purchaseLocation
      );
      return;
    }
    this.inAppPurchase.finishAllTransactions(),
      this.inAppPurchase.on("transactions-updated", (n, r) => {
        if (!Array.isArray(r)) return;
        const a = r.filter((i) => i.transactionState === "restored"),
          s = L6(r, a);
        a.length && s.push(a[0]),
          s.forEach(async (i) => {
            var o, u, l;
            switch (i.transactionState) {
              case "purchased": {
                this.inAppPurchase.finishTransactionByDate(i.transactionDate);
                try {
                  await this.validateReceipt(),
                    (o = this.delegates) == null || o.onPurchaseSuccess(),
                    this.inAppPurchase.finishAllTransactions();
                } catch {
                  this.handlePurchaseFailed(
                    dh.UNKNOWN_ERROR,
                    this.upgradeToProFunnelID,
                    this.purchaseLocation
                  );
                }
                break;
              }
              case "failed":
                this.inAppPurchase.finishTransactionByDate(i.transactionDate),
                  this.handlePurchaseFailed(
                    i.errorCode,
                    this.upgradeToProFunnelID,
                    this.purchaseLocation
                  );
                break;
              case "restored":
                this.inAppPurchase.finishTransactionByDate(i.transactionDate);
                try {
                  await this.validateReceipt(),
                    (u = this.delegates) == null || u.onRestoreSuccess();
                } catch {
                  (l = this.delegates) == null || l.onRestoreFail();
                } finally {
                  this.inAppPurchase.finishAllTransactions();
                }
                break;
            }
          });
      });
  }
  async tryRestoreSubscription() {
    try {
      return await this.validateReceipt(), Ga.EMPTY;
    } catch {
      return await this.tryRestoreFromCompletedTransactions();
    } finally {
      this.inAppPurchase.finishAllTransactions();
    }
  }
  async tryRestoreFromCompletedTransactions() {
    try {
      return (
        await this.restorePurchase.restoreCompletedTransactions(),
        await this.validateReceipt(),
        Ga.EMPTY
      );
    } catch (e) {
      return Nn(e);
    }
  }
}
const dht = ({ purchases: t }) => t;
var pht =
    /^(?:([-+]{1}) ?)?(?:([A-Z]{3}) ?)?(?:([^\d ]+?) ?)?(((?:\d{1,3}([,. ’'\u00A0\u202F]))*?\d{1,})(([,.])\d{1,2})?)(?: ?([^\d]+?))??(?: ?([A-Z]{3}))?$/,
  hht = /^\d{1,3}([,. ’'\u00A0\u202F]\d{3})*$/,
  fht = /^\d{1,2}(,\d{2})*(,\d{3})?$/,
  mht = function (e) {
    if (!e || !e.match) return null;
    e = e.trim();
    var n = e.match(pht);
    if (!n) return null;
    var r = n[6] || "",
      a = n[8] || "";
    if (r === a && a) return null;
    var s = n[1] === "-" ? "-" + n[5] : n[5];
    if (r && !n[5].match(hht) && !n[5].match(fht)) return null;
    var i = n[4];
    if (!i) return null;
    r && (i = i.replace(RegExp("\\" + r, "g"), "")),
      a && (i = i.replace(a, "."));
    var o = n[1] === "-" ? i * -1 : +i;
    return typeof o != "number" || isNaN(o)
      ? null
      : {
          raw: e,
          value: o,
          integer: s || "",
          decimals: n[7] || "",
          currency: n[2] || n[10] || "",
          symbol: n[3] || n[9] || "",
          decimalSeparator: a,
          groupSeparator: r,
          sign: n[1] || "",
        };
  };
const Sht = Lo(mht);
class yht {
  constructor(e) {
    (this.api = e),
      (this.registerDelegates = (n) => {
        this.delegates = n;
        const r = NSe().getNativeWindowHandle(),
          a = require("@termius/windows-iap-bridge");
        (this.winContext = new a.StoreContext()), this.winContext.initialize(r);
      }),
      (this.requestMonthlyPremium = ({
        purchaseLocation: n,
        upgradeToProFunnelID: r,
      }) => {
        this.requestWinStorePurchase(Ub.PREMIUM_MONTHLY, r, n);
      }),
      (this.requestYearlyPremium = ({
        purchaseLocation: n,
        upgradeToProFunnelID: r,
      }) => {
        this.requestWinStorePurchase(Ub.PREMIUM_YEARLY, r, n);
      }),
      (this.requestWinStorePurchase = async (n, r, a) => {
        var s;
        try {
          if (
            (await this.tryRestoreSubscription()).ok &&
            (await yme(this.api.api)).ok
          ) {
            (s = this.delegates) == null || s.onRestoreSuccess();
            return;
          }
          const { service_ticket: o } =
            await this.api.api.getWindowsServiceTicket();
          this.winContext.requestPurchaseAsync(
            n,
            "Termius Premium Subscription",
            (u, l) => {
              const { status: c } = l;
              l.status === Kb.SUCCESS || (l && !c)
                ? this.confirmSuccessedWinStorePurchase(o, r, a)
                : this.handlePurchaseFailed(c, r, a);
            }
          );
        } catch {
          this.handlePurchaseFailed(Kb.UNKNOWN_ERROR, r, a);
        }
      }),
      (this.confirmSuccessedWinStorePurchase = async (n, r, a) => {
        var s;
        try {
          const i = await this.getReceipt(n);
          await this.validateReceipt(i),
            (s = this.delegates) == null || s.onPurchaseSuccess();
        } catch {
          this.handleConfirmFailed(a, r);
        }
      }),
      (this.handleConfirmFailed = async (n, r) => {
        var a;
        try {
          const { service_ticket: s } =
              await this.api.api.getWindowsServiceTicket(),
            i = await this.getReceipt(s);
          await this.validateReceipt(i),
            (a = this.delegates) == null || a.onPurchaseSuccess();
        } catch {
          this.handlePurchaseFailed(Kb.UNKNOWN_ERROR, r, n);
        }
      }),
      (this.getReceipt = async (n) =>
        new Promise((r, a) => {
          try {
            const s = this.api.settings.getDeprecatedUserStr();
            this.winContext.getCustomerPurchaseIdAsync(n, s, async (i, o) => {
              o ? r(o) : a();
            });
          } catch {
            a();
          }
        })),
      (this.validateReceipt = async (n) => {
        await this.api.api.validateReceipt({
          platform: "microsoft-store",
          user_id_in_shop: n,
        });
      }),
      (this.requestRestorePremium = async () => {
        var r, a;
        (await this.tryRestoreSubscription()).ok
          ? (r = this.delegates) == null || r.onRestoreSuccess()
          : (a = this.delegates) == null || a.onRestoreFail();
      }),
      (this.getProductsPrices = async () => {
        const n = await new Promise((i) => {
            this.winContext.getAssociatedStoreProductsAsync(
              ["subscription"],
              (o, u) => {
                i(u);
              }
            );
          }),
          r = ({ price: i }) => {
            const o = Sht(i.formattedRecurrencePrice);
            return o != null
              ? { value: o.value, currency: i.currencyCode }
              : vde.yearly;
          },
          a = n[Ub.PREMIUM_MONTHLY],
          s = n[Ub.PREMIUM_YEARLY];
        return { monthly: r(a), yearly: r(s) };
      }),
      (this.handlePurchaseFailed = (n, r, a) => {
        var s;
        (s = this.delegates) == null ||
          s.onPurchaseFail({
            userCancel: n === Kb.NOT_PURCHASED,
            purchaseStatus: n,
            reason: iht(n),
            purchaseLocation: a,
            upgradeToProFunnelID: r,
          });
      }),
      (this.api = e);
  }
  async tryRestoreSubscription() {
    try {
      const { service_ticket: e } =
          await this.api.api.getWindowsServiceTicket(),
        n = await this.getReceipt(e);
      return await this.validateReceipt(n), Ga.EMPTY;
    } catch (e) {
      return Nn(e);
    }
  }
}
const ght = ["ChoosePlanDialog", "ProFeatures"],
  ay = gR();
function* vht(t) {
  yield* D($d.request());
  const e = {
    onPurchaseSuccess: () => ay.put(sX()),
    onPurchaseFail: (n) => ay.put(p2(n)),
    onRestoreSuccess: () => ay.put(h2()),
    onRestoreFail: () => ay.put(rX()),
  };
  if (ls.windowsStore() && ls.ltRelease("10.0.14391")) {
    const n = new yht(t);
    n.registerDelegates(e), yield* D(nw.request()), yield* Jr(HV, n);
  } else if (ls.mas()) {
    const n = new cht(t);
    n.registerDelegates(e), yield* Jr(HV, n);
  } else yield* Jr(Tht);
  yield* Jr(Oht, t), yield* Jr(_ht);
}
function* _ht() {
  for (;;) {
    const t = yield* Zs(ay);
    yield* D(t);
  }
}
function* HV(t) {
  yield* zt(nw, async () => t.getProductsPrices()),
    yield* $e(hP, bht, t),
    yield* $e(fP, Eht, t),
    yield* $e(d2, () => t.requestRestorePremium()),
    yield* D(nw.request());
}
function* bht(
  t,
  { payload: { buyNowButtonLocation: e, upgradeToProFunnelID: n } }
) {
  yield* D(
    Kv({ period: "monthly", buyNowButtonLocation: e, upgradeToProFunnelID: n })
  ),
    t.requestMonthlyPremium({ purchaseLocation: e, upgradeToProFunnelID: n });
}
function* Eht(
  t,
  { payload: { buyNowButtonLocation: e, upgradeToProFunnelID: n } }
) {
  yield* D(
    Kv({ period: "yearly", buyNowButtonLocation: e, upgradeToProFunnelID: n })
  ),
    t.requestYearlyPremium({ purchaseLocation: e, upgradeToProFunnelID: n });
}
function* Tht() {
  yield* Gn([$e(hP, wht), $e(fP, Pht), $e(d2, uF)]);
}
function* uF(t) {
  const e = yield* Pe(Do);
  qE({ username: e, period: t });
}
function* wht({
  payload: { buyNowButtonLocation: t, upgradeToProFunnelID: e },
}) {
  yield* D(
    Kv({ period: "monthly", buyNowButtonLocation: t, upgradeToProFunnelID: e })
  ),
    yield* uF("MONTH");
}
function* Pht({
  payload: { buyNowButtonLocation: t, upgradeToProFunnelID: e },
}) {
  yield* D(
    Kv({ period: "yearly", buyNowButtonLocation: t, upgradeToProFunnelID: e })
  ),
    yield* uF("YEAR");
}
function* Iht({ payload: t }) {
  const e = yield* Pe(dht);
  e.isLoading === "monthly"
    ? yield* D(hP(t))
    : e.isLoading === "yearly" && (yield* D(fP(t)));
}
function* Cht({
  payload: {
    userCancel: t,
    purchaseStatus: e,
    purchaseLocation: n,
    upgradeToProFunnelID: r,
  },
}) {
  if (t) yield* D(iX());
  else {
    const a = `Error ${e}: ${uht(e)}`;
    yield* cu({
      dialog: "PurchaseFailedDialog",
      target: "all-windows",
      props: { message: a, purchaseLocation: n, upgradeToProFunnelID: r },
    });
  }
}
function* Aht(t, { meta: e }) {
  const n = yield* Pe(Do);
  try {
    const [r] = yield* Of([
      Me(() => t.api.generateStripeCheckoutUrl()),
      Bi(3e3, null),
    ]);
    if (r == null) {
      qE({ username: n }), yield* D(aE.success(!1, e.requestId));
      return;
    }
    const a = new URL(r.url).host === "checkout.stripe.com";
    a ? br({ title: "Billing", url: r.url }) : qE({ username: n }),
      yield* D(aE.success(a, e.requestId));
  } catch {
    qE({ username: n }), yield* D(aE.success(!1, e.requestId));
  }
}
function* Oht(t) {
  yield* Gn([
    $e(sX, NV),
    $e(h2, NV),
    $e(HMe, Iht),
    $e(p2.toString(), Cht),
    $e(aE.request, Aht, t),
  ]);
}
function* NV() {
  try {
    yield* ln(us);
  } catch {
  } finally {
    yield* D(aX());
  }
}
function* Hht(t, { meta: e }) {
  try {
    const n = ls.mas() || (ls.windowsStore() && ls.ltRelease("10.0.14391")),
      r = yield* Me(() => t.api.getPlansPrices()),
      { SINGLE: a, TEAM: s, TEAM_BUSINESS: i } = r,
      o = {
        pro: n
          ? void 0
          : {
              monthly: { value: a.MONTH.USD, currency: "USD" },
              yearly: { value: a.YEAR.USD, currency: "USD" },
            },
        team: {
          monthly: { value: s.MONTH.USD, currency: "USD" },
          yearly: { value: s.YEAR.USD, currency: "USD" },
        },
        business: {
          monthly: { value: i.MONTH.USD, currency: "USD" },
          yearly: { value: i.YEAR.USD, currency: "USD" },
        },
      };
    yield* D($d.success(o, e.requestId));
  } catch (n) {
    yield* D($d.failure({ code: $d.failure.toString() }, e.requestId)),
      aF(n, "Updating prices from backend failed");
  }
}
function* Nht() {
  (yield* Pe(to)).some(([n, r]) => ght.includes(r.name)) &&
    (yield* D($d.request));
}
const gme = k("OPEN_LIVE_TERMINAL"),
  Rht = k("OPEN_SHARED_HOST"),
  kht = k("OPEN_SSH_HOST"),
  KI = k("OPEN_CONNECTIONS"),
  xht = k("OPEN_CONNECTIONS_FROM_DEEPLINK");
k("OPEN_TERMINAL_NEW_IDENTITY_FORM");
k("OPEN_LIVE_TERMINAL_DEEPLINK");
const Lht = new Map();
function tS(t) {
  return Dg(t) ? t.realtimeCollaboration.connections.map : Lht;
}
const Mht = new Map();
function vme(t) {
  return Dg(t) ? t.realtimeCollaboration.connectionRequests.map : Mht;
}
Nt(tS, (t, e) => e, _me);
Nt(tS, (t) => (e) => _me(t, e));
function _me(t, e) {
  return e.id && e.is_shared
    ? Object.entries(
        Vv(
          [...t.values()].filter((n) => n.hostId === e.id),
          "owner"
        )
      ).map(([n, r]) => [Number(n), r])
    : [];
}
Nt(vme, (t) => (e) => Dht(t, e));
function Dht(t, e) {
  return new Map(Array.from(t).filter(([n, r]) => r.hostId === e.id));
}
function Ght(t) {
  if (_P.isValidColorSchemeName(t)) return t;
  throw new Error("Invalid color scheme");
}
function WS(t, e, n) {
  const r = t.get(e);
  if (r == null || r === "") throw new Error(n);
  return decodeURIComponent(r);
}
function Fht(t) {
  const e = "Cannot open live terminal. Missing arguments",
    n = t.hash.substr(1),
    r = new URLSearchParams(n),
    a = WS(r, "id", e),
    s = Ght(WS(r, "scheme", e)),
    i = WS(r, "pwd", e),
    o = WS(r, "title", e),
    u = WS(r, "connectionId", e);
  return { id: a, color_scheme: s, password: i, connectionId: u, title: o };
}
function bme(t, e) {
  if (!t.address || !t.port)
    throw new Error("Can't create connecation without necessary fields");
  return new bP({
    protocol: e,
    quick: !0,
    host: new Tn({
      address: t.address,
      label: t.label ?? "",
      os_name: t.os ?? null,
      ssh_config: new Xs({
        port: t.port,
        identity: new xr({ is_visible: !1, username: t.username }),
      }),
    }),
  });
}
function* Uht() {
  yield* Zs(oI);
  let t = null;
  (yield* Pe(Dg)) && (t = yield* K1(RV)),
    yield* Pr([us.success, qn.success, Zr.success], n);
  function* n() {
    const r = yield* Pe(Dg);
    if (r && t == null) {
      (t = yield* K1(RV)), yield* D(k3());
      return;
    }
    !r && t != null && (yield* I0(t), (t = null), yield* D(x3()));
  }
}
function* RV() {
  yield* $e(I3, Kht),
    yield* $e(C3, Bht),
    yield* $e(sUe, Vht),
    yield* $e(rUe, jht),
    yield* $e(WX, zht),
    yield* $e(qX, $ht),
    yield* $e(zX, Wht),
    yield* $e(aUe, qht),
    yield* $e($X, Yht),
    yield* $e(Que, Xht),
    yield* $e(i_, Qht);
}
function* Kht() {
  const t = yield* Pe(_i),
    n = [...(yield* Pe(tS)).values()].filter(
      (r) => r.owner === t && r.ownerDeviceToken === Yc.token
    );
  yield* D(md({ type: "SHARE_REALTIME_COLLABORATION_STATE", payload: n }));
}
function* Bht({ payload: t }) {
  var n;
  const e = (n = t.chan_info) == null ? void 0 : n.user_id;
  e && (yield* D(Xue(e)));
}
function* Vht({ payload: t }) {
  const e = yield* Pe(_i);
  if (!e) return;
  const { connection: n, windowId: r, terminal: a } = t,
    { host: s, protocol: i } = n;
  i !== "stream" &&
    s.id &&
    s.is_shared &&
    (yield* D(
      md({
        type: "TEAM_TERMINAL_SESSION_STARTED",
        payload: {
          userId: e,
          hostId: s.id,
          connectionId: n.id,
          ownerDeviceToken: Yc.token,
          windowId: r,
          connectionParams: {
            terminalTitle: a ? a.title : "",
            totalViewersCount: 0,
            allowViewersInput: !1,
          },
        },
      })
    ));
}
function* jht({ payload: t }) {
  const { host: e, protocol: n, id: r } = t;
  n !== "stream" && e.is_shared && (yield* lF(r));
}
function* zht({ payload: t }) {
  const e = yield* Pe(Hm),
    { connectionID: n, currentViewers: r, userId: a } = t;
  if ((a || a === 0) && e.find((o) => o.id === a)) {
    const o = { userId: a, connectionId: n, totalViewersCount: r };
    yield* D(H3(o)),
      yield* D(md({ type: "JOIN_TEAM_TERMINAL_SESSION", payload: o }));
  } else
    yield* BI({ connectionId: n, connectionParams: { totalViewersCount: r } });
}
function* $ht({ payload: t }) {
  const { connectionID: e, currentViewers: n, userId: r } = t;
  if (r) {
    const a = { userId: r, connectionId: e, totalViewersCount: n };
    yield* D(N3(a)),
      yield* D(md({ type: "LEAVE_TEAM_TERMINAL_SESSION", payload: a }));
  } else
    yield* BI({ connectionId: e, connectionParams: { totalViewersCount: n } });
}
function* Wht({ payload: t }) {
  const { connectionID: e } = t;
  (yield* Pe(tS)).get(e) && (yield* lF(e));
}
function* qht({ payload: t }) {
  var r;
  const { connection: e, title: n } = t;
  (r = e.host) != null &&
    r.is_shared &&
    e.protocol !== "stream" &&
    (yield* BI({ connectionId: e.id, connectionParams: { terminalTitle: n } }));
}
function* Yht({ payload: t }) {
  const { connectionID: e, sharedTerminalPermissions: n } = t;
  yield* BI({
    connectionId: e,
    connectionParams: { allowViewersInput: n === "Input" },
  });
}
function* Xht({ payload: t }) {
  var r;
  const e = yield* ln(cZe),
    n = yield* Pe(vme);
  if (e && n.has(t.id)) {
    const { connectionId: a, title: s, ...i } = Fht(new URL(t.url)),
      u = (yield* Pe(tS)).get(a),
      c =
        ((r = u == null ? void 0 : u.params) == null
          ? void 0
          : r.terminalTitle) || s;
    yield* D(
      gme({
        windowId: e,
        connectionOrigin: "Collaboration Context Menu",
        connectionId: a,
        title: c,
        ...i,
      })
    ),
      yield* D(Jue(t.id));
  }
}
function* Qht({ payload: t }) {
  const e = yield* Pe(_i),
    r = [...(yield* Pe(tS)).values()].filter(
      (a) =>
        a.owner === e && a.ownerDeviceToken === Yc.token && a.windowId === t
    );
  for (const a of r) yield* lF(a.id);
}
function* BI(t) {
  yield* D(R3(t)),
    yield* D(md({ type: "TEAM_TERMINAL_SESSION_PARAMS_CHANGED", payload: t }));
}
function* lF(t) {
  yield* D(O3(t)),
    yield* D(md({ type: "TEAM_TERMINAL_SESSION_FINISHED", payload: t }));
}
function* Jht(t) {
  yield* zt(A$, function* ({ createTeam: n, teamName: r, invites: a }) {
    n && (yield* ln(lp, { teamName: r, invites: [] })),
      yield* ln(U0, { name: r });
    for (const s of a.filter(({ email: i }) => i)) yield* D(rk.request(s));
  }),
    yield* $e(K0, Nht),
    yield* $e($d.request, Hht, t);
}
const Zht = Xe.object({ address: Xe.string(), port: Xe.number() }),
  eft = Xe.any(),
  tft = Xe.any(),
  nft = Xe.any(),
  sft = Xe.any(),
  rft = Xe.any(),
  aft = Xe.any(),
  ift = Xe.any(),
  oft = Xe.any(),
  uft = Xe.any(),
  lft = Xe.any(),
  cft = Xe.object({
    id: Xe.string().optional(),
    protocol: eft.optional().nullable(),
    host: tft.optional(),
    chainedHostOverrides: Xe.union([Zht, Xe.undefined()]).optional(),
    shellPath: Xe.string().optional().nullable(),
    sshKnownHosts: Xe.array(Xe.string()).optional(),
    keepaliveInterval: Xe.number().optional().nullable(),
    errorMsg: Xe.string().optional().nullable(),
    connectedAt: Xe.number().optional().nullable(),
    delegate: nft.optional().nullable(),
    quick: Xe.boolean().optional(),
    abortController: lft.optional(),
    saveAsHost: Xe.boolean().optional(),
    analyticsHelper: sft.optional().nullable(),
    stream: rft.optional(),
    featureSet: aft.optional(),
    sessionLogData: ift.optional().nullable(),
    sessionLogAnalytics: oft.optional(),
    serialOptions: uft.optional(),
    isDetectOSEnabled: Xe.boolean().optional(),
    colorSchemeName: Xe.string().optional(),
  }),
  dft = Xe.string().optional(),
  pft = Xe.union([
    Xe.literal("History"),
    Xe.literal("SFTP Screen"),
    Xe.literal("Hosts Screen"),
    Xe.literal("Port Forwarding Screen"),
    Xe.literal("Quick Connect"),
    Xe.literal("Duplicated Tab"),
    Xe.literal("Duplicated In New Window"),
    Xe.literal("Connection Flow"),
    Xe.literal("Local Host"),
    Xe.literal("Reconnect Context"),
    Xe.literal("Reconnect Hint"),
    Xe.literal("Live Terminal Link"),
    Xe.literal("Side Menu"),
    Xe.literal("System Top Bar"),
    Xe.literal("Shortcut"),
    Xe.literal("Serial"),
    Xe.literal("Host Details Link"),
    Xe.literal("Edit Host Screen"),
    Xe.literal("Quick Connect In Context Menu"),
    Xe.literal("Connect In Context Menu"),
    Xe.literal("Quick Connect In a New Window Context Menu"),
    Xe.literal("Connect In a New Window Context Menu"),
    Xe.literal("Double Click"),
    Xe.literal("Toolbar On Hosts Screen"),
    Xe.literal("Collaboration Context Menu"),
    Xe.literal("Reconnect Hotkey"),
    Xe.literal("Reconnect Button"),
    Xe.literal("Run Snippet"),
  ]),
  hft = Xe.union([
    Xe.literal("Live Terminal"),
    Xe.literal("Lizhi"),
    Xe.literal("Host Details Deeplink"),
  ]).optional();
Xe.object({
  connection: cft.strict(),
  tabTitle: dft,
  connectionOrigin: pft,
  acquisitionChannel: hft,
});
function cF(t) {
  return {
    ...t,
    abortController: void 0,
    delegate: void 0,
    analyticsHelper: void 0,
    sessionLogAnalytics: void 0,
  };
}
function* fft({ payload: t }) {
  try {
    const { windowId: e, connections: n } = t;
    yield* D(xht({ windowId: e, connections: n }));
  } catch {}
}
function* mft({ payload: t }) {
  try {
    const { windowId: e, ...n } = t,
      a = (yield* Pe(Ea)) ? yield* Pe((i) => Q8e(i, n.id)) : null,
      s = bme(n, "ssh");
    a != null && a.is_shared && ((s.host = a), (s.quick = !1)),
      yield* D(
        KI({
          windowId: e,
          connections: [
            {
              connection: cF(s),
              connectionOrigin: "Host Details Link",
              acquisitionChannel: "Host Details Deeplink",
            },
          ],
        })
      );
  } catch {}
}
function* Sft({ payload: t }) {
  try {
    const { windowId: e, ...n } = t,
      r = bme({ ...n, label: null, os: null, id: null }, "ssh");
    yield* D(
      KI({
        windowId: e,
        connections: [
          {
            connection: cF(r),
            connectionOrigin: "Host Details Link",
            acquisitionChannel: "Host Details Deeplink",
          },
        ],
      })
    );
  } catch {}
}
function* yft() {
  yield* $e(KI, fft), yield* $e(Rht, mft), yield* $e(kht, Sft);
}
function* gft(t, e) {
  const { savedGroup: n, oldGroup: r } = yield* Me(f_, t, e),
    a = n == null ? void 0 : n.cloud_config,
    s = r == null ? void 0 : r.cloud_config;
  if (
    (s && !a && (yield* D(KP(n))),
    (!s && a) ||
      (a &&
        (s == null ? void 0 : s.cloudType) !==
          (a == null ? void 0 : a.cloudType)))
  ) {
    const i = Ig(a.cloudType);
    yield* D(JX({ cloudIntegration: i }));
  }
  return (
    (h0(n) || f0(n, r)) &&
      (yield* D(
        Mg({
          isShared: n.is_shared,
          encryptedWith: n.encrypted_with,
          identitySource: "Group Settings",
          identity: m0(n, r),
        })
      )),
    n
  );
}
function* vft(t, { payload: e, meta: n }) {
  try {
    const r = yield* Me(gft, t, e);
    yield* D(Ry.success(r, n.requestId));
  } catch (r) {
    tt.exception("Cannot save a group", r),
      yield* D(Ry.failure({ code: Ry.failure.toString() }, n.requestId));
  }
}
function* _ft(t, { payload: e }) {
  var n;
  try {
    e != null &&
      e.cloud_config &&
      (n = tk(e.cloud_config)) != null &&
      n.isFulfilled() &&
      (yield* ln(pf, { group: e }));
  } catch {}
  yield* D(ss({ ...um(t), ...wl(t), ...rd(t), ...DI(t), ...Wfe(t) })),
    yield* D(du.request()),
    yield* D($t.request("does-not-block-ui"));
}
function* bft(t) {
  yield* Gn([Pr(Ry.request, vft, t), Pr(Ry.success, _ft, t)]);
}
const Eft = 100;
function* Tft() {
  yield* D(BQ());
}
function* wft(t, { meta: e }) {
  if (!(yield* Pe(bu))) return;
  const r = yield* Pe($2),
    a = yield* Pe(TQ);
  try {
    const s = yield* Me(
      { context: t, fn: "syncHistory" },
      { user: a, limit: r }
    );
    if (!s) {
      yield* D(go.failure({ code: go.failure.toString() }, e.requestId));
      return;
    }
    const { total_count: i } = s,
      o = { totalCount: i };
    yield* D(go.success(o, e.requestId));
  } catch {
    yield* D(go.failure({ code: go.failure.toString() }, e.requestId));
  }
}
function* Pft() {
  (yield* Pe(g5e)) ? yield* D(xi.request()) : yield* D(cw.request());
}
function* Ift({ meta: t }) {
  try {
    yield* D(km({ isNeedUpdate: !0 }));
  } catch {
    yield* D(cw.failure({ code: cw.failure.toString() }, t.requestId));
  }
}
function* Cft() {
  yield* D(km({ isNeedUpdate: !1, shownCount: xm })), yield* D(xi.request());
}
function* Aft() {
  const t = yield* Pe(bu),
    e = yield* Pe(y5e);
  t ? yield* D(Ac.request(e)) : yield* D(km({ shownCount: e }));
}
function* Oft(t, { payload: e, meta: n }) {
  try {
    const r = yield* Pe(TQ),
      { total_count: a } = yield* Me(
        { context: t, fn: "pullHistory" },
        { user: r, limit: e }
      ),
      s = { shownCount: e, totalCount: a };
    yield* D(xi.request()), yield* D(Ac.success(s, n.requestId));
  } catch {
    yield* D(Ac.failure({ code: Ac.failure.toString() }, n.requestId));
  }
}
function* Hft(t, { payload: e, meta: n }) {
  try {
    yield* Me({ context: t.store, fn: "validateSessionLogFileExists" }, e),
      yield* D(Wd.success(void 0, n.requestId));
  } catch {
    yield* D(Wd.failure({ code: Wd.failure.toString() }, n.requestId));
  }
}
function* Nft() {
  yield* Bi(Eft), yield* D(KQ()), yield* D(km({ shownCount: xm }));
}
function* Rft(t) {
  yield* Gn([
    $e(VQ, Nft),
    $e(f5e, Aft),
    Af(go.request, wft, t),
    $e(go.success, Pft),
    $e(KQ, Cft),
    $e(cw.request, Ift),
    $e(Ac.request, Oft, t),
    Pr(Wd.request, Hft, t),
    $e(qn.success, Tft),
  ]);
}
function kft(t) {
  const e = new Map();
  for (const n of t)
    if (!Mft(n) && !xft(n)) {
      const r = e.get(n) ?? 0;
      e.set(n, r + 1);
    }
  return e;
}
function xft(t) {
  return t.length > 4095;
}
const Lft = ["ls", "cd", "mv", "rm", "git", "cp"];
function Mft(t) {
  return Lft.some((e) => t.toLowerCase().startsWith(e));
}
function Dft(t, e, n = 1e4) {
  const r = u3(e, n - t.length),
    a = kft(r.map((s) => s.script));
  return Gft(t, a);
}
function Gft(t, e) {
  const n = Fft(t),
    r = [];
  for (const [a, s] of e) {
    const i = n.get(a);
    r.push(
      i != null ? new aw({ ...i, rating: i.rating + s }) : new aw({ script: a })
    );
  }
  return r;
}
function Fft(t) {
  return new Map(t.map((e) => [e.script, e]).reverse());
}
function Eme(t) {
  return ss({ ...Yfe(t) });
}
function* Uft(t, { payload: e, meta: n }) {
  try {
    const r = yield* Me({ context: t.store, fn: "getHistoryCommands" }),
      a = Dft(r, e);
    yield* Me({ context: t.store, fn: "setHistoryCommands" }, a),
      yield* D(Eme(t)),
      yield* D(wE.success(void 0, n.requestId));
  } catch {
    yield* D(wE.failure({ code: wE.failure.toString() }, n.requestId));
  }
}
function* Kft(t, { meta: e }) {
  try {
    yield* D(ss({ historyCommands: [] })),
      yield* Me({ context: t.store, fn: "deleteHistoryCommands" }),
      yield* D(Eme(t));
  } catch {
    yield* D(PE.failure({ code: PE.failure.toString() }, e.requestId));
    return;
  }
  yield* D(PE.success(void 0, e.requestId));
}
function* Bft(t) {
  yield* Gn([$e(wE.request, Uft, t), $e(PE.request, Kft, t)]);
}
function Tme(t, e) {
  const n = /(.+) copy( (\d+))?\s*$/,
    r = t.match(n),
    a = r != null ? r[1] : t,
    s = e
      .filter((l) => {
        const c = l.match(n);
        return c != null && c[1] === a;
      })
      .sort(),
    i = Ar(s);
  if (i == null) return `${a} copy`;
  const o = i.match(n);
  rn(o != null);
  const u = o[3] != null ? parseInt(o[3], 10) + 1 : 2;
  return `${a} copy ${u}`;
}
function* Vft(t, { payload: e, meta: n }) {
  try {
    const { savedHost: r, oldHost: a } = yield* Me(m_, t, new Tn(e.host));
    (h0(r) || f0(r, a)) &&
      (yield* D(
        Mg({
          isShared: r.is_shared,
          encryptedWith: r.encrypted_with,
          identitySource: "Host Settings",
          identity: m0(r, a),
        })
      ));
    const s = r.clone({ connectionPath: f3(r, t.store) });
    yield* D(Yd.success(s, n.requestId));
  } catch (r) {
    tt.exception("Cannot save a host", r),
      yield* D(Yd.failure({ code: Yd.failure.toString() }, n.requestId));
  }
}
function* jft(t, { payload: e, meta: n }) {
  const r = t.store.getHosts().map((a) => a.displayLabel);
  try {
    for (const a of e) {
      const s = t.store.getHost(a);
      s &&
        (s.prepareForDuplicate(),
        (s.label = Tme(s.displayLabel, r)),
        yield* D(Yd.request({ host: s })),
        r.push(s.label));
    }
    yield* D(_E.success(void 0, n.requestId));
  } catch {
    yield* D(_E.failure({ code: _E.failure.toString() }, n.requestId));
  }
}
function* zft(t) {
  yield* D(ss({ ...wl(t), ...rd(t), ...um(t) })), yield* D(du.request());
  const e = yield* Pe(ia);
  yield* D(Ru(ku(t, e))), yield* D($t.request("does-not-block-ui"));
}
function* $ft(t) {
  try {
    yield* Me({ context: t.store, fn: "resolveDuplicates" }),
      yield* D(ss({ ...um(t), ...wl(t), ...rd(t) }));
  } catch {}
}
function* Wft({ payload: t }) {
  const n = (yield* Pe(Zi)).find((r) => r.local_id === t.host.local_id);
  n && (yield* D(Yd.request({ host: n.clone({ os_name: t.os }) })));
}
function* qft(t) {
  yield* Gn([
    Pr(Yd.request, Vft, t),
    Pr(Yd.success, zft, t),
    $e(_E.request, jft, t),
    $e(wse, Wft),
    Pr(UUe, $ft, t),
  ]);
}
function* Yft(t, { payload: e }) {
  try {
    t.setLocalhost(e);
    const n = Tn.fromLocalhost(e);
    yield* D(PI(n));
  } catch {}
}
function* Xft(t) {
  try {
    const e = t.getLocalhost();
    yield* D(PI(e));
  } catch {}
}
function* Qft(t) {
  try {
    t.removeLocalhost(), yield* D(PI(null));
  } catch {}
}
function* Jft(t) {
  yield* Gn([$e(bst, Yft, t), $e(_de, Xft, t), $e(Est, Qft, t)]);
}
const sT = Ze("GET_PRODUCTBOARD_TOKEN");
function* Zft(t, { meta: e }) {
  try {
    const n = yield* Me({ context: t, fn: "getProductboardToken" });
    yield* D(sT.success(n, e.requestId));
  } catch (n) {
    yield* D(
      sT.failure(
        { status: n.status, message: n.message, code: sT.failure.toString() },
        e.requestId
      )
    );
  }
}
function* emt(t) {
  yield* $e(sT.request, Zft, t);
}
const tmt = k("REDIRECT_TO");
function* nmt() {
  yield* $e(tmt, smt);
}
function smt({ payload: t }) {
  try {
    const e = uat.get(t);
    e == null || e();
  } catch {}
}
const rmt = (t) => t.tags.tags,
  amt = Nt(rmt, (t) => t.map((e) => e.label));
function imt(t) {
  return ss(Dl(t));
}
function* omt(t, { payload: e, meta: n }) {
  try {
    const r = yield* dF(t, e);
    yield* D(dE.success(r, n.requestId)), yield* nS(t);
  } catch {
    yield* D(dE.failure({ code: dE.failure.toString() }, n.requestId));
  }
}
function* dF(t, e) {
  const n = new qa(e);
  if (n.package && !n.package.local_id) {
    n.package = yield* wme(t, n.package);
    const a = (yield* Pe(amt)).find((s) => {
      var i;
      return s === ((i = n.package) == null ? void 0 : i.label);
    });
    yield* D(
      I2({
        isSharedEntity: n.is_shared ? "yes" : "no",
        snippetPackages: t.store.getNumberOfSnippetsPackages(),
        packageOrigin: a ? "Host Tag" : "Snippet Edit Form",
        predefinedSnippetPackageID: n.package.analytics_id,
      })
    );
  }
  return yield* Me({ context: t.store, fn: "setSnippet" }, n), n;
}
function* umt(t, { payload: e, meta: n }) {
  try {
    for (const r of e)
      yield* Me({ context: t.store, fn: "deleteSnippet" }, new qa(r)),
        yield* D(
          E2({ numberOfRemovedSnippets: 1, aianalyticsID: r.aianalyticsID })
        );
  } catch {
    yield* D(pE.failure({ code: pE.failure.toString() }, n.requestId));
    return;
  }
  yield* D(pE.success(void 0, n.requestId)), yield* nS(t);
}
function* lmt(t, { payload: e }) {
  const n = t.store.getSnippets().map((s) => s.displayLabel),
    r = yield* Pe(ia),
    a = e.filter((s) => Py(s, r));
  for (const s of a) {
    const i = t.store.getSnippet(s);
    i &&
      (i == null || i.prepareForDuplicate(),
      (i.label = Tme(i.displayLabel, n)),
      yield* dF(t, i),
      n.push(i.label));
  }
  yield* nS(t);
}
function* cmt(t, { payload: e, meta: n }) {
  try {
    const { snippetsPackage: r, snippets: a, cancelable: s } = e,
      i = {
        id: Ei.v4(),
        createdAt: new Date(),
        variant: "process",
        ...Fdt(a, [], r),
      };
    yield* GI({ payload: i, cancelable: s });
    for (const o of a) yield* dF(t, new qa({ ...o, package: r }));
    yield* D(hE.success(void 0, n.requestId)), yield* nS(t);
  } catch {
    yield* D(hE.failure({ code: hE.failure.toString() }, n.requestId));
  }
}
function dmt(t) {
  switch (t.analytics_id) {
    case "DevOps":
    case "Network Engineer":
    case "System Administration":
      return "Snippet Empty Screen Add Package For Segment";
    case "Top Five Commands From History":
      return "Snippet Empty Screen Top Five Commands Package";
    default:
      return "Package Create Form";
  }
}
function* pmt(t, { payload: e, meta: n }) {
  try {
    const r = yield* wme(t, e);
    yield* D(
      I2({
        isSharedEntity: e.is_shared ? "yes" : "no",
        snippetPackages: t.store.getNumberOfSnippetsPackages(),
        packageOrigin: dmt(e),
        predefinedSnippetPackageID: r.analytics_id,
      })
    ),
      yield* D(fE.success(r, n.requestId)),
      yield* nS(t);
  } catch {
    yield* D(fE.failure({ code: fE.failure.toString() }, n.requestId));
  }
}
function* wme(t, e) {
  const n = new Mo(e);
  return yield* Me({ context: t.store, fn: "setSnippetsPackage" }, n), n;
}
function* hmt(t, { payload: e, meta: n }) {
  try {
    for (const r of e) {
      const a = t.store.getChildrenSnippets(r);
      yield* Me(() => Promise.all(a.map((s) => t.store.deleteSnippet(s)))),
        yield* Me({ context: t.store, fn: "deleteSnippetsPackage" }, new Mo(r)),
        yield* D(
          tQ({
            isSharedEntity: r.is_shared ? "yes" : "no",
            snippetPackages: t.store.getNumberOfSnippetsPackages(),
            snippetPackageID: r.id || -1,
          })
        );
      for (const s of a)
        yield* D(
          E2({ numberOfRemovedSnippets: 1, aianalyticsID: s.aianalyticsID })
        );
    }
  } catch {
    yield* D(mE.failure({ code: mE.failure.toString() }, n.requestId));
    return;
  }
  yield* D(mE.success(void 0, n.requestId)), yield* nS(t);
}
function* fmt(t, { payload: e, meta: n }) {
  try {
    const r = yield* Me(() => t.api.getShellAssistAnswer(e));
    if (r == null) throw new Error("Empty response");
    yield* D(yh.success(r, n.requestId));
  } catch (r) {
    r.message === "Empty response" &&
      (yield* D(
        yh.failure(
          { status: 204, message: r.message, code: yh.failure.toString() },
          n.requestId
        )
      )),
      yield* D(
        yh.failure(
          { status: r.status, message: r.message, code: yh.failure.toString() },
          n.requestId
        )
      );
  }
}
function* mmt(t, { payload: e, meta: n }) {
  try {
    yield* Me(() => t.api.postShellAssistAnswer(e)),
      yield* D(aH.success(void 0, n.requestId));
  } catch (r) {
    yield* D(aH.failure(r, n.requestId));
  }
}
function* nS(t) {
  yield* D(imt(t)), yield* D($t.request("does-not-block-ui"));
}
function* Smt(t) {
  yield* Gn([
    $e(dE.request, omt, t),
    $e(FUe, lmt, t),
    $e(pE.request, umt, t),
    $e(hE.request, cmt, t),
    $e(fE.request, pmt, t),
    $e(mE.request, hmt, t),
    $e(yh.request, fmt, t),
    $e(aH.request, mmt, t),
  ]);
}
const Pme = "TRIAL",
  Ime = "PREMIUM",
  ymt = "TEAM_OWNER",
  gmt = "TRIAL_TEAM_OWNER",
  vmt = "TRIAL_TEAM_OWNER_WITHOUT_MEMBERS_AND_SHARED_GROUPS",
  _mt = "TEAM_MEMBER",
  bmt = "GITHUB_STUDENT",
  Emt = "GITHUB_TEACHER",
  Tmt = "SUBSCRIBED_TRIAL_TEAM_OWNER",
  wmt = "SUBSCRIBED_TRIAL_TEAM_OWNER_WITHOUT_MEMBERS_AND_SHARED_GROUPS",
  Pmt = [Pme, Ime, bmt, Emt],
  Imt = [Pme, Ime],
  Cme = [
    "TeamOwnerSubscriptionExpired",
    "TeamMemberSubscriptionExpired",
    "ChoosePlanDialog",
  ];
function* Cmt() {
  if (yield* Pe(Ame)) return;
  const t = yield* Pe(NP),
    e = yield* Pe(G2);
  if (t)
    switch (t) {
      case Tmt:
      case wmt:
      case gmt:
      case vmt:
        yield* Ome(),
          yield* cu({
            dialog: "ChoosePlanDialog",
            target: "all-windows",
            props: { inProgress: !1 },
          });
        break;
      case ymt:
        yield* cu({
          dialog: "TeamOwnerSubscriptionExpired",
          target: "all-windows",
          props: {},
        });
        break;
      case _mt:
        yield* cu({
          dialog: "TeamMemberSubscriptionExpired",
          target: "all-windows",
          props: { ownerAddress: e || "" },
        });
        break;
    }
}
function* Amt() {
  if (yield* Pe(Ame)) return;
  const t = yield* Pe(NP),
    e = yield* Pe(Do);
  if (t == null) return;
  const n = Pmt.includes(t),
    r = _Q && Imt.includes(t);
  !Ft.wasDeprecatedSubscriptionExpired() &&
    e &&
    n &&
    (yield* Ome(),
    yield* cu({
      dialog: "ChoosePlanDialog",
      target: "all-windows",
      props: { inProgress: !1, proPurchaseOnly: r },
    }));
}
function* Omt() {
  const t = yield* Pe(NP),
    n = (yield* Pe(to)).filter(
      ([i, o]) =>
        Cme.includes(o.name) &&
        o.props.inProgress !== !0 &&
        o.props.entryFromUpgradeNowBtn !== !0
    ),
    r = yield* Pe(wQ),
    a = t === "TEAM_TRIAL_OWNER_AWAITING_DOWNGRADE" && !r,
    s = !!n.length;
  ((!t && s) || a) && (yield* Gn(n.map(([i]) => D(Hp(i)))));
}
function* Hmt() {
  const t = yield* Pe(AP),
    e = yield* Pe(UQ),
    n = (t == null ? void 0 : t.status) === "RETRYING",
    r = (t == null ? void 0 : t.current_period.until) !== e,
    a = yield* Pe(OP),
    i = (yield* Pe(LG)) === "/hosts";
  n &&
    r &&
    i &&
    !a &&
    (yield* D(sQ()),
    yield* cu({ dialog: "GracePeriod", target: "all-windows", props: {} }));
}
function* Nmt() {
  const e = (yield* Pe(to)).filter(
    ([u, l]) => l.name === "GracePeriod" && l.props.inProgress !== !0
  );
  if (!!!e.length) return;
  const r = yield* Pe(AP),
    a = yield* Pe(OP);
  if ((r == null ? void 0 : r.status) === "RETRYING" && !a) return;
  const i = yield* Pe(UQ);
  (r == null ? void 0 : r.current_period.until) !== i &&
    (yield* D(Gz(r == null ? void 0 : r.current_period.until))),
    yield* Gn(e.map(([u]) => D(Hp(u))));
}
function* kV() {
  try {
    yield* Cmt(), yield* Amt(), yield* Hmt();
  } catch {}
  yield* Omt(), yield* Nmt();
}
function* Rmt() {
  yield* Gn([Pr(us.success, kV), Pr(fl, kV)]);
}
function Ame(t) {
  return to(t).some(([e, n]) => {
    var r;
    return (
      Cme.includes(n.name) &&
      !((r = n.props) != null && r.entryFromUpgradeNowBtn)
    );
  });
}
function* Ome() {
  const e = (yield* Pe(to)).filter(([n, r]) => {
    var a;
    return (
      r.name === "ChoosePlanDialog" &&
      ((a = r.props) == null ? void 0 : a.entryFromUpgradeNowBtn)
    );
  });
  e.length !== 0 && (yield* Gn(e.map(([n]) => D(Hp(n)))));
}
function pF(t, e) {
  return t.entityLocalPath === e.entityLocalPath;
}
const dv = Ze("vaults/operation/moveToVault"),
  Hme = Ze("vaults/operation/copyToVault"),
  Nme = Ze("vaults/operation/forecastVaultChange"),
  ZN = Ze("vaults/operation/changeVault"),
  eR = {
    closed: k("vaults/operation/changingVaultWizard/closed"),
    process: k("vaults/operation/changingVaultWizard/process"),
    success: k("vaults/operation/changingVaultWizard/success"),
    select_credentials_mode: k(
      "vaults/operation/changingVaultWizard/select_credentials_mode"
    ),
    resolve_conflicts: k(
      "vaults/operation/changingVaultWizard/resolve_conflicts"
    ),
    resolve_port_forwarding_conflicts: k(
      "vaults/operation/changingVaultWizard/resolve_port_forwarding_conflicts"
    ),
  },
  kmt = Ze("vaults/operation/deleteVault"),
  xmt = Ze("vaults/operation/createVault"),
  Lmt = Ze("vaults/operation/updateVault");
function* Mmt(t) {
  yield* Gn([
    zt(
      qUe,
      function* ({
        shouldShareGroups: n,
        shouldShareHosts: r,
        shouldShareSnippets: a,
        shouldShareCredentials: s,
        entity: i,
      }) {
        const o = yield* c();
        yield* ln(dv, {
          entities: o,
          targetState: {
            ...MMe,
            credentials_mode: s
              ? "credentials_sharing"
              : "no_credentials_sharing",
          },
        });
        const u = yield* Pe(ia);
        yield* D(Ru(ku(t, u))), yield* ln(QQ, "does-not-block-ui");
        function l() {
          return (i == null ? void 0 : i.type) === "snippet"
            ? i.snippet
            : (i == null ? void 0 : i.type) === "host"
            ? i.host
            : (i == null ? void 0 : i.type) === "group"
            ? i.group
            : null;
        }
        function* c() {
          const d = l(),
            p = [];
          if (n) {
            const y = (yield* Pe(Dp)).filter(
              (I) => !I.is_shared && !I.parent_group
            );
            p.push(...y);
          }
          if (r) {
            const y = (yield* Pe(Zi)).filter((I) => !I.is_shared && !I.group);
            p.push(...y);
          }
          if (a) {
            const y = (yield* Pe(j2)).filter((I) => !I.is_shared);
            p.push(...y);
          }
          return d ? [d, ...p.filter((m) => !pF(m, d))] : p;
        }
      }
    ),
    zt(ZIe, function* ({ teamName: n, ...r }) {
      yield* ln(g$, r), yield* ln(lp, { teamName: n, invites: [] });
    }),
    zt(C$, function* ({ createTeam: n, teamName: r, force2fa: a, invites: s }) {
      n && (yield* ln(lp, { teamName: r, invites: [] })),
        yield* ln(U0, { name: r, two_factor_auth: a });
      for (const i of s.filter(({ email: o }) => o)) yield* D(rk.request(i));
    }),
  ]);
}
const Qo = {
    currentScheme: "shortcut_scheme",
    schemes: "shortcut_schemes",
    disabled: "shortcuts_disabled",
  },
  S0 = {
    hotkeysSpecialSymbolsToNames: "isMigratedHotkeysSpecialSymbolsToNames",
    commandPalette: "isMigratedHotkeysCommandPalette",
  },
  Ec = {
    metaKey: { win: "Win", linux: "Super", mac: "Cmd" },
    ctrlKey: { win: "Ctrl", linux: "Ctrl", mac: "Ctrl" },
    altKey: { win: "Alt", linux: "Alt", mac: "Alt" },
    shiftKey: { win: "Shift", linux: "Shift", mac: "Shift" },
  },
  Dmt = {
    shortcuts: [
      {
        shortcut: "meta+c",
        callbackName: "copyFromTerminal",
        actionName: "Copy from Terminal",
        type: "copyFromTerminal",
      },
      {
        shortcut: "meta+v",
        callbackName: "pasteToTerminal",
        actionName: "Paste to Terminal",
        type: "pasteToTerminal",
      },
      {
        shortcut: "meta+a",
        callbackName: "selectAllInTerminal",
        actionName: "Select All in Terminal",
        type: "selectAllInTerminal",
      },
      {
        shortcut: "meta+s",
        callbackName: "toggleSidepanel",
        actionName: "Show Terminal Side-panel",
        type: "toggleSidepanel",
      },
      {
        shortcut: "meta+l",
        callbackName: "openLocalTerminal",
        actionName: "Open Local Terminal",
        type: "localTerminal",
      },
      {
        shortcut: "meta+b",
        callbackName: "toggleSplitViewBroadcastMode",
        actionName: "Switch the Broadcast Mode",
        type: "toggleSplitViewBroadcastMode",
      },
      {
        shortcut: "meta+alt+s",
        callbackName: "openSerialConnection",
        actionName: "Open Serial Connection",
        type: "serialConnection",
      },
      {
        shortcut: null,
        callbackName: "clearTerminalBuffer",
        actionName: "Clear Terminal Buffer",
        type: "clearTerminalBuffer",
      },
      {
        shortcut: "meta+f",
        callbackName: "openTerminalSearch",
        actionName: "Open Terminal Search",
        type: "openTerminalSearch",
      },
      {
        shortcut: null,
        callbackName: "switchToTerminals",
        actionName: "Open Hosts Page",
        type: "terminals",
      },
      {
        shortcut: "meta+w",
        callbackName: "closeTab",
        actionName: "Close Tab",
        type: "close",
      },
      {
        shortcut: "meta+shift+s",
        callbackName: "switchToSnippets",
        actionName: "Open Snippets",
        type: "snippets",
      },
      {
        shortcut: "meta+p",
        callbackName: "switchToPortForwarding",
        actionName: "Open Port Forwarding",
        type: "forwarding",
      },
      {
        shortcut: "meta+k",
        callbackName: "openCommandPalette",
        actionName: "Open Command Palette",
        type: "commandPalette",
      },
      {
        shortcut: "meta+j",
        callbackName: "openJumpTo",
        actionName: "Jump to",
        type: "jumpTo",
      },
      {
        shortcut: "meta+t",
        callbackName: "openNewTab",
        actionName: "New tab",
        type: "newTab",
      },
      {
        shortcut: "meta+shift+]",
        callbackName: "switchBottomTab",
        actionName: "Next Tab",
        type: "bottom",
      },
      {
        shortcut: "meta+shift+[",
        callbackName: "switchTopTab",
        actionName: "Previous Tab",
        type: "top",
      },
    ],
    mod: "meta",
    paneMod: "meta+alt",
    platforms: ["mac"],
    editable: !1,
  },
  Gmt = {
    shortcuts: [
      {
        shortcut: "ctrl+shift+c",
        callbackName: "copyFromTerminal",
        actionName: "Copy from Terminal",
        type: "copyFromTerminal",
      },
      {
        shortcut: "ctrl+shift+v",
        callbackName: "pasteToTerminal",
        actionName: "Paste to Terminal",
        type: "pasteToTerminal",
      },
      {
        shortcut: "ctrl+shift+a",
        callbackName: "selectAllInTerminal",
        actionName: "Select All in Terminal",
        type: "selectAllInTerminal",
      },
      {
        shortcut: "ctrl+s",
        callbackName: "toggleSidepanel",
        actionName: "Show Terminal Side-panel",
        type: "toggleSidepanel",
      },
      {
        shortcut: "ctrl+l",
        callbackName: "openLocalTerminal",
        actionName: "Open Local Terminal",
        type: "localTerminal",
      },
      {
        shortcut: "ctrl+alt+b",
        callbackName: "toggleSplitViewBroadcastMode",
        actionName: "Switch the Broadcast Mode",
        type: "toggleSplitViewBroadcastMode",
      },
      {
        shortcut: "ctrl+alt+s",
        callbackName: "openSerialConnection",
        actionName: "Open Serial Connection",
        type: "serialConnection",
      },
      {
        shortcut: null,
        callbackName: "clearTerminalBuffer",
        actionName: "Clear Terminal Buffer",
        type: "clearTerminalBuffer",
      },
      {
        shortcut: "ctrl+shift+f",
        callbackName: "openTerminalSearch",
        actionName: "Open Terminal Search",
        type: "openTerminalSearch",
      },
      {
        shortcut: null,
        callbackName: "switchToTerminals",
        actionName: "Open Hosts Page",
        type: "terminals",
      },
      {
        shortcut: "ctrl+shift+w",
        callbackName: "closeTab",
        actionName: "Close Tab",
        type: "close",
      },
      {
        shortcut: "ctrl+shift+s",
        callbackName: "switchToSnippets",
        actionName: "Open Snippets",
        type: "snippets",
      },
      {
        shortcut: "ctrl+p",
        callbackName: "switchToPortForwarding",
        actionName: "Open Port Forwarding",
        type: "forwarding",
      },
      {
        shortcut: "ctrl+k",
        callbackName: "openCommandPalette",
        actionName: "Open Command Palette",
        type: "commandPalette",
      },
      {
        shortcut: "ctrl+j",
        callbackName: "openJumpTo",
        actionName: "Jump to",
        type: "jumpTo",
      },
      {
        shortcut: "ctrl+t",
        callbackName: "openNewTab",
        actionName: "New tab",
        type: "newTab",
      },
      {
        shortcut: "alt+→",
        callbackName: "switchBottomTab",
        actionName: "Next Tab",
        type: "bottom",
      },
      {
        shortcut: "alt+←",
        callbackName: "switchTopTab",
        actionName: "Previous Tab",
        type: "top",
      },
    ],
    mod: "ctrl",
    paneMod: "ctrl+alt",
    platforms: ["mac", "linux", "win"],
    editable: !1,
  };
function Fmt(t) {
  return Jv({ "Mac hotkeys": Dmt, "PC hotkeys": Gmt }, ({ platforms: n }) =>
    n == null ? void 0 : n.includes(t)
  );
}
const Umt = {
  copyFromTerminal: {
    callbackName: "copyFromTerminal",
    actionName: "Copy from Terminal",
  },
  pasteToTerminal: {
    callbackName: "pasteToTerminal",
    actionName: "Paste to Terminal",
  },
  selectAllInTerminal: {
    callbackName: "selectAllInTerminal",
    actionName: "Select All in Terminal",
  },
  terminals: {
    callbackName: "switchToTerminals",
    actionName: "Open Hosts Page",
  },
  ...(m3
    ? {}
    : {
        localTerminal: {
          callbackName: "openLocalTerminal",
          actionName: "Open Local Terminal",
        },
      }),
  serialConnection: {
    callbackName: "openSerialConnection",
    actionName: "Open Serial Connection",
  },
  close: { callbackName: "closeTab", actionName: "Close Tab" },
  bottom: { callbackName: "switchBottomTab", actionName: "Next Tab" },
  top: { callbackName: "switchTopTab", actionName: "Previous Tab" },
  forwarding: {
    callbackName: "switchToPortForwarding",
    actionName: "Open Port Forwarding",
  },
  commandPalette: {
    callbackName: "openCommandPalette",
    actionName: "Open Command palette",
  },
  jumpTo: { callbackName: "openJumpTo", actionName: "Jump To" },
  newTab: { callbackName: "openNewTab", actionName: "New Tab" },
  clearTerminalBuffer: {
    callbackName: "clearTerminalBuffer",
    actionName: "Clear Terminal Buffer",
  },
  openTerminalSearch: {
    callbackName: "openTerminalSearch",
    actionName: "Open Terminal Search",
  },
  toggleSidepanel: {
    callbackName: "toggleSidepanel",
    actionName: "Show Terminal Side-panel",
  },
  toggleSplitViewBroadcastMode: {
    callbackName: "toggleSplitViewBroadcastMode",
    actionName: "Switch the Broadcast Mode",
  },
  snippets: { callbackName: "switchToSnippets", actionName: "Open Snippets" },
};
function O1(t) {
  const e = CP;
  return t
    .replace(/[^+]*\+?/g, (n) => n.charAt(0).toUpperCase() + n.slice(1))
    .replace(Kmt, Ec.metaKey[e])
    .replace(Bmt, Ec.altKey[e])
    .replace(Vmt, Ec.ctrlKey[e])
    .replace(jmt, Ec.shiftKey[e]);
}
const Kmt = /cmd|win|super|meta/gi,
  Bmt = /alt/gi,
  Vmt = /ctrl/gi,
  jmt = /shift/gi;
function zmt(t, e) {
  const n = Object.values(e)[0];
  return Nl(
    Object.assign(t, e),
    Wn((r) => {
      const a = qz(r.parentScheme, (s) => t[s]) ?? n;
      (r.shortcuts = a.shortcuts
        .map((s) => {
          var i;
          return (
            ((i = r.shortcuts) == null
              ? void 0
              : i.find(({ type: o }) => o === s.type)) ?? s
          );
        })
        .map(
          Wn((s) => {
            s.shortcut != null && (s.shortcut = O1(s.shortcut) || null);
          })
        )),
        (r.mod = O1(r.mod ?? a.mod)),
        (r.paneMod = O1(r.paneMod ?? a.paneMod));
    })
  );
}
function $mt() {
  return Umt;
}
function Wmt(t) {
  return $mt().hasOwnProperty(t);
}
function qmt() {
  try {
    if (!!localStorage.getItem(S0.commandPalette)) return;
    const e = localStorage.getItem(Qo.schemes);
    if (e == null) return;
    const n = JSON.parse(e),
      r = Ymt(n);
    localStorage.setItem(S0.commandPalette, JSON.stringify(!0)),
      localStorage.setItem(Qo.schemes, JSON.stringify(r));
  } catch (t) {
    tt.exception("Failed to migrate command palette shortcuts", t);
  }
}
function Ymt(t) {
  const e = new Set(["Mac hotkeys", "PC hotkeys"]),
    n = new Set(["cmd+k", "cmd+j", "cmd+t"]),
    r = new Set(["ctrl+k", "ctrl+j", "ctrl+t"]),
    a = new Set(["commandPalette", "jumpTo", "newTab"]),
    s = {
      commandPalette: (i) => `${i}+K`,
      jumpTo: (i) => `${i}+J`,
      newTab: (i) => `${i}+T`,
    };
  return sr(t, (i) => {
    var u, l;
    const o = Object.entries(i).filter(([c]) => !e.has(c));
    for (const [c, { shortcuts: d, mod: p }] of o)
      for (const m of d) {
        const y =
            p.toLowerCase() === "cmd" &&
            n.has(((u = m.shortcut) == null ? void 0 : u.toLowerCase()) || ""),
          I =
            p.toLowerCase() === "ctrl" &&
            r.has(((l = m.shortcut) == null ? void 0 : l.toLowerCase()) || ""),
          O = y || I;
        a.has(m.type)
          ? m.shortcut == null && (m.shortcut = s[m.type](p))
          : O && (m.shortcut = null);
      }
  });
}
class Xmt {
  constructor() {
    this.migrateHotkeysSpecialSymbolsToNames(), qmt();
  }
  getShortcutSchemes() {
    return JSON.parse(localStorage.getItem(Qo.schemes) ?? "null") ?? {};
  }
  setShortcutSchemes(e) {
    localStorage.setItem(Qo.schemes, JSON.stringify(e));
  }
  getCurrentScheme() {
    if (this.getShortcutsDisabled()) return { type: "disabled" };
    const e = localStorage.getItem(Qo.currentScheme);
    return e ? { type: "enabled", value: e } : { type: "not set" };
  }
  setCurrentScheme(e) {
    this.setShortcutsDisabled(!1), localStorage.setItem(Qo.currentScheme, e);
  }
  disableCurrentScheme() {
    this.setShortcutsDisabled(!0);
  }
  getShortcutsDisabled() {
    return JSON.parse(localStorage.getItem(Qo.disabled) ?? "false");
  }
  setShortcutsDisabled(e) {
    localStorage.setItem(Qo.disabled, JSON.stringify(e));
  }
  migrateHotkeysSpecialSymbolsToNames() {
    if (CP !== "mac" || localStorage.getItem(S0.hotkeysSpecialSymbolsToNames))
      return;
    const e = localStorage.getItem(Qo.schemes);
    if (e) {
      const n = e
        .replace(/⌘/gi, Ec.metaKey.mac)
        .replace(/⌃/gi, Ec.ctrlKey.mac)
        .replace(/⌥/gi, Ec.altKey.mac)
        .replace(/⇧/gi, Ec.shiftKey.mac);
      localStorage.setItem(Qo.schemes, n);
    }
    localStorage.setItem(S0.hotkeysSpecialSymbolsToNames, JSON.stringify(!0));
  }
  static clearStorageForTests() {
    localStorage.clear();
  }
}
class Qmt {
  constructor(e = CP, n = new Xmt()) {
    (this.platform = e),
      (this.storage = n),
      this.storage.setShortcutSchemes(this.shortcutSchemes);
  }
  get defaultPresets() {
    return Fmt(this.platform);
  }
  get defaultSchemesNames() {
    return [...Object.keys(this.defaultPresets)];
  }
  get shortcutSchemes() {
    return zmt(this.storage.getShortcutSchemes(), this.defaultPresets);
  }
  get currentScheme() {
    const e = this.defaultSchemesNames[0],
      n = this.storage.getCurrentScheme() ?? e,
      { shortcutSchemes: r } = this;
    switch (n.type) {
      case "disabled":
        return;
      case "not set":
        return { name: e, value: r[e] };
      case "enabled": {
        const { value: a } = n;
        return { name: a, value: r[a] ?? r[e] };
      }
      default:
        rn(!1);
        return;
    }
  }
  selectScheme(e) {
    const { shortcutSchemes: n } = this;
    (e != null && n[e] == null) ||
      (e != null
        ? this.storage.setCurrentScheme(e)
        : this.storage.disableCurrentScheme());
  }
  renameScheme(e, n) {
    var a, s;
    const { shortcutSchemes: r } = this;
    (a = r[e]) != null &&
      a.editable &&
      ((r[n] = r[e]),
      delete r[e],
      ((s = this.currentScheme) == null ? void 0 : s.name) === e &&
        this.storage.setCurrentScheme(n),
      this.storage.setShortcutSchemes(r));
  }
  deleteScheme(e) {
    var r, a;
    const { shortcutSchemes: n } = this;
    (r = n[e]) != null &&
      r.editable &&
      (delete n[e],
      ((a = this.currentScheme) == null ? void 0 : a.name) === e &&
        this.storage.setCurrentScheme(this.defaultSchemesNames[0]),
      this.storage.setShortcutSchemes(n));
  }
  changeShortcutByType({ shortcut: e, type: n }) {
    Wmt(n) &&
      this.modifyCurrentScheme(
        sr((r) => {
          if (e != null) {
            const s = r.shortcuts.find(({ shortcut: i }) => i === e);
            s != null && (s.shortcut = null);
          }
          const a = r.shortcuts.find(({ type: s }) => n === s);
          a != null && (a.shortcut = e);
        })
      );
  }
  changeTabsModifier(e) {
    this.modifyCurrentScheme(
      sr((n) => {
        n.mod = e;
      })
    );
  }
  changePanesModifier(e) {
    this.modifyCurrentScheme(
      sr((n) => {
        n.paneMod = e;
      })
    );
  }
  modifyCurrentScheme(e) {
    const { currentScheme: n, shortcutSchemes: r } = this;
    if (n == null) return;
    const a = this.getSchemeName(n.name),
      s = Jmt(n.value, n.name);
    (r[a] = e(s)),
      this.storage.setCurrentScheme(a),
      this.storage.setShortcutSchemes(r);
  }
  getSchemeName(e) {
    const { shortcutSchemes: n } = this;
    if (n[e].editable) return e;
    const r = `${e} copy`;
    let a = r,
      s = 0;
    for (; a in n; ) (a = `${r} ${s}`), (s += 1);
    return a;
  }
}
function Jmt(t, e) {
  return sr(t, (n) => {
    t.editable || ((n.editable = !0), (n.parentScheme = e));
  });
}
function* Zmt() {
  yield* $e([rw, fl, us.success, qn.success], function* () {
    var n;
    const e = new Qmt();
    yield* D(QZe((n = e.currentScheme) == null ? void 0 : n.value));
  });
}
function* eSt() {
  yield* $e($t.failure, tSt);
}
function* tSt({ payload: t }) {
  const e = yield* Pe(OP),
    r = (yield* Pe(to)).filter(([a, s]) => s.name === "OTPFlowDialog");
  if (e && !r.length && nSt(t) && t.status === 487)
    try {
      yield* D(VX()),
        yield* D(jX()),
        yield* cu({
          dialog: "OTPFlowDialog",
          target: "all-windows",
          props: { entryPoint: "forced2FA" },
          options: { closeOnBackdropClick: !1 },
        });
    } catch {}
}
function nSt(t) {
  return typeof t == "object" && t != null && "status" in t;
}
const sSt = Ze("SIGNALING_TOKEN"),
  rSt = Ze("SIGNALING_CONFIGURATION"),
  aSt = k("LIVE_TERMINAL_LINK_COPIED");
function* iSt(t, { payload: e }) {
  try {
    const n = yield* Pe(_i),
      { windowId: r, connectionOrigin: a, ...s } = e,
      i = yield* Me({ context: t.api, fn: "getSignalingConfiguration" }),
      o = new bP({
        id: e.connectionId,
        protocol: "stream",
        stream: { ...s, currentUserId: n, config: i },
      });
    yield* D(
      KI({
        windowId: r,
        connections: [
          {
            connection: cF(o),
            connectionOrigin: a,
            acquisitionChannel: "Live Terminal",
          },
        ],
      })
    );
  } catch {}
}
function* oSt(t) {
  yield* Gn([
    zt(sSt, async () => (await t.api.getSignalingToken()).token),
    zt(rSt, () => t.api.getSignalingConfiguration()),
    $e(gme, iSt, t),
  ]);
}
const uSt = {
    type: "ec",
    encoding: void 0,
    bits: void 0,
    rounds: void 0,
    curve: "nistp521",
    password: "",
    comment: "",
    includePublicKey: !0,
  },
  H1 = "Personal device keygen error";
async function lSt() {
  try {
    const t = await Jz(uSt);
    if (!t) throw new Error(H1);
    const { publicKey: e, privateKey: n } = t;
    if (!e || !n) throw new Error(H1);
    return { publicKey: e, privateKey: n };
  } catch {
    throw new Error(H1);
  }
}
function* cSt(t) {
  yield* Gn([
    Af($t.success, dSt, t),
    $e(Dy.request, hSt, t),
    $e(xE.request, fSt, t),
  ]);
}
function* dSt(t) {
  const e = yield* pSt(t);
  e != null && (yield* D(L3(e)));
}
function* pSt(t) {
  if (!(yield* Pe(w8e))) return null;
  const n = yield* Me(lSt);
  return (
    yield* Me(
      { context: t.api, fn: "sendPersonalPublicKeyForTeamMultiKey" },
      { public_key: n.publicKey }
    ),
    yield* Me({ context: t.store, fn: "resetPersonalDeviceKeyPair" }, n),
    yield* D(BX()),
    n
  );
}
function* hSt(t, { meta: e }) {
  try {
    const n = yield* Me({ context: t.api, fn: "getAuthorizedKeys" }),
      r = n.devices.map((s) => ({
        id: s.id,
        user_id: s.user_id,
        name: s.name,
        public_key: n.public_keys.find((i) => s.id === i.device_id) ?? null,
      })),
      a = n.users.map((s) => ({
        id: s.id,
        email: s.email,
        devices: r.filter((i) => s.id === i.user_id),
      }));
    yield* D(Dy.success(a, e.requestId));
  } catch (n) {
    yield* D(
      Dy.failure(
        { message: n.message, code: Dy.failure.toString() },
        e.requestId
      )
    );
  }
}
function* fSt(t, { payload: e, meta: n }) {
  try {
    yield* Me({ context: t.store, fn: "setTeamMultiKey" }, e),
      yield* D(ss({ ...qfe(t) })),
      yield* D($t.request("does-not-block-ui")),
      yield* D(xE.success(e, n.requestId)),
      yield* D(KX());
  } catch (r) {
    yield* D(
      xE.failure(
        { message: r.message, code: xE.failure.toString() },
        n.requestId
      )
    );
  }
}
function* mSt() {
  yield* D(WU(yield* Pe(Uue))), yield* Zs(WU);
}
var tR = { exports: {} };
(function (t, e) {
  e = t.exports = bt;
  var n;
  typeof process == "object" &&
  process.env &&
  process.env.NODE_DEBUG &&
  /\bsemver\b/i.test(process.env.NODE_DEBUG)
    ? (n = function () {
        var be = Array.prototype.slice.call(arguments, 0);
        be.unshift("SEMVER"), console.log.apply(console, be);
      })
    : (n = function () {}),
    (e.SEMVER_SPEC_VERSION = "2.0.0");
  var r = 256,
    a = Number.MAX_SAFE_INTEGER || 9007199254740991,
    s = 16,
    i = r - 6,
    o = (e.re = []),
    u = (e.safeRe = []),
    l = (e.src = []),
    c = 0,
    d = "[a-zA-Z0-9-]",
    p = [
      ["\\s", 1],
      ["\\d", r],
      [d, i],
    ];
  function m(be) {
    for (var He = 0; He < p.length; He++) {
      var We = p[He][0],
        dt = p[He][1];
      be = be
        .split(We + "*")
        .join(We + "{0," + dt + "}")
        .split(We + "+")
        .join(We + "{1," + dt + "}");
    }
    return be;
  }
  var y = c++;
  l[y] = "0|[1-9]\\d*";
  var I = c++;
  l[I] = "\\d+";
  var O = c++;
  l[O] = "\\d*[a-zA-Z-]" + d + "*";
  var g = c++;
  l[g] = "(" + l[y] + ")\\.(" + l[y] + ")\\.(" + l[y] + ")";
  var C = c++;
  l[C] = "(" + l[I] + ")\\.(" + l[I] + ")\\.(" + l[I] + ")";
  var H = c++;
  l[H] = "(?:" + l[y] + "|" + l[O] + ")";
  var B = c++;
  l[B] = "(?:" + l[I] + "|" + l[O] + ")";
  var he = c++;
  l[he] = "(?:-(" + l[H] + "(?:\\." + l[H] + ")*))";
  var de = c++;
  l[de] = "(?:-?(" + l[B] + "(?:\\." + l[B] + ")*))";
  var U = c++;
  l[U] = d + "+";
  var R = c++;
  l[R] = "(?:\\+(" + l[U] + "(?:\\." + l[U] + ")*))";
  var ge = c++,
    ve = "v?" + l[g] + l[he] + "?" + l[R] + "?";
  l[ge] = "^" + ve + "$";
  var we = "[v=\\s]*" + l[C] + l[de] + "?" + l[R] + "?",
    Te = c++;
  l[Te] = "^" + we + "$";
  var Ce = c++;
  l[Ce] = "((?:<|>)?=?)";
  var Ee = c++;
  l[Ee] = l[I] + "|x|X|\\*";
  var x = c++;
  l[x] = l[y] + "|x|X|\\*";
  var F = c++;
  l[F] =
    "[v=\\s]*(" +
    l[x] +
    ")(?:\\.(" +
    l[x] +
    ")(?:\\.(" +
    l[x] +
    ")(?:" +
    l[he] +
    ")?" +
    l[R] +
    "?)?)?";
  var Se = c++;
  l[Se] =
    "[v=\\s]*(" +
    l[Ee] +
    ")(?:\\.(" +
    l[Ee] +
    ")(?:\\.(" +
    l[Ee] +
    ")(?:" +
    l[de] +
    ")?" +
    l[R] +
    "?)?)?";
  var ye = c++;
  l[ye] = "^" + l[Ce] + "\\s*" + l[F] + "$";
  var Ae = c++;
  l[Ae] = "^" + l[Ce] + "\\s*" + l[Se] + "$";
  var De = c++;
  l[De] =
    "(?:^|[^\\d])(\\d{1," +
    s +
    "})(?:\\.(\\d{1," +
    s +
    "}))?(?:\\.(\\d{1," +
    s +
    "}))?(?:$|[^\\d])";
  var lt = c++;
  l[lt] = "(?:~>?)";
  var nt = c++;
  (l[nt] = "(\\s*)" + l[lt] + "\\s+"),
    (o[nt] = new RegExp(l[nt], "g")),
    (u[nt] = new RegExp(m(l[nt]), "g"));
  var L = "$1~",
    M = c++;
  l[M] = "^" + l[lt] + l[F] + "$";
  var me = c++;
  l[me] = "^" + l[lt] + l[Se] + "$";
  var K = c++;
  l[K] = "(?:\\^)";
  var Ge = c++;
  (l[Ge] = "(\\s*)" + l[K] + "\\s+"),
    (o[Ge] = new RegExp(l[Ge], "g")),
    (u[Ge] = new RegExp(m(l[Ge]), "g"));
  var Ke = "$1^",
    Re = c++;
  l[Re] = "^" + l[K] + l[F] + "$";
  var it = c++;
  l[it] = "^" + l[K] + l[Se] + "$";
  var Qe = c++;
  l[Qe] = "^" + l[Ce] + "\\s*(" + we + ")$|^$";
  var ct = c++;
  l[ct] = "^" + l[Ce] + "\\s*(" + ve + ")$|^$";
  var ot = c++;
  (l[ot] = "(\\s*)" + l[Ce] + "\\s*(" + we + "|" + l[F] + ")"),
    (o[ot] = new RegExp(l[ot], "g")),
    (u[ot] = new RegExp(m(l[ot]), "g"));
  var rt = "$1$2$3",
    gt = c++;
  l[gt] = "^\\s*(" + l[F] + ")\\s+-\\s+(" + l[F] + ")\\s*$";
  var Mt = c++;
  l[Mt] = "^\\s*(" + l[Se] + ")\\s+-\\s+(" + l[Se] + ")\\s*$";
  var at = c++;
  l[at] = "(<|>)?=?\\s*\\*";
  for (var Dt = 0; Dt < c; Dt++)
    n(Dt, l[Dt]),
      o[Dt] || ((o[Dt] = new RegExp(l[Dt])), (u[Dt] = new RegExp(m(l[Dt]))));
  e.parse = pt;
  function pt(be, He) {
    if (
      ((!He || typeof He != "object") &&
        (He = { loose: !!He, includePrerelease: !1 }),
      be instanceof bt)
    )
      return be;
    if (typeof be != "string" || be.length > r) return null;
    var We = He.loose ? u[Te] : u[ge];
    if (!We.test(be)) return null;
    try {
      return new bt(be, He);
    } catch {
      return null;
    }
  }
  e.valid = Xt;
  function Xt(be, He) {
    var We = pt(be, He);
    return We ? We.version : null;
  }
  e.clean = It;
  function It(be, He) {
    var We = pt(be.trim().replace(/^[=v]+/, ""), He);
    return We ? We.version : null;
  }
  e.SemVer = bt;
  function bt(be, He) {
    if (
      ((!He || typeof He != "object") &&
        (He = { loose: !!He, includePrerelease: !1 }),
      be instanceof bt)
    ) {
      if (be.loose === He.loose) return be;
      be = be.version;
    } else if (typeof be != "string")
      throw new TypeError("Invalid Version: " + be);
    if (be.length > r)
      throw new TypeError("version is longer than " + r + " characters");
    if (!(this instanceof bt)) return new bt(be, He);
    n("SemVer", be, He), (this.options = He), (this.loose = !!He.loose);
    var We = be.trim().match(He.loose ? u[Te] : u[ge]);
    if (!We) throw new TypeError("Invalid Version: " + be);
    if (
      ((this.raw = be),
      (this.major = +We[1]),
      (this.minor = +We[2]),
      (this.patch = +We[3]),
      this.major > a || this.major < 0)
    )
      throw new TypeError("Invalid major version");
    if (this.minor > a || this.minor < 0)
      throw new TypeError("Invalid minor version");
    if (this.patch > a || this.patch < 0)
      throw new TypeError("Invalid patch version");
    We[4]
      ? (this.prerelease = We[4].split(".").map(function (dt) {
          if (/^[0-9]+$/.test(dt)) {
            var ft = +dt;
            if (ft >= 0 && ft < a) return ft;
          }
          return dt;
        }))
      : (this.prerelease = []),
      (this.build = We[5] ? We[5].split(".") : []),
      this.format();
  }
  (bt.prototype.format = function () {
    return (
      (this.version = this.major + "." + this.minor + "." + this.patch),
      this.prerelease.length &&
        (this.version += "-" + this.prerelease.join(".")),
      this.version
    );
  }),
    (bt.prototype.toString = function () {
      return this.version;
    }),
    (bt.prototype.compare = function (be) {
      return (
        n("SemVer.compare", this.version, this.options, be),
        be instanceof bt || (be = new bt(be, this.options)),
        this.compareMain(be) || this.comparePre(be)
      );
    }),
    (bt.prototype.compareMain = function (be) {
      return (
        be instanceof bt || (be = new bt(be, this.options)),
        Qt(this.major, be.major) ||
          Qt(this.minor, be.minor) ||
          Qt(this.patch, be.patch)
      );
    }),
    (bt.prototype.comparePre = function (be) {
      if (
        (be instanceof bt || (be = new bt(be, this.options)),
        this.prerelease.length && !be.prerelease.length)
      )
        return -1;
      if (!this.prerelease.length && be.prerelease.length) return 1;
      if (!this.prerelease.length && !be.prerelease.length) return 0;
      var He = 0;
      do {
        var We = this.prerelease[He],
          dt = be.prerelease[He];
        if (
          (n("prerelease compare", He, We, dt), We === void 0 && dt === void 0)
        )
          return 0;
        if (dt === void 0) return 1;
        if (We === void 0) return -1;
        if (We === dt) continue;
        return Qt(We, dt);
      } while (++He);
    }),
    (bt.prototype.inc = function (be, He) {
      switch (be) {
        case "premajor":
          (this.prerelease.length = 0),
            (this.patch = 0),
            (this.minor = 0),
            this.major++,
            this.inc("pre", He);
          break;
        case "preminor":
          (this.prerelease.length = 0),
            (this.patch = 0),
            this.minor++,
            this.inc("pre", He);
          break;
        case "prepatch":
          (this.prerelease.length = 0),
            this.inc("patch", He),
            this.inc("pre", He);
          break;
        case "prerelease":
          this.prerelease.length === 0 && this.inc("patch", He),
            this.inc("pre", He);
          break;
        case "major":
          (this.minor !== 0 ||
            this.patch !== 0 ||
            this.prerelease.length === 0) &&
            this.major++,
            (this.minor = 0),
            (this.patch = 0),
            (this.prerelease = []);
          break;
        case "minor":
          (this.patch !== 0 || this.prerelease.length === 0) && this.minor++,
            (this.patch = 0),
            (this.prerelease = []);
          break;
        case "patch":
          this.prerelease.length === 0 && this.patch++, (this.prerelease = []);
          break;
        case "pre":
          if (this.prerelease.length === 0) this.prerelease = [0];
          else {
            for (var We = this.prerelease.length; --We >= 0; )
              typeof this.prerelease[We] == "number" &&
                (this.prerelease[We]++, (We = -2));
            We === -1 && this.prerelease.push(0);
          }
          He &&
            (this.prerelease[0] === He
              ? isNaN(this.prerelease[1]) && (this.prerelease = [He, 0])
              : (this.prerelease = [He, 0]));
          break;
        default:
          throw new Error("invalid increment argument: " + be);
      }
      return this.format(), (this.raw = this.version), this;
    }),
    (e.inc = yt);
  function yt(be, He, We, dt) {
    typeof We == "string" && ((dt = We), (We = void 0));
    try {
      return new bt(be, We).inc(He, dt).version;
    } catch {
      return null;
    }
  }
  e.diff = tn;
  function tn(be, He) {
    if (so(be, He)) return null;
    var We = pt(be),
      dt = pt(He),
      ft = "";
    if (We.prerelease.length || dt.prerelease.length) {
      ft = "pre";
      var Ot = "prerelease";
    }
    for (var xt in We)
      if (
        (xt === "major" || xt === "minor" || xt === "patch") &&
        We[xt] !== dt[xt]
      )
        return ft + xt;
    return Ot;
  }
  e.compareIdentifiers = Qt;
  var Ct = /^[0-9]+$/;
  function Qt(be, He) {
    var We = Ct.test(be),
      dt = Ct.test(He);
    return (
      We && dt && ((be = +be), (He = +He)),
      be === He ? 0 : We && !dt ? -1 : dt && !We ? 1 : be < He ? -1 : 1
    );
  }
  e.rcompareIdentifiers = Bt;
  function Bt(be, He) {
    return Qt(He, be);
  }
  e.major = Ut;
  function Ut(be, He) {
    return new bt(be, He).major;
  }
  e.minor = as;
  function as(be, He) {
    return new bt(be, He).minor;
  }
  e.patch = Ya;
  function Ya(be, He) {
    return new bt(be, He).patch;
  }
  e.compare = Wt;
  function Wt(be, He, We) {
    return new bt(be, We).compare(new bt(He, We));
  }
  e.compareLoose = mn;
  function mn(be, He) {
    return Wt(be, He, !0);
  }
  e.rcompare = no;
  function no(be, He, We) {
    return Wt(He, be, We);
  }
  e.sort = ds;
  function ds(be, He) {
    return be.sort(function (We, dt) {
      return e.compare(We, dt, He);
    });
  }
  e.rsort = Rt;
  function Rt(be, He) {
    return be.sort(function (We, dt) {
      return e.rcompare(We, dt, He);
    });
  }
  e.gt = hr;
  function hr(be, He, We) {
    return Wt(be, He, We) > 0;
  }
  e.lt = la;
  function la(be, He, We) {
    return Wt(be, He, We) < 0;
  }
  e.eq = so;
  function so(be, He, We) {
    return Wt(be, He, We) === 0;
  }
  e.neq = Et;
  function Et(be, He, We) {
    return Wt(be, He, We) !== 0;
  }
  e.gte = Uo;
  function Uo(be, He, We) {
    return Wt(be, He, We) >= 0;
  }
  e.lte = Wp;
  function Wp(be, He, We) {
    return Wt(be, He, We) <= 0;
  }
  e.cmp = Ul;
  function Ul(be, He, We, dt) {
    switch (He) {
      case "===":
        return (
          typeof be == "object" && (be = be.version),
          typeof We == "object" && (We = We.version),
          be === We
        );
      case "!==":
        return (
          typeof be == "object" && (be = be.version),
          typeof We == "object" && (We = We.version),
          be !== We
        );
      case "":
      case "=":
      case "==":
        return so(be, We, dt);
      case "!=":
        return Et(be, We, dt);
      case ">":
        return hr(be, We, dt);
      case ">=":
        return Uo(be, We, dt);
      case "<":
        return la(be, We, dt);
      case "<=":
        return Wp(be, We, dt);
      default:
        throw new TypeError("Invalid operator: " + He);
    }
  }
  e.Comparator = ca;
  function ca(be, He) {
    if (
      ((!He || typeof He != "object") &&
        (He = { loose: !!He, includePrerelease: !1 }),
      be instanceof ca)
    ) {
      if (be.loose === !!He.loose) return be;
      be = be.value;
    }
    if (!(this instanceof ca)) return new ca(be, He);
    (be = be.trim().split(/\s+/).join(" ")),
      n("comparator", be, He),
      (this.options = He),
      (this.loose = !!He.loose),
      this.parse(be),
      this.semver === Du
        ? (this.value = "")
        : (this.value = this.operator + this.semver.version),
      n("comp", this);
  }
  var Du = {};
  (ca.prototype.parse = function (be) {
    var He = this.options.loose ? u[Qe] : u[ct],
      We = be.match(He);
    if (!We) throw new TypeError("Invalid comparator: " + be);
    (this.operator = We[1]),
      this.operator === "=" && (this.operator = ""),
      We[2]
        ? (this.semver = new bt(We[2], this.options.loose))
        : (this.semver = Du);
  }),
    (ca.prototype.toString = function () {
      return this.value;
    }),
    (ca.prototype.test = function (be) {
      return (
        n("Comparator.test", be, this.options.loose),
        this.semver === Du
          ? !0
          : (typeof be == "string" && (be = new bt(be, this.options)),
            Ul(be, this.operator, this.semver, this.options))
      );
    }),
    (ca.prototype.intersects = function (be, He) {
      if (!(be instanceof ca)) throw new TypeError("a Comparator is required");
      (!He || typeof He != "object") &&
        (He = { loose: !!He, includePrerelease: !1 });
      var We;
      if (this.operator === "")
        return (We = new gs(be.value, He)), Xa(this.value, We, He);
      if (be.operator === "")
        return (We = new gs(this.value, He)), Xa(be.semver, We, He);
      var dt =
          (this.operator === ">=" || this.operator === ">") &&
          (be.operator === ">=" || be.operator === ">"),
        ft =
          (this.operator === "<=" || this.operator === "<") &&
          (be.operator === "<=" || be.operator === "<"),
        Ot = this.semver.version === be.semver.version,
        xt =
          (this.operator === ">=" || this.operator === "<=") &&
          (be.operator === ">=" || be.operator === "<="),
        Sn =
          Ul(this.semver, "<", be.semver, He) &&
          (this.operator === ">=" || this.operator === ">") &&
          (be.operator === "<=" || be.operator === "<"),
        Hn =
          Ul(this.semver, ">", be.semver, He) &&
          (this.operator === "<=" || this.operator === "<") &&
          (be.operator === ">=" || be.operator === ">");
      return dt || ft || (Ot && xt) || Sn || Hn;
    }),
    (e.Range = gs);
  function gs(be, He) {
    if (
      ((!He || typeof He != "object") &&
        (He = { loose: !!He, includePrerelease: !1 }),
      be instanceof gs)
    )
      return be.loose === !!He.loose &&
        be.includePrerelease === !!He.includePrerelease
        ? be
        : new gs(be.raw, He);
    if (be instanceof ca) return new gs(be.value, He);
    if (!(this instanceof gs)) return new gs(be, He);
    if (
      ((this.options = He),
      (this.loose = !!He.loose),
      (this.includePrerelease = !!He.includePrerelease),
      (this.raw = be.trim().split(/\s+/).join(" ")),
      (this.set = this.raw
        .split("||")
        .map(function (We) {
          return this.parseRange(We.trim());
        }, this)
        .filter(function (We) {
          return We.length;
        })),
      !this.set.length)
    )
      throw new TypeError("Invalid SemVer Range: " + this.raw);
    this.format();
  }
  (gs.prototype.format = function () {
    return (
      (this.range = this.set
        .map(function (be) {
          return be.join(" ").trim();
        })
        .join("||")
        .trim()),
      this.range
    );
  }),
    (gs.prototype.toString = function () {
      return this.range;
    }),
    (gs.prototype.parseRange = function (be) {
      var He = this.options.loose,
        We = He ? u[Mt] : u[gt];
      (be = be.replace(We, Qp)),
        n("hyphen replace", be),
        (be = be.replace(u[ot], rt)),
        n("comparator trim", be, u[ot]),
        (be = be.replace(u[nt], L)),
        (be = be.replace(u[Ge], Ke));
      var dt = He ? u[Qe] : u[ct],
        ft = be
          .split(" ")
          .map(function (Ot) {
            return Kl(Ot, this.options);
          }, this)
          .join(" ")
          .split(/\s+/);
      return (
        this.options.loose &&
          (ft = ft.filter(function (Ot) {
            return !!Ot.match(dt);
          })),
        (ft = ft.map(function (Ot) {
          return new ca(Ot, this.options);
        }, this)),
        ft
      );
    }),
    (gs.prototype.intersects = function (be, He) {
      if (!(be instanceof gs)) throw new TypeError("a Range is required");
      return this.set.some(function (We) {
        return We.every(function (dt) {
          return be.set.some(function (ft) {
            return ft.every(function (Ot) {
              return dt.intersects(Ot, He);
            });
          });
        });
      });
    }),
    (e.toComparators = QI);
  function QI(be, He) {
    return new gs(be, He).set.map(function (We) {
      return We.map(function (dt) {
        return dt.value;
      })
        .join(" ")
        .trim()
        .split(" ");
    });
  }
  function Kl(be, He) {
    return (
      n("comp", be, He),
      (be = ps(be, He)),
      n("caret", be),
      (be = iS(be, He)),
      n("tildes", be),
      (be = JI(be, He)),
      n("xrange", be),
      (be = Xp(be, He)),
      n("stars", be),
      be
    );
  }
  function zs(be) {
    return !be || be.toLowerCase() === "x" || be === "*";
  }
  function iS(be, He) {
    return be
      .trim()
      .split(/\s+/)
      .map(function (We) {
        return qp(We, He);
      })
      .join(" ");
  }
  function qp(be, He) {
    var We = He.loose ? u[me] : u[M];
    return be.replace(We, function (dt, ft, Ot, xt, Sn) {
      n("tilde", be, dt, ft, Ot, xt, Sn);
      var Hn;
      return (
        zs(ft)
          ? (Hn = "")
          : zs(Ot)
          ? (Hn = ">=" + ft + ".0.0 <" + (+ft + 1) + ".0.0")
          : zs(xt)
          ? (Hn = ">=" + ft + "." + Ot + ".0 <" + ft + "." + (+Ot + 1) + ".0")
          : Sn
          ? (n("replaceTilde pr", Sn),
            (Hn =
              ">=" +
              ft +
              "." +
              Ot +
              "." +
              xt +
              "-" +
              Sn +
              " <" +
              ft +
              "." +
              (+Ot + 1) +
              ".0"))
          : (Hn =
              ">=" +
              ft +
              "." +
              Ot +
              "." +
              xt +
              " <" +
              ft +
              "." +
              (+Ot + 1) +
              ".0"),
        n("tilde return", Hn),
        Hn
      );
    });
  }
  function ps(be, He) {
    return be
      .trim()
      .split(/\s+/)
      .map(function (We) {
        return ir(We, He);
      })
      .join(" ");
  }
  function ir(be, He) {
    n("caret", be, He);
    var We = He.loose ? u[it] : u[Re];
    return be.replace(We, function (dt, ft, Ot, xt, Sn) {
      n("caret", be, dt, ft, Ot, xt, Sn);
      var Hn;
      return (
        zs(ft)
          ? (Hn = "")
          : zs(Ot)
          ? (Hn = ">=" + ft + ".0.0 <" + (+ft + 1) + ".0.0")
          : zs(xt)
          ? ft === "0"
            ? (Hn = ">=" + ft + "." + Ot + ".0 <" + ft + "." + (+Ot + 1) + ".0")
            : (Hn = ">=" + ft + "." + Ot + ".0 <" + (+ft + 1) + ".0.0")
          : Sn
          ? (n("replaceCaret pr", Sn),
            ft === "0"
              ? Ot === "0"
                ? (Hn =
                    ">=" +
                    ft +
                    "." +
                    Ot +
                    "." +
                    xt +
                    "-" +
                    Sn +
                    " <" +
                    ft +
                    "." +
                    Ot +
                    "." +
                    (+xt + 1))
                : (Hn =
                    ">=" +
                    ft +
                    "." +
                    Ot +
                    "." +
                    xt +
                    "-" +
                    Sn +
                    " <" +
                    ft +
                    "." +
                    (+Ot + 1) +
                    ".0")
              : (Hn =
                  ">=" +
                  ft +
                  "." +
                  Ot +
                  "." +
                  xt +
                  "-" +
                  Sn +
                  " <" +
                  (+ft + 1) +
                  ".0.0"))
          : (n("no pr"),
            ft === "0"
              ? Ot === "0"
                ? (Hn =
                    ">=" +
                    ft +
                    "." +
                    Ot +
                    "." +
                    xt +
                    " <" +
                    ft +
                    "." +
                    Ot +
                    "." +
                    (+xt + 1))
                : (Hn =
                    ">=" +
                    ft +
                    "." +
                    Ot +
                    "." +
                    xt +
                    " <" +
                    ft +
                    "." +
                    (+Ot + 1) +
                    ".0")
              : (Hn =
                  ">=" + ft + "." + Ot + "." + xt + " <" + (+ft + 1) + ".0.0")),
        n("caret return", Hn),
        Hn
      );
    });
  }
  function JI(be, He) {
    return (
      n("replaceXRanges", be, He),
      be
        .split(/\s+/)
        .map(function (We) {
          return Yp(We, He);
        })
        .join(" ")
    );
  }
  function Yp(be, He) {
    be = be.trim();
    var We = He.loose ? u[Ae] : u[ye];
    return be.replace(We, function (dt, ft, Ot, xt, Sn, Hn) {
      n("xRange", be, dt, ft, Ot, xt, Sn, Hn);
      var da = zs(Ot),
        Qa = da || zs(xt),
        un = Qa || zs(Sn),
        Gr = un;
      return (
        ft === "=" && Gr && (ft = ""),
        da
          ? ft === ">" || ft === "<"
            ? (dt = "<0.0.0")
            : (dt = "*")
          : ft && Gr
          ? (Qa && (xt = 0),
            (Sn = 0),
            ft === ">"
              ? ((ft = ">="),
                Qa
                  ? ((Ot = +Ot + 1), (xt = 0), (Sn = 0))
                  : ((xt = +xt + 1), (Sn = 0)))
              : ft === "<=" &&
                ((ft = "<"), Qa ? (Ot = +Ot + 1) : (xt = +xt + 1)),
            (dt = ft + Ot + "." + xt + "." + Sn))
          : Qa
          ? (dt = ">=" + Ot + ".0.0 <" + (+Ot + 1) + ".0.0")
          : un &&
            (dt = ">=" + Ot + "." + xt + ".0 <" + Ot + "." + (+xt + 1) + ".0"),
        n("xRange return", dt),
        dt
      );
    });
  }
  function Xp(be, He) {
    return n("replaceStars", be, He), be.trim().replace(u[at], "");
  }
  function Qp(be, He, We, dt, ft, Ot, xt, Sn, Hn, da, Qa, un, Gr) {
    return (
      zs(We)
        ? (He = "")
        : zs(dt)
        ? (He = ">=" + We + ".0.0")
        : zs(ft)
        ? (He = ">=" + We + "." + dt + ".0")
        : (He = ">=" + He),
      zs(Hn)
        ? (Sn = "")
        : zs(da)
        ? (Sn = "<" + (+Hn + 1) + ".0.0")
        : zs(Qa)
        ? (Sn = "<" + Hn + "." + (+da + 1) + ".0")
        : un
        ? (Sn = "<=" + Hn + "." + da + "." + Qa + "-" + un)
        : (Sn = "<=" + Sn),
      (He + " " + Sn).trim()
    );
  }
  gs.prototype.test = function (be) {
    if (!be) return !1;
    typeof be == "string" && (be = new bt(be, this.options));
    for (var He = 0; He < this.set.length; He++)
      if (ZI(this.set[He], be, this.options)) return !0;
    return !1;
  };
  function ZI(be, He, We) {
    for (var dt = 0; dt < be.length; dt++) if (!be[dt].test(He)) return !1;
    if (He.prerelease.length && !We.includePrerelease) {
      for (dt = 0; dt < be.length; dt++)
        if (
          (n(be[dt].semver),
          be[dt].semver !== Du && be[dt].semver.prerelease.length > 0)
        ) {
          var ft = be[dt].semver;
          if (
            ft.major === He.major &&
            ft.minor === He.minor &&
            ft.patch === He.patch
          )
            return !0;
        }
      return !1;
    }
    return !0;
  }
  e.satisfies = Xa;
  function Xa(be, He, We) {
    try {
      He = new gs(He, We);
    } catch {
      return !1;
    }
    return He.test(be);
  }
  e.maxSatisfying = Bl;
  function Bl(be, He, We) {
    var dt = null,
      ft = null;
    try {
      var Ot = new gs(He, We);
    } catch {
      return null;
    }
    return (
      be.forEach(function (xt) {
        Ot.test(xt) &&
          (!dt || ft.compare(xt) === -1) &&
          ((dt = xt), (ft = new bt(dt, We)));
      }),
      dt
    );
  }
  e.minSatisfying = Ko;
  function Ko(be, He, We) {
    var dt = null,
      ft = null;
    try {
      var Ot = new gs(He, We);
    } catch {
      return null;
    }
    return (
      be.forEach(function (xt) {
        Ot.test(xt) &&
          (!dt || ft.compare(xt) === 1) &&
          ((dt = xt), (ft = new bt(dt, We)));
      }),
      dt
    );
  }
  e.minVersion = Jp;
  function Jp(be, He) {
    be = new gs(be, He);
    var We = new bt("0.0.0");
    if (be.test(We) || ((We = new bt("0.0.0-0")), be.test(We))) return We;
    We = null;
    for (var dt = 0; dt < be.set.length; ++dt) {
      var ft = be.set[dt];
      ft.forEach(function (Ot) {
        var xt = new bt(Ot.semver.version);
        switch (Ot.operator) {
          case ">":
            xt.prerelease.length === 0 ? xt.patch++ : xt.prerelease.push(0),
              (xt.raw = xt.format());
          case "":
          case ">=":
            (!We || hr(We, xt)) && (We = xt);
            break;
          case "<":
          case "<=":
            break;
          default:
            throw new Error("Unexpected operation: " + Ot.operator);
        }
      });
    }
    return We && be.test(We) ? We : null;
  }
  e.validRange = eC;
  function eC(be, He) {
    try {
      return new gs(be, He).range || "*";
    } catch {
      return null;
    }
  }
  e.ltr = Bo;
  function Bo(be, He, We) {
    return ro(be, He, "<", We);
  }
  e.gtr = v_;
  function v_(be, He, We) {
    return ro(be, He, ">", We);
  }
  e.outside = ro;
  function ro(be, He, We, dt) {
    (be = new bt(be, dt)), (He = new gs(He, dt));
    var ft, Ot, xt, Sn, Hn;
    switch (We) {
      case ">":
        (ft = hr), (Ot = Wp), (xt = la), (Sn = ">"), (Hn = ">=");
        break;
      case "<":
        (ft = la), (Ot = Uo), (xt = hr), (Sn = "<"), (Hn = "<=");
        break;
      default:
        throw new TypeError('Must provide a hilo val of "<" or ">"');
    }
    if (Xa(be, He, dt)) return !1;
    for (var da = 0; da < He.set.length; ++da) {
      var Qa = He.set[da],
        un = null,
        Gr = null;
      if (
        (Qa.forEach(function (ao) {
          ao.semver === Du && (ao = new ca(">=0.0.0")),
            (un = un || ao),
            (Gr = Gr || ao),
            ft(ao.semver, un.semver, dt)
              ? (un = ao)
              : xt(ao.semver, Gr.semver, dt) && (Gr = ao);
        }),
        un.operator === Sn ||
          un.operator === Hn ||
          ((!Gr.operator || Gr.operator === Sn) && Ot(be, Gr.semver)))
      )
        return !1;
      if (Gr.operator === Hn && xt(be, Gr.semver)) return !1;
    }
    return !0;
  }
  e.prerelease = __;
  function __(be, He) {
    var We = pt(be, He);
    return We && We.prerelease.length ? We.prerelease : null;
  }
  e.intersects = oS;
  function oS(be, He, We) {
    return (be = new gs(be, We)), (He = new gs(He, We)), be.intersects(He);
  }
  e.coerce = xs;
  function xs(be) {
    if (be instanceof bt) return be;
    if (typeof be != "string") return null;
    var He = be.match(u[De]);
    return He == null
      ? null
      : pt(He[1] + "." + (He[2] || "0") + "." + (He[3] || "0"));
  }
})(tR, tR.exports);
var SSt = tR.exports;
function ySt({ version: t, range: e }) {
  const [n, r] = e;
  return SSt.satisfies(t, `>${n} <=${r}`);
}
function gSt(t, e) {
  const { version: n } = t.app,
    { previouslySeenVersion: r = "0.0.0" } = t.appUpdate;
  return ySt({ version: e, range: [r, n] });
}
const vSt = "9.0.0",
  _St = (t, e) => {
    const n = new Date(t.created_at).valueOf();
    return new Date(e.created_at).valueOf() - n;
  };
function* bSt() {
  yield* D(ea.request()), yield* D(us.request());
}
function* ESt(t, { meta: e }) {
  try {
    if (yield* Pe(Nm)) {
      const { message: u } = new Sv();
      yield* D(
        ea.failure({ message: u, code: ea.failure.toString() }, e.requestId)
      );
      return;
    }
    const r = yield* Me({ context: t, fn: "getInAppMessages" }),
      a = yield* Me({ context: t.store, fn: "getAllInAppMessages" }),
      s = r.objects.sort(_St).map(({ local_id: u, ...l }) => {
        const c = a.find((p) => l.id === p.id),
          d = c != null && c.local_id ? { local_id: c.local_id } : null;
        return {
          ...l,
          ...d,
          created_at: new Date(l.created_at),
          is_seen: (c == null ? void 0 : c.is_seen) || l.is_seen,
        };
      });
    Ft.setDeprecatedBellDotType(r.meta.dot_type);
    const i = yield* Me({ context: t.store, fn: "getAllInAppMessages" });
    yield* Me(
      { context: t.store, fn: "deleteInAppMessage" },
      i.filter((u) => u.action === AT).map((u) => u.local_id)
    );
    for (const u of s)
      yield* Me({ context: t.store, fn: "setInAppMessage" }, u);
    const o = s
      .filter((u) => u.force_to_do_action)
      .filter((u) => u.action !== AT);
    yield* D(qQ(o)),
      yield* D(ea.success({ meta: r.meta, objects: s }, e.requestId));
  } catch (n) {
    yield* D(
      ea.failure(
        { message: n.message, code: ea.failure.toString() },
        e.requestId
      )
    );
  }
}
function* TSt(t, { meta: e }) {
  try {
    const n = Ft.getDeprecatedBellDotType(),
      r = yield* Me({ context: t.store, fn: "getAllInAppMessages" });
    yield* D(qd.success({ meta: { dot_type: n }, objects: r }, e.requestId));
  } catch (n) {
    yield* D(
      qd.failure(
        { message: n.message, code: qd.failure.toString() },
        e.requestId
      )
    );
  }
}
function* wSt(t, { meta: e, payload: n }) {
  try {
    for (const r of n)
      yield* Me({ context: t.store, fn: "setInAppMessage" }, r);
    yield* D(al.success(n, e.requestId));
  } catch (r) {
    yield* D(
      al.failure(
        { message: r.message, code: al.failure.toString() },
        e.requestId
      )
    );
  }
}
function* PSt({ payload: t }) {
  var n;
  const e = yield* Pe((r) => xG(r, "MigrateToNewCryptoSystemScreen"));
  for (const r of t)
    yield* D(
      $Q({
        teamMemberID:
          (n = r.message_attributes) == null ? void 0 : n.user_email,
        messageAction: r.action,
        auto: !0,
      })
    );
  if (e.length === 0) {
    const r = t.find((a) => a.action === YR && !a.is_seen);
    r &&
      (yield* cu({
        dialog: "MigrateToNewCryptoSystemScreen",
        target: "all-windows",
        props: { inAppMessage: r },
      }));
  }
}
function* ISt({ payload: t }) {
  const n = (yield* Pe(Ym)).map((r) =>
    r.id === t ? { ...r, is_seen: !0 } : r
  );
  yield* D(al.request(n));
}
function* CSt(t, { meta: e, payload: n }) {
  try {
    const a = (yield* Pe(Ym)).filter((o) => !n.some((u) => u.id === o.id));
    yield* D(al.request(a));
    const i = n.map((o) => o.local_id).filter((o) => !!o);
    yield* Me({ context: t.store, fn: "deleteInAppMessage" }, i),
      yield* D(Iy.success(a, e.requestId));
  } catch (r) {
    yield* D(
      Iy.failure(
        { message: r.message, code: Iy.failure.toString() },
        e.requestId
      )
    );
  }
}
function* ASt() {
  const e = (yield* Pe(Ym)).map((n) => ({ ...n, is_seen: !0 }));
  yield* D(al.request(e));
}
function* OSt(t) {
  yield* Gn([
    $e(qd.request, TSt, t),
    $e(WQ, bSt),
    $e(ea.request, ESt, t),
    $e(al.request, wSt, t),
    $e(qQ, PSt),
    $e(jQ, ISt),
    $e(Iy.request, CSt, t),
    $e(zQ, ASt),
  ]);
}
const HSt = k("INSTRUCTIONS_WERE_COPIED"),
  NSt = k("URL_WAS_COPIED"),
  RSt = [
    { id: qO.VAULTS, title: (t) => t || "Vaults" },
    { id: qO.SFTP, title: (t) => t || "SFTP" },
  ],
  kSt = [
    "title",
    "host.label",
    "host.address",
    "host.description",
    "host.ssh_config.port",
    "host.telnet_config.port",
  ];
function xSt(t) {
  return t.terminal.search.targetTerminalId;
}
const hF = Nt(
    (t, e) => t.terminal.all,
    (t, e) => e,
    (t, e) => Jv(t, (n) => n.windowId === e)
  ),
  VI = Nt(
    (t, e) => t.terminal.tabs,
    (t, e) => e,
    (t, e) => t.filter((n) => n.windowId === e)
  );
Nt(
  (t, e, n) => VI(t, e),
  (t, e, n) => hF(t, e),
  cX,
  G8e,
  (t, e, n) => n,
  (t, e, { filter: n }, { label: r }, a) => {
    if (n && n !== lX.JUMP_TO) return [];
    const s = RSt.map(({ id: u, title: l }) => ({
      id: u,
      title: l(u === qO.VAULTS ? r : ""),
    }));
    if (a === "") return [...s, ...t];
    const i = t.map((u) => ({ ...u, host: LSt(u.layout.leafs(), e) })),
      o = [...s, ...i];
    return NMe.go(a, o, { keys: kSt }).map(({ obj: u }) => {
      if ("host" in u) {
        const { host: l, ...c } = u;
        return c;
      }
      return u;
    });
  }
);
function LSt(t, e) {
  var a;
  const n = Array.from(t);
  return n.length > 1 || (a = e[n[0].id]) == null ? void 0 : a.host;
}
Nt(
  (t, e) => t.terminal.tabs,
  (t, e) => e,
  (t, e) => {
    const n = t.find((a) => a.id === e);
    if (n == null) return new Set();
    const r = [...n.layout.leafs()];
    return new Set(r.map((a) => a.id));
  }
);
Nt(Rme, VI, (t, e) => {
  if (t) return e.find((n) => n.layout.has(t.id));
});
const MSt = (t) => (e) => e.id === t,
  DSt = Nt(VI, LG, (t, e) => t.find(MSt(e))),
  GSt = Nt(DSt, hF, (t, e) =>
    Object.values(e).filter(({ id: n }) =>
      t == null ? void 0 : t.layout.has(n)
    )
  ),
  FSt = ["session-log", "local", "stream"];
Nt(GSt, (t) =>
  t.length
    ? t.every(
        (n) =>
          n.connectionProcess === "succeeded" ||
          (n.connectionProcess === "error" && n.disconnectTimestamp) ||
          FSt.includes(n.connectionProtocol ?? "")
      )
      ? "terminal"
      : "connectionFlow"
    : "vaultTab"
);
function Rme(t, e) {
  return Object.values(t.terminal.all).find(
    (n) => n.windowId === e && n.isActive
  );
}
Nt(Rme, xSt, (t, e) => (t ? t.id === e : !1));
Nt(VI, hF, LG, (t, e, n) => {
  var a, s;
  const r =
    ((a = t.find((i) => i.id === n)) == null
      ? void 0
      : a.layout.getFirstLeafId()) ?? "";
  return (s = e[r]) == null ? void 0 : s.colorScheme;
});
function USt(t) {
  return t.sidepanel.hintWasShown;
}
function KSt(t, e) {
  const n = t.sidepanel.windows.find(([a]) => a === e),
    { visible: r } = n != null ? n[1] : t.sidepanel;
  return r;
}
vi("crypto");
function BSt(t) {
  return t.snackbar;
}
function* VSt() {
  yield* D(
    Nu({
      id: Ei.v4(),
      message: "Instructions were copied to clipboard",
      createdAt: new Date(),
      variant: "message",
      timer: 15e3,
    })
  ),
    yield* D(
      Lp({
        hintMessage: 'The "No Access" Instructions Copied',
        hintLevel: "Info",
      })
    );
}
function* jSt() {
  yield* D(
    Nu({
      id: Ei.v4(),
      message: "URL was copied to clipboard",
      createdAt: new Date(),
      variant: "message",
      timer: 15e3,
    })
  ),
    yield* D(
      Lp({ hintMessage: 'The "No Access" URL Copied', hintLevel: "Info" })
    );
}
function* zSt() {
  yield* D(
    Nu({
      id: Ei.v4(),
      message: "Live session URL was copied to clipboard",
      createdAt: new Date(),
      variant: "message",
      timer: 5e3,
    })
  ),
    yield* D(Lp({ hintMessage: "Try Live Terminal", hintLevel: "Info" }));
}
function* $St() {
  yield* D(
    Nu({
      id: Ei.v4(),
      message: "Export Snippet Created",
      createdAt: new Date(),
      variant: "message",
      timer: 5e3,
    })
  );
}
function* WSt() {
  yield* D(
    Nu({
      id: Ei.v4(),
      message: "Export Snippet Updated",
      createdAt: new Date(),
      variant: "message",
      timer: 5e3,
    })
  );
}
function* qSt(t) {
  yield* Bi(1e3),
    yield* D(
      Nu({
        id: Ei.v4(),
        association: { type: t.type, appPath: t.appPath },
        createdAt: new Date(),
        actions: ["Yes", "No"],
        variant: "fileTypeAssociation",
        timer: 1e4,
      })
    ),
    yield* D(
      Lp({ hintMessage: "Associate File Type With", hintLevel: "Info" })
    );
}
function* YSt({ payload: t }) {
  yield* Gn(t.map((e) => Me(qSt, e)));
}
function* XSt({ payload: t }) {
  const e = yield* Pe(BSt),
    n = "proFeatures";
  e.some((a) => a.variant === n && a.windowId === t.windowId) ||
    (yield* D(
      Nu({
        id: Ei.v4(),
        message: "Some Pro features have been disabled in this session",
        actions: ["Enable"],
        createdAt: new Date(),
        variant: n,
        timer: 1e4,
        windowId: t.windowId,
      })
    ),
    yield* D(Lp({ hintMessage: "Inactive Pro Features", hintLevel: "Info" })));
}
function* QSt({ payload: t }) {
  const e = yield* Pe(USt),
    n = yield* Pe(KSt, t.windowId);
  !e &&
    !n &&
    (yield* D(
      Nu({
        id: Ei.v4(),
        before: "Use",
        after: "to open side panel",
        shortcut: "toggleSidepanel",
        createdAt: new Date(),
        variant: "shortcut",
        timer: 15e3,
      })
    ),
    yield* D(Lp({ hintMessage: "Side Panel Shortcut", hintLevel: "Info" })),
    yield* D(tle()));
}
function* JSt() {
  yield* Gn([
    $e(SZe, YSt),
    $e(ele, QSt),
    $e(HSt, VSt),
    $e(NSt, jSt),
    $e(DZe, WSt),
    $e(MZe, $St),
    $e(aSt, zSt),
    $e(nJ, XSt),
  ]);
}
const ZSt = k("SIGN_IN_WITH_SSO"),
  eyt = k("CONTINUE_SSO"),
  tyt = k("SIGN_IN_WITH_ENTERPRISE_SSO"),
  nyt = k("CONTINUE_ENTERPRISE_SSO"),
  kme = k("RESET_SSO_AUTHORIZATION"),
  qh = Ze("SIGN_IN_WITH_FIREBASE_SSO"),
  Yh = Ze("SIGN_IN_WITH_WORK_OS_SSO");
function* syt(t, e) {
  var a;
  const n = Sm();
  yield* D(tyt({ email: t, requestId: n }));
  const r = yield* Zs(
    ({ type: s, payload: i }) => s === nyt.toString() && i.requestId === n
  );
  return (a = FV.fromId(e)) == null || a.show(), r.payload;
}
function* ryt(t, e) {
  var a;
  const n = Sm();
  yield* D(ZSt({ provider: t, requestId: n }));
  const r = yield* Zs(
    ({ type: s, payload: i }) => s === eyt.toString() && i.requestId === n
  );
  return (a = FV.fromId(e)) == null || a.show(), r.payload;
}
function* xme(t) {
  try {
    yield* Zs(kme);
  } finally {
    yield* D(t);
  }
}
function* ayt({ payload: t, meta: e }) {
  yield* Jr(xme, qh.failure({ code: qh.failure }, e.requestId));
  try {
    const n = yield* ryt(t.provider, t.windowId);
    yield* D(qh.success(n, e.requestId));
  } catch (n) {
    yield* D(qh.failure(n, e.requestId));
  }
}
function* iyt({ payload: t, meta: e }) {
  yield* Jr(xme, Yh.failure({ code: Yh.failure.toString() }, e.requestId));
  try {
    const n = yield* syt(t.email, t.windowId);
    yield* D(Yh.success(n, e.requestId));
  } catch (n) {
    yield* D(Yh.failure(n, e.requestId));
  }
}
function* oyt(t) {
  t.type === Yh.request.toString() && (yield* Jr(iyt, t)),
    t.type === qh.request.toString() && (yield* Jr(ayt, t));
}
function* uyt() {
  yield* Pr([Yh.request, qh.request, kme], oyt);
}
function* jI(t) {
  t != null && (yield* D(tO(t.color_scheme)), yield* D(ZQ(t.synchronize_key)));
}
function lyt(t) {
  return t.sync.inProcess !== "no";
}
const Lme = Nt(c5e, MP, (t, e) => (t ? { color_scheme: e } : void 0));
function* cyt(t, { payload: e, meta: n }) {
  const r = yield* Pe(Ea);
  try {
    if (!r) {
      const a = yield* ln(us);
      a.account.team &&
        (yield* Me(
          { context: t, fn: "convertUserAccountToTeamType" },
          { userId: a.account.user_id }
        ));
    }
    yield* ln($t, e), yield* D(Cy.success(void 0, n.requestId));
  } catch (a) {
    yield* D(
      Cy.failure({ status: a.status, code: Cy.failure.toString() }, n.requestId)
    );
  }
}
function* dyt(t, { payload: e, meta: n }) {
  if (!(yield* Pe(bu))) {
    yield* D(
      $t.failure(
        { status: null, reason: new x$().name, code: $t.failure.toString() },
        n.requestId
      )
    );
    return;
  }
  let a;
  try {
    a = yield* Me({ context: t.auth, fn: "updateUserProfile" });
  } catch (s) {
    yield* D(
      $t.failure(
        {
          status: s.status,
          reason: new k$().name,
          code: $t.failure.toString(),
        },
        n.requestId
      )
    );
    return;
  }
  try {
    const s = yield* Pe(Lme);
    let i;
    e === "sync-all-data"
      ? (i = yield* Me({ context: t, fn: "syncAllData" }, a, s))
      : (i = yield* Me({ context: t, fn: "sync" }, a, s)),
      yield* jI(i == null ? void 0 : i.settingsChanges),
      yield* D(go.request()),
      yield* D(
        $t.success(
          { lastSyncDate: t.settings.getDeprecatedLastSync() },
          n.requestId
        )
      );
  } catch (s) {
    sn.is(s) && (yield* gyt(s)),
      e === "sync-all-data"
        ? tt.exception("Sync all data failed", s)
        : tt.exception("Sync failed", s);
    const i = _r.networkError(s) ? "NetworkError" : null;
    yield* D(
      $t.failure(
        { status: s.status, reason: i, code: $t.failure.toString() },
        n.requestId
      )
    );
  }
}
function* pyt(t, { payload: e, meta: n }) {
  try {
    yield* Me({ context: t, fn: "setSynchronizeKeySetting" }, e);
    const r = yield* Me(
      { context: t.synchronization, fn: "pushUserSettings" },
      t.api,
      {}
    );
    yield* jI(r), yield* D(cE.success(void 0, n.requestId));
  } catch {
    yield* D(cE.failure({ code: cE.failure.toString() }, n.requestId));
    return;
  }
  if (e) {
    const r = yield* Pe(_i),
      a = yield* Pe(Ea),
      s = yield* Pe(Oa);
    if (r == null) return;
    const o = yield* Me(
      { context: t, fn: "getAccessibleVaultKeyIds" },
      r,
      a ? { canManageTeam: s } : null
    );
    if (o.status === "vaults setup incomplete") return;
    yield* Me(
      { context: t.store, fn: "markSyncKeyCollectionsAsUpdateFailed" },
      { vaultKeyIds: o.keyIds }
    );
  }
}
function* hyt(t, { payload: e }) {
  if (!(!(yield* Pe(bu)) || e === "auto"))
    try {
      const r = yield* Me(
        { context: t.synchronization, fn: "pushUserSettings" },
        t.api,
        { color_scheme: e }
      );
      yield* jI(r);
    } catch {}
}
function* fyt(t) {
  (yield* Pe(lyt)) && (yield* Of([Zs($t.failure), Zs($t.success)])),
    yield* ln($t, t);
}
function* myt(t) {
  yield* Me(aue, t.store), yield* D(ss(Dl(t)));
}
function* Syt(t) {
  yield* Gn([
    Af($t.request, dyt, t),
    Af(Cy.request, cyt, t),
    $e(cE.request, pyt, t),
    $e($t.success, myt, t),
    $e(eO, hyt, t),
  ]);
}
function* yyt() {
  yield* zt(QQ, fyt);
}
function* gyt(t) {
  for (const e of t.errorContext ?? []) {
    const { kind: n } = e;
    n != null &&
      (yield* D(
        nQ({
          action: e.operation === "decrypt" ? "Decryption" : "Encryption",
          entityID: e.id,
          cryptorVersion: e.cryptorVersion ?? 0,
          entity: n,
        })
      ));
  }
}
function* vyt(t) {
  yield* Gn([
    zt(M5, function* (n) {
      const r = yield* Pe(ia);
      yield* Me({ context: t.store, fn: "updateTag" }, n, QN(r));
    }),
    zt(D5, function* (n) {
      const r = yield* Pe(ia);
      yield* Me({ context: t.store, fn: "deleteTag" }, n, QN(r));
    }),
    $e([M5.success, D5.success], _yt, t),
  ]);
}
function* _yt(t) {
  yield* D(ss(wl(t)));
  const e = yield* Pe(ia);
  yield* D(Ru(ku(t, e))), yield* D($t.request("does-not-block-ui"));
}
class Mme {
  constructor(e) {
    (this.transformTarget = e),
      (this.storage = {
        group: new Map(),
        host: new Map(),
        sshConfig: new Map(),
        telnetConfig: new Map(),
        identity: new Map(),
        sshKey: new Map(),
        proxy: new Map(),
        snippet: new Map(),
        hostChain: new Map(),
        sshCertificate: new Map(),
        portForwardingRule: new Map(),
        snippetsPackage: new Map(),
        knownHost: new Map(),
      });
  }
  get(e, n) {
    const r = this.storage[n];
    return rn(e.local_id != null), r.get(e.local_id) ?? null;
  }
  set(e) {
    const n = this.storage[e.entityName];
    if (e.original.local_id == null) return;
    rn(e.copy.local_id != null);
    const r = this.transformTarget(e.copy);
    rn(r != null), n.set(e.original.local_id, r);
  }
}
function byt() {
  const t = new Map();
  return {
    get(e) {
      const n = t.get(e);
      if (n != null) return n;
      const r = new Mme((a) => a.local_id ?? null);
      return t.set(e, r), r;
    },
  };
}
function zI(t) {
  switch ((rn(Wa.is(t)), t.entityName)) {
    case "host":
      return new Tn(t);
    case "group":
      return new Fs(t);
    case "snippet":
      return new qa(t);
    case "snippetsPackage":
      return new Mo(t);
    case "portForwardingRule":
      return new Xi(t);
    case "identity":
      return new xr(t);
    case "sshKey":
      return new Ia(t);
    case "knownHost":
      return new gl(t);
  }
  throw new Us(`Cannot un-marshall ${t.entityName}`);
}
function Eyt() {
  let t = null;
  return {
    getDelay: () => (t ? N6(a5 - (+new Date() - +t), 0, a5) : 0),
    setLatestIterationTime: () => {
      t = new Date();
    },
  };
}
function Tyt(t) {
  let e = !1;
  return {
    wizardWasShown: () => {
      e = !0;
    },
    wizardShown: () => e,
    showUndo: () => t && !e,
  };
}
function* wyt({ payload: t }) {
  const e = yield* Pe(RQ);
  for (const n of e) n.windowId === t && (yield* D(eR.closed(n)));
}
function* y0({
  payload: t,
  wizardDialog: e,
  wizardPresence: n,
  animationTimer: r,
}) {
  yield* Bi(r.getDelay()),
    n.wizardShown() || (yield* D(K0(e)), n.wizardWasShown()),
    yield* D(ON(t));
  const a = yield* s(eR[t.step]);
  return (
    a.result &&
      (r.setLatestIterationTime(), yield* D(ON({ ...t, step: "process" }))),
    a
  );
  function* s(o) {
    return yield* Of({ closed: Zs(i), result: Zs(u) });
    function u(l) {
      return l.type === o.toString() && l.payload.wizardID === t.wizardID;
    }
  }
  function i(o) {
    return o.type === eR.closed.toString() && o.payload.wizardID === t.wizardID;
  }
}
function* Pyt({
  payload: t,
  updatedTargetState: e,
  wizardMeta: n,
  wizardDialog: r,
  wizardPresence: a,
  animationTimer: s,
}) {
  const { wizardID: i } = n,
    { entities: o, operation: u = "Move" } = t,
    l = yield* ln(Nme, { entities: o, targetState: e }),
    c = { entities: o, targetState: e, backReferences: l.backReferences };
  if (u === "Move" && l.result === "Move")
    return {
      entities: yield* ln(dv, {
        entities: o,
        targetState: e,
        cancelable: a.showUndo(),
      }),
    };
  const d = { resolution: "Move", pfRuleResolution: "Move" };
  if (l.hasConflicts) {
    const y = { ...n, ...c, step: "resolve_conflicts" };
    yield* D(
      Rh("dependencyScreenOpened", {
        wizardID: i,
        dependencyHosts: c.backReferences.host.length,
        dependencySnippets: c.backReferences.snippet.length,
        dependencyKeys: c.backReferences.sshKey.length,
        dependencyIdentities: c.backReferences.identity.length,
      })
    );
    const { closed: I, result: O } = yield* y0({
        payload: y,
        wizardPresence: a,
        wizardDialog: r,
        animationTimer: s,
      }),
      g = O == null ? void 0 : O.payload;
    if (
      (yield* D(
        Rh("dependencyResolutionChosen", {
          wizardID: i,
          dependencyResolution: I ? "Cancel" : g.payload,
          dependencyHosts: c.backReferences.host.length,
          dependencySnippets: c.backReferences.snippet.length,
          dependencyKeys: c.backReferences.sshKey.length,
          dependencyIdentities: c.backReferences.identity.length,
        })
      ),
      I)
    )
      return null;
    d.resolution = g.payload;
  }
  const p = l.hasCopyResolvablePFRuleConflicts && d.resolution === "Copy";
  if (l.hasPFRuleConflicts && !p) {
    const y = {
      ...n,
      ...c,
      backReferences: {
        ...c.backReferences,
        portForwarding:
          d.resolution === "Copy"
            ? l.categorizedPFRules.unresolvable
            : l.categorizedPFRules.affected,
      },
      step: "resolve_port_forwarding_conflicts",
    };
    yield* D(Rh("portForwardingLinksScreenOpened", { wizardID: i }));
    const { closed: I, result: O } = yield* y0({
        payload: y,
        wizardPresence: a,
        wizardDialog: r,
        animationTimer: s,
      }),
      g = O == null ? void 0 : O.payload;
    if (
      (yield* D(
        Rh("portForwardingLinksResolutionChosen", {
          wizardID: i,
          portForwardingLinkResolution: I ? "Cancel" : g.payload,
        })
      ),
      I)
    )
      return null;
    d.pfRuleResolution = g.payload;
  }
  return {
    entities: yield* ln(dv, {
      entities: o,
      targetState: e,
      cancelable: a.showUndo(),
      conflictResolutions: d,
    }),
  };
}
function* Iyt(t, e) {
  if (!t.is_shared) return !1;
  for (const n of e) if (yield* Cyt(n)) return !0;
  return !1;
}
function* Cyt(t) {
  var e;
  if (t.entityName === "host" || t.entityName === "group") return !t.is_shared;
  if (t.entityName === "portForwardingRule") return !t.host.is_shared;
  if (t.entityName === "snippet")
    return (
      ((e = t.targetHosts) == null ? void 0 : e.some((n) => !n.is_shared)) ?? !1
    );
  if (t.entityName === "snippetsPackage") {
    const n = yield* Pe((r) => B8e(r, t));
    return !!(
      n != null &&
      n.some((r) => {
        var a;
        return (a = r.targetHosts) == null
          ? void 0
          : a.some((s) => !s.is_shared);
      })
    );
  }
  return !1;
}
function* Ayt({ payload: t, meta: e, ...n }) {
  const {
      wizardID: r,
      targetState: a,
      operation: s,
      source: i,
      cancelable: o,
    } = t,
    { windowId: u = 3 } = e,
    l = { wizardID: r, windowId: u },
    c = yield* Pe(ia),
    d = t.entities
      .filter((R) => !Es(R, a))
      .map(zI)
      .map((R) =>
        s === "Copy" && R.entityName === "snippet" && !Py(R, c)
          ? R.clone({ targetHosts: null })
          : R
      ),
    p = d.every(
      (R) => (R.entityName === "snippet" && s === "Copy") || Py(R, c)
    ),
    m = yield* Pe((R) => U8e(R, a));
  if (!p || !m) return;
  const y = {
      entities: d,
      targetState: a,
      backReferences: {
        snippet: [],
        sshKey: [],
        identity: [],
        host: [],
        portForwarding: [],
      },
    },
    O = {
      dialogData: {
        dialog: "ChangeVault",
        target: u,
        props: { wizardID: r, operation: s === "Move" ? "move" : "copy" },
        options: { closeOnBackdropClick: !1 },
      },
      requestMeta: { requestId: r, windowId: u },
    },
    g = Eyt(),
    C = Tyt(o);
  try {
    yield* Of([Me(H), Me(de)]);
  } catch {}
  function* H() {
    const R = yield* Iyt(a, d);
    let ge = null;
    try {
      if (R) {
        const Te = { ...l, ...y, step: "select_credentials_mode" };
        yield* D(XX({ credentialsSharingMode: "No credentials", wizardID: r }));
        const { closed: Ce, result: Ee } = yield* y0({
          payload: Te,
          wizardPresence: C,
          wizardDialog: O,
          animationTimer: g,
        });
        if (Ce) return yield* he(new Fd());
        ge = (Ee == null ? void 0 : Ee.payload).payload;
      }
      const ve = { ...a, credentials_mode: ge };
      if (s === "Copy") {
        const Te = yield* ln(Hme, {
          entities: d,
          targetState: ve,
          cancelable: C.showUndo(),
        });
        return yield* B(Te);
      }
      const we = yield* Pyt({
        ...n,
        payload: { ...t, entities: d },
        meta: e,
        updatedTargetState: ve,
        wizardPresence: C,
        wizardMeta: l,
        wizardDialog: O,
        animationTimer: g,
      });
      return we ? yield* B(we.entities) : yield* he(new Fd());
    } catch (ve) {
      return yield* he(ve);
    }
  }
  function* B(R) {
    var ve;
    C.wizardShown() &&
      (yield* Of([
        Bi(kMe),
        y0({
          payload: { ...l, ...y, step: "success" },
          wizardPresence: C,
          wizardDialog: O,
          animationTimer: g,
        }),
      ]));
    const ge = ((ve = oQ(R)) == null ? void 0 : ve.nameInAnalytic) ?? null;
    yield* D(
      rQ({
        changeVaultAction: s,
        wizardID: r,
        entity: ge,
        changeVaultSource: i,
      })
    ),
      yield* U(),
      yield* D(ZN.success({ entities: R }, e.requestId));
  }
  function* he(R) {
    R && !(R instanceof Fd) && tt.exception("Failed to change vault", R),
      yield* U(),
      yield* D(ZN.failure(R, e.requestId));
  }
  function* de() {
    yield* Zs(R), yield* Zs(ge), yield* he(new Fd());
    function R(ve) {
      return ve.type === i_.toString() && ve.payload === u;
    }
    function ge(ve) {
      return (
        ve.type === ON.toString() &&
        ve.payload.wizardID === r &&
        ve.payload.step !== "success"
      );
    }
  }
  function* U() {
    yield* D(Znt(l)), yield* D(R$(r));
  }
}
function Dme(t, e, n) {
  const r = t.filter(Fs.is),
    a = t.filter(Mo.is);
  return {
    snippet: e.snippet.filter((i) => s(i) && n.snippet.isUsed(i) && !Fme(i, a)),
    sshKey: e.sshKey.filter((i) => s(i) && n.sshKey.isUsed(i)),
    identity: e.identity.filter((i) => s(i) && n.identity.isUsed(i)),
    host: e.host.filter((i) => s(i) && n.host.isUsed(i) && !Gme(i, r)),
  };
  function s(i) {
    return !t.some((o) => pF(o, i));
  }
}
function Oyt(t, e) {
  return {
    snippet: t.snippet.filter((n) => e.snippet.isUsed(n)),
    sshKey: t.sshKey.filter((n) => e.sshKey.isUsed(n)),
    identity: t.identity.filter((n) => e.identity.isUsed(n)),
    host: t.host.filter((n) => e.host.isUsed(n)),
  };
}
function nR(t, e, n) {
  const r = Hyt(t, e),
    a = r.portForwarding,
    s = e.portForwardingRule.filter(
      (l) => !a.some((c) => l.local_id === c.local_id)
    ),
    [i, o] = Go(s, (l) => Es(l, n));
  return { excludes: [...a, ...i], affected: o, unresolvable: o.filter(u) };
  function u(l) {
    return r.host.some((c) => {
      var d;
      return (
        (c == null ? void 0 : c.local_id) ===
        ((d = l == null ? void 0 : l.host) == null ? void 0 : d.local_id)
      );
    });
  }
}
function Hyt(t, e) {
  const n = (s) => t.some((i) => pF(i, s)),
    r = t.filter(Fs.is),
    a = t.filter(Mo.is);
  return {
    snippet: e.snippet.filter((s) => n(s) || Fme(s, a)),
    sshKey: e.sshKey.filter((s) => n(s)),
    identity: e.identity.filter((s) => n(s)),
    host: e.host.filter((s) => n(s) || Gme(s, r)),
    portForwarding: e.portForwardingRule.filter((s) => n(s)),
  };
}
const Gme = (t, e) =>
    t.parentGroups.some((n) => e.some((r) => r.local_id === n.local_id)),
  Fme = (t, e) =>
    e.some((n) => {
      var r;
      return n.local_id === ((r = t.package) == null ? void 0 : r.local_id);
    });
class lm {
  constructor(e, n, r) {
    (this.originalEntities = e),
      (this.store = n),
      (this.targetState = r),
      (this.relatedEntitiesMap = Nyt()),
      (this.visitedEntities = new Set());
    for (const a of e) this.insertEntity(a);
  }
  insertEntity(e) {
    switch (e.constructor) {
      case Fs:
        this.addParentGroup(e);
        break;
      case Tn:
        this.addHost(e);
        break;
      case Xi:
        this.addPortForwardingRule(e);
        break;
      case qa:
        this.snippet = e;
        break;
      case xr:
        this.addIdentity(e);
        break;
      case Ia:
        this.addSshKey(e);
        break;
      case Mo:
        this.addSnippetsPackage(e);
        break;
      case gl:
        this.knownHost = e;
        break;
    }
  }
  pruneAllPFRulesExcept(e) {
    this.relatedEntitiesMap.portForwardingRule =
      this.relatedEntitiesMap.portForwardingRule.filter((n) =>
        e.some((r) => n.local_id === r.local_id)
      );
  }
  set hostChain(e) {
    if (!(e == null || this.didVisit(e))) {
      this.visited(e), this.relatedEntitiesMap.hostChain.push(e);
      for (const n of e.hosts_chain) {
        const r = this.store.getHost(n);
        r != null && this.addHost(r);
      }
    }
  }
  set knownHost(e) {
    e == null ||
      this.didVisit(e) ||
      (this.visited(e), this.relatedEntitiesMap.knownHost.push(e));
  }
  set snippet(e) {
    if (!(e == null || this.didVisit(e))) {
      this.visited(e), this.relatedEntitiesMap.snippet.push(e);
      for (const n of e.targetHosts ?? []) {
        const r = this.store.getHost(n);
        r != null && this.addHost(r);
      }
    }
  }
  addParentGroup(e) {
    if (e == null || this.didVisit(e)) return;
    const { children_groups: n, children_hosts: r } =
        this.store.getChildrenGroupsAndHostsForSharing(e),
      a = n.findIndex((s) => s.local_id === e.local_id);
    a >= 0 && (n[a] = e);
    for (const s of n) this.addGroup(s);
    for (const s of r) this.addHost(s);
  }
  addSnippetsPackage(e) {
    if (e == null || this.didVisit(e)) return;
    this.visited(e), this.relatedEntitiesMap.snippetsPackage.push(e);
    const n = this.store.getChildrenSnippets(e);
    for (const r of n) this.snippet = r;
  }
  addGroup(e) {
    e == null ||
      this.didVisit(e) ||
      (this.visited(e),
      this.relatedEntitiesMap.group.push(e),
      this.addSshConfig(e.ssh_config, Bb(e, this.targetState)),
      this.addTelnetConfig(e.telnet_config, Bb(e, this.targetState)));
  }
  addHost(e) {
    if (e == null || this.didVisit(e)) return;
    this.visited(e),
      this.relatedEntitiesMap.host.push(e),
      this.addSshConfig(e.ssh_config, Bb(e, this.targetState)),
      this.addTelnetConfig(e.telnet_config, Bb(e, this.targetState)),
      this.store
        .getPortForwardingRules()
        .filter((r) => r.host.local_id === e.local_id)
        .forEach((r) => this.addPortForwardingRule(r));
  }
  addPortForwardingRule(e) {
    this.didVisit(e) ||
      (this.visited(e),
      this.relatedEntitiesMap.portForwardingRule.push(e),
      this.addHost(e.host));
  }
  addSshConfig(e, n) {
    e == null ||
      this.didVisit(e) ||
      (this.visited(e),
      this.relatedEntitiesMap.sshConfig.push(e),
      this.addProxy(e.proxy),
      (this.snippet = e.startup_snippet),
      (this.hostChain =
        e.host_chain != null
          ? new hy({ ...e.host_chain, sshConfig: e })
          : null),
      n.addSshKeysAndIdentities && this.addIdentity(e.identity));
  }
  addProxy(e) {
    e == null ||
      this.didVisit(e) ||
      (this.visited(e),
      this.relatedEntitiesMap.proxy.push(e),
      this.addIdentity(e.identity));
  }
  addTelnetConfig(e, n) {
    e == null ||
      this.didVisit(e) ||
      (this.visited(e),
      this.relatedEntitiesMap.telnetConfig.push(e),
      (this.snippet = e.startup_snippet),
      n.addSshKeysAndIdentities && this.addIdentity(e.identity));
  }
  addIdentity(e) {
    e == null ||
      this.didVisit(e) ||
      (this.visited(e),
      this.relatedEntitiesMap.identity.push(e),
      this.addSshKey(e.ssh_key));
  }
  addSshKey(e) {
    e == null ||
      this.didVisit(e) ||
      (this.visited(e),
      this.relatedEntitiesMap.sshKey.push(e),
      e.certificates.forEach((n) => this.addSshCertificate(n)));
  }
  addSshCertificate(e) {
    e == null ||
      this.didVisit(e) ||
      (this.visited(e), this.relatedEntitiesMap.sshCertificate.push(e));
  }
  didVisit(e) {
    return this.visitedEntities.has(e.entityLocalPath);
  }
  visited(e) {
    return this.visitedEntities.add(e.entityLocalPath);
  }
}
function Bb(t, e) {
  return t.is_shared && e.is_shared
    ? { addSshKeysAndIdentities: t.credentials_mode === "credentials_sharing" }
    : e.is_shared && e.credentials_mode === "credentials_sharing"
    ? { addSshKeysAndIdentities: !0 }
    : !e.is_shared && t.credentials_mode === "credentials_sharing"
    ? { addSshKeysAndIdentities: !0 }
    : { addSshKeysAndIdentities: !1 };
}
function Ume() {
  return [
    "group",
    "host",
    "sshConfig",
    "telnetConfig",
    "proxy",
    "snippetsPackage",
    "snippet",
    "identity",
    "hostChain",
    "sshKey",
    "sshCertificate",
    "portForwardingRule",
    "knownHost",
  ];
}
function Nyt() {
  return Object.fromEntries(Ume().map((t) => [t, []]));
}
function Ryt(t) {
  return Ume().map((e) => ({ entityName: e, entities: t[e] }));
}
async function kyt(t, e) {
  for (const n of Ryt(t)) for (const r of n.entities) await e[n.entityName](r);
}
class Kme {
  constructor(e, n, { store: r, settings: a }) {
    (this.entityGraph = n),
      (this.store = r),
      (this.settings = a),
      (this.vaultTargetState = {
        is_shared: e.is_shared,
        encrypted_with: e.encrypted_with,
        credentials_mode:
          e.credentials_mode ?? (e.is_shared ? "no_credentials_sharing" : null),
      }),
      (this.result = new Mme(
        (s) => (
          rn(
            !(
              s instanceof Xs ||
              s instanceof up ||
              s instanceof ek ||
              s instanceof Ap ||
              s instanceof NT
            )
          ),
          s ?? null
        )
      ));
  }
  async share() {
    return (
      await kyt(this.entityGraph.relatedEntitiesMap, this),
      this.entityGraph.originalEntities
        .map((e) => this.result.get(e, e.entityName))
        .filter(xn)
    );
  }
  async host(e) {
    if (e) {
      const n = e.group && this.store.getGroup(e.group);
      n && !Es(n, this.vaultTargetState) && (e.group = null),
        this.hasVaultChanges(e)
          ? (this.injectTargetState(e), this.injectTargetCredentialsMode(e))
          : this.injectFixedCurrentCredentialsMode(e),
        await this.store.setHost(e),
        this.result.set({ original: e, copy: e, entityName: e.entityName });
    }
  }
  async portForwardingRule(e) {
    e != null &&
      (this.hasVaultChanges(e) && this.injectTargetState(e),
      await this.store.setPortForwardingRule(e),
      this.result.set({ original: e, copy: e, entityName: e.entityName }));
  }
  async group(e) {
    if (e == null) return;
    const n =
        e.parent_group &&
        this.entityGraph.relatedEntitiesMap.group.find((s) => {
          var i;
          return (
            s.local_id === ((i = e.parent_group) == null ? void 0 : i.local_id)
          );
        }),
      r = e.parent_group && this.store.getGroup(e.parent_group);
    !n && r && !Es(r, this.vaultTargetState) && (e.parent_group = null),
      this.hasVaultChanges(e)
        ? (this.injectTargetState(e), this.injectTargetCredentialsMode(e))
        : this.injectFixedCurrentCredentialsMode(e),
      await this.store.setGroup(e),
      this.result.set({ original: e, copy: e, entityName: e.entityName });
  }
  async hostChain(e) {
    if (e == null) return;
    const n = this.entityGraph.relatedEntitiesMap.sshConfig.find((r) => {
      var a;
      return ((a = r.host_chain) == null ? void 0 : a.local_id) === e.local_id;
    });
    n != null &&
      (this.injectTargetState(e),
      await this.store.hostChainsRepository.saveChain(
        new hy({ ...e, sshConfig: n })
      ));
  }
  async identity(e) {
    if (e == null) return;
    const { store: n } = this;
    if (this.shouldSyncIdentities) {
      this.injectTargetState(e),
        await n.setIdentity(e),
        this.result.set({ original: e, copy: e, entityName: e.entityName });
      return;
    }
    if (this.hasVaultChanges(e)) {
      this.injectTargetState(e);
      const r = await n.recreateIdentityAndReplaceInLinks(e);
      if (r) {
        this.result.set({ original: e, copy: r, entityName: e.entityName });
        return;
      }
    }
    await n.setIdentity(e),
      this.result.set({ original: e, copy: e, entityName: e.entityName });
  }
  async sshKey(e) {
    if (e != null) {
      if (this.shouldSyncIdentities) {
        this.injectTargetState(e),
          await this.store.setSshKey(e),
          this.result.set({ original: e, copy: e, entityName: e.entityName });
        return;
      }
      if (this.hasVaultChanges(e)) {
        this.injectTargetState(e);
        const n = await this.store.recreateSshKeyAndReplaceInLink(e);
        if (n) {
          this.result.set({ original: e, copy: n, entityName: e.entityName });
          return;
        }
      }
      await this.store.setSshKey(e),
        this.result.set({ original: e, copy: e, entityName: e.entityName });
    }
  }
  async snippet(e) {
    if (e == null) return;
    const n = e.package && this.store.getSnippetsPackage(e.package);
    n && !Es(n, this.vaultTargetState) && (e.package = null),
      this.hasVaultChanges(e) && this.injectTargetState(e),
      await this.store.setSnippet(e),
      this.result.set({ original: e, copy: e, entityName: e.entityName });
  }
  async hostSnippet(e) {
    if (e == null) return;
    const n = this.entityGraph.relatedEntitiesMap.snippet.find(
      (r) => (r == null ? void 0 : r.local_id) === e.local_id
    );
    n != null &&
      ((n.targetHosts = e.targetHosts),
      await this.store.hostSnippetsRepository.saveForSnippet(n));
  }
  async snippetsPackage(e) {
    e != null &&
      (this.hasVaultChanges(e) && this.injectTargetState(e),
      await this.store.setSnippetsPackage(e),
      this.result.set({ original: e, copy: e, entityName: e.entityName }));
  }
  async knownHost(e) {
    e != null &&
      (this.hasVaultChanges(e) && this.injectTargetState(e),
      await this.store.setKnownHost(e),
      this.result.set({ original: e, copy: e, entityName: e.entityName }));
  }
  async sshConfig(e) {}
  async telnetConfig(e) {}
  async sshCertificate(e) {}
  async proxy(e) {}
  get shouldSyncIdentities() {
    return this.vaultTargetState.is_shared || this.settings.isSynchingKeys();
  }
  injectTargetState(e) {
    Object.assign(e, Zo(this.vaultTargetState));
  }
  injectTargetCredentialsMode(e) {
    (e.is_shared &&
      this.vaultTargetState.is_shared &&
      e.credentials_mode != null &&
      this.vaultTargetState.credentials_mode != null) ||
      (e.credentials_mode = this.vaultTargetState.credentials_mode);
  }
  injectFixedCurrentCredentialsMode(e) {
    if (e.is_shared) {
      e.credentials_mode ?? (e.credentials_mode = "no_credentials_sharing");
      return;
    }
    e.credentials_mode = null;
  }
  hasVaultChanges(e) {
    return e.hasVaultChanges || !Es(e, this.vaultTargetState);
  }
}
function fF(...t) {
  return t;
}
class Ti {
  constructor(e, n, r, a) {
    (this.entityName = e),
      (this.store = n),
      (this.graphed = r),
      (this.copiesStorage = a),
      (this.replacementCache = new Map()),
      (this.visitedOriginal = new Set()),
      (this.copies = new Map()),
      (this.optionalRegistry = null);
  }
  withRegistry(e) {
    this.optionalRegistry = e;
  }
  get registry() {
    const { optionalRegistry: e } = this;
    return rn(e != null), e;
  }
  get(e, n) {
    const { local_id: r } = e;
    rn(r != null);
    const a = this.copies.get(r);
    if (a != null) return a;
    const s = this.replacementCache.get(r);
    return s ?? (n.globalLookup ? this.fetchCopyFromStorage(e) : null);
  }
  wasCopied(e) {
    const { local_id: n } = e;
    return rn(n != null), this.visitedOriginal.has(n);
  }
  async getCopy(e, n) {
    if (e == null) return;
    const { local_id: r } = e;
    if ((rn(r != null), this.copies.has(r))) return e;
    if (this.visitedOriginal.has(r))
      return this.replacementCache.get(e.local_id);
    const a = this.get(e, n);
    if (a != null) return a;
    this.visitedOriginal.add(e.local_id);
    const s = await this.createCopy(e);
    return (
      await this.save(s),
      this.recordCopy({ original: e, copy: s }),
      this.replaceReferencesInGraph({ original: e, copy: s }),
      s
    );
  }
  fetchCopyFromStorage(e) {
    const n = this.copiesStorage.get(e, this.entityName);
    if (n == null) return null;
    const r = this.fetch(n);
    return r == null
      ? null
      : (this.recordCopy({ original: e, copy: r }),
        this.replaceReferencesInGraph({ original: e, copy: r }),
        r);
  }
  recordCopy(e) {
    this.replacementCache.set(e.original.local_id, e.copy),
      rn(e.copy.local_id != null, `${e.copy.entityName} must be already saved`),
      this.copies.set(e.copy.local_id, e.copy),
      this.copiesStorage.set({ ...e, entityName: this.entityName });
  }
  replaceReferencesInGraph(e) {
    const { original: n, copy: r } = e,
      a = Wyt(this.graphed, this.entityName),
      s = a.findIndex((i) => i.local_id === n.local_id);
    s >= 0 && (a[s] = r);
  }
}
const $a = () => ({ local_id: void 0, id: void 0, updated_at: void 0 });
class xyt extends Ti {
  async createCopy(e) {
    const n = e.cloud_config ? tk({ ...e.cloud_config, ...$a() }) : void 0,
      r = await this.registry.sshConfig.getCopy(e.ssh_config, {
        globalLookup: !1,
      }),
      a = await this.registry.telnetConfig.getCopy(e.telnet_config, {
        globalLookup: !1,
      });
    return e.clone({
      ...$a(),
      label: zp(e),
      ssh_config: r,
      telnet_config: a,
      cloud_config: n,
    });
  }
  async save(e) {
    await this.store.setGroup(e);
  }
  fetch(e) {
    return this.store.getGroup({ local_id: e });
  }
}
class Lyt extends Ti {
  async createCopy(e) {
    const n =
      (await this.registry.host.getCopy(e.host, { globalLookup: !0 })) ??
      this.registry.host.get(e.host, { globalLookup: !0 });
    return rn(n != null), e.clone({ ...$a(), label: zp(e), host: n });
  }
  async save(e) {
    await this.store.setPortForwardingRule(e);
  }
  fetch(e) {
    return this.store.getPortForwardingRule({ local_id: e });
  }
}
class Myt extends Ti {
  async createCopy(e) {
    const n = await this.registry.sshConfig.getCopy(e.ssh_config, {
        globalLookup: !1,
      }),
      r = await this.registry.telnetConfig.getCopy(e.telnet_config, {
        globalLookup: !1,
      });
    await this.copyChainNodes(e);
    const a = this.graphed.group.some((s) => {
      var i;
      return s.local_id === ((i = e.group) == null ? void 0 : i.local_id);
    });
    return e.clone({
      ...$a(),
      label: zp(e),
      group: a ? e.group : null,
      cloud_instance_id: e.cloud_instance_id,
      cloud_instance_type: e.cloud_instance_type,
      ssh_config: n,
      telnet_config: r,
    });
  }
  async copyChainNodes(e) {
    var r;
    const { ssh_config: n } = e;
    if (n != null)
      for (const a of ((r = n == null ? void 0 : n.host_chain) == null
        ? void 0
        : r.hosts_chain) ?? []) {
        const s = this.graphed.host.find((i) => i.local_id === a.local_id);
        s != null &&
          (await this.registry.host.getCopy(s, { globalLookup: !0 }));
      }
  }
  async save(e) {
    await this.store.setHost(e);
  }
  fetch(e) {
    return this.store.getHost({ local_id: e });
  }
  replaceReferencesInGraph(e) {
    super.replaceReferencesInGraph(e);
    const { original: n, copy: r } = e;
    n.ssh_config != null &&
      r.ssh_config != null &&
      this.registry.sshConfig.replaceReferencesInGraph({
        original: n.ssh_config,
        copy: r.ssh_config,
      }),
      n.telnet_config != null &&
        r.telnet_config != null &&
        this.registry.telnetConfig.replaceReferencesInGraph({
          original: n.telnet_config,
          copy: r.telnet_config,
        });
  }
}
class Dyt extends Ti {
  async createCopy(e) {
    const n = await this.registry.snippet.getCopy(e.startup_snippet, {
        globalLookup: !0,
      }),
      r =
        e.identity && !e.identity.is_visible
          ? await this.registry.identity.getCopy(e.identity, {
              globalLookup: !0,
            })
          : e.identity,
      a = await this.registry.proxy.getCopy(e.proxy, { globalLookup: !1 });
    return e.clone({
      ...$a(),
      startup_snippet: n,
      identity: r,
      proxy: a,
      host_chain: null,
    });
  }
  async save(e) {
    await this.store.setSshConfig(e, null);
  }
  fetch(e) {
    return this.store.getSshConfig({ local_id: e });
  }
  replaceReferencesInGraph(e) {
    super.replaceReferencesInGraph(e);
    const { original: n, copy: r } = e;
    n.startup_snippet != null &&
      r.startup_snippet != null &&
      this.registry.snippet.replaceReferencesInGraph({
        original: n.startup_snippet,
        copy: r.startup_snippet,
      }),
      n.identity != null &&
        r.identity != null &&
        this.registry.identity.replaceReferencesInGraph({
          original: n.identity,
          copy: r.identity,
        }),
      n.proxy != null &&
        r.proxy != null &&
        this.registry.proxy.replaceReferencesInGraph({
          original: n.proxy,
          copy: r.proxy,
        });
  }
}
class Gyt extends Ti {
  async createCopy(e) {
    const n = e.hosts_chain.map(
        (a) => this.registry.host.get(a, { globalLookup: !1 }) ?? a
      ),
      r = this.registry.sshConfig.get(
        { local_id: e.sshConfig.local_id ?? null },
        { globalLookup: !1 }
      );
    if (r == null && !e.isModified)
      throw new Us(
        "Non modified hostchain, with no ssh config copy was tried to copy"
      );
    return r == null ? e : e.clone({ ...$a(), hosts_chain: n, sshConfig: r });
  }
  async save(e) {
    await this.store.hostChainsRepository.saveChain(e);
  }
  fetch(e) {
    return this.store.fetchHostChain({ local_id: e });
  }
}
class Fyt extends Ti {
  async createCopy(e) {
    const n = await this.registry.snippet.getCopy(e.startup_snippet, {
        globalLookup: !0,
      }),
      r =
        e.identity && !e.identity.is_visible
          ? await this.registry.identity.getCopy(e.identity, {
              globalLookup: !0,
            })
          : e.identity;
    return e.clone({ ...$a(), startup_snippet: n, identity: r });
  }
  async save(e) {
    await this.store.setTelnetConfig(e);
  }
  fetch(e) {
    return this.store.getTelnetConfig({ local_id: e });
  }
  replaceReferencesInGraph(e) {
    super.replaceReferencesInGraph(e);
    const { original: n, copy: r } = e;
    n.startup_snippet != null &&
      r.startup_snippet != null &&
      this.registry.snippet.replaceReferencesInGraph({
        original: n.startup_snippet,
        copy: r.startup_snippet,
      }),
      n.identity != null &&
        r.identity != null &&
        this.registry.identity.replaceReferencesInGraph({
          original: n.identity,
          copy: r.identity,
        });
  }
}
class Uyt extends Ti {
  async createCopy(e) {
    const r = this.graphed.sshKey.some((a) => {
      var s;
      return ((s = e.ssh_key) == null ? void 0 : s.local_id) === a.local_id;
    })
      ? await this.registry.sshKey.getCopy(e.ssh_key, { globalLookup: !0 })
      : e.ssh_key;
    return e.clone({ ...$a(), label: zp(e), ssh_key: r });
  }
  async save(e) {
    await this.store.setIdentity(e);
  }
  fetch(e) {
    return this.store.getIdentity({ local_id: e });
  }
  replaceReferencesInGraph(e) {
    super.replaceReferencesInGraph(e);
    const { original: n, copy: r } = e;
    n.ssh_key != null &&
      r.ssh_key != null &&
      this.registry.sshKey.replaceReferencesInGraph({
        original: n.ssh_key,
        copy: r.ssh_key,
      });
  }
}
class Kyt extends Ti {
  async createCopy(e) {
    const n = [];
    for (const s of e.certificates)
      n.push(s.clone({ ...$a(), ssh_key_id: void 0 }));
    const r = e.clone({ ...$a(), label: zp(e), certificates: n });
    await this.save(r), rn(r.local_id != null);
    const a = this.fetch(r.local_id);
    return rn(a != null), a;
  }
  async save(e) {
    await this.store.setSshKey(e);
  }
  fetch(e) {
    return this.store.getSshKey({ local_id: e });
  }
}
class Byt extends Ti {
  async createCopy(e) {
    const n =
      e.identity && !e.identity.is_visible
        ? await this.registry.identity.getCopy(e.identity, { globalLookup: !0 })
        : e.identity;
    return e.clone({ ...$a(), identity: n });
  }
  async save(e) {
    await this.store.setProxy(e);
  }
  fetch(e) {
    return this.store.getProxy({ local_id: e });
  }
  replaceReferencesInGraph(e) {
    super.replaceReferencesInGraph(e);
    const { original: n, copy: r } = e;
    n.identity != null &&
      r.identity != null &&
      this.registry.identity.replaceReferencesInGraph({
        original: n.identity,
        copy: r.identity,
      });
  }
}
class Vyt extends Ti {
  async createCopy(e) {
    return e.clone({ ...$a(), label: zp(e) });
  }
  async save(e) {
    await this.store.setSnippet(e);
  }
  fetch(e) {
    return this.store.getSnippet({ local_id: e });
  }
}
class jyt extends Ti {
  async createCopy(e) {
    return e.clone({ ...$a(), label: zp(e) });
  }
  async save(e) {
    await this.store.setSnippetsPackage(e);
  }
  fetch(e) {
    return this.store.getSnippetsPackage({ local_id: e });
  }
}
class zyt extends Ti {
  async createCopy(e) {
    return e.clone({ local_id: void 0, id: void 0, ssh_key_id: void 0 });
  }
  async save(e) {
    await this.store.setSshCertificate(e);
  }
  fetch(e) {
    return this.store.getSshCertificate({ local_id: e });
  }
}
class $yt extends Ti {
  async createCopy(e) {
    return e.clone({
      ...$a(),
      marker: e.marker,
      hostnames: e.hostnames,
      key: e.key,
      comment: e.comment,
    });
  }
  async save(e) {
    await this.store.setKnownHost(e);
  }
  fetch(e) {
    return this.store.getKnownHosts().find((n) => n.local_id === e) ?? null;
  }
}
function Bme(t, e, n) {
  const r = fF(t, e, n),
    a = {
      group: new xyt("group", ...r),
      host: new Myt("host", ...r),
      sshConfig: new Dyt("sshConfig", ...r),
      telnetConfig: new Fyt("telnetConfig", ...r),
      identity: new Uyt("identity", ...r),
      sshKey: new Kyt("sshKey", ...r),
      proxy: new Byt("proxy", ...r),
      snippet: new Vyt("snippet", ...r),
      hostChain: new Gyt("hostChain", ...r),
      sshCertificate: new zyt("sshCertificate", ...r),
      portForwardingRule: new Lyt("portForwardingRule", ...r),
      snippetsPackage: new jyt("snippetsPackage", ...r),
      knownHost: new $yt("knownHost", ...r),
    };
  for (const s of Object.values(a)) s.withRegistry(a);
  return a;
}
function zp(t) {
  return `${t.displayLabel} Copy`;
}
function Wyt(t, e) {
  return t[e];
}
let Gl = class {
  constructor(e, n, r, a, s) {
    (this.copiesStore = e),
      (this.store = n),
      (this.relatedEntitiesMap = r),
      (this.entities = a),
      (this.targetState = s);
  }
  async process(e) {
    const n = await this.copy(e);
    await this.replace(e, n);
  }
  hasVaultChanages(e) {
    return !Es(e, this.targetState) || e.hasVaultChanges;
  }
  copy(e) {
    const n = this.entities.some(
      (r) => e.entityLocalPath !== r.entityLocalPath
    );
    return $I(this.copiesStore, e, { globalLookup: n });
  }
  async replace(e, n) {
    await this.replaceInDependencies(e, n),
      await this.replaceReferencesInGraph(e, n);
  }
  async replaceReferencesInGraph(e, n) {
    await this.copiesStore[e.entityName].replaceReferencesInGraph({
      original: e,
      copy: n,
    });
  }
  requiresPostProcessing(e) {
    return !1;
  }
  async postprocess(e) {}
};
class qyt extends Gl {
  async replaceInDependencies(e, n) {
    for (const r of this.relatedEntitiesMap.host)
      r.replaceGroup({ original: e, copy: n });
  }
  requiresPostProcessing(e) {
    const { parent_group: n } = e;
    return n == null ? !1 : this.copiesStore.group.wasCopied(n);
  }
  async postprocess(e) {
    const n = await this.copiesStore.group.getCopy(e, { globalLookup: !1 }),
      { parent_group: r } = e;
    if (r == null) return;
    const a = this.copiesStore.group.get(r, { globalLookup: !1 });
    a != null &&
      (n.replaceParentGroup({ original: r, copy: a }),
      await this.store.setGroup(n));
  }
}
let Yyt = class extends Gl {
    async replaceInDependencies(e, n) {
      for (const r of this.relatedEntitiesMap.hostChain)
        r.replaceHostInChain({ original: e, copy: n });
      for (const r of this.relatedEntitiesMap.snippet) {
        r.replaceHostInTargets({ original: e, copy: n });
        const a = this.copiesStore.snippet.get(r, { globalLookup: !1 });
        a == null || a.replaceHostInTargets({ original: e, copy: n });
      }
    }
    copy(e) {
      const n = this.relatedEntitiesMap.group.some((s) => {
          var i;
          return s.local_id === ((i = e.group) == null ? void 0 : i.local_id);
        }),
        r = n ? e : e.clone({ group: null }),
        a = n
          ? !1
          : this.entities.some((s) => r.entityLocalPath !== s.entityLocalPath);
      return $I(this.copiesStore, r, { globalLookup: a });
    }
    async replaceReferencesInGraph(e, n) {
      await super.replaceReferencesInGraph(e, n);
      for (const r of this.relatedEntitiesMap.portForwardingRule)
        r.replaceHost({ original: e, copy: n });
    }
  },
  Xyt = class extends Gl {
    requiresPostProcessing(e) {
      const n = this.copiesStore.sshConfig.wasCopied(e.sshConfig);
      return e.isModified || n;
    }
    postprocess(e) {
      return super.process(e);
    }
    async copy(e) {
      return await $I(this.copiesStore, e, { globalLookup: !1 });
    }
    async replaceInDependencies(e, n) {
      const r = (i) => {
          var o;
          return (
            ((o = i.ssh_config) == null ? void 0 : o.local_id) ===
            n.sshConfig.local_id
          );
        },
        a =
          this.relatedEntitiesMap.host.find(r) ??
          this.relatedEntitiesMap.group.find(r);
      if (a == null) return;
      const { ssh_config: s } = a;
      s != null &&
        ((s.host_chain = new Ap(n)),
        a instanceof Tn
          ? await this.store.setHost(a)
          : await this.store.setGroup(a));
    }
  },
  Qyt = class extends Gl {
    async replaceInDependencies(e, n) {
      for (const r of this.relatedEntitiesMap.sshConfig)
        r.replaceIdentity({ original: e, copy: n });
      for (const r of this.relatedEntitiesMap.telnetConfig)
        r.replaceIdentity({ original: e, copy: n });
      for (const r of this.relatedEntitiesMap.proxy)
        r.replaceIdentity({ original: e, copy: n });
    }
  },
  Jyt = class extends Gl {
    async replaceInDependencies(e, n) {
      for (const r of this.relatedEntitiesMap.identity)
        r.replaceKey({ original: e, copy: n });
    }
  },
  Zyt = class extends Gl {
    async replaceInDependencies(e, n) {
      var r, a, s, i;
      for (const o of this.relatedEntitiesMap.sshConfig)
        o.replaceStartupSnippet({ original: e, copy: n });
      for (const o of this.relatedEntitiesMap.telnetConfig)
        o.replaceStartupSnippet({ original: e, copy: n });
      for (const o of this.relatedEntitiesMap.host)
        (r = o.ssh_config) == null ||
          r.replaceStartupSnippet({ original: e, copy: n }),
          (a = o.telnet_config) == null ||
            a.replaceStartupSnippet({ original: e, copy: n });
      for (const o of this.relatedEntitiesMap.group)
        (s = o.ssh_config) == null ||
          s.replaceStartupSnippet({ original: e, copy: n }),
          (i = o.telnet_config) == null ||
            i.replaceStartupSnippet({ original: e, copy: n });
    }
    async copy(e) {
      const n = this.relatedEntitiesMap.snippetsPackage.some((s) => {
          var i;
          return s.local_id === ((i = e.package) == null ? void 0 : i.local_id);
        }),
        r = n ? e : e.clone({ package: null }),
        a = n
          ? !1
          : this.entities.some((s) => r.entityLocalPath !== s.entityLocalPath);
      return $I(this.copiesStore, r, { globalLookup: a });
    }
    requiresPostProcessing(e) {
      return this.copiesStore.snippet.wasCopied(e) || e.isTargetHostModified;
    }
    async postprocess(e) {
      await this.store.setSnippet(e),
        await this.replaceInDependencies(e, e),
        e.resetTargetHostModified();
    }
  };
class egt extends Gl {
  async replaceInDependencies(e, n) {
    for (const r of this.relatedEntitiesMap.snippet)
      r.replacePackage({ original: e, copy: n });
  }
}
class tgt extends Gl {
  async replaceInDependencies(e, n) {}
}
class ngt extends Gl {
  async replaceInDependencies(e, n) {}
}
const Vme = (t, e, n, r, a) => {
  const s = Bme(t, e, a),
    i = fF(s, t, e, n, r);
  return {
    copiesStore: s,
    strategies: {
      host: new Yyt(...i),
      identity: new Qyt(...i),
      sshKey: new Jyt(...i),
      snippet: new Zyt(...i),
      hostChain: new Xyt(...i),
      group: new qyt(...i),
      snippetsPackage: new egt(...i),
      portForwardingRule: new tgt(...i),
      knownHost: new ngt(...i),
    },
  };
};
function $I(t, e, n) {
  return t[e.entityName].getCopy(e, n);
}
class g_ {
  constructor(e, n, r, a) {
    (this.copiesStore = e),
      (this.store = n),
      (this.relatedEntitiesMap = r),
      (this.targetState = a);
  }
  hasVaultChanges(e) {
    return !Es(e, this.targetState) || e.hasVaultChanges;
  }
}
class sgt extends g_ {
  async unlinkAffected(e) {
    await this.store.hostChainsRepository.unlinkHosts(
      e,
      this.relatedEntitiesMap.sshConfig,
      this.targetState
    ),
      await this.store.hostSnippetsRepository.unlinkHosts(
        e,
        this.relatedEntitiesMap.snippet,
        this.targetState
      );
  }
  isUsed(e) {
    const n = this.violatesVaultRule(e),
      r = this.store.hostChainsRepository.isUsedInChain(
        e,
        this.relatedEntitiesMap.sshConfig,
        this.targetState
      ),
      a = this.store.pfRulesRepository.isHostUsed(
        e,
        this.relatedEntitiesMap.portForwardingRule,
        this.targetState
      ),
      s = this.store.hostSnippetsRepository.isUsedInSnippet(
        e,
        this.relatedEntitiesMap.snippet,
        this.targetState
      );
    return n && (r || a || s);
  }
  async postProcess(e) {
    const n = !this.isMovingHostGroup(e),
      r = this.violatesVaultRule(e);
    n && r && (e.unlinkParentGroup(), await this.store.setHost(e));
  }
  violatesVaultRule(e) {
    const n = e.group != null && !Es(e, e.group);
    return this.hasVaultChanges(e) || n;
  }
  isMovingHostGroup(e) {
    return this.relatedEntitiesMap.group.some((n) => {
      var r;
      return n.local_id === ((r = e.group) == null ? void 0 : r.local_id);
    });
  }
}
class rgt extends g_ {
  requiresProcessing(e) {
    const n = this.copiesStore.sshConfig.wasCopied(e.sshConfig);
    return e.isModified || n;
  }
  async unlinkAffected() {}
  isUsed() {
    return !1;
  }
}
class agt extends g_ {
  constructor(...e) {
    super(...e),
      (this.repositories = {
        ssh: {
          sharedRelation: this.store.sharedSshConfigIdentitiesRepository,
          personalRelation: this.store.sshConfigIdentitiesRepository,
          configs: this.store.sshConfigsRepository,
        },
        telnet: {
          sharedRelation: this.store.sharedTelnetConfigIdentitiesRepository,
          personalRelation: this.store.telnetConfigIdentitiesRepository,
          configs: this.store.telnetConfigsRepository,
        },
      });
  }
  async removeAffectedConfigIdentities(e, n) {
    const r = { ssh: "sshConfig", telnet: "telnetConfig" },
      { targetState: a, relatedEntitiesMap: s } = this,
      i = this.repositories[n],
      o = s[r[n]];
    await i.sharedRelation.unlinkIdentities(e, o, a),
      await i.personalRelation.unlinkIdentities(e, o, a);
  }
  async unlinkAffected(e) {
    if (!e.is_visible) return;
    const { relatedEntitiesMap: n } = this;
    await this.removeAffectedConfigIdentities(e, "ssh"),
      await this.removeAffectedConfigIdentities(e, "telnet"),
      await this.store.proxiesRepository.unlinkIdentities(
        e,
        n.proxy,
        this.targetState
      );
  }
  collectUsedConfigIdentities(e, n) {
    const r = this.repositories[n],
      a = this.relatedEntitiesMap[n === "ssh" ? "sshConfig" : "telnetConfig"],
      s = r.sharedRelation.filterByIdentity(e, a).filter((o) =>
        this.isConfigIdentityActual(o, {
          configRefPath: n === "ssh" ? "ssh_config" : "telnet_config",
          accessType: "shared",
        })
      );
    return [
      ...r.personalRelation.filterByIdentity(e, a).filter((o) =>
        this.isConfigIdentityActual(o, {
          configRefPath: n === "ssh" ? "ssh_config" : "telnet_config",
          accessType: "personal",
        })
      ),
      ...s,
    ].map((o) => ({
      encrypted_with: o.get("encrypted_with") || null,
      is_shared: !!o.get("is_shared"),
    }));
  }
  isConfigIdentityActual(e, n) {
    const { configRefPath: r, accessType: a } = n,
      s = e.get(r),
      i =
        r === "ssh_config"
          ? this.store.lookupLinkedEntityBySshConfig(s)
          : this.store.lookupLinkedEntityByTelnetConfig(s);
    return a === "shared"
      ? (i == null ? void 0 : i.is_shared) &&
          i.credentials_mode === "credentials_sharing"
      : !(i != null && i.is_shared) ||
          i.credentials_mode !== "credentials_sharing";
  }
  isUsed(e) {
    if (!e.is_visible) return !1;
    const { targetState: n, relatedEntitiesMap: r } = this,
      a = {
        ssh: this.collectUsedConfigIdentities(e, "ssh").some((i) => !Es(i, n)),
        telnet: this.collectUsedConfigIdentities(e, "telnet").some(
          (i) => !Es(i, n)
        ),
      },
      s = this.store.proxiesRepository.usesIdentity(
        e,
        r.proxy,
        this.targetState
      );
    return a.ssh || a.telnet || s;
  }
}
class igt extends g_ {
  async unlinkAffected(e) {
    await this.store.identitiesRepository.unlinkSshKeys(
      e,
      this.relatedEntitiesMap.identity,
      this.targetState
    );
  }
  isUsed(e) {
    return this.store.identitiesRepository.isUsed(
      e,
      this.relatedEntitiesMap.identity,
      this.targetState
    );
  }
}
class ogt extends g_ {
  async unlinkAffected(e) {
    await this.store.sshConfigsRepository.unlinkSnippets(
      e,
      this.relatedEntitiesMap.sshConfig,
      this.targetState
    ),
      await this.store.telnetConfigsRepository.unlinkSnippets(
        e,
        this.relatedEntitiesMap.telnetConfig,
        this.targetState
      );
  }
  isUsed(e) {
    const n = e.package != null && !Es(e, e.package),
      r = this.hasVaultChanges(e),
      a = this.store.sshConfigsRepository.isSnippetUsed(
        e,
        this.relatedEntitiesMap.sshConfig,
        this.targetState
      ),
      s = this.store.telnetConfigsRepository.isSnippetUsed(
        e,
        this.relatedEntitiesMap.telnetConfig,
        this.targetState
      );
    return (n || r) && (a || s);
  }
}
const mF = (t, e, n, r) => {
  const a = Bme(t, e, r),
    s = fF(a, t, e, n);
  return {
    copiesStore: a,
    strategies: {
      host: new sgt(...s),
      identity: new agt(...s),
      sshKey: new igt(...s),
      snippet: new ogt(...s),
      hostChain: new rgt(...s),
    },
  };
};
async function ugt(
  t,
  e,
  n,
  r = { resolution: "Move", pfRuleResolution: "Move" }
) {
  await n.store.collectGarbage();
  const a = new lm(t, n.store, e);
  if (
    (r.resolution === "Copy" && (i(), await pgt(t, e, a.relatedEntitiesMap, n)),
    await dgt(a.relatedEntitiesMap, e, n),
    r.pfRuleResolution === "Remove")
  ) {
    const { excludes: o, affected: u } = nR(t, a.relatedEntitiesMap, e);
    await Promise.all(u.map((l) => n.store.deletePortForwardingRule(l))),
      a.pruneAllPFRulesExcept(o);
  }
  return new Kme(e, a, n).share();
  function i() {
    if (a.relatedEntitiesMap.portForwardingRule.length === 0) return;
    const o = nR(t, a.relatedEntitiesMap, e);
    a.pruneAllPFRulesExcept([...o.unresolvable, ...o.excludes]);
  }
}
async function lgt(t, e, n) {
  await n.store.collectGarbage();
  const r = new lm(t, n.store, e);
  r.pruneAllPFRulesExcept(t.filter(Xi.is));
  const a = r.relatedEntitiesMap,
    s = await zme(n, a, t, e),
    i = t.map((c) => jme(s, c, { globalLookup: !1 })),
    o = i.filter(xn);
  rn(o.length === i.length);
  const u = new lm(o, n.store, e);
  return new Kme(e, u, n).share();
}
function cgt(t, e, n) {
  const r = t.map((c) => c.clone()),
    { relatedEntitiesMap: a } = new lm(r, n.store, e),
    s = nR(t, a, e),
    i = Dme(t, a, mF(n.store, a, e, n.copiesStorage).strategies),
    o = { ...i, portForwarding: s.affected },
    u = s.affected.length > 0,
    l = Object.values(i).some((c) => c.length > 0);
  return l || u
    ? {
        result: "Copy",
        backReferences: o,
        hasConflicts: l,
        hasPFRuleConflicts: s.affected.length > 0,
        hasCopyResolvablePFRuleConflicts: s.unresolvable.length === 0,
        categorizedPFRules: s,
      }
    : {
        result: "Move",
        backReferences: o,
        hasConflicts: !1,
        hasPFRuleConflicts: !1,
        hasCopyResolvablePFRuleConflicts: !1,
        categorizedPFRules: s,
      };
}
async function dgt(t, e, n) {
  const { strategies: r } = mF(n.store, t, e, n.copiesStorage),
    { host: a, identity: s, sshKey: i, snippet: o } = r,
    u = Oyt(t, r);
  await Promise.all([
    l(),
    Promise.all(u.identity.map((c) => s.unlinkAffected(c))),
    Promise.all(u.sshKey.map((c) => i.unlinkAffected(c))),
    Promise.all(u.snippet.map((c) => o.unlinkAffected(c))),
  ]);
  async function l() {
    for (const c of u.host) await a.unlinkAffected(c);
  }
}
const jme = (t, e, n) => t[e.entityName].get(e, n);
async function zme(t, e, n, r) {
  const a = [
      "snippetsPackage",
      "snippet",
      "sshKey",
      "identity",
      "group",
      "host",
      "portForwardingRule",
    ],
    s = Vme(t.store, e, n, r, t.copiesStorage),
    { strategies: i, copiesStore: o } = s;
  for (const c of a) {
    const d = i[c];
    await u(e, c, d);
  }
  return (
    await l(e, "hostChain", i.hostChain),
    await l(e, "snippet", i.snippet),
    await l(e, "group", i.group),
    o
  );
  async function u(c, d, p) {
    for (const m of c[d]) await p.process(m);
  }
  async function l(c, d, p) {
    for (const m of c[d])
      p.requiresPostProcessing(m) && (await p.postprocess(m));
  }
}
async function pgt(t, e, n, r) {
  const {
      snippet: a,
      sshKey: s,
      identity: i,
      host: o,
    } = Dme(t, n, mF(r.store, n, e, r.copiesStorage).strategies),
    u = [...a, ...s, ...i, ...o],
    l = await p(u),
    { strategies: c } = Vme(r.store, n, t, e, r.copiesStorage);
  for (const [m, y] of l) {
    if (!m || !y) return;
    await d(m, y, c[m.entityName]);
  }
  async function d(m, y, I) {
    await I.replace(m, y);
  }
  async function p(m) {
    await r.store.collectGarbage();
    const y = new lm(m, r.store, e),
      I = new lm(m, r.store, e);
    I.pruneAllPFRulesExcept(m.filter(Xi.is));
    const O = await zme(r, I.relatedEntitiesMap, m, e),
      g = y.relatedEntitiesMap;
    return [...g.snippet, ...g.sshKey, ...g.identity, ...g.host].map((H) => [
      H,
      jme(O, H, { globalLookup: !1 }),
    ]);
  }
}
function* hgt(t, e, { entities: n, targetState: r, cancelable: a }) {
  const s = n.map(zI),
    i = yield* Pe((c) => Yu(c, r)),
    o = {
      id: Ei.v4(),
      createdAt: new Date(),
      variant: "process",
      ...tme(s, mP.copying, (i == null ? void 0 : i.name) ?? "Unknown"),
    };
  yield* GI({ payload: o, cancelable: a });
  const u = e.get(r.encrypted_with),
    l = yield* Me(lgt, s, r, {
      store: t.store,
      settings: t.settings,
      copiesStorage: u,
    });
  return yield* D(ss(Dl(t))), yield* D($t.request("does-not-block-ui")), l;
}
function* fgt(t, e, { entities: n, targetState: r }) {
  const a = e.get(r.encrypted_with);
  return yield* Me(cgt, n.map(zI), r, {
    store: t.store,
    settings: t.settings,
    copiesStorage: a,
  });
}
function* mgt(t, e) {
  try {
    const n = yield* Me(() => t.createVault(e));
    return (
      yield* D($t.request("does-not-block-ui")),
      n.err && (n.val instanceof _r || tt.exception(n.val.message, n.val)),
      n.mapErr((r) => SF(r, n))
    );
  } catch (n) {
    return Nn({ message: n.message });
  }
}
function* Sgt(t, e) {
  try {
    const n = yield* Me(() => t.updateVault(e));
    return (
      yield* D($t.request("does-not-block-ui")),
      n.err && (n.val instanceof _r || tt.exception(n.val.message, n.val)),
      n.mapErr((r) => SF(r, n))
    );
  } catch (n) {
    return Nn({ message: n.message });
  }
}
function* ygt(t, e) {
  try {
    const n = yield* Me(() => t.deleteVault(e.vaultId));
    return yield* D($t.request("does-not-block-ui")), n.mapErr((r) => SF(r, n));
  } catch (n) {
    return Nn({ message: n.message });
  }
}
function SF(t, e) {
  return t instanceof _r
    ? _r.networkError(e.err)
      ? { message: "Network error" }
      : { message: t.statusText, status: t.status, payload: t.responseJSON }
    : { message: t.message };
}
function* ggt(
  t,
  e,
  { entities: n, targetState: r, cancelable: a, conflictResolutions: s }
) {
  const i = n.map(zI),
    o = yield* Pe((d) => Yu(d, r)),
    u = {
      id: Ei.v4(),
      createdAt: new Date(),
      variant: "process",
      ...tme(i, mP.moving, (o == null ? void 0 : o.name) ?? "Unknown"),
    };
  yield* GI({ payload: u, cancelable: a });
  const l = e.get(r.encrypted_with),
    c = yield* Me(
      ugt,
      i,
      r,
      { store: t.store, settings: t.settings, copiesStorage: l },
      s
    );
  return yield* D(ss(Dl(t))), yield* D($t.request("does-not-block-ui")), c;
}
function* N1(t, e) {
  yield* Jr(vgt, t, e);
}
function* vgt(t, e) {
  if (!(yield* Pe(Ea))) {
    yield* D(u1({ items: [], selectAll: !0 }));
    return;
  }
  try {
    const { vaults: r, participants: a } = yield* Me({
      context: t,
      fn: "getAllVaults",
    });
    yield* D(u1({ items: r, selectAll: e.selectAll })), yield* D(vB(a));
  } catch (r) {
    (r.status === 403 || r.status === 401) &&
      (yield* D(u1({ items: [], selectAll: !0 })), yield* D(vB([])));
  }
}
function* _gt(t) {
  const e = byt();
  yield* Gn([
    $e(Op, N1, t, { selectAll: !0 }),
    Af($t.request, N1, t, { selectAll: !1 }),
    $e(us.success, N1, t, { selectAll: !1 }),
    zt(Nme, function* (r) {
      return yield* fgt(t, e, r);
    }),
    zt(dv, function* (r) {
      return yield* ggt(t, e, r);
    }),
    zt(Hme, function* (r) {
      return yield* hgt(t, e, r);
    }),
    $e(ZN.request, Ayt),
    $e(i_, wyt),
    zt(xmt, function* (r) {
      return yield* mgt(t, r);
    }),
    zt(Lmt, function* (r) {
      return yield* Sgt(t, r);
    }),
    zt(kmt, function* (r) {
      return yield* ygt(t, r);
    }),
  ]);
}
function bgt(t) {
  return function (...e) {
    var n = e.pop();
    return t.call(this, e, n);
  };
}
var Egt = typeof queueMicrotask == "function" && queueMicrotask,
  $me = typeof setImmediate == "function" && setImmediate,
  Wme = typeof process == "object" && typeof process.nextTick == "function";
function Tgt(t) {
  setTimeout(t, 0);
}
function wgt(t) {
  return (e, ...n) => t(() => e(...n));
}
var iy;
Egt
  ? (iy = queueMicrotask)
  : $me
  ? (iy = setImmediate)
  : Wme
  ? (iy = process.nextTick)
  : (iy = Tgt);
var qme = wgt(iy);
function Pgt(t) {
  return yF(t)
    ? function (...e) {
        const n = e.pop(),
          r = t.apply(this, e);
        return xV(r, n);
      }
    : bgt(function (e, n) {
        var r;
        try {
          r = t.apply(this, e);
        } catch (a) {
          return n(a);
        }
        if (r && typeof r.then == "function") return xV(r, n);
        n(null, r);
      });
}
function xV(t, e) {
  return t.then(
    (n) => {
      LV(e, null, n);
    },
    (n) => {
      LV(e, n && n.message ? n : new Error(n));
    }
  );
}
function LV(t, e, n) {
  try {
    t(e, n);
  } catch (r) {
    qme((a) => {
      throw a;
    }, r);
  }
}
function yF(t) {
  return t[Symbol.toStringTag] === "AsyncFunction";
}
function Igt(t) {
  return t[Symbol.toStringTag] === "AsyncGenerator";
}
function Cgt(t) {
  return typeof t[Symbol.asyncIterator] == "function";
}
function js(t) {
  if (typeof t != "function") throw new Error("expected a function");
  return yF(t) ? Pgt(t) : t;
}
function On(t, e = t.length) {
  if (!e) throw new Error("arity is undefined");
  function n(...r) {
    return typeof r[e - 1] == "function"
      ? t.apply(this, r)
      : new Promise((a, s) => {
          (r[e - 1] = (i, ...o) => {
            if (i) return s(i);
            a(o.length > 1 ? o : o[0]);
          }),
            t.apply(this, r);
        });
  }
  return n;
}
function gF(t, e, n, r) {
  e = e || [];
  var a = [],
    s = 0,
    i = js(n);
  return t(
    e,
    (o, u, l) => {
      var c = s++;
      i(o, (d, p) => {
        (a[c] = p), l(d);
      });
    },
    (o) => {
      r(o, a);
    }
  );
}
function WI(t) {
  return (
    t && typeof t.length == "number" && t.length >= 0 && t.length % 1 === 0
  );
}
const qI = {};
function sS(t) {
  function e(...n) {
    if (t !== null) {
      var r = t;
      (t = null), r.apply(this, n);
    }
  }
  return Object.assign(e, t), e;
}
function Agt(t) {
  return t[Symbol.iterator] && t[Symbol.iterator]();
}
function Ogt(t) {
  var e = -1,
    n = t.length;
  return function () {
    return ++e < n ? { value: t[e], key: e } : null;
  };
}
function Hgt(t) {
  var e = -1;
  return function () {
    var r = t.next();
    return r.done ? null : (e++, { value: r.value, key: e });
  };
}
function Ngt(t) {
  var e = t ? Object.keys(t) : [],
    n = -1,
    r = e.length;
  return function a() {
    var s = e[++n];
    return s === "__proto__" ? a() : n < r ? { value: t[s], key: s } : null;
  };
}
function Rgt(t) {
  if (WI(t)) return Ogt(t);
  var e = Agt(t);
  return e ? Hgt(e) : Ngt(t);
}
function rS(t) {
  return function (...e) {
    if (t === null) throw new Error("Callback was already called.");
    var n = t;
    (t = null), n.apply(this, e);
  };
}
function MV(t, e, n, r) {
  let a = !1,
    s = !1,
    i = !1,
    o = 0,
    u = 0;
  function l() {
    o >= e ||
      i ||
      a ||
      ((i = !0),
      t
        .next()
        .then(({ value: p, done: m }) => {
          if (!(s || a)) {
            if (((i = !1), m)) {
              (a = !0), o <= 0 && r(null);
              return;
            }
            o++, n(p, u, c), u++, l();
          }
        })
        .catch(d));
  }
  function c(p, m) {
    if (((o -= 1), !s)) {
      if (p) return d(p);
      if (p === !1) {
        (a = !0), (s = !0);
        return;
      }
      if (m === qI || (a && o <= 0)) return (a = !0), r(null);
      l();
    }
  }
  function d(p) {
    s || ((i = !1), (a = !0), r(p));
  }
  l();
}
var Mu = (t) => (e, n, r) => {
  if (((r = sS(r)), t <= 0))
    throw new RangeError("concurrency limit cannot be less than 1");
  if (!e) return r(null);
  if (Igt(e)) return MV(e, t, n, r);
  if (Cgt(e)) return MV(e[Symbol.asyncIterator](), t, n, r);
  var a = Rgt(e),
    s = !1,
    i = !1,
    o = 0,
    u = !1;
  function l(d, p) {
    if (!i)
      if (((o -= 1), d)) (s = !0), r(d);
      else if (d === !1) (s = !0), (i = !0);
      else {
        if (p === qI || (s && o <= 0)) return (s = !0), r(null);
        u || c();
      }
  }
  function c() {
    for (u = !0; o < t && !s; ) {
      var d = a();
      if (d === null) {
        (s = !0), o <= 0 && r(null);
        return;
      }
      (o += 1), n(d.value, d.key, rS(l));
    }
    u = !1;
  }
  c();
};
function kgt(t, e, n, r) {
  return Mu(e)(t, js(n), r);
}
var Yme = On(kgt, 4);
function xgt(t, e, n) {
  n = sS(n);
  var r = 0,
    a = 0,
    { length: s } = t,
    i = !1;
  s === 0 && n(null);
  function o(u, l) {
    u === !1 && (i = !0),
      i !== !0 && (u ? n(u) : (++a === s || l === qI) && n(null));
  }
  for (; r < s; r++) e(t[r], r, rS(o));
}
function Lgt(t, e, n) {
  return Yme(t, 1 / 0, e, n);
}
function Mgt(t, e, n) {
  var r = WI(t) ? xgt : Lgt;
  return r(t, js(e), n);
}
var $p = On(Mgt, 3);
function Dgt(t, e, n) {
  return gF($p, t, e, n);
}
var Ggt = On(Dgt, 3);
function Fgt(t, e, n) {
  return Yme(t, 1, e, n);
}
var aS = On(Fgt, 3);
function Ugt(t, e, n) {
  return gF(aS, t, e, n);
}
On(Ugt, 3);
const Xme = Symbol("promiseCallback");
function DV() {
  let t, e;
  function n(r, ...a) {
    if (r) return e(r);
    t(a.length > 1 ? a : a[0]);
  }
  return (
    (n[Xme] = new Promise((r, a) => {
      (t = r), (e = a);
    })),
    n
  );
}
function Kgt(t, e, n, r) {
  r = sS(r);
  var a = js(n);
  return aS(
    t,
    (s, i, o) => {
      a(e, s, (u, l) => {
        (e = l), o(u);
      });
    },
    (s) => r(s, e)
  );
}
On(Kgt, 4);
function Bgt(t, e, n, r) {
  return gF(Mu(e), t, n, r);
}
var Qme = On(Bgt, 4);
function Vgt(t, e, n, r) {
  var a = js(n);
  return Qme(
    t,
    e,
    (s, i) => {
      a(s, (o, ...u) => (o ? i(o) : i(o, u)));
    },
    (s, i) => {
      for (var o = [], u = 0; u < i.length; u++)
        i[u] && (o = o.concat(...i[u]));
      return r(s, o);
    }
  );
}
var Jme = On(Vgt, 4);
function jgt(t, e, n) {
  return Jme(t, 1 / 0, e, n);
}
On(jgt, 3);
function zgt(t, e, n) {
  return Jme(t, 1, e, n);
}
On(zgt, 3);
function Fl(t, e) {
  return (n, r, a, s) => {
    var i = !1,
      o;
    const u = js(a);
    n(
      r,
      (l, c, d) => {
        u(l, (p, m) => {
          if (p || p === !1) return d(p);
          if (t(m) && !o) return (i = !0), (o = e(!0, l)), d(null, qI);
          d();
        });
      },
      (l) => {
        if (l) return s(l);
        s(null, i ? o : e(!1));
      }
    );
  };
}
function $gt(t, e, n) {
  return Fl(
    (r) => r,
    (r, a) => a
  )($p, t, e, n);
}
On($gt, 3);
function Wgt(t, e, n, r) {
  return Fl(
    (a) => a,
    (a, s) => s
  )(Mu(e), t, n, r);
}
On(Wgt, 4);
function qgt(t, e, n) {
  return Fl(
    (r) => r,
    (r, a) => a
  )(Mu(1), t, e, n);
}
On(qgt, 3);
function Ygt(t, e, n) {
  n = rS(n);
  var r = js(t),
    a = js(e),
    s;
  function i(u, ...l) {
    if (u) return n(u);
    u !== !1 && ((s = l), a(...l, o));
  }
  function o(u, l) {
    if (u) return n(u);
    if (u !== !1) {
      if (!l) return n(null, ...s);
      r(i);
    }
  }
  return o(null, !0);
}
On(Ygt, 3);
function Zme(t) {
  return (e, n, r) => t(e, r);
}
function Xgt(t, e, n) {
  return $p(t, Zme(js(e)), n);
}
On(Xgt, 3);
function Qgt(t, e, n, r) {
  return Mu(e)(t, Zme(js(n)), r);
}
var Jgt = On(Qgt, 4);
function Zgt(t, e, n) {
  return Jgt(t, 1, e, n);
}
var evt = On(Zgt, 3);
function tvt(t) {
  return yF(t)
    ? t
    : function (...e) {
        var n = e.pop(),
          r = !0;
        e.push((...a) => {
          r ? qme(() => n(...a)) : n(...a);
        }),
          t.apply(this, e),
          (r = !1);
      };
}
function nvt(t, e, n) {
  return Fl(
    (r) => !r,
    (r) => !r
  )($p, t, e, n);
}
On(nvt, 3);
function svt(t, e, n, r) {
  return Fl(
    (a) => !a,
    (a) => !a
  )(Mu(e), t, n, r);
}
On(svt, 4);
function rvt(t, e, n) {
  return Fl(
    (r) => !r,
    (r) => !r
  )(aS, t, e, n);
}
On(rvt, 3);
function avt(t, e, n, r) {
  var a = new Array(e.length);
  t(
    e,
    (s, i, o) => {
      n(s, (u, l) => {
        (a[i] = !!l), o(u);
      });
    },
    (s) => {
      if (s) return r(s);
      for (var i = [], o = 0; o < e.length; o++) a[o] && i.push(e[o]);
      r(null, i);
    }
  );
}
function ivt(t, e, n, r) {
  var a = [];
  t(
    e,
    (s, i, o) => {
      n(s, (u, l) => {
        if (u) return o(u);
        l && a.push({ index: i, value: s }), o(u);
      });
    },
    (s) => {
      if (s) return r(s);
      r(
        null,
        a.sort((i, o) => i.index - o.index).map((i) => i.value)
      );
    }
  );
}
function YI(t, e, n, r) {
  var a = WI(e) ? avt : ivt;
  return a(t, e, js(n), r);
}
function ovt(t, e, n) {
  return YI($p, t, e, n);
}
On(ovt, 3);
function uvt(t, e, n, r) {
  return YI(Mu(e), t, n, r);
}
On(uvt, 4);
function lvt(t, e, n) {
  return YI(aS, t, e, n);
}
On(lvt, 3);
function cvt(t, e) {
  var n = rS(e),
    r = js(tvt(t));
  function a(s) {
    if (s) return n(s);
    s !== !1 && r(a);
  }
  return a();
}
On(cvt, 2);
function dvt(t, e, n, r) {
  var a = js(n);
  return Qme(
    t,
    e,
    (s, i) => {
      a(s, (o, u) => (o ? i(o) : i(o, { key: u, val: s })));
    },
    (s, i) => {
      for (
        var o = {}, { hasOwnProperty: u } = Object.prototype, l = 0;
        l < i.length;
        l++
      )
        if (i[l]) {
          var { key: c } = i[l],
            { val: d } = i[l];
          u.call(o, c) ? o[c].push(d) : (o[c] = [d]);
        }
      return r(s, o);
    }
  );
}
On(dvt, 4);
function pvt(t, e, n, r) {
  r = sS(r);
  var a = {},
    s = js(n);
  return Mu(e)(
    t,
    (i, o, u) => {
      s(i, o, (l, c) => {
        if (l) return u(l);
        (a[o] = c), u(l);
      });
    },
    (i) => r(i, a)
  );
}
On(pvt, 4);
Wme ? process.nextTick : $me && setImmediate;
On((t, e, n) => {
  var r = WI(e) ? [] : {};
  t(
    e,
    (a, s, i) => {
      js(a)((o, ...u) => {
        u.length < 2 && ([u] = u), (r[s] = u), i(o);
      });
    },
    (a) => n(a, r)
  );
}, 3);
function hvt(t, e) {
  if (((e = sS(e)), !Array.isArray(t)))
    return e(
      new TypeError("First argument to race must be an array of functions")
    );
  if (!t.length) return e();
  for (var n = 0, r = t.length; n < r; n++) js(t[n])(e);
}
On(hvt, 2);
function vF(t, e, n, r) {
  const a = js(n);
  return YI(
    t,
    e,
    (s, i) => {
      a(s, (o, u) => {
        i(o, !u);
      });
    },
    r
  );
}
function fvt(t, e, n) {
  return vF($p, t, e, n);
}
On(fvt, 3);
function mvt(t, e, n, r) {
  return vF(Mu(e), t, n, r);
}
On(mvt, 4);
function Svt(t, e, n) {
  return vF(aS, t, e, n);
}
On(Svt, 3);
function eSe(t) {
  return function () {
    return t;
  };
}
const sR = 5,
  tSe = 0;
function yvt(t, e, n) {
  var r = { times: sR, intervalFunc: eSe(tSe) };
  if (
    (arguments.length < 3 && typeof t == "function"
      ? ((n = e || DV()), (e = t))
      : (gvt(r, t), (n = n || DV())),
    typeof e != "function")
  )
    throw new Error("Invalid arguments for async.retry");
  var a = js(e),
    s = 1;
  function i() {
    a((o, ...u) => {
      o !== !1 &&
        (o &&
        s++ < r.times &&
        (typeof r.errorFilter != "function" || r.errorFilter(o))
          ? setTimeout(i, r.intervalFunc(s - 1))
          : n(o, ...u));
    });
  }
  return i(), n[Xme];
}
function gvt(t, e) {
  if (typeof e == "object")
    (t.times = +e.times || sR),
      (t.intervalFunc =
        typeof e.interval == "function" ? e.interval : eSe(+e.interval || tSe)),
      (t.errorFilter = e.errorFilter);
  else if (typeof e == "number" || typeof e == "string") t.times = +e || sR;
  else throw new Error("Invalid arguments for async.retry");
}
function vvt(t, e, n) {
  return Fl(Boolean, (r) => r)($p, t, e, n);
}
On(vvt, 3);
function _vt(t, e, n, r) {
  return Fl(Boolean, (a) => a)(Mu(e), t, n, r);
}
On(_vt, 4);
function bvt(t, e, n) {
  return Fl(Boolean, (r) => r)(aS, t, e, n);
}
On(bvt, 3);
function Evt(t, e, n) {
  var r = js(e);
  return Ggt(
    t,
    (s, i) => {
      r(s, (o, u) => {
        if (o) return i(o);
        i(o, { value: s, criteria: u });
      });
    },
    (s, i) => {
      if (s) return n(s);
      n(
        null,
        i.sort(a).map((o) => o.value)
      );
    }
  );
  function a(s, i) {
    var o = s.criteria,
      u = i.criteria;
    return o < u ? -1 : o > u ? 1 : 0;
  }
}
On(Evt, 3);
function Tvt(t, e) {
  var n = null,
    r;
  return evt(
    t,
    (a, s) => {
      js(a)((i, ...o) => {
        if (i === !1) return s(i);
        o.length < 2 ? ([r] = o) : (r = o), (n = i), s(i ? null : {});
      });
    },
    () => e(n, r)
  );
}
On(Tvt);
function wvt(t, e, n) {
  n = rS(n);
  var r = js(e),
    a = js(t),
    s = [];
  function i(u, ...l) {
    if (u) return n(u);
    (s = l), u !== !1 && a(o);
  }
  function o(u, l) {
    if (u) return n(u);
    if (u !== !1) {
      if (!l) return n(null, ...s);
      r(i);
    }
  }
  return a(o);
}
On(wvt, 3);
function Pvt(t, e) {
  if (((e = sS(e)), !Array.isArray(t)))
    return e(
      new Error("First argument to waterfall must be an array of functions")
    );
  if (!t.length) return e();
  var n = 0;
  function r(s) {
    var i = js(t[n++]);
    i(...s, rS(a));
  }
  function a(s, ...i) {
    if (s !== !1) {
      if (s || n === t.length) return e(s, ...i);
      r(i);
    }
  }
  r([]);
}
On(Pvt);
function* Ivt(t, { meta: e }) {
  try {
    const n = yield* Me({ context: t.auth, fn: "updateUserProfile" }),
      r = yield* Pe(Ea),
      a = n.account.email;
    rn(a, "username cannot be undefined"),
      yield* Me(
        { context: t.settings, fn: "setDeprecatedAuthorizedFeatures" },
        Gg(n)
      ),
      yield* Me(
        { context: t.settings, fn: "setDeprecatedTeamPermissions" },
        lw(n)
      ),
      yield* Me({ context: t.settings, fn: "setDeprecatedTeamInfo" }, CQ(n)),
      yield* Me({ context: t.settings, fn: "setDeprecatedUserHasSso" }, Joe(n)),
      !r &&
        n.account.team &&
        (yield* Me(
          { context: t, fn: "convertUserAccountToTeamType" },
          { userId: n.account.user_id }
        )),
      yield* D(us.success({ ...n, username: a }, e.requestId)),
      pv.send("update-system-menu");
  } catch (n) {
    yield* D(
      us.failure(
        { status: n.status, message: n.message, code: us.failure.toString() },
        e.requestId
      )
    );
  }
}
function* Cvt(t, { payload: e }) {
  try {
    const n = !!e.team,
      r = Ft.getDeprecatedIsUnsharedLocalTeamTrialData();
    !r &&
      !n &&
      (yield* nSe(t), Ft.setDeprecatedIsUnsharedLocalTeamTrialData(!0)),
      r && n && Ft.setDeprecatedIsUnsharedLocalTeamTrialData(!1);
  } catch (n) {
    tt.exception("Cannot share local data during deactivate team trial", n);
  }
}
function* Avt(t, { meta: e }) {
  try {
    const n = yield* ln(us),
      r = [m8e, h8e, f8e, S8e, y8e, g8e, v8e, EQ];
    if (!(!!n.team && r.includes(n.account.user_type.toLowerCase()))) {
      yield* D(Ju.success(void 0, e.requestId));
      return;
    }
    const s = U2(n),
      i = RP(n);
    yield* Me(
      { context: t, fn: "deactivateTeamTrial" },
      n.account.user_id,
      s,
      i
    ),
      yield* nSe(t),
      Ft.setDeprecatedIsUnsharedLocalTeamTrialData(!0),
      yield* Me({ context: t.credentialsStorage, fn: "resetTeamKeySet" }),
      yield* Me({ context: t.auth, fn: "updateUserProfile" }),
      yield* D(Ju.success(void 0, e.requestId));
  } catch (n) {
    yield* D(
      Ju.failure(
        {
          message: (n == null ? void 0 : n.message) ?? "Unknown error",
          code: Ju.failure.toString(),
        },
        e.requestId
      )
    );
  }
}
function* nSe(t) {
  const e = yield* Pe(o5e);
  yield* ln(dv, { entities: e, targetState: f2 }), yield* D(ss(Dl(t)));
  const n = yield* Pe(ia);
  yield* D(Ru(ku(t, n)));
}
function* Ovt() {
  const t = yield* Pe(NP),
    e = yield* Pe(wQ);
  e &&
    Ft.wasDeprecatedSubscriptionExpired() &&
    Ft.removeDeprecatedSubscriptionExpired(),
    t === "TEAM_TRIAL_OWNER_AWAITING_DOWNGRADE" &&
      (yield* D(Ju.request(void 0)),
      e || Ft.setDeprecatedSubscriptionExpired());
}
function* Hvt(t, { meta: e, payload: n }) {
  try {
    const { password: r } = n;
    if (!(yield* Pe(Do))) {
      yield* D(
        cc.failure(
          { message: "There is no username", code: cc.failure.toString() },
          e.requestId
        )
      );
      return;
    }
    yield* sSe(t, r), yield* D(cc.success(void 0, e.requestId));
  } catch (r) {
    yield* D(
      cc.failure(
        {
          status: r.status,
          responseJSON: r.responseJSON,
          message: r.message,
          detail: r.detail,
          code: cc.failure.toString(),
        },
        e.requestId
      )
    );
  }
}
function* Nvt(t, { meta: e, payload: n }) {
  try {
    const { code: r, newPassword: a, authyToken: s } = n;
    if (!(yield* Pe(Do))) {
      yield* D(
        cc.failure(
          { message: "There is no username", code: cc.failure.toString() },
          e.requestId
        )
      );
      return;
    }
    yield* ln(T$, { securityToken: r, newPassword: a, authyToken: s }),
      yield* sSe(t, a),
      yield* D(Xb.success(void 0, e.requestId));
  } catch (r) {
    yield* D(
      Xb.failure(
        {
          status: r.status,
          responseJSON: r.responseJSON,
          code: Xb.failure.toString(),
        },
        e.requestId
      )
    );
  }
}
function* sSe(t, e) {
  const n = t.credentialsStorage.passwordRememberStatus(),
    r = yield* Me({ context: t.auth, fn: "updateUserProfile" });
  if (n === "remembered-without-sharing") {
    const { encryption_schema: c } = yield* Pe(I8e);
    yield* Me(
      { context: t, fn: "tryFixSharingSetup" },
      r.account.user_id,
      e,
      c
    );
  }
  const { token: a } = yield* Me({ context: t, fn: "getSecurityToken" }, e),
    { srp_salt: s, verifier: i } = yield* Me(
      { context: t, fn: "getSrpSpecs" },
      e
    ),
    o = { security_token: a, verifier: i, salt: s },
    u = yield* Pe(Lme),
    l = yield* Me({ context: t, fn: "migrateToNewCrypto" }, r, o, u);
  yield* jI(l == null ? void 0 : l.settingsChanges),
    yield* ln(us),
    yield* ln(ea),
    yield* ln($t, "sync-all-data");
}
function Rvt(t, e) {
  return zt(t, async (n) => {
    try {
      await e(n);
    } catch (r) {
      throw { status: r.status };
    }
  });
}
function* kvt(t, e, n) {
  try {
    if (!e && n && (yield* ln(f6))) {
      yield* D(RH());
      try {
        yield* ln(P$);
      } finally {
        yield* D(RH());
      }
    }
  } catch (r) {
    throw (yield* Me({ context: t.api, fn: "logout" }), r);
  }
}
function* xvt(t, { meta: e, payload: n }) {
  try {
    const r = yield* Me({ context: t, fn: "login" }, n),
      { bulk_account: a } = r,
      s = yield* Me(Lvt, t, n, r),
      i = qWe(a);
    yield* Me(kvt, t, !!n.isReLogin, i),
      yield* Me(
        { context: t, fn: "afterLogin" },
        { ...n, username: s, response: r }
      ),
      yield* D(Zr.success(r, e.requestId));
  } catch (r) {
    const a = $vt(r);
    yield* D(Zr.failure(a, e.requestId));
  }
}
function* Lvt(t, e, n) {
  const { username: r, wasDataCleaned: a } = yield* Me(Mvt, t, e, n);
  if (!a) {
    const { bulk_account: s } = n;
    yield* Me(Dvt, t, s);
  }
  return r;
}
function* Mvt(t, e, n) {
  const { bulk_account: r } = n,
    a = r.account.email,
    s = yield* Pe(Do);
  return e.isReLogin && s !== a
    ? (yield* Me({ context: t, fn: "clearUserData" }),
      t.auth.updateApiCredentials(n.credentials.token),
      { username: a, wasDataCleaned: !0 })
    : { username: a, wasDataCleaned: !1 };
}
function* Dvt(t, e) {
  if (!(yield* Pe(A8e))) return 2;
  const r = yield* Pe(Wv);
  if (r == null) return 1;
  const { team: s } = e;
  return s == null || s.id !== r
    ? (yield* Me({ context: t.store, fn: "hardDeleteSharedData" }), 0)
    : 1;
}
function* Gvt({ meta: t }) {
  try {
    yield* cu({
      dialog: "UnsyncedPersonalData",
      target: "all-windows",
      props: { requestId: t.requestId },
    });
  } catch {}
}
function* Fvt(t, { payload: e, meta: n }) {
  var r, a, s, i, o;
  try {
    const { oldPassword: u, newPassword: l, authyToken: c } = e,
      d = yield* ln(us),
      { encryption_schema: p } = HP(d);
    p === "v5"
      ? yield* Me(
          { context: t, fn: "changePasswordWithSecurityToken" },
          u,
          l,
          c
        )
      : yield* Me(
          { context: t, fn: "changePassword" },
          {
            userId: d.account.user_id,
            oldPassword: u,
            newPassword: l,
            authyToken: c,
          }
        ),
      yield* D(rf.success(void 0, n.requestId));
  } catch (u) {
    const { status: l, responseJSON: c } = u;
    let d;
    switch (l) {
      case 400:
        d =
          ((r = c == null ? void 0 : c.authy_token) == null ? void 0 : r[0]) ??
          ((a = c == null ? void 0 : c.old_password) == null ? void 0 : a[0]) ??
          ((s = c == null ? void 0 : c.new_password) == null ? void 0 : s[0]) ??
          ((i = c == null ? void 0 : c.error) == null ? void 0 : i[0]) ??
          "Unknown error";
        break;
      case 401:
      case 429:
        d = (c == null ? void 0 : c.detail) ?? "Unknown error";
        break;
      case 487:
        d =
          ((o = c == null ? void 0 : c.otp_token) == null ? void 0 : o[0]) ??
          "Unknown error";
        break;
      case 0:
        d = "Network error";
        break;
      default:
        d = "Unknown error";
    }
    yield* D(
      rf.failure(
        { status: l, message: d, code: rf.failure.toString() },
        n.requestId
      )
    );
  }
}
function* Uvt(t, { meta: e }) {
  try {
    const n = yield* ln(us),
      r = U2(n),
      a = RP(n),
      s = yield* Me(
        { context: t, fn: "getOnlySharedEntities" },
        n.account.user_id,
        r,
        a
      );
    yield* D(Yb.success(s, e.requestId));
  } catch {
    yield* D(Yb.failure({ code: Yb.failure.toString() }, e.requestId));
  }
}
function* Kvt() {
  yield* rSe(), yield* D(us.request());
}
function* rSe() {
  const t = yield* Pe(Oa);
  try {
    t && (yield* ln(Ag)), yield* ln(Cg);
    const e = yield* Pe(Qi);
    yield* D(uI(e)), yield* D(Vue());
  } catch (e) {
    tt.exception("Error during updating team info", e);
  }
}
function* GV() {
  yield* D($t.request("does-not-block-ui"));
}
function* Bvt(t, { payload: e }) {
  yield* Me({ context: t.store.teamMemberRepository, fn: "deleteAll" });
  try {
    for (const n of (e == null ? void 0 : e.results) ?? [])
      yield* Me({ context: t.store, fn: "setTeamMember" }, n);
  } catch (n) {
    tt.exception("Cannot update team members db collection", n);
  }
}
function* Vvt(t, { payload: e }) {
  yield* Me({ context: t.store.teamInviteRepository, fn: "deleteAll" });
  try {
    for (const n of (e == null ? void 0 : e.results) ?? [])
      yield* Me({ context: t.store, fn: "setTeamInvite" }, n);
  } catch (n) {
    tt.exception("Cannot update team invites db collection", n);
  }
}
function* jvt(t, { payload: e, meta: n }) {
  const { keepSepKeys: r } = e,
    a = yield* Me({ context: t.store, fn: "getAllSepKeys" });
  try {
    if (!r) {
      const i = a.map((o) => nme(t, o));
      yield* Me(() => Promise.all(i));
    }
    yield* Me({ context: t, fn: "logout" }), r && (yield* ln(Hy, a));
  } catch (i) {
    yield* D(y$(qn, i, n));
    return;
  }
  const s = a.length === 0 ? null : r;
  yield* D(qn.success({ keepSepKeys: s }, n.requestId));
}
function* zvt(t) {
  yield* Gn([
    $e(us.request, Ivt, t),
    $e(ak, Kvt),
    $e(ea.success, rSe),
    $e(us.success, Cvt, t),
    $e(Ju.request, Avt, t),
    $e([us.success, $t.success, Zr.success, Op], Ovt),
    $e(cc.request, Hvt, t),
    $e(Xb.request, Nvt, t),
    $e(qn.request, jvt, t),
    zt(U0, async (e) => {
      try {
        return await t.api.modifyTeam(e);
      } catch (n) {
        throw { status: n.status };
      }
    }),
    zt(JIe, function* (n) {
      n.createTeam && (yield* ln(lp, { teamName: n.teamName, invites: [] }));
      try {
        return yield* Me({ context: t.api, fn: "generateInvitationLink" });
      } catch (r) {
        throw { status: r.status };
      }
    }),
    zt(aO, async (e) => {
      var n, r;
      try {
        await t.api.enableTwoFactorAuth(e);
      } catch (a) {
        const { status: s, responseJSON: i } = a;
        switch (s) {
          case 400:
            throw {
              status: s,
              message:
                ((n = i == null ? void 0 : i.security_token) == null
                  ? void 0
                  : n[0]) ??
                ((r = i == null ? void 0 : i.error) == null ? void 0 : r[0]) ??
                "Unknown error",
            };
          case 401:
          case 429:
            throw {
              status: s,
              message: (i == null ? void 0 : i.detail) ?? "Unknown error",
            };
          case 487:
            throw {
              status: s,
              message: (i == null ? void 0 : i.otp_token[0]) ?? "Unknown error",
            };
          case 0:
            throw { status: s, message: "Network error" };
          default:
            throw { status: s, message: "Unknown error" };
        }
      }
    }),
    zt(iO, async (e) => {
      var n, r;
      try {
        await t.api.disableTwoFactorAuth(e);
      } catch (a) {
        const { status: s, responseJSON: i } = a;
        switch (s) {
          case 400:
            throw {
              status: s,
              message:
                ((n = i == null ? void 0 : i.security_token) == null
                  ? void 0
                  : n[0]) ??
                ((r = i == null ? void 0 : i.error) == null ? void 0 : r[0]) ??
                "Unknown error",
            };
          case 401:
          case 429:
            throw {
              status: s,
              message: (i == null ? void 0 : i.detail) ?? "Unknown error",
            };
          case 487:
            throw {
              status: s,
              message: (i == null ? void 0 : i.otp_token[0]) ?? "Unknown error",
            };
          case 0:
            throw { status: s, message: "Network error" };
          default:
            throw { status: s, message: "Unknown error" };
        }
      }
    }),
    $e(aO.success, GV),
    $e(iO.success, GV),
    zt(KIe, async (e) => {
      var n, r;
      try {
        await t.otpRegisterProviderAuthy(e);
      } catch (a) {
        const { status: s, responseJSON: i } = a;
        switch (s) {
          case 400:
            throw {
              status: s,
              message:
                ((n = i == null ? void 0 : i.cellphone) == null
                  ? void 0
                  : n[0]) ??
                ((r = i == null ? void 0 : i.error) == null ? void 0 : r[0]) ??
                "Unknown error",
            };
          case 401:
            throw {
              status: s,
              message: (i == null ? void 0 : i.detail) ?? "Unknown error",
            };
          case 0:
            throw { status: s, message: "Network error" };
          default:
            throw { status: s, message: "Unknown error" };
        }
      }
    }),
    zt(BIe, async () => {
      var e;
      try {
        return await t.otpRegisterProviderTotp();
      } catch (n) {
        const { status: r, responseJSON: a } = n;
        switch (r) {
          case 400:
            throw {
              status: r,
              message:
                ((e = a == null ? void 0 : a.error) == null ? void 0 : e[0]) ??
                "Unknown error",
            };
          case 401:
            throw {
              status: r,
              message: (a == null ? void 0 : a.detail) ?? "Unknown error",
            };
          case 0:
            throw { status: r, message: "Network error" };
          default:
            throw { status: r, message: "Unknown error" };
        }
      }
    }),
    zt(
      g$,
      function* ({
        email: n,
        password: r,
        recaptcha: a,
        rememberPassword: s,
        shouldSkipSyncAfterSignIn: i,
        emailVerificationCode: o,
      }) {
        try {
          yield* Me(
            { context: t, fn: "signUpFree" },
            { email: n, password: r, recaptcha: a, emailVerificationCode: o }
          );
        } catch (u) {
          throw R1(u);
        }
        yield* ln(Zr, {
          username: n,
          password: r,
          rememberPassword: s,
          shouldSkipSyncAfterSignIn: i,
          authMethod: "Email",
        });
      }
    ),
    zt(
      v$,
      function* ({
        email: n,
        password: r,
        recaptcha: a,
        rememberPassword: s,
        shouldSkipSyncAfterSignIn: i,
        emailVerificationCode: o,
      }) {
        try {
          yield* Me(
            { context: t, fn: "trialSignup" },
            { email: n, password: r, recaptcha: a, emailVerificationCode: o }
          );
        } catch (u) {
          throw R1(u);
        }
        yield* ln(Zr, {
          username: n,
          password: r,
          rememberPassword: s,
          shouldSkipSyncAfterSignIn: i,
          authMethod: "Email",
        });
      }
    ),
    zt(
      I$,
      function* ({
        firebaseToken: n,
        password: r,
        email: a,
        rememberPassword: s,
        authMethod: i,
      }) {
        try {
          yield* Me({ context: t, fn: "trialSignupViaSso" }, n, r);
        } catch (o) {
          throw R1(o);
        }
        yield* ln(Zr, {
          username: a,
          password: r,
          firebaseToken: n,
          rememberPassword: s,
          authMethod: i,
        });
      }
    ),
    $e(Zr.request, xvt, t),
    $e(P$.request, Gvt),
    $e(rf.request, Fvt, t),
    $e(Yb.request, Uvt, t),
    zt(b$, async ({ username: e, password: n, authyToken: r }) => {
      var a, s, i, o, u;
      try {
        return (
          await t.changeUsername(e, n, r),
          await t.settings.setDeprecatedUserHasSso(!1),
          e
        );
      } catch (l) {
        const { status: c, responseJSON: d } = l;
        let p;
        switch (c) {
          case 400:
            p =
              ((a = d == null ? void 0 : d.otp_token) == null
                ? void 0
                : a[0]) ??
              ((s = d == null ? void 0 : d.security_token) == null
                ? void 0
                : s[0]) ??
              ((i = d == null ? void 0 : d.email) == null ? void 0 : i[0]) ??
              ((o = d == null ? void 0 : d.error) == null ? void 0 : o[0]) ??
              "Unknown error";
            break;
          case 401:
          case 429:
            p = (d == null ? void 0 : d.detail) ?? "Unknown error";
            break;
          case 487:
            p =
              ((u = d == null ? void 0 : d.otp_token) == null
                ? void 0
                : u[0]) ?? "Unknown error";
            break;
          case 0:
            p = "Network error";
            break;
          default:
            p = "Unknown error";
        }
        throw { status: c, message: p };
      }
    }),
    zt(E$, async ({ password: e, authyToken: n }) => {
      var r, a, s, i, o;
      try {
        await t.deleteAccount(e, n);
      } catch (u) {
        const { status: l, responseJSON: c } = u;
        let d;
        switch (l) {
          case 400:
            d =
              ((r = c == null ? void 0 : c.otp_token) == null
                ? void 0
                : r[0]) ??
              ((a = c == null ? void 0 : c.security_token) == null
                ? void 0
                : a[0]) ??
              ((s = c == null ? void 0 : c.email) == null ? void 0 : s[0]) ??
              ((i = c == null ? void 0 : c.error) == null ? void 0 : i[0]) ??
              "Unknown error";
            break;
          case 401:
          case 429:
            d = (c == null ? void 0 : c.detail) ?? "Unknown error";
            break;
          case 487:
            d =
              ((o = c == null ? void 0 : c.otp_token) == null
                ? void 0
                : o[0]) ?? "Unknown error";
            break;
          case 0:
            d = "Network error";
            break;
          default:
            d = "Unknown error";
        }
        throw { status: l, message: d };
      }
    }),
    zt(T$, ({ securityToken: e, newPassword: n, authyToken: r }) =>
      t.recoverAccount({ verificationCode: e, newPassword: n, authyToken: r })
    ),
    Rvt(jIe, (e) => t.api.resetPassword({ username: e })),
    k1(w$, () => t.api.confirmEmail()),
    zt(zIe, async () => {
      var e;
      try {
        return await t.api.sendVerificationCode();
      } catch (n) {
        throw {
          detail: (e = n.responseJSON) == null ? void 0 : e.detail,
          status: n.status,
        };
      }
    }),
    k1($Ie, () => t.clearDB()),
    k1(WIe, function* () {
      Ft.removeLocalKeyIsReady(), Ft.removeLocalKeyVault();
      const n = yield* Pe(Do);
      yield* Me({ context: t, fn: "resetUserData" }),
        yield* Me({ context: t.settings, fn: "setDeprecatedUserStr" }, n);
    }),
    zt(lp, async ({ teamName: e, invites: n }) => {
      var r;
      try {
        await t.createTeamTrial(e, n);
        const a = await t.auth.updateUserProfile();
        await t.convertUserAccountToTeamType({ userId: a.account.user_id });
      } catch (a) {
        throw {
          status: a.status,
          inviteErrors: (r = a.responseJSON) == null ? void 0 : r.invites,
        };
      }
    }),
    zt(rk, async ({ email: e, role: n }) => {
      var r, a;
      try {
        await t.inviteTeamMember(e, n);
      } catch (s) {
        throw {
          status: s.status,
          team: (r = s.responseJSON) == null ? void 0 : r.team,
          email: (a = s.responseJSON) == null ? void 0 : a.email,
        };
      }
    }),
    zt(qIe, () => t.getTeamSeatsList()),
    zt(Cg, () => t.getTeamMembersList()),
    $e(Cg.success, Bvt, t),
    zt(Ag, () => t.getTeamInvitesList()),
    $e(Ag.success, Vvt, t),
    $e(o7.success, function* () {
      yield* D(ea.request());
    }),
    zt(YIe, () => t.getTeamMembersStaleEncryptionList()),
    zt(XIe, () => t.getStaleEncryptionDevicesList()),
    zt(UIe, async (e) => {
      var n, r, a;
      try {
        const { token: s } = await t.getSecurityToken(e);
        return s;
      } catch (s) {
        throw s instanceof lu
          ? { status: s.status, message: s.message }
          : {
              status: s.status,
              message:
                ((n = s.responseJSON) == null ? void 0 : n.detail) ??
                ((a = (r = s.responseJSON) == null ? void 0 : r.password) ==
                null
                  ? void 0
                  : a[0]),
            };
      }
    }),
    zt(VIe, async (e) => {
      var n;
      try {
        return await t.api.updateBillingInformation(e);
      } catch (r) {
        throw {
          detail: (n = r.responseJSON) == null ? void 0 : n.detail,
          status: r.status,
        };
      }
    }),
    zt(QIe, async (e) => {
      var n, r, a, s, i;
      try {
        return await t.api.detectSsoAction(e);
      } catch (o) {
        throw {
          status: o.status,
          message:
            ((n = o.responseJSON) == null ? void 0 : n.detail) ??
            ((a = (r = o.responseJSON) == null ? void 0 : r.firebase_token) ==
            null
              ? void 0
              : a[0]) ??
            ((i = (s = o.responseJSON) == null ? void 0 : s.apple_id_token) ==
            null
              ? void 0
              : i.error[0]),
        };
      }
    }),
    zt(o7, function* (n) {
      return yield* qvt(t, n);
    }),
    zt(eCe, async ({ email: e }) => {
      var n, r, a;
      try {
        return (await t.api.queryWhetherUserESSO({ email: e }))
          .has_enterprise_sso;
      } catch (s) {
        throw {
          status: s.status,
          message:
            ((n = s.responseJSON) == null ? void 0 : n.detail) ??
            ((a = (r = s.responseJSON) == null ? void 0 : r.email) == null
              ? void 0
              : a[0]),
        };
      }
    }),
    zt(tCe, async ({ email: e, recaptcha: n }) => {
      var r, a, s, i, o;
      try {
        return (
          await t.api.queryWhetherEmailIsAvailable({
            email: e,
            recaptcha: n || void 0,
          })
        ).is_available;
      } catch (u) {
        throw {
          status: u.status,
          message:
            ((r = u.responseJSON) == null ? void 0 : r.detail) ??
            ((s = (a = u.responseJSON) == null ? void 0 : a.email) == null
              ? void 0
              : s[0]) ??
            ((o = (i = u.responseJSON) == null ? void 0 : i.recaptcha) == null
              ? void 0
              : o[0]),
        };
      }
    }),
    zt(nCe, async ({ email: e, recaptcha: n }) => {
      var a, s, i, o;
      const r = await new Promise((u) => {
        yvt(
          {
            times: 2,
            interval: 1e3,
            errorFilter: (l) => [424, 409].includes(l.status),
          },
          async () =>
            t.api.sendEmailVerificationCode({
              email: e,
              recaptcha: n || void 0,
            }),
          (l) => {
            u(l ? Nn(l) : Ga(!0));
          }
        );
      });
      if (r.ok) return r.val;
      {
        const u = r.val.responseJSON;
        throw {
          status: r.val.status,
          message:
            (u == null ? void 0 : u.detail) ??
            ((a = u == null ? void 0 : u.error) == null ? void 0 : a[0]) ??
            ((s = u == null ? void 0 : u.email) == null ? void 0 : s[0]) ??
            ((i = u == null ? void 0 : u.code) == null ? void 0 : i[0]) ??
            ((o = u == null ? void 0 : u.recaptcha) == null ? void 0 : o[0]),
        };
      }
    }),
    zt(sCe, async ({ email: e, code: n }) => {
      var r, a, s, i, o;
      try {
        return (
          await t.api.queryWhetherEmailVerificationCodeIsValid({
            email: e,
            code: n,
          })
        ).is_available;
      } catch (u) {
        throw {
          status: u.status,
          message:
            ((r = u.responseJSON) == null ? void 0 : r.detail) ??
            ((s = (a = u.responseJSON) == null ? void 0 : a.error) == null
              ? void 0
              : s[0]) ??
            ((o = (i = u.responseJSON) == null ? void 0 : i.code) == null
              ? void 0
              : o[0]),
        };
      }
    }),
    $e([rCe, qn.success], Wvt),
  ]);
}
function R1(t) {
  return t instanceof Sv || t instanceof lu
    ? { status: t.status, message: t.message }
    : (t instanceof li && tt.exception(t.message, t),
      { status: 0, message: "Something went wrong, try again." });
}
function $vt(t) {
  if (t instanceof Sv) return { status: t.status, message: t.message };
  if (t && t.responseJSON) {
    const { status: e, responseJSON: n } = t,
      r = Tde(n);
    return { status: e, message: r };
  }
  return t instanceof lu
    ? { status: t.status, message: t.message }
    : t instanceof li
    ? (tt.exception(t.message, t),
      { status: 0, message: "Something went wrong, try again." })
    : { status: 0, message: "" };
}
function k1(t, e) {
  return zt(t, function* (r) {
    try {
      yield* Me(e, r);
    } catch {
      throw { message: `failed ${t.request.toString()}` };
    }
  });
}
function* Wvt() {
  yield* Gat([
    "ActivationIntoIdentity",
    "SignInScreen",
    "OTPFlowDialog",
    "LogOut",
  ]);
}
function* qvt(t, e) {
  try {
    const n = yield* Pe(qv);
    rn(n != null, "Team owner must have an id");
    const r = yield* Me(
      { context: t.synchronization.keyManager, fn: "grantAccessToVaults" },
      { ...e, ownerId: n }
    );
    if (r.err) {
      const a = r.val;
      return (
        tt.exception(a.message, a),
        a instanceof _r
          ? _r.networkError(a)
            ? Nn({ message: "Network error" })
            : Nn({
                message: a.statusText,
                status: a.status,
                payload: a.responseJSON,
              })
          : Nn(a)
      );
    }
    return r;
  } catch (n) {
    return Nn(n);
  }
}
function* Yvt(t) {
  yield* Gn([
    qft(t),
    Mmt(t),
    bft(t),
    Smt(t),
    vyt(t),
    Ert(t),
    zvt(t),
    Rmt(),
    Jft(t),
    Syt(t),
    yyt(),
    Rft(t),
    nmt(),
    hpt(t),
    OSt(t),
    emt(t),
    JSt(),
    cSt(t),
    bat(kat(), xrt(t.api)),
    kpt(t),
    hdt(t),
    oSt(t),
    Mat(),
    Zmt(),
    Rrt(t),
    uyt(),
    bpt(t),
    Bft(t),
    yield* yft(),
    Uht(),
    zpt(t.api),
    _gt(t),
    Jht(t),
    eSt(),
    aht(t.api),
  ]);
}
function* Xvt({ shouldSkipLogin: t }, e, n) {
  yield* mSt();
  const r = !e.settings.getDeprecatedUserStr();
  if (
    (yield* D(rw({ freePlan: r })),
    yield* D(
      JQ({
        lastSyncDate: e.settings.getDeprecatedLastSync(),
        syncKeysAndIdentities: e.settings.isSynchingKeys(),
      })
    ),
    m3 && (yield* D(_de())),
    yield* D(_5e()),
    yield* D(T2()),
    yield* Me(t_t),
    JO && (yield* Me(Ydt, e)),
    yield* D(du.request()),
    t)
  ) {
    yield* Me(Pf, !0, e, n);
    return;
  }
  const a = yield* ln(f6);
  if (
    !Ft.didUserSeeSuggestionToTryPremium() &&
    !e.settings.getDeprecatedUserStr() &&
    !a
  ) {
    tt.info("Show onboarding");
    try {
      Ft.isDeprecatedWelcomeScreenOpenedEventSend() ||
        (yield* D(OX()), Ft.setDeprecatedWelcomeScreenOpenedEventSend()),
        yield* ln(rJe, "WelcomeScreen"),
        yield* Me(Pf, !0, e, n);
    } catch {}
    yield* Me(XI, e);
    return;
  }
  Ft.setDeprecatedUserSentAcquisitionChannel();
  const i = yield* Pe(_i),
    { isRestored: o, isFreeUser: u } = yield* Me(
      { context: e, fn: "tryToRestoreUser" },
      i
    );
  yield* Me(Pf, o, e, n), o && !u && (yield* Me(n_t, e)), yield* r_t(o);
}
function* Qvt(t, e) {
  yield* Jr(Jvt, t, e), yield* Jr(vht, t), yield* Jr(ldt), yield* $e("*", s_t);
}
function* Jvt(t, e) {
  yield* $e(qn.success, e_t, t, e),
    yield* $e(Yoe, Pf, !1, t, e),
    yield* $e(Op, Zvt, t);
}
function* Zvt(t) {
  yield* D(T3(t.settings)), yield* Me(XI, t);
}
function* e_t(t, e) {
  yield* Me(Pf, !0, t, e),
    Ft.clearKnownHosts(),
    Ft.removeDeprecatedSubscriptionExpired(),
    yield* Me(XI, t);
}
function* t_t() {
  (yield* Me({ context: h_, fn: "isAvailable" }, "SHALLOW_CHECK")) &&
    (yield* D(Tse()));
}
function* Pf(t, e, n) {
  if (!t) {
    const r = yield* Pe(Do);
    r && ui.setProps({ isUserReLogin: !0 }),
      yield* D(s0(!1)),
      yield* Me(NH, n, {
        dialog: "SignInScreen",
        target: "all-windows",
        props: { initEmail: r ?? "" },
      });
  }
  yield* D(T3(e.settings)), yield* Me(XI, e), yield* D(s0(!0));
}
function* XI(t) {
  Ft.getLocalKeyIsReady() ||
    tt.exception(
      "Trying to refresh redux store while local key is not ready yet",
      new Error()
    );
  try {
    yield* D(ss(Dl(t)));
    const e = yield* Pe(ia);
    yield* D(Ru(ku(t, e)));
    const n = yield* Me(Sdt, t);
    yield* D(L3(n));
  } catch (e) {
    throw (tt.exception("Failed updating entries in redux", e), e);
  }
  yield* D(xi.request()), yield* D(qd.request()), yield* D(Xd.request());
}
async function n_t(t) {
  let e;
  try {
    (e = await t.auth.updateUserProfile()), tt.info("Updated user profile");
  } catch (n) {
    if (n.status === 401) {
      tt.info("Unauthorized user");
      return;
    }
    if (n.status == null) {
      tt.exception("Failed to update user profile", n);
      return;
    }
    tt.info(`Unable to update user profile: ${n.status}`);
    return;
  }
  try {
    await t.signedIn(e), tt.info("Signed in a remembered user");
  } catch (n) {
    tt.exception("Failed to signin a remembered user", n);
    return;
  }
  try {
    await t.api.updateDevice(Yc.toJSON());
  } catch (n) {
    if (n.status == null) {
      tt.exception("Failed to update user device", n);
      return;
    }
    tt.info(`Unable to update user device: ${n.status}`);
  }
}
function s_t(t) {
  tt.info(`got redux action: ${t.type}`);
}
function* r_t(t) {
  const e = yield* Pe(gSt, vSt),
    n = yield* Me(() => pv.invoke("wasAppOpenedWithDeeplink"));
  if (t && e && !n)
    try {
      const a = yield* ln(oJe),
        s = vQ();
      yield* D(
        Rh("promotionShown", {
          promotionLocation: "Vault Tab",
          promotionType: "What's New",
          sideMenuTeamTrialPromoType: void 0,
          trialDaysLeft: void 0,
        })
      ),
        yield* cu({
          dialog: "WhatsNewAnnouncementDialog",
          target: a,
          props: { platform: s },
          options: { closeOnBackdropClick: !1 },
        });
    } catch {}
}
DSe();
XQe();
function a_t() {
  return pv.sendSync("init-redux");
}
async function i_t() {
  tt.info("main has started");
  const t = Nve({ onError: JQe }),
    { persistedReducer: e, persistedSaga: n } = jst(),
    r = Sye({
      reducer: e,
      middleware: (d) => d({ serializableCheck: !1 }).concat(cJe(lJe), Oye, t),
      preloadedState: a_t(),
    });
  Hye(r);
  const a = async () => await S$(t, tJe),
    s = uJe(nJe(r.getState()));
  await CSe(s, { recursive: !0 });
  const i = new bYe(
    new D_e({
      base_url: Eue(),
      client_version: Yc.toJSON().app_version,
      platform: "Desktop",
      isSSLVerificationFailedCallback: a,
    }),
    new $Qe(a),
    jXe,
    new qQe(),
    r.dispatch,
    new eYe(s)
  );
  i.on(i.event_names.UNAUTHORIZED_401, () => {
    t.run(Pf, !1, i, t);
  }),
    i.on(i.event_names.FORBIDDEN_403, () => {
      bu(r.getState()) && r.dispatch(us.request());
    }),
    i.on(i.event_names.BLOCK_ACCESS, () => {
      NH(t, {
        dialog: "BlockAccess",
        target: "all-windows",
        props: {
          logout: !0,
          hasUnsyncedEntities: i.store.hasUnsyncedEntities(),
        },
      }).catch(Cf);
    }),
    await i.settings.initializeStorage(),
    t.run(QQe),
    t.run(TUe, {
      platform: CP,
      arch: ASe(),
      version: rT.getVersion(),
      installSource: nue,
      api: i,
    }),
    t.run(Yvt, i),
    t.run(Qvt, i, t),
    t.run(n),
    lge(r),
    await i.testSystemKeychain(),
    await i.migrateKeychainFromWebsiteToMAS(),
    QWe();
  const o = Ft.getLocalKeyIsReady(),
    u = await i.getLocalKey(),
    l = Ft.getLocalKey();
  tt.info("localKey metadata", dJe(u, o, l, i.systemHasKeychain)),
    r.dispatch(T3(i.settings)),
    t.run(o_t, i.settings);
  let c = !1;
  if (!u && o) {
    await i.store.init(),
      tt.info("Decryption key not found, open error dialog"),
      NH(t, {
        dialog: "DecryptionKeyNotFoundDialog",
        target: "all-windows",
        props: {},
      }).catch(Cf);
    const { meta: d } = await UU(t, Sb.request);
    try {
      await i.init(), r.dispatch(Sb.success(void 0, d.requestId));
    } catch (m) {
      throw (
        (r.dispatch(Sb.failure({ code: Sb.failure.toString() }, d.requestId)),
        m)
      );
    }
    const { payload: p } = await UU(t, aJe);
    c = p;
  } else await i.init();
  tt.info("Application started"), t.run(Xvt, { shouldSkipLogin: c }, i, t);
}
function* o_t(t) {
  var r;
  if (!(t.getDeprecatedUserStr() && !t.getDeprecatedUserId())) return;
  const n = yield* Zs(({ type: a, payload: s }) => {
    var i;
    return (
      (a === fl.toString() &&
        !!((i = s == null ? void 0 : s.account) != null && i.user_id)) ||
      a === qn.success.toString()
    );
  });
  fl.match(n) &&
    (yield* Me(
      { context: t, fn: "setDeprecatedUserId" },
      ((r = n.payload.account) == null ? void 0 : r.user_id) ?? null
    ));
}
i_t().then(
  () => tt.info("main has finished"),
  (t) => tt.exception("Cannot start the application", t)
);
export { Fj as a, sl as c, Lo as g, vi as l };
//# sourceMappingURL=main-1ce5c47f.js.map
